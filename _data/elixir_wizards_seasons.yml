---
Season 3:
- title: Season Three Wrap and Remote Work Tips
  slug: s3e19-season-wrap
  link: https://smartlogic.io/podcast/elixir-wizards/s3e19-season-wrap
  guid: 36812119-eef7-40f5-8aba-3fd7b3bebb09
  pubDate: Thu, 02 Apr 2020 06:00:00 -0400
  pubDateFriendly: April  2, 2020
  description: "In this episode, we take a look into the current contexts and home
    lives many of us find ourselves in today, offering top tips for working remotely
    from home during these challenging times. The lockdowns have caused many of us
    to reflect. To reflect on our lives, our work, what we’re grateful for, and in
    this case, our epic last season of Elixir Wizards! Here, we take you through the
    highlights, the lowlights, our biggest lessons, our juiciest debates, and what
    you can expect for Season 4 – in sickness and in health. Stay safe, listen, and
    enjoy!\nKey Points from This Episode:\nThe importance of demarcating your workspace,
    especially when the kids are home!\nAlways put your pants on: Why sticking to
    your morning schedule helps productivity.\nWays to eliminate the potential for
    distraction when working from home.\nHow working from home is enabling programmers
    to see one another’s human side.\nTaking a break from conferences, cognition,
    and learning how to birth a baby Oestrich.\nThird dimensions and entering the
    tangential learning plane with Brooklyn Zelenka.\nThe Surprise Toddcast: Why the
    improvised episode was a hit.\nWhat it was like interviewing entrepreneurial couple,
    Bruce & Maggie Tate.\nRemember the time the father and son roasted each other
    on the podcast mic?\nWhy your podcast audience wants to know your guests on a
    more personal level.\nA recap of the numbers from Season 1-3 and the 40,000+ Elixir
    Wizards downloads.\nA sneak peek into the new Elixir Wizards theme for the upcoming
    Season 4.\nLib versus Web and other essential tips for the lazy Phoenix users
    out there.\nWhy we need a whole season on application architecture and one-letter
    module names.\nThe debate sparked by the disagreement between Chris Keathley and
    Brooklyn Zelenka.\nHackers, painters, Paul Graham, and the argument made in favor
    of dynamic typing.\nFind out more about Sophie and Meryl’s epic takeover of Elixir
    Wizards!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nEric Oestrich — https://twitter.com/ericoestrich?lang=en\nJustus Eapen — https://twitter.com/justuseapen\nBrooklyn
    Zelenka on Witchcraft — https://podcast.smartlogic.io/season-two-zelenka\nBrooklyn
    Zelenka — https://twitter.com/expede?lang=en\nBruce and Maggie Tate from Groxio
    on Training — https://podcast.smartlogic.io/s3e8-groxio\nSaša Jurić — https://twitter.com/sasajuric\nBonus
    Toddcast & Lonestar Preview — https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\nThe
    Lonestar Lunchisode — https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\nDave
    Thomas — https://www.davethomas.net/talks_index.html\nBonus Episode: Outlaws and
    The Wizards — https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\nChris
    Keathley — https://twitter.com/ChrisKeathley\nPaul Graham — http://www.paulgraham.com/\nSean
    Lewis from Divvy on Performance, Hiring and Training — https://podcast.smartlogic.io/s3e12-divvy\nDevin
    C. Estes — https://twitter.com/devoncestes?lang=en\nMuzak — https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang
    Special Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+m8r0rcT6
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/36812119-eef7-40f5-8aba-3fd7b3bebb09.mp3
    length: '73896690'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Todd Resudek joins us to take a look into the current contexts and home
      lives many of us find ourselves in today, offering top tips for working remotely
      from home during these challenging times. The lockdowns have forced many of
      us to reflect. To reflect on our lives, our work, what we’re grateful for, and
      in this case, our epic last season of Elixir Wizards!
    duration: '50:45'
    explicit: 'no'
    keywords: elixir,phoenix,erlang
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/36812119-eef7-40f5-8aba-3fd7b3bebb09/cover.jpg?v=2
    summary: "\n        <p>In this episode, we take a look into the current contexts
      and home lives many of us find ourselves in today, offering top tips for working
      remotely from home during these challenging times. The lockdowns have caused
      many of us to reflect. To reflect on our lives, our work, what we’re grateful
      for, and in this case, our epic last season of Elixir Wizards! Here, we take
      you through the highlights, the lowlights, our biggest lessons, our juiciest
      debates, and what you can expect for Season 4 – in sickness and in health. Stay
      safe, listen, and enjoy!</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>The
      importance of demarcating your workspace, especially when the kids are home!</li>\n<li>Always
      put your pants on: Why sticking to your morning schedule helps productivity.</li>\n<li>Ways
      to eliminate the potential for distraction when working from home.</li>\n<li>How
      working from home is enabling programmers to see one another’s human side.</li>\n<li>Taking
      a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>\n<li>Third
      dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>\n<li>The
      Surprise Toddcast: Why the improvised episode was a hit.</li>\n<li>What it was
      like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>\n<li>Remember
      the time the father and son roasted each other on the podcast mic?</li>\n<li>Why
      your podcast audience wants to know your guests on a more personal level.</li>\n<li>A
      recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>\n<li>A
      sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>\n<li>Lib
      versus Web and other essential tips for the lazy Phoenix users out there.</li>\n<li>Why
      we need a whole season on application architecture and one-letter module names.</li>\n<li>The
      debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>\n<li>Hackers,
      painters, Paul Graham, and the argument made in favor of dynamic typing.</li>\n<li>Find
      out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Oestrich — <a href=\"https://twitter.com/ericoestrich?lang=en\"
      rel=\"nofollow\">https://twitter.com/ericoestrich?lang=en</a><br>\nJustus Eapen
      — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nBrooklyn
      Zelenka on Witchcraft — <a href=\"https://podcast.smartlogic.io/season-two-zelenka\"
      rel=\"nofollow\">https://podcast.smartlogic.io/season-two-zelenka</a><br>\nBrooklyn
      Zelenka — <a href=\"https://twitter.com/expede?lang=en\" rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nBruce
      and Maggie Tate from Groxio on Training — <a href=\"https://podcast.smartlogic.io/s3e8-groxio\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e8-groxio</a><br>\nSaša Jurić
      — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nBonus
      Toddcast &amp; Lonestar Preview — <a href=\"https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>\nThe
      Lonestar Lunchisode — <a href=\"https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>\nDave
      Thomas — <a href=\"https://www.davethomas.net/talks_index.html\" rel=\"nofollow\">https://www.davethomas.net/talks_index.html</a><br>\nBonus
      Episode: Outlaws and The Wizards — <a href=\"https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>\nChris
      Keathley — <a href=\"https://twitter.com/ChrisKeathley\" rel=\"nofollow\">https://twitter.com/ChrisKeathley</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nSean
      Lewis from Divvy on Performance, Hiring and Training — <a href=\"https://podcast.smartlogic.io/s3e12-divvy\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e12-divvy</a><br>\nDevin C.
      Estes — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nMuzak
      — <a href=\"https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang\"
      rel=\"nofollow\">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>In this episode, we take a look into the current contexts
    and home lives many of us find ourselves in today, offering top tips for working
    remotely from home during these challenging times. The lockdowns have caused many
    of us to reflect. To reflect on our lives, our work, what we’re grateful for,
    and in this case, our epic last season of Elixir Wizards! Here, we take you through
    the highlights, the lowlights, our biggest lessons, our juiciest debates, and
    what you can expect for Season 4 – in sickness and in health. Stay safe, listen,
    and enjoy!</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>The importance
    of demarcating your workspace, especially when the kids are home!</li>\n<li>Always
    put your pants on: Why sticking to your morning schedule helps productivity.</li>\n<li>Ways
    to eliminate the potential for distraction when working from home.</li>\n<li>How
    working from home is enabling programmers to see one another’s human side.</li>\n<li>Taking
    a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>\n<li>Third
    dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>\n<li>The
    Surprise Toddcast: Why the improvised episode was a hit.</li>\n<li>What it was
    like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>\n<li>Remember
    the time the father and son roasted each other on the podcast mic?</li>\n<li>Why
    your podcast audience wants to know your guests on a more personal level.</li>\n<li>A
    recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>\n<li>A
    sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>\n<li>Lib
    versus Web and other essential tips for the lazy Phoenix users out there.</li>\n<li>Why
    we need a whole season on application architecture and one-letter module names.</li>\n<li>The
    debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>\n<li>Hackers,
    painters, Paul Graham, and the argument made in favor of dynamic typing.</li>\n<li>Find
    out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Oestrich — <a href=\"https://twitter.com/ericoestrich?lang=en\"
    rel=\"nofollow\">https://twitter.com/ericoestrich?lang=en</a><br>\nJustus Eapen
    — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nBrooklyn
    Zelenka on Witchcraft — <a href=\"https://podcast.smartlogic.io/season-two-zelenka\"
    rel=\"nofollow\">https://podcast.smartlogic.io/season-two-zelenka</a><br>\nBrooklyn
    Zelenka — <a href=\"https://twitter.com/expede?lang=en\" rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nBruce
    and Maggie Tate from Groxio on Training — <a href=\"https://podcast.smartlogic.io/s3e8-groxio\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e8-groxio</a><br>\nSaša Jurić
    — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nBonus
    Toddcast &amp; Lonestar Preview — <a href=\"https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>\nThe
    Lonestar Lunchisode — <a href=\"https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>\nDave
    Thomas — <a href=\"https://www.davethomas.net/talks_index.html\" rel=\"nofollow\">https://www.davethomas.net/talks_index.html</a><br>\nBonus
    Episode: Outlaws and The Wizards — <a href=\"https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>\nChris
    Keathley — <a href=\"https://twitter.com/ChrisKeathley\" rel=\"nofollow\">https://twitter.com/ChrisKeathley</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nSean
    Lewis from Divvy on Performance, Hiring and Training — <a href=\"https://podcast.smartlogic.io/s3e12-divvy\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e12-divvy</a><br>\nDevin C. Estes
    — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nMuzak
    — <a href=\"https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang\"
    rel=\"nofollow\">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: 'Sophie and Meryl Takeover: Sean Callan and Steven Nunez on Elixir Education'
  slug: s3e18-nunez-callan
  link: https://smartlogic.io/podcast/elixir-wizards/s3e18-nunez-callan
  guid: 19db794e-cf88-4320-969b-ea0ccbe0949d
  pubDate: Thu, 26 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 26, 2020
  description: "Welcome to another extra special episode of Elixir Wizards! We have
    guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and
    they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan,
    creator of Elixir School, to the show. Where some would see the fact that Elixir
    doesn’t have a ton of readily available answers out there as a restriction to
    mastering the language, our guests argue that this is the best educational environment.
    Writing about challenges and teaching others how you overcame them are some of
    the best ways to learn. We also discuss concurrency and other contrasts with prominent
    languages. Our guests weigh in on dealing with students and how far enthusiasm
    and openness can go in helping inspire other minds. Steven stresses the need for
    greater resources, especially at a beginner level, as this will lower the barrier
    to entry for new programmers and ultimately benefit the entire Elixir community.\nKey
    Points From This Episode:\nAn introduction to Sean and Steven, their work and
    experience with Elixir. \nWork and professional horoscopes for the panel of today's
    podcast!\nThe accidental path that led Sean to Elixir and the translations that
    affirmed his work.\nThe use of writing and blogging in your own education; teaching
    is learning twice!\nSteven's early attraction to Elixir and the obsession and
    evangelism that followed. \nConcurrency visibility and differences between Elixir
    and other languages.\nDifferent tracks for learning; coming into Elixir as a beginner
    or as someone with experience. \nThe evolution of thought around education and
    things that have changed at Elixir School. \nLearning that includes reasons why;
    you don't know what you don't know! \nKnowing your students and keeping them excited
    to maintain a passion for learning. \nGrowing confidence and the benefits of great
    resources for the spread of increasing skills.  \nScratching your own itch; write
    the educational information that you cannot find yourself.\nOur guest's Elixir
    wish lists; more learning opportunities, widespread adoption and beginner-friendly
    content.  \nRequests about Elixir from our guests, a few plugs and how to connect
    with them!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nSophie DeBenedetto — https://twitter.com/smdebenedetto\nMeryl Dakin — https://twitter.com/meryldakin\nSteven
    Nunez — https://twitter.com/stevennunez\nSean Callan — https://twitter.com/doomspork\nSystem
    76 — https://system76.com/\nFlatiron — https://flatironschool.com/\nElixir School
    — https://elixirschool.com\nGitHub — https://github.com/\nErlang — https://www.erlang.org/\nPhoenix
    — https://www.phoenixframework.org/\nKubernetes — https://kubernetes.io/\nThe
    Developer's Guide to Content Creation — https://www.developersguidetocontent.com/\nStephanie
    Morillo — https://www.stephaniemorillo.co/\nElixir and The Beam: How Concurrency
    Really Works https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/
    Special Guests: Sean Callan and Steven Nunez.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+8UOYjwBG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/19db794e-cf88-4320-969b-ea0ccbe0949d.mp3
    length: '78565642'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Today we have special guest hosts: Meryl Dakin of Frame.io and Sophie
      DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the
      Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where
      some would see the fact that Elixir doesn’t have a ton of readily available
      answers out there as a restriction to mastering the language, our guests argue
      that this is the best educational environment.'
    duration: '53:54'
    explicit: 'no'
    keywords: elixir,phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/19db794e-cf88-4320-969b-ea0ccbe0949d/cover.jpg?v=2
    summary: "\n        <p>Welcome to another extra special episode of Elixir Wizards!
      We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of
      Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School,
      and Sean Callan, creator of Elixir School, to the show. Where some would see
      the fact that Elixir doesn’t have a ton of readily available answers out there
      as a restriction to mastering the language, our guests argue that this is the
      best educational environment. Writing about challenges and teaching others how
      you overcame them are some of the best ways to learn. We also discuss concurrency
      and other contrasts with prominent languages. Our guests weigh in on dealing
      with students and how far enthusiasm and openness can go in helping inspire
      other minds. Steven stresses the need for greater resources, especially at a
      beginner level, as this will lower the barrier to entry for new programmers
      and ultimately benefit the entire Elixir community.</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>An introduction to Sean and Steven, their work
      and experience with Elixir. </li>\n<li>Work and professional horoscopes for
      the panel of today&#39;s podcast!</li>\n<li>The accidental path that led Sean
      to Elixir and the translations that affirmed his work.</li>\n<li>The use of
      writing and blogging in your own education; teaching is learning twice!</li>\n<li>Steven&#39;s
      early attraction to Elixir and the obsession and evangelism that followed. </li>\n<li>Concurrency
      visibility and differences between Elixir and other languages.</li>\n<li>Different
      tracks for learning; coming into Elixir as a beginner or as someone with experience.
      </li>\n<li>The evolution of thought around education and things that have changed
      at Elixir School. </li>\n<li>Learning that includes reasons why; you don&#39;t
      know what you don&#39;t know! </li>\n<li>Knowing your students and keeping them
      excited to maintain a passion for learning. </li>\n<li>Growing confidence and
      the benefits of great resources for the spread of increasing skills.<br></li>\n<li>Scratching
      your own itch; write the educational information that you cannot find yourself.</li>\n<li>Our
      guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption
      and beginner-friendly content.<br></li>\n<li>Requests about Elixir from our
      guests, a few plugs and how to connect with them!</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSophie DeBenedetto — <a href=\"https://twitter.com/sm_debenedetto\"
      rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl Dakin — <a
      href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nSteven
      Nunez — <a href=\"https://twitter.com/_stevennunez\" rel=\"nofollow\">https://twitter.com/_stevennunez</a><br>\nSean
      Callan — <a href=\"https://twitter.com/doomspork\" rel=\"nofollow\">https://twitter.com/doomspork</a><br>\nSystem
      76 — <a href=\"https://system76.com/\" rel=\"nofollow\">https://system76.com/</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com\" rel=\"nofollow\">https://elixirschool.com</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nPhoenix
      — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nThe
      Developer&#39;s Guide to Content Creation — <a href=\"https://www.developersguidetocontent.com/\"
      rel=\"nofollow\">https://www.developersguidetocontent.com/</a><br>\nStephanie
      Morillo — <a href=\"https://www.stephaniemorillo.co/\" rel=\"nofollow\">https://www.stephaniemorillo.co/</a><br>\nElixir
      and The Beam: How Concurrency Really Works <a href=\"https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/\"
      rel=\"nofollow\">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special
      Guests: Sean Callan and Steven Nunez.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another extra special episode of Elixir
    Wizards! We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto
    of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School,
    and Sean Callan, creator of Elixir School, to the show. Where some would see the
    fact that Elixir doesn’t have a ton of readily available answers out there as
    a restriction to mastering the language, our guests argue that this is the best
    educational environment. Writing about challenges and teaching others how you
    overcame them are some of the best ways to learn. We also discuss concurrency
    and other contrasts with prominent languages. Our guests weigh in on dealing with
    students and how far enthusiasm and openness can go in helping inspire other minds.
    Steven stresses the need for greater resources, especially at a beginner level,
    as this will lower the barrier to entry for new programmers and ultimately benefit
    the entire Elixir community.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>An
    introduction to Sean and Steven, their work and experience with Elixir. </li>\n<li>Work
    and professional horoscopes for the panel of today&#39;s podcast!</li>\n<li>The
    accidental path that led Sean to Elixir and the translations that affirmed his
    work.</li>\n<li>The use of writing and blogging in your own education; teaching
    is learning twice!</li>\n<li>Steven&#39;s early attraction to Elixir and the obsession
    and evangelism that followed. </li>\n<li>Concurrency visibility and differences
    between Elixir and other languages.</li>\n<li>Different tracks for learning; coming
    into Elixir as a beginner or as someone with experience. </li>\n<li>The evolution
    of thought around education and things that have changed at Elixir School. </li>\n<li>Learning
    that includes reasons why; you don&#39;t know what you don&#39;t know! </li>\n<li>Knowing
    your students and keeping them excited to maintain a passion for learning. </li>\n<li>Growing
    confidence and the benefits of great resources for the spread of increasing skills.<br></li>\n<li>Scratching
    your own itch; write the educational information that you cannot find yourself.</li>\n<li>Our
    guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption
    and beginner-friendly content.<br></li>\n<li>Requests about Elixir from our guests,
    a few plugs and how to connect with them!</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSophie DeBenedetto — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
    Dakin — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nSteven
    Nunez — <a href=\"https://twitter.com/_stevennunez\" rel=\"nofollow\">https://twitter.com/_stevennunez</a><br>\nSean
    Callan — <a href=\"https://twitter.com/doomspork\" rel=\"nofollow\">https://twitter.com/doomspork</a><br>\nSystem
    76 — <a href=\"https://system76.com/\" rel=\"nofollow\">https://system76.com/</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com\" rel=\"nofollow\">https://elixirschool.com</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nPhoenix
    — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nThe
    Developer&#39;s Guide to Content Creation — <a href=\"https://www.developersguidetocontent.com/\"
    rel=\"nofollow\">https://www.developersguidetocontent.com/</a><br>\nStephanie
    Morillo — <a href=\"https://www.stephaniemorillo.co/\" rel=\"nofollow\">https://www.stephaniemorillo.co/</a><br>\nElixir
    and The Beam: How Concurrency Really Works <a href=\"https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/\"
    rel=\"nofollow\">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special
    Guests: Sean Callan and Steven Nunez.</p>\n      "
- title: Saša Jurić on Training
  slug: s3e17-juric
  link: https://smartlogic.io/podcast/elixir-wizards/s3e17-juric
  guid: 75204e87-33b5-4a39-833c-d2a7f5ae1931
  pubDate: Thu, 19 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 19, 2020
  description: "Saša Jurić is a household name in the Elixir and Erlang space and
    we are so glad to finally welcome him on to the show today! Author of Elixir in
    Action, Saša is here to discuss training and his thoughts on getting a team up
    to speed with regards to testing and beyond. We hear from our guest about his
    discovery of Elixir, his uncharacteristic early adoption of the language, and
    why he chose it. From there, Saša talks a bit about his book, the opportunity
    that arose for him to write it after Manning approached him and how he views its
    place among other prominent pieces of literature on the subject. We discuss early
    steps in the process of learning Elixir for new programmers and old, and Saša
    weighs in on when it might be a good idea to put in the effort. We also get to
    hear about very big things, where Saša works and the central work and services
    of the agency. The last part of our conversation is spent on more technical aspects
    of Saša's work, his approach to coding in general and then approaches to testing
    and the training side of this. Join us today for this great conversation!\nKey
    Points From This Episode:\nSaša's discovery of Elixir and his first experiences
    of the language.\nA lucky opportunity to write a book that presented itself to
    Saša!\nThe complementary nature of Elixir in Action; reading it in conjunction
    with other books.   \nIdeas on how to introduce the concepts of Elixir to new
    programmers and the unfamiliar. \nThe effort needed in order to understand and
    adopt the new paradigm of Elixir.\nSaša's work at very big things and the services
    that the agency offers.\nThe most useful idioms that Saša uses and the modes
    of operation at that agency. \nSaša's use of Dialyzer for debugging despite its
    imperfections.\nThe exploratory nature of good coding and finding solutions as
    you go. \nHelper libraries and comparing functions from Saša's own one!\nTraining
    for unit, feature and integration testing; Saša's approach for his team.\nDifferentiating
    between the different types of testing and the importance of naming. \nClarifying
    Saša's philosophy on testing and his understanding of the term 'unit'. \nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nSaša Jurić
    on Twitter — https://twitter.com/sasajuric\nThe Erlangerist — https://www.theerlangelist.com/\nElixir
    in Action — https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a
    - use special code podexwizards20 for 40% off your purchase at Manning Publications!\nMichael
    Stevens — https://www.linkedin.com/in/michaelstephens2\nManning — https://www.manning.com/\nProgramming
    Elixir — https://pragprog.com/book/elixir16/programming-elixir-1-6\nLearn Functional
    Programming with Elixir — https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\nvery
    big things — https://verybigthings.com/\nDialyzer — https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\nHackers
    & Painters — http://shop.oreilly.com/product/9780596006624.do\nPaul Graham — http://www.paulgraham.com/\nJustin
    Searls Blog - https://blog.testdouble.com/\nMarie Kondo — https://konmari.com/\n
    Special Guest: Saša Jurić.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+AhSmdJ4b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/75204e87-33b5-4a39-833c-d2a7f5ae1931.mp3
    length: '74231314'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Saša Jurić is a household name in the Elixir and Erlang space and
      we are so glad to finally welcome him on to the show today! Author of Elixir
      in Action, Saša is here to discuss training and his thoughts on getting a team
      up to speed with regards to testing and beyond. '
    duration: '51:01'
    explicit: 'no'
    keywords: elixir, phoenix, erlang
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/75204e87-33b5-4a39-833c-d2a7f5ae1931/cover.jpg?v=2
    summary: "\n        <p>Saša Jurić is a household name in the Elixir and Erlang
      space and we are so glad to finally welcome him on to the show today! Author
      of Elixir in Action, Saša is here to discuss training and his thoughts on getting
      a team up to speed with regards to testing and beyond. We hear from our guest
      about his discovery of Elixir, his uncharacteristic early adoption of the language,
      and why he chose it. From there, Saša talks a bit about his book, the opportunity
      that arose for him to write it after Manning approached him and how he views
      its place among other prominent pieces of literature on the subject. We discuss
      early steps in the process of learning Elixir for new programmers and old, and
      Saša weighs in on when it might be a good idea to put in the effort. We also
      get to hear about very big things, where Saša works and the central work and
      services of the agency. The last part of our conversation is spent on more technical
      aspects of Saša&#39;s work, his approach to coding in general and then approaches
      to testing and the training side of this. Join us today for this great conversation!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Saša&#39;s discovery of Elixir and
      his first experiences of the language.</li>\n<li>A lucky opportunity to write
      a book that presented itself to Saša!</li>\n<li>The complementary nature of
      Elixir in Action; reading it in conjunction with other books.<br></li>\n<li>Ideas
      on how to introduce the concepts of Elixir to new programmers and the unfamiliar.
      </li>\n<li>The effort needed in order to understand and adopt the new paradigm
      of Elixir.</li>\n<li>Saša&#39;s work at very big things and the services that
      the agency offers.</li>\n<li>The most useful idioms that Saša uses and the
      modes of operation at that agency. </li>\n<li>Saša&#39;s use of Dialyzer for
      debugging despite its imperfections.</li>\n<li>The exploratory nature of good
      coding and finding solutions as you go. </li>\n<li>Helper libraries and comparing
      functions from Saša&#39;s own one!</li>\n<li>Training for unit, feature and
      integration testing; Saša&#39;s approach for his team.</li>\n<li>Differentiating
      between the different types of testing and the importance of naming. </li>\n<li>Clarifying
      Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSaša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nThe
      Erlangerist — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nElixir
      in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a>
      - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>\nMichael
      Stevens — <a href=\"https://www.linkedin.com/in/michaelstephens2\" rel=\"nofollow\">https://www.linkedin.com/in/michaelstephens2</a><br>\nManning
      — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\nProgramming
      Elixir — <a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
      rel=\"nofollow\">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>\nLearn
      Functional Programming with Elixir — <a href=\"https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\"
      rel=\"nofollow\">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>\nvery
      big things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nDialyzer
      — <a href=\"https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\" rel=\"nofollow\">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>\nHackers
      &amp; Painters — <a href=\"http://shop.oreilly.com/product/9780596006624.do\"
      rel=\"nofollow\">http://shop.oreilly.com/product/9780596006624.do</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nJustin
      Searls Blog - <a href=\"https://blog.testdouble.com/\" rel=\"nofollow\">https://blog.testdouble.com/</a><br>\nMarie
      Kondo — <a href=\"https://konmari.com/\" rel=\"nofollow\">https://konmari.com/</a></p><p>Special
      Guest: Saša Jurić.</p>\n      "
  contentEncoded: "\n        <p>Saša Jurić is a household name in the Elixir and
    Erlang space and we are so glad to finally welcome him on to the show today! Author
    of Elixir in Action, Saša is here to discuss training and his thoughts on getting
    a team up to speed with regards to testing and beyond. We hear from our guest
    about his discovery of Elixir, his uncharacteristic early adoption of the language,
    and why he chose it. From there, Saša talks a bit about his book, the opportunity
    that arose for him to write it after Manning approached him and how he views its
    place among other prominent pieces of literature on the subject. We discuss early
    steps in the process of learning Elixir for new programmers and old, and Saša
    weighs in on when it might be a good idea to put in the effort. We also get to
    hear about very big things, where Saša works and the central work and services
    of the agency. The last part of our conversation is spent on more technical aspects
    of Saša&#39;s work, his approach to coding in general and then approaches to testing
    and the training side of this. Join us today for this great conversation!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Saša&#39;s discovery of Elixir and
    his first experiences of the language.</li>\n<li>A lucky opportunity to write
    a book that presented itself to Saša!</li>\n<li>The complementary nature of Elixir
    in Action; reading it in conjunction with other books.<br></li>\n<li>Ideas on
    how to introduce the concepts of Elixir to new programmers and the unfamiliar.
    </li>\n<li>The effort needed in order to understand and adopt the new paradigm
    of Elixir.</li>\n<li>Saša&#39;s work at very big things and the services that
    the agency offers.</li>\n<li>The most useful idioms that Saša uses and the modes
    of operation at that agency. </li>\n<li>Saša&#39;s use of Dialyzer for debugging
    despite its imperfections.</li>\n<li>The exploratory nature of good coding and
    finding solutions as you go. </li>\n<li>Helper libraries and comparing functions
    from Saša&#39;s own one!</li>\n<li>Training for unit, feature and integration
    testing; Saša&#39;s approach for his team.</li>\n<li>Differentiating between
    the different types of testing and the importance of naming. </li>\n<li>Clarifying
    Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;.
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic —
    <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSaša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nThe
    Erlangerist — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nElixir
    in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a>
    - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>\nMichael
    Stevens — <a href=\"https://www.linkedin.com/in/michaelstephens2\" rel=\"nofollow\">https://www.linkedin.com/in/michaelstephens2</a><br>\nManning
    — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\nProgramming
    Elixir — <a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
    rel=\"nofollow\">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>\nLearn
    Functional Programming with Elixir — <a href=\"https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\"
    rel=\"nofollow\">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>\nvery
    big things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nDialyzer
    — <a href=\"https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\" rel=\"nofollow\">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>\nHackers
    &amp; Painters — <a href=\"http://shop.oreilly.com/product/9780596006624.do\"
    rel=\"nofollow\">http://shop.oreilly.com/product/9780596006624.do</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nJustin
    Searls Blog - <a href=\"https://blog.testdouble.com/\" rel=\"nofollow\">https://blog.testdouble.com/</a><br>\nMarie
    Kondo — <a href=\"https://konmari.com/\" rel=\"nofollow\">https://konmari.com/</a></p><p>Special
    Guest: Saša Jurić.</p>\n      "
- title: 'Bonus Episode: Outlaws and Wizards'
  slug: s3-bonus-outlaws-and-wizards
  link: https://smartlogic.io/podcast/elixir-wizards/s3-bonus-outlaws-and-wizards
  guid: dbe0827c-2449-477d-bb59-3a189d039ad0
  pubDate: Fri, 13 Mar 2020 12:00:00 -0400
  pubDateFriendly: March 13, 2020
  description: |
    Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.
    Guests / Hosts
    Justus Eapen @justuseapen (https://twitter.com/justuseapen)
    Anna Neyzberg @ANeyzb (https://twitter.com/ANeyzb)
    Amos King @adkron (https://twitter.com/Adkron)
    Bruce Tate @redrapids (https://twitter.com/redrapids)
    Susumu Yamazaki @zacky1972 (https://twitter.com/zacky1972)
    Melvin Cedeno @TheCraftedGem (https://twitter.com/TheCraftedGem)
    Tim Mecklem @tim_mecklem (https://twitter.com/tim_mecklem)
    Elixir Outlaws https://elixiroutlaws.com/
    Lonestar Elixir https://lonestarelixir.com/ Special Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu Yamazaki, and Tim Mecklem.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+PlJMiLNK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe0827c-2449-477d-bb59-3a189d039ad0.mp3
    length: '44875455'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Elixir Outlaws invited us to join them for a special crossover episode,
      recorded live at Lonestar Elixir 2020. Join us for a conversation around fun
      and learning in development, highlights from day one of the conference, remembering
      Joe Armstrong, and more.
    duration: '46:44'
    explicit: 'no'
    keywords: elixir, phoenix, lonestar elixir
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Elixir Outlaws invited us to join them for a special crossover
      episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around
      fun and learning in development, highlights from day one of the conference,
      remembering Joe Armstrong, and more.</p>\n\n<p><strong>Guests / Hosts</strong><br>\nJustus
      Eapen <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">@justuseapen</a><br>\nAnna
      Neyzberg <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">@ANeyzb</a><br>\nAmos
      King <a href=\"https://twitter.com/Adkron\" rel=\"nofollow\">@adkron</a><br>\nBruce
      Tate <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">@redrapids</a><br>\nSusumu
      Yamazaki <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">@zacky1972</a><br>\nMelvin
      Cedeno <a href=\"https://twitter.com/TheCraftedGem\" rel=\"nofollow\">@TheCraftedGem</a><br>\nTim
      Mecklem <a href=\"https://twitter.com/tim_mecklem\" rel=\"nofollow\">@tim_mecklem</a></p>\n\n<p>Elixir
      Outlaws <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nLonestar
      Elixir <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
      Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno,
      Susumu Yamazaki, and Tim Mecklem.</p>\n      "
  contentEncoded: "\n        <p>Elixir Outlaws invited us to join them for a special
    crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation
    around fun and learning in development, highlights from day one of the conference,
    remembering Joe Armstrong, and more.</p>\n\n<p><strong>Guests / Hosts</strong><br>\nJustus
    Eapen <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">@justuseapen</a><br>\nAnna
    Neyzberg <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">@ANeyzb</a><br>\nAmos
    King <a href=\"https://twitter.com/Adkron\" rel=\"nofollow\">@adkron</a><br>\nBruce
    Tate <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">@redrapids</a><br>\nSusumu
    Yamazaki <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">@zacky1972</a><br>\nMelvin
    Cedeno <a href=\"https://twitter.com/TheCraftedGem\" rel=\"nofollow\">@TheCraftedGem</a><br>\nTim
    Mecklem <a href=\"https://twitter.com/tim_mecklem\" rel=\"nofollow\">@tim_mecklem</a></p>\n\n<p>Elixir
    Outlaws <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nLonestar
    Elixir <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
    Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu
    Yamazaki, and Tim Mecklem.</p>\n      "
- title: Devon Estes from Sketch on Benchee,  Performance and Training
  slug: s3e16-estes
  link: https://smartlogic.io/podcast/elixir-wizards/s3e16-estes
  guid: 65360c15-6a60-4c48-be76-94f642cb6869
  pubDate: Thu, 12 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 12, 2020
  description: "Our guest today, Devon Estes, approached us about the possible opportunity
    for Elixir to optimize and build out the pandas data analysis and manipulation
    tool, sharing why he thinks it would be a valuable addition to the Elixir open
    source ecosystem. But Devon joins us to contribute to our ongoing discussion about
    performance and training in the Elixir world, sharing about his current work on
    the beta for Sketch Cloud, his previous Erlang consultancy role at one of the
    largest banks in Europe, and the massive responsibility he carried while working
    on the bottom line application. He continues to advise listeners on the considerations
    for optimizing Erlang performance and solving database-specific problems, and
    the memory constraints he comes up against in the Sketch Cloud application. Devon
    talks about Benchee, a benchmarking library created by his friend, and how the
    two of them have continued to develop this tool, including its performance testing
    capabilities and how they deconstructed the benchmarking steps to build out the
    library. He also talks more broadly about the importance of considering the data
    when distinguishing between facts and opinions in conversations about performance.
    \nKey Points From This Episode:\nWhat Devon believes would be a valuable addition
    to the Elixir open source ecosystem. \nWhy optimizing and building out the pandas
    tool will be worth a company’s time and effort.\nDevon’s experience with pandas
    and Python, and recognizing the opportunity for Elixir. \nWorking on the beta
    for Sketch’s Cloud that will allow real-time collaboration. \nDevon’s consultancy
    role at Klarna, one of the largest banks in Europe. \nThe responsibility involved
    in working on the bottom-of-the-stack application at Klarna.  \nConsiderations
    for optimizing Erlang performance and why you should look at the tail. \nSolving
    the database performance problems – running queries and searches – at Klarna.
    \nThe unique memory constraints of Sketch Cloud and the problem with receiving
    large files. \nMore about Benchee, a benchmarking library, and all its performance
    testing capabilities. \nDeciding whether a function is responsible for other things
    when benchmarking. \nThe time Devon spends on optimizing performance and the first
    two steps in the process. \nThe profiling process of determining which function
    is slow and writing a benchmark for it. \nDistinguish between a fact and an opinion
    by considering the data (or lack thereof). \nKeeping in mind that truth is time-bound,
    and it also applies to benchmarking.\nDeconstructing the steps in the process
    of further developing Benchee.\nHow Devon became a maintainer of the Elixir track
    for Exercism, and what the role involves. \nLinks Mentioned in Today’s Episode:\nDevon
    Estes — http://www.devonestes.com\nDevon Estes on Twitter — https://twitter.com/devoncestes?lang=en\nDevon
    Estes on GitHub — https://github.com/devonestes\npandas — https://pandas.pydata.org\nPython
    — https://www.python.org\nSketch — https://www.sketch.com\nKlarna — https://www.klarna.com/international/\nErlang
    — https://www.erlang.org\nPostgreSQL — https://www.postgresql.org\nRuby  — https://www.ruby-lang.org/en/\nAdopting
    Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nExercism
    — https://exercism.io\nJavaScript — https://www.javascript.com\nBenchee — https://github.com/bencheeorg\nSmartLogic
    — https://smartlogic.io/ \nElixir — https://elixir-lang.org\nElixir Wizards Podcast
    — https://podcast.smartlogic.io\nUpdate:\nWhat's Inside a Reduction? http://www.devonestes.com/inside-a-reduction
    Special Guest: Devon Estes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9e23Ic3j
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/65360c15-6a60-4c48-be76-94f642cb6869.mp3
    length: '70759385'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Devon Estes joins our ongoing discussion about performance and training
      in the Elixir world, shares about his current work on the beta for Sketch Cloud,
      his previous Erlang consultancy role at one of the largest banks in Europe,
      and the massive responsibility he carried while working on the bottom line application.
    duration: '48:34'
    explicit: 'no'
    keywords: elixir, ruby, benchee, pandas, erlang
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/65360c15-6a60-4c48-be76-94f642cb6869/cover.jpg?v=2
    summary: "\n        <p>Our guest today, Devon Estes, approached us about the possible
      opportunity for Elixir to optimize and build out the pandas data analysis and
      manipulation tool, sharing why he thinks it would be a valuable addition to
      the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing
      discussion about performance and training in the Elixir world, sharing about
      his current work on the beta for Sketch Cloud, his previous Erlang consultancy
      role at one of the largest banks in Europe, and the massive responsibility he
      carried while working on the bottom line application. He continues to advise
      listeners on the considerations for optimizing Erlang performance and solving
      database-specific problems, and the memory constraints he comes up against in
      the Sketch Cloud application. Devon talks about Benchee, a benchmarking library
      created by his friend, and how the two of them have continued to develop this
      tool, including its performance testing capabilities and how they deconstructed
      the benchmarking steps to build out the library. He also talks more broadly
      about the importance of considering the data when distinguishing between facts
      and opinions in conversations about performance. </p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>What Devon believes would be a valuable addition
      to the Elixir open source ecosystem. </li>\n<li>Why optimizing and building
      out the pandas tool will be worth a company’s time and effort.</li>\n<li>Devon’s
      experience with pandas and Python, and recognizing the opportunity for Elixir.
      </li>\n<li>Working on the beta for Sketch’s Cloud that will allow real-time
      collaboration. </li>\n<li>Devon’s consultancy role at Klarna, one of the largest
      banks in Europe. </li>\n<li>The responsibility involved in working on the bottom-of-the-stack
      application at Klarna.<br></li>\n<li>Considerations for optimizing Erlang performance
      and why you should look at the tail. </li>\n<li>Solving the database performance
      problems – running queries and searches – at Klarna. </li>\n<li>The unique memory
      constraints of Sketch Cloud and the problem with receiving large files. </li>\n<li>More
      about Benchee, a benchmarking library, and all its performance testing capabilities.
      </li>\n<li>Deciding whether a function is responsible for other things when
      benchmarking. </li>\n<li>The time Devon spends on optimizing performance and
      the first two steps in the process. </li>\n<li>The profiling process of determining
      which function is slow and writing a benchmark for it. </li>\n<li>Distinguish
      between a fact and an opinion by considering the data (or lack thereof). </li>\n<li>Keeping
      in mind that truth is time-bound, and it also applies to benchmarking.</li>\n<li>Deconstructing
      the steps in the process of further developing Benchee.</li>\n<li>How Devon
      became a maintainer of the Elixir track for Exercism, and what the role involves.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Devon Estes
      — <a href=\"http://www.devonestes.com\" rel=\"nofollow\">http://www.devonestes.com</a><br>\nDevon
      Estes on Twitter — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nDevon
      Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\npandas
      — <a href=\"https://pandas.pydata.org\" rel=\"nofollow\">https://pandas.pydata.org</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nSketch
      — <a href=\"https://www.sketch.com\" rel=\"nofollow\">https://www.sketch.com</a><br>\nKlarna
      — <a href=\"https://www.klarna.com/international/\" rel=\"nofollow\">https://www.klarna.com/international/</a><br>\nErlang
      — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nPostgreSQL
      — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nRuby
      \ — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nAdopting
      Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nExercism
      — <a href=\"https://exercism.io\" rel=\"nofollow\">https://exercism.io</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nBenchee
      — <a href=\"https://github.com/bencheeorg\" rel=\"nofollow\">https://github.com/bencheeorg</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a></p>\n\n<p>Update:<br>\nWhat&#39;s
      Inside a Reduction? <a href=\"http://www.devonestes.com/inside-a-reduction\"
      rel=\"nofollow\">http://www.devonestes.com/inside-a-reduction</a></p><p>Special
      Guest: Devon Estes.</p>\n      "
  contentEncoded: "\n        <p>Our guest today, Devon Estes, approached us about
    the possible opportunity for Elixir to optimize and build out the pandas data
    analysis and manipulation tool, sharing why he thinks it would be a valuable addition
    to the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing
    discussion about performance and training in the Elixir world, sharing about his
    current work on the beta for Sketch Cloud, his previous Erlang consultancy role
    at one of the largest banks in Europe, and the massive responsibility he carried
    while working on the bottom line application. He continues to advise listeners
    on the considerations for optimizing Erlang performance and solving database-specific
    problems, and the memory constraints he comes up against in the Sketch Cloud application.
    Devon talks about Benchee, a benchmarking library created by his friend, and how
    the two of them have continued to develop this tool, including its performance
    testing capabilities and how they deconstructed the benchmarking steps to build
    out the library. He also talks more broadly about the importance of considering
    the data when distinguishing between facts and opinions in conversations about
    performance. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What Devon
    believes would be a valuable addition to the Elixir open source ecosystem. </li>\n<li>Why
    optimizing and building out the pandas tool will be worth a company’s time and
    effort.</li>\n<li>Devon’s experience with pandas and Python, and recognizing the
    opportunity for Elixir. </li>\n<li>Working on the beta for Sketch’s Cloud that
    will allow real-time collaboration. </li>\n<li>Devon’s consultancy role at Klarna,
    one of the largest banks in Europe. </li>\n<li>The responsibility involved in
    working on the bottom-of-the-stack application at Klarna.<br></li>\n<li>Considerations
    for optimizing Erlang performance and why you should look at the tail. </li>\n<li>Solving
    the database performance problems – running queries and searches – at Klarna.
    </li>\n<li>The unique memory constraints of Sketch Cloud and the problem with
    receiving large files. </li>\n<li>More about Benchee, a benchmarking library,
    and all its performance testing capabilities. </li>\n<li>Deciding whether a function
    is responsible for other things when benchmarking. </li>\n<li>The time Devon spends
    on optimizing performance and the first two steps in the process. </li>\n<li>The
    profiling process of determining which function is slow and writing a benchmark
    for it. </li>\n<li>Distinguish between a fact and an opinion by considering the
    data (or lack thereof). </li>\n<li>Keeping in mind that truth is time-bound, and
    it also applies to benchmarking.</li>\n<li>Deconstructing the steps in the process
    of further developing Benchee.</li>\n<li>How Devon became a maintainer of the
    Elixir track for Exercism, and what the role involves. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Devon Estes — <a href=\"http://www.devonestes.com\"
    rel=\"nofollow\">http://www.devonestes.com</a><br>\nDevon Estes on Twitter — <a
    href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nDevon
    Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\npandas
    — <a href=\"https://pandas.pydata.org\" rel=\"nofollow\">https://pandas.pydata.org</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nSketch
    — <a href=\"https://www.sketch.com\" rel=\"nofollow\">https://www.sketch.com</a><br>\nKlarna
    — <a href=\"https://www.klarna.com/international/\" rel=\"nofollow\">https://www.klarna.com/international/</a><br>\nErlang
    — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nPostgreSQL
    — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nRuby
    \ — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nAdopting
    Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nExercism
    — <a href=\"https://exercism.io\" rel=\"nofollow\">https://exercism.io</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nBenchee
    — <a href=\"https://github.com/bencheeorg\" rel=\"nofollow\">https://github.com/bencheeorg</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a></p>\n\n<p>Update:<br>\nWhat&#39;s
    Inside a Reduction? <a href=\"http://www.devonestes.com/inside-a-reduction\" rel=\"nofollow\">http://www.devonestes.com/inside-a-reduction</a></p><p>Special
    Guest: Devon Estes.</p>\n      "
- title: Second Annual Lonestar Lunchisode
  slug: s3-lonestar-lunchisode-2020
  link: https://smartlogic.io/podcast/elixir-wizards/s3-lonestar-lunchisode-2020
  guid: 49808f09-dc08-407e-9d3b-9db8f0bbff97
  pubDate: Thu, 05 Mar 2020 06:00:00 -0500
  pubDateFriendly: March  5, 2020
  description: "Welcome back to the show for this special edition Lunchisode, coming
    to you live from the Lonestar Elixir 2020 Conference! We have a revolving door
    of speakers at this informal roundtable and a few friends and associates stop
    by to introduce themselves, share their thoughts on the conference so far and
    subjects that they care about. We follow up on some of the ideas raised in the
    Lonestar preview episode as well as hear about new and interesting ways that Elixir
    is being used at a variety of companies, including SalesLoft, ActiveProspect,
    SmartRent and more! We also consider the place of Elixir education and go deeper
    on the topic of finding fun and meaning in our programming pursuits and beyond.
    Join us for this special edition and stay tuned for the next installment soon.\nKey
    Points From This Episode:\nThoughts on the conference so far — the talks and venue.
    \ \nSalesLoft's Elixir adoption and how the decision was made by those in power.
    \nBruce Williams' current work at GitHub and his project on Absinthe. \nElixir
    usage in Mexico and the prominent organizations and companies that use it.\nSome
    information on the Observability Working Group and what they are currently busy
    with. \nDifferences between tracing and logging; tracing is essentially distributed
    logging. \nWhat it means for the programmer when they bump up against a challenge!\nThe
    amount of effort that should go into developing entry points for new Elixir developers.\nEducation
    in the Elixir space and the success of the bootcamp model. \nConsidering the ongoing
    utility of unit tests and changing up training strategies. \nThe work done by
    SmartRent in real estate and how Elixir fits into their tech stack. \nLinks Mentioned
    in Today’s Episode:\nLonestar Elixir — https://lonestarelixir.com/\nBruce Tate
    — https://twitter.com/redrapids\nSteve Bussey — https://twitter.com/YOOOODAAAA\nBruce
    Williams — https://twitter.com/wbruce\nRicardo Echavarria — https://twitter.com/ricarus\nBrain
    Naegele — https://twitter.com/bsidebryan\nFrank Kumro — https://twitter.com/frigidcode\nZach
    Thomas — https://twitter.com/ZachDCThom\nDave Thomas — https://twitter.com/pragdave\nJon
    Carstens — https://twitter.com/JonCarstens\nTodd Resudek — https://twitter.com/sprsmpl\nSmartLogic
    — https://smartlogic.io/ \nSalesLoft — https://salesloft.com/\nAbsinthe — https://github.com/absinthe-graphql/absinthe\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nRestFest — https://www.restfest.org/\nObservability
    Working Group — https://erlef.org/wg/observability\nGigCity Elixir Conference
    — https://www.gigcityelixir.com/\nActiveProspect — https://activeprospect.com/\nThe
    Pragmatic Programmer — https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\nSmartRent
    — https://smartrent.com/\nBlinker — https://www.blinker.com/ Special Guests: Brain
    Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon Carstens, Ricardo
    Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zA4kPFSi
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49808f09-dc08-407e-9d3b-9db8f0bbff97.mp3
    length: '77678258'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Recorded live at Lonestar Elixir 2020! Tune in for our conversation
      with many great guests, including Bruce Tate, Steve Bussey, Bruce Williams,
      Ricardo Echavarria, Brian Naegele, Frank Kumro, Zach Thomas, Dave Thomas, Jon
      Carstens, and guest co-host Todd Resudek.
    duration: '53:38'
    explicit: 'no'
    keywords: lonestar elixir, elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49808f09-dc08-407e-9d3b-9db8f0bbff97/cover.jpg?v=2
    summary: "\n        <p>Welcome back to the show for this special edition Lunchisode,
      coming to you live from the Lonestar Elixir 2020 Conference! We have a revolving
      door of speakers at this informal roundtable and a few friends and associates
      stop by to introduce themselves, share their thoughts on the conference so far
      and subjects that they care about. We follow up on some of the ideas raised
      in the Lonestar preview episode as well as hear about new and interesting ways
      that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect,
      SmartRent and more! We also consider the place of Elixir education and go deeper
      on the topic of finding fun and meaning in our programming pursuits and beyond.
      Join us for this special edition and stay tuned for the next installment soon.</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Thoughts on the conference
      so far — the talks and venue.<br></li>\n<li>SalesLoft&#39;s Elixir adoption
      and how the decision was made by those in power. </li>\n<li>Bruce Williams&#39;
      current work at GitHub and his project on Absinthe. </li>\n<li>Elixir usage
      in Mexico and the prominent organizations and companies that use it.</li>\n<li>Some
      information on the Observability Working Group and what they are currently busy
      with. </li>\n<li>Differences between tracing and logging; tracing is essentially
      distributed logging. </li>\n<li>What it means for the programmer when they bump
      up against a challenge!</li>\n<li>The amount of effort that should go into developing
      entry points for new Elixir developers.</li>\n<li>Education in the Elixir space
      and the success of the bootcamp model. </li>\n<li>Considering the ongoing utility
      of unit tests and changing up training strategies. </li>\n<li>The work done
      by SmartRent in real estate and how Elixir fits into their tech stack. </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Lonestar Elixir — <a href=\"https://lonestarelixir.com/\"
      rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce Tate — <a href=\"https://twitter.com/redrapids\"
      rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nSteve Bussey — <a href=\"https://twitter.com/YOOOODAAAA\"
      rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nBruce Williams — <a
      href=\"https://twitter.com/wbruce\" rel=\"nofollow\">https://twitter.com/wbruce</a><br>\nRicardo
      Echavarria — <a href=\"https://twitter.com/r_icarus\" rel=\"nofollow\">https://twitter.com/r_icarus</a><br>\nBrain
      Naegele — <a href=\"https://twitter.com/bside_bryan\" rel=\"nofollow\">https://twitter.com/bside_bryan</a><br>\nFrank
      Kumro — <a href=\"https://twitter.com/frigidcode\" rel=\"nofollow\">https://twitter.com/frigidcode</a><br>\nZach
      Thomas — <a href=\"https://twitter.com/ZachDCThom\" rel=\"nofollow\">https://twitter.com/ZachDCThom</a><br>\nDave
      Thomas — <a href=\"https://twitter.com/pragdave\" rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nJon
      Carstens — <a href=\"https://twitter.com/JonCarstens\" rel=\"nofollow\">https://twitter.com/JonCarstens</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSalesLoft — <a href=\"https://salesloft.com/\" rel=\"nofollow\">https://salesloft.com/</a><br>\nAbsinthe
      — <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nRestFest
      — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nObservability
      Working Group — <a href=\"https://erlef.org/wg/observability\" rel=\"nofollow\">https://erlef.org/wg/observability</a><br>\nGigCity
      Elixir Conference — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nActiveProspect
      — <a href=\"https://activeprospect.com/\" rel=\"nofollow\">https://activeprospect.com/</a><br>\nThe
      Pragmatic Programmer — <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
      rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nSmartRent
      — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a></p><p>Special
      Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro,
      Jon Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>\n
      \     "
  contentEncoded: "\n        <p>Welcome back to the show for this special edition
    Lunchisode, coming to you live from the Lonestar Elixir 2020 Conference! We have
    a revolving door of speakers at this informal roundtable and a few friends and
    associates stop by to introduce themselves, share their thoughts on the conference
    so far and subjects that they care about. We follow up on some of the ideas raised
    in the Lonestar preview episode as well as hear about new and interesting ways
    that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect,
    SmartRent and more! We also consider the place of Elixir education and go deeper
    on the topic of finding fun and meaning in our programming pursuits and beyond.
    Join us for this special edition and stay tuned for the next installment soon.</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Thoughts on the conference
    so far — the talks and venue.<br></li>\n<li>SalesLoft&#39;s Elixir adoption and
    how the decision was made by those in power. </li>\n<li>Bruce Williams&#39; current
    work at GitHub and his project on Absinthe. </li>\n<li>Elixir usage in Mexico
    and the prominent organizations and companies that use it.</li>\n<li>Some information
    on the Observability Working Group and what they are currently busy with. </li>\n<li>Differences
    between tracing and logging; tracing is essentially distributed logging. </li>\n<li>What
    it means for the programmer when they bump up against a challenge!</li>\n<li>The
    amount of effort that should go into developing entry points for new Elixir developers.</li>\n<li>Education
    in the Elixir space and the success of the bootcamp model. </li>\n<li>Considering
    the ongoing utility of unit tests and changing up training strategies. </li>\n<li>The
    work done by SmartRent in real estate and how Elixir fits into their tech stack.
    </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Lonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nSteve
    Bussey — <a href=\"https://twitter.com/YOOOODAAAA\" rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nBruce
    Williams — <a href=\"https://twitter.com/wbruce\" rel=\"nofollow\">https://twitter.com/wbruce</a><br>\nRicardo
    Echavarria — <a href=\"https://twitter.com/r_icarus\" rel=\"nofollow\">https://twitter.com/r_icarus</a><br>\nBrain
    Naegele — <a href=\"https://twitter.com/bside_bryan\" rel=\"nofollow\">https://twitter.com/bside_bryan</a><br>\nFrank
    Kumro — <a href=\"https://twitter.com/frigidcode\" rel=\"nofollow\">https://twitter.com/frigidcode</a><br>\nZach
    Thomas — <a href=\"https://twitter.com/ZachDCThom\" rel=\"nofollow\">https://twitter.com/ZachDCThom</a><br>\nDave
    Thomas — <a href=\"https://twitter.com/pragdave\" rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nJon
    Carstens — <a href=\"https://twitter.com/JonCarstens\" rel=\"nofollow\">https://twitter.com/JonCarstens</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSalesLoft — <a href=\"https://salesloft.com/\" rel=\"nofollow\">https://salesloft.com/</a><br>\nAbsinthe
    — <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nRestFest
    — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nObservability
    Working Group — <a href=\"https://erlef.org/wg/observability\" rel=\"nofollow\">https://erlef.org/wg/observability</a><br>\nGigCity
    Elixir Conference — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nActiveProspect
    — <a href=\"https://activeprospect.com/\" rel=\"nofollow\">https://activeprospect.com/</a><br>\nThe
    Pragmatic Programmer — <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
    rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nSmartRent
    — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a></p><p>Special
    Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon
    Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>\n
    \     "
- title: Bonus Toddcast & Lonestar Preview
  slug: s3e14-bonus-toddcast-and-lonestar-preview
  link: https://smartlogic.io/podcast/elixir-wizards/s3e14-bonus-toddcast-and-lonestar-preview
  guid: 10fa47c2-0223-46ac-a69d-465fd1393edb
  pubDate: Thu, 27 Feb 2020 07:30:00 -0500
  pubDateFriendly: February 27, 2020
  description: "This week we're delighted to share a special format bonus episode!
    \nWe are joined by guest co-host Todd Resudek as well as a number of guests who
    each share a little bit about what they're working on and in many cases their
    upcoming presentations at Lonestar Elixir. \nSpecial episode guests: \n* Angel
    Jose, Senior Platform Engineer at Cars.com\n* Dave Lucia, VP of Engineering at
    SimpleBet\n* Greg Mefford, Senior Back-End Engineer at Bleacher Report\n* Melvin
    Cedeno, Elixir Developer at SplitGyms\n* Zach Thomas, API Developer at Blinker\nMost
    of our guests weigh in about their upcoming presentations at the event and we
    also get to chat about a few near and dear topics with our rotating cast. We hear
    about where they are working, their experiences with Elixir and their thoughts
    on education and company culture. It's an unusual episode but one we are so glad
    to have had the chance to make! We also find time to touch on our focus for the
    next season of the podcast, which is very exciting for all of us over here at
    the show. Remember to stay plugged in for more on Lonestar Elixir and attend if
    you can!\nKey Points From This Episode:\nSome thoughts on LiveView and its adoption
    by new developers. \nAngel's work at Cars and how they are using Elixir and LiveView
    to rewrite everything.\nChatbots and the immediate benefits of using Elixir to
    rewrite them.\nThe elevator pitch on SimpleBet and the tech stack, skillset and
    ecosystem of the company.\nWhy Dave and his team have moved away from Rust! \nA
    quick tease of what to expect for Season 4 of the podcast: Architecture of Applications!
    \ \nHow Bleacher Report is using Elixir to build the 'third space' for sports
    fans.\nTeam building and expansion at Bleacher Report and the stages of scaling.
    \ \nA sneak preview of Greg's upcoming talk at Lonestar!\nHow Greg got started
    with Nerves and why it has a special place in his heart.  \nThe theme of Melvin's
    talk at Lonestar; untraditional routes and emotions in tech. \nConsidering the
    usefulness of boot camps, the value of ISAs and CS programs.\nZach's background
    in Elixir and his current work at Blinker with the language.\nExperiences at Turing
    and in liberal arts during college.\nZach's Lonestar talk elevator pitch: 'Getting
    the Frog out of the Well'. \nThe allegory of the cave, 'what is water' and how
    this differs from Zach's idea. \nWhy don't we like statically typed things as
    much as we should?\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nLonestar Elixir 2020 — https://lonestarelixir.com/\nTodd Resudek — https://medium.com/@toddresudek\nTodd
    Resudek on Twitter — https://twitter.com/sprsmpl\nAngel Jose — https://github.com/ajose01\nDave
    Lucia — https://github.com/davydog187\nGreg Mefford — https://github.com/GregMefford/blinkchain\nMelvin
    Cedeno — https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\nZack
    Thomas — https://github.com/zeam-vm/pelemay\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nLiveView
    — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nElixirConf — https://elixirconf.com/events\nCars
    — https://www.cars.com/\nSimpleBet — https://www.simplebet.io/\nFull Stack Developer
    Horse Drawing Meme — https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\nConway's
    Law — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\nElixirConf
    2019 - Lighting Talk - Are There Benefits Of Crying In Tech — https://www.youtube.com/watch?v=oW5Plkroyxk\nTRON
    — https://www.rottentomatoes.com/m/tron\nSmart Mirror Blog Post — https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\nBleacher
    Report — https://bleacherreport.com/\nTeam Topologies — https://teamtopologies.com/\nNerves
    — https://nerves-project.org/\nTuring — https://turing.io/\nCIRR — https://cirr.org/\nDavid
    Heinemeier Hansson — https://dhh.dk/\nBlinker — https://www.blinker.com/\nDavid
    Foster Wallace — http://www.davidfosterwallacebooks.com/\nGödel, Escher, Bach
    — https://www.goodreads.com/book/show/24113.GdelEscher_Bach Special Guests: Angel
    Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and Zach Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+J96ymiGR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10fa47c2-0223-46ac-a69d-465fd1393edb.mp3
    length: '103019643'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: "Special format bonus episode! This week we are joined by bonus co-host
      Todd Resudek as well as a number of guests who each share a little bit about
      what they're working on, and in many cases their upcoming presentations at Lonestar
      Elixir. \n\nSpecial guests: Angel Jose of Cars.com, Dave Lucia of SimpleBet,
      Greg Mefford from Bleacher Report, Melvin Cedeno of SplitGyms, Zach Thomas of
      Blinker"
    duration: '1:10:46'
    explicit: 'no'
    keywords: elixir, phoenix, lonestar
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10fa47c2-0223-46ac-a69d-465fd1393edb/cover.jpg?v=2
    summary: "\n        <p>This week we&#39;re delighted to share a special format
      bonus episode! </p>\n\n<p>We are joined by guest co-host Todd Resudek as well
      as a number of guests who each share a little bit about what they&#39;re working
      on and in many cases their upcoming presentations at Lonestar Elixir. </p>\n\n<p>Special
      episode guests: </p>\n\n<ul>\n<li>Angel Jose, Senior Platform Engineer at Cars.com</li>\n<li>Dave
      Lucia, VP of Engineering at SimpleBet</li>\n<li>Greg Mefford, Senior Back-End
      Engineer at Bleacher Report</li>\n<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>\n<li>Zach
      Thomas, API Developer at Blinker</li>\n</ul>\n\n<p>Most of our guests weigh
      in about their upcoming presentations at the event and we also get to chat about
      a few near and dear topics with our rotating cast. We hear about where they
      are working, their experiences with Elixir and their thoughts on education and
      company culture. It&#39;s an unusual episode but one we are so glad to have
      had the chance to make! We also find time to touch on our focus for the next
      season of the podcast, which is very exciting for all of us over here at the
      show. Remember to stay plugged in for more on Lonestar Elixir and attend if
      you can!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Some thoughts
      on LiveView and its adoption by new developers. </li>\n<li>Angel&#39;s work
      at Cars and how they are using Elixir and LiveView to rewrite everything.</li>\n<li>Chatbots
      and the immediate benefits of using Elixir to rewrite them.</li>\n<li>The elevator
      pitch on SimpleBet and the tech stack, skillset and ecosystem of the company.</li>\n<li>Why
      Dave and his team have moved away from Rust! </li>\n<li>A quick tease of what
      to expect for Season 4 of the podcast: Architecture of Applications!<br></li>\n<li>How
      Bleacher Report is using Elixir to build the &#39;third space&#39; for sports
      fans.</li>\n<li>Team building and expansion at Bleacher Report and the stages
      of scaling.<br></li>\n<li>A sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>\n<li>How
      Greg got started with Nerves and why it has a special place in his heart.<br></li>\n<li>The
      theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in
      tech. </li>\n<li>Considering the usefulness of boot camps, the value of ISAs
      and CS programs.</li>\n<li>Zach&#39;s background in Elixir and his current work
      at Blinker with the language.</li>\n<li>Experiences at Turing and in liberal
      arts during college.</li>\n<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting
      the Frog out of the Well&#39;. </li>\n<li>The allegory of the cave, &#39;what
      is water&#39; and how this differs from Zach&#39;s idea. </li>\n<li>Why don&#39;t
      we like statically typed things as much as we should?</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nLonestar Elixir 2020 — <a
      href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTodd
      Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAngel
      Jose — <a href=\"https://github.com/ajose01\" rel=\"nofollow\">https://github.com/ajose01</a><br>\nDave
      Lucia — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a><br>\nGreg
      Mefford — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nMelvin
      Cedeno — <a href=\"https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\"
      rel=\"nofollow\">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>\nZack
      Thomas — <a href=\"https://github.com/zeam-vm/pelemay\" rel=\"nofollow\">https://github.com/zeam-vm/pelemay</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nLiveView
      — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nCars
      — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nSimpleBet
      — <a href=\"https://www.simplebet.io/\" rel=\"nofollow\">https://www.simplebet.io/</a><br>\nFull
      Stack Developer Horse Drawing Meme — <a href=\"https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\"
      rel=\"nofollow\">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>\nConway&#39;s
      Law — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
      rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nElixirConf
      2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href=\"https://www.youtube.com/watch?v=oW5Plkroyxk\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>\nTRON —
      <a href=\"https://www.rottentomatoes.com/m/tron\" rel=\"nofollow\">https://www.rottentomatoes.com/m/tron</a><br>\nSmart
      Mirror Blog Post — <a href=\"https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\"
      rel=\"nofollow\">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nTeam
      Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nNerves
      — <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nCIRR
      — <a href=\"https://cirr.org/\" rel=\"nofollow\">https://cirr.org/</a><br>\nDavid
      Heinemeier Hansson — <a href=\"https://dhh.dk/\" rel=\"nofollow\">https://dhh.dk/</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nDavid
      Foster Wallace — <a href=\"http://www.davidfosterwallacebooks.com/\" rel=\"nofollow\">http://www.davidfosterwallacebooks.com/</a><br>\nGödel,
      Escher, Bach — <a href=\"https://www.goodreads.com/book/show/24113.G_del_Escher_Bach\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special
      Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and
      Zach Thomas.</p>\n      "
  contentEncoded: "\n        <p>This week we&#39;re delighted to share a special format
    bonus episode! </p>\n\n<p>We are joined by guest co-host Todd Resudek as well
    as a number of guests who each share a little bit about what they&#39;re working
    on and in many cases their upcoming presentations at Lonestar Elixir. </p>\n\n<p>Special
    episode guests: </p>\n\n<ul>\n<li>Angel Jose, Senior Platform Engineer at Cars.com</li>\n<li>Dave
    Lucia, VP of Engineering at SimpleBet</li>\n<li>Greg Mefford, Senior Back-End
    Engineer at Bleacher Report</li>\n<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>\n<li>Zach
    Thomas, API Developer at Blinker</li>\n</ul>\n\n<p>Most of our guests weigh in
    about their upcoming presentations at the event and we also get to chat about
    a few near and dear topics with our rotating cast. We hear about where they are
    working, their experiences with Elixir and their thoughts on education and company
    culture. It&#39;s an unusual episode but one we are so glad to have had the chance
    to make! We also find time to touch on our focus for the next season of the podcast,
    which is very exciting for all of us over here at the show. Remember to stay plugged
    in for more on Lonestar Elixir and attend if you can!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>Some thoughts on LiveView and its adoption by new
    developers. </li>\n<li>Angel&#39;s work at Cars and how they are using Elixir
    and LiveView to rewrite everything.</li>\n<li>Chatbots and the immediate benefits
    of using Elixir to rewrite them.</li>\n<li>The elevator pitch on SimpleBet and
    the tech stack, skillset and ecosystem of the company.</li>\n<li>Why Dave and
    his team have moved away from Rust! </li>\n<li>A quick tease of what to expect
    for Season 4 of the podcast: Architecture of Applications!<br></li>\n<li>How Bleacher
    Report is using Elixir to build the &#39;third space&#39; for sports fans.</li>\n<li>Team
    building and expansion at Bleacher Report and the stages of scaling.<br></li>\n<li>A
    sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>\n<li>How Greg got
    started with Nerves and why it has a special place in his heart.<br></li>\n<li>The
    theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in tech.
    </li>\n<li>Considering the usefulness of boot camps, the value of ISAs and CS
    programs.</li>\n<li>Zach&#39;s background in Elixir and his current work at Blinker
    with the language.</li>\n<li>Experiences at Turing and in liberal arts during
    college.</li>\n<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting the Frog
    out of the Well&#39;. </li>\n<li>The allegory of the cave, &#39;what is water&#39;
    and how this differs from Zach&#39;s idea. </li>\n<li>Why don&#39;t we like statically
    typed things as much as we should?</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nLonestar Elixir 2020 — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTodd
    Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAngel
    Jose — <a href=\"https://github.com/ajose01\" rel=\"nofollow\">https://github.com/ajose01</a><br>\nDave
    Lucia — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a><br>\nGreg
    Mefford — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nMelvin
    Cedeno — <a href=\"https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\"
    rel=\"nofollow\">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>\nZack
    Thomas — <a href=\"https://github.com/zeam-vm/pelemay\" rel=\"nofollow\">https://github.com/zeam-vm/pelemay</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nLiveView
    — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nCars
    — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nSimpleBet
    — <a href=\"https://www.simplebet.io/\" rel=\"nofollow\">https://www.simplebet.io/</a><br>\nFull
    Stack Developer Horse Drawing Meme — <a href=\"https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\"
    rel=\"nofollow\">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>\nConway&#39;s
    Law — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
    rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nElixirConf
    2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href=\"https://www.youtube.com/watch?v=oW5Plkroyxk\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>\nTRON — <a
    href=\"https://www.rottentomatoes.com/m/tron\" rel=\"nofollow\">https://www.rottentomatoes.com/m/tron</a><br>\nSmart
    Mirror Blog Post — <a href=\"https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\"
    rel=\"nofollow\">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nTeam
    Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nNerves
    — <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nCIRR
    — <a href=\"https://cirr.org/\" rel=\"nofollow\">https://cirr.org/</a><br>\nDavid
    Heinemeier Hansson — <a href=\"https://dhh.dk/\" rel=\"nofollow\">https://dhh.dk/</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nDavid
    Foster Wallace — <a href=\"http://www.davidfosterwallacebooks.com/\" rel=\"nofollow\">http://www.davidfosterwallacebooks.com/</a><br>\nGödel,
    Escher, Bach — <a href=\"https://www.goodreads.com/book/show/24113.G_del_Escher_Bach\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special
    Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and
    Zach Thomas.</p>\n      "
- title: Alex Garibay and Mike Binns from DockYard on Hiring and Training
  slug: s3e13-binns-garibay
  link: https://smartlogic.io/podcast/elixir-wizards/s3e13-binns-garibay
  guid: 1cd7d8f6-8965-4bd2-b159-1580e133bb6f
  pubDate: Thu, 20 Feb 2020 06:00:00 -0500
  pubDateFriendly: February 20, 2020
  description: "Today on the show, we’re joined by Mike Binns and Alex Garibay of
    DockYard. In this episode, Mike and Alex share their journeys of how they came
    to work at DockYard and give us a view into DockYard’s hiring and training processes,
    systems, and philosophies. Here they share what they enjoy most about working
    at DockYard and their emphasis on being supported in your continual growth as
    an employee and human being.\nKey Points from This Episode:\nFind out how Mike
    and Alex both got their jobs at DockYard in 2016.\nWorking for a fully remote
    company: Mike and Alex share their experiences.\nThe amount of languages used
    at DockYard and what the day-to-day looks like.\nReact VS Ember: Find out DockYard’s
    opinion on the debate between the two.\nHow to know whether you should be using
    JavaScript or Live View on your projects.\nThe importance of inclusion and empowerment
    in the onboarding process at DockYard.\nHow to support and train new employees
    in “soft” skills, such as communication.\nPersonal strategies Mike and Alex use
    to help “soften the blow” of feedback and criticism. \nDiscover what DockYard
    does to support the learning growth of their employees.\nLearn more about DockYard
    Friday and the exciting projects that have emerged from it.\nHelpful resources
    for learning Elixir and how to remain a curious learner as a developer.\nFind
    out the top skills that make a great engineering manager at DockYard today.\nLinks
    Mentioned in Today’s Episode:\nMike Binns on Twitter — https://twitter.com/1stAvenger\nMike
    Binns on LinkedIn — https://www.linkedin.com/in/mikebinns\nAlex Garibay — https://alexgaribay.com/\nAlex
    Garibay on Twitter — https://twitter.com/AlexGaribay\nAlex Garibay on LinkedIn
    — https://www.linkedin.com/in/alexandergaribay/\nDockYard — https://DockYard.com/\nSmartLogic
    — https://smartlogic.io/ \nRailsConf — https://railsconf.com/\nChris McCord —
    http://chrismccord.com/\nEmber — https://emberjs.com/\nLive View — https://support.google.com/maps/thread/11554255?hl=en\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027
    \nElixir Conf 2014 Keynote by Dave Thomas — https://www.youtube.com/watch?v=5hDVftaPQwY\nSarah
    Drasner — https://sarahdrasnerdesign.com/\nLonestar Elixir — https://lonestarelixir.com/\nProgramming
    Phoenix — https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\nJason
    Goldberger — https://twitter.com/jsonlouis Special Guests: Alex Garibay and Mike
    Binns.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+1nUg3zGs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1cd7d8f6-8965-4bd2-b159-1580e133bb6f.mp3
    length: '38709213'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Mike Binns and Alex Garibay of DockYard share their journeys of how
      they came to work at DockYard and give us a fascinating peek behind-the-scenes
      into DockYard’s hiring and training processes, systems, and philosophies.
    duration: '26:11'
    explicit: 'no'
    keywords: DockYard, elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1cd7d8f6-8965-4bd2-b159-1580e133bb6f/cover.jpg?v=2
    summary: "\n        <p>Today on the show, we’re joined by Mike Binns and Alex
      Garibay of DockYard. In this episode, Mike and Alex share their journeys of
      how they came to work at DockYard and give us a view into DockYard’s hiring
      and training processes, systems, and philosophies. Here they share what they
      enjoy most about working at DockYard and their emphasis on being supported in
      your continual growth as an employee and human being.</p>\n\n<p>Key Points from
      This Episode:</p>\n\n<ul>\n<li>Find out how Mike and Alex both got their jobs
      at DockYard in 2016.</li>\n<li>Working for a fully remote company: Mike and
      Alex share their experiences.</li>\n<li>The amount of languages used at DockYard
      and what the day-to-day looks like.</li>\n<li>React VS Ember: Find out DockYard’s
      opinion on the debate between the two.</li>\n<li>How to know whether you should
      be using JavaScript or Live View on your projects.</li>\n<li>The importance
      of inclusion and empowerment in the onboarding process at DockYard.</li>\n<li>How
      to support and train new employees in “soft” skills, such as communication.</li>\n<li>Personal
      strategies Mike and Alex use to help “soften the blow” of feedback and criticism.
      </li>\n<li>Discover what DockYard does to support the learning growth of their
      employees.</li>\n<li>Learn more about DockYard Friday and the exciting projects
      that have emerged from it.</li>\n<li>Helpful resources for learning Elixir and
      how to remain a curious learner as a developer.</li>\n<li>Find out the top skills
      that make a great engineering manager at DockYard today.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Mike Binns on Twitter — <a href=\"https://twitter.com/1stAvenger\"
      rel=\"nofollow\">https://twitter.com/1stAvenger</a><br>\nMike Binns on LinkedIn
      — <a href=\"https://www.linkedin.com/in/mikebinns\" rel=\"nofollow\">https://www.linkedin.com/in/mikebinns</a><br>\nAlex
      Garibay — <a href=\"https://alexgaribay.com/\" rel=\"nofollow\">https://alexgaribay.com/</a><br>\nAlex
      Garibay on Twitter — <a href=\"https://twitter.com/_AlexGaribay\" rel=\"nofollow\">https://twitter.com/_AlexGaribay</a><br>\nAlex
      Garibay on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandergaribay/\"
      rel=\"nofollow\">https://www.linkedin.com/in/alexandergaribay/</a><br>\nDockYard
      — <a href=\"https://DockYard.com/\" rel=\"nofollow\">https://DockYard.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nRailsConf — <a href=\"https://railsconf.com/\" rel=\"nofollow\">https://railsconf.com/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nEmber
      — <a href=\"https://emberjs.com/\" rel=\"nofollow\">https://emberjs.com/</a><br>\nLive
      View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a>
      <br>\nElixir Conf 2014 Keynote by Dave Thomas — <a href=\"https://www.youtube.com/watch?v=5hDVftaPQwY\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>\nSarah
      Drasner — <a href=\"https://sarahdrasnerdesign.com/\" rel=\"nofollow\">https://sarahdrasnerdesign.com/</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nProgramming
      Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nJason
      Goldberger — <a href=\"https://twitter.com/jsonlouis_\" rel=\"nofollow\">https://twitter.com/jsonlouis_</a></p><p>Special
      Guests: Alex Garibay and Mike Binns.</p>\n      "
  contentEncoded: "\n        <p>Today on the show, we’re joined by Mike Binns and
    Alex Garibay of DockYard. In this episode, Mike and Alex share their journeys
    of how they came to work at DockYard and give us a view into DockYard’s hiring
    and training processes, systems, and philosophies. Here they share what they enjoy
    most about working at DockYard and their emphasis on being supported in your continual
    growth as an employee and human being.</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>Find
    out how Mike and Alex both got their jobs at DockYard in 2016.</li>\n<li>Working
    for a fully remote company: Mike and Alex share their experiences.</li>\n<li>The
    amount of languages used at DockYard and what the day-to-day looks like.</li>\n<li>React
    VS Ember: Find out DockYard’s opinion on the debate between the two.</li>\n<li>How
    to know whether you should be using JavaScript or Live View on your projects.</li>\n<li>The
    importance of inclusion and empowerment in the onboarding process at DockYard.</li>\n<li>How
    to support and train new employees in “soft” skills, such as communication.</li>\n<li>Personal
    strategies Mike and Alex use to help “soften the blow” of feedback and criticism.
    </li>\n<li>Discover what DockYard does to support the learning growth of their
    employees.</li>\n<li>Learn more about DockYard Friday and the exciting projects
    that have emerged from it.</li>\n<li>Helpful resources for learning Elixir and
    how to remain a curious learner as a developer.</li>\n<li>Find out the top skills
    that make a great engineering manager at DockYard today.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Mike Binns on Twitter — <a href=\"https://twitter.com/1stAvenger\"
    rel=\"nofollow\">https://twitter.com/1stAvenger</a><br>\nMike Binns on LinkedIn
    — <a href=\"https://www.linkedin.com/in/mikebinns\" rel=\"nofollow\">https://www.linkedin.com/in/mikebinns</a><br>\nAlex
    Garibay — <a href=\"https://alexgaribay.com/\" rel=\"nofollow\">https://alexgaribay.com/</a><br>\nAlex
    Garibay on Twitter — <a href=\"https://twitter.com/_AlexGaribay\" rel=\"nofollow\">https://twitter.com/_AlexGaribay</a><br>\nAlex
    Garibay on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandergaribay/\"
    rel=\"nofollow\">https://www.linkedin.com/in/alexandergaribay/</a><br>\nDockYard
    — <a href=\"https://DockYard.com/\" rel=\"nofollow\">https://DockYard.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nRailsConf — <a href=\"https://railsconf.com/\" rel=\"nofollow\">https://railsconf.com/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nEmber
    — <a href=\"https://emberjs.com/\" rel=\"nofollow\">https://emberjs.com/</a><br>\nLive
    View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a>
    <br>\nElixir Conf 2014 Keynote by Dave Thomas — <a href=\"https://www.youtube.com/watch?v=5hDVftaPQwY\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>\nSarah Drasner
    — <a href=\"https://sarahdrasnerdesign.com/\" rel=\"nofollow\">https://sarahdrasnerdesign.com/</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nProgramming
    Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nJason
    Goldberger — <a href=\"https://twitter.com/jsonlouis_\" rel=\"nofollow\">https://twitter.com/jsonlouis_</a></p><p>Special
    Guests: Alex Garibay and Mike Binns.</p>\n      "
- title: Sean Lewis from Divvy on Performance, Hiring and Training
  slug: s3e12-divvy
  link: https://smartlogic.io/podcast/elixir-wizards/s3e12-divvy
  guid: 37389f65-249a-4e59-bdac-c71a646d2b23
  pubDate: Thu, 13 Feb 2020 06:00:00 -0500
  pubDateFriendly: February 13, 2020
  description: "Today on Elixir Wizards we are delighted to be joined by Sean Lewis,
    a senior backend architect at Divvy. One of the many impressive facts about Sean
    is that he is entirely self-taught, from dabbling in Python and coding to eventually
    writing a bunch of Ruby tests and working his way up in the product development
    sphere. In his free time, he likes to play around with electronics and work on
    other tech-related projects such as developing custom smart home devices. In this
    episode, Sean discusses his recent Meetup talk on the implementation of Broadway
    and explains Divvy’s tech stack choices that include React, Elixir, and Python.
    He dives into the topic of hiring for Elixir, outlining the challenges and providing
    strategies and resources to equip new developers in the area of functional programming.
    For Sean, the most important aspect of onboarding is teaching newcomers to ask
    the right questions since this is the foundation of the problem-solving process.
    He shares about Divvy’s approach to recruitment, his role as mentor, how they
    go about retaining and continuously growing their developers, the importance of
    being teachable, and then Sean concludes by giving listeners practical advice
    for ensuring data fidelity.\nKey Points From This Episode:\nSean’s self-taught
    journey and role as senior backend architect at Divvy. \nThe smart home projects
    he has recently worked on, including a smart garage. \nAn overview of Broadway
    and Sean’s Meetup talk regarding implementation. \nThe straightforward tech stack
    at Divvy: React, Elixir, and Python. \nThe difficulty of hiring for Elixir and
    finding fintech companies that use Elixir. \nStrategies and resources for training
    new engineers on Elixir and functional programming. \nWhy fintech works well with
    functional programming in the context of authorization. \nTraining state-minimization
    as a primary concern.\nOnboarding: a process of teaching developers to ask the
    right questions. \nDivvy’s approach to finding and recruiting new employees. \nThoughts
    on why so many Utahn companies use Elixir and the city’s exponential growth. \nHow
    Sean was recruited by Divvy, his progression to architect, and his role as a mentor.
    \nCritical practices for onboarding developers, including assimilating them into
    the culture. \nHow Devvy continues to grow and retain its engineers. \nThe importance
    of challenging yourself, constantly learning, and staying teachable. \nImplementing
    high-quality checkpoints and other advice for ensuring data fidelity. \nLinks
    Mentioned in Today’s Episode:\nSean Lewis on LinkedIn — https://www.linkedin.com/in/sean-lewis-40375077/\nSean
    Lewis on Twitter — https://twitter.com/fricsean?lang=en\nSean Lewis on GitHub
    — https://github.com/SophisticaSean\nDivvy — https://getdivvy.com\nRuby — https://www.ruby-lang.org/en/\nBroadway
    — https://hexdocs.pm/broadway/amazon-sqs.html\nUtah Elixir Meetup — https://www.meetup.com/utah-elixir\nReact
    — https://reactjs.org\nElixir — https://elixir-lang.org\nSusumu Yamazaki on Twitter
    — https://twitter.com/zacky1972\nDomain Modeling Made Functional — https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\nSlack
    — https://slack.com/\nMongoDB — https://www.mongodb.com\nPostgreSQL — https://www.postgresql.org\nElixir
    Wizards Podcast — https://podcast.smartlogic.io\nSmartLogic — https://smartlogic.io/
    \n Special Guest: Sean Lewis.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+8xhggMcK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37389f65-249a-4e59-bdac-c71a646d2b23.mp3
    length: '50451167'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards we are delighted to be joined by Sean Lewis,
      a senior backend architect at Divvy. One of the many impressive facts about
      Sean is that he is entirely self-taught, from dabbling in Python and coding
      to eventually writing a bunch of Ruby tests and working his way up in the product
      development sphere. In his free time, he likes to play around with electronics
      and work on other tech-related projects such as developing custom smart home
      devices. In this episode, Sean discusses his recent Meetup talk on the implementation
      of Broadway and explains Divvy’s tech stack choices that include React, Elixir,
      and Python. He dives into the topic of hiring for Elixir, outlining the challenges
      and providing strategies and resources to equip new developers in the area of
      functional programming.
    duration: '34:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37389f65-249a-4e59-bdac-c71a646d2b23/cover.jpg?v=2
    summary: "\n        <p>Today on Elixir Wizards we are delighted to be joined by
      Sean Lewis, a senior backend architect at Divvy. One of the many impressive
      facts about Sean is that he is entirely self-taught, from dabbling in Python
      and coding to eventually writing a bunch of Ruby tests and working his way up
      in the product development sphere. In his free time, he likes to play around
      with electronics and work on other tech-related projects such as developing
      custom smart home devices. In this episode, Sean discusses his recent Meetup
      talk on the implementation of Broadway and explains Divvy’s tech stack choices
      that include React, Elixir, and Python. He dives into the topic of hiring for
      Elixir, outlining the challenges and providing strategies and resources to equip
      new developers in the area of functional programming. For Sean, the most important
      aspect of onboarding is teaching newcomers to ask the right questions since
      this is the foundation of the problem-solving process. He shares about Divvy’s
      approach to recruitment, his role as mentor, how they go about retaining and
      continuously growing their developers, the importance of being teachable, and
      then Sean concludes by giving listeners practical advice for ensuring data fidelity.</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Sean’s self-taught journey
      and role as senior backend architect at Divvy. </li>\n<li>The smart home projects
      he has recently worked on, including a smart garage. </li>\n<li>An overview
      of Broadway and Sean’s Meetup talk regarding implementation. </li>\n<li>The
      straightforward tech stack at Divvy: React, Elixir, and Python. </li>\n<li>The
      difficulty of hiring for Elixir and finding fintech companies that use Elixir.
      </li>\n<li>Strategies and resources for training new engineers on Elixir and
      functional programming. </li>\n<li>Why fintech works well with functional programming
      in the context of authorization. </li>\n<li>Training state-minimization as a
      primary concern.</li>\n<li>Onboarding: a process of teaching developers to ask
      the right questions. </li>\n<li>Divvy’s approach to finding and recruiting new
      employees. </li>\n<li>Thoughts on why so many Utahn companies use Elixir and
      the city’s exponential growth. </li>\n<li>How Sean was recruited by Divvy, his
      progression to architect, and his role as a mentor. </li>\n<li>Critical practices
      for onboarding developers, including assimilating them into the culture. </li>\n<li>How
      Devvy continues to grow and retain its engineers. </li>\n<li>The importance
      of challenging yourself, constantly learning, and staying teachable. </li>\n<li>Implementing
      high-quality checkpoints and other advice for ensuring data fidelity. </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Sean Lewis on LinkedIn — <a
      href=\"https://www.linkedin.com/in/sean-lewis-40375077/\" rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nSean
      Lewis on Twitter — <a href=\"https://twitter.com/fricsean?lang=en\" rel=\"nofollow\">https://twitter.com/fricsean?lang=en</a><br>\nSean
      Lewis on GitHub — <a href=\"https://github.com/SophisticaSean\" rel=\"nofollow\">https://github.com/SophisticaSean</a><br>\nDivvy
      — <a href=\"https://getdivvy.com\" rel=\"nofollow\">https://getdivvy.com</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nBroadway
      — <a href=\"https://hexdocs.pm/broadway/amazon-sqs.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>\nUtah
      Elixir Meetup — <a href=\"https://www.meetup.com/utah-elixir\" rel=\"nofollow\">https://www.meetup.com/utah-elixir</a><br>\nReact
      — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nSusumu
      Yamazaki on Twitter — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nDomain
      Modeling Made Functional — <a href=\"https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\"
      rel=\"nofollow\">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nMongoDB
      — <a href=\"https://www.mongodb.com\" rel=\"nofollow\">https://www.mongodb.com</a><br>\nPostgreSQL
      — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Sean Lewis.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards we are delighted to be joined
    by Sean Lewis, a senior backend architect at Divvy. One of the many impressive
    facts about Sean is that he is entirely self-taught, from dabbling in Python and
    coding to eventually writing a bunch of Ruby tests and working his way up in the
    product development sphere. In his free time, he likes to play around with electronics
    and work on other tech-related projects such as developing custom smart home devices.
    In this episode, Sean discusses his recent Meetup talk on the implementation of
    Broadway and explains Divvy’s tech stack choices that include React, Elixir, and
    Python. He dives into the topic of hiring for Elixir, outlining the challenges
    and providing strategies and resources to equip new developers in the area of
    functional programming. For Sean, the most important aspect of onboarding is teaching
    newcomers to ask the right questions since this is the foundation of the problem-solving
    process. He shares about Divvy’s approach to recruitment, his role as mentor,
    how they go about retaining and continuously growing their developers, the importance
    of being teachable, and then Sean concludes by giving listeners practical advice
    for ensuring data fidelity.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Sean’s
    self-taught journey and role as senior backend architect at Divvy. </li>\n<li>The
    smart home projects he has recently worked on, including a smart garage. </li>\n<li>An
    overview of Broadway and Sean’s Meetup talk regarding implementation. </li>\n<li>The
    straightforward tech stack at Divvy: React, Elixir, and Python. </li>\n<li>The
    difficulty of hiring for Elixir and finding fintech companies that use Elixir.
    </li>\n<li>Strategies and resources for training new engineers on Elixir and functional
    programming. </li>\n<li>Why fintech works well with functional programming in
    the context of authorization. </li>\n<li>Training state-minimization as a primary
    concern.</li>\n<li>Onboarding: a process of teaching developers to ask the right
    questions. </li>\n<li>Divvy’s approach to finding and recruiting new employees.
    </li>\n<li>Thoughts on why so many Utahn companies use Elixir and the city’s exponential
    growth. </li>\n<li>How Sean was recruited by Divvy, his progression to architect,
    and his role as a mentor. </li>\n<li>Critical practices for onboarding developers,
    including assimilating them into the culture. </li>\n<li>How Devvy continues to
    grow and retain its engineers. </li>\n<li>The importance of challenging yourself,
    constantly learning, and staying teachable. </li>\n<li>Implementing high-quality
    checkpoints and other advice for ensuring data fidelity. </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Sean Lewis on LinkedIn — <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nSean
    Lewis on Twitter — <a href=\"https://twitter.com/fricsean?lang=en\" rel=\"nofollow\">https://twitter.com/fricsean?lang=en</a><br>\nSean
    Lewis on GitHub — <a href=\"https://github.com/SophisticaSean\" rel=\"nofollow\">https://github.com/SophisticaSean</a><br>\nDivvy
    — <a href=\"https://getdivvy.com\" rel=\"nofollow\">https://getdivvy.com</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nBroadway
    — <a href=\"https://hexdocs.pm/broadway/amazon-sqs.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>\nUtah
    Elixir Meetup — <a href=\"https://www.meetup.com/utah-elixir\" rel=\"nofollow\">https://www.meetup.com/utah-elixir</a><br>\nReact
    — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nSusumu
    Yamazaki on Twitter — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nDomain
    Modeling Made Functional — <a href=\"https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\"
    rel=\"nofollow\">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nMongoDB
    — <a href=\"https://www.mongodb.com\" rel=\"nofollow\">https://www.mongodb.com</a><br>\nPostgreSQL
    — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Sean Lewis.</p>\n      "
- title: Paul Schoenfelder and Hans Elias Josephsen on Lumen and Performance
  slug: s3e11-lumen
  link: https://smartlogic.io/podcast/elixir-wizards/s3e11-lumen
  guid: 5c493edc-c294-4fdd-b9f9-86a091800d96
  pubDate: Thu, 06 Feb 2020 06:00:00 -0500
  pubDateFriendly: February  6, 2020
  description: "In line with our current working-with-Elixir theme, today we’re talking
    about performance with Paul Schoenfelder and Hans Elias Josephsen from DockYard.
    The two have been working on Lumen, and in this episode, they discuss how this
    project is incorporated with WebAssembly, a binary instruction format that ultimately
    allows Elixir to be run in the browser and preserve the semantics of the language.
    Paul and Hans talk about the specific aspects of Lumen they are working on; the
    data flow and process of writing Elixir; and the compiler, interpreter and run-time
    functions involved. Joining in this conversation, you will also hear how they
    approached starting developing Lumen as a brand new compiler, researching, the
    aspects Paul wanted to tackle first, and when users can expect Lumen to be released.
    We also talk about the performance concerns they encountered along the way, the
    many reasons why Rust was their programming language of choice, and their thoughts
    on generic associated types in Rust. \nKey Points From This Episode:\n• How Paul
    and Hans got introduced to Elixir and working for DockYard.\n• An overview of
    what Lumen is and how it relates to WebAssembly. \n• WebAssembly code to run Elixir
    in the browser and preserve the semantics of the language. \n• The different aspects
    of the Lumen project that Paul and Hans are involved in. \n• The data flow and
    process when writing Elixir and how the compiler function features.\n• Taking
    advantage of optimizations that can be performed on the code that is generated.
    \n• An explanation of the interpreter and run-time parts of the project. \n• How
    they approached the major task of starting with a brand new compiler. \n• The
    process of researching and why Paul wanted to get a frontend in place first. \n•
    The production readiness of Lumen and when they expect to release it. \n• Performance
    concerns they encountered during development. \n• The relevance of code size for
    the WebAssembly backend to be usable.  \n• Why Rust was the best choice for building
    the compiler. \n• Using Elixir to generate a standard binary that can run on any
    machine. \n• A description of generic associated types in Rust and why they are
    controversial. \nLinks Mentioned in Today’s Episode:\nPaul Schoenfelder on LinkedIn
    — https://www.linkedin.com/in/gotbones/\nPaul Schoenfelder on Twitter — https://twitter.com/gotbones?lang=en\nHans
    Elias Josephsen on Twitter — https://twitter.com/hansihe\nDockYard — https://dockyard.com\nElixir
    — https://elixir-lang.org\nWebAssembly — https://webassembly.org\nRust — https://www.rust-lang.org\nJavaScript
    — https://www.javascript.com\nC++ — http://www.cplusplus.com\nSmartLogic — https://smartlogic.io/
    \n Special Guests: Hans Elias Josephsen and Paul Schoenfelder.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+p3SQItBs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5c493edc-c294-4fdd-b9f9-86a091800d96.mp3
    length: '75674955'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Paul Schoenfelder and Hans Elias Josephsen from DockYard have been working
      on Lumen, and in this episode, we discuss how this project is incorporated with
      WebAssembly, a binary instruction format that ultimately allows Elixir to be
      run in the browser and preserve the semantics of the language. We talk specifics
      - the data flow and process of writing Elixir, the compiler, interpreter, and
      run-time functions involved, Rust as the programming language of choice, and
      when users can expect Lumen to be released.
    duration: '51:59'
    explicit: 'no'
    keywords: elixir, lumen, rust
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5c493edc-c294-4fdd-b9f9-86a091800d96/cover.jpg?v=2
    summary: "\n        <p>In line with our current working-with-Elixir theme, today
      we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen
      from DockYard. The two have been working on Lumen, and in this episode, they
      discuss how this project is incorporated with WebAssembly, a binary instruction
      format that ultimately allows Elixir to be run in the browser and preserve the
      semantics of the language. Paul and Hans talk about the specific aspects of
      Lumen they are working on; the data flow and process of writing Elixir; and
      the compiler, interpreter and run-time functions involved. Joining in this conversation,
      you will also hear how they approached starting developing Lumen as a brand
      new compiler, researching, the aspects Paul wanted to tackle first, and when
      users can expect Lumen to be released. We also talk about the performance concerns
      they encountered along the way, the many reasons why Rust was their programming
      language of choice, and their thoughts on generic associated types in Rust.
      </p>\n\n<p>Key Points From This Episode:</p>\n\n<p>• How Paul and Hans got introduced
      to Elixir and working for DockYard.<br>\n• An overview of what Lumen is and
      how it relates to WebAssembly. <br>\n• WebAssembly code to run Elixir in the
      browser and preserve the semantics of the language. <br>\n• The different aspects
      of the Lumen project that Paul and Hans are involved in. <br>\n• The data flow
      and process when writing Elixir and how the compiler function features.<br>\n•
      Taking advantage of optimizations that can be performed on the code that is
      generated. <br>\n• An explanation of the interpreter and run-time parts of the
      project. <br>\n• How they approached the major task of starting with a brand
      new compiler. <br>\n• The process of researching and why Paul wanted to get
      a frontend in place first. <br>\n• The production readiness of Lumen and when
      they expect to release it. <br>\n• Performance concerns they encountered during
      development. <br>\n• The relevance of code size for the WebAssembly backend
      to be usable.<br><br>\n• Why Rust was the best choice for building the compiler.
      <br>\n• Using Elixir to generate a standard binary that can run on any machine.
      <br>\n• A description of generic associated types in Rust and why they are controversial.
      </p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Paul Schoenfelder on
      LinkedIn — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nPaul
      Schoenfelder on Twitter — <a href=\"https://twitter.com/gotbones?lang=en\" rel=\"nofollow\">https://twitter.com/gotbones?lang=en</a><br>\nHans
      Elias Josephsen on Twitter — <a href=\"https://twitter.com/hansihe\" rel=\"nofollow\">https://twitter.com/hansihe</a><br>\nDockYard
      — <a href=\"https://dockyard.com\" rel=\"nofollow\">https://dockyard.com</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nWebAssembly
      — <a href=\"https://webassembly.org\" rel=\"nofollow\">https://webassembly.org</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nC++
      — <a href=\"http://www.cplusplus.com\" rel=\"nofollow\">http://www.cplusplus.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>\n      "
  contentEncoded: "\n        <p>In line with our current working-with-Elixir theme,
    today we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen
    from DockYard. The two have been working on Lumen, and in this episode, they discuss
    how this project is incorporated with WebAssembly, a binary instruction format
    that ultimately allows Elixir to be run in the browser and preserve the semantics
    of the language. Paul and Hans talk about the specific aspects of Lumen they are
    working on; the data flow and process of writing Elixir; and the compiler, interpreter
    and run-time functions involved. Joining in this conversation, you will also hear
    how they approached starting developing Lumen as a brand new compiler, researching,
    the aspects Paul wanted to tackle first, and when users can expect Lumen to be
    released. We also talk about the performance concerns they encountered along the
    way, the many reasons why Rust was their programming language of choice, and their
    thoughts on generic associated types in Rust. </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<p>• How Paul and Hans got introduced to Elixir and working for
    DockYard.<br>\n• An overview of what Lumen is and how it relates to WebAssembly.
    <br>\n• WebAssembly code to run Elixir in the browser and preserve the semantics
    of the language. <br>\n• The different aspects of the Lumen project that Paul
    and Hans are involved in. <br>\n• The data flow and process when writing Elixir
    and how the compiler function features.<br>\n• Taking advantage of optimizations
    that can be performed on the code that is generated. <br>\n• An explanation of
    the interpreter and run-time parts of the project. <br>\n• How they approached
    the major task of starting with a brand new compiler. <br>\n• The process of researching
    and why Paul wanted to get a frontend in place first. <br>\n• The production readiness
    of Lumen and when they expect to release it. <br>\n• Performance concerns they
    encountered during development. <br>\n• The relevance of code size for the WebAssembly
    backend to be usable.<br><br>\n• Why Rust was the best choice for building the
    compiler. <br>\n• Using Elixir to generate a standard binary that can run on any
    machine. <br>\n• A description of generic associated types in Rust and why they
    are controversial. </p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Paul
    Schoenfelder on LinkedIn — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nPaul
    Schoenfelder on Twitter — <a href=\"https://twitter.com/gotbones?lang=en\" rel=\"nofollow\">https://twitter.com/gotbones?lang=en</a><br>\nHans
    Elias Josephsen on Twitter — <a href=\"https://twitter.com/hansihe\" rel=\"nofollow\">https://twitter.com/hansihe</a><br>\nDockYard
    — <a href=\"https://dockyard.com\" rel=\"nofollow\">https://dockyard.com</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nWebAssembly
    — <a href=\"https://webassembly.org\" rel=\"nofollow\">https://webassembly.org</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nC++
    — <a href=\"http://www.cplusplus.com\" rel=\"nofollow\">http://www.cplusplus.com</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>\n      "
- title: Sophie DeBenedetto and Meryl Dakin on Training and Building Elixir Projects
    Under Constraints
  slug: s3e10-debenedetto-dakin
  link: https://smartlogic.io/podcast/elixir-wizards/s3e10-debenedetto-dakin
  guid: 37d41249-7185-40c3-a4c3-3d761103ed16
  pubDate: Thu, 30 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 30, 2020
  description: "Today on the show we are joined by Sophie DeBenedetto from GitHub
    and Meryl Dakin from Frame.io to talk about the processes involved in training
    others and building Elixir projects. They share about studying and working together
    at the Flatiron School and what they do now in their respective new roles at Github
    and Frame.io. During their time at Flatiron, they worked on various projects,
    often collaborating with engineering teams from other companies and having to
    train these team members in Elixir. They talk about how they managed to develop
    new features while simultaneously onboarding new people and getting everyone on
    the same page. For them, the pair programming model had been most beneficial,
    and they discuss the habits and practices they implemented to encourage team members,
    optimize each learning experience, and share knowledge during training events.
    Sophie and Meryl also share the Elixir-specific challenges they encountered while
    developing applications for 2U, how Elixir’s failure-first programming capability
    guided them, how they prepare for training workshops, and the productivity hacks
    that keep them focused and energized. \nKey Points From This Episode:\n• How Sophie
    and Meryl know each other from working and studying at the Flatiron School. \n•
    Frame.io as a tool that facilitates the communication between video editors and
    clients. \n• Meryl’s new role as a full-stack developer working with Elixir and
    React. \n• The projects they worked on at Flatiron and partnering with various
    companies like 2U. \n• Their secret to developing new features while also introducing
    new team members to Elixir.  \n• The benefits of pair programming and teaching
    a programming language to others. \n• Reserving time to celebrate wins and knowledge
    share during training events. \n• Key lessons they learned from their collaboration
    with the 2U team. \n• Elixir-specific challenges during the development of the
    applications project with 2U. \n• How Elixir’s failure-first programming capability
    ultimately helps developers. \n• Sophie and Meryl’s experience using LiveView
    at Flatiron and the problems encountered. \n• The work that went into preparing
    for training workshops. \n• Advice for teaching someone who is not technical to
    become a working developer.\n• Productivity hacks to stay focused and regain energy.
    \nLinks Mentioned in Today’s Episode:\nSophie DeBenedetto on LinkedIn — https://www.linkedin.com/in/sophiedebenedetto/\nSophie
    DeBenedetto on Twitter — https://twitter.com/sm_debenedetto\nMeryl Dakin in LinkedIn
    — https://www.linkedin.com/in/meryldakin/\nMeryl Dakin on Twitter — https://twitter.com/meryldakin\nEric
    Oestrich — https://oestrich.org\nFrame.io — https://frame.io\nGitHub — https://github.com\nFlatiron
    School — https://flatironschool.com\nElixir — https://elixir-lang.org\nReact —
    https://reactjs.org\n2U — https://2u.com\nKubernetes — https://kubernetes.io\nRuby
    — https://www.ruby-lang.org/en/\nElixir School — https://elixirschool.com/en/\nDrawing
    on the Right Side of the Brain — https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\nEtsy
    — https://www.etsy.com\nEMPEX NYC Conference — https://empex.co/nyc.html\nSmartLogic
    — https://smartlogic.io/ \n Special Guests: Meryl Dakin and Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vvRIuKz3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37d41249-7185-40c3-a4c3-3d761103ed16.mp3
    length: '65953230'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io talk about
      specific ways to develop new features while simultaneously managing team members
      and other projects. We discuss Elixir-specific challenges encountered while
      developing applications for 2U, how Elixir’s failure-first programming capability
      guided them, how they prepare for training workshops, and the productivity hacks
      that keep them focused and energized. '
    duration: '45:12'
    explicit: 'no'
    keywords: elixir, 2U,Frame.io,github
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37d41249-7185-40c3-a4c3-3d761103ed16/cover.jpg?v=2
    summary: "\n        <p>Today on the show we are joined by Sophie DeBenedetto from
      GitHub and Meryl Dakin from Frame.io to talk about the processes involved in
      training others and building Elixir projects. They share about studying and
      working together at the Flatiron School and what they do now in their respective
      new roles at Github and Frame.io. During their time at Flatiron, they worked
      on various projects, often collaborating with engineering teams from other companies
      and having to train these team members in Elixir. They talk about how they managed
      to develop new features while simultaneously onboarding new people and getting
      everyone on the same page. For them, the pair programming model had been most
      beneficial, and they discuss the habits and practices they implemented to encourage
      team members, optimize each learning experience, and share knowledge during
      training events. Sophie and Meryl also share the Elixir-specific challenges
      they encountered while developing applications for 2U, how Elixir’s failure-first
      programming capability guided them, how they prepare for training workshops,
      and the productivity hacks that keep them focused and energized. </p>\n\n<p>Key
      Points From This Episode:</p>\n\n<p>• How Sophie and Meryl know each other from
      working and studying at the Flatiron School. <br>\n• Frame.io as a tool that
      facilitates the communication between video editors and clients. <br>\n• Meryl’s
      new role as a full-stack developer working with Elixir and React. <br>\n• The
      projects they worked on at Flatiron and partnering with various companies like
      2U. <br>\n• Their secret to developing new features while also introducing new
      team members to Elixir.<br><br>\n• The benefits of pair programming and teaching
      a programming language to others. <br>\n• Reserving time to celebrate wins and
      knowledge share during training events. <br>\n• Key lessons they learned from
      their collaboration with the 2U team. <br>\n• Elixir-specific challenges during
      the development of the applications project with 2U. <br>\n• How Elixir’s failure-first
      programming capability ultimately helps developers. <br>\n• Sophie and Meryl’s
      experience using LiveView at Flatiron and the problems encountered. <br>\n•
      The work that went into preparing for training workshops. <br>\n• Advice for
      teaching someone who is not technical to become a working developer.<br>\n•
      Productivity hacks to stay focused and regain energy. </p>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
      DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
      Dakin in LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
      Dakin on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org\" rel=\"nofollow\">https://oestrich.org</a><br>\nFrame.io
      — <a href=\"https://frame.io\" rel=\"nofollow\">https://frame.io</a><br>\nGitHub
      — <a href=\"https://github.com\" rel=\"nofollow\">https://github.com</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com\" rel=\"nofollow\">https://flatironschool.com</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nReact
      — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\n2U
      — <a href=\"https://2u.com\" rel=\"nofollow\">https://2u.com</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io\" rel=\"nofollow\">https://kubernetes.io</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nDrawing
      on the Right Side of the Brain — <a href=\"https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\"
      rel=\"nofollow\">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>\nEtsy
      — <a href=\"https://www.etsy.com\" rel=\"nofollow\">https://www.etsy.com</a><br>\nEMPEX
      NYC Conference — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we are joined by Sophie DeBenedetto
    from GitHub and Meryl Dakin from Frame.io to talk about the processes involved
    in training others and building Elixir projects. They share about studying and
    working together at the Flatiron School and what they do now in their respective
    new roles at Github and Frame.io. During their time at Flatiron, they worked on
    various projects, often collaborating with engineering teams from other companies
    and having to train these team members in Elixir. They talk about how they managed
    to develop new features while simultaneously onboarding new people and getting
    everyone on the same page. For them, the pair programming model had been most
    beneficial, and they discuss the habits and practices they implemented to encourage
    team members, optimize each learning experience, and share knowledge during training
    events. Sophie and Meryl also share the Elixir-specific challenges they encountered
    while developing applications for 2U, how Elixir’s failure-first programming capability
    guided them, how they prepare for training workshops, and the productivity hacks
    that keep them focused and energized. </p>\n\n<p>Key Points From This Episode:</p>\n\n<p>•
    How Sophie and Meryl know each other from working and studying at the Flatiron
    School. <br>\n• Frame.io as a tool that facilitates the communication between
    video editors and clients. <br>\n• Meryl’s new role as a full-stack developer
    working with Elixir and React. <br>\n• The projects they worked on at Flatiron
    and partnering with various companies like 2U. <br>\n• Their secret to developing
    new features while also introducing new team members to Elixir.<br><br>\n• The
    benefits of pair programming and teaching a programming language to others. <br>\n•
    Reserving time to celebrate wins and knowledge share during training events. <br>\n•
    Key lessons they learned from their collaboration with the 2U team. <br>\n• Elixir-specific
    challenges during the development of the applications project with 2U. <br>\n•
    How Elixir’s failure-first programming capability ultimately helps developers.
    <br>\n• Sophie and Meryl’s experience using LiveView at Flatiron and the problems
    encountered. <br>\n• The work that went into preparing for training workshops.
    <br>\n• Advice for teaching someone who is not technical to become a working developer.<br>\n•
    Productivity hacks to stay focused and regain energy. </p>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
    DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
    Dakin in LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
    Dakin on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org\" rel=\"nofollow\">https://oestrich.org</a><br>\nFrame.io
    — <a href=\"https://frame.io\" rel=\"nofollow\">https://frame.io</a><br>\nGitHub
    — <a href=\"https://github.com\" rel=\"nofollow\">https://github.com</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com\" rel=\"nofollow\">https://flatironschool.com</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nReact
    — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\n2U
    — <a href=\"https://2u.com\" rel=\"nofollow\">https://2u.com</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io\" rel=\"nofollow\">https://kubernetes.io</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nDrawing
    on the Right Side of the Brain — <a href=\"https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\"
    rel=\"nofollow\">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>\nEtsy
    — <a href=\"https://www.etsy.com\" rel=\"nofollow\">https://www.etsy.com</a><br>\nEMPEX
    NYC Conference — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>\n      "
- title: Brooklyn Zelenka on Functional Programming
  slug: s3e9-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka
  guid: 590ef7b4-3a91-4c74-9325-2568d7adecdb
  pubDate: Thu, 23 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 23, 2020
  description: "In today’s episode we have one of our favorite recurring guests, Brooklyn
    Zelenka, joining us once again! Brooklyn has been on the show in both the first
    and second seasons to speak about Elixir and functional programming. In those
    conversations, it came up that this topic is far from exhausted, and since Season
    3's theme is working with Elixir, we thought it would be great to have Brooklyn
    on for a third time. Today, Brooklyn does not speak to Elixir specifically though,
    but on functional programming more broadly. Fission, her company which is working
    on developing next-generation hostless apps, actually uses Haskel, but Brooklyn
    has a ton of experience across the board. She gives us some great insights into
    what makes the functional versus OOP paradigm great and helps us to understand
    some of the inner workings of both worlds, talking about abstraction, application,
    data orientation, and more. Interestingly, Brooklyn does employ some imperative
    programming in her company through the use of Typescript, but uses a functional
    style to get around the context switch. We spend some time toward the end of the
    show digging deeper into macros, and Brooklyn helps to revise understandings of
    them as code which writes more code as well as clarifies the term 'homoiconic'
    as it relates to ASTs. Brooklyn covers a whole lot more today so hop on for a
    deep dive into functional programming with today's great guest.\nKey Points From
    This Episode:\n• Why Brooklyn uses FPE: it can be reused and reasoned about.\n•
    Two things that functions provide: abstraction and application.\n• Data orientation
    and hiding information: imperative vs functional paradigms.\n• Understanding imperative
    programming: it’s less structured and hard to reason about.\n• Challenges experienced
    imperative programmers face with functional programming.\n• Differences between
    Elixir, Erlang, Haskel, Elm, and Clojure.\n• Using Clojure: tradeoffs, distinctions,
    tooling, flexibility, and compatibility with Java.\n• The language Brooklyn could
    use if only one existed: Racket.\n• Bridging functional and imperative paradigms
    through disciplined use of style.\n• Segfaults in Haskell related to its compatibility
    with lib C.\n• How to use Musl instead of lib C by employing docker files.\n•
    Algebraic types and why static types aren’t hindrances in functional languages.\n•
    Preferences for tests or proofs and their role in finding types valuable.\n• Macros
    as compile-time functions that are difficult to debug.\n• A definition of a ‘homoiconic’:
    high-level syntax which represents the AST.\n• What makes C macros different from
    Lisp ones.\n• Architecture in Elixir and the need for a more user-friendly Haskell.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nBrooklyn
    Zelenka on LinkedIn — https://www.linkedin.com/in/brooklynzelenka/\nFission —
    https://fission.codes/\nSeven Languages in Seven Weeks — https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\nChris
    Keathley — https://keathley.io/\nHackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nPaul
    Graham — http://www.paulgraham.com/\n Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+P6UbhHVA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/590ef7b4-3a91-4c74-9325-2568d7adecdb.mp3
    length: '57610524'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: In today’s episode we have one of our favorite recurring guests, Brooklyn
      Zelenka, joining us once again! Brooklyn has been on the show in both the first
      and second seasons to speak about Elixir and functional programming. In those
      conversations, it came up that this topic is far from exhausted, and since Season
      3's theme is working with Elixir, we thought it would be great to have Brooklyn
      on for a third time. Today, Brooklyn does not speak to Elixir specifically though,
      but on functional programming more broadly.
    duration: '39:26'
    explicit: 'no'
    keywords: elixir, phoenix, fission
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/590ef7b4-3a91-4c74-9325-2568d7adecdb/cover.jpg?v=2
    summary: "\n        <p>In today’s episode we have one of our favorite recurring
      guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show
      in both the first and second seasons to speak about Elixir and functional programming.
      In those conversations, it came up that this topic is far from exhausted, and
      since Season 3&#39;s theme is working with Elixir, we thought it would be great
      to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir
      specifically though, but on functional programming more broadly. Fission, her
      company which is working on developing next-generation hostless apps, actually
      uses Haskel, but Brooklyn has a ton of experience across the board. She gives
      us some great insights into what makes the functional versus OOP paradigm great
      and helps us to understand some of the inner workings of both worlds, talking
      about abstraction, application, data orientation, and more. Interestingly, Brooklyn
      does employ some imperative programming in her company through the use of Typescript,
      but uses a functional style to get around the context switch. We spend some
      time toward the end of the show digging deeper into macros, and Brooklyn helps
      to revise understandings of them as code which writes more code as well as clarifies
      the term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole
      lot more today so hop on for a deep dive into functional programming with today&#39;s
      great guest.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>•
      Why Brooklyn uses FPE: it can be reused and reasoned about.<br>\n• Two things
      that functions provide: abstraction and application.<br>\n• Data orientation
      and hiding information: imperative vs functional paradigms.<br>\n• Understanding
      imperative programming: it’s less structured and hard to reason about.<br>\n•
      Challenges experienced imperative programmers face with functional programming.<br>\n•
      Differences between Elixir, Erlang, Haskel, Elm, and Clojure.<br>\n• Using Clojure:
      tradeoffs, distinctions, tooling, flexibility, and compatibility with Java.<br>\n•
      The language Brooklyn could use if only one existed: Racket.<br>\n• Bridging
      functional and imperative paradigms through disciplined use of style.<br>\n•
      Segfaults in Haskell related to its compatibility with lib C.<br>\n• How to
      use Musl instead of lib C by employing docker files.<br>\n• Algebraic types
      and why static types aren’t hindrances in functional languages.<br>\n• Preferences
      for tests or proofs and their role in finding types valuable.<br>\n• Macros
      as compile-time functions that are difficult to debug.<br>\n• A definition of
      a ‘homoiconic’: high-level syntax which represents the AST.<br>\n• What makes
      C macros different from Lisp ones.<br>\n• Architecture in Elixir and the need
      for a more user-friendly Haskell.</p>\n\n<p><strong>Links Mentioned in Today’s
      Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBrooklyn Zelenka on LinkedIn
      — <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nFission
      — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nSeven
      Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
      rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nHackers
      and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a></p><p>Special
      Guest: Brooklyn Zelenka.</p>\n      "
  contentEncoded: "\n        <p>In today’s episode we have one of our favorite recurring
    guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show
    in both the first and second seasons to speak about Elixir and functional programming.
    In those conversations, it came up that this topic is far from exhausted, and
    since Season 3&#39;s theme is working with Elixir, we thought it would be great
    to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir
    specifically though, but on functional programming more broadly. Fission, her
    company which is working on developing next-generation hostless apps, actually
    uses Haskel, but Brooklyn has a ton of experience across the board. She gives
    us some great insights into what makes the functional versus OOP paradigm great
    and helps us to understand some of the inner workings of both worlds, talking
    about abstraction, application, data orientation, and more. Interestingly, Brooklyn
    does employ some imperative programming in her company through the use of Typescript,
    but uses a functional style to get around the context switch. We spend some time
    toward the end of the show digging deeper into macros, and Brooklyn helps to revise
    understandings of them as code which writes more code as well as clarifies the
    term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole lot more
    today so hop on for a deep dive into functional programming with today&#39;s great
    guest.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>• Why
    Brooklyn uses FPE: it can be reused and reasoned about.<br>\n• Two things that
    functions provide: abstraction and application.<br>\n• Data orientation and hiding
    information: imperative vs functional paradigms.<br>\n• Understanding imperative
    programming: it’s less structured and hard to reason about.<br>\n• Challenges
    experienced imperative programmers face with functional programming.<br>\n• Differences
    between Elixir, Erlang, Haskel, Elm, and Clojure.<br>\n• Using Clojure: tradeoffs,
    distinctions, tooling, flexibility, and compatibility with Java.<br>\n• The language
    Brooklyn could use if only one existed: Racket.<br>\n• Bridging functional and
    imperative paradigms through disciplined use of style.<br>\n• Segfaults in Haskell
    related to its compatibility with lib C.<br>\n• How to use Musl instead of lib
    C by employing docker files.<br>\n• Algebraic types and why static types aren’t
    hindrances in functional languages.<br>\n• Preferences for tests or proofs and
    their role in finding types valuable.<br>\n• Macros as compile-time functions
    that are difficult to debug.<br>\n• A definition of a ‘homoiconic’: high-level
    syntax which represents the AST.<br>\n• What makes C macros different from Lisp
    ones.<br>\n• Architecture in Elixir and the need for a more user-friendly Haskell.</p>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBrooklyn Zelenka on LinkedIn
    — <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nFission
    — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nSeven
    Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
    rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nHackers
    and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a></p><p>Special
    Guest: Brooklyn Zelenka.</p>\n      "
- title: Bruce and Maggie Tate from Groxio on Training
  slug: s3e8-groxio
  link: https://smartlogic.io/podcast/elixir-wizards/s3e8-groxio
  guid: f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b
  pubDate: Thu, 16 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 16, 2020
  description: "Groxio is a great platform that allows programmers to learn new languages
    easily and broaden their horizons. Our guests today are the team behind Groxio,
    Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics
    of what they do, from how they got into the Elixir world and founded Groxio to
    the conferences they run and the books they have published. We also talk about
    the benefits of learning multiple languages and Bruce makes a strong argument
    for the influence that smaller coding languages have had on his Elixir skills.
    Maggie and Bruce open up about having a professional and personal partnership
    and how they manage their marriage and businesses side by side. To finish off
    we hear about all the exciting things to expect at the Lonestar Conference this
    year and how it is going to be even better than last year's!\nKey Points From
    This Episode:\n• Bruce and Maggie's background in Elixir and how they started
    Groxio. \n• What sets Groxio apart from similar technical education companies.
    \ \n• The inspiration that Bruce got from the Crystal and Pony languages.\n• How
    curiosity and dopamine are linked; following new and interesting pathways. \n•
    Maggie and Bruce's personal and professional partnership and how they manage it.
    \n• The Elixir books that still need to be written and under-appreciated published
    ones.\n• A guide to Bruce's books and which to read for particular applications.
    \n• Running a conference; the stressful and fun parts for Maggie and Bruce.\n•
    Aspirations for the conferences and what to expect at this year's events. \n•
    Exciting speakers that will be appearing at the Lone Star Conference. \n• The
    controversy around the new Lone Star bat logo! \n• A few special plugs from our
    guests for things they are passionate about.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nBruce and Maggie Tate — https://grox.io/about\nBruce
    Tate on Twitter — https://twitter.com/redrapids\nMaggie Tate on Twitter — https://twitter.com/gardenertate\nGroxio
    — https://grox.io/\nGig City Elixir — https://www.gigcityelixir.com/\nLone Star
    Elixir — https://lonestarelixir.com/\nCrystal — https://crystal-lang.org/\nPony
    — https://www.ponylang.io/\nJoe Armstrong — https://joearms.github.io/\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\nDesigning
    Elixir Systems — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\nAndrea
    Leopardi — https://confengine.com/user/andrea-leopardi\n Special Guests: Bruce
    Tate and Maggie Tate.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6Uk0QuoV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b.mp3
    length: '55994278'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Groxio is a great platform that allows programmers to learn new languages
      easily and broaden their horizons. Our guests today are the team behind Groxio,
      Bruce and Maggie Tate! In our discussion, we cover the basics and the not so
      basics of what they do, from how they got into the Elixir world and founded
      Groxio to the conferences they run and the books they have published. '
    duration: '38:04'
    explicit: 'no'
    keywords: elixir, phoenix, groxio, lonestar elixir
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b/cover.jpg?v=2
    summary: "\n        <p>Groxio is a great platform that allows programmers to learn
      new languages easily and broaden their horizons. Our guests today are the team
      behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics
      and the not so basics of what they do, from how they got into the Elixir world
      and founded Groxio to the conferences they run and the books they have published.
      We also talk about the benefits of learning multiple languages and Bruce makes
      a strong argument for the influence that smaller coding languages have had on
      his Elixir skills. Maggie and Bruce open up about having a professional and
      personal partnership and how they manage their marriage and businesses side
      by side. To finish off we hear about all the exciting things to expect at the
      Lonestar Conference this year and how it is going to be even better than last
      year&#39;s!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>•
      Bruce and Maggie&#39;s background in Elixir and how they started Groxio. <br>\n•
      What sets Groxio apart from similar technical education companies.<br><br>\n•
      The inspiration that Bruce got from the Crystal and Pony languages.<br>\n• How
      curiosity and dopamine are linked; following new and interesting pathways. <br>\n•
      Maggie and Bruce&#39;s personal and professional partnership and how they manage
      it. <br>\n• The Elixir books that still need to be written and under-appreciated
      published ones.<br>\n• A guide to Bruce&#39;s books and which to read for particular
      applications. <br>\n• Running a conference; the stressful and fun parts for
      Maggie and Bruce.<br>\n• Aspirations for the conferences and what to expect
      at this year&#39;s events. <br>\n• Exciting speakers that will be appearing
      at the Lone Star Conference. <br>\n• The controversy around the new Lone Star
      bat logo! <br>\n• A few special plugs from our guests for things they are passionate
      about.</p>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nBruce and Maggie Tate — <a href=\"https://grox.io/about\" rel=\"nofollow\">https://grox.io/about</a><br>\nBruce
      Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
      Tate on Twitter — <a href=\"https://twitter.com/gardenertate\" rel=\"nofollow\">https://twitter.com/gardenertate</a><br>\nGroxio
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nGig
      City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nLone
      Star Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nCrystal
      — <a href=\"https://crystal-lang.org/\" rel=\"nofollow\">https://crystal-lang.org/</a><br>\nPony
      — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nJoe
      Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nDesigning
      Elixir Systems — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nAndrea
      Leopardi — <a href=\"https://confengine.com/user/andrea-leopardi\" rel=\"nofollow\">https://confengine.com/user/andrea-leopardi</a></p><p>Special
      Guests: Bruce Tate and Maggie Tate.</p>\n      "
  contentEncoded: "\n        <p>Groxio is a great platform that allows programmers
    to learn new languages easily and broaden their horizons. Our guests today are
    the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the
    basics and the not so basics of what they do, from how they got into the Elixir
    world and founded Groxio to the conferences they run and the books they have published.
    We also talk about the benefits of learning multiple languages and Bruce makes
    a strong argument for the influence that smaller coding languages have had on
    his Elixir skills. Maggie and Bruce open up about having a professional and personal
    partnership and how they manage their marriage and businesses side by side. To
    finish off we hear about all the exciting things to expect at the Lonestar Conference
    this year and how it is going to be even better than last year&#39;s!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<p>• Bruce and Maggie&#39;s background
    in Elixir and how they started Groxio. <br>\n• What sets Groxio apart from similar
    technical education companies.<br><br>\n• The inspiration that Bruce got from
    the Crystal and Pony languages.<br>\n• How curiosity and dopamine are linked;
    following new and interesting pathways. <br>\n• Maggie and Bruce&#39;s personal
    and professional partnership and how they manage it. <br>\n• The Elixir books
    that still need to be written and under-appreciated published ones.<br>\n• A guide
    to Bruce&#39;s books and which to read for particular applications. <br>\n• Running
    a conference; the stressful and fun parts for Maggie and Bruce.<br>\n• Aspirations
    for the conferences and what to expect at this year&#39;s events. <br>\n• Exciting
    speakers that will be appearing at the Lone Star Conference. <br>\n• The controversy
    around the new Lone Star bat logo! <br>\n• A few special plugs from our guests
    for things they are passionate about.</p>\n\n<p><strong>Links Mentioned in Today’s
    Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nBruce and Maggie Tate — <a href=\"https://grox.io/about\" rel=\"nofollow\">https://grox.io/about</a><br>\nBruce
    Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
    Tate on Twitter — <a href=\"https://twitter.com/gardenertate\" rel=\"nofollow\">https://twitter.com/gardenertate</a><br>\nGroxio
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nGig
    City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nLone
    Star Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nCrystal
    — <a href=\"https://crystal-lang.org/\" rel=\"nofollow\">https://crystal-lang.org/</a><br>\nPony
    — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nJoe
    Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nDesigning
    Elixir Systems — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nAndrea
    Leopardi — <a href=\"https://confengine.com/user/andrea-leopardi\" rel=\"nofollow\">https://confengine.com/user/andrea-leopardi</a></p><p>Special
    Guests: Bruce Tate and Maggie Tate.</p>\n      "
- title: Dan Ivovich from SmartLogic on Hiring and Training
  slug: s3e7-ivovich
  link: https://smartlogic.io/podcast/elixir-wizards/s3e7-ivovich
  guid: ea443f10-25a6-4570-9fe8-20e7f6624671
  pubDate: Thu, 09 Jan 2020 06:00:00 -0500
  pubDateFriendly: January  9, 2020
  description: "On today's show, we are joined by Dan Ivovich from our team here at
    SmartLogic! Dan is the Director of Development Operations and has already been
    a guest and cohost a few times on the show. Today we are talking about hiring
    and training and his experience with these tasks at the company and especially
    concerning Elixir. We discuss the challenges Dan has faced in recruiting and the
    ways in which SmartLogic has lined up resumes and possible candidates through
    events and meetups. Dan explains some of the difficulties that are common for
    programmers transitioning into Elixir and how the company approaches the tasks
    of onboarding and ongoing support. We also get into Dan's favorite resources and
    tools for staying abreast of Elixir and his recommendations for practices to learn
    fast as a newcomer before he explains how he thinks about continual learning and
    expanding his own skillset. The conversation finishes with some thoughts and reflections
    on functional programming from our guest, so make sure to tune in for all of that
    and more!\nKey Points From This Episode:\nDan's role at SmartLogic and how he
    leads the team. \nRecruiting new employees; collecting resumes and attending events.
    \nChallenges posed by recruiting good Elixir programmers and who to look for.
    \ \nSticking points for people transitioning into Elixir from other languages.
    \nThe stack at SmartLogic and the number of projects based in Elixir. \nOnboarding
    at the company; skills that are transferable to Elixir. \nProfessional development
    and ongoing support for team members. \nDan's favorite tools and resources for
    learning Elixir. \nContinual learning and Dan's strategies for growing his skillset.\nA
    simple definition of functional programming and Dan's early experiences with it.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nDan
    Ivovich — https://www.danivovich.com/\nDan Ivovich on Twitter — https://twitter.com/danivovich\nElixirConf
    — https://elixirconf.com/events\nJava — https://www.java.com/\nRuby — https://www.ruby-lang.org/\nPython
    — https://www.python.org/\nRails — https://rubyonrails.org/\nRust — https://www.rust-lang.org/\nGO
    — https://golang.org/\nTwitch — https://www.twitch.tv/\nBruce Tate — https://codesync.global/speaker/bruce-tate/\nScala
    — https://www.scala-lang.org/ Special Guest: Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+HQLyl-6U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ea443f10-25a6-4570-9fe8-20e7f6624671.mp3
    length: '33899406'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'On today''s show, we are joined by Dan Ivovich from our team here at
      SmartLogic! Dan is the Director of Development Operations and has already been
      a guest and cohost a few times on the show. Today we are talking about hiring
      and training and his experience with these tasks at the company and especially
      concerning Elixir. '
    duration: '22:39'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ea443f10-25a6-4570-9fe8-20e7f6624671/cover.jpg?v=2
    summary: "\n        <p>On today&#39;s show, we are joined by Dan Ivovich from
      our team here at SmartLogic! Dan is the Director of Development Operations and
      has already been a guest and cohost a few times on the show. Today we are talking
      about hiring and training and his experience with these tasks at the company
      and especially concerning Elixir. We discuss the challenges Dan has faced in
      recruiting and the ways in which SmartLogic has lined up resumes and possible
      candidates through events and meetups. Dan explains some of the difficulties
      that are common for programmers transitioning into Elixir and how the company
      approaches the tasks of onboarding and ongoing support. We also get into Dan&#39;s
      favorite resources and tools for staying abreast of Elixir and his recommendations
      for practices to learn fast as a newcomer before he explains how he thinks about
      continual learning and expanding his own skillset. The conversation finishes
      with some thoughts and reflections on functional programming from our guest,
      so make sure to tune in for all of that and more!</p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>Dan&#39;s role at SmartLogic and
      how he leads the team. </li>\n<li>Recruiting new employees; collecting resumes
      and attending events. </li>\n<li>Challenges posed by recruiting good Elixir
      programmers and who to look for.<br></li>\n<li>Sticking points for people transitioning
      into Elixir from other languages. </li>\n<li>The stack at SmartLogic and the
      number of projects based in Elixir. </li>\n<li>Onboarding at the company; skills
      that are transferable to Elixir. </li>\n<li>Professional development and ongoing
      support for team members. </li>\n<li>Dan&#39;s favorite tools and resources
      for learning Elixir. </li>\n<li>Continual learning and Dan&#39;s strategies
      for growing his skillset.</li>\n<li>A simple definition of functional programming
      and Dan&#39;s early experiences with it. </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDan Ivovich — <a href=\"https://www.danivovich.com/\"
      rel=\"nofollow\">https://www.danivovich.com/</a><br>\nDan Ivovich on Twitter
      — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nJava
      — <a href=\"https://www.java.com/\" rel=\"nofollow\">https://www.java.com/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/\" rel=\"nofollow\">https://www.ruby-lang.org/</a><br>\nPython
      — <a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a><br>\nRails
      — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nRust
      — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nGO
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nTwitch
      — <a href=\"https://www.twitch.tv/\" rel=\"nofollow\">https://www.twitch.tv/</a><br>\nBruce
      Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nScala
      — <a href=\"https://www.scala-lang.org/\" rel=\"nofollow\">https://www.scala-lang.org/</a></p><p>Special
      Guest: Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>On today&#39;s show, we are joined by Dan Ivovich
    from our team here at SmartLogic! Dan is the Director of Development Operations
    and has already been a guest and cohost a few times on the show. Today we are
    talking about hiring and training and his experience with these tasks at the company
    and especially concerning Elixir. We discuss the challenges Dan has faced in recruiting
    and the ways in which SmartLogic has lined up resumes and possible candidates
    through events and meetups. Dan explains some of the difficulties that are common
    for programmers transitioning into Elixir and how the company approaches the tasks
    of onboarding and ongoing support. We also get into Dan&#39;s favorite resources
    and tools for staying abreast of Elixir and his recommendations for practices
    to learn fast as a newcomer before he explains how he thinks about continual learning
    and expanding his own skillset. The conversation finishes with some thoughts and
    reflections on functional programming from our guest, so make sure to tune in
    for all of that and more!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Dan&#39;s
    role at SmartLogic and how he leads the team. </li>\n<li>Recruiting new employees;
    collecting resumes and attending events. </li>\n<li>Challenges posed by recruiting
    good Elixir programmers and who to look for.<br></li>\n<li>Sticking points for
    people transitioning into Elixir from other languages. </li>\n<li>The stack at
    SmartLogic and the number of projects based in Elixir. </li>\n<li>Onboarding at
    the company; skills that are transferable to Elixir. </li>\n<li>Professional development
    and ongoing support for team members. </li>\n<li>Dan&#39;s favorite tools and
    resources for learning Elixir. </li>\n<li>Continual learning and Dan&#39;s strategies
    for growing his skillset.</li>\n<li>A simple definition of functional programming
    and Dan&#39;s early experiences with it. </li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDan Ivovich — <a href=\"https://www.danivovich.com/\"
    rel=\"nofollow\">https://www.danivovich.com/</a><br>\nDan Ivovich on Twitter —
    <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nJava
    — <a href=\"https://www.java.com/\" rel=\"nofollow\">https://www.java.com/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/\" rel=\"nofollow\">https://www.ruby-lang.org/</a><br>\nPython
    — <a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a><br>\nRails
    — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nRust
    — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nGO
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nTwitch
    — <a href=\"https://www.twitch.tv/\" rel=\"nofollow\">https://www.twitch.tv/</a><br>\nBruce
    Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nScala
    — <a href=\"https://www.scala-lang.org/\" rel=\"nofollow\">https://www.scala-lang.org/</a></p><p>Special
    Guest: Dan Ivovich.</p>\n      "
- title: Eric Meadows Jönsson on Hex and Working with Elixir
  slug: s3e6-jonsson
  link: https://smartlogic.io/podcast/elixir-wizards/s3e6-jonsson
  guid: ef0d105d-13f1-4803-8837-341f56782510
  pubDate: Thu, 02 Jan 2020 06:00:00 -0500
  pubDateFriendly: January  2, 2020
  description: "We are happy to be joined in this episode by Eric Meadows Jönsson,
    creator of the hexpm package manager, and an amazing resource who works tirelessly
    to build the Elixir community. Eric presently works at Brex and was part of the
    core team at Forza previously. In keeping with our current topic of all things
    working with Elixir, Eric takes a deep dive into the work he is doing to optimize
    various interfaces at Brex. He gives us the rundown on the static compile-time
    checking project he is working on, talking about his aims to build in different
    warnings and what we can expect from the new release in that regard. You’ll also
    hear about Eric’s journey learning Elixir and how he had to change his OOP mindset
    when he got introduced to functional programming at university. He shares the
    story behind hexpm and Mint, his thoughts about the future of Hex, and some of
    the processes around accessing the private repositories on its website. We also
    hear more about Eric’s hiring procedure while working at Forza, how he teaches
    functional programming to students at ElixirConf, and some of the major performance
    bottlenecks he experiences using Hex. Tap into the incredible resource that is
    Eric and hear more about how you can link with him online to learn further in
    the future by tuning in!\nKey Points From This Episode:\nJose Valim, the Ecto
    library, and Eric’s journey with Elixir since 2012 at a coding camp.\nEarly-stage
    static compile-time checks that Eric is adding to the compiler at Brex.\nWhether
    the static compile-time checks Eric is adding constitute a type system or not.\nStatic
    compile-time checks in the current system such as undefined function warnings.\nFeatures
    of the new static compile-time check release: refactored checks, etc.\nCurrently,
    these checks happen at compile-time, or when Elixir compiles into the byte code.\nWhether
    these checks will move into BEAM: currently it’s in Elixir and at an early stage.\nThe
    Erlang compiler already does type inference during compilation. \nEric’s Erlang
    proficiency and why he had to brush up on it through using Elixir.\nWhat makes
    Eric helpful with Hex: his debugging skills and availability to answer questions.\nHow
    Eric got started with Hex adding an intake for Git packages.\nThe story behind
    Hex regarding ties to Elixir and Devinus from Pool Boy.\nTodd’s perspective on
    Eric as a smart and nice mentor who sleeps very little.\nChanges that Eric sees
    happening in Elixir.\nHex will no longer support older Elixir versions so that
    it can enable better maintenance.\nAnother change will be a refactoring of the
    resolution version algorithm.\nSecurity-related updates that Todd has been working
    on.\nPrivate versus public repositories on the hex.pm website.\nHiring challenges
    at Forza and how Eric found the right team out of scarce people.\nEric looks for
    people who love being programmers and have a passion for learning.\nTactics Eric
    uses to train functional programming such as hosting ElixirConf workshops.\nImportant
    fundamentals in functional programming: using data structures to model data, etc.\nDifferences
    between functional and object-oriented programming: data vs classes.\nThe role
    of types in Eric coming to understand functional programming better.\nPerformance
    bottlenecks in Hex such as dependency resolution.\nHow every package manager/resolver
    compromises, exemplified by NPM and Rebar3.\nOrigins of Mint: wanting http2 support
    for Hex, and more.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nEric Meadows Jönsson on GitHub – https://github.com/ericmj\nEric Meadows Jönsson
    on Hexpm — https://hex.pm/users/ericmj\nBrex — https://brex.com/\nTodd Resudek
    on LinkedIn — https://www.linkedin.com/in/toddresudek\nJustus Eapen on LinkedIn
    — https://www.linkedin.com/in/justuseapen/\nEric Oestreich on LinkedIn — https://www.linkedin.com/in/eric-oestreich-8b55aab/\nhexpm
    on GitHub — https://github.com/hexpm\nGoogle Summer of Code — https://summerofcode.withgoogle.com/\nJose
    Valim on GitHib — https://github.com/josevalim\nPool Boy — https://github.com/devinus/poolboy\nDevin
    Alexander Torres — https://github.com/devinus\nVoitech — https://www.voitech.biz/\nHex
    — https://hex.pm/\nhexpm specifications — https://github.com/hexpm/specifications\nSlack
    — https://slack.com\nIRC —https://hexchat.github.io/\nForza — https://www.forzafootball.com/women\nElixirConf
    — https://elixirconf.com/events\nChalmers University — https://www.chalmers.se/en/Pages/default.aspx\nFastly
    — https://www.fastly.com/\nNPM — https://www.npmjs.com/\nRebar 3 — https://github.com/erlang/rebar3\nMint
    — https://www.mint-lang.com/\nRuby Gems — https://rubygems.org/\nAndrea Leopardi
    on GitHub — https://github.com/whatyouhide?tab=overview&org=ForzaElixir\n Special
    Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qKoOcl1H
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ef0d105d-13f1-4803-8837-341f56782510.mp3
    length: '54173956'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'We are happy to be joined in this episode by Eric Meadows Jönsson,
      creator of the hexpm package manager, and an amazing resource who works tirelessly
      to build the Elixir community. Eric presently works at Brex and was part of
      the core team at Forza previously. In keeping with our current topic of all
      things working with Elixir, Eric takes a deep dive into the work he is doing
      to optimize various interfaces at Brex. '
    duration: '37:10'
    explicit: 'no'
    keywords: hex, elixir, mint
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ef0d105d-13f1-4803-8837-341f56782510/cover.jpg?v=2
    summary: "\n        <p>We are happy to be joined in this episode by Eric Meadows
      Jönsson, creator of the hexpm package manager, and an amazing resource who works
      tirelessly to build the Elixir community. Eric presently works at Brex and was
      part of the core team at Forza previously. In keeping with our current topic
      of all things working with Elixir, Eric takes a deep dive into the work he is
      doing to optimize various interfaces at Brex. He gives us the rundown on the
      static compile-time checking project he is working on, talking about his aims
      to build in different warnings and what we can expect from the new release in
      that regard. You’ll also hear about Eric’s journey learning Elixir and how he
      had to change his OOP mindset when he got introduced to functional programming
      at university. He shares the story behind hexpm and Mint, his thoughts about
      the future of Hex, and some of the processes around accessing the private repositories
      on its website. We also hear more about Eric’s hiring procedure while working
      at Forza, how he teaches functional programming to students at ElixirConf, and
      some of the major performance bottlenecks he experiences using Hex. Tap into
      the incredible resource that is Eric and hear more about how you can link with
      him online to learn further in the future by tuning in!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Jose Valim, the Ecto library,
      and Eric’s journey with Elixir since 2012 at a coding camp.</li>\n<li>Early-stage
      static compile-time checks that Eric is adding to the compiler at Brex.</li>\n<li>Whether
      the static compile-time checks Eric is adding constitute a type system or not.</li>\n<li>Static
      compile-time checks in the current system such as undefined function warnings.</li>\n<li>Features
      of the new static compile-time check release: refactored checks, etc.</li>\n<li>Currently,
      these checks happen at compile-time, or when Elixir compiles into the byte code.</li>\n<li>Whether
      these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>\n<li>The
      Erlang compiler already does type inference during compilation. </li>\n<li>Eric’s
      Erlang proficiency and why he had to brush up on it through using Elixir.</li>\n<li>What
      makes Eric helpful with Hex: his debugging skills and availability to answer
      questions.</li>\n<li>How Eric got started with Hex adding an intake for Git
      packages.</li>\n<li>The story behind Hex regarding ties to Elixir and Devinus
      from Pool Boy.</li>\n<li>Todd’s perspective on Eric as a smart and nice mentor
      who sleeps very little.</li>\n<li>Changes that Eric sees happening in Elixir.</li>\n<li>Hex
      will no longer support older Elixir versions so that it can enable better maintenance.</li>\n<li>Another
      change will be a refactoring of the resolution version algorithm.</li>\n<li>Security-related
      updates that Todd has been working on.</li>\n<li>Private versus public repositories
      on the hex.pm website.</li>\n<li>Hiring challenges at Forza and how Eric found
      the right team out of scarce people.</li>\n<li>Eric looks for people who love
      being programmers and have a passion for learning.</li>\n<li>Tactics Eric uses
      to train functional programming such as hosting ElixirConf workshops.</li>\n<li>Important
      fundamentals in functional programming: using data structures to model data,
      etc.</li>\n<li>Differences between functional and object-oriented programming:
      data vs classes.</li>\n<li>The role of types in Eric coming to understand functional
      programming better.</li>\n<li>Performance bottlenecks in Hex such as dependency
      resolution.</li>\n<li>How every package manager/resolver compromises, exemplified
      by NPM and Rebar3.</li>\n<li>Origins of Mint: wanting http2 support for Hex,
      and more.</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nEric Meadows Jönsson on GitHub – <a href=\"https://github.com/ericmj\"
      rel=\"nofollow\">https://github.com/ericmj</a><br>\nEric Meadows Jönsson on
      Hexpm — <a href=\"https://hex.pm/users/ericmj\" rel=\"nofollow\">https://hex.pm/users/ericmj</a><br>\nBrex
      — <a href=\"https://brex.com/\" rel=\"nofollow\">https://brex.com/</a><br>\nTodd
      Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek</a><br>\nJustus
      Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nEric
      Oestreich on LinkedIn — <a href=\"https://www.linkedin.com/in/eric-oestreich-8b55aab/\"
      rel=\"nofollow\">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>\nhexpm
      on GitHub — <a href=\"https://github.com/hexpm\" rel=\"nofollow\">https://github.com/hexpm</a><br>\nGoogle
      Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\" rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nJose
      Valim on GitHib — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nPool
      Boy — <a href=\"https://github.com/devinus/poolboy\" rel=\"nofollow\">https://github.com/devinus/poolboy</a><br>\nDevin
      Alexander Torres — <a href=\"https://github.com/devinus\" rel=\"nofollow\">https://github.com/devinus</a><br>\nVoitech
      — <a href=\"https://www.voitech.biz/\" rel=\"nofollow\">https://www.voitech.biz/</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nhexpm
      specifications — <a href=\"https://github.com/hexpm/specifications\" rel=\"nofollow\">https://github.com/hexpm/specifications</a><br>\nSlack
      — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nIRC
      —<a href=\"https://hexchat.github.io/\" rel=\"nofollow\">https://hexchat.github.io/</a><br>\nForza
      — <a href=\"https://www.forzafootball.com/women\" rel=\"nofollow\">https://www.forzafootball.com/women</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nChalmers
      University — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\" rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nFastly
      — <a href=\"https://www.fastly.com/\" rel=\"nofollow\">https://www.fastly.com/</a><br>\nNPM
      — <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">https://www.npmjs.com/</a><br>\nRebar
      3 — <a href=\"https://github.com/erlang/rebar3\" rel=\"nofollow\">https://github.com/erlang/rebar3</a><br>\nMint
      — <a href=\"https://www.mint-lang.com/\" rel=\"nofollow\">https://www.mint-lang.com/</a><br>\nRuby
      Gems — <a href=\"https://rubygems.org/\" rel=\"nofollow\">https://rubygems.org/</a><br>\nAndrea
      Leopardi on GitHub — <a href=\"https://github.com/whatyouhide?tab=overview&org=ForzaElixir\"
      rel=\"nofollow\">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>We are happy to be joined in this episode by Eric
    Meadows Jönsson, creator of the hexpm package manager, and an amazing resource
    who works tirelessly to build the Elixir community. Eric presently works at Brex
    and was part of the core team at Forza previously. In keeping with our current
    topic of all things working with Elixir, Eric takes a deep dive into the work
    he is doing to optimize various interfaces at Brex. He gives us the rundown on
    the static compile-time checking project he is working on, talking about his aims
    to build in different warnings and what we can expect from the new release in
    that regard. You’ll also hear about Eric’s journey learning Elixir and how he
    had to change his OOP mindset when he got introduced to functional programming
    at university. He shares the story behind hexpm and Mint, his thoughts about the
    future of Hex, and some of the processes around accessing the private repositories
    on its website. We also hear more about Eric’s hiring procedure while working
    at Forza, how he teaches functional programming to students at ElixirConf, and
    some of the major performance bottlenecks he experiences using Hex. Tap into the
    incredible resource that is Eric and hear more about how you can link with him
    online to learn further in the future by tuning in!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>Jose Valim, the Ecto library, and
    Eric’s journey with Elixir since 2012 at a coding camp.</li>\n<li>Early-stage
    static compile-time checks that Eric is adding to the compiler at Brex.</li>\n<li>Whether
    the static compile-time checks Eric is adding constitute a type system or not.</li>\n<li>Static
    compile-time checks in the current system such as undefined function warnings.</li>\n<li>Features
    of the new static compile-time check release: refactored checks, etc.</li>\n<li>Currently,
    these checks happen at compile-time, or when Elixir compiles into the byte code.</li>\n<li>Whether
    these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>\n<li>The
    Erlang compiler already does type inference during compilation. </li>\n<li>Eric’s
    Erlang proficiency and why he had to brush up on it through using Elixir.</li>\n<li>What
    makes Eric helpful with Hex: his debugging skills and availability to answer questions.</li>\n<li>How
    Eric got started with Hex adding an intake for Git packages.</li>\n<li>The story
    behind Hex regarding ties to Elixir and Devinus from Pool Boy.</li>\n<li>Todd’s
    perspective on Eric as a smart and nice mentor who sleeps very little.</li>\n<li>Changes
    that Eric sees happening in Elixir.</li>\n<li>Hex will no longer support older
    Elixir versions so that it can enable better maintenance.</li>\n<li>Another change
    will be a refactoring of the resolution version algorithm.</li>\n<li>Security-related
    updates that Todd has been working on.</li>\n<li>Private versus public repositories
    on the hex.pm website.</li>\n<li>Hiring challenges at Forza and how Eric found
    the right team out of scarce people.</li>\n<li>Eric looks for people who love
    being programmers and have a passion for learning.</li>\n<li>Tactics Eric uses
    to train functional programming such as hosting ElixirConf workshops.</li>\n<li>Important
    fundamentals in functional programming: using data structures to model data, etc.</li>\n<li>Differences
    between functional and object-oriented programming: data vs classes.</li>\n<li>The
    role of types in Eric coming to understand functional programming better.</li>\n<li>Performance
    bottlenecks in Hex such as dependency resolution.</li>\n<li>How every package
    manager/resolver compromises, exemplified by NPM and Rebar3.</li>\n<li>Origins
    of Mint: wanting http2 support for Hex, and more.</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Meadows Jönsson on GitHub
    – <a href=\"https://github.com/ericmj\" rel=\"nofollow\">https://github.com/ericmj</a><br>\nEric
    Meadows Jönsson on Hexpm — <a href=\"https://hex.pm/users/ericmj\" rel=\"nofollow\">https://hex.pm/users/ericmj</a><br>\nBrex
    — <a href=\"https://brex.com/\" rel=\"nofollow\">https://brex.com/</a><br>\nTodd
    Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek</a><br>\nJustus
    Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nEric
    Oestreich on LinkedIn — <a href=\"https://www.linkedin.com/in/eric-oestreich-8b55aab/\"
    rel=\"nofollow\">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>\nhexpm
    on GitHub — <a href=\"https://github.com/hexpm\" rel=\"nofollow\">https://github.com/hexpm</a><br>\nGoogle
    Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\" rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nJose
    Valim on GitHib — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nPool
    Boy — <a href=\"https://github.com/devinus/poolboy\" rel=\"nofollow\">https://github.com/devinus/poolboy</a><br>\nDevin
    Alexander Torres — <a href=\"https://github.com/devinus\" rel=\"nofollow\">https://github.com/devinus</a><br>\nVoitech
    — <a href=\"https://www.voitech.biz/\" rel=\"nofollow\">https://www.voitech.biz/</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nhexpm
    specifications — <a href=\"https://github.com/hexpm/specifications\" rel=\"nofollow\">https://github.com/hexpm/specifications</a><br>\nSlack
    — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nIRC
    —<a href=\"https://hexchat.github.io/\" rel=\"nofollow\">https://hexchat.github.io/</a><br>\nForza
    — <a href=\"https://www.forzafootball.com/women\" rel=\"nofollow\">https://www.forzafootball.com/women</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nChalmers
    University — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\" rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nFastly
    — <a href=\"https://www.fastly.com/\" rel=\"nofollow\">https://www.fastly.com/</a><br>\nNPM
    — <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">https://www.npmjs.com/</a><br>\nRebar
    3 — <a href=\"https://github.com/erlang/rebar3\" rel=\"nofollow\">https://github.com/erlang/rebar3</a><br>\nMint
    — <a href=\"https://www.mint-lang.com/\" rel=\"nofollow\">https://www.mint-lang.com/</a><br>\nRuby
    Gems — <a href=\"https://rubygems.org/\" rel=\"nofollow\">https://rubygems.org/</a><br>\nAndrea
    Leopardi on GitHub — <a href=\"https://github.com/whatyouhide?tab=overview&org=ForzaElixir\"
    rel=\"nofollow\">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: Chris Keathley on Performance and Functional Programming
  slug: s3e5-keathley
  link: https://smartlogic.io/podcast/elixir-wizards/s3e5-keathley
  guid: b26cdd89-0d68-4466-9714-44c278932651
  pubDate: Thu, 19 Dec 2019 06:00:00 -0500
  pubDateFriendly: December 19, 2019
  description: "Our guest on the show today is blogger, software cowboy, and podcast
    host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of
    Elixir Outlaws, and writer of an assemblage of open-source software. He joins
    us today to speak about his new projects, his journey with functional programming,
    and what it is like to run Bleacher Report’s infrastructure on Elixir. Chris gives
    us the lowdown on Norm, a data validating interface he recently completed, weighing
    in on how it is different from Dialyzer and what it can offer as far as scalability.
    We hear more about how Chris got introduced to Elixir through Haskell, why he
    wishes he learned Clojure sooner, and why Ruby on Rails isn’t going anywhere soon.
    \nChris also gets into the tradeoffs these languages make to correlate with Erlang.
    He argues that Elixir can only be more widely adopted if more people build cool
    things in it, and then lays out some of its power in supporting Bleacher Report’s
    user interface. We pick Chris’s brain about what his company is trying to optimize
    at the moment and hear about their preference for capacity over speed, and their
    techniques for failing gracefully during traffic spikes. Chris tells us how much
    he loves Elixir due to its use of ETS and other functionality which allows Bleacher
    Report to keep running even above capacity. Finally, we hear about some of the
    observability practices that Bleacher Report uses when deploying new systems and
    predicting future spikes. Plug in for a great conversation and hear why you should
    get building with Elixir now!\nKey Points From This Episode:\nChris’s explanation
    of Norm, his new software that describes data moving through a system.\nChris’s
    introduction to functional programming through learning Haskell, Clojure, and
    Elixir.\nWhat makes a great functional language: immutable data and first class
    functions.\nThings that make Clojure great, such as its thought out, holistic
    design.\nCharacteristics of Cons lists versus RRB trees, and what makes the latter
    better.\nAn acknowledgment of the necessity of the tradeoffs Elixir makes to interact
    with Erlang.\nA little bit about the language Chris wrote to do the admin of code
    challenges in.\nWhy Ruby (on Rails) will not be replaced by Elixir due to commoditization
    that surrounds it.\nAn argument that Elixir can only be more widely adopted if
    more people build with it.\nWhy any language can build any program thus comparisons
    between them are arbitrary.\nWhere Chris sets the bar as to when something is
    performant.\nChris’s preference for high user capacity capability over speed of
    delivery at Bleacher Report.\nOptimization projects at Bleacher Report such as
    using few boxes and handling traffic spikes.\nThings Chris loves about Elixir
    such as its ability to deliver more from its boxes.\nElixir’s use of ETS and how
    Chris coded a complex problem in half a day using it.\nHow Chris detects spikes
    using time series, StatsD, and other observability tools.\nLinks Mentioned in
    Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nChris Keathley on GitHub
    — https://github.com/keathley\nChris Keathley Blog — https://keathley.io/\nElixirConf
    2019, Contracts for Building Reliable Systems presented by Chris Keathley — https://www.youtube.com/watch?v=tpo3JUyVIjQ\nThe
    Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — https://www.youtube.com/watch?v=ghpIiQKRfQ4\nBleacher
    Report — https://bleacherreport.com/\nElixir Outlaws Podcast — https://elixiroutlaws.com/\nNorm
    — https://github.com/keathley/norm\nDialyzer — http://erlang.org/doc/man/dialyzer.html\nHaskell
    — https://www.haskell.org/\nClojure — https://clojure.org/\nErlang — https://www.erlang.org/\nChris
    Okasaki — https://github.com/chrisokasaki\nDiscord — https://discordapp.com/company\nStatsD
    — https://www.datadoghq.com/blog/statsd/\nPrometheus — https://prometheus.io/\nOpentracing
    — https://opentracing.io/ Special Guest: Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KPLckMEA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b26cdd89-0d68-4466-9714-44c278932651.mp3
    length: '51632917'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Our guest on the show today is blogger, software cowboy, and podcast
      host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host
      of Elixir Outlaws, and writer of an assemblage of open-source software. He joins
      us today to speak about his new projects, his journey with functional programming,
      and what it is like to run Bleacher Report’s infrastructure on Elixir.
    duration: '35:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b26cdd89-0d68-4466-9714-44c278932651/cover.jpg?v=2
    summary: "\n        <p>Our guest on the show today is blogger, software cowboy,
      and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report,
      co-host of Elixir Outlaws, and writer of an assemblage of open-source software.
      He joins us today to speak about his new projects, his journey with functional
      programming, and what it is like to run Bleacher Report’s infrastructure on
      Elixir. Chris gives us the lowdown on Norm, a data validating interface he recently
      completed, weighing in on how it is different from Dialyzer and what it can
      offer as far as scalability. We hear more about how Chris got introduced to
      Elixir through Haskell, why he wishes he learned Clojure sooner, and why Ruby
      on Rails isn’t going anywhere soon. </p>\n\n<p>Chris also gets into the tradeoffs
      these languages make to correlate with Erlang. He argues that Elixir can only
      be more widely adopted if more people build cool things in it, and then lays
      out some of its power in supporting Bleacher Report’s user interface. We pick
      Chris’s brain about what his company is trying to optimize at the moment and
      hear about their preference for capacity over speed, and their techniques for
      failing gracefully during traffic spikes. Chris tells us how much he loves Elixir
      due to its use of ETS and other functionality which allows Bleacher Report to
      keep running even above capacity. Finally, we hear about some of the observability
      practices that Bleacher Report uses when deploying new systems and predicting
      future spikes. Plug in for a great conversation and hear why you should get
      building with Elixir now!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris’s
      explanation of Norm, his new software that describes data moving through a system.</li>\n<li>Chris’s
      introduction to functional programming through learning Haskell, Clojure, and
      Elixir.</li>\n<li>What makes a great functional language: immutable data and
      first class functions.</li>\n<li>Things that make Clojure great, such as its
      thought out, holistic design.</li>\n<li>Characteristics of Cons lists versus
      RRB trees, and what makes the latter better.</li>\n<li>An acknowledgment of
      the necessity of the tradeoffs Elixir makes to interact with Erlang.</li>\n<li>A
      little bit about the language Chris wrote to do the admin of code challenges
      in.</li>\n<li>Why Ruby (on Rails) will not be replaced by Elixir due to commoditization
      that surrounds it.</li>\n<li>An argument that Elixir can only be more widely
      adopted if more people build with it.</li>\n<li>Why any language can build any
      program thus comparisons between them are arbitrary.</li>\n<li>Where Chris sets
      the bar as to when something is performant.</li>\n<li>Chris’s preference for
      high user capacity capability over speed of delivery at Bleacher Report.</li>\n<li>Optimization
      projects at Bleacher Report such as using few boxes and handling traffic spikes.</li>\n<li>Things
      Chris loves about Elixir such as its ability to deliver more from its boxes.</li>\n<li>Elixir’s
      use of ETS and how Chris coded a complex problem in half a day using it.</li>\n<li>How
      Chris detects spikes using time series, StatsD, and other observability tools.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on GitHub —
      <a href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nChris
      Keathley Blog — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElixirConf
      2019, Contracts for Building Reliable Systems presented by Chris Keathley —
      <a href=\"https://www.youtube.com/watch?v=tpo3JUyVIjQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>\nThe
      Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href=\"https://www.youtube.com/watch?v=ghpIiQKRfQ4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nElixir
      Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNorm
      — <a href=\"https://github.com/keathley/norm\" rel=\"nofollow\">https://github.com/keathley/norm</a><br>\nDialyzer
      — <a href=\"http://erlang.org/doc/man/dialyzer.html\" rel=\"nofollow\">http://erlang.org/doc/man/dialyzer.html</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nChris
      Okasaki — <a href=\"https://github.com/chrisokasaki\" rel=\"nofollow\">https://github.com/chrisokasaki</a><br>\nDiscord
      — <a href=\"https://discordapp.com/company\" rel=\"nofollow\">https://discordapp.com/company</a><br>\nStatsD
      — <a href=\"https://www.datadoghq.com/blog/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/blog/statsd/</a><br>\nPrometheus
      — <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nOpentracing
      — <a href=\"https://opentracing.io/\" rel=\"nofollow\">https://opentracing.io/</a></p><p>Special
      Guest: Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>Our guest on the show today is blogger, software cowboy,
    and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report,
    co-host of Elixir Outlaws, and writer of an assemblage of open-source software.
    He joins us today to speak about his new projects, his journey with functional
    programming, and what it is like to run Bleacher Report’s infrastructure on Elixir.
    Chris gives us the lowdown on Norm, a data validating interface he recently completed,
    weighing in on how it is different from Dialyzer and what it can offer as far
    as scalability. We hear more about how Chris got introduced to Elixir through
    Haskell, why he wishes he learned Clojure sooner, and why Ruby on Rails isn’t
    going anywhere soon. </p>\n\n<p>Chris also gets into the tradeoffs these languages
    make to correlate with Erlang. He argues that Elixir can only be more widely adopted
    if more people build cool things in it, and then lays out some of its power in
    supporting Bleacher Report’s user interface. We pick Chris’s brain about what
    his company is trying to optimize at the moment and hear about their preference
    for capacity over speed, and their techniques for failing gracefully during traffic
    spikes. Chris tells us how much he loves Elixir due to its use of ETS and other
    functionality which allows Bleacher Report to keep running even above capacity.
    Finally, we hear about some of the observability practices that Bleacher Report
    uses when deploying new systems and predicting future spikes. Plug in for a great
    conversation and hear why you should get building with Elixir now!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris’s explanation of Norm,
    his new software that describes data moving through a system.</li>\n<li>Chris’s
    introduction to functional programming through learning Haskell, Clojure, and
    Elixir.</li>\n<li>What makes a great functional language: immutable data and first
    class functions.</li>\n<li>Things that make Clojure great, such as its thought
    out, holistic design.</li>\n<li>Characteristics of Cons lists versus RRB trees,
    and what makes the latter better.</li>\n<li>An acknowledgment of the necessity
    of the tradeoffs Elixir makes to interact with Erlang.</li>\n<li>A little bit
    about the language Chris wrote to do the admin of code challenges in.</li>\n<li>Why
    Ruby (on Rails) will not be replaced by Elixir due to commoditization that surrounds
    it.</li>\n<li>An argument that Elixir can only be more widely adopted if more
    people build with it.</li>\n<li>Why any language can build any program thus comparisons
    between them are arbitrary.</li>\n<li>Where Chris sets the bar as to when something
    is performant.</li>\n<li>Chris’s preference for high user capacity capability
    over speed of delivery at Bleacher Report.</li>\n<li>Optimization projects at
    Bleacher Report such as using few boxes and handling traffic spikes.</li>\n<li>Things
    Chris loves about Elixir such as its ability to deliver more from its boxes.</li>\n<li>Elixir’s
    use of ETS and how Chris coded a complex problem in half a day using it.</li>\n<li>How
    Chris detects spikes using time series, StatsD, and other observability tools.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on GitHub — <a
    href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nChris
    Keathley Blog — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElixirConf
    2019, Contracts for Building Reliable Systems presented by Chris Keathley — <a
    href=\"https://www.youtube.com/watch?v=tpo3JUyVIjQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>\nThe
    Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href=\"https://www.youtube.com/watch?v=ghpIiQKRfQ4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nElixir
    Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNorm
    — <a href=\"https://github.com/keathley/norm\" rel=\"nofollow\">https://github.com/keathley/norm</a><br>\nDialyzer
    — <a href=\"http://erlang.org/doc/man/dialyzer.html\" rel=\"nofollow\">http://erlang.org/doc/man/dialyzer.html</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nChris
    Okasaki — <a href=\"https://github.com/chrisokasaki\" rel=\"nofollow\">https://github.com/chrisokasaki</a><br>\nDiscord
    — <a href=\"https://discordapp.com/company\" rel=\"nofollow\">https://discordapp.com/company</a><br>\nStatsD
    — <a href=\"https://www.datadoghq.com/blog/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/blog/statsd/</a><br>\nPrometheus
    — <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nOpentracing
    — <a href=\"https://opentracing.io/\" rel=\"nofollow\">https://opentracing.io/</a></p><p>Special
    Guest: Chris Keathley.</p>\n      "
- title: Justin Schneck & Frank Hunleth on Nerves and Performance – Working with Elixir
  slug: s3e4-schneck-hunleth-nerves
  link: https://smartlogic.io/podcast/elixir-wizards/s3e4-schneck-hunleth-nerves
  guid: 2be72d78-cfcc-46e2-a0a5-753fc8a0c280
  pubDate: Thu, 12 Dec 2019 06:00:00 -0500
  pubDateFriendly: December 12, 2019
  description: "On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries
    from the Nerves team! We take a dive into the world of Nerves with them, covering
    themes of performance, problem-solving, transitioning to hardware, and breakthroughs
    in the field. We begin with a conversation on how Elixir handles performance issues
    on the range of devices they support and Frank gets into how the team solved an
    early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes
    for today are ironing out the kinks in the system registry model and merging Erlang
    and into hard real-time. After squeezing some information out of the guys about
    their use of ugly code hacks we get into some visionary decisions as well as things
    the team wished they could have done differently at Elixir (see the release of
    the new networking stack). Finally, we end off with what Frank and Justin are
    excited about as far as developments in the Nerves community, so be sure to plug
    into this one!\n**Key Points From This Episode:\nWhat Justin did in Tokyo, from
    soaking in hot springs to debugging in Kanji.\nAn explanation of The Erlang Ecosystem
    Foundation, an embedded systems working group.\nThe use of the VintageNet library
    for setting up multi-hold nerve networks.\nHow Elixir handles performance issues
    on the range of devices they support.\nA breakdown of troubleshooting processes
    as far as acceleration with FPGAs.\nIssues with dependencies that occur when starting
    a network node on a Nerves device.\nHow Elixir is trying to evolve past the system
    registry model.\nIdentifying the challenge of reconfiguring early boot time which
    Elixir is facing.\nHow Elixir solved a load time discrepancy between a PC and
    the Raspberry Pi board.\nWhich situations require hardware when Elixir is too
    slow, such as video encoding.\nJapanese research into GPU, FPGA and SIMD optimization
    involving wrapping code blocks.\nMerging Erlang which is soft real-time into hard
    real-time.\nExamples of ugly but fast code hacks in Elixir.\nHacks and the pitfalls
    of system registry such as returning to a prompt when an app crashes.\nThings
    Elixir would have done differently in working with Nerves if could they rewind
    time.\nWhy releasing a new networking stack means Elixir could have done things
    differently.\nLessons Justin and Frank learned moving from OTP to functional programming
    at Elixir.\nExciting new developments and releases in the Nerves community.\nLinks
    Mentioned in Today’s Episode:\nNerves Project — https://nerves-project.org/\nSmartLogic
    — https://smartlogic.io/ \nElixirConf US — https://elixirconf.com/events\nThe
    Erlang Ecosystem Foundation — https://erlef.org/\nGRiSP — https://www.grisp.org/\nVintage
    Net — https://github.com/nerves-networking/vintage_net\nJoe Armstrong — https://joearms.github.io/\nErlang
    — https://www.erlang.org/\nLinux — https://www.linux.org/ Special Guest: Frank
    Hunleth.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Y13lFMdG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2be72d78-cfcc-46e2-a0a5-753fc8a0c280.mp3
    length: '56833898'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries
      from the Nerves team! We take a dive into the world of Nerves with them, covering
      themes of performance, problem-solving, transitioning to hardware, and breakthroughs
      in the field. We begin with a conversation on how Elixir handles performance
      issues on the range of devices they support and Frank gets into how the team
      solved an early boot time discrepancy between a PC and a Raspberry Pi board.
      Other big themes for today are ironing out the kinks in the system registry
      model and merging Erlang and into hard real-time. After squeezing some information
      out of the guys about their use of ugly code hacks we get into some visionary
      decisions as well as things the team wished they could have done differently
      at Elixir (see the release of the new networking stack). Finally, we end off
      with what Frank and Justin are excited about as far as developments in the Nerves
      community, so be sure to plug into this one!
    duration: '38:47'
    explicit: 'no'
    keywords: elixir, nerves, erlang
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2be72d78-cfcc-46e2-a0a5-753fc8a0c280/cover.jpg?v=2
    summary: "\n        <p>On today’s show, we welcome Justin Schneck and Frank Hunleth,
      luminaries from the Nerves team! We take a dive into the world of Nerves with
      them, covering themes of performance, problem-solving, transitioning to hardware,
      and breakthroughs in the field. We begin with a conversation on how Elixir handles
      performance issues on the range of devices they support and Frank gets into
      how the team solved an early boot time discrepancy between a PC and a Raspberry
      Pi board. Other big themes for today are ironing out the kinks in the system
      registry model and merging Erlang and into hard real-time. After squeezing some
      information out of the guys about their use of ugly code hacks we get into some
      visionary decisions as well as things the team wished they could have done differently
      at Elixir (see the release of the new networking stack). Finally, we end off
      with what Frank and Justin are excited about as far as developments in the Nerves
      community, so be sure to plug into this one!</p>\n\n<p>**Key Points From This
      Episode:</p>\n\n<ul>\n<li>What Justin did in Tokyo, from soaking in hot springs
      to debugging in Kanji.</li>\n<li>An explanation of The Erlang Ecosystem Foundation,
      an embedded systems working group.</li>\n<li>The use of the VintageNet library
      for setting up multi-hold nerve networks.</li>\n<li>How Elixir handles performance
      issues on the range of devices they support.</li>\n<li>A breakdown of troubleshooting
      processes as far as acceleration with FPGAs.</li>\n<li>Issues with dependencies
      that occur when starting a network node on a Nerves device.</li>\n<li>How Elixir
      is trying to evolve past the system registry model.</li>\n<li>Identifying the
      challenge of reconfiguring early boot time which Elixir is facing.</li>\n<li>How
      Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>\n<li>Which
      situations require hardware when Elixir is too slow, such as video encoding.</li>\n<li>Japanese
      research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>\n<li>Merging
      Erlang which is soft real-time into hard real-time.</li>\n<li>Examples of ugly
      but fast code hacks in Elixir.</li>\n<li>Hacks and the pitfalls of system registry
      such as returning to a prompt when an app crashes.</li>\n<li>Things Elixir would
      have done differently in working with Nerves if could they rewind time.</li>\n<li>Why
      releasing a new networking stack means Elixir could have done things differently.</li>\n<li>Lessons
      Justin and Frank learned moving from OTP to functional programming at Elixir.</li>\n<li>Exciting
      new developments and releases in the Nerves community.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Nerves Project — <a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf US — <a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">https://elixirconf.com/events</a><br>\nThe Erlang Ecosystem
      Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nGRiSP
      — <a href=\"https://www.grisp.org/\" rel=\"nofollow\">https://www.grisp.org/</a><br>\nVintage
      Net — <a href=\"https://github.com/nerves-networking/vintage_net\" rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nJoe
      Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nLinux
      — <a href=\"https://www.linux.org/\" rel=\"nofollow\">https://www.linux.org/</a></p><p>Special
      Guest: Frank Hunleth.</p>\n      "
  contentEncoded: "\n        <p>On today’s show, we welcome Justin Schneck and Frank
    Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves
    with them, covering themes of performance, problem-solving, transitioning to hardware,
    and breakthroughs in the field. We begin with a conversation on how Elixir handles
    performance issues on the range of devices they support and Frank gets into how
    the team solved an early boot time discrepancy between a PC and a Raspberry Pi
    board. Other big themes for today are ironing out the kinks in the system registry
    model and merging Erlang and into hard real-time. After squeezing some information
    out of the guys about their use of ugly code hacks we get into some visionary
    decisions as well as things the team wished they could have done differently at
    Elixir (see the release of the new networking stack). Finally, we end off with
    what Frank and Justin are excited about as far as developments in the Nerves community,
    so be sure to plug into this one!</p>\n\n<p>**Key Points From This Episode:</p>\n\n<ul>\n<li>What
    Justin did in Tokyo, from soaking in hot springs to debugging in Kanji.</li>\n<li>An
    explanation of The Erlang Ecosystem Foundation, an embedded systems working group.</li>\n<li>The
    use of the VintageNet library for setting up multi-hold nerve networks.</li>\n<li>How
    Elixir handles performance issues on the range of devices they support.</li>\n<li>A
    breakdown of troubleshooting processes as far as acceleration with FPGAs.</li>\n<li>Issues
    with dependencies that occur when starting a network node on a Nerves device.</li>\n<li>How
    Elixir is trying to evolve past the system registry model.</li>\n<li>Identifying
    the challenge of reconfiguring early boot time which Elixir is facing.</li>\n<li>How
    Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>\n<li>Which
    situations require hardware when Elixir is too slow, such as video encoding.</li>\n<li>Japanese
    research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>\n<li>Merging
    Erlang which is soft real-time into hard real-time.</li>\n<li>Examples of ugly
    but fast code hacks in Elixir.</li>\n<li>Hacks and the pitfalls of system registry
    such as returning to a prompt when an app crashes.</li>\n<li>Things Elixir would
    have done differently in working with Nerves if could they rewind time.</li>\n<li>Why
    releasing a new networking stack means Elixir could have done things differently.</li>\n<li>Lessons
    Justin and Frank learned moving from OTP to functional programming at Elixir.</li>\n<li>Exciting
    new developments and releases in the Nerves community.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Nerves Project — <a href=\"https://nerves-project.org/\"
    rel=\"nofollow\">https://nerves-project.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf US — <a href=\"https://elixirconf.com/events\"
    rel=\"nofollow\">https://elixirconf.com/events</a><br>\nThe Erlang Ecosystem Foundation
    — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nGRiSP
    — <a href=\"https://www.grisp.org/\" rel=\"nofollow\">https://www.grisp.org/</a><br>\nVintage
    Net — <a href=\"https://github.com/nerves-networking/vintage_net\" rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nJoe
    Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nLinux
    — <a href=\"https://www.linux.org/\" rel=\"nofollow\">https://www.linux.org/</a></p><p>Special
    Guest: Frank Hunleth.</p>\n      "
- title: Brad Traylor of Podium on Training & Hiring – Working with Elixir
  slug: s3e3-brad-traylor
  link: https://smartlogic.io/podcast/elixir-wizards/s3e3-brad-traylor
  guid: f816f14f-9675-4d38-a622-24dd6eb29cd1
  pubDate: Thu, 05 Dec 2019 06:00:00 -0500
  pubDateFriendly: December  5, 2019
  description: "Our theme this season is working with Elixir, and joining in the conversation
    today is Brad Traylor from Podium. Brad shares his expertise in hiring and training
    for Podium, a position he is passionate about since it gives him the opportunity
    to work on the people and tech side of things. We begin by hearing a bit of Brad’s
    background, when and how he was first introduced to Elixir and the standout qualities
    that attracted him to Podium. He discusses the hiring process, including what
    he looks for in an engineer, why they don’t recruit much but rather work with
    referrals, the step-by-step of onboarding new devs and the resources he recommends
    to anyone in the industry. Another great talk with a stand-up guy — be sure to
    tune in! \nKey Points From This Episode:\nWhen Brad was first exposed to Elixir
    and how he became the engineering manager. \nSearching for rocket ship startups
    and what specifically drew him to Podium. \nHaving a desire to work with the people
    and the tech side of the industry. \nThe growth trajectory of Podium from a management
    perspective. \nHiring predominantly from referrals rather than recruiting developers.
    \nThe biggest challenge with hiring Elixir devs, including the scarcity of good
    ones! \nTwo things Brad looks for when hiring engineers: the drive to learn and
    a cultural fit. \nThe benefit of hiring younger developers. \nThoughts on training
    different languages and adding them to Podium’s tech stack.\nAn overview of the
    typical onboarding process for a new engineer.\nElixir 101 and other ways they
    keep training and refining the skills of developers.  \nResources that Brad has
    recently learned and those he always recommends to devs. \n**Links Mentioned in
    Today’s Episode:\nBrad Traylor on LinkedIn — https://www.linkedin.com/in/bradtraylor\nBrad
    Traylor on Twitter — https://twitter.com/btjordan23\nPodium — https://www.podium.com\nSmartLogic
    — https://smartlogic.io/ \nElixir — https://elixir-lang.org\nUniversity of Michigan
    — https://umich.edu\nJava — https://www.java.com/en/\nPython — https://www.python.org\nRust
    — https://www.rust-lang.org\nRuby — https://www.ruby-lang.org/en/\nTypeScript
    — https://www.typescriptlang.org\nPragmatic Institute — https://www.pragmaticinstitute.com/courses\nThe
    Manager’s Path — https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\nCamile
    Fournier — https://twitter.com/skamille\n Special Guest: Brad Traylor.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DMwuDAMm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f816f14f-9675-4d38-a622-24dd6eb29cd1.mp3
    length: '40086893'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Our theme this season is working with Elixir, and joining in the conversation
      today is Brad Traylor from Podium. Brad shares his expertise in hiring and training
      for Podium, a position he is passionate about since it gives him the opportunity
      to work on the people and tech side of things. We begin by hearing a bit of
      Brad’s background, when and how he was first introduced to Elixir and the standout
      qualities that attracted him to Podium. He discusses the hiring process, including
      what he looks for in an engineer, why they don’t recruit much but rather work
      with referrals, the step-by-step of onboarding new devs and the resources he
      recommends to anyone in the industry.
    duration: '27:21'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f816f14f-9675-4d38-a622-24dd6eb29cd1/cover.jpg?v=2
    summary: "\n        <p>Our theme this season is working with Elixir, and joining
      in the conversation today is Brad Traylor from Podium. Brad shares his expertise
      in hiring and training for Podium, a position he is passionate about since it
      gives him the opportunity to work on the people and tech side of things. We
      begin by hearing a bit of Brad’s background, when and how he was first introduced
      to Elixir and the standout qualities that attracted him to Podium. He discusses
      the hiring process, including what he looks for in an engineer, why they don’t
      recruit much but rather work with referrals, the step-by-step of onboarding
      new devs and the resources he recommends to anyone in the industry. Another
      great talk with a stand-up guy — be sure to tune in! </p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>When Brad was first exposed
      to Elixir and how he became the engineering manager. </li>\n<li>Searching for
      rocket ship startups and what specifically drew him to Podium. </li>\n<li>Having
      a desire to work with the people and the tech side of the industry. </li>\n<li>The
      growth trajectory of Podium from a management perspective. </li>\n<li>Hiring
      predominantly from referrals rather than recruiting developers. </li>\n<li>The
      biggest challenge with hiring Elixir devs, including the scarcity of good ones!
      </li>\n<li>Two things Brad looks for when hiring engineers: the drive to learn
      and a cultural fit. </li>\n<li>The benefit of hiring younger developers. </li>\n<li>Thoughts
      on training different languages and adding them to Podium’s tech stack.</li>\n<li>An
      overview of the typical onboarding process for a new engineer.</li>\n<li>Elixir
      101 and other ways they keep training and refining the skills of developers.<br></li>\n<li>Resources
      that Brad has recently learned and those he always recommends to devs. </li>\n</ul>\n\n<p>**Links
      Mentioned in Today’s Episode:</p>\n\n<p>Brad Traylor on LinkedIn — <a href=\"https://www.linkedin.com/in/bradtraylor\"
      rel=\"nofollow\">https://www.linkedin.com/in/bradtraylor</a><br>\nBrad Traylor
      on Twitter — <a href=\"https://twitter.com/btjordan23\" rel=\"nofollow\">https://twitter.com/btjordan23</a><br>\nPodium
      — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nUniversity
      of Michigan — <a href=\"https://umich.edu\" rel=\"nofollow\">https://umich.edu</a><br>\nJava
      — <a href=\"https://www.java.com/en/\" rel=\"nofollow\">https://www.java.com/en/</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nTypeScript
      — <a href=\"https://www.typescriptlang.org\" rel=\"nofollow\">https://www.typescriptlang.org</a><br>\nPragmatic
      Institute — <a href=\"https://www.pragmaticinstitute.com/courses\" rel=\"nofollow\">https://www.pragmaticinstitute.com/courses</a><br>\nThe
      Manager’s Path — <a href=\"https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\"
      rel=\"nofollow\">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>\nCamile
      Fournier — <a href=\"https://twitter.com/skamille\" rel=\"nofollow\">https://twitter.com/skamille</a></p><p>Special
      Guest: Brad Traylor.</p>\n      "
  contentEncoded: "\n        <p>Our theme this season is working with Elixir, and
    joining in the conversation today is Brad Traylor from Podium. Brad shares his
    expertise in hiring and training for Podium, a position he is passionate about
    since it gives him the opportunity to work on the people and tech side of things.
    We begin by hearing a bit of Brad’s background, when and how he was first introduced
    to Elixir and the standout qualities that attracted him to Podium. He discusses
    the hiring process, including what he looks for in an engineer, why they don’t
    recruit much but rather work with referrals, the step-by-step of onboarding new
    devs and the resources he recommends to anyone in the industry. Another great
    talk with a stand-up guy — be sure to tune in! </p>\n\n<p><strong>Key Points From
    This Episode:</strong></p>\n\n<ul>\n<li>When Brad was first exposed to Elixir
    and how he became the engineering manager. </li>\n<li>Searching for rocket ship
    startups and what specifically drew him to Podium. </li>\n<li>Having a desire
    to work with the people and the tech side of the industry. </li>\n<li>The growth
    trajectory of Podium from a management perspective. </li>\n<li>Hiring predominantly
    from referrals rather than recruiting developers. </li>\n<li>The biggest challenge
    with hiring Elixir devs, including the scarcity of good ones! </li>\n<li>Two things
    Brad looks for when hiring engineers: the drive to learn and a cultural fit. </li>\n<li>The
    benefit of hiring younger developers. </li>\n<li>Thoughts on training different
    languages and adding them to Podium’s tech stack.</li>\n<li>An overview of the
    typical onboarding process for a new engineer.</li>\n<li>Elixir 101 and other
    ways they keep training and refining the skills of developers.<br></li>\n<li>Resources
    that Brad has recently learned and those he always recommends to devs. </li>\n</ul>\n\n<p>**Links
    Mentioned in Today’s Episode:</p>\n\n<p>Brad Traylor on LinkedIn — <a href=\"https://www.linkedin.com/in/bradtraylor\"
    rel=\"nofollow\">https://www.linkedin.com/in/bradtraylor</a><br>\nBrad Traylor
    on Twitter — <a href=\"https://twitter.com/btjordan23\" rel=\"nofollow\">https://twitter.com/btjordan23</a><br>\nPodium
    — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nUniversity
    of Michigan — <a href=\"https://umich.edu\" rel=\"nofollow\">https://umich.edu</a><br>\nJava
    — <a href=\"https://www.java.com/en/\" rel=\"nofollow\">https://www.java.com/en/</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nTypeScript
    — <a href=\"https://www.typescriptlang.org\" rel=\"nofollow\">https://www.typescriptlang.org</a><br>\nPragmatic
    Institute — <a href=\"https://www.pragmaticinstitute.com/courses\" rel=\"nofollow\">https://www.pragmaticinstitute.com/courses</a><br>\nThe
    Manager’s Path — <a href=\"https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\"
    rel=\"nofollow\">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>\nCamile
    Fournier — <a href=\"https://twitter.com/skamille\" rel=\"nofollow\">https://twitter.com/skamille</a></p><p>Special
    Guest: Brad Traylor.</p>\n      "
- title: José Valim, Creator of Elixir
  slug: s3-e2-jose-valim
  link: https://smartlogic.io/podcast/elixir-wizards/s3-e2-jose-valim
  guid: 13faacd6-6639-4fe7-a552-5f58e3dc2f3d
  pubDate: Tue, 26 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 26, 2019
  description: "Today on Elixir Wizards we are joined by none other than José Valim,
    the inventor of Elixir! Coming from the Ruby on Rails world, José found his way
    to functional programming and we hear all about the evolution of his philosophy
    and thought process around the time of the creation of the language. He gives
    us some great insight into why functional programming is so appealing to him and
    the problems he wanted to solve by creating Elixir. We chat about other languages
    and his use of Erlang, Elixir's three biggest influences and some important characters
    in the story. José also shares a bit of personal, behind the scenes stuff about
    his schedule and how he tries to stay as productive as possible. We finish off
    the chat, talking about performance and the measures José has taken in this regard.
    For all this and more from a true Elixir wizard, be sure to tune in!\nKey Points
    From This Episode:\nJosé's thoughts on our recent podcast name-change!\nThe first
    steps for José in the process of writing a language.\nReason for José's decision
    to step out of the Ruby on Rails world. \nThe 'aha' moment that José had when
    moving into functional programming. \nSome of the inspiration for Elixir from
    other languages.\nA few of the people that have mentored and inspired José in
    his career. \nThe research and development phase for Elixir and José strategy
    for this. \nJosé's work habits, his typical day and the influence of his kids
    on his flow. \nWhy José still considers himself an Elixir programmer despite his
    proximity. \nElixir and machine learning; why the two are not more closely linked.
    \nSteps in the measurement process for José and Elixir. \nThe time that José has
    spent on the performance side of the language. \nSacrifices and substitution in
    optimizing Elixir's performance. \nSome of the things on the horizon that are
    exciting José. \nLinks Mentioned in Today’s Episode:\nSmartLogic (https://www.smartlogic.com)\nJosé
    Valim (https://github.com/josevalim)\nPlataformatec (http://plataformatec)\nHarry
    Potter (https://www.wizardingworld.com/)\nErlang (https://www.erlang.org/)\nRuby
    (https://www.ruby-lang.org/en/)\nClojure (https://clojure.org/)\nElixirConf (https://elixirconf.com/events)
    Special Guest: José Valim.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5_ewBeuK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/13faacd6-6639-4fe7-a552-5f58e3dc2f3d.mp3
    length: '63704527'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards we are joined by none other than José Valim,
      the inventor of Elixir! Coming from the Ruby on Rails world, José found his
      way to functional programming and we hear all about the evolution of his philosophy
      and thought process around the time of the creation of the language. He gives
      us some great insight into why functional programming is so appealing to him
      and the problems he wanted to solve by creating Elixir. We chat about other
      languages and his use of Erlang, Elixir's three biggest influences and some
      important characters in the story. José also shares a bit of personal, behind
      the scenes stuff about his schedule and how he tries to stay as productive as
      possible. We finish off the chat, talking about performance and the measures
      José has taken in this regard. For all this and more from a true Elixir wizard,
      be sure to tune in!
    duration: '43:40'
    explicit: 'no'
    keywords: elixir
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/13faacd6-6639-4fe7-a552-5f58e3dc2f3d/cover.jpg?v=3
    summary: "\n        <p>Today on Elixir Wizards we are joined by none other than
      José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José
      found his way to functional programming and we hear all about the evolution
      of his philosophy and thought process around the time of the creation of the
      language. He gives us some great insight into why functional programming is
      so appealing to him and the problems he wanted to solve by creating Elixir.
      We chat about other languages and his use of Erlang, Elixir&#39;s three biggest
      influences and some important characters in the story. José also shares a bit
      of personal, behind the scenes stuff about his schedule and how he tries to
      stay as productive as possible. We finish off the chat, talking about performance
      and the measures José has taken in this regard. For all this and more from a
      true Elixir wizard, be sure to tune in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>José&#39;s
      thoughts on our recent podcast name-change!</li>\n<li>The first steps for José
      in the process of writing a language.</li>\n<li>Reason for José&#39;s decision
      to step out of the Ruby on Rails world. </li>\n<li>The &#39;aha&#39; moment
      that José had when moving into functional programming. </li>\n<li>Some of the
      inspiration for Elixir from other languages.</li>\n<li>A few of the people that
      have mentored and inspired José in his career. </li>\n<li>The research and development
      phase for Elixir and José strategy for this. </li>\n<li>José&#39;s work habits,
      his typical day and the influence of his kids on his flow. </li>\n<li>Why José
      still considers himself an Elixir programmer despite his proximity. </li>\n<li>Elixir
      and machine learning; why the two are not more closely linked. </li>\n<li>Steps
      in the measurement process for José and Elixir. </li>\n<li>The time that José
      has spent on the performance side of the language. </li>\n<li>Sacrifices and
      substitution in optimizing Elixir&#39;s performance. </li>\n<li>Some of the
      things on the horizon that are exciting José. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p><a href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a><br>\n<a
      href=\"https://github.com/josevalim\" rel=\"nofollow\">José Valim</a><br>\n<a
      href=\"http://plataformatec\" rel=\"nofollow\">Plataformatec</a><br>\n<a href=\"https://www.wizardingworld.com/\"
      rel=\"nofollow\">Harry Potter</a><br>\n<a href=\"https://www.erlang.org/\" rel=\"nofollow\">Erlang</a><br>\n<a
      href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">Ruby</a><br>\n<a href=\"https://clojure.org/\"
      rel=\"nofollow\">Clojure</a><br>\n<a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">ElixirConf</a></p><p>Special Guest: José Valim.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards we are joined by none other
    than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world,
    José found his way to functional programming and we hear all about the evolution
    of his philosophy and thought process around the time of the creation of the language.
    He gives us some great insight into why functional programming is so appealing
    to him and the problems he wanted to solve by creating Elixir. We chat about other
    languages and his use of Erlang, Elixir&#39;s three biggest influences and some
    important characters in the story. José also shares a bit of personal, behind
    the scenes stuff about his schedule and how he tries to stay as productive as
    possible. We finish off the chat, talking about performance and the measures José
    has taken in this regard. For all this and more from a true Elixir wizard, be
    sure to tune in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>José&#39;s
    thoughts on our recent podcast name-change!</li>\n<li>The first steps for José
    in the process of writing a language.</li>\n<li>Reason for José&#39;s decision
    to step out of the Ruby on Rails world. </li>\n<li>The &#39;aha&#39; moment that
    José had when moving into functional programming. </li>\n<li>Some of the inspiration
    for Elixir from other languages.</li>\n<li>A few of the people that have mentored
    and inspired José in his career. </li>\n<li>The research and development phase
    for Elixir and José strategy for this. </li>\n<li>José&#39;s work habits, his
    typical day and the influence of his kids on his flow. </li>\n<li>Why José still
    considers himself an Elixir programmer despite his proximity. </li>\n<li>Elixir
    and machine learning; why the two are not more closely linked. </li>\n<li>Steps
    in the measurement process for José and Elixir. </li>\n<li>The time that José
    has spent on the performance side of the language. </li>\n<li>Sacrifices and substitution
    in optimizing Elixir&#39;s performance. </li>\n<li>Some of the things on the horizon
    that are exciting José. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p><a
    href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a><br>\n<a href=\"https://github.com/josevalim\"
    rel=\"nofollow\">José Valim</a><br>\n<a href=\"http://plataformatec\" rel=\"nofollow\">Plataformatec</a><br>\n<a
    href=\"https://www.wizardingworld.com/\" rel=\"nofollow\">Harry Potter</a><br>\n<a
    href=\"https://www.erlang.org/\" rel=\"nofollow\">Erlang</a><br>\n<a href=\"https://www.ruby-lang.org/en/\"
    rel=\"nofollow\">Ruby</a><br>\n<a href=\"https://clojure.org/\" rel=\"nofollow\">Clojure</a><br>\n<a
    href=\"https://elixirconf.com/events\" rel=\"nofollow\">ElixirConf</a></p><p>Special
    Guest: José Valim.</p>\n      "
- title: Dr Jim Freeze on Hiring, Training, and Functional Programming – Working with
    Elixir
  slug: s3e1-dr-freeze
  link: https://smartlogic.io/podcast/elixir-wizards/s3e1-dr-freeze
  guid: 7f21096c-8f00-4f06-9b4a-a0a8b554e28b
  pubDate: Thu, 21 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 21, 2019
  description: "Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to
    talk about his passion for and history in Elixir and functional programming. Dr.
    Freeze is one of the organizers of one of our favorite things in the world, Elixir
    Conf! He shares his story of coming to functional programming and his early days
    with Elixir, what he sees as the most important aspects of the conference before
    diving into what is on offer for those that attend. We talk about how employers
    can get Elixir newcomers up to speed on the language and the most effective ways
    Dr. Freeze stays abreast of developments in the field. Our guest also recommends
    a few resources for those wanting an introduction to Elixir and makes a great
    argument for the usefulness of a functional approach to programming. For all this
    and a whole bunch more, join us today!\nKey Points From This Episode:\nHow Dr.
    Freeze got started with Elixir and his programming background.\nA little bit about
    the early days of Elixir Conf and what the first events were like.  \nThe particulars
    of Dr. Freeze's doctorate and his title. \nEducation, networking and how Elixir
    Conf fits into the developer hiring game. \nThe training that is offered at the
    conference and the philosophy to serving attendees. \nDr. Freeze's recommendations
    for employers bringing newbies up to speed with Elixir. \nHow our guest continues
    his learning and stays focused on what is necessary.\nUseful resources and materials
    for Elixir, according to Dr. Freeze.\nContemplating functional programming and
    its key components. \nWhy to consider functional programming coming from an object-based
    background.\nThe biggest hurdles in moving over to functional programming and
    Elixir. \nFollowing the data and how much the simplicity of this directive can
    help. \nDr. Freeze's favorite thing in the functional world!\nLinks Mentioned
    in Today’s Episode:\nSmartLogic (https://www.smartlogic.com) \nDr. Jim Freeze
    on Twitter (https://twitter.com/jimfreeze)\nElixirConf (https://elixirconf.com/events) \nSophie
    DeBenedetto (http://sophiedebenedetto.nyc/)\nElixir Radar (https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir)\nPhoenix
    In Action (https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043)\nGeoffrey
    Lessel (http://www.apple.com)\nSaša Jurić (https://codesync.global/speaker/sasa-juric/)\nSandi
    Metz (https://www.sandimetz.com) Special Guest: Dr. Jim Freeze.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LD8PImGu
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7f21096c-8f00-4f06-9b4a-a0a8b554e28b.mp3
    length: '37471629'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to
      talk about his passion for and history in Elixir and functional programming.
      Dr. Freeze is one of the organizers of one of our favorite things in the world,
      Elixir Conf! He shares his story of coming to functional programming and his
      early days with Elixir, what he sees as the most important aspects of the conference
      before diving into what is on offer for those that attend. We talk about how
      employers can get Elixir newcomers up to speed on the language and the most
      effective ways Dr. Freeze stays abreast of developments in the field. Our guest
      also recommends a few resources for those wanting an introduction to Elixir
      and makes a great argument for the usefulness of a functional approach to programming.
      For all this and a whole bunch more, join us today!
    duration: '25:40'
    explicit: 'no'
    keywords: elixirconf, functional programming, elixir
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7f21096c-8f00-4f06-9b4a-a0a8b554e28b/cover.jpg?v=2
    summary: "\n        <p>Welcome to Elixir Wizards, today we are joined by Dr. Jim
      Freeze to talk about his passion for and history in Elixir and functional programming.
      Dr. Freeze is one of the organizers of one of our favorite things in the world,
      Elixir Conf! He shares his story of coming to functional programming and his
      early days with Elixir, what he sees as the most important aspects of the conference
      before diving into what is on offer for those that attend. We talk about how
      employers can get Elixir newcomers up to speed on the language and the most
      effective ways Dr. Freeze stays abreast of developments in the field. Our guest
      also recommends a few resources for those wanting an introduction to Elixir
      and makes a great argument for the usefulness of a functional approach to programming.
      For all this and a whole bunch more, join us today!</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>How Dr. Freeze got started with Elixir and his
      programming background.</li>\n<li>A little bit about the early days of Elixir
      Conf and what the first events were like.<br></li>\n<li>The particulars of Dr.
      Freeze&#39;s doctorate and his title. </li>\n<li>Education, networking and how
      Elixir Conf fits into the developer hiring game. </li>\n<li>The training that
      is offered at the conference and the philosophy to serving attendees. </li>\n<li>Dr.
      Freeze&#39;s recommendations for employers bringing newbies up to speed with
      Elixir. </li>\n<li>How our guest continues his learning and stays focused on
      what is necessary.</li>\n<li>Useful resources and materials for Elixir, according
      to Dr. Freeze.</li>\n<li>Contemplating functional programming and its key components.
      </li>\n<li>Why to consider functional programming coming from an object-based
      background.</li>\n<li>The biggest hurdles in moving over to functional programming
      and Elixir. </li>\n<li>Following the data and how much the simplicity of this
      directive can help. </li>\n<li>Dr. Freeze&#39;s favorite thing in the functional
      world!</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:<br>\n<a href=\"https://www.smartlogic.com\"
      rel=\"nofollow\">SmartLogic</a> <br>\n<a href=\"https://twitter.com/jimfreeze\"
      rel=\"nofollow\">Dr. Jim Freeze on Twitter</a><br>\n<a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">ElixirConf</a> <br>\n<a href=\"http://sophiedebenedetto.nyc/\"
      rel=\"nofollow\">Sophie DeBenedetto</a><br>\n<a href=\"https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir\"
      rel=\"nofollow\">Elixir Radar</a><br>\n<a href=\"https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043\"
      rel=\"nofollow\">Phoenix In Action</a><br>\n<a href=\"http://www.apple.com\"
      rel=\"nofollow\">Geoffrey Lessel</a><br>\n<a href=\"https://codesync.global/speaker/sasa-juric/\"
      rel=\"nofollow\">Saša Jurić</a><br>\n<a href=\"https://www.sandimetz.com\" rel=\"nofollow\">Sandi
      Metz</a></p><p>Special Guest: Dr. Jim Freeze.</p>\n      "
  contentEncoded: "\n        <p>Welcome to Elixir Wizards, today we are joined by
    Dr. Jim Freeze to talk about his passion for and history in Elixir and functional
    programming. Dr. Freeze is one of the organizers of one of our favorite things
    in the world, Elixir Conf! He shares his story of coming to functional programming
    and his early days with Elixir, what he sees as the most important aspects of
    the conference before diving into what is on offer for those that attend. We talk
    about how employers can get Elixir newcomers up to speed on the language and the
    most effective ways Dr. Freeze stays abreast of developments in the field. Our
    guest also recommends a few resources for those wanting an introduction to Elixir
    and makes a great argument for the usefulness of a functional approach to programming.
    For all this and a whole bunch more, join us today!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>How Dr. Freeze got started with Elixir and his
    programming background.</li>\n<li>A little bit about the early days of Elixir
    Conf and what the first events were like.<br></li>\n<li>The particulars of Dr.
    Freeze&#39;s doctorate and his title. </li>\n<li>Education, networking and how
    Elixir Conf fits into the developer hiring game. </li>\n<li>The training that
    is offered at the conference and the philosophy to serving attendees. </li>\n<li>Dr.
    Freeze&#39;s recommendations for employers bringing newbies up to speed with Elixir.
    </li>\n<li>How our guest continues his learning and stays focused on what is necessary.</li>\n<li>Useful
    resources and materials for Elixir, according to Dr. Freeze.</li>\n<li>Contemplating
    functional programming and its key components. </li>\n<li>Why to consider functional
    programming coming from an object-based background.</li>\n<li>The biggest hurdles
    in moving over to functional programming and Elixir. </li>\n<li>Following the
    data and how much the simplicity of this directive can help. </li>\n<li>Dr. Freeze&#39;s
    favorite thing in the functional world!</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:<br>\n<a href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a> <br>\n<a
    href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">Dr. Jim Freeze on Twitter</a><br>\n<a
    href=\"https://elixirconf.com/events\" rel=\"nofollow\">ElixirConf</a> <br>\n<a
    href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">Sophie DeBenedetto</a><br>\n<a
    href=\"https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir\"
    rel=\"nofollow\">Elixir Radar</a><br>\n<a href=\"https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043\"
    rel=\"nofollow\">Phoenix In Action</a><br>\n<a href=\"http://www.apple.com\" rel=\"nofollow\">Geoffrey
    Lessel</a><br>\n<a href=\"https://codesync.global/speaker/sasa-juric/\" rel=\"nofollow\">Saša
    Jurić</a><br>\n<a href=\"https://www.sandimetz.com\" rel=\"nofollow\">Sandi Metz</a></p><p>Special
    Guest: Dr. Jim Freeze.</p>\n      "
- title: Season 3 Trailer
  slug: s3-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/s3-trailer
  guid: ba3a7fde-7592-4074-906d-1689a9801712
  pubDate: Tue, 19 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 19, 2019
  description: "Welcome back to Season 3! Our theme this time around is Working with
    Elixir. Listen for more on our theme, upcoming guests, and our new name. \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+k6GywxC4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ba3a7fde-7592-4074-906d-1689a9801712.mp3
    length: '2412548'
    type: audio/mp3
  itunes:
    episodeType: trailer
    season: '3'
    author: SmartLogic LLC
    subtitle: Welcome back to Season 3! Our theme this time around is Working with
      Elixir. Listen for more on our theme, upcoming guests, and our new name.
    duration: '1:40'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome back to Season 3! Our theme this time around is
      Working with Elixir. Listen for more on our theme, upcoming guests, and our
      new name.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to Season 3! Our theme this time around
    is Working with Elixir. Listen for more on our theme, upcoming guests, and our
    new name.</p>\n      "
Season 2:
- title: Season Two Wrap
  slug: season-two-wrap
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-wrap
  guid: e472382c-8b12-4b39-9e07-365dbdb8d77d
  pubDate: Thu, 03 Oct 2019 06:00:00 -0400
  pubDateFriendly: October  3, 2019
  description: "Welcome to the last episode of Season 2 of the podcast! We are taking
    this opportunity to recap what we covered in the season and talk about what we
    liked and what we didn't like so much. We do not have a guest for today's show
    so it is just Eric and Justus doing some reflection. We do want to take this opportunity
    to thank all of our guests that have appeared on this season and shared their
    expertise with us, we definitely feel we learned a lot during this time! In Season
    3 we will be focussing on functional programming, performance and teaching Elixir,
    so make sure to keep an eye out for when that drops in the future!\nKey Points
    From This Episode:\nThe possibility of longer episodes for next season \nReflections
    on ElixirConf and the time we spent there this year. \nThe upcoming conference
    in New Orleans that Eric is keynoting.  \nThoughts on the future of the podcast
    and the promise of Season 3. \nReach out! We want to hear from you! \nAnd much
    more! \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://www.smartlogic.io\nBrooklyn
    Zelenka — https://github.com/expede\nBryan Joseph — https://github.com/bryanjos\nPaul
    Schoenfelder — https://github.com/bitwalker\nMeryl Dakin— https://github.com/meryldakin\nRené
    Föhring— https://twitter.com/rrrene\nMichal Muskala — https://michal.muskala.eu/\nTodd
    Resudek — https://www.linkedin.com/in/toddresudek/\nShanti Chellaram— https://github.com/shantiii\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nDave Lucia — https://www.linkedin.com/in/david-lucia-a395441b\nElixirConf
    — https://elixirconf.com/2019\nThe Big Elixir — https://www.thebigelixir.com/\nLe
    Petit Theatre — http://www.lepetittheatre.com\nLone Star Elixir — https://www.lonestarelixir.com\nThe
    Empire Strikes Back — https://www.rottentomatoes.com/m/empirestrikesback\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DB2DklG3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e472382c-8b12-4b39-9e07-365dbdb8d77d.mp3
    length: '17799716'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome to the last episode of Season 2 of the podcast! We are taking
      this opportunity to recap what we covered in the season and talk about what
      we liked and what we didn't like so much. We do not have a guest for today's
      show so it is just Eric and Justus doing some reflection. We do want to take
      this opportunity to thank all of our guests that have appeared on this season
      and shared their expertise with us, we definitely feel we learned a lot during
      this time! In Season 3 we will be focussing on functional programming, performance
      and teaching Elixir, so make sure to keep an eye out for when that drops in
      the future!
    duration: '11:53'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome to the last episode of Season 2 of the podcast!
      We are taking this opportunity to recap what we covered in the season and talk
      about what we liked and what we didn&#39;t like so much. We do not have a guest
      for today&#39;s show so it is just Eric and Justus doing some reflection. We
      do want to take this opportunity to thank all of our guests that have appeared
      on this season and shared their expertise with us, we definitely feel we learned
      a lot during this time! In Season 3 we will be focussing on functional programming,
      performance and teaching Elixir, so make sure to keep an eye out for when that
      drops in the future!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>The
      possibility of longer episodes for next season </li>\n<li>Reflections on ElixirConf
      and the time we spent there this year. </li>\n<li>The upcoming conference in
      New Orleans that Eric is keynoting.<br></li>\n<li>Thoughts on the future of
      the podcast and the promise of Season 3. </li>\n<li>Reach out! We want to hear
      from you! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io\"
      rel=\"nofollow\">https://www.smartlogic.io</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
      rel=\"nofollow\">https://github.com/expede</a><br>\nBryan Joseph — <a href=\"https://github.com/bryanjos\"
      rel=\"nofollow\">https://github.com/bryanjos</a><br>\nPaul Schoenfelder — <a
      href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a><br>\nMeryl
      Dakin— <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nRené
      Föhring— <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nMichal
      Muskala — <a href=\"https://michal.muskala.eu/\" rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nTodd
      Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nShanti
      Chellaram— <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nDave
      Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nThe
      Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nLe
      Petit Theatre — <a href=\"http://www.lepetittheatre.com\" rel=\"nofollow\">http://www.lepetittheatre.com</a><br>\nLone
      Star Elixir — <a href=\"https://www.lonestarelixir.com\" rel=\"nofollow\">https://www.lonestarelixir.com</a><br>\nThe
      Empire Strikes Back — <a href=\"https://www.rottentomatoes.com/m/empire_strikes_back\"
      rel=\"nofollow\">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>\n
      \     "
  contentEncoded: "\n        <p>Welcome to the last episode of Season 2 of the podcast!
    We are taking this opportunity to recap what we covered in the season and talk
    about what we liked and what we didn&#39;t like so much. We do not have a guest
    for today&#39;s show so it is just Eric and Justus doing some reflection. We do
    want to take this opportunity to thank all of our guests that have appeared on
    this season and shared their expertise with us, we definitely feel we learned
    a lot during this time! In Season 3 we will be focussing on functional programming,
    performance and teaching Elixir, so make sure to keep an eye out for when that
    drops in the future!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>The
    possibility of longer episodes for next season </li>\n<li>Reflections on ElixirConf
    and the time we spent there this year. </li>\n<li>The upcoming conference in New
    Orleans that Eric is keynoting.<br></li>\n<li>Thoughts on the future of the podcast
    and the promise of Season 3. </li>\n<li>Reach out! We want to hear from you! </li>\n<li>And
    much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
    — <a href=\"https://www.smartlogic.io\" rel=\"nofollow\">https://www.smartlogic.io</a><br>\nBrooklyn
    Zelenka — <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a><br>\nBryan
    Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nPaul
    Schoenfelder — <a href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a><br>\nMeryl
    Dakin— <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nRené
    Föhring— <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nMichal
    Muskala — <a href=\"https://michal.muskala.eu/\" rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nTodd
    Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nShanti
    Chellaram— <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nDave
    Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nThe
    Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nLe
    Petit Theatre — <a href=\"http://www.lepetittheatre.com\" rel=\"nofollow\">http://www.lepetittheatre.com</a><br>\nLone
    Star Elixir — <a href=\"https://www.lonestarelixir.com\" rel=\"nofollow\">https://www.lonestarelixir.com</a><br>\nThe
    Empire Strikes Back — <a href=\"https://www.rottentomatoes.com/m/empire_strikes_back\"
    rel=\"nofollow\">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>\n
    \     "
- title: Dave Lucia on Rustler – Elixir Internals
  slug: season-two-lucia
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-lucia
  guid: 1f938053-676b-4137-ad82-f104ebda9488
  pubDate: Thu, 26 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 26, 2019
  description: "Our guest today on the show is Dave Lucia, who is currently the Vice
    President of Engineering at SimpleBet. He is here as part of Elixir Internals
    series, to talk to us and all our listeners about Rustler and the contribution
    he made to the library! According to our guest, Rustler acts as a bridge between
    Rust and Elixir and allows users to employ the power of Rust within Elixir and
    a great example of this can be found in Dave's work at SimpleBet. He explains
    some of this application and the functionality and improvement it offers and the
    big difference the machine learning models make to this work. Dave also gives
    us some background to his work and career, previous employment and early explorations
    of open-source software. He also shares some great tips for problem-solving and
    learning and improving at programming in Rust. We unpack some of the biggest challenges
    that faced the creation of Rustler, notable differences between Rust and Elixir
    and the technical components of the library that the team created. For all this
    and then some, join us for this great episode!\nKey Points From This Episode:\nMore
    about our guest and his current work at SimpleBet. \nHow Dave got started with
    Elixir while at Bloomberg.\nThe interesting and beautiful way in which The Outline
    used Elixir. \nDave's early forays and experiences with open source software.
    \nProblem finding and solving; Dave's tips to those wanting to improve. \nDave's
    employers' contribution and allowance for open source projects.  \nIntroducing
    Rustler and what users can do with it! \nThe biggest challenges of using multiple
    languages in the backend. \nHow Rustler works; the core, the code generator and
    more.\nThe most important differences between Rust and Elixir.\nDave's best advice
    and resources for learning and mastering Rust.\nAnd much more! \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://www.smartlogic.io\nDave Lucia — https://www.linkedin.com/in/david-lucia-a395441b\nRustler
    — https://github.com/rusterlium/rustler\nSimpleBet — https://simplebet.io\nDave
    Lucia on Twitter — https://twitter.com/davydog187\nDave Lucia Email — dave@simplebet.io\nElixir
    — https://elixir-lang.org\nPython — https://www.python.org\nJavaScript — https://www.javascript.com\nRust
    — https://www.rust-lang.org\nBloomberg — https://www.bloomberg.com\nSlack — https://slack.com\nVox
    Media — https://www.voxmedia.com\nThe Outline — https://theoutline.com\nThe Rust
    Programming Language — https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\nRust
    Playground — https://play.rust-lang.org\nElm Compiler — https://github.com/elm/compiler\n
    Special Guest: Dave Lucia.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KDEDJSet
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1f938053-676b-4137-ad82-f104ebda9488.mp3
    length: '32008356'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Our guest today on the show is Dave Lucia, who is currently the Vice
      President of Engineering at SimpleBet. He is here as part of Elixir Internals
      series, to talk to us and all our listeners about Rustler and the contribution
      he made to the library! According to our guest, Rustler acts as a bridge between
      Rust and Elixir and allows users to employ the power of Rust within Elixir and
      a great example of this can be found in Dave's work at SimpleBet. He explains
      some of this application and the functionality and improvement it offers and
      the big difference the machine learning models make to this work.
    duration: '32:31'
    explicit: 'no'
    keywords: elixir, rustler, rust, elm, simplebet
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1f938053-676b-4137-ad82-f104ebda9488/cover.jpg?v=3
    summary: "\n        <p>Our guest today on the show is Dave Lucia, who is currently
      the Vice President of Engineering at SimpleBet. He is here as part of Elixir
      Internals series, to talk to us and all our listeners about Rustler and the
      contribution he made to the library! According to our guest, Rustler acts as
      a bridge between Rust and Elixir and allows users to employ the power of Rust
      within Elixir and a great example of this can be found in Dave&#39;s work at
      SimpleBet. He explains some of this application and the functionality and improvement
      it offers and the big difference the machine learning models make to this work.
      Dave also gives us some background to his work and career, previous employment
      and early explorations of open-source software. He also shares some great tips
      for problem-solving and learning and improving at programming in Rust. We unpack
      some of the biggest challenges that faced the creation of Rustler, notable differences
      between Rust and Elixir and the technical components of the library that the
      team created. For all this and then some, join us for this great episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>More about our guest and
      his current work at SimpleBet. </li>\n<li>How Dave got started with Elixir while
      at Bloomberg.</li>\n<li>The interesting and beautiful way in which The Outline
      used Elixir. </li>\n<li>Dave&#39;s early forays and experiences with open source
      software. </li>\n<li>Problem finding and solving; Dave&#39;s tips to those wanting
      to improve. </li>\n<li>Dave&#39;s employers&#39; contribution and allowance
      for open source projects.<br></li>\n<li>Introducing Rustler and what users can
      do with it! </li>\n<li>The biggest challenges of using multiple languages in
      the backend. </li>\n<li>How Rustler works; the core, the code generator and
      more.</li>\n<li>The most important differences between Rust and Elixir.</li>\n<li>Dave&#39;s
      best advice and resources for learning and mastering Rust.</li>\n<li>And much
      more! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://www.smartlogic.io\" rel=\"nofollow\">https://www.smartlogic.io</a><br>\nDave
      Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nRustler
      — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nSimpleBet
      — <a href=\"https://simplebet.io\" rel=\"nofollow\">https://simplebet.io</a><br>\nDave
      Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a><br>\nDave
      Lucia Email — <a href=\"mailto:dave@simplebet.io\" rel=\"nofollow\">dave@simplebet.io</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nBloomberg
      — <a href=\"https://www.bloomberg.com\" rel=\"nofollow\">https://www.bloomberg.com</a><br>\nSlack
      — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nVox
      Media — <a href=\"https://www.voxmedia.com\" rel=\"nofollow\">https://www.voxmedia.com</a><br>\nThe
      Outline — <a href=\"https://theoutline.com\" rel=\"nofollow\">https://theoutline.com</a><br>\nThe
      Rust Programming Language — <a href=\"https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\"
      rel=\"nofollow\">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>\nRust
      Playground — <a href=\"https://play.rust-lang.org\" rel=\"nofollow\">https://play.rust-lang.org</a><br>\nElm
      Compiler — <a href=\"https://github.com/elm/compiler\" rel=\"nofollow\">https://github.com/elm/compiler</a></p><p>Special
      Guest: Dave Lucia.</p>\n      "
  contentEncoded: "\n        <p>Our guest today on the show is Dave Lucia, who is
    currently the Vice President of Engineering at SimpleBet. He is here as part of
    Elixir Internals series, to talk to us and all our listeners about Rustler and
    the contribution he made to the library! According to our guest, Rustler acts
    as a bridge between Rust and Elixir and allows users to employ the power of Rust
    within Elixir and a great example of this can be found in Dave&#39;s work at SimpleBet.
    He explains some of this application and the functionality and improvement it
    offers and the big difference the machine learning models make to this work. Dave
    also gives us some background to his work and career, previous employment and
    early explorations of open-source software. He also shares some great tips for
    problem-solving and learning and improving at programming in Rust. We unpack some
    of the biggest challenges that faced the creation of Rustler, notable differences
    between Rust and Elixir and the technical components of the library that the team
    created. For all this and then some, join us for this great episode!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>More about our guest and his
    current work at SimpleBet. </li>\n<li>How Dave got started with Elixir while at
    Bloomberg.</li>\n<li>The interesting and beautiful way in which The Outline used
    Elixir. </li>\n<li>Dave&#39;s early forays and experiences with open source software.
    </li>\n<li>Problem finding and solving; Dave&#39;s tips to those wanting to improve.
    </li>\n<li>Dave&#39;s employers&#39; contribution and allowance for open source
    projects.<br></li>\n<li>Introducing Rustler and what users can do with it! </li>\n<li>The
    biggest challenges of using multiple languages in the backend. </li>\n<li>How
    Rustler works; the core, the code generator and more.</li>\n<li>The most important
    differences between Rust and Elixir.</li>\n<li>Dave&#39;s best advice and resources
    for learning and mastering Rust.</li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io\"
    rel=\"nofollow\">https://www.smartlogic.io</a><br>\nDave Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\"
    rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nRustler
    — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nSimpleBet
    — <a href=\"https://simplebet.io\" rel=\"nofollow\">https://simplebet.io</a><br>\nDave
    Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a><br>\nDave
    Lucia Email — <a href=\"mailto:dave@simplebet.io\" rel=\"nofollow\">dave@simplebet.io</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nBloomberg
    — <a href=\"https://www.bloomberg.com\" rel=\"nofollow\">https://www.bloomberg.com</a><br>\nSlack
    — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nVox
    Media — <a href=\"https://www.voxmedia.com\" rel=\"nofollow\">https://www.voxmedia.com</a><br>\nThe
    Outline — <a href=\"https://theoutline.com\" rel=\"nofollow\">https://theoutline.com</a><br>\nThe
    Rust Programming Language — <a href=\"https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\"
    rel=\"nofollow\">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>\nRust
    Playground — <a href=\"https://play.rust-lang.org\" rel=\"nofollow\">https://play.rust-lang.org</a><br>\nElm
    Compiler — <a href=\"https://github.com/elm/compiler\" rel=\"nofollow\">https://github.com/elm/compiler</a></p><p>Special
    Guest: Dave Lucia.</p>\n      "
- title: Eric Oestrich on ExVenture – Elixir Internals
  slug: season-two-oestrich
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-oestrich
  guid: 0a947a18-82f2-4b2e-8c0c-69696c5980d9
  pubDate: Thu, 19 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 19, 2019
  description: "This season on Smart Software Season 2, we are focused on the inner
    workings of Elixir and the inner workings of popular Elixir libraries, or Elixir
    internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich
    who's responsible for the wildly successful Elixir MUD framework ExVenture.\nExVenture
    - https://exventure.org/\nMUDs - https://en.wikipedia.org/wiki/MUD\nEcto - https://github.com/elixir-ecto/ecto\nEric's
    Going Multi-Node presentation at ElixirConf - https://www.youtube.com/watch?v=lCUKQnkjajo\nThe
    Big Elixir - https://www.thebigelixir.com/\nEric's Prometheus presentation at
    Lonestar Elixir - https://www.youtube.com/watch?v=ETUD9SaRCjY\nPrometheus - https://prometheus.io/\nGo
    - https://golang.org/\nCelluloid - https://celluloid.io/\nPhoenix - https://phoenixframework.org/\nGrapevine
    - https://grapevine.haus/\nGossip - https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+tquuIWGm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0a947a18-82f2-4b2e-8c0c-69696c5980d9.mp3
    length: '29316603'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: This season on Smart Software Season 2, we are focused on the inner
      workings of Elixir and the inner workings of popular Elixir libraries, or Elixir
      internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich
      who's responsible for the wildly successful Elixir MUD framework ExVenture.
    duration: '29:26'
    explicit: 'no'
    keywords: exventure
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0a947a18-82f2-4b2e-8c0c-69696c5980d9/cover.jpg?v=3
    summary: "\n        <p>This season on Smart Software Season 2, we are focused
      on the inner workings of Elixir and the inner workings of popular Elixir libraries,
      or Elixir internals. Today, I have the pleasure of interviewing my colleague,
      Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework
      ExVenture.</p>\n\n<p>ExVenture - <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nMUDs
      - <a href=\"https://en.wikipedia.org/wiki/MUD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/MUD</a><br>\nEcto
      - <a href=\"https://github.com/elixir-ecto/ecto\" rel=\"nofollow\">https://github.com/elixir-ecto/ecto</a><br>\nEric&#39;s
      Going Multi-Node presentation at ElixirConf - <a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>\nThe Big
      Elixir - <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nEric&#39;s
      Prometheus presentation at Lonestar Elixir - <a href=\"https://www.youtube.com/watch?v=ETUD9SaRCjY\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>\nPrometheus
      - <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nGo
      - <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCelluloid
      - <a href=\"https://celluloid.io/\" rel=\"nofollow\">https://celluloid.io/</a><br>\nPhoenix
      - <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nGrapevine
      - <a href=\"https://grapevine.haus/\" rel=\"nofollow\">https://grapevine.haus/</a><br>\nGossip
      - <a href=\"https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\"
      rel=\"nofollow\">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p>\n      "
  contentEncoded: "\n        <p>This season on Smart Software Season 2, we are focused
    on the inner workings of Elixir and the inner workings of popular Elixir libraries,
    or Elixir internals. Today, I have the pleasure of interviewing my colleague,
    Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework
    ExVenture.</p>\n\n<p>ExVenture - <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nMUDs
    - <a href=\"https://en.wikipedia.org/wiki/MUD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/MUD</a><br>\nEcto
    - <a href=\"https://github.com/elixir-ecto/ecto\" rel=\"nofollow\">https://github.com/elixir-ecto/ecto</a><br>\nEric&#39;s
    Going Multi-Node presentation at ElixirConf - <a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>\nThe Big
    Elixir - <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nEric&#39;s
    Prometheus presentation at Lonestar Elixir - <a href=\"https://www.youtube.com/watch?v=ETUD9SaRCjY\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>\nPrometheus
    - <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nGo
    - <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCelluloid
    - <a href=\"https://celluloid.io/\" rel=\"nofollow\">https://celluloid.io/</a><br>\nPhoenix
    - <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nGrapevine
    - <a href=\"https://grapevine.haus/\" rel=\"nofollow\">https://grapevine.haus/</a><br>\nGossip
    - <a href=\"https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\" rel=\"nofollow\">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p>\n      "
- title: Sophie DeBenedetto on Excrypt and Railway – Elixir Internals
  slug: season-two-debenedetto
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-debenedetto
  guid: 7b360fac-dde4-44a4-b637-762e19a0274b
  pubDate: Thu, 12 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 12, 2019
  description: "Welcome to another episode of the podcast everybody! As we continue
    our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to
    tell us about the two libraries she and the Flatiron School created! We talk about
    Encrypt and Railway and a bunch of other great stuff from the world of Elixir
    and open source and Sophie shares so much about why she is particularly excited
    about things at the moment. She talks about the maturation of the Elixir community
    and her first and most important open-source experiences before diving into her
    hopes for the future of these platforms. We also discuss the ins and out of the
    two libraries and our guest does a fantastic job of explaining their functions
    and the reasons they were built. Sophie shares the major challenges that faced
    her and the team in creating them and a whole lot more, so make sure to tune in
    today for all this great information!\nKey Points From This Episode:\nA brief
    introduction to Sophie's career, the Flatiron School and her Elixir work.\nSophie's
    first experiences with open source, contributing to the Elixir School. \nFlatiron's
    support of open source and their attitude towards the growth of engineers. \nWhy
    Elixir and Ruby are such important languages to Sophie and Flatiron. \nSophie's
    wishes for Elixir and what she wants to see more of in the community. \nIntroducing
    Encrypt and Excrypt for Elixir and why Flatiron chose to build them.\nThe hardest
    parts of building the library, the challenges of encryption.\nElixir's built-in
    option parser; convenience and accessing data easily.\nThe Railway hex package
    and what it enables users to do. \nBreaking down the functions of RabbitMQ for
    Erlang. \nThe two things that Sophie is most excited about in the Elixir space
    right now!\nAnd much more! \nLinks Mentioned in Today’s Episode:\nSophie DeBenedetto
    — http://sophiedebenedetto.nyc/\nFlatiron School — http://sophiedebenedetto.nyc/\nElixir
    School — https://elixirschool.com/en/\nEncrypt — https://github.com/flatiron-labs/encrypt\nEscript
    — https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\nRuby — https://www.ruby-lang.org/en/\nKafka
    — https://kafka.apache.org\nEcto — https://hexdocs.pm/ecto/Ecto.html\nErlang —
    https://www.erlang.org\nRabbitMQ — https://www.rabbitmq.com\nPhoenix — https://phoenixframework.org\nLiveView
    — https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\nElixir
    Conf — https://elixirconf.com/2019 Special Guest: Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+08mfuqOk
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7b360fac-dde4-44a4-b637-762e19a0274b.mp3
    length: '44914201'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome to another episode of the podcast everybody! As we continue
      our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto
      to tell us about the two libraries she and the Flatiron School created! We talk
      about Encrypt and Railway and a bunch of other great stuff from the world of
      Elixir and open source and Sophie shares so much about why she is particularly
      excited about things at the moment.
    duration: '30:42'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7b360fac-dde4-44a4-b637-762e19a0274b/cover.jpg?v=3
    summary: "\n        <p>Welcome to another episode of the podcast everybody! As
      we continue our journey into Elixir internals in Season 2, we welcome Sophie
      DeBenedetto to tell us about the two libraries she and the Flatiron School created!
      We talk about Encrypt and Railway and a bunch of other great stuff from the
      world of Elixir and open source and Sophie shares so much about why she is particularly
      excited about things at the moment. She talks about the maturation of the Elixir
      community and her first and most important open-source experiences before diving
      into her hopes for the future of these platforms. We also discuss the ins and
      out of the two libraries and our guest does a fantastic job of explaining their
      functions and the reasons they were built. Sophie shares the major challenges
      that faced her and the team in creating them and a whole lot more, so make sure
      to tune in today for all this great information!</p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>A brief introduction to Sophie&#39;s
      career, the Flatiron School and her Elixir work.</li>\n<li>Sophie&#39;s first
      experiences with open source, contributing to the Elixir School. </li>\n<li>Flatiron&#39;s
      support of open source and their attitude towards the growth of engineers. </li>\n<li>Why
      Elixir and Ruby are such important languages to Sophie and Flatiron. </li>\n<li>Sophie&#39;s
      wishes for Elixir and what she wants to see more of in the community. </li>\n<li>Introducing
      Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>\n<li>The
      hardest parts of building the library, the challenges of encryption.</li>\n<li>Elixir&#39;s
      built-in option parser; convenience and accessing data easily.</li>\n<li>The
      Railway hex package and what it enables users to do. </li>\n<li>Breaking down
      the functions of RabbitMQ for Erlang. </li>\n<li>The two things that Sophie
      is most excited about in the Elixir space right now!</li>\n<li>And much more!
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto
      — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFlatiron
      School — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nEncrypt
      — <a href=\"https://github.com/flatiron-labs/encrypt\" rel=\"nofollow\">https://github.com/flatiron-labs/encrypt</a><br>\nEscript
      — <a href=\"https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\" rel=\"nofollow\">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nKafka
      — <a href=\"https://kafka.apache.org\" rel=\"nofollow\">https://kafka.apache.org</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nErlang
      — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nRabbitMQ
      — <a href=\"https://www.rabbitmq.com\" rel=\"nofollow\">https://www.rabbitmq.com</a><br>\nPhoenix
      — <a href=\"https://phoenixframework.org\" rel=\"nofollow\">https://phoenixframework.org</a><br>\nLiveView
      — <a href=\"https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\"
      rel=\"nofollow\">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>\nElixir
      Conf — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a></p><p>Special
      Guest: Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another episode of the podcast everybody!
    As we continue our journey into Elixir internals in Season 2, we welcome Sophie
    DeBenedetto to tell us about the two libraries she and the Flatiron School created!
    We talk about Encrypt and Railway and a bunch of other great stuff from the world
    of Elixir and open source and Sophie shares so much about why she is particularly
    excited about things at the moment. She talks about the maturation of the Elixir
    community and her first and most important open-source experiences before diving
    into her hopes for the future of these platforms. We also discuss the ins and
    out of the two libraries and our guest does a fantastic job of explaining their
    functions and the reasons they were built. Sophie shares the major challenges
    that faced her and the team in creating them and a whole lot more, so make sure
    to tune in today for all this great information!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>A brief introduction to Sophie&#39;s
    career, the Flatiron School and her Elixir work.</li>\n<li>Sophie&#39;s first
    experiences with open source, contributing to the Elixir School. </li>\n<li>Flatiron&#39;s
    support of open source and their attitude towards the growth of engineers. </li>\n<li>Why
    Elixir and Ruby are such important languages to Sophie and Flatiron. </li>\n<li>Sophie&#39;s
    wishes for Elixir and what she wants to see more of in the community. </li>\n<li>Introducing
    Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>\n<li>The
    hardest parts of building the library, the challenges of encryption.</li>\n<li>Elixir&#39;s
    built-in option parser; convenience and accessing data easily.</li>\n<li>The Railway
    hex package and what it enables users to do. </li>\n<li>Breaking down the functions
    of RabbitMQ for Erlang. </li>\n<li>The two things that Sophie is most excited
    about in the Elixir space right now!</li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\"
    rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFlatiron School — <a href=\"http://sophiedebenedetto.nyc/\"
    rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir School — <a href=\"https://elixirschool.com/en/\"
    rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nEncrypt — <a href=\"https://github.com/flatiron-labs/encrypt\"
    rel=\"nofollow\">https://github.com/flatiron-labs/encrypt</a><br>\nEscript — <a
    href=\"https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\" rel=\"nofollow\">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nKafka
    — <a href=\"https://kafka.apache.org\" rel=\"nofollow\">https://kafka.apache.org</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nErlang
    — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nRabbitMQ
    — <a href=\"https://www.rabbitmq.com\" rel=\"nofollow\">https://www.rabbitmq.com</a><br>\nPhoenix
    — <a href=\"https://phoenixframework.org\" rel=\"nofollow\">https://phoenixframework.org</a><br>\nLiveView
    — <a href=\"https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\"
    rel=\"nofollow\">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>\nElixir
    Conf — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a></p><p>Special
    Guest: Sophie DeBenedetto.</p>\n      "
- title: Shanti Chellaram on Pri-Queue and raft_erl – Elixir Internals
  slug: season-two-chellaram
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-chellaram
  guid: ec6a1593-38d7-48b0-8494-9dd83f8f6cff
  pubDate: Thu, 05 Sep 2019 06:00:00 -0400
  pubDateFriendly: September  5, 2019
  description: "Today on the show we welcome Shanti Chellaram to talk about a couple
    of Erlang libraries she has created! We hear from her about Pri-Queue and rafterl,
    and her motivation behind making them and some of the things we wishes she did
    differently! Shanti shares some of her background, early coding experiences, affinity
    for open source and her current work situation. From there we look at Pri-Queue,
    the problem it addresses and what a priority queue is. A highlight of the show
    is Shanti giving the best explanation of a bootstrapped skew binomial heap we
    have heard before explaining some of the main issues she faced in creating Pri-Queue.
    We then turn to rafterl, how she got started with it and her hopes for its future.
    Throughout the conversation Shanti shares her philosophy towards open source and
    coding going forward as well as offering advice for newcomers to Erlang. Make
    you you join us for this fantastic episode!\nKey Points From This Episode:\nA
    little bit about Shanti's background and current employment.\nShanti's early experiences
    and what got her into open source software. \nSome coding decisions that Shanti
    would make differently in retrospect. \nThe problem that Pri-Queue solves; the
    dearth of data efficient libraries. \nWhat is a priority queue? Ordering your
    data with scores.\nShanti explains a bootstrapped skew binomial heap!\nSome of
    the hurdles that Shanti faced in writing Pri-Queue. \nHow Shanti got started on
    her other library, raft_erl. \nThe three Raft protocols and how much of it is
    implemented in the library. \nShanti's next goals for raft_erl; bug free and widely
    used.\nThe importance of distributed systems and Shanti's philosophy looking to
    the future.\nAdvice for someone just starting out in Elixir!\nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://www.smartlogic.io/\nShanti
    Chellaram Linkedin— https://www.linkedin.com/in/shanti-chellaram-495444187\nShanti
    Chellaram on Twitter — https://twitter.com/theccoder\nShanti Chellaram on github
    — https://github.com/shantiii\nErlang — https://www.erlang.org/\nElixir — https://elixir-lang.org/\nPri-Queue
    — https://github.com/okeuday/pqueue\nrafterl — https://github.com/shantiii/rafterl\nMailChimp
    — https://mailchimp.com\nTeachers Pay Teachers — https://www.teacherspayteachers.com/\nPurely
    Functional Data Structures — https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\nRust
    — https://www.rust-lang.org/\nRaft — https://raft.github.io/\nRaspberry Pi — https://www.raspberrypi.org/\nElixirConf
    — https://elixirconf.com/2019\nPartisan — https://partisan.cloud/\n Special Guests:
    Dan Ivovich and Shanti Chellaram.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+t4R4xiHv
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff.mp3
    length: '42603379'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we welcome Shanti Chellaram to talk about a couple
      of Erlang libraries she has created! We hear from her about Pri-Queue and raft_erl,
      and her motivation behind making them and some of the things we wishes she did
      differently! Shanti shares some of her background, early coding experiences,
      affinity for open source and her current work situation. From there we look
      at Pri-Queue, the problem it addresses and what a priority queue is.
    duration: '28:57'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff/cover.jpg?v=3
    summary: "\n        <p>Today on the show we welcome Shanti Chellaram to talk about
      a couple of Erlang libraries she has created! We hear from her about Pri-Queue
      and raft_erl, and her motivation behind making them and some of the things we
      wishes she did differently! Shanti shares some of her background, early coding
      experiences, affinity for open source and her current work situation. From there
      we look at Pri-Queue, the problem it addresses and what a priority queue is.
      A highlight of the show is Shanti giving the best explanation of a bootstrapped
      skew binomial heap we have heard before explaining some of the main issues she
      faced in creating Pri-Queue. We then turn to raft_erl, how she got started with
      it and her hopes for its future. Throughout the conversation Shanti shares her
      philosophy towards open source and coding going forward as well as offering
      advice for newcomers to Erlang. Make you you join us for this fantastic episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Shanti&#39;s
      background and current employment.</li>\n<li>Shanti&#39;s early experiences
      and what got her into open source software. </li>\n<li>Some coding decisions
      that Shanti would make differently in retrospect. </li>\n<li>The problem that
      Pri-Queue solves; the dearth of data efficient libraries. </li>\n<li>What is
      a priority queue? Ordering your data with scores.</li>\n<li>Shanti explains
      a bootstrapped skew binomial heap!</li>\n<li>Some of the hurdles that Shanti
      faced in writing Pri-Queue. </li>\n<li>How Shanti got started on her other library,
      raft_erl. </li>\n<li>The three Raft protocols and how much of it is implemented
      in the library. </li>\n<li>Shanti&#39;s next goals for raft_erl; bug free and
      widely used.</li>\n<li>The importance of distributed systems and Shanti&#39;s
      philosophy looking to the future.</li>\n<li>Advice for someone just starting
      out in Elixir!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nShanti Chellaram Linkedin—
      <a href=\"https://www.linkedin.com/in/shanti-chellaram-495444187\" rel=\"nofollow\">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>\nShanti
      Chellaram on Twitter — <a href=\"https://twitter.com/theccoder\" rel=\"nofollow\">https://twitter.com/theccoder</a><br>\nShanti
      Chellaram on github — <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nPri-Queue
      — <a href=\"https://github.com/okeuday/pqueue\" rel=\"nofollow\">https://github.com/okeuday/pqueue</a><br>\nraft_erl
      — <a href=\"https://github.com/shantiii/raft_erl\" rel=\"nofollow\">https://github.com/shantiii/raft_erl</a><br>\nMailChimp
      — <a href=\"https://mailchimp.com\" rel=\"nofollow\">https://mailchimp.com</a><br>\nTeachers
      Pay Teachers — <a href=\"https://www.teacherspayteachers.com/\" rel=\"nofollow\">https://www.teacherspayteachers.com/</a><br>\nPurely
      Functional Data Structures — <a href=\"https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\"
      rel=\"nofollow\">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>\nRust
      — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nRaft
      — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nRaspberry
      Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nPartisan
      — <a href=\"https://partisan.cloud/\" rel=\"nofollow\">https://partisan.cloud/</a></p><p>Special
      Guests: Dan Ivovich and Shanti Chellaram.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we welcome Shanti Chellaram to talk
    about a couple of Erlang libraries she has created! We hear from her about Pri-Queue
    and raft_erl, and her motivation behind making them and some of the things we
    wishes she did differently! Shanti shares some of her background, early coding
    experiences, affinity for open source and her current work situation. From there
    we look at Pri-Queue, the problem it addresses and what a priority queue is. A
    highlight of the show is Shanti giving the best explanation of a bootstrapped
    skew binomial heap we have heard before explaining some of the main issues she
    faced in creating Pri-Queue. We then turn to raft_erl, how she got started with
    it and her hopes for its future. Throughout the conversation Shanti shares her
    philosophy towards open source and coding going forward as well as offering advice
    for newcomers to Erlang. Make you you join us for this fantastic episode!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Shanti&#39;s
    background and current employment.</li>\n<li>Shanti&#39;s early experiences and
    what got her into open source software. </li>\n<li>Some coding decisions that
    Shanti would make differently in retrospect. </li>\n<li>The problem that Pri-Queue
    solves; the dearth of data efficient libraries. </li>\n<li>What is a priority
    queue? Ordering your data with scores.</li>\n<li>Shanti explains a bootstrapped
    skew binomial heap!</li>\n<li>Some of the hurdles that Shanti faced in writing
    Pri-Queue. </li>\n<li>How Shanti got started on her other library, raft_erl. </li>\n<li>The
    three Raft protocols and how much of it is implemented in the library. </li>\n<li>Shanti&#39;s
    next goals for raft_erl; bug free and widely used.</li>\n<li>The importance of
    distributed systems and Shanti&#39;s philosophy looking to the future.</li>\n<li>Advice
    for someone just starting out in Elixir!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nShanti Chellaram Linkedin—
    <a href=\"https://www.linkedin.com/in/shanti-chellaram-495444187\" rel=\"nofollow\">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>\nShanti
    Chellaram on Twitter — <a href=\"https://twitter.com/theccoder\" rel=\"nofollow\">https://twitter.com/theccoder</a><br>\nShanti
    Chellaram on github — <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nPri-Queue
    — <a href=\"https://github.com/okeuday/pqueue\" rel=\"nofollow\">https://github.com/okeuday/pqueue</a><br>\nraft_erl
    — <a href=\"https://github.com/shantiii/raft_erl\" rel=\"nofollow\">https://github.com/shantiii/raft_erl</a><br>\nMailChimp
    — <a href=\"https://mailchimp.com\" rel=\"nofollow\">https://mailchimp.com</a><br>\nTeachers
    Pay Teachers — <a href=\"https://www.teacherspayteachers.com/\" rel=\"nofollow\">https://www.teacherspayteachers.com/</a><br>\nPurely
    Functional Data Structures — <a href=\"https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\"
    rel=\"nofollow\">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>\nRust
    — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nRaft
    — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nRaspberry
    Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nPartisan
    — <a href=\"https://partisan.cloud/\" rel=\"nofollow\">https://partisan.cloud/</a></p><p>Special
    Guests: Dan Ivovich and Shanti Chellaram.</p>\n      "
- title: Michał Muskała on Ecto and jason – Elixir Internals
  slug: season-two-muskala
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-muskala
  guid: d20c39c5-2b6c-44a9-96ff-0dff754dd08f
  pubDate: Thu, 29 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 29, 2019
  description: "Today on the show we are joined by Michal Muskala, who is currently
    a freelance software engineer and he is here to talk to us about his work on the
    Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal
    explain how he became involved in the project and the work he did on it. He explains
    a little of its inner workings, issues and what excited him about it initially.
    We then turn to jason, a widely popular library that Michal created for parsing
    JSON. Michal unpacks its particulars, differentiating for us between the driver
    and adapter and the lessons he learned working on them. The last bit of our conversation
    is spent talking about open source and Michal's commitment to its philosophy.
    We discuss making time to work on projects, buy in from employers and and why
    getting involved can be scary yet is so important! For all this and more, join
    us for this great episode!\nKey Points From This Episode:\nA little bit about
    Michal's work background and how he got started on Elixir. \nThe parts of Ecto
    that Michal worked on at Google Summer of Code.\nDifferentiating between the driver
    and the adapter; communicating with the database.\nStructuring the code and what
    Michal would do differently now. \nCreating jason, the default JSON parser and
    the impetus behind it. \nUnderstanding lexing and tokenizing; largely the same
    thing with different names.\nMacros on jason and forcing the VM to use optimizations
    in particular cases. \nPerformance on jason; how Michal achieved the speeds he
    did.\nMichal's path to open source software and what followed his work in MongoDB.
    \nFinding time to work on open source projects while employed.   \nBEAM, alternative
    implementations and why they are important. \nMichal's call to action for our
    listeners! \nAnd much more! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://www.smartlogic.io/\nElixir — https://elixir-lang.org/\nMichal Muskala
    — https://michal.muskala.eu/\nMichal Muskala on Twitter — https://twitter.com/michalmuskala?lang=en\nEcto
    — https://hexdocs.pm/ecto/Ecto.html\njason — https://github.com/michalmuskala/jason
    \nGoogle Summer of Code — https://summerofcode.withgoogle.com/\nMondoDB — https://www.mongodb.com/\nErlang
    — https://www.erlang.org/\nBinary Optimization in Erlang Documentation — https://rhye.org/post/erlang-binary-matching-performance/
    (Please verify link)\nBEAM  — https://blog.stenmans.org/theBeamBook/\nErjang —
    https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\nAtom VM
    — http://atomvm.sourceforge.net/ Special Guest: Michał Muskała.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LU8nIARa
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d20c39c5-2b6c-44a9-96ff-0dff754dd08f.mp3
    length: '40484007'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we are joined by Michal Muskala, who is currently
      a freelance software engineer and he is here to talk to us about his work on
      the Ecto and jason libraries. With Ecto we continue our journey into Elixir
      and Michal explain how he became involved in the project and the work he did
      on it. He explains a little of its inner workings, issues and what excited him
      about it initially. We then turn to jason, a widely popular library that Michal
      created for parsing JSON. Michal unpacks its particulars, differentiating for
      us between the driver and adapter and the lessons he learned working on them.
      The last bit of our conversation is spent talking about open source and Michal's
      commitment to its philosophy. We discuss making time to work on projects, buy
      in from employers and and why getting involved can be scary yet is so important!
      For all this and more, join us for this great episode!
    duration: '27:31'
    explicit: 'no'
    keywords: elixir, erlang, ecto, jason
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d20c39c5-2b6c-44a9-96ff-0dff754dd08f/cover.jpg?v=3
    summary: "\n        <p>Today on the show we are joined by Michal Muskala, who
      is currently a freelance software engineer and he is here to talk to us about
      his work on the Ecto and jason libraries. With Ecto we continue our journey
      into Elixir and Michal explain how he became involved in the project and the
      work he did on it. He explains a little of its inner workings, issues and what
      excited him about it initially. We then turn to jason, a widely popular library
      that Michal created for parsing JSON. Michal unpacks its particulars, differentiating
      for us between the driver and adapter and the lessons he learned working on
      them. The last bit of our conversation is spent talking about open source and
      Michal&#39;s commitment to its philosophy. We discuss making time to work on
      projects, buy in from employers and and why getting involved can be scary yet
      is so important! For all this and more, join us for this great episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Michal&#39;s
      work background and how he got started on Elixir. </li>\n<li>The parts of Ecto
      that Michal worked on at Google Summer of Code.</li>\n<li>Differentiating between
      the driver and the adapter; communicating with the database.</li>\n<li>Structuring
      the code and what Michal would do differently now. </li>\n<li>Creating jason,
      the default JSON parser and the impetus behind it. </li>\n<li>Understanding
      lexing and tokenizing; largely the same thing with different names.</li>\n<li>Macros
      on jason and forcing the VM to use optimizations in particular cases. </li>\n<li>Performance
      on jason; how Michal achieved the speeds he did.</li>\n<li>Michal&#39;s path
      to open source software and what followed his work in MongoDB. </li>\n<li>Finding
      time to work on open source projects while employed.<br></li>\n<li>BEAM, alternative
      implementations and why they are important. </li>\n<li>Michal&#39;s call to
      action for our listeners! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixir — <a href=\"https://elixir-lang.org/\"
      rel=\"nofollow\">https://elixir-lang.org/</a><br>\nMichal Muskala — <a href=\"https://michal.muskala.eu/\"
      rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nMichal Muskala on Twitter
      — <a href=\"https://twitter.com/michalmuskala?lang=en\" rel=\"nofollow\">https://twitter.com/michalmuskala?lang=en</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\njason
      — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a>
      <br>\nGoogle Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\"
      rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nMondoDB — <a
      href=\"https://www.mongodb.com/\" rel=\"nofollow\">https://www.mongodb.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nBinary
      Optimization in Erlang Documentation — <a href=\"https://rhye.org/post/erlang-binary-matching-performance/\"
      rel=\"nofollow\">https://rhye.org/post/erlang-binary-matching-performance/</a>
      (Please verify link)<br>\nBEAM  — <a href=\"https://blog.stenmans.org/theBeamBook/\"
      rel=\"nofollow\">https://blog.stenmans.org/theBeamBook/</a><br>\nErjang — <a
      href=\"https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\"
      rel=\"nofollow\">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>\nAtom
      VM — <a href=\"http://atomvm.sourceforge.net/\" rel=\"nofollow\">http://atomvm.sourceforge.net/</a></p><p>Special
      Guest: Michał Muskała.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we are joined by Michal Muskala,
    who is currently a freelance software engineer and he is here to talk to us about
    his work on the Ecto and jason libraries. With Ecto we continue our journey into
    Elixir and Michal explain how he became involved in the project and the work he
    did on it. He explains a little of its inner workings, issues and what excited
    him about it initially. We then turn to jason, a widely popular library that Michal
    created for parsing JSON. Michal unpacks its particulars, differentiating for
    us between the driver and adapter and the lessons he learned working on them.
    The last bit of our conversation is spent talking about open source and Michal&#39;s
    commitment to its philosophy. We discuss making time to work on projects, buy
    in from employers and and why getting involved can be scary yet is so important!
    For all this and more, join us for this great episode!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Michal&#39;s work
    background and how he got started on Elixir. </li>\n<li>The parts of Ecto that
    Michal worked on at Google Summer of Code.</li>\n<li>Differentiating between the
    driver and the adapter; communicating with the database.</li>\n<li>Structuring
    the code and what Michal would do differently now. </li>\n<li>Creating jason,
    the default JSON parser and the impetus behind it. </li>\n<li>Understanding lexing
    and tokenizing; largely the same thing with different names.</li>\n<li>Macros
    on jason and forcing the VM to use optimizations in particular cases. </li>\n<li>Performance
    on jason; how Michal achieved the speeds he did.</li>\n<li>Michal&#39;s path to
    open source software and what followed his work in MongoDB. </li>\n<li>Finding
    time to work on open source projects while employed.<br></li>\n<li>BEAM, alternative
    implementations and why they are important. </li>\n<li>Michal&#39;s call to action
    for our listeners! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixir — <a href=\"https://elixir-lang.org/\"
    rel=\"nofollow\">https://elixir-lang.org/</a><br>\nMichal Muskala — <a href=\"https://michal.muskala.eu/\"
    rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nMichal Muskala on Twitter
    — <a href=\"https://twitter.com/michalmuskala?lang=en\" rel=\"nofollow\">https://twitter.com/michalmuskala?lang=en</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\njason
    — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a>
    <br>\nGoogle Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\"
    rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nMondoDB — <a href=\"https://www.mongodb.com/\"
    rel=\"nofollow\">https://www.mongodb.com/</a><br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a><br>\nBinary Optimization in Erlang
    Documentation — <a href=\"https://rhye.org/post/erlang-binary-matching-performance/\"
    rel=\"nofollow\">https://rhye.org/post/erlang-binary-matching-performance/</a>
    (Please verify link)<br>\nBEAM  — <a href=\"https://blog.stenmans.org/theBeamBook/\"
    rel=\"nofollow\">https://blog.stenmans.org/theBeamBook/</a><br>\nErjang — <a href=\"https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\"
    rel=\"nofollow\">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>\nAtom
    VM — <a href=\"http://atomvm.sourceforge.net/\" rel=\"nofollow\">http://atomvm.sourceforge.net/</a></p><p>Special
    Guest: Michał Muskała.</p>\n      "
- title: Todd Resudek on Hex – Elixir Internals
  slug: season-two-resudek
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-resudek
  guid: 2ebfdc2e-d967-4324-bcbe-de67bccb57e6
  pubDate: Thu, 22 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 22, 2019
  description: "Today on the show we get stuck into the inner workings of Hex 1.0
    and are happy to be joined by returning guest, Todd Resudek. As you might already
    know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the
    conference scene, and one of the three core team members at Hex. With the total
    downloads sitting at 641 million, the Hex community is growing rapidly and shows
    no signs of slowing down. In this episode, we discover what makes the Hex packages
    some of the most popular packages out there today, as well as the new and improved
    features currently in the pipeline. In addition, we find out how Todd first got
    involved with the Hex team and how the team makes decisions and problem solves.
    \nKey Points From This Episode:\nTransferring a new library into an old ecosystem.\nTodd’s
    challenges learning Elixir and Hex.\nLearn more about the functions of Alphabetify.\nAn
    introduction to the uses of ETS storage.\nContributing to Open Source while working
    at Weedmaps.\nDiscover how Todd got involved with the Hex team.\nLearn more about
    the different faces of Hex.\nFind out how decisions are made within the Hex team.\nJust
    how busy is the Hex community right now?\nThe top five underground features of
    Hex.\nDiscover the latest features now available on Hex.\nFind out what new Hex
    features are in the pipeline.\nAnd much more!\nLinks Mentioned in Today’s Episode:\nTodd
    Resudek — https://www.linkedin.com/in/toddresudek/\nWeedmaps — https://weedmaps.com/\nHex
    — https://hex.pm/\nrebar3 — https://www.rebar3.org/\nAlphabetify — https://hex.pm/packages/alphabetify\nETS
    — https://elixirschool.com/en/lessons/specifics/ets/\nElixir Mix Podcast — https://devchat.tv/elixir-mix/\nVoitek
    — https://voitekk.com/\nErlef Erlang Ecosystem Foundation — https://erlef.org/\nCrates
    — https://crates.io/crates/hex\nSmart Software with SmartLogic — https://podcast.smartlogic.io/\nNerves
    MeetUp on Twitter — https://twitter.com/nervesmeetup\nThe Big Elixir — https://www.thebigelixir.com/\n
    Special Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DkjUR79U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2ebfdc2e-d967-4324-bcbe-de67bccb57e6.mp3
    length: '33365100'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we get stuck into the inner workings of Hex 1.0 and
      are happy to be joined by returning guest, Todd Resudek. As you might already
      know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on
      the conference scene, and one of the three core team members at Hex. With the
      total downloads sitting at 641 million, the Hex community is growing rapidly
      and shows no signs of slowing down. In this episode, we discover what makes
      the Hex packages some of the most popular packages out there today, as well
      as the new and improved features currently in the pipeline. In addition, we
      find out how Todd first got involved with the Hex team and how the team makes
      decisions and problem solves.
    duration: '34:00'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2ebfdc2e-d967-4324-bcbe-de67bccb57e6/cover.jpg?v=3
    summary: "\n        <p>Today on the show we get stuck into the inner workings
      of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you
      might already know, Todd is the Senior Software Engineer at Weedmaps, a regular
      speaker on the conference scene, and one of the three core team members at Hex.
      With the total downloads sitting at 641 million, the Hex community is growing
      rapidly and shows no signs of slowing down. In this episode, we discover what
      makes the Hex packages some of the most popular packages out there today, as
      well as the new and improved features currently in the pipeline. In addition,
      we find out how Todd first got involved with the Hex team and how the team makes
      decisions and problem solves. </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Transferring
      a new library into an old ecosystem.</li>\n<li>Todd’s challenges learning Elixir
      and Hex.</li>\n<li>Learn more about the functions of Alphabetify.</li>\n<li>An
      introduction to the uses of ETS storage.</li>\n<li>Contributing to Open Source
      while working at Weedmaps.</li>\n<li>Discover how Todd got involved with the
      Hex team.</li>\n<li>Learn more about the different faces of Hex.</li>\n<li>Find
      out how decisions are made within the Hex team.</li>\n<li>Just how busy is the
      Hex community right now?</li>\n<li>The top five underground features of Hex.</li>\n<li>Discover
      the latest features now available on Hex.</li>\n<li>Find out what new Hex features
      are in the pipeline.</li>\n<li>And much more!</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\"
      rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nrebar3
      — <a href=\"https://www.rebar3.org/\" rel=\"nofollow\">https://www.rebar3.org/</a><br>\nAlphabetify
      — <a href=\"https://hex.pm/packages/alphabetify\" rel=\"nofollow\">https://hex.pm/packages/alphabetify</a><br>\nETS
      — <a href=\"https://elixirschool.com/en/lessons/specifics/ets/\" rel=\"nofollow\">https://elixirschool.com/en/lessons/specifics/ets/</a><br>\nElixir
      Mix Podcast — <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">https://devchat.tv/elixir-mix/</a><br>\nVoitek
      — <a href=\"https://voitekk.com/\" rel=\"nofollow\">https://voitekk.com/</a><br>\nErlef
      Erlang Ecosystem Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nCrates
      — <a href=\"https://crates.io/crates/hex\" rel=\"nofollow\">https://crates.io/crates/hex</a><br>\nSmart
      Software with SmartLogic — <a href=\"https://podcast.smartlogic.io/\" rel=\"nofollow\">https://podcast.smartlogic.io/</a><br>\nNerves
      MeetUp on Twitter — <a href=\"https://twitter.com/nervesmeetup\" rel=\"nofollow\">https://twitter.com/nervesmeetup</a><br>\nThe
      Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we get stuck into the inner workings
    of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you
    might already know, Todd is the Senior Software Engineer at Weedmaps, a regular
    speaker on the conference scene, and one of the three core team members at Hex.
    With the total downloads sitting at 641 million, the Hex community is growing
    rapidly and shows no signs of slowing down. In this episode, we discover what
    makes the Hex packages some of the most popular packages out there today, as well
    as the new and improved features currently in the pipeline. In addition, we find
    out how Todd first got involved with the Hex team and how the team makes decisions
    and problem solves. </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Transferring
    a new library into an old ecosystem.</li>\n<li>Todd’s challenges learning Elixir
    and Hex.</li>\n<li>Learn more about the functions of Alphabetify.</li>\n<li>An
    introduction to the uses of ETS storage.</li>\n<li>Contributing to Open Source
    while working at Weedmaps.</li>\n<li>Discover how Todd got involved with the Hex
    team.</li>\n<li>Learn more about the different faces of Hex.</li>\n<li>Find out
    how decisions are made within the Hex team.</li>\n<li>Just how busy is the Hex
    community right now?</li>\n<li>The top five underground features of Hex.</li>\n<li>Discover
    the latest features now available on Hex.</li>\n<li>Find out what new Hex features
    are in the pipeline.</li>\n<li>And much more!</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\"
    rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWeedmaps —
    <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nrebar3
    — <a href=\"https://www.rebar3.org/\" rel=\"nofollow\">https://www.rebar3.org/</a><br>\nAlphabetify
    — <a href=\"https://hex.pm/packages/alphabetify\" rel=\"nofollow\">https://hex.pm/packages/alphabetify</a><br>\nETS
    — <a href=\"https://elixirschool.com/en/lessons/specifics/ets/\" rel=\"nofollow\">https://elixirschool.com/en/lessons/specifics/ets/</a><br>\nElixir
    Mix Podcast — <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">https://devchat.tv/elixir-mix/</a><br>\nVoitek
    — <a href=\"https://voitekk.com/\" rel=\"nofollow\">https://voitekk.com/</a><br>\nErlef
    Erlang Ecosystem Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nCrates
    — <a href=\"https://crates.io/crates/hex\" rel=\"nofollow\">https://crates.io/crates/hex</a><br>\nSmart
    Software with SmartLogic — <a href=\"https://podcast.smartlogic.io/\" rel=\"nofollow\">https://podcast.smartlogic.io/</a><br>\nNerves
    MeetUp on Twitter — <a href=\"https://twitter.com/nervesmeetup\" rel=\"nofollow\">https://twitter.com/nervesmeetup</a><br>\nThe
    Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: Chris Keathley on Wallaby and Raft – Elixir Internals
  slug: season-two-keathley
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-keathley
  guid: 37e3efb0-85b7-4dd9-bbf9-a997b01c6437
  pubDate: Thu, 15 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 15, 2019
  description: "In this episode of the podcast we are joined by Chris Keathley to
    continue our exploration of Elixir internals as he tells us about two very popular
    libraries that he developed, Wallaby and Raft. We start off with some background
    and his initial experiences with Elixir and open source projects before diving
    into Wallaby and some of the biggest lessons that Chris learned during and after
    his work on the library. \nChris does a great job of explaining concurrent tests
    and the Sandbox and some of the reasons he has pretty much stopped working on
    the front end of projects. From there we move onto another one of Chris' exciting
    projects, Raft! In order to introduce the library, Chris explains more about consensus
    algorithms, Leslie Lamport and his groundbreaking work on Paxos. Raft is, in some
    ways, a simplified, more accessible version of Paxos for Elixir and Chris goes
    on to give a brief rundown of its inner workings. For this great conversation
    with a great guest, join us today!\nKey Points From This Episode:\nChris' background,
    history with Elixir and his current employment. \nHow Chris got started with open
    source work. \nWhy Chris has moved away from front end work in the last while.
    \nThe major lessons Chris learned while building Wallaby.\nHow the concurrent
    tests work on Wallaby and the Sandbox. \nWhy Chris is still excited about Raft,
    even though he hasn't touched it in a while.  \nExplaining Raft, consensus algorithms
    and Paxos. \nHow the Raft library actually works; building Raft systems and processes.
    \ \nWhere to find and connect with Chris online!\nAnd much more! \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://www.smartlogic.io/\nChris Keathley —
    https://keathley.io/\nChris Keathley on github — https://github.com/keathley\nBleacher
    Report — https://bleacherreport.com/\nWallaby — https://hexdocs.pm/wallaby/Wallaby.html\nRaft
    — https://raft.github.io/\nErlang — https://www.erlang.org/\nSlack — https://slack.com/\nLeslie
    Lamport — http://www.lamport.org/\nPaxos Made Live — https://blog.acolyer.org/2015/03/05/paxos-made-live/\nElixir
    Outlaws Podcast — https://elixiroutlaws.com/ Special Guest: Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vWL3K9QS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37e3efb0-85b7-4dd9-bbf9-a997b01c6437.mp3
    length: '26280117'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: In this episode of the podcast we are joined by Chris Keathley to continue
      our exploration of Elixir internals as he tells us about two very popular libraries
      that he developed, Wallaby and Raft. We start off with some background and his
      initial experiences with Elixir and open source projects before diving into
      Wallaby and some of the biggest lessons that Chris learned during and after
      his work on the library.
    duration: '26:46'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37e3efb0-85b7-4dd9-bbf9-a997b01c6437/cover.jpg?v=3
    summary: "\n        <p>In this episode of the podcast we are joined by Chris Keathley
      to continue our exploration of Elixir internals as he tells us about two very
      popular libraries that he developed, Wallaby and Raft. We start off with some
      background and his initial experiences with Elixir and open source projects
      before diving into Wallaby and some of the biggest lessons that Chris learned
      during and after his work on the library. </p>\n\n<p>Chris does a great job
      of explaining concurrent tests and the Sandbox and some of the reasons he has
      pretty much stopped working on the front end of projects. From there we move
      onto another one of Chris&#39; exciting projects, Raft! In order to introduce
      the library, Chris explains more about consensus algorithms, Leslie Lamport
      and his groundbreaking work on Paxos. Raft is, in some ways, a simplified, more
      accessible version of Paxos for Elixir and Chris goes on to give a brief rundown
      of its inner workings. For this great conversation with a great guest, join
      us today!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris&#39;
      background, history with Elixir and his current employment. </li>\n<li>How Chris
      got started with open source work. </li>\n<li>Why Chris has moved away from
      front end work in the last while. </li>\n<li>The major lessons Chris learned
      while building Wallaby.</li>\n<li>How the concurrent tests work on Wallaby and
      the Sandbox. </li>\n<li>Why Chris is still excited about Raft, even though he
      hasn&#39;t touched it in a while.<br></li>\n<li>Explaining Raft, consensus algorithms
      and Paxos. </li>\n<li>How the Raft library actually works; building Raft systems
      and processes.<br></li>\n<li>Where to find and connect with Chris online!</li>\n<li>And
      much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nChris
      Keathley on github — <a href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nWallaby
      — <a href=\"https://hexdocs.pm/wallaby/Wallaby.html\" rel=\"nofollow\">https://hexdocs.pm/wallaby/Wallaby.html</a><br>\nRaft
      — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nLeslie
      Lamport — <a href=\"http://www.lamport.org/\" rel=\"nofollow\">http://www.lamport.org/</a><br>\nPaxos
      Made Live — <a href=\"https://blog.acolyer.org/2015/03/05/paxos-made-live/\"
      rel=\"nofollow\">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>\nElixir
      Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a></p><p>Special
      Guest: Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>In this episode of the podcast we are joined by Chris
    Keathley to continue our exploration of Elixir internals as he tells us about
    two very popular libraries that he developed, Wallaby and Raft. We start off with
    some background and his initial experiences with Elixir and open source projects
    before diving into Wallaby and some of the biggest lessons that Chris learned
    during and after his work on the library. </p>\n\n<p>Chris does a great job of
    explaining concurrent tests and the Sandbox and some of the reasons he has pretty
    much stopped working on the front end of projects. From there we move onto another
    one of Chris&#39; exciting projects, Raft! In order to introduce the library,
    Chris explains more about consensus algorithms, Leslie Lamport and his groundbreaking
    work on Paxos. Raft is, in some ways, a simplified, more accessible version of
    Paxos for Elixir and Chris goes on to give a brief rundown of its inner workings.
    For this great conversation with a great guest, join us today!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris&#39; background, history
    with Elixir and his current employment. </li>\n<li>How Chris got started with
    open source work. </li>\n<li>Why Chris has moved away from front end work in the
    last while. </li>\n<li>The major lessons Chris learned while building Wallaby.</li>\n<li>How
    the concurrent tests work on Wallaby and the Sandbox. </li>\n<li>Why Chris is
    still excited about Raft, even though he hasn&#39;t touched it in a while.<br></li>\n<li>Explaining
    Raft, consensus algorithms and Paxos. </li>\n<li>How the Raft library actually
    works; building Raft systems and processes.<br></li>\n<li>Where to find and connect
    with Chris online!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nChris Keathley — <a href=\"https://keathley.io/\"
    rel=\"nofollow\">https://keathley.io/</a><br>\nChris Keathley on github — <a href=\"https://github.com/keathley\"
    rel=\"nofollow\">https://github.com/keathley</a><br>\nBleacher Report — <a href=\"https://bleacherreport.com/\"
    rel=\"nofollow\">https://bleacherreport.com/</a><br>\nWallaby — <a href=\"https://hexdocs.pm/wallaby/Wallaby.html\"
    rel=\"nofollow\">https://hexdocs.pm/wallaby/Wallaby.html</a><br>\nRaft — <a href=\"https://raft.github.io/\"
    rel=\"nofollow\">https://raft.github.io/</a><br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a><br>\nSlack — <a href=\"https://slack.com/\"
    rel=\"nofollow\">https://slack.com/</a><br>\nLeslie Lamport — <a href=\"http://www.lamport.org/\"
    rel=\"nofollow\">http://www.lamport.org/</a><br>\nPaxos Made Live — <a href=\"https://blog.acolyer.org/2015/03/05/paxos-made-live/\"
    rel=\"nofollow\">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>\nElixir
    Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a></p><p>Special
    Guest: Chris Keathley.</p>\n      "
- title: René Föhring on Credo – Elixir Internals
  slug: season-two-fohring
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-fohring
  guid: 9532d3dd-1d07-4ac9-b4c8-3f1580deff11
  pubDate: Thu, 08 Aug 2019 06:00:00 -0400
  pubDateFriendly: August  8, 2019
  description: "Welcome back to the SmartLogic Podcast where we talk about the latest
    developments and best practices in the web and mobile software industry. In continuing
    with our theme of Elixir Internals, we’re having a conversation about the inner
    workings of one of the most popular Elixir libraries, Credo, and we are joined
    by the author René Föhring. \nRené shares the story of how he was introduced
    to Elixir while doing his PhD and looking for a new programming language and then
    shares the philosophy and inspiration Credo was developed on. Wanting Credo to
    be a less rule-based, authoritative code analysis tool and more user friendly,
    René focused on creating it to act as a type of digital mentor to the many developers
    out there who do not have a human mentor. He also shares about some of the launching
    hiccups, what he would have done differently had he been given another opportunity
    and some of the most important lessons that he has learned working in the open
    source community. Be sure to join us for all the inside info! \nKey Points from
    This Episode:\nMore about René’s job as head of product development at 5 Minds
    and what they do. \nWhat he does in his free time: open source maintenance and
    conference speaking. \nHow he got started with Elixir and wanting to learn a new
    programming language.\nWhat Credo is all about, why you’d want to use it and what
    makes it different.  \nThe inspiration behind writing Credo and wanting a more
    positive, less dogmatic tool.  \nStarting off building on Dogma but then pivoting
    and going in an independent direction. \nThe hiccups René experienced when first
    releasing Credo and what he’d do differently. \nThe different checks in Credo
    and how they function and respond to issues. \nHow Elixir 1.6 impacted the development
    of Credo.  \nWhat’s new with the Credo 1.1 release?\nRené’s experience working
    with open source and the first library he contributed to.  \nImportant lessons
    he has learned by being part of the open source community. \nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nElixir — https://elixir-lang.org/\nCredo — http://credo-ci.org/\nRené
    Föhring on Twitter — https://twitter.com/rrrene?lang=en\n5 Minds IT – Solutions
    — https://www.5minds.de/\nGitHub — https://github.com/\nRuby — https://www.ruby-lang.org/en/\nGo
    — https://golang.org/\nCplusplus — http://www.cplusplus.com/\nStyleCop — https://github.com/StyleCop/StyleCop\nDogma
    — https://github.com/lpil/dogma\nHex — https://hex.pm/\nLearn more about how SmartLogic
    uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: René Föhring.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+7CuvZa48
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9532d3dd-1d07-4ac9-b4c8-3f1580deff11.mp3
    length: '29222045'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome back to the SmartLogic Podcast where we talk about the latest
      developments and best practices in the web and mobile software industry. In
      continuing with our theme of Elixir Internals, we’re having a conversation about
      the inner workings of one of the most popular Elixir libraries, Credo, and we
      are joined by the author René Föhring. René shares the story of how he was
      introduced to Elixir while doing his PhD and looking for a new programming language
      and then shares the philosophy and inspiration Credo was developed on.
    duration: '29:36'
    explicit: 'no'
    keywords: elixir, credo
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9532d3dd-1d07-4ac9-b4c8-3f1580deff11/cover.jpg?v=3
    summary: "\n        <p>Welcome back to the SmartLogic Podcast where we talk about
      the latest developments and best practices in the web and mobile software industry.
      In continuing with our theme of Elixir Internals, we’re having a conversation
      about the inner workings of one of the most popular Elixir libraries, Credo,
      and we are joined by the author René Föhring. </p>\n\n<p>René shares the story
      of how he was introduced to Elixir while doing his PhD and looking for a new
      programming language and then shares the philosophy and inspiration Credo was
      developed on. Wanting Credo to be a less rule-based, authoritative code analysis
      tool and more user friendly, René focused on creating it to act as a type of
      digital mentor to the many developers out there who do not have a human mentor.
      He also shares about some of the launching hiccups, what he would have done
      differently had he been given another opportunity and some of the most important
      lessons that he has learned working in the open source community. Be sure to
      join us for all the inside info! </p>\n\n<p><strong>Key Points from This Episode:</strong></p>\n\n<ul>\n<li>More
      about René’s job as head of product development at 5 Minds and what they do.
      </li>\n<li>What he does in his free time: open source maintenance and conference
      speaking. </li>\n<li>How he got started with Elixir and wanting to learn a new
      programming language.</li>\n<li>What Credo is all about, why you’d want to use
      it and what makes it different.<br></li>\n<li>The inspiration behind writing
      Credo and wanting a more positive, less dogmatic tool.<br></li>\n<li>Starting
      off building on Dogma but then pivoting and going in an independent direction.
      </li>\n<li>The hiccups René experienced when first releasing Credo and what
      he’d do differently. </li>\n<li>The different checks in Credo and how they function
      and respond to issues. </li>\n<li>How Elixir 1.6 impacted the development of
      Credo.<br></li>\n<li>What’s new with the Credo 1.1 release?</li>\n<li>René’s
      experience working with open source and the first library he contributed to.<br></li>\n<li>Important
      lessons he has learned by being part of the open source community. </li>\n<li>And
      much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Elixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nCredo
      — <a href=\"http://credo-ci.org/\" rel=\"nofollow\">http://credo-ci.org/</a><br>\nRené
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene?lang=en\" rel=\"nofollow\">https://twitter.com/rrrene?lang=en</a><br>\n5
      Minds IT – Solutions — <a href=\"https://www.5minds.de/\" rel=\"nofollow\">https://www.5minds.de/</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nGo
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCplusplus
      — <a href=\"http://www.cplusplus.com/\" rel=\"nofollow\">http://www.cplusplus.com/</a><br>\nStyleCop
      — <a href=\"https://github.com/StyleCop/StyleCop\" rel=\"nofollow\">https://github.com/StyleCop/StyleCop</a><br>\nDogma
      — <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: René Föhring.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to the SmartLogic Podcast where we talk
    about the latest developments and best practices in the web and mobile software
    industry. In continuing with our theme of Elixir Internals, we’re having a conversation
    about the inner workings of one of the most popular Elixir libraries, Credo, and
    we are joined by the author René Föhring. </p>\n\n<p>René shares the story of
    how he was introduced to Elixir while doing his PhD and looking for a new programming
    language and then shares the philosophy and inspiration Credo was developed on.
    Wanting Credo to be a less rule-based, authoritative code analysis tool and more
    user friendly, René focused on creating it to act as a type of digital mentor
    to the many developers out there who do not have a human mentor. He also shares
    about some of the launching hiccups, what he would have done differently had he
    been given another opportunity and some of the most important lessons that he
    has learned working in the open source community. Be sure to join us for all the
    inside info! </p>\n\n<p><strong>Key Points from This Episode:</strong></p>\n\n<ul>\n<li>More
    about René’s job as head of product development at 5 Minds and what they do. </li>\n<li>What
    he does in his free time: open source maintenance and conference speaking. </li>\n<li>How
    he got started with Elixir and wanting to learn a new programming language.</li>\n<li>What
    Credo is all about, why you’d want to use it and what makes it different.<br></li>\n<li>The
    inspiration behind writing Credo and wanting a more positive, less dogmatic tool.<br></li>\n<li>Starting
    off building on Dogma but then pivoting and going in an independent direction.
    </li>\n<li>The hiccups René experienced when first releasing Credo and what he’d
    do differently. </li>\n<li>The different checks in Credo and how they function
    and respond to issues. </li>\n<li>How Elixir 1.6 impacted the development of Credo.<br></li>\n<li>What’s
    new with the Credo 1.1 release?</li>\n<li>René’s experience working with open
    source and the first library he contributed to.<br></li>\n<li>Important lessons
    he has learned by being part of the open source community. </li>\n<li>And much
    more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Elixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nCredo
    — <a href=\"http://credo-ci.org/\" rel=\"nofollow\">http://credo-ci.org/</a><br>\nRené
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene?lang=en\" rel=\"nofollow\">https://twitter.com/rrrene?lang=en</a><br>\n5
    Minds IT – Solutions — <a href=\"https://www.5minds.de/\" rel=\"nofollow\">https://www.5minds.de/</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nGo
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCplusplus
    — <a href=\"http://www.cplusplus.com/\" rel=\"nofollow\">http://www.cplusplus.com/</a><br>\nStyleCop
    — <a href=\"https://github.com/StyleCop/StyleCop\" rel=\"nofollow\">https://github.com/StyleCop/StyleCop</a><br>\nDogma
    — <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: René Föhring.</p>\n      "
- title: Meryl Dakin on Token Alchemist – Elixir Internals
  slug: season-two-dakin
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-dakin
  guid: 3050865c-0418-42d6-ade9-9605af11fee6
  pubDate: Thu, 01 Aug 2019 06:00:00 -0400
  pubDateFriendly: August  1, 2019
  description: "Today on the show we continue our series on the inner workings of
    several different Elixir libraries and are happy to be joined by Meryl Dakin,
    Software Engineer at the Flatiron School and author of Token Alchemist. In this
    episode, we discover how Meryl got started with Elixir and what the process was
    like for her transitioning from Ruby to Elixir. We learn more about the internal
    functions of Token Alchemist within the school context and discuss the unique
    opportunities Meryl has discovered in Elixir, as well as the trickier language
    features that programmers are likely to experience in their learning process.
    Meryl also shares the challenges that Token Alchemist attempts to overcome – delving
    deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more,
    be sure to click play!\nKey Points From This Episode:\nDiscover why Meryl first
    got started with Elixir.\nLearn more about the Flatiron Bootcamp for coders.\nMeryl’s
    experience in transitioning from Ruby to Elixir.\nThe opportunities for concurrency
    and fault tolerance in Elixir.\nDiscover the top three tricky language features
    in Elixir.\nThe benefits of going back to the basics of Elixir.\nFind out the
    problems that Token Alchemist attempts to solve.\nMeryl explains LTI and the Learn.co
    platform for students. \nLearn more about custom parameters in Token Alchemist.\nThe
    process of learning OAuth in Token Alchemist.\nWhat to consider when using LTI
    in Elixir.\nThe benefits of resource link history ID’s in the LTI spec.\nOpportunities
    for you with Token Alchemist.\nAnd much more!\nLinks Mentioned in Today’s Episode:\nWe
    Work — https://www.wework.com/\nFlatiron School — https://flatironschool.com/\nElixir
    — https://elixir-lang.org/\nRuby — https://www.ruby-lang.org/en/\nLearn.co — https://learn.co/\nMeryl
    on LinkedIn — https://www.linkedin.com/in/meryldakin/\nMeryl on Twitter — https://twitter.com/meryldakin\nMeryl
    on GitHub — https://github.com/meryldakin\nToken Alchemist on GitHub — https://github.com/meryldakin/token_alchemist\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Meryl Dakin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gPjajuW1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3050865c-0418-42d6-ade9-9605af11fee6.mp3
    length: '27206406'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we continue our series on the inner workings of several
      different Elixir libraries and are happy to be joined by Meryl Dakin, Software
      Engineer at the Flatiron School and author of Token Alchemist. In this episode,
      we discover how Meryl got started with Elixir and what the process was like
      for her transitioning from Ruby to Elixir. We learn more about the internal
      functions of Token Alchemist within the school context and discuss the unique
      opportunities Meryl has discovered in Elixir, as well as the trickier language
      features that programmers are likely to experience in their learning process.
      Meryl also shares the challenges that Token Alchemist attempts to overcome –
      delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this
      and more, be sure to click play!
    duration: '27:31'
    explicit: 'no'
    keywords: elixir, wework, flatiron school, token alchemist
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3050865c-0418-42d6-ade9-9605af11fee6/cover.jpg?v=3
    summary: "\n        <p>Today on the show we continue our series on the inner workings
      of several different Elixir libraries and are happy to be joined by Meryl Dakin,
      Software Engineer at the Flatiron School and author of Token Alchemist. In this
      episode, we discover how Meryl got started with Elixir and what the process
      was like for her transitioning from Ruby to Elixir. We learn more about the
      internal functions of Token Alchemist within the school context and discuss
      the unique opportunities Meryl has discovered in Elixir, as well as the trickier
      language features that programmers are likely to experience in their learning
      process. Meryl also shares the challenges that Token Alchemist attempts to overcome
      – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this
      and more, be sure to click play!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Discover
      why Meryl first got started with Elixir.</li>\n<li>Learn more about the Flatiron
      Bootcamp for coders.</li>\n<li>Meryl’s experience in transitioning from Ruby
      to Elixir.</li>\n<li>The opportunities for concurrency and fault tolerance in
      Elixir.</li>\n<li>Discover the top three tricky language features in Elixir.</li>\n<li>The
      benefits of going back to the basics of Elixir.</li>\n<li>Find out the problems
      that Token Alchemist attempts to solve.</li>\n<li>Meryl explains LTI and the
      Learn.co platform for students. </li>\n<li>Learn more about custom parameters
      in Token Alchemist.</li>\n<li>The process of learning OAuth in Token Alchemist.</li>\n<li>What
      to consider when using LTI in Elixir.</li>\n<li>The benefits of resource link
      history ID’s in the LTI spec.</li>\n<li>Opportunities for you with Token Alchemist.</li>\n<li>And
      much more!</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>We
      Work — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nLearn.co
      — <a href=\"https://learn.co/\" rel=\"nofollow\">https://learn.co/</a><br>\nMeryl
      on LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
      on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nMeryl
      on GitHub — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nToken
      Alchemist on GitHub — <a href=\"https://github.com/meryldakin/token_alchemist\"
      rel=\"nofollow\">https://github.com/meryldakin/token_alchemist</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we continue our series on the inner
    workings of several different Elixir libraries and are happy to be joined by Meryl
    Dakin, Software Engineer at the Flatiron School and author of Token Alchemist.
    In this episode, we discover how Meryl got started with Elixir and what the process
    was like for her transitioning from Ruby to Elixir. We learn more about the internal
    functions of Token Alchemist within the school context and discuss the unique
    opportunities Meryl has discovered in Elixir, as well as the trickier language
    features that programmers are likely to experience in their learning process.
    Meryl also shares the challenges that Token Alchemist attempts to overcome – delving
    deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more,
    be sure to click play!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Discover
    why Meryl first got started with Elixir.</li>\n<li>Learn more about the Flatiron
    Bootcamp for coders.</li>\n<li>Meryl’s experience in transitioning from Ruby to
    Elixir.</li>\n<li>The opportunities for concurrency and fault tolerance in Elixir.</li>\n<li>Discover
    the top three tricky language features in Elixir.</li>\n<li>The benefits of going
    back to the basics of Elixir.</li>\n<li>Find out the problems that Token Alchemist
    attempts to solve.</li>\n<li>Meryl explains LTI and the Learn.co platform for
    students. </li>\n<li>Learn more about custom parameters in Token Alchemist.</li>\n<li>The
    process of learning OAuth in Token Alchemist.</li>\n<li>What to consider when
    using LTI in Elixir.</li>\n<li>The benefits of resource link history ID’s in the
    LTI spec.</li>\n<li>Opportunities for you with Token Alchemist.</li>\n<li>And
    much more!</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>We
    Work — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nLearn.co
    — <a href=\"https://learn.co/\" rel=\"nofollow\">https://learn.co/</a><br>\nMeryl
    on LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
    on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nMeryl
    on GitHub — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nToken
    Alchemist on GitHub — <a href=\"https://github.com/meryldakin/token_alchemist\"
    rel=\"nofollow\">https://github.com/meryldakin/token_alchemist</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>\n      "
- title: Paul Schoenfelder on Distillery – Elixir Internals
  slug: season-two-schoenfelder
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-schoenfelder
  guid: bd39f088-71c3-4425-b78e-8fc4a5324a1c
  pubDate: Thu, 25 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 25, 2019
  description: "Welcome back to show everyone and today in our exploration of Elixir
    libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery,
    his own creation from the world of Elixir and tell us about how it works. We also
    discuss how Paul made the transition from bigger corporations into the startup
    world, his early experiences of different coding languages and the initial steps
    he took in writing Distillery. Paul is very honest about the unclear future of
    the library and he shares his hopes for it for the short term as well as clarifying
    its key concepts and functions. He gives great advice and directions for learning
    more about the resource and how you can help him and his projects out if you use
    them. For all this and then some, be sure to join us today for the show! \n Key
    Points From This Episode: \n* Paul's work background, language history and the
    last few years working Elixir. \n* The first library that Paul contributed to
    and created on his own! \n* What brought about the creation of Distillery. \n*
    Clarifying releases, compiling, generating, deployment and more. \n* Where to
    learn more and find out details about the library. \n* The first steps Paul took
    when writing this latest version of the Distillery. \n* Looking to the future
    of Distillery and its current best use cases. \n* Hot upgrades and who they can
    be useful to when it comes to Elixir. \n* Let Paul know if you are using or want
    to contribute to a project of his! \n* And much more! \nLinks Mentioned in Today’s
    Episode: \nSmartlogic — https://www.smartlogic.io/ \nPaul Schoenfelder — https://github.com/bitwalker
    \nBitwalker — http://bitwalker.org/ \nDistillery — https://hex.pm/packages/distillery
    \nDockYard — https://dockyard.com/ \nErlang — https://www.erlang.org/ \nPhoenix
    — https://phoenixframework.org/ \nLearn more about how SmartLogic uses Phoenix
    and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Paul Schoenfelder.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+RIfQ8UW-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bd39f088-71c3-4425-b78e-8fc4a5324a1c.mp3
    length: '29247478'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: 'Welcome back to show everyone and today in our exploration of Elixir
      libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery,
      his own creation from the world of Elixir and tell us about how it works. We
      also discuss how Paul made the transition from bigger corporations into the
      startup world, his early experiences of different coding languages and the initial
      steps he took in writing Distillery. Paul is very honest about the unclear future
      of the library and he shares his hopes for it for the short term as well as
      clarifying its key concepts and functions. He gives great advice and directions
      for learning more about the resource and how you can help him and his projects
      out if you use them. For all this and then some, be sure to join us today for
      the show! '
    duration: '29:45'
    explicit: 'no'
    keywords: elixir, distillery
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bd39f088-71c3-4425-b78e-8fc4a5324a1c/cover.jpg?v=3
    summary: "\n        <p>Welcome back to show everyone and today in our exploration
      of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack
      Distillery, his own creation from the world of Elixir and tell us about how
      it works. We also discuss how Paul made the transition from bigger corporations
      into the startup world, his early experiences of different coding languages
      and the initial steps he took in writing Distillery. Paul is very honest about
      the unclear future of the library and he shares his hopes for it for the short
      term as well as clarifying its key concepts and functions. He gives great advice
      and directions for learning more about the resource and how you can help him
      and his projects out if you use them. For all this and then some, be sure to
      join us today for the show! </p>\n\n<p>Key Points From This Episode: </p>\n\n<ul>\n<li>Paul&#39;s
      work background, language history and the last few years working Elixir. </li>\n<li>The
      first library that Paul contributed to and created on his own! </li>\n<li>What
      brought about the creation of Distillery. </li>\n<li>Clarifying releases, compiling,
      generating, deployment and more. </li>\n<li>Where to learn more and find out
      details about the library. </li>\n<li>The first steps Paul took when writing
      this latest version of the Distillery. </li>\n<li>Looking to the future of Distillery
      and its current best use cases. </li>\n<li>Hot upgrades and who they can be
      useful to when it comes to Elixir. </li>\n<li>Let Paul know if you are using
      or want to contribute to a project of his! </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode: <br>\nSmartlogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a> <br>\nPaul Schoenfelder — <a
      href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a>
      <br>\nBitwalker — <a href=\"http://bitwalker.org/\" rel=\"nofollow\">http://bitwalker.org/</a>
      <br>\nDistillery — <a href=\"https://hex.pm/packages/distillery\" rel=\"nofollow\">https://hex.pm/packages/distillery</a>
      <br>\nDockYard — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a>
      <br>\nErlang — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a>
      <br>\nPhoenix — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a>
      </p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>\n
      \     "
  contentEncoded: "\n        <p>Welcome back to show everyone and today in our exploration
    of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack
    Distillery, his own creation from the world of Elixir and tell us about how it
    works. We also discuss how Paul made the transition from bigger corporations into
    the startup world, his early experiences of different coding languages and the
    initial steps he took in writing Distillery. Paul is very honest about the unclear
    future of the library and he shares his hopes for it for the short term as well
    as clarifying its key concepts and functions. He gives great advice and directions
    for learning more about the resource and how you can help him and his projects
    out if you use them. For all this and then some, be sure to join us today for
    the show! </p>\n\n<p>Key Points From This Episode: </p>\n\n<ul>\n<li>Paul&#39;s
    work background, language history and the last few years working Elixir. </li>\n<li>The
    first library that Paul contributed to and created on his own! </li>\n<li>What
    brought about the creation of Distillery. </li>\n<li>Clarifying releases, compiling,
    generating, deployment and more. </li>\n<li>Where to learn more and find out details
    about the library. </li>\n<li>The first steps Paul took when writing this latest
    version of the Distillery. </li>\n<li>Looking to the future of Distillery and
    its current best use cases. </li>\n<li>Hot upgrades and who they can be useful
    to when it comes to Elixir. </li>\n<li>Let Paul know if you are using or want
    to contribute to a project of his! </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode: <br>\nSmartlogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a> <br>\nPaul Schoenfelder — <a href=\"https://github.com/bitwalker\"
    rel=\"nofollow\">https://github.com/bitwalker</a> <br>\nBitwalker — <a href=\"http://bitwalker.org/\"
    rel=\"nofollow\">http://bitwalker.org/</a> <br>\nDistillery — <a href=\"https://hex.pm/packages/distillery\"
    rel=\"nofollow\">https://hex.pm/packages/distillery</a> <br>\nDockYard — <a href=\"https://dockyard.com/\"
    rel=\"nofollow\">https://dockyard.com/</a> <br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a> <br>\nPhoenix — <a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">https://phoenixframework.org/</a> </p>\n\n<p>Learn more about
    how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>\n      "
- title: Bryan Joseph on ElixirScript – Elixir Internals
  slug: season-two-joseph
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-joseph
  guid: ed1a46a8-a3ac-4808-b1e5-91e950b2791a
  pubDate: Thu, 18 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 18, 2019
  description: "Today on the show we continue our series on the inner workings and
    various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry
    to talk about his very own ElixirScript. ElixirScript is essentially an Elixir
    to JavaScript compiler, allowing users to run Elixir online more easily. We ask
    Bryan what inspired this project and about some of the major challenges that have
    faced it. We also talk about the role of his company, Revelry in his career and
    work in open source. Bryan tells us about his very own conference, The Big Elixir
    and why you should be traveling to New Orleans to check it out! Other topics covered
    include the architecture of ElixirScript, binary pattern matching, Bryan's other
    experiences of libraries and his hopes for ElixirScript's future. For all this
    and then some, be sure to listen in today!\nKey Points From This Episode:\nSome
    background on Bryan, his work and how he got started with Elixir. \nWhat is ElixirScript?
    What does it do? How Brian got the idea!\nElixirScript's architecture; the inner
    workings of the compiler.\nThe major problems and challenges that face this task
    with JavaScript. \nStep one in the process; the conversion of concepts.\nBinary
    pattern matching and the implementation of strings. \nThe things Bryan would do
    differently looking back on the product.   \nBryan's other experiences of libraries,
    contributions and fixes. \nMarketing, posting and getting the word out on ElixirScript.\nThe
    current state of the project and hopes for the future. \nA little bit about The
    Big Elixir and what sets it apart from other conferences.  \nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nSmartlogic — https://www.smartlogic.io/\nElixirScript
    — https://elixirscript.github.io/\nBryan Joseph — https://github.com/bryanjos\nRevelry
    — https://revelry.co/\nThe Big Elixir— https://www.thebigelixir.com/\nMetaprogramming
    Elixir — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\nChris
    McCord — http://chrismccord.com/\nErlang — https://www.erlang.org/\nElixirCon
    — https://www.elixirlabs.net/events/elixircon-2018\nLonestar Elixir — https://www.lonestarelixir.com/\nOperation
    Spark — https://operationspark.org/\nFlatiron — https://flatironschool.com/\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Bryan Joseph.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+x9zPXyrf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a.mp3
    length: '23874493'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we continue our series on the inner workings and various
      libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to
      talk about his very own ElixirScript. ElixirScript is essentially an Elixir
      to JavaScript compiler, allowing users to run Elixir online more easily.
    duration: '23:56'
    explicit: 'no'
    keywords: elixir, elixirscript, the big elixir
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a/cover.jpg?v=3
    summary: "\n        <p>Today on the show we continue our series on the inner workings
      and various libraries of Elixir and are very happy to welcome Bryan Joseph of
      Revelry to talk about his very own ElixirScript. ElixirScript is essentially
      an Elixir to JavaScript compiler, allowing users to run Elixir online more easily.
      We ask Bryan what inspired this project and about some of the major challenges
      that have faced it. We also talk about the role of his company, Revelry in his
      career and work in open source. Bryan tells us about his very own conference,
      The Big Elixir and why you should be traveling to New Orleans to check it out!
      Other topics covered include the architecture of ElixirScript, binary pattern
      matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s
      future. For all this and then some, be sure to listen in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Some background on Bryan, his work
      and how he got started with Elixir. </li>\n<li>What is ElixirScript? What does
      it do? How Brian got the idea!</li>\n<li>ElixirScript&#39;s architecture; the
      inner workings of the compiler.</li>\n<li>The major problems and challenges
      that face this task with JavaScript. </li>\n<li>Step one in the process; the
      conversion of concepts.</li>\n<li>Binary pattern matching and the implementation
      of strings. </li>\n<li>The things Bryan would do differently looking back on
      the product.<br></li>\n<li>Bryan&#39;s other experiences of libraries, contributions
      and fixes. </li>\n<li>Marketing, posting and getting the word out on ElixirScript.</li>\n<li>The
      current state of the project and hopes for the future. </li>\n<li>A little bit
      about The Big Elixir and what sets it apart from other conferences.<br></li>\n<li>And
      much more! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic
      — <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixirScript
      — <a href=\"https://elixirscript.github.io/\" rel=\"nofollow\">https://elixirscript.github.io/</a><br>\nBryan
      Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nRevelry
      — <a href=\"https://revelry.co/\" rel=\"nofollow\">https://revelry.co/</a><br>\nThe
      Big Elixir— <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nMetaprogramming
      Elixir — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
      rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixirCon
      — <a href=\"https://www.elixirlabs.net/events/elixircon-2018\" rel=\"nofollow\">https://www.elixirlabs.net/events/elixircon-2018</a><br>\nLonestar
      Elixir — <a href=\"https://www.lonestarelixir.com/\" rel=\"nofollow\">https://www.lonestarelixir.com/</a><br>\nOperation
      Spark — <a href=\"https://operationspark.org/\" rel=\"nofollow\">https://operationspark.org/</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we continue our series on the inner
    workings and various libraries of Elixir and are very happy to welcome Bryan Joseph
    of Revelry to talk about his very own ElixirScript. ElixirScript is essentially
    an Elixir to JavaScript compiler, allowing users to run Elixir online more easily.
    We ask Bryan what inspired this project and about some of the major challenges
    that have faced it. We also talk about the role of his company, Revelry in his
    career and work in open source. Bryan tells us about his very own conference,
    The Big Elixir and why you should be traveling to New Orleans to check it out!
    Other topics covered include the architecture of ElixirScript, binary pattern
    matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s
    future. For all this and then some, be sure to listen in today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Some background on Bryan, his work
    and how he got started with Elixir. </li>\n<li>What is ElixirScript? What does
    it do? How Brian got the idea!</li>\n<li>ElixirScript&#39;s architecture; the
    inner workings of the compiler.</li>\n<li>The major problems and challenges that
    face this task with JavaScript. </li>\n<li>Step one in the process; the conversion
    of concepts.</li>\n<li>Binary pattern matching and the implementation of strings.
    </li>\n<li>The things Bryan would do differently looking back on the product.<br></li>\n<li>Bryan&#39;s
    other experiences of libraries, contributions and fixes. </li>\n<li>Marketing,
    posting and getting the word out on ElixirScript.</li>\n<li>The current state
    of the project and hopes for the future. </li>\n<li>A little bit about The Big
    Elixir and what sets it apart from other conferences.<br></li>\n<li>And much more!
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic —
    <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixirScript
    — <a href=\"https://elixirscript.github.io/\" rel=\"nofollow\">https://elixirscript.github.io/</a><br>\nBryan
    Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nRevelry
    — <a href=\"https://revelry.co/\" rel=\"nofollow\">https://revelry.co/</a><br>\nThe
    Big Elixir— <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nMetaprogramming
    Elixir — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
    rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixirCon
    — <a href=\"https://www.elixirlabs.net/events/elixircon-2018\" rel=\"nofollow\">https://www.elixirlabs.net/events/elixircon-2018</a><br>\nLonestar
    Elixir — <a href=\"https://www.lonestarelixir.com/\" rel=\"nofollow\">https://www.lonestarelixir.com/</a><br>\nOperation
    Spark — <a href=\"https://operationspark.org/\" rel=\"nofollow\">https://operationspark.org/</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>\n      "
- title: Brooklyn Zelenka on Witchcraft - Elixir Internals
  slug: season-two-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-zelenka
  guid: 490b7cc3-44d7-4917-9688-2450d18de62a
  pubDate: Thu, 11 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 11, 2019
  description: "Hey everybody and welcome back to Season 2 of the podcast! This season
    we will be talking about Elixir internals, libraries and the inner workings of
    the language. In our first episode we are very happy to be joined by Brooklyn
    Zelenka to start off our journey on the subject with an exploration of her very
    own Witchcraft.\nIn this episode we talk to Brooklyn about her history with Elixir,
    how she got started and what attracts her to it. Brooklyn explains the influence
    that open source philosophy has had on her career in developing and from there
    she gives a pretty comprehensive introduction to what Witchcraft is, expanding
    its key concepts. Although this is quite a high level discussion about Elixir
    and Witchcraft, we are confident that with Brooklyn's expert help even our most
    uninitiated listener can get some benefit from our conversation. We also talk
    about type systems, property-based checking and Dialyzer, so for all of this and
    more make sure to join us as we kick things off for Season 2!\nKey Points From
    This Episode:\nA quick introduction to Brooklyn, where she works and how she got
    started with Elixir.  \nThe influence of open source and library contributions
    on Brooklyn's development.\nGetting to grips with Witchcraft; defining monads
    and functors.\nWhy some of these scary terms do not need to frighten you. \nA
    few little things that differentiate Witchcraft and some surprising elements.\nThe
    convenient guarantees that Witchcraft provides around your data structure. \nWhy
    there is no type system baked into Elixir; overheads, inputs and outputs. \nProperty-based
    checking and compile times in Witchcraft.\nMerging of Elixir and Dialyzer; benefits
    and problems. \nGetting in touch with Brooklyn and getting involved with Witchcraft
    and Elixir. \nAnd much more! \nLinks Mentioned in Today’s Episode:\nSmartlogic
    — https://www.smartlogic.io/\nBrooklyn Zelenka — https://github.com/expede\nBrooklyn
    Zelenka on Twitter — https://twitter.com/expede\nBrooklyn Zelenka Email — hello@brooklynzelenka.com\nFission
    — https://fission.codes/\nElixir — https://elixir-lang.org/\nWitchcraft — https://hex.pm/packages/witchcraft\nDialyzer
    — https://github.com/jeremyjh/dialyxir\nLearn more about how SmartLogic uses Phoenix
    and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+BeykEzKP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/490b7cc3-44d7-4917-9688-2450d18de62a.mp3
    length: '29867258'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Hey everybody and welcome back to Season 2 of the podcast! This season
      we will be talking about Elixir internals, libraries and the inner workings
      of the language. In our first episode we are very happy to be joined by Brooklyn
      Zelenka to start off our journey on the subject with an exploration of her very
      own Witchcraft.
    duration: '30:15'
    explicit: 'no'
    keywords: elixir, witchcraft, dialyzer
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/490b7cc3-44d7-4917-9688-2450d18de62a/cover.jpg?v=3
    summary: "\n        <p>Hey everybody and welcome back to Season 2 of the podcast!
      This season we will be talking about Elixir internals, libraries and the inner
      workings of the language. In our first episode we are very happy to be joined
      by Brooklyn Zelenka to start off our journey on the subject with an exploration
      of her very own Witchcraft.</p>\n\n<p>In this episode we talk to Brooklyn about
      her history with Elixir, how she got started and what attracts her to it. Brooklyn
      explains the influence that open source philosophy has had on her career in
      developing and from there she gives a pretty comprehensive introduction to what
      Witchcraft is, expanding its key concepts. Although this is quite a high level
      discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s
      expert help even our most uninitiated listener can get some benefit from our
      conversation. We also talk about type systems, property-based checking and Dialyzer,
      so for all of this and more make sure to join us as we kick things off for Season
      2!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A quick introduction
      to Brooklyn, where she works and how she got started with Elixir.<br></li>\n<li>The
      influence of open source and library contributions on Brooklyn&#39;s development.</li>\n<li>Getting
      to grips with Witchcraft; defining monads and functors.</li>\n<li>Why some of
      these scary terms do not need to frighten you. </li>\n<li>A few little things
      that differentiate Witchcraft and some surprising elements.</li>\n<li>The convenient
      guarantees that Witchcraft provides around your data structure. </li>\n<li>Why
      there is no type system baked into Elixir; overheads, inputs and outputs. </li>\n<li>Property-based
      checking and compile times in Witchcraft.</li>\n<li>Merging of Elixir and Dialyzer;
      benefits and problems. </li>\n<li>Getting in touch with Brooklyn and getting
      involved with Witchcraft and Elixir. </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
      rel=\"nofollow\">https://github.com/expede</a><br>\nBrooklyn Zelenka on Twitter
      — <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\nBrooklyn
      Zelenka Email — <a href=\"mailto:hello@brooklynzelenka.com\" rel=\"nofollow\">hello@brooklynzelenka.com</a><br>\nFission
      — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nWitchcraft
      — <a href=\"https://hex.pm/packages/witchcraft\" rel=\"nofollow\">https://hex.pm/packages/witchcraft</a><br>\nDialyzer
      — <a href=\"https://github.com/jeremyjh/dialyxir\" rel=\"nofollow\">https://github.com/jeremyjh/dialyxir</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>\n      "
  contentEncoded: "\n        <p>Hey everybody and welcome back to Season 2 of the
    podcast! This season we will be talking about Elixir internals, libraries and
    the inner workings of the language. In our first episode we are very happy to
    be joined by Brooklyn Zelenka to start off our journey on the subject with an
    exploration of her very own Witchcraft.</p>\n\n<p>In this episode we talk to Brooklyn
    about her history with Elixir, how she got started and what attracts her to it.
    Brooklyn explains the influence that open source philosophy has had on her career
    in developing and from there she gives a pretty comprehensive introduction to
    what Witchcraft is, expanding its key concepts. Although this is quite a high
    level discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s
    expert help even our most uninitiated listener can get some benefit from our conversation.
    We also talk about type systems, property-based checking and Dialyzer, so for
    all of this and more make sure to join us as we kick things off for Season 2!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>A quick introduction to Brooklyn, where
    she works and how she got started with Elixir.<br></li>\n<li>The influence of
    open source and library contributions on Brooklyn&#39;s development.</li>\n<li>Getting
    to grips with Witchcraft; defining monads and functors.</li>\n<li>Why some of
    these scary terms do not need to frighten you. </li>\n<li>A few little things
    that differentiate Witchcraft and some surprising elements.</li>\n<li>The convenient
    guarantees that Witchcraft provides around your data structure. </li>\n<li>Why
    there is no type system baked into Elixir; overheads, inputs and outputs. </li>\n<li>Property-based
    checking and compile times in Witchcraft.</li>\n<li>Merging of Elixir and Dialyzer;
    benefits and problems. </li>\n<li>Getting in touch with Brooklyn and getting involved
    with Witchcraft and Elixir. </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
    rel=\"nofollow\">https://github.com/expede</a><br>\nBrooklyn Zelenka on Twitter
    — <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\nBrooklyn
    Zelenka Email — <a href=\"mailto:hello@brooklynzelenka.com\" rel=\"nofollow\">hello@brooklynzelenka.com</a><br>\nFission
    — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nWitchcraft
    — <a href=\"https://hex.pm/packages/witchcraft\" rel=\"nofollow\">https://hex.pm/packages/witchcraft</a><br>\nDialyzer
    — <a href=\"https://github.com/jeremyjh/dialyxir\" rel=\"nofollow\">https://github.com/jeremyjh/dialyxir</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>\n      "
- title: Season 2 Trailer
  slug: season-2-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/season-2-trailer
  guid: 2301755d-d5af-4c53-b044-2d84b35b340f
  pubDate: Tue, 09 Jul 2019 06:00:00 -0400
  pubDateFriendly: July  9, 2019
  description: "We’re excited to announce our season two topic, Elixir Internals.
    In this season we talk with developers behind some of the most popular Elixir
    libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more! \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6-2E3Exs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2301755d-d5af-4c53-b044-2d84b35b340f.mp3
    length: '2507438'
    type: audio/mpeg
  itunes:
    episodeType: trailer
    season: '2'
    author: SmartLogic LLC
    subtitle: We’re excited to announce our season two topic, Elixir Internals. In
      this season we talk with developers behind some of the most popular Elixir libraries,
      including Witchcraft, ElixirScript, Distillery, Ecto, and more!
    duration: '1:26'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>We’re excited to announce our season two topic, Elixir
      Internals. In this season we talk with developers behind some of the most popular
      Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and
      more!</p>\n      "
  contentEncoded: "\n        <p>We’re excited to announce our season two topic, Elixir
    Internals. In this season we talk with developers behind some of the most popular
    Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more!</p>\n
    \     "
Season 1:
- title: Elixir in Production Recap
  slug: season-1-recap
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-recap
  guid: e81d239d-448f-4244-884a-f5f972277713
  pubDate: Thu, 18 Apr 2019 06:00:00 -0400
  pubDateFriendly: April 18, 2019
  description: |
    With this season over, we bring Dan Ivovich back to talk about what we learned.
    Dan Ivovich - Director of Development Operations @ SmartLogic
    00:43 - Why are you using Elixir in production?
    01:20 - Advantages / disadvantages of Elixir
    02:38 - How do you deploy?
    03:48 - Zero downtime deploys
    05:40 - Clustering
    06:56 - Elixir App performance
    09:00 - Background task processing
    10:36 - Common Libraries
    14:40 - 3rd Party Services
    16:16 - Do you have a story where Elixir saved the day in production?
    17:56 - OTP features
    18:31 - Tip to developers
    Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Dan Ivovich.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+QNebX_LU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e81d239d-448f-4244-884a-f5f972277713.mp3
    length: '19256966'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: With this season over, we bring Dan Ivovich back to talk about what
      we learned.
    duration: '20:03'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>With this season over, we bring Dan Ivovich back to talk
      about what we learned.</p>\n\n<p>Dan Ivovich - Director of Development Operations
      @ SmartLogic</p>\n\n<p>00:43 - Why are you using Elixir in production?<br>\n01:20
      - Advantages / disadvantages of Elixir<br>\n02:38 - How do you deploy?<br>\n03:48
      - Zero downtime deploys<br>\n05:40 - Clustering<br>\n06:56 - Elixir App performance<br>\n09:00
      - Background task processing<br>\n10:36 - Common Libraries<br>\n14:40 - 3rd
      Party Services<br>\n16:16 - Do you have a story where Elixir saved the day in
      production?<br>\n17:56 - OTP features<br>\n18:31 - Tip to developers</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>With this season over, we bring Dan Ivovich back to
    talk about what we learned.</p>\n\n<p>Dan Ivovich - Director of Development Operations
    @ SmartLogic</p>\n\n<p>00:43 - Why are you using Elixir in production?<br>\n01:20
    - Advantages / disadvantages of Elixir<br>\n02:38 - How do you deploy?<br>\n03:48
    - Zero downtime deploys<br>\n05:40 - Clustering<br>\n06:56 - Elixir App performance<br>\n09:00
    - Background task processing<br>\n10:36 - Common Libraries<br>\n14:40 - 3rd Party
    Services<br>\n16:16 - Do you have a story where Elixir saved the day in production?<br>\n17:56
    - OTP features<br>\n18:31 - Tip to developers</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Dan Ivovich.</p>\n      "
- title: Jeffrey Matthias from Community - Elixir in Production
  slug: season-1-community
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-community
  guid: 7bd99e2e-cba0-4c94-904a-5486ce48c517
  pubDate: Thu, 11 Apr 2019 06:00:00 -0400
  pubDateFriendly: April 11, 2019
  description: "We talk with Jeffrey Matthias from Community about their current and
    past Elixir projects and how they are deployed.\nJeffrey Matthias - Community
    (https://www.community.com/)\nFind Jeffrey elsewhere online:\nhttp://github.com/idlehands\nhttps://twitter.com/idlehands\n0:47
    - Give us a quick overview of the Elixir projects you have in production.\n3:29
    - Why are you using Elixir in production?\n6:04 - What are some of the high level
    advantages / disadvantages of Elixir, from your perspective?\n10:14 - What do
    you use to host your Elixir app?\nLinode, AWS, DO \nHeroku \nEnmesos \nmesos  \nHow
    do you deploy your application?\nAnsible \nDeploy scripts \nDistillery \n14:19
    - Are you able to get zero downtime deploys?\nIf so, how? \n17:06 - Do you cluster
    the application?\nIf so, how? \n22:53 - How does your Elixir App perform compared
    to others in your environment?\nResponse time \nThroughput \nJobs/hr \n25:01 -
    How are you solving background task processing?\n29:17 - What libraries are you
    using?\nPhoenix \n33:53 - Third party apps \n37:28 - Do you have a story where
    Elixir saved the day in production?\n40:42 - If you could give one tip to developers
    out there who are or may soon be running Elixir in production, what would it be?\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Jeffrey Matthias.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zDmDU2aS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7bd99e2e-cba0-4c94-904a-5486ce48c517.mp3
    length: '42795517'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Jeffrey Matthias from Community about their current and
      past Elixir projects and how they are deployed.
    duration: '43:54'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7bd99e2e-cba0-4c94-904a-5486ce48c517/cover.jpg?v=2
    summary: "\n        <p>We talk with Jeffrey Matthias from Community about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Jeffrey
      Matthias - <a href=\"https://www.community.com/\" rel=\"nofollow\">Community</a></p>\n\n<p>Find
      Jeffrey elsewhere online:<br>\n<a href=\"http://github.com/idlehands\" rel=\"nofollow\">http://github.com/idlehands</a><br>\n<a
      href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a></p>\n\n<p>0:47
      - Give us a quick overview of the Elixir projects you have in production.</p>\n\n<p>3:29
      - Why are you using Elixir in production?</p>\n\n<p>6:04 - What are some of
      the high level advantages / disadvantages of Elixir, from your perspective?</p>\n\n<p>10:14
      - What do you use to host your Elixir app?</p>\n\n<ul>\n<li>Linode, AWS, DO
      </li>\n<li>Heroku </li>\n<li>Enmesos </li>\n<li>mesos<br></li>\n</ul>\n\n<p>How
      do you deploy your application?</p>\n\n<ul>\n<li>Ansible </li>\n<li>Deploy scripts
      </li>\n<li>Distillery </li>\n</ul>\n\n<p>14:19 - Are you able to get zero downtime
      deploys?</p>\n\n<ul>\n<li>If so, how? </li>\n</ul>\n\n<p>17:06 - Do you cluster
      the application?</p>\n\n<ul>\n<li>If so, how? </li>\n</ul>\n\n<p>22:53 - How
      does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>Response
      time </li>\n<li>Throughput </li>\n<li>Jobs/hr </li>\n</ul>\n\n<p>25:01 - How
      are you solving background task processing?</p>\n\n<p>29:17 - What libraries
      are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n</ul>\n\n<p>33:53 - Third party
      apps </p>\n\n<p>37:28 - Do you have a story where Elixir saved the day in production?</p>\n\n<p>40:42
      - If you could give one tip to developers out there who are or may soon be running
      Elixir in production, what would it be?</p>\n\n<p>Learn more about how SmartLogic
      uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
      Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a href=\"https://www.enbala.com/\"
      title=\"Enbala\" rel=\"nofollow\">Enbala</a></li><li><a href=\"https://weedmaps.com/\"
      title=\"Weedmaps\" rel=\"nofollow\">Weedmaps</a></li><li><a href=\"https://shop.oreilly.com/product/0636920153566.do\"
      title=\"Docker: Up & Running\" rel=\"nofollow\">Docker: Up & Running</a></li><li><a
      href=\"https://www.asyncapi.com/\" title=\"Async API\" rel=\"nofollow\">Async
      API</a></li><li><a href=\"https://www.rabbitmq.com/\" title=\"RabbitMQ\" rel=\"nofollow\">RabbitMQ</a></li><li><a
      href=\"https://github.com/pma/amqp\" title=\"AMQP Elixir Client\" rel=\"nofollow\">AMQP
      Elixir Client</a></li><li><a href=\"https://github.com/silviucpp/erlcass\" title=\"erlcass\"
      rel=\"nofollow\">erlcass</a></li><li><a href=\"https://www.erlang-in-anger.com/\"
      title=\"Erlang in Anger\" rel=\"nofollow\">Erlang in Anger</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Jeffrey Matthias from Community about
    their current and past Elixir projects and how they are deployed.</p>\n\n<p>Jeffrey
    Matthias - <a href=\"https://www.community.com/\" rel=\"nofollow\">Community</a></p>\n\n<p>Find
    Jeffrey elsewhere online:<br>\n<a href=\"http://github.com/idlehands\" rel=\"nofollow\">http://github.com/idlehands</a><br>\n<a
    href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a></p>\n\n<p>0:47
    - Give us a quick overview of the Elixir projects you have in production.</p>\n\n<p>3:29
    - Why are you using Elixir in production?</p>\n\n<p>6:04 - What are some of the
    high level advantages / disadvantages of Elixir, from your perspective?</p>\n\n<p>10:14
    - What do you use to host your Elixir app?</p>\n\n<ul>\n<li>Linode, AWS, DO </li>\n<li>Heroku
    </li>\n<li>Enmesos </li>\n<li>mesos<br></li>\n</ul>\n\n<p>How do you deploy your
    application?</p>\n\n<ul>\n<li>Ansible </li>\n<li>Deploy scripts </li>\n<li>Distillery
    </li>\n</ul>\n\n<p>14:19 - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>If
    so, how? </li>\n</ul>\n\n<p>17:06 - Do you cluster the application?</p>\n\n<ul>\n<li>If
    so, how? </li>\n</ul>\n\n<p>22:53 - How does your Elixir App perform compared
    to others in your environment?</p>\n\n<ul>\n<li>Response time </li>\n<li>Throughput
    </li>\n<li>Jobs/hr </li>\n</ul>\n\n<p>25:01 - How are you solving background task
    processing?</p>\n\n<p>29:17 - What libraries are you using?</p>\n\n<ul>\n<li>Phoenix
    </li>\n</ul>\n\n<p>33:53 - Third party apps </p>\n\n<p>37:28 - Do you have a story
    where Elixir saved the day in production?</p>\n\n<p>40:42 - If you could give
    one tip to developers out there who are or may soon be running Elixir in production,
    what would it be?</p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a
    href=\"https://www.enbala.com/\" title=\"Enbala\" rel=\"nofollow\">Enbala</a></li><li><a
    href=\"https://weedmaps.com/\" title=\"Weedmaps\" rel=\"nofollow\">Weedmaps</a></li><li><a
    href=\"https://shop.oreilly.com/product/0636920153566.do\" title=\"Docker: Up
    & Running\" rel=\"nofollow\">Docker: Up & Running</a></li><li><a href=\"https://www.asyncapi.com/\"
    title=\"Async API\" rel=\"nofollow\">Async API</a></li><li><a href=\"https://www.rabbitmq.com/\"
    title=\"RabbitMQ\" rel=\"nofollow\">RabbitMQ</a></li><li><a href=\"https://github.com/pma/amqp\"
    title=\"AMQP Elixir Client\" rel=\"nofollow\">AMQP Elixir Client</a></li><li><a
    href=\"https://github.com/silviucpp/erlcass\" title=\"erlcass\" rel=\"nofollow\">erlcass</a></li><li><a
    href=\"https://www.erlang-in-anger.com/\" title=\"Erlang in Anger\" rel=\"nofollow\">Erlang
    in Anger</a></li></ul>\n      "
- title: Jay Ashe from Cava - Elixir in Production
  slug: season-1-cava
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-cava
  guid: c300841a-d5b9-4957-950f-ce0f6bc3af68
  pubDate: Thu, 04 Apr 2019 06:00:00 -0400
  pubDateFriendly: April  4, 2019
  description: "We talk with Jay Ashe from Cava about their current and past Elixir
    projects and how they are deployed.\nJay Ashe - Cava (https://cava.com/)\nFind
    Jay elsewhere online:\nhttps://twitter.com/jgashe\n0:40 - Give us a quick overview
    of the Elixir projects you have in production.\nCAVA is a fast-casual mediterranean
    restaurant chain with 75 stores across the US. Elixir and phoenix power CAVA’s
    online ordering platform (order.cava.com and the CAVA app). We’ve got a REST (and
    websockets) api sitting behind react and our mobile apps, and we use phoenix templates
    for some of our back of house systems.\n1:11 - Why are you using Elixir in production?\nWe
    have from the start! The application was originally implemented by Chris Bell
    and his team at madebymany. Chris, by the way, has a fantastic talk from ElixirConf
    2016 that goes into our architecture and how we use elixir and OTP constructs
    to model our business logic. Chris will occasionally talk about the CAVA project
    on his Elixir podcast, ElixirTalk.\nChris’ Talk - https://www.youtube.com/watch?v=fkDhU-2NWJ8
    (https://www.youtube.com/watch?v=fkDhU-2NWJ8)\n1:58 - What are some of the high
    level advantages / disadvantages of Elixir, from your perspective?\nAdvantages:
    Elixir and Phoenix gives you rails-esque productivity/developer experience that
    scales. I think phoenix channels are a great example of this. Build a channel
    with complex real-time functionality and let it scale effortlessly. \nDisadvantages:
    \nHiring and onboarding, depending on your mindset, can be difficult. If you’re
    used to hiring for experience in  your stack, its just going to be more difficult.
    Lately we’ve started doing one-hour weekly knowledge shares that cover elixir
    basics and are closely tied to our usage of them. So, here’s a test case, and
    here are all of the test helpers that we have set up that will help you write
    that test. We also just sent a new Elixir dev to lonestar elixir \n3:59 - What
    do you use to host your Elixir app?\nHeroku \nHow do you deploy your application?
    \nHeroku-buildpack-elixir https://github.com/HashNuke/heroku-buildpack-elixir
    (https://github.com/HashNuke/heroku-buildpack-elixir) \n4:44 - Are you able to
    get zero downtime deploys?\n- As close as possible! We get that out of the box
    with heroku. When we deploy, heroku won’t point traffic to the new dyno until
    the app is healthy. We make extensive use of Phoenix channels over websockets,
    and our clients will reconnect automatically and transparently.  \n5:10 - Do you
    cluster the application?\nNope.  \n5:52 - How does your Elixir App perform compared
    to others in your environment?\nI can’t really talk about numbers here, but Elixir
    is not at all our bottleneck. We don’t have other production applications \n6:25
    - How are you solving background task processing?\nQuantum for cron jobs, genservers
    for everything else. We’re running a single elixir application that handles all
    synchronous and async processing  \n7:07 - What libraries are you using?\nPhoenix
    \nPhoenix_swagger for API documentation that integrates with controller tests
    https://github.com/xerions/phoenix_swagger (https://github.com/xerions/phoenix_swagger)
    \nEx_rated for rate limiting calls to our integrations https://github.com/grempe/ex_rated
    (https://github.com/grempe/ex_rated) \nTimex and calendar for datetime support
    with timezones https://github.com/bitwalker/timex (https://github.com/bitwalker/timex)
    \nA combination of httpotion and httpoison for HTTP clients, but im interested
    in trying Mint https://github.com/ericmj/mint (https://github.com/ericmj/mint)https://github.com/appcues/mojito
    (https://github.com/appcues/mojito) \nBamboo for transactional emails, like order
    confirmations etc https://github.com/thoughtbot/bamboo (https://github.com/thoughtbot/bamboo)
    \n8:59 - 3rd Party Services (i.e. Email, Payment Processing, etc)\nSendgrid for
    email, Google for geocoding, slack for some internal alerting of application health,
    LevelUp for payments. https://www.thelevelup.com/ (https://www.thelevelup.com/)
    \n10:07 - Do you have a story where Elixir saved the day in production?\nYes and
    no. So I could tell this story by explaining the issue we saw and the underlying
    cause at the same time, but I think it would be more fun to tell it like our team
    experienced it. \nOne day at lunch our application started going down. Lots of
    500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time of day,
    so 1) we thought it was load related and 2) we really needed to fix it \nNone
    of our traditional resources (database, cpu, memory) were constrained and our
    integrations that were synchronous were fine.  \nOur logs were littered with errors
    from an analytics integration that ran asynchronously on genservers, but it didn’t
    seem related because we could see the error logs at times when our application
    was otherwise healthy. The team that used the analytics didn’t have a pressing
    need for them, and we deprioritized fixing the issue because the bug we were working
    on was so much more important (that’s foreshadowing). \nI spent a little time
    looking at websockets, but I was easily able to match the load of the websocket
    portion of our application on my local machine with no degradations in performance
    (thanks, phoenix), so that was out. \nAt this point the issue was going on every
    day at lunch and I was getting annoyed at seeing the logs from the analytics integration
    when debugging, so I spent like 15 minutes finding and fixing the issue (a bad
    API key, basically) \nVoila, issue gone. Time to grab some lunch. \nWe spent a
    while coming up with an explanation for this. Eventually we learned about max_restarts
    on a supervisor. By default, if a process crashes 3 times in 5 seconds, the process
    won’t be restarted again. So if another process (like the one handling a web request)
    tries to call that process that wasn’t restarted, the caller would crash, and
    we’d start to get 500 errors, customers couldn’t log in, mass confusion. \nSo
    there are a few takeaways from this story: For a while, elixir saved the day in
    production.  \n    - A supervision tree prevented failures from the analytics
    process from affecting customers, until the scale of our failures exceeded the
    max_restart level.  \n    - Our supervision tree needed some love though, clearly.
    \n    - Monitor your resources. CPU is a resource, but calls to another API are
    also a resource and can get unhealthy too.  \n15:00 - Are you using any cool OTP
    features?\nGenServers, definitely. There’s lots we can do asynchronously especially
    in terms of our integrations. One process per store is a cool model that scales
    well and keeps issues isolated to a single store. \n15:50 - If you could give
    one tip to developers out there who are or may soon be running Elixir in production,
    what would it be?\nIf you’re on a small team, Heroku or a similar provider might
    give you a lot of value in terms of infrastructure you can set up and forget.\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Jay Ashe.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gv-OH0jo
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c300841a-d5b9-4957-950f-ce0f6bc3af68.mp3
    length: '17639405'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Jay Ashe from Cava about their current and past Elixir
      projects and how they are deployed.
    duration: '17:25'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c300841a-d5b9-4957-950f-ce0f6bc3af68/cover.jpg?v=2
    summary: "\n        <p>We talk with Jay Ashe from Cava about their current and
      past Elixir projects and how they are deployed.</p>\n\n<p>Jay Ashe - <a href=\"https://cava.com/\"
      rel=\"nofollow\">Cava</a></p>\n\n<p>Find Jay elsewhere online:<br>\n<a href=\"https://twitter.com/jgashe\"
      rel=\"nofollow\">https://twitter.com/jgashe</a></p>\n\n<p>0:40 - Give us a quick
      overview of the Elixir projects you have in production.</p>\n\n<p>CAVA is a
      fast-casual mediterranean restaurant chain with 75 stores across the US. Elixir
      and phoenix power CAVA’s online ordering platform (order.cava.com and the CAVA
      app). We’ve got a REST (and websockets) api sitting behind react and our mobile
      apps, and we use phoenix templates for some of our back of house systems.</p>\n\n<p>1:11
      - Why are you using Elixir in production?</p>\n\n<p>We have from the start!
      The application was originally implemented by Chris Bell and his team at madebymany.
      Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into
      our architecture and how we use elixir and OTP constructs to model our business
      logic. Chris will occasionally talk about the CAVA project on his Elixir podcast,
      ElixirTalk.</p>\n\n<p>Chris’ Talk - <a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>\n\n<p>1:58
      - What are some of the high level advantages / disadvantages of Elixir, from
      your perspective?</p>\n\n<p>Advantages: Elixir and Phoenix gives you rails-esque
      productivity/developer experience that scales. I think phoenix channels are
      a great example of this. Build a channel with complex real-time functionality
      and let it scale effortlessly. </p>\n\n<p>Disadvantages: </p>\n\n<ul>\n<li>Hiring
      and onboarding, depending on your mindset, can be difficult. If you’re used
      to hiring for experience in  your stack, its just going to be more difficult.
      Lately we’ve started doing one-hour weekly knowledge shares that cover elixir
      basics and are closely tied to our usage of them. So, here’s a test case, and
      here are all of the test helpers that we have set up that will help you write
      that test. We also just sent a new Elixir dev to lonestar elixir </li>\n</ul>\n\n<p>3:59
      - What do you use to host your Elixir app?</p>\n\n<ul>\n<li><p>Heroku </p></li>\n<li><p>How
      do you deploy your application? </p>\n\n<ul>\n<li>Heroku-buildpack-elixir <a
      href=\"https://github.com/HashNuke/heroku-buildpack-elixir\" rel=\"nofollow\">https://github.com/HashNuke/heroku-buildpack-elixir</a>
      </li>\n</ul></li>\n</ul>\n\n<p>4:44 - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>As
      close as possible! We get that out of the box with heroku. When we deploy, heroku
      won’t point traffic to the new dyno until the app is healthy. We make extensive
      use of Phoenix channels over websockets, and our clients will reconnect automatically
      and transparently.<br></li>\n</ul>\n\n<p>5:10 - Do you cluster the application?</p>\n\n<ul>\n<li>Nope.<br></li>\n</ul>\n\n<p>5:52
      - How does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>I
      can’t really talk about numbers here, but Elixir is not at all our bottleneck.
      We don’t have other production applications </li>\n</ul>\n\n<p>6:25 - How are
      you solving background task processing?</p>\n\n<ul>\n<li>Quantum for cron jobs,
      genservers for everything else. We’re running a single elixir application that
      handles all synchronous and async processing<br></li>\n</ul>\n\n<p>7:07 - What
      libraries are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n<li>Phoenix_swagger
      for API documentation that integrates with controller tests <a href=\"https://github.com/xerions/phoenix_swagger\"
      rel=\"nofollow\">https://github.com/xerions/phoenix_swagger</a> </li>\n<li>Ex_rated
      for rate limiting calls to our integrations <a href=\"https://github.com/grempe/ex_rated\"
      rel=\"nofollow\">https://github.com/grempe/ex_rated</a> </li>\n<li>Timex and
      calendar for datetime support with timezones <a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">https://github.com/bitwalker/timex</a> </li>\n<li>A combination
      of httpotion and httpoison for HTTP clients, but im interested in trying Mint
      <a href=\"https://github.com/ericmj/mint\" rel=\"nofollow\">https://github.com/ericmj/mint</a><a
      href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a>
      </li>\n<li>Bamboo for transactional emails, like order confirmations etc <a
      href=\"https://github.com/thoughtbot/bamboo\" rel=\"nofollow\">https://github.com/thoughtbot/bamboo</a>
      </li>\n</ul>\n\n<p>8:59 - 3rd Party Services (i.e. Email, Payment Processing,
      etc)</p>\n\n<ul>\n<li>Sendgrid for email, Google for geocoding, slack for some
      internal alerting of application health, LevelUp for payments. <a href=\"https://www.thelevelup.com/\"
      rel=\"nofollow\">https://www.thelevelup.com/</a> </li>\n</ul>\n\n<p>10:07 -
      Do you have a story where Elixir saved the day in production?</p>\n\n<ul>\n<li>Yes
      and no. So I could tell this story by explaining the issue we saw and the underlying
      cause at the same time, but I think it would be more fun to tell it like our
      team experienced it. </li>\n<li>One day at lunch our application started going
      down. Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest
      time of day, so 1) we thought it was load related and 2) we really needed to
      fix it </li>\n<li>None of our traditional resources (database, cpu, memory)
      were constrained and our integrations that were synchronous were fine.<br></li>\n<li>Our
      logs were littered with errors from an analytics integration that ran asynchronously
      on genservers, but it didn’t seem related because we could see the error logs
      at times when our application was otherwise healthy. The team that used the
      analytics didn’t have a pressing need for them, and we deprioritized fixing
      the issue because the bug we were working on was so much more important (that’s
      foreshadowing). </li>\n<li>I spent a little time looking at websockets, but
      I was easily able to match the load of the websocket portion of our application
      on my local machine with no degradations in performance (thanks, phoenix), so
      that was out. </li>\n<li>At this point the issue was going on every day at lunch
      and I was getting annoyed at seeing the logs from the analytics integration
      when debugging, so I spent like 15 minutes finding and fixing the issue (a bad
      API key, basically) </li>\n<li>Voila, issue gone. Time to grab some lunch. </li>\n<li>We
      spent a while coming up with an explanation for this. Eventually we learned
      about max_restarts on a supervisor. By default, if a process crashes 3 times
      in 5 seconds, the process won’t be restarted again. So if another process (like
      the one handling a web request) tries to call that process that wasn’t restarted,
      the caller would crash, and we’d start to get 500 errors, customers couldn’t
      log in, mass confusion. </li>\n<li>So there are a few takeaways from this story:
      For a while, elixir saved the day in production.<br>\n    - A supervision tree
      prevented failures from the analytics process from affecting customers, until
      the scale of our failures exceeded the max_restart level.<br>\n    - Our supervision
      tree needed some love though, clearly. \n    - Monitor your resources. CPU is
      a resource, but calls to another API are also a resource and can get unhealthy
      too.<br></li>\n</ul>\n\n<p>15:00 - Are you using any cool OTP features?</p>\n\n<ul>\n<li>GenServers,
      definitely. There’s lots we can do asynchronously especially in terms of our
      integrations. One process per store is a cool model that scales well and keeps
      issues isolated to a single store. </li>\n</ul>\n\n<p>15:50 - If you could give
      one tip to developers out there who are or may soon be running Elixir in production,
      what would it be?</p>\n\n<ul>\n<li>If you’re on a small team, Heroku or a similar
      provider might give you a lot of value in terms of infrastructure you can set
      up and forget.</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Jay Ashe.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\" title=\"ElixirConf 2016
      - Selling Food With Elixir by Chris Bell\" rel=\"nofollow\">ElixirConf 2016
      - Selling Food With Elixir by Chris Bell</a></li><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
      title=\"Heroku-buildpack-elixir\" rel=\"nofollow\">Heroku-buildpack-elixir</a></li><li><a
      href=\"https://github.com/xerions/phoenix_swagger\" title=\"Phoenix Swagger\"
      rel=\"nofollow\">Phoenix Swagger</a></li><li><a href=\"https://github.com/grempe/ex_rated\"
      title=\"Ex_rated\" rel=\"nofollow\">Ex_rated</a></li><li><a href=\"https://github.com/bitwalker/timex\"
      title=\"Timex\" rel=\"nofollow\">Timex</a></li><li><a href=\"https://github.com/ericmj/mint\"
      title=\"Mint\" rel=\"nofollow\">Mint</a></li><li><a href=\"https://github.com/appcues/mojito\"
      title=\"Mojito\" rel=\"nofollow\">Mojito</a></li><li><a href=\"https://www.thelevelup.com/\"
      title=\"LevelUp\" rel=\"nofollow\">LevelUp</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Jay Ashe from Cava about their current
    and past Elixir projects and how they are deployed.</p>\n\n<p>Jay Ashe - <a href=\"https://cava.com/\"
    rel=\"nofollow\">Cava</a></p>\n\n<p>Find Jay elsewhere online:<br>\n<a href=\"https://twitter.com/jgashe\"
    rel=\"nofollow\">https://twitter.com/jgashe</a></p>\n\n<p>0:40 - Give us a quick
    overview of the Elixir projects you have in production.</p>\n\n<p>CAVA is a fast-casual
    mediterranean restaurant chain with 75 stores across the US. Elixir and phoenix
    power CAVA’s online ordering platform (order.cava.com and the CAVA app). We’ve
    got a REST (and websockets) api sitting behind react and our mobile apps, and
    we use phoenix templates for some of our back of house systems.</p>\n\n<p>1:11
    - Why are you using Elixir in production?</p>\n\n<p>We have from the start! The
    application was originally implemented by Chris Bell and his team at madebymany.
    Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into our
    architecture and how we use elixir and OTP constructs to model our business logic.
    Chris will occasionally talk about the CAVA project on his Elixir podcast, ElixirTalk.</p>\n\n<p>Chris’
    Talk - <a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\" rel=\"nofollow\">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>\n\n<p>1:58
    - What are some of the high level advantages / disadvantages of Elixir, from your
    perspective?</p>\n\n<p>Advantages: Elixir and Phoenix gives you rails-esque productivity/developer
    experience that scales. I think phoenix channels are a great example of this.
    Build a channel with complex real-time functionality and let it scale effortlessly.
    </p>\n\n<p>Disadvantages: </p>\n\n<ul>\n<li>Hiring and onboarding, depending on
    your mindset, can be difficult. If you’re used to hiring for experience in  your
    stack, its just going to be more difficult. Lately we’ve started doing one-hour
    weekly knowledge shares that cover elixir basics and are closely tied to our usage
    of them. So, here’s a test case, and here are all of the test helpers that we
    have set up that will help you write that test. We also just sent a new Elixir
    dev to lonestar elixir </li>\n</ul>\n\n<p>3:59 - What do you use to host your
    Elixir app?</p>\n\n<ul>\n<li><p>Heroku </p></li>\n<li><p>How do you deploy your
    application? </p>\n\n<ul>\n<li>Heroku-buildpack-elixir <a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    rel=\"nofollow\">https://github.com/HashNuke/heroku-buildpack-elixir</a> </li>\n</ul></li>\n</ul>\n\n<p>4:44
    - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>As close as possible!
    We get that out of the box with heroku. When we deploy, heroku won’t point traffic
    to the new dyno until the app is healthy. We make extensive use of Phoenix channels
    over websockets, and our clients will reconnect automatically and transparently.<br></li>\n</ul>\n\n<p>5:10
    - Do you cluster the application?</p>\n\n<ul>\n<li>Nope.<br></li>\n</ul>\n\n<p>5:52
    - How does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>I
    can’t really talk about numbers here, but Elixir is not at all our bottleneck.
    We don’t have other production applications </li>\n</ul>\n\n<p>6:25 - How are
    you solving background task processing?</p>\n\n<ul>\n<li>Quantum for cron jobs,
    genservers for everything else. We’re running a single elixir application that
    handles all synchronous and async processing<br></li>\n</ul>\n\n<p>7:07 - What
    libraries are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n<li>Phoenix_swagger for
    API documentation that integrates with controller tests <a href=\"https://github.com/xerions/phoenix_swagger\"
    rel=\"nofollow\">https://github.com/xerions/phoenix_swagger</a> </li>\n<li>Ex_rated
    for rate limiting calls to our integrations <a href=\"https://github.com/grempe/ex_rated\"
    rel=\"nofollow\">https://github.com/grempe/ex_rated</a> </li>\n<li>Timex and calendar
    for datetime support with timezones <a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">https://github.com/bitwalker/timex</a> </li>\n<li>A combination
    of httpotion and httpoison for HTTP clients, but im interested in trying Mint
    <a href=\"https://github.com/ericmj/mint\" rel=\"nofollow\">https://github.com/ericmj/mint</a><a
    href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a>
    </li>\n<li>Bamboo for transactional emails, like order confirmations etc <a href=\"https://github.com/thoughtbot/bamboo\"
    rel=\"nofollow\">https://github.com/thoughtbot/bamboo</a> </li>\n</ul>\n\n<p>8:59
    - 3rd Party Services (i.e. Email, Payment Processing, etc)</p>\n\n<ul>\n<li>Sendgrid
    for email, Google for geocoding, slack for some internal alerting of application
    health, LevelUp for payments. <a href=\"https://www.thelevelup.com/\" rel=\"nofollow\">https://www.thelevelup.com/</a>
    </li>\n</ul>\n\n<p>10:07 - Do you have a story where Elixir saved the day in production?</p>\n\n<ul>\n<li>Yes
    and no. So I could tell this story by explaining the issue we saw and the underlying
    cause at the same time, but I think it would be more fun to tell it like our team
    experienced it. </li>\n<li>One day at lunch our application started going down.
    Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time
    of day, so 1) we thought it was load related and 2) we really needed to fix it
    </li>\n<li>None of our traditional resources (database, cpu, memory) were constrained
    and our integrations that were synchronous were fine.<br></li>\n<li>Our logs were
    littered with errors from an analytics integration that ran asynchronously on
    genservers, but it didn’t seem related because we could see the error logs at
    times when our application was otherwise healthy. The team that used the analytics
    didn’t have a pressing need for them, and we deprioritized fixing the issue because
    the bug we were working on was so much more important (that’s foreshadowing).
    </li>\n<li>I spent a little time looking at websockets, but I was easily able
    to match the load of the websocket portion of our application on my local machine
    with no degradations in performance (thanks, phoenix), so that was out. </li>\n<li>At
    this point the issue was going on every day at lunch and I was getting annoyed
    at seeing the logs from the analytics integration when debugging, so I spent like
    15 minutes finding and fixing the issue (a bad API key, basically) </li>\n<li>Voila,
    issue gone. Time to grab some lunch. </li>\n<li>We spent a while coming up with
    an explanation for this. Eventually we learned about max_restarts on a supervisor.
    By default, if a process crashes 3 times in 5 seconds, the process won’t be restarted
    again. So if another process (like the one handling a web request) tries to call
    that process that wasn’t restarted, the caller would crash, and we’d start to
    get 500 errors, customers couldn’t log in, mass confusion. </li>\n<li>So there
    are a few takeaways from this story: For a while, elixir saved the day in production.<br>\n
    \   - A supervision tree prevented failures from the analytics process from affecting
    customers, until the scale of our failures exceeded the max_restart level.<br>\n
    \   - Our supervision tree needed some love though, clearly. \n    - Monitor your
    resources. CPU is a resource, but calls to another API are also a resource and
    can get unhealthy too.<br></li>\n</ul>\n\n<p>15:00 - Are you using any cool OTP
    features?</p>\n\n<ul>\n<li>GenServers, definitely. There’s lots we can do asynchronously
    especially in terms of our integrations. One process per store is a cool model
    that scales well and keeps issues isolated to a single store. </li>\n</ul>\n\n<p>15:50
    - If you could give one tip to developers out there who are or may soon be running
    Elixir in production, what would it be?</p>\n\n<ul>\n<li>If you’re on a small
    team, Heroku or a similar provider might give you a lot of value in terms of infrastructure
    you can set up and forget.</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses
    <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Jay Ashe.</p><p>Links:</p><ul><li><a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\"
    title=\"ElixirConf 2016 - Selling Food With Elixir by Chris Bell\" rel=\"nofollow\">ElixirConf
    2016 - Selling Food With Elixir by Chris Bell</a></li><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    title=\"Heroku-buildpack-elixir\" rel=\"nofollow\">Heroku-buildpack-elixir</a></li><li><a
    href=\"https://github.com/xerions/phoenix_swagger\" title=\"Phoenix Swagger\"
    rel=\"nofollow\">Phoenix Swagger</a></li><li><a href=\"https://github.com/grempe/ex_rated\"
    title=\"Ex_rated\" rel=\"nofollow\">Ex_rated</a></li><li><a href=\"https://github.com/bitwalker/timex\"
    title=\"Timex\" rel=\"nofollow\">Timex</a></li><li><a href=\"https://github.com/ericmj/mint\"
    title=\"Mint\" rel=\"nofollow\">Mint</a></li><li><a href=\"https://github.com/appcues/mojito\"
    title=\"Mojito\" rel=\"nofollow\">Mojito</a></li><li><a href=\"https://www.thelevelup.com/\"
    title=\"LevelUp\" rel=\"nofollow\">LevelUp</a></li></ul>\n      "
- title: Frank Hunleth - Elixir in Production
  slug: season-1-hunleth
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-hunleth
  guid: ad538aa5-ad67-418b-b07f-0be38fff2f6b
  pubDate: Thu, 28 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 28, 2019
  description: "We talk with Frank Hunleth from the Nerves core team about their current
    and past Elixir projects and how they are deployed.\nFrank Hunleth - Nerves (https://nerves-project.org/)\nFind
    Frank elsewhere online:\nhttps://twitter.com/fhunleth\nhttps://github.com/fhunleth\n0:53
    \   Frank intro\n2:02    Give us a quick overview of the Elixir projects you have
    in production.\n4:25    Why are you using Elixir in production?\n8:00    What
    are some of the high level advantages / disadvantages of Elixir, from your perspective?\n9:25
    \   What hardware do you deploy to?\n12:05   How do you get code to hardware after
    deployment?\n13:47   How do you secure the code?\n18:12   Do you cluster?\nIf
    so, how?\nHow does your Elixir App perform compared to others in your environment?\n22:45
    \  How does Elixir compare to other languages? \n26:15   More information about
    Nerves \nLearn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8)
    Special Guest: Frank Hunleth.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Eao_WrT8
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ad538aa5-ad67-418b-b07f-0be38fff2f6b.mp3
    length: '28464534'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Frank Hunleth from the Nerves core team about their current
      and past Elixir projects and how they are deployed.
    duration: '28:47'
    explicit: 'no'
    keywords: elixir, nerves, production
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ad538aa5-ad67-418b-b07f-0be38fff2f6b/cover.jpg?v=2
    summary: "\n        <p>We talk with Frank Hunleth from the Nerves core team about
      their current and past Elixir projects and how they are deployed.</p>\n\n<p>Frank
      Hunleth - <a href=\"https://nerves-project.org/\" rel=\"nofollow\">Nerves</a></p>\n\n<p>Find
      Frank elsewhere online:<br>\n<a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\n<a
      href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a></p>\n\n<p>0:53
      \   Frank intro<br>\n2:02    Give us a quick overview of the Elixir projects
      you have in production.<br>\n4:25    Why are you using Elixir in production?<br>\n8:00
      \   What are some of the high level advantages / disadvantages of Elixir, from
      your perspective?<br>\n9:25    What hardware do you deploy to?<br>\n12:05   How
      do you get code to hardware after deployment?<br>\n13:47   How do you secure
      the code?<br>\n18:12   Do you cluster?<br>\nIf so, how?<br>\nHow does your Elixir
      App perform compared to others in your environment?<br>\n22:45   How does Elixir
      compare to other languages? <br>\n26:15   More information about Nerves </p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a
      href=\"https://www.grisp.org/\" title=\"Grisp\" rel=\"nofollow\">Grisp</a></li><li><a
      href=\"https://github.com/grisp\" title=\"Grisp GitHub\" rel=\"nofollow\">Grisp
      GitHub</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Frank Hunleth from the Nerves core team
    about their current and past Elixir projects and how they are deployed.</p>\n\n<p>Frank
    Hunleth - <a href=\"https://nerves-project.org/\" rel=\"nofollow\">Nerves</a></p>\n\n<p>Find
    Frank elsewhere online:<br>\n<a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\n<a
    href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a></p>\n\n<p>0:53
    \   Frank intro<br>\n2:02    Give us a quick overview of the Elixir projects you
    have in production.<br>\n4:25    Why are you using Elixir in production?<br>\n8:00
    \   What are some of the high level advantages / disadvantages of Elixir, from
    your perspective?<br>\n9:25    What hardware do you deploy to?<br>\n12:05   How
    do you get code to hardware after deployment?<br>\n13:47   How do you secure the
    code?<br>\n18:12   Do you cluster?<br>\nIf so, how?<br>\nHow does your Elixir
    App perform compared to others in your environment?<br>\n22:45   How does Elixir
    compare to other languages? <br>\n26:15   More information about Nerves </p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a
    href=\"https://www.grisp.org/\" title=\"Grisp\" rel=\"nofollow\">Grisp</a></li><li><a
    href=\"https://github.com/grisp\" title=\"Grisp GitHub\" rel=\"nofollow\">Grisp
    GitHub</a></li></ul>\n      "
- title: Mark Ericksen - Elixir in Production
  slug: season-1-ericksen
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-ericksen
  guid: 4a5a2fb4-c1a0-437a-9001-9b981312ecab
  pubDate: Thu, 21 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 21, 2019
  description: "We talk with Mark Ericksen from Elixir Mix about their current and
    past Elixir projects and how they are deployed.\nMark Ericksen - Elixir Mix (https://devchat.tv/elixir-mix/)\nFind
    Mark elsewhere online:\nhttps://twitter.com/brainlid\nhttps://brainlid.org/\n00:32
    Intro\n0:58 Mark intro\nDeveloping a long time. C#, then Rails. Webforms were
    terrible. Rails is “Wow, this is how web development should be… I moved across
    the country to work with this technology”\nThe Rails Community is strong. Dave
    Thomas got Mark into Elixir\n2:48     What Elixir projects do you have in production?\nA
    Rails app and a number of Elixir Micro-liths\n4:29     Why do you use Elixir \n6:45
    \   Trends in moving from Ruby and Rails to Elixir\nRuby Syntax\nPattern Matching\nConcurrency
    primitives\nFault Tolerance and a functional paradigm\nErlang/OTP\n6:48    Comparing
    Elixir community to Ruby community to C# community\n8:27     Any disadvantages
    to using Elixir?\nBuilding releases. Configuring releases.\nmix.release\n10:13
    \   Where are you hosting these bad boys?\nAWS\nKubernetes in Production. So Fresh.\nDocker
    and Distillery 2.0 Releases\nYaml files and Bash Scripts\nMakefiles\n10:53    What
    else are you using besides docker\n12:36    Helm and Ksonnet. \n13:55   Deploys\n14:39
    \  Clustering\n17:50   How do your Elixir apps compare to the Ruby apps?\nBig
    Elixir Apps\n20:00    How Mark handles background jobs\nEasy to write yourself
    with BEAM primitives\n21:27    Libraries - Quantum, Bamboo, exmachina, prometheusex
    via Eric’s influence\n23:29   Third party integrations. Major ones were easy.
    Banks were bad.\nLiterally had to FTP files. Had to use java to write xml spreadsheets.
    The horror.\n25:26     Has Elixir ever saved the day for you in Production?\n29:42:
    Cool OTP features\n30:57 Tips to developers\n35:36 Where to find Mark\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Mark Ericksen.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ywF-Ju7p
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a5a2fb4-c1a0-437a-9001-9b981312ecab.mp3
    length: '35899109'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Mark Ericksen about their current and past Elixir projects
      and how they are deployed.
    duration: '36:34'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a5a2fb4-c1a0-437a-9001-9b981312ecab/cover.jpg?v=2
    summary: "\n        <p>We talk with Mark Ericksen from Elixir Mix about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Mark Ericksen
      - <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">Elixir Mix</a></p>\n\n<p>Find
      Mark elsewhere online:<br>\n<a href=\"https://twitter.com/brainlid\" rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n<a
      href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a></p>\n\n<p>00:32
      Intro<br>\n0:58 Mark intro<br>\nDeveloping a long time. C#, then Rails. Webforms
      were terrible. Rails is “Wow, this is how web development should be… I moved
      across the country to work with this technology”<br>\nThe Rails Community is
      strong. Dave Thomas got Mark into Elixir</p>\n\n<p>2:48     What Elixir projects
      do you have in production?<br>\nA Rails app and a number of Elixir Micro-liths</p>\n\n<p>4:29
      \    Why do you use Elixir </p>\n\n<p>6:45    Trends in moving from Ruby and
      Rails to Elixir<br>\nRuby Syntax<br>\nPattern Matching<br>\nConcurrency primitives<br>\nFault
      Tolerance and a functional paradigm<br>\nErlang/OTP</p>\n\n<p>6:48    Comparing
      Elixir community to Ruby community to C# community</p>\n\n<p>8:27     Any disadvantages
      to using Elixir?<br>\nBuilding releases. Configuring releases.<br>\nmix.release</p>\n\n<p>10:13
      \   Where are you hosting these bad boys?<br>\nAWS<br>\nKubernetes in Production.
      So Fresh.<br>\nDocker and Distillery 2.0 Releases<br>\nYaml files and Bash Scripts<br>\nMakefiles</p>\n\n<p>10:53
      \   What else are you using besides docker</p>\n\n<p>12:36    Helm and Ksonnet.
      </p>\n\n<p>13:55   Deploys</p>\n\n<p>14:39   Clustering</p>\n\n<p>17:50   How
      do your Elixir apps compare to the Ruby apps?<br>\nBig Elixir Apps</p>\n\n<p>20:00
      \   How Mark handles background jobs<br>\nEasy to write yourself with BEAM primitives</p>\n\n<p>21:27
      \   Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>\n\n<p>23:29
      \  Third party integrations. Major ones were easy. Banks were bad.<br>\nLiterally
      had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>\n\n<p>25:26
      \    Has Elixir ever saved the day for you in Production?</p>\n\n<p>29:42: Cool
      OTP features<br>\n30:57 Tips to developers<br>\n35:36 Where to find Mark</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a
      href=\"https://github.com/bitwalker/libcluster\" title=\"libcluster\" rel=\"nofollow\">libcluster</a></li><li><a
      href=\"https://github.com/akira/exq\" title=\"Exq\" rel=\"nofollow\">Exq</a></li><li><a
      href=\"https://absinthe-graphql.org/\" title=\"absinthe\" rel=\"nofollow\">absinthe</a></li><li><a
      href=\"https://github.com/absinthe-graphql/dataloader\" title=\"dataloader\"
      rel=\"nofollow\">dataloader</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Mark Ericksen from Elixir Mix about their
    current and past Elixir projects and how they are deployed.</p>\n\n<p>Mark Ericksen
    - <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">Elixir Mix</a></p>\n\n<p>Find
    Mark elsewhere online:<br>\n<a href=\"https://twitter.com/brainlid\" rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n<a
    href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a></p>\n\n<p>00:32
    Intro<br>\n0:58 Mark intro<br>\nDeveloping a long time. C#, then Rails. Webforms
    were terrible. Rails is “Wow, this is how web development should be… I moved across
    the country to work with this technology”<br>\nThe Rails Community is strong.
    Dave Thomas got Mark into Elixir</p>\n\n<p>2:48     What Elixir projects do you
    have in production?<br>\nA Rails app and a number of Elixir Micro-liths</p>\n\n<p>4:29
    \    Why do you use Elixir </p>\n\n<p>6:45    Trends in moving from Ruby and Rails
    to Elixir<br>\nRuby Syntax<br>\nPattern Matching<br>\nConcurrency primitives<br>\nFault
    Tolerance and a functional paradigm<br>\nErlang/OTP</p>\n\n<p>6:48    Comparing
    Elixir community to Ruby community to C# community</p>\n\n<p>8:27     Any disadvantages
    to using Elixir?<br>\nBuilding releases. Configuring releases.<br>\nmix.release</p>\n\n<p>10:13
    \   Where are you hosting these bad boys?<br>\nAWS<br>\nKubernetes in Production.
    So Fresh.<br>\nDocker and Distillery 2.0 Releases<br>\nYaml files and Bash Scripts<br>\nMakefiles</p>\n\n<p>10:53
    \   What else are you using besides docker</p>\n\n<p>12:36    Helm and Ksonnet.
    </p>\n\n<p>13:55   Deploys</p>\n\n<p>14:39   Clustering</p>\n\n<p>17:50   How
    do your Elixir apps compare to the Ruby apps?<br>\nBig Elixir Apps</p>\n\n<p>20:00
    \   How Mark handles background jobs<br>\nEasy to write yourself with BEAM primitives</p>\n\n<p>21:27
    \   Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>\n\n<p>23:29
    \  Third party integrations. Major ones were easy. Banks were bad.<br>\nLiterally
    had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>\n\n<p>25:26
    \    Has Elixir ever saved the day for you in Production?</p>\n\n<p>29:42: Cool
    OTP features<br>\n30:57 Tips to developers<br>\n35:36 Where to find Mark</p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a
    href=\"https://github.com/bitwalker/libcluster\" title=\"libcluster\" rel=\"nofollow\">libcluster</a></li><li><a
    href=\"https://github.com/akira/exq\" title=\"Exq\" rel=\"nofollow\">Exq</a></li><li><a
    href=\"https://absinthe-graphql.org/\" title=\"absinthe\" rel=\"nofollow\">absinthe</a></li><li><a
    href=\"https://github.com/absinthe-graphql/dataloader\" title=\"dataloader\" rel=\"nofollow\">dataloader</a></li></ul>\n
    \     "
- title: Brooklyn Zelenka from SPADE Co. - Elixir in Production
  slug: season-1-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-zelenka
  guid: 0cef68be-a246-4ba6-bdc7-a6835c05fe72
  pubDate: Thu, 14 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 14, 2019
  description: "We talk with Brooklyn Zelenka from SPADE Co. about their current and
    past Elixir projects and how they are deployed.\nBrooklyn Zelenka - SPADE Co.
    (https://spade.builders/)\nFind Brooklyn elsewhere online:\nhttps://twitter.com/expede\nhttps://github.com/expede\n1:08
    \   - Brooklyn’s Background\nBrooklyn's background and experience with Elixir
    is deep. Huge open source contributor. \nGot started in Elixir just after Phoenix
    got to 1.0. \n1:53     - Worked on several Elixir projects in production.\n2:43
    \    - Why she got into Elixir.\n- Real Time\n- More performant than Rails.\n-
    Great documentation\n- Industrial-grade\n4:38     - When you wouldn't use Elixir.
    \nEasy to get stakeholder buy-in. Just point to WhatsApp.\nElixir is made for
    2019\nCLI tools\nRepl-driven development \nTDD tools built in by default \nAll
    the best practices we have today are built in.\n7:14     - Where has Brooklyn
    hosted her apps?\nHeroku for POC's. AWS for production. Dockerized because \"kubernetes
    is the new hotness\"\n9:40    - Do you do any clustering?\nLoad balanced above.
    AWS load balancing is very standard. They're well understood and have a nice developer
    experience.\n10:29   Are you able to get any zero downtime deploys?\nZero downtime
    deploys. Awesome but impractical. Rolling deploys are easier and usually more
    appropriate. Some requirements make it valuable.\nErlang error states. Exceptional.
    Allows you to build for the happy path. Don't worry about error handling all the
    time.\nWitchcraft and dark magic. Monads.\nPoke around the standard library.\n12:50
    \   - How does Elixir compare to Rails in terms of response times, and other aspects?\n15:32
    \   - What libraries do you use and what have  you built?\n22:41    - Any cool
    features of OTP you are using? \n25:36   - One tip to developers new to Elixir\nBuild
    up a peer-to-peer cli chat from scratch in one GenServer.\nFind her at @expede
    everywhere on the internet.\nLearn more about how SmartLogic uses Phoenix and
    Elixir. (https://smr.tl/2Hyslu8)\n Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bzKl4PYr
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0cef68be-a246-4ba6-bdc7-a6835c05fe72.mp3
    length: '27483795'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Brooklyn Zelenka from SPADE Co. about their current and
      past Elixir projects and how they are deployed.
    duration: '27:46'
    explicit: 'no'
    keywords: elixir, phoenix, spade co
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0cef68be-a246-4ba6-bdc7-a6835c05fe72/cover.jpg?v=2
    summary: "\n        <p>We talk with Brooklyn Zelenka from SPADE Co. about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Brooklyn
      Zelenka - <a href=\"https://spade.builders/\" rel=\"nofollow\">SPADE Co.</a></p>\n\n<p>Find
      Brooklyn elsewhere online:<br>\n<a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\n<a
      href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a></p>\n\n<p>1:08
      \   - Brooklyn’s Background</p>\n\n<p>Brooklyn&#39;s background and experience
      with Elixir is deep. Huge open source contributor. <br>\nGot started in Elixir
      just after Phoenix got to 1.0. </p>\n\n<p>1:53     - Worked on several Elixir
      projects in production.</p>\n\n<p>2:43     - Why she got into Elixir.</p>\n\n<ul>\n<li>Real
      Time</li>\n<li>More performant than Rails.</li>\n<li>Great documentation</li>\n<li>Industrial-grade</li>\n</ul>\n\n<p>4:38
      \    - When you wouldn&#39;t use Elixir. </p>\n\n<p>Easy to get stakeholder
      buy-in. Just point to WhatsApp.</p>\n\n<p>Elixir is made for 2019<br>\nCLI tools<br>\nRepl-driven
      development <br>\nTDD tools built in by default </p>\n\n<p>All the best practices
      we have today are built in.</p>\n\n<p>7:14     - Where has Brooklyn hosted her
      apps?</p>\n\n<p>Heroku for POC&#39;s. AWS for production. Dockerized because
      &quot;kubernetes is the new hotness&quot;</p>\n\n<p>9:40    - Do you do any
      clustering?</p>\n\n<p>Load balanced above. AWS load balancing is very standard.
      They&#39;re well understood and have a nice developer experience.</p>\n\n<p>10:29
      \  Are you able to get any zero downtime deploys?<br>\nZero downtime deploys.
      Awesome but impractical. Rolling deploys are easier and usually more appropriate.
      Some requirements make it valuable.</p>\n\n<p>Erlang error states. Exceptional.
      Allows you to build for the happy path. Don&#39;t worry about error handling
      all the time.</p>\n\n<p>Witchcraft and dark magic. Monads.</p>\n\n<p>Poke around
      the standard library.</p>\n\n<p>12:50    - How does Elixir compare to Rails
      in terms of response times, and other aspects?</p>\n\n<p>15:32    - What libraries
      do you use and what have  you built?</p>\n\n<p>22:41    - Any cool features
      of OTP you are using? </p>\n\n<p>25:36   - One tip to developers new to Elixir</p>\n\n<p>Build
      up a peer-to-peer cli chat from scratch in one GenServer.</p>\n\n<p>Find her
      at @expede everywhere on the internet.</p>\n\n<p>Learn more about how SmartLogic
      uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
      Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
      title=\"Heroku Elixir Buildpack\" rel=\"nofollow\">Heroku Elixir Buildpack</a></li><li><a
      href=\"https://github.com/gjaldon/heroku-buildpack-phoenix-static\" title=\"Heroku
      Phoenix Static Buildpack\" rel=\"nofollow\">Heroku Phoenix Static Buildpack</a></li><li><a
      href=\"https://github.com/expede/exceptional\" title=\"Exceptional\" rel=\"nofollow\">Exceptional</a></li><li><a
      href=\"https://github.com/expede/witchcraft\" title=\"Witchcraft\" rel=\"nofollow\">Witchcraft</a></li><li><a
      href=\"https://github.com/expede/quick_chat\" title=\"QuickChat\" rel=\"nofollow\">QuickChat</a></li></ul>\n
      \     "
  contentEncoded: "\n        <p>We talk with Brooklyn Zelenka from SPADE Co. about
    their current and past Elixir projects and how they are deployed.</p>\n\n<p>Brooklyn
    Zelenka - <a href=\"https://spade.builders/\" rel=\"nofollow\">SPADE Co.</a></p>\n\n<p>Find
    Brooklyn elsewhere online:<br>\n<a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\n<a
    href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a></p>\n\n<p>1:08
    \   - Brooklyn’s Background</p>\n\n<p>Brooklyn&#39;s background and experience
    with Elixir is deep. Huge open source contributor. <br>\nGot started in Elixir
    just after Phoenix got to 1.0. </p>\n\n<p>1:53     - Worked on several Elixir
    projects in production.</p>\n\n<p>2:43     - Why she got into Elixir.</p>\n\n<ul>\n<li>Real
    Time</li>\n<li>More performant than Rails.</li>\n<li>Great documentation</li>\n<li>Industrial-grade</li>\n</ul>\n\n<p>4:38
    \    - When you wouldn&#39;t use Elixir. </p>\n\n<p>Easy to get stakeholder buy-in.
    Just point to WhatsApp.</p>\n\n<p>Elixir is made for 2019<br>\nCLI tools<br>\nRepl-driven
    development <br>\nTDD tools built in by default </p>\n\n<p>All the best practices
    we have today are built in.</p>\n\n<p>7:14     - Where has Brooklyn hosted her
    apps?</p>\n\n<p>Heroku for POC&#39;s. AWS for production. Dockerized because &quot;kubernetes
    is the new hotness&quot;</p>\n\n<p>9:40    - Do you do any clustering?</p>\n\n<p>Load
    balanced above. AWS load balancing is very standard. They&#39;re well understood
    and have a nice developer experience.</p>\n\n<p>10:29   Are you able to get any
    zero downtime deploys?<br>\nZero downtime deploys. Awesome but impractical. Rolling
    deploys are easier and usually more appropriate. Some requirements make it valuable.</p>\n\n<p>Erlang
    error states. Exceptional. Allows you to build for the happy path. Don&#39;t worry
    about error handling all the time.</p>\n\n<p>Witchcraft and dark magic. Monads.</p>\n\n<p>Poke
    around the standard library.</p>\n\n<p>12:50    - How does Elixir compare to Rails
    in terms of response times, and other aspects?</p>\n\n<p>15:32    - What libraries
    do you use and what have  you built?</p>\n\n<p>22:41    - Any cool features of
    OTP you are using? </p>\n\n<p>25:36   - One tip to developers new to Elixir</p>\n\n<p>Build
    up a peer-to-peer cli chat from scratch in one GenServer.</p>\n\n<p>Find her at
    @expede everywhere on the internet.</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    title=\"Heroku Elixir Buildpack\" rel=\"nofollow\">Heroku Elixir Buildpack</a></li><li><a
    href=\"https://github.com/gjaldon/heroku-buildpack-phoenix-static\" title=\"Heroku
    Phoenix Static Buildpack\" rel=\"nofollow\">Heroku Phoenix Static Buildpack</a></li><li><a
    href=\"https://github.com/expede/exceptional\" title=\"Exceptional\" rel=\"nofollow\">Exceptional</a></li><li><a
    href=\"https://github.com/expede/witchcraft\" title=\"Witchcraft\" rel=\"nofollow\">Witchcraft</a></li><li><a
    href=\"https://github.com/expede/quick_chat\" title=\"QuickChat\" rel=\"nofollow\">QuickChat</a></li></ul>\n
    \     "
- title: Todd Resudek from Weedmaps - Elixir in Production
  slug: season-1-weedmaps
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-weedmaps
  guid: d949b81e-39c5-4474-8605-89062b8dc543
  pubDate: Thu, 07 Mar 2019 06:00:00 -0500
  pubDateFriendly: March  7, 2019
  description: "We talk with Todd Resudek from Weedmaps about their current Elixir
    projects and how they are deployed.\nTodd Resudek - Weedmaps (https://weedmaps.com/)\nFind
    Todd elsewhere online:\nhttps://twitter.com/sprsmpl\nhttps://github.com/supersimple\n00:00
    - Intro\n01:06 - Tom introduces himself\n02:54 - What is Weedmaps?\n04:33 - Overview
    of the Elixir projects you have in production.\n06:25 - Why are you using Elixir
    in production?\n07:21 - Advantages / disadvantages of Elixir\n10:37   - What do
    you use to host your Elixir app?\n10:50 - How do you deploy your application?\n11:22
    - Are you able to get zero downtime deploys? \n12:00 - Do you cluster the application?
    \n13:00 - How does your Elixir App perform compared to others in your environment?\n14:15
    - How are you solving background task processing?\n16:40 - What libraries are
    you using?\n21:09 - 3rd Party Services\n23:56 - Do you have a story where Elixir
    saved the day in production?\n24:22 - Are you using any cool OTP features?\n24:39
    - Tip to developers\n25:12 - Where you can find him\n25:32 - Outro\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gdseP1yY
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d949b81e-39c5-4474-8605-89062b8dc543.mp3
    length: '25689488'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Todd Resudek from Weedmaps about their current Elixir projects
      and how they are deployed.
    duration: '26:01'
    explicit: 'no'
    keywords: elixir, phoenix, weedmaps
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d949b81e-39c5-4474-8605-89062b8dc543/cover.jpg?v=2
    summary: "\n        <p>We talk with Todd Resudek from Weedmaps about their current
      Elixir projects and how they are deployed.</p>\n\n<p>Todd Resudek - <a href=\"https://weedmaps.com/\"
      rel=\"nofollow\">Weedmaps</a></p>\n\n<p>Find Todd elsewhere online:<br>\n<a
      href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\n<a
      href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a></p>\n\n<p>00:00
      - Intro<br>\n01:06 - Tom introduces himself<br>\n02:54 - What is Weedmaps?<br>\n04:33
      - Overview of the Elixir projects you have in production.<br>\n06:25 - Why are
      you using Elixir in production?<br>\n07:21 - Advantages / disadvantages of Elixir<br>\n10:37
      \  - What do you use to host your Elixir app?<br>\n10:50 - How do you deploy
      your application?<br>\n11:22 - Are you able to get zero downtime deploys? <br>\n12:00
      - Do you cluster the application? <br>\n13:00 - How does your Elixir App perform
      compared to others in your environment?<br>\n14:15 - How are you solving background
      task processing?<br>\n16:40 - What libraries are you using?<br>\n21:09 - 3rd
      Party Services<br>\n23:56 - Do you have a story where Elixir saved the day in
      production?<br>\n24:22 - Are you using any cool OTP features?<br>\n24:39 - Tip
      to developers<br>\n25:12 - Where you can find him<br>\n25:32 - Outro</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Todd Resudek.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=cbCnTKVLuu8\" title=\"A Deep Dive into
      Hex - ElixirConf talk\" rel=\"nofollow\">A Deep Dive into Hex - ElixirConf talk</a></li><li><a
      href=\"https://github.com/rrrene/credo\" title=\"Credo\" rel=\"nofollow\">Credo</a></li><li><a
      href=\"https://github.com/jeremyjh/dialyxir\" title=\"Dialyxir\" rel=\"nofollow\">Dialyxir</a></li><li><a
      href=\"https://github.com/swoosh/swoosh\" title=\"Swoosh\" rel=\"nofollow\">Swoosh</a></li></ul>\n
      \     "
  contentEncoded: "\n        <p>We talk with Todd Resudek from Weedmaps about their
    current Elixir projects and how they are deployed.</p>\n\n<p>Todd Resudek - <a
    href=\"https://weedmaps.com/\" rel=\"nofollow\">Weedmaps</a></p>\n\n<p>Find Todd
    elsewhere online:<br>\n<a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\n<a
    href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a></p>\n\n<p>00:00
    - Intro<br>\n01:06 - Tom introduces himself<br>\n02:54 - What is Weedmaps?<br>\n04:33
    - Overview of the Elixir projects you have in production.<br>\n06:25 - Why are
    you using Elixir in production?<br>\n07:21 - Advantages / disadvantages of Elixir<br>\n10:37
    \  - What do you use to host your Elixir app?<br>\n10:50 - How do you deploy your
    application?<br>\n11:22 - Are you able to get zero downtime deploys? <br>\n12:00
    - Do you cluster the application? <br>\n13:00 - How does your Elixir App perform
    compared to others in your environment?<br>\n14:15 - How are you solving background
    task processing?<br>\n16:40 - What libraries are you using?<br>\n21:09 - 3rd Party
    Services<br>\n23:56 - Do you have a story where Elixir saved the day in production?<br>\n24:22
    - Are you using any cool OTP features?<br>\n24:39 - Tip to developers<br>\n25:12
    - Where you can find him<br>\n25:32 - Outro</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Todd Resudek.</p><p>Links:</p><ul><li><a href=\"https://www.youtube.com/watch?v=cbCnTKVLuu8\"
    title=\"A Deep Dive into Hex - ElixirConf talk\" rel=\"nofollow\">A Deep Dive
    into Hex - ElixirConf talk</a></li><li><a href=\"https://github.com/rrrene/credo\"
    title=\"Credo\" rel=\"nofollow\">Credo</a></li><li><a href=\"https://github.com/jeremyjh/dialyxir\"
    title=\"Dialyxir\" rel=\"nofollow\">Dialyxir</a></li><li><a href=\"https://github.com/swoosh/swoosh\"
    title=\"Swoosh\" rel=\"nofollow\">Swoosh</a></li></ul>\n      "
- title: Lonestar ElixirConf 2019 Lunchisode
  slug: special-lonestar-elixir-2019
  link: https://smartlogic.io/podcast/elixir-wizards/special-lonestar-elixir-2019
  guid: 4646981d-f12c-479e-a5cc-7629570962ed
  pubDate: Wed, 06 Mar 2019 03:15:00 -0500
  pubDateFriendly: March  6, 2019
  description: "We sat down with numerous developers, including José Valim and Chris
    McCord, during the Saturday lunch at Lonestar ElixirConf 2019 (https://lonestarelixir.com/2019/).
    Hear what they had to say about the state of Elixir!\nGuests:\nJosé Valim - Creator
    of Elixir (https://elixir-lang.org/)\nChris McCord - Creator of Phoenix (https://phoenixframework.org/)\nPaul
    Schoenfelder - Creator of Distillery (https://github.com/bitwalker/distillery),
    Timex (https://github.com/bitwalker/timex), Libcluster (https://github.com/bitwalker/libcluster),
    and many others\nChris Keathley - Host of Elixir Outlaws (https://elixiroutlaws.com/),
    developer at Bleacher Report (https://bleacherreport.com/)\nAmos King - Host of
    Elixir Outlaws (https://elixiroutlaws.com/)\nJim Freeze - Organizer of ElixirConf
    (https://elixirconf.com/), ElixirConf EU (http://www.elixirconf.eu/), and others\nSusumu
    Yamazaki - Creator of Hastega (https://github.com/zeam-vm/hastega)\nBrian Cardarella
    - CEO of Dockyard (https://dockyard.com/)\nOsa Gaius - Engineer at Mailchimp (https://mailchimp.com/)\nSpectating:\nBruce
    Tate and Ben Marx\n00:00   - Intro\n01:47   - LoneStar begins\n02:03   - Panelists
    introduce themselves\n09:15   - Where is Elixir going?\n10:14   - Releases\n19:04
    \  - The issue with hype\n26:30   - Osa Intro\n29:00 - Define lists\n40:00 - How
    can Elixir displace Java?\nLearn more about how SmartLogic uses Phoenix and Elixir.
    (https://smr.tl/2Hyslu8) \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Dtb3wso1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4646981d-f12c-479e-a5cc-7629570962ed.mp3
    length: '47881563'
    type: audio/mpeg
  itunes:
    episodeType: bonus
    season: '1'
    author: SmartLogic LLC
    subtitle: We sat down with numerous developers, including José Valim and Chris
      McCord, during the Saturday lunch at Lonestar ElixirConf 2019. Hear what they
      had to say about the state of Elixir!
    duration: '49:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4646981d-f12c-479e-a5cc-7629570962ed/cover.jpg?v=1
    summary: "\n        <p>We sat down with numerous developers, including José Valim
      and Chris McCord, during the Saturday lunch at <a href=\"https://lonestarelixir.com/2019/\"
      rel=\"nofollow\">Lonestar ElixirConf 2019</a>. Hear what they had to say about
      the state of Elixir!</p>\n\n<p>Guests:<br>\nJosé Valim - Creator of <a href=\"https://elixir-lang.org/\"
      rel=\"nofollow\">Elixir</a><br>\nChris McCord - Creator of <a href=\"https://phoenixframework.org/\"
      rel=\"nofollow\">Phoenix</a><br>\nPaul Schoenfelder - Creator of <a href=\"https://github.com/bitwalker/distillery\"
      rel=\"nofollow\">Distillery</a>, <a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">Timex</a>, <a href=\"https://github.com/bitwalker/libcluster\"
      rel=\"nofollow\">Libcluster</a>, and many others<br>\nChris Keathley - Host
      of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir Outlaws</a>,
      developer at <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">Bleacher
      Report</a><br>\nAmos King - Host of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir
      Outlaws</a><br>\nJim Freeze - Organizer of <a href=\"https://elixirconf.com/\"
      rel=\"nofollow\">ElixirConf</a>, <a href=\"http://www.elixirconf.eu/\" rel=\"nofollow\">ElixirConf
      EU</a>, and others<br>\nSusumu Yamazaki - Creator of <a href=\"https://github.com/zeam-vm/hastega\"
      rel=\"nofollow\">Hastega</a><br>\nBrian Cardarella - CEO of <a href=\"https://dockyard.com/\"
      rel=\"nofollow\">Dockyard</a><br>\nOsa Gaius - Engineer at <a href=\"https://mailchimp.com/\"
      rel=\"nofollow\">Mailchimp</a></p>\n\n<p>Spectating:<br>\nBruce Tate and Ben
      Marx</p>\n\n<p>00:00   - Intro<br>\n01:47   - LoneStar begins<br>\n02:03   -
      Panelists introduce themselves<br>\n09:15   - Where is Elixir going?<br>\n10:14
      \  - Releases<br>\n19:04   - The issue with hype<br>\n26:30   - Osa Intro<br>\n29:00
      - Define lists<br>\n40:00 - How can Elixir displace Java?</p>\n\n<p>Learn more
      about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p>\n      "
  contentEncoded: "\n        <p>We sat down with numerous developers, including José
    Valim and Chris McCord, during the Saturday lunch at <a href=\"https://lonestarelixir.com/2019/\"
    rel=\"nofollow\">Lonestar ElixirConf 2019</a>. Hear what they had to say about
    the state of Elixir!</p>\n\n<p>Guests:<br>\nJosé Valim - Creator of <a href=\"https://elixir-lang.org/\"
    rel=\"nofollow\">Elixir</a><br>\nChris McCord - Creator of <a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">Phoenix</a><br>\nPaul Schoenfelder - Creator of <a href=\"https://github.com/bitwalker/distillery\"
    rel=\"nofollow\">Distillery</a>, <a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">Timex</a>, <a href=\"https://github.com/bitwalker/libcluster\"
    rel=\"nofollow\">Libcluster</a>, and many others<br>\nChris Keathley - Host of
    <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir Outlaws</a>, developer
    at <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">Bleacher Report</a><br>\nAmos
    King - Host of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir
    Outlaws</a><br>\nJim Freeze - Organizer of <a href=\"https://elixirconf.com/\"
    rel=\"nofollow\">ElixirConf</a>, <a href=\"http://www.elixirconf.eu/\" rel=\"nofollow\">ElixirConf
    EU</a>, and others<br>\nSusumu Yamazaki - Creator of <a href=\"https://github.com/zeam-vm/hastega\"
    rel=\"nofollow\">Hastega</a><br>\nBrian Cardarella - CEO of <a href=\"https://dockyard.com/\"
    rel=\"nofollow\">Dockyard</a><br>\nOsa Gaius - Engineer at <a href=\"https://mailchimp.com/\"
    rel=\"nofollow\">Mailchimp</a></p>\n\n<p>Spectating:<br>\nBruce Tate and Ben Marx</p>\n\n<p>00:00
    \  - Intro<br>\n01:47   - LoneStar begins<br>\n02:03   - Panelists introduce themselves<br>\n09:15
    \  - Where is Elixir going?<br>\n10:14   - Releases<br>\n19:04   - The issue with
    hype<br>\n26:30   - Osa Intro<br>\n29:00 - Define lists<br>\n40:00 - How can Elixir
    displace Java?</p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p>\n      "
- title: Dan Ivovich from SmartLogic - Elixir in Production
  slug: season-1-smartlogic
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-smartlogic
  guid: f71af757-ce4c-44a0-8e78-5766711fd7d4
  pubDate: Thu, 28 Feb 2019 06:00:00 -0500
  pubDateFriendly: February 28, 2019
  description: "We talk with developers from the team here at SmartLogic about our
    current practices on deploying Elixir and Phoenix in production.\nDan Ivovich
    - Director of Development Operations @ SmartLogic\nLearn more about how SmartLogic
    uses Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir)\n00:00 - Fade
    In\n00:30 - Introductions to Eric, Dan and SmartLogic\nDan Ivovich - Director
    of Development Operations @ SmartLogic\nEric Oestrich - Developer, Elixir Lead
    @ SmartLogic\nJustus Eapen - Full stack developer @ SmartLogic\nIntroduced to
    Elixir by an old colleague. \n1:20 - What Elixir projects do you have in production?
    \nSeveral client projects in production. Several Mobile Apps with APIs powered
    by Phoenix and Elixir. \nBaltimore Water Taxi. \nA digital marketplace.\nAnd more!\n1:57
    - Advantages and disadvantages to using Elixir.\nWe made the switch when a colleague
    was stoked about Functional Programming and introduced us to Elixir. We were won
    over by the performance and rich feature sets, OTP, etc.\n2:43 - Where are we
    hosting our Elixir Apps?\nHeroku \nAWS \nLinode \nDigital Ocean \n6:20Deployment
    process, tools, scripting\nAnsible - for underlying VPS’s, servers, and more recently
    deployment itself. (Similar to Capistrano).  \nDistillery  \nMix.release \n7:18
    - Zero Downtime Deployments\nOld school load balancers and rolling restarts \n7:46
    - What are the performance metrics like? Comparatively.\nRuby ends up with memory
    leaks. That doesn’t happen with Elixir. \nMemory utilization is flat and low no
    matter what. \n“Phenomenal response times” \n8:54 - How does Eric think about
    clustered applications in Elixir?\nGoing Multi Node (https://www.youtube.com/watch?v=lCUKQnkjajo
    (https://www.youtube.com/watch?v=lCUKQnkjajo)) \nPg2 (http://erlang.org/doc/man/pg2.html)
    - process groups \nMnesia (http://erlang.org/doc/man/mnesia.html) distributed
    database (beware!) \n“Just sending messages to pids because Erlang is great” \nSwarm
    (https://github.com/bitwalker/swarm) / Horde (https://github.com/derekkraan/horde)
    \n12:40 - How do we handle background tasks?\nStarted with verk (https://github.com/edgurgel/verk)
    \nRecently becoming more comfortable with spinning up GenServers (https://hexdocs.pm/elixir/GenServer.html)
    \n“The language itself is built to be concurrent.” \n15:06 What libraries are
    we using in prod?\nFirst thing: You don’t need a whole lot because the language
    is so well designed. \nPhoenix (https://phoenixframework.org/) - web framework
    \nEcto (https://hexdocs.pm/ecto/Ecto.html) - sort of an ORM \nDistillery (https://github.com/bitwalker/distillery)
    - for releases \nBamboo (https://github.com/thoughtbot/bamboo) - for sending emails
    \nQuantum (https://github.com/c-rack/quantum-elixir) - for task scheduling \nTimex
    (https://github.com/bitwalker/timex) - for dates and times, and timezones \nCachex
    (https://github.com/whitfin/cachex) - for caching \n18:20- What third party integrations
    have we attempted\nStripe \nSquare \nTwilio \nMindbody \nAlways building our own
    clients.  Using HTTPoison (https://github.com/edgurgel/httpoison)\n19:58Has Elixir
    ever saved the day in production?\nIt’s saved many days by PREVENTING ISSUES.
    Systems are architected for reliability and fault-tolerance.\n21:48 - Where do
    supervision trees come from? What is OTP?\nOTP is an Erlang standard lib \nIncludes
    supervision trees, genservers, ETS, and a lot of stuff we don’t even know about!
    \ngen_tcp (http://erlang.org/doc/man/gen_tcp.html) \nMnesia \ndets (http://erlang.org/doc/man/dets.html)
    \n23:43- Tips for devs considering running elixir in production.\nJump in and
    read the docs \nUnderstand how systems boot, distillery releases, config providers,
    etc. \n“Good server monitoring hygiene” \n“DIVE IN!” \n19:54 Outro\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zPzz9EC9
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f71af757-ce4c-44a0-8e78-5766711fd7d4.mp3
    length: '28610193'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with developers from here at SmartLogic about our current practices
      on deploying Elixir and Phoenix in production.
    duration: '28:28'
    explicit: 'no'
    keywords: elixir, phoenix, smartlogic
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f71af757-ce4c-44a0-8e78-5766711fd7d4/cover.jpg?v=2
    summary: "\n        <p>We talk with developers from the team here at SmartLogic
      about our current practices on deploying Elixir and Phoenix in production.</p>\n\n<p>Dan
      Ivovich - Director of Development Operations @ SmartLogic</p>\n\n<p>Learn more
      about how SmartLogic uses <a href=\"https://smartlogic.io/phoenix-and-elixir\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p>\n\n<p>00:00 - Fade In</p>\n\n<p>00:30
      - Introductions to Eric, Dan and SmartLogic</p>\n\n<p>Dan Ivovich - Director
      of Development Operations @ SmartLogic</p>\n\n<p>Eric Oestrich - Developer,
      Elixir Lead @ SmartLogic</p>\n\n<p>Justus Eapen - Full stack developer @ SmartLogic</p>\n\n<p>Introduced
      to Elixir by an old colleague. </p>\n\n<p>1:20 - What Elixir projects do you
      have in production? </p>\n\n<p>Several client projects in production. Several
      Mobile Apps with APIs powered by Phoenix and Elixir. </p>\n\n<p>Baltimore Water
      Taxi. </p>\n\n<p>A digital marketplace.</p>\n\n<p>And more!</p>\n\n<p>1:57 -
      Advantages and disadvantages to using Elixir.</p>\n\n<p>We made the switch when
      a colleague was stoked about Functional Programming and introduced us to Elixir.
      We were won over by the performance and rich feature sets, OTP, etc.</p>\n\n<p>2:43
      - Where are we hosting our Elixir Apps?</p>\n\n<ul>\n<li>Heroku </li>\n<li>AWS
      </li>\n<li>Linode </li>\n<li>Digital Ocean </li>\n</ul>\n\n<p>6:20Deployment
      process, tools, scripting</p>\n\n<ul>\n<li>Ansible - for underlying VPS’s, servers,
      and more recently deployment itself. (Similar to Capistrano).<br></li>\n<li>Distillery<br></li>\n<li>Mix.release
      </li>\n</ul>\n\n<p>7:18 - Zero Downtime Deployments</p>\n\n<ul>\n<li>Old school
      load balancers and rolling restarts </li>\n</ul>\n\n<p>7:46 - What are the performance
      metrics like? Comparatively.</p>\n\n<ul>\n<li>Ruby ends up with memory leaks.
      That doesn’t happen with Elixir. </li>\n<li>Memory utilization is flat and low
      no matter what. </li>\n<li>“Phenomenal response times” </li>\n</ul>\n\n<p>8:54
      - How does Eric think about clustered applications in Elixir?</p>\n\n<ul>\n<li>Going
      Multi Node (<a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a>)
      </li>\n<li><a href=\"http://erlang.org/doc/man/pg2.html\" rel=\"nofollow\">Pg2</a>
      - process groups </li>\n<li><a href=\"http://erlang.org/doc/man/mnesia.html\"
      rel=\"nofollow\">Mnesia</a> distributed database (beware!) </li>\n<li>“Just
      sending messages to pids because Erlang is great” </li>\n<li><a href=\"https://github.com/bitwalker/swarm\"
      rel=\"nofollow\">Swarm</a> / <a href=\"https://github.com/derekkraan/horde\"
      rel=\"nofollow\">Horde</a> </li>\n</ul>\n\n<p>12:40 - How do we handle background
      tasks?</p>\n\n<ul>\n<li>Started with <a href=\"https://github.com/edgurgel/verk\"
      rel=\"nofollow\">verk</a> </li>\n<li>Recently becoming more comfortable with
      spinning up <a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">GenServers</a>
      </li>\n<li>“The language itself is built to be concurrent.” </li>\n</ul>\n\n<p>15:06
      What libraries are we using in prod?</p>\n\n<ul>\n<li>First thing: You don’t
      need a whole lot because the language is so well designed. </li>\n<li><a href=\"https://phoenixframework.org/\"
      rel=\"nofollow\">Phoenix</a> - web framework </li>\n<li><a href=\"https://hexdocs.pm/ecto/Ecto.html\"
      rel=\"nofollow\">Ecto</a> - sort of an ORM </li>\n<li><a href=\"https://github.com/bitwalker/distillery\"
      rel=\"nofollow\">Distillery</a> - for releases </li>\n<li><a href=\"https://github.com/thoughtbot/bamboo\"
      rel=\"nofollow\">Bamboo</a> - for sending emails </li>\n<li><a href=\"https://github.com/c-rack/quantum-elixir\"
      rel=\"nofollow\">Quantum</a> - for task scheduling </li>\n<li><a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">Timex</a> - for dates and times, and timezones </li>\n<li><a
      href=\"https://github.com/whitfin/cachex\" rel=\"nofollow\">Cachex</a> - for
      caching </li>\n</ul>\n\n<p>18:20- What third party integrations have we attempted</p>\n\n<ul>\n<li>Stripe
      </li>\n<li>Square </li>\n<li>Twilio </li>\n<li>Mindbody </li>\n</ul>\n\n<p>Always
      building our own clients.  Using <a href=\"https://github.com/edgurgel/httpoison\"
      rel=\"nofollow\">HTTPoison</a></p>\n\n<p>19:58Has Elixir ever saved the day
      in production?</p>\n\n<p>It’s saved many days by PREVENTING ISSUES. Systems
      are architected for reliability and fault-tolerance.</p>\n\n<p>21:48 - Where
      do supervision trees come from? What is OTP?</p>\n\n<ul>\n<li>OTP is an Erlang
      standard lib </li>\n<li>Includes supervision trees, genservers, ETS, and a lot
      of stuff we don’t even know about! </li>\n<li><a href=\"http://erlang.org/doc/man/gen_tcp.html\"
      rel=\"nofollow\">gen_tcp</a> </li>\n<li>Mnesia </li>\n<li><a href=\"http://erlang.org/doc/man/dets.html\"
      rel=\"nofollow\">dets</a> </li>\n</ul>\n\n<p>23:43- Tips for devs considering
      running elixir in production.</p>\n\n<ul>\n<li>Jump in and read the docs </li>\n<li>Understand
      how systems boot, distillery releases, config providers, etc. </li>\n<li>“Good
      server monitoring hygiene” </li>\n<li>“DIVE IN!” \n19:54 Outro</li>\n</ul>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" title=\"Going Multi-Node\"
      rel=\"nofollow\">Going Multi-Node</a></li><li><a href=\"http://erlang.org/doc/man/pg2.html\"
      title=\"PG2\" rel=\"nofollow\">PG2</a></li><li><a href=\"http://erlang.org/doc/man/mnesia.html\"
      title=\"mnesia\" rel=\"nofollow\">mnesia</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
      title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/derekkraan/horde\"
      title=\"Horde\" rel=\"nofollow\">Horde</a></li><li><a href=\"https://github.com/edgurgel/verk\"
      title=\"Verk\" rel=\"nofollow\">Verk</a></li><li><a href=\"https://github.com/thoughtbot/bamboo\"
      title=\"Bamboo\" rel=\"nofollow\">Bamboo</a></li><li><a href=\"https://github.com/quantum-elixir/quantum-core\"
      title=\"Quantum\" rel=\"nofollow\">Quantum</a></li><li><a href=\"https://github.com/whitfin/cachex\"
      title=\"Cachex\" rel=\"nofollow\">Cachex</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with developers from the team here at SmartLogic
    about our current practices on deploying Elixir and Phoenix in production.</p>\n\n<p>Dan
    Ivovich - Director of Development Operations @ SmartLogic</p>\n\n<p>Learn more
    about how SmartLogic uses <a href=\"https://smartlogic.io/phoenix-and-elixir\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p>\n\n<p>00:00 - Fade In</p>\n\n<p>00:30
    - Introductions to Eric, Dan and SmartLogic</p>\n\n<p>Dan Ivovich - Director of
    Development Operations @ SmartLogic</p>\n\n<p>Eric Oestrich - Developer, Elixir
    Lead @ SmartLogic</p>\n\n<p>Justus Eapen - Full stack developer @ SmartLogic</p>\n\n<p>Introduced
    to Elixir by an old colleague. </p>\n\n<p>1:20 - What Elixir projects do you have
    in production? </p>\n\n<p>Several client projects in production. Several Mobile
    Apps with APIs powered by Phoenix and Elixir. </p>\n\n<p>Baltimore Water Taxi.
    </p>\n\n<p>A digital marketplace.</p>\n\n<p>And more!</p>\n\n<p>1:57 - Advantages
    and disadvantages to using Elixir.</p>\n\n<p>We made the switch when a colleague
    was stoked about Functional Programming and introduced us to Elixir. We were won
    over by the performance and rich feature sets, OTP, etc.</p>\n\n<p>2:43 - Where
    are we hosting our Elixir Apps?</p>\n\n<ul>\n<li>Heroku </li>\n<li>AWS </li>\n<li>Linode
    </li>\n<li>Digital Ocean </li>\n</ul>\n\n<p>6:20Deployment process, tools, scripting</p>\n\n<ul>\n<li>Ansible
    - for underlying VPS’s, servers, and more recently deployment itself. (Similar
    to Capistrano).<br></li>\n<li>Distillery<br></li>\n<li>Mix.release </li>\n</ul>\n\n<p>7:18
    - Zero Downtime Deployments</p>\n\n<ul>\n<li>Old school load balancers and rolling
    restarts </li>\n</ul>\n\n<p>7:46 - What are the performance metrics like? Comparatively.</p>\n\n<ul>\n<li>Ruby
    ends up with memory leaks. That doesn’t happen with Elixir. </li>\n<li>Memory
    utilization is flat and low no matter what. </li>\n<li>“Phenomenal response times”
    </li>\n</ul>\n\n<p>8:54 - How does Eric think about clustered applications in
    Elixir?</p>\n\n<ul>\n<li>Going Multi Node (<a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a>) </li>\n<li><a
    href=\"http://erlang.org/doc/man/pg2.html\" rel=\"nofollow\">Pg2</a> - process
    groups </li>\n<li><a href=\"http://erlang.org/doc/man/mnesia.html\" rel=\"nofollow\">Mnesia</a>
    distributed database (beware!) </li>\n<li>“Just sending messages to pids because
    Erlang is great” </li>\n<li><a href=\"https://github.com/bitwalker/swarm\" rel=\"nofollow\">Swarm</a>
    / <a href=\"https://github.com/derekkraan/horde\" rel=\"nofollow\">Horde</a> </li>\n</ul>\n\n<p>12:40
    - How do we handle background tasks?</p>\n\n<ul>\n<li>Started with <a href=\"https://github.com/edgurgel/verk\"
    rel=\"nofollow\">verk</a> </li>\n<li>Recently becoming more comfortable with spinning
    up <a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">GenServers</a>
    </li>\n<li>“The language itself is built to be concurrent.” </li>\n</ul>\n\n<p>15:06
    What libraries are we using in prod?</p>\n\n<ul>\n<li>First thing: You don’t need
    a whole lot because the language is so well designed. </li>\n<li><a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">Phoenix</a> - web framework </li>\n<li><a href=\"https://hexdocs.pm/ecto/Ecto.html\"
    rel=\"nofollow\">Ecto</a> - sort of an ORM </li>\n<li><a href=\"https://github.com/bitwalker/distillery\"
    rel=\"nofollow\">Distillery</a> - for releases </li>\n<li><a href=\"https://github.com/thoughtbot/bamboo\"
    rel=\"nofollow\">Bamboo</a> - for sending emails </li>\n<li><a href=\"https://github.com/c-rack/quantum-elixir\"
    rel=\"nofollow\">Quantum</a> - for task scheduling </li>\n<li><a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">Timex</a> - for dates and times, and timezones </li>\n<li><a
    href=\"https://github.com/whitfin/cachex\" rel=\"nofollow\">Cachex</a> - for caching
    </li>\n</ul>\n\n<p>18:20- What third party integrations have we attempted</p>\n\n<ul>\n<li>Stripe
    </li>\n<li>Square </li>\n<li>Twilio </li>\n<li>Mindbody </li>\n</ul>\n\n<p>Always
    building our own clients.  Using <a href=\"https://github.com/edgurgel/httpoison\"
    rel=\"nofollow\">HTTPoison</a></p>\n\n<p>19:58Has Elixir ever saved the day in
    production?</p>\n\n<p>It’s saved many days by PREVENTING ISSUES. Systems are architected
    for reliability and fault-tolerance.</p>\n\n<p>21:48 - Where do supervision trees
    come from? What is OTP?</p>\n\n<ul>\n<li>OTP is an Erlang standard lib </li>\n<li>Includes
    supervision trees, genservers, ETS, and a lot of stuff we don’t even know about!
    </li>\n<li><a href=\"http://erlang.org/doc/man/gen_tcp.html\" rel=\"nofollow\">gen_tcp</a>
    </li>\n<li>Mnesia </li>\n<li><a href=\"http://erlang.org/doc/man/dets.html\" rel=\"nofollow\">dets</a>
    </li>\n</ul>\n\n<p>23:43- Tips for devs considering running elixir in production.</p>\n\n<ul>\n<li>Jump
    in and read the docs </li>\n<li>Understand how systems boot, distillery releases,
    config providers, etc. </li>\n<li>“Good server monitoring hygiene” </li>\n<li>“DIVE
    IN!” \n19:54 Outro</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a
    href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" title=\"Going Multi-Node\"
    rel=\"nofollow\">Going Multi-Node</a></li><li><a href=\"http://erlang.org/doc/man/pg2.html\"
    title=\"PG2\" rel=\"nofollow\">PG2</a></li><li><a href=\"http://erlang.org/doc/man/mnesia.html\"
    title=\"mnesia\" rel=\"nofollow\">mnesia</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
    title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/derekkraan/horde\"
    title=\"Horde\" rel=\"nofollow\">Horde</a></li><li><a href=\"https://github.com/edgurgel/verk\"
    title=\"Verk\" rel=\"nofollow\">Verk</a></li><li><a href=\"https://github.com/thoughtbot/bamboo\"
    title=\"Bamboo\" rel=\"nofollow\">Bamboo</a></li><li><a href=\"https://github.com/quantum-elixir/quantum-core\"
    title=\"Quantum\" rel=\"nofollow\">Quantum</a></li><li><a href=\"https://github.com/whitfin/cachex\"
    title=\"Cachex\" rel=\"nofollow\">Cachex</a></li></ul>\n      "
- title: Ryan Billingsley from ClusterTruck - Elixir in Production
  slug: season-1-clustertruck
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-clustertruck
  guid: 9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b
  pubDate: Thu, 28 Feb 2019 06:15:00 -0500
  pubDateFriendly: February 28, 2019
  description: |
    We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.
    Ryan Billingsley - ClusterTruck (https://www.clustertruck.com/)
    Find Ryan elsewhere online:
    https://twitter.com/ryanbillingsley
    https://horriblenight.com/
    00:00 - Fade In
    00:50 - Ryan introduces us to ClusterTruck.
    02:00 - How did Ryan get into Elixir?
    03:12 - Where does the name ClusterTruck come from?
    04:17 - Tell us about the projects you have in production.
    05:50 - Why are you using Elixir in these projects.
    08:11 - Disadvantages of using Elixir
    09:22 - Comparing Elixir with Ruby, Node, Go.
    11:38 - Where is ClusterTruck hosting their applications?
    15:03 - Kubernetes?
    16:03 - Zero Downtime Deployments?
    16:42 - Do you do any clustering?
    18:06 - How does Elixir perform compared to other project environments you’ve worked in?
    19:52 - How are you solving background task processing?
    21:09 - Other libraries?
    23:34 - Other third party integrations?
    25:46 - Is there a time Elixir has saved the day in Production?
    27:47 - Cool OTP Features!
    29:45 - Tips to devs thinking about running Elixir in Production.
    31:17 - Outro
    Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Ryan Billingsley.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+anWWbRpR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b.mp3
    length: '32066995'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Ryan Billingsley from ClusterTruck about their current
      Elixir projects and how they are deployed.
    duration: '32:34'
    explicit: 'no'
    keywords: elixir, phoenix, clustertruck
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b/cover.jpg?v=3
    summary: "\n        <p>We talk with Ryan Billingsley from ClusterTruck about their
      current Elixir projects and how they are deployed.</p>\n\n<p>Ryan Billingsley
      - <a href=\"https://www.clustertruck.com/\" rel=\"nofollow\">ClusterTruck</a></p>\n\n<p>Find
      Ryan elsewhere online:<br>\n<a href=\"https://twitter.com/ryanbillingsley\"
      rel=\"nofollow\">https://twitter.com/ryanbillingsley</a><br>\n<a href=\"https://horriblenight.com/\"
      rel=\"nofollow\">https://horriblenight.com/</a></p>\n\n<p>00:00 - Fade In<br>\n00:50
      - Ryan introduces us to ClusterTruck.<br>\n02:00 - How did Ryan get into Elixir?<br>\n03:12
      - Where does the name ClusterTruck come from?<br>\n04:17 - Tell us about the
      projects you have in production.<br>\n05:50 - Why are you using Elixir in these
      projects.<br>\n08:11 - Disadvantages of using Elixir<br>\n09:22 - Comparing
      Elixir with Ruby, Node, Go.<br>\n11:38 - Where is ClusterTruck hosting their
      applications?<br>\n15:03 - Kubernetes?<br>\n16:03 - Zero Downtime Deployments?<br>\n16:42
      - Do you do any clustering?<br>\n18:06 - How does Elixir perform compared to
      other project environments you’ve worked in?<br>\n19:52 - How are you solving
      background task processing?<br>\n21:09 - Other libraries?<br>\n23:34 - Other
      third party integrations?<br>\n25:46 - Is there a time Elixir has saved the
      day in Production?<br>\n27:47 - Cool OTP Features!<br>\n29:45 - Tips to devs
      thinking about running Elixir in Production.<br>\n31:17 - Outro</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a
      href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\" title=\"Programming
      Elixir\" rel=\"nofollow\">Programming Elixir</a></li><li><a href=\"https://docs.saltstack.com/en/latest/\"
      title=\"Salt Stack\" rel=\"nofollow\">Salt Stack</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
      title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/zorbash/opus\"
      title=\"Opus\" rel=\"nofollow\">Opus</a></li><li><a href=\"https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2\"
      title=\"handle_continue\" rel=\"nofollow\">handle_continue</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Ryan Billingsley from ClusterTruck about
    their current Elixir projects and how they are deployed.</p>\n\n<p>Ryan Billingsley
    - <a href=\"https://www.clustertruck.com/\" rel=\"nofollow\">ClusterTruck</a></p>\n\n<p>Find
    Ryan elsewhere online:<br>\n<a href=\"https://twitter.com/ryanbillingsley\" rel=\"nofollow\">https://twitter.com/ryanbillingsley</a><br>\n<a
    href=\"https://horriblenight.com/\" rel=\"nofollow\">https://horriblenight.com/</a></p>\n\n<p>00:00
    - Fade In<br>\n00:50 - Ryan introduces us to ClusterTruck.<br>\n02:00 - How did
    Ryan get into Elixir?<br>\n03:12 - Where does the name ClusterTruck come from?<br>\n04:17
    - Tell us about the projects you have in production.<br>\n05:50 - Why are you
    using Elixir in these projects.<br>\n08:11 - Disadvantages of using Elixir<br>\n09:22
    - Comparing Elixir with Ruby, Node, Go.<br>\n11:38 - Where is ClusterTruck hosting
    their applications?<br>\n15:03 - Kubernetes?<br>\n16:03 - Zero Downtime Deployments?<br>\n16:42
    - Do you do any clustering?<br>\n18:06 - How does Elixir perform compared to other
    project environments you’ve worked in?<br>\n19:52 - How are you solving background
    task processing?<br>\n21:09 - Other libraries?<br>\n23:34 - Other third party
    integrations?<br>\n25:46 - Is there a time Elixir has saved the day in Production?<br>\n27:47
    - Cool OTP Features!<br>\n29:45 - Tips to devs thinking about running Elixir in
    Production.<br>\n31:17 - Outro</p>\n\n<p>Learn more about how SmartLogic uses
    <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
    title=\"Programming Elixir\" rel=\"nofollow\">Programming Elixir</a></li><li><a
    href=\"https://docs.saltstack.com/en/latest/\" title=\"Salt Stack\" rel=\"nofollow\">Salt
    Stack</a></li><li><a href=\"https://github.com/bitwalker/swarm\" title=\"Swarm\"
    rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/zorbash/opus\"
    title=\"Opus\" rel=\"nofollow\">Opus</a></li><li><a href=\"https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2\"
    title=\"handle_continue\" rel=\"nofollow\">handle_continue</a></li></ul>\n      "
- title: Smart Software Season 1 Trailer
  slug: season-1-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-trailer
  guid: 8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72
  pubDate: Mon, 25 Feb 2019 10:00:00 -0500
  pubDateFriendly: February 25, 2019
  description: "Welcome to the first season of Smart Software with SmartLogic. We'll
    be interviewing several companies about how they use Elixir in Production this
    season. In this preview episode, we introduce ourselves and some of the topics
    we’ll be covering.\nLearn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8)
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+CMqsR3oF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72.mp3
    length: '1009172'
    type: audio/mp3
  itunes:
    episodeType: trailer
    season: '1'
    author: SmartLogic LLC
    subtitle: Welcome to the first season of Smart Software with SmartLogic. We'll
      be interviewing several companies about how they use Elixir in Production this
      season. In this preview episode, we introduce ourselves and some of the topics
      we’ll be covering.
    duration: '1:24'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome to the first season of Smart Software with SmartLogic.
      We&#39;ll be interviewing several companies about how they use Elixir in Production
      this season. In this preview episode, we introduce ourselves and some of the
      topics we’ll be covering.</p>\n\n<p>Learn more about how SmartLogic uses <a
      href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p>\n
      \     "
  contentEncoded: "\n        <p>Welcome to the first season of Smart Software with
    SmartLogic. We&#39;ll be interviewing several companies about how they use Elixir
    in Production this season. In this preview episode, we introduce ourselves and
    some of the topics we’ll be covering.</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p>\n
    \     "
Season 7:
- title: Re-Platforming One of the Original Dot Coms in Elixir with Angel Jose
  slug: s7e2-jose
  link: https://smartlogic.io/podcast/elixir-wizards/s7e2-jose
  guid: 196446c8-44e8-4c34-86c8-a688bfb3f706
  pubDate: Thu, 11 Nov 2021 06:00:00 -0500
  pubDateFriendly: November 11, 2021
  description: "Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com
    with a passion for product and the customer experience. Angel played a key role
    in completely re-platforming Cars.com via Elixir, Phoenix, and other open source
    tooling, and his former adventures in the blockchain space include working with
    ETH, EOS, and general distributed tooling. In today’s episode, we discuss Cars.com's
    decision to migrate to an entirely Elixir-based system, rebuilding the data model
    from scratch, redesigning all of the user interfaces, and what that meant for
    the team that Angel was tasked with leading, as well as how the Elixir system
    functions at such incredible scale, with Cars.com receiving more than a million
    visitors daily! We touch on Angel’s approach to onboarding new engineers, how
    Elixir impacts this process, and the broader impact Elixir has on the community
    as a whole, as well as what he hopes to see from the community in the future,
    so make sure not to miss this awesome conversation about adopting Elixir with
    Angel Jose! \nKey Points From This Episode:\nHot takes, rants, and obsessions:
    Angel’s best and worst taco experiences.\nWhy Angel won’t be at ElixirConf 2021
    and the story of how he began programming in Elixir.\nThe process of finding a
    job in software engineering after completing an online bootcamp.\nAngel’s experience
    of navigating the freedom that comes with being an engineer.\nFind out how Angel
    got involved in re-platforming Cars.com, one of the original dot coms. \nGet a
    glimpse into the make up of the engineering team at Cars.com.\nHow the pandemic
    impacted not only Angel’s deadlines but the car industry as a whole.\nThe ETL
    pipeline of different data points that makes up Cars.com and Auto.com.\nAngel
    shares his opinion of LiveView and what he has learned about using it at scale.\nAdvice
    for those adopting new technology: make sure there are enough resources out there.\nWhere
    Angel believes his team would be without Elixir and what they are looking forward
    to.\nSome of the tangible benefits Cars.com has seen from flipping the switch
    to Elixir.\nHow Angel approaches onboarding new engineers by providing them with
    resources and integrating learning into their day-to-day.\nThe importance of celebrating
    small wins and fostering feelings of accomplishment.\nAngel on how Elixir impacts
    onboarding and new engineers; more simplicity, less magic.\nHow Elixir has impacted
    the programming community and what Angel hopes to see in future.\nTaco happy hour,
    conference food, making the most of each meal, remote work, and more!\nWhat Angel
    has learned from working remotely, particularly from a social perspective.\nAngel
    shares his dream car after working at Cars.com and moving to Colorado.\nLinks
    Mentioned in Today’s Episode:\nAngel Jose on LinkedIn — https://www.linkedin.com/in/ajose01/\nAngel
    Jose on Twitter — https://twitter.com/ajose01\nCars.com — https://www.cars.com/\nCars.com
    Careers — https://www.cars.com/careers/\nElixir Conf — https://2021.elixirconf.com/\nElixir
    Slack — https://elixir-slackin.herokuapp.com/\nGeneral Assembly — https://generalassemb.ly/\nSmartLogic
    — https://smartlogic.io/  Special Guest: Angel Jose.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+sH54rwhi
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/196446c8-44e8-4c34-86c8-a688bfb3f706.mp3
    length: '69078292'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com.
      He played a key role in completely re-platforming Cars.com via Elixir, Phoenix,
      and other open source tooling,
    duration: '47:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Today’s guest is Angel Jose, a Software Engineer Manager
      at Cars.com with a passion for product and the customer experience. Angel played
      a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other
      open source tooling, and his former adventures in the blockchain space include
      working with ETH, EOS, and general distributed tooling. In today’s episode,
      we discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system,
      rebuilding the data model from scratch, redesigning all of the user interfaces,
      and what that meant for the team that Angel was tasked with leading, as well
      as how the Elixir system functions at such incredible scale, with Cars.com receiving
      more than a million visitors daily! We touch on Angel’s approach to onboarding
      new engineers, how Elixir impacts this process, and the broader impact Elixir
      has on the community as a whole, as well as what he hopes to see from the community
      in the future, so make sure not to miss this awesome conversation about adopting
      Elixir with Angel Jose! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hot
      takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>\n<li>Why
      Angel won’t be at ElixirConf 2021 and the story of how he began programming
      in Elixir.</li>\n<li>The process of finding a job in software engineering after
      completing an online bootcamp.</li>\n<li>Angel’s experience of navigating the
      freedom that comes with being an engineer.</li>\n<li>Find out how Angel got
      involved in re-platforming Cars.com, one of the original dot coms. </li>\n<li>Get
      a glimpse into the make up of the engineering team at Cars.com.</li>\n<li>How
      the pandemic impacted not only Angel’s deadlines but the car industry as a whole.</li>\n<li>The
      ETL pipeline of different data points that makes up Cars.com and Auto.com.</li>\n<li>Angel
      shares his opinion of LiveView and what he has learned about using it at scale.</li>\n<li>Advice
      for those adopting new technology: make sure there are enough resources out
      there.</li>\n<li>Where Angel believes his team would be without Elixir and what
      they are looking forward to.</li>\n<li>Some of the tangible benefits Cars.com
      has seen from flipping the switch to Elixir.</li>\n<li>How Angel approaches
      onboarding new engineers by providing them with resources and integrating learning
      into their day-to-day.</li>\n<li>The importance of celebrating small wins and
      fostering feelings of accomplishment.</li>\n<li>Angel on how Elixir impacts
      onboarding and new engineers; more simplicity, less magic.</li>\n<li>How Elixir
      has impacted the programming community and what Angel hopes to see in future.</li>\n<li>Taco
      happy hour, conference food, making the most of each meal, remote work, and
      more!</li>\n<li>What Angel has learned from working remotely, particularly from
      a social perspective.</li>\n<li>Angel shares his dream car after working at
      Cars.com and moving to Colorado.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Angel Jose on LinkedIn — <a href=\"https://www.linkedin.com/in/ajose01/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ajose01/</a><br>\nAngel Jose on
      Twitter — <a href=\"https://twitter.com/ajose01\" rel=\"nofollow\">https://twitter.com/ajose01</a><br>\nCars.com
      — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nCars.com
      Careers — <a href=\"https://www.cars.com/careers/\" rel=\"nofollow\">https://www.cars.com/careers/</a><br>\nElixir
      Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nElixir
      Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nGeneral
      Assembly — <a href=\"https://generalassemb.ly/\" rel=\"nofollow\">https://generalassemb.ly/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Angel Jose.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Angel Jose, a Software Engineer Manager
    at Cars.com with a passion for product and the customer experience. Angel played
    a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other
    open source tooling, and his former adventures in the blockchain space include
    working with ETH, EOS, and general distributed tooling. In today’s episode, we
    discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system,
    rebuilding the data model from scratch, redesigning all of the user interfaces,
    and what that meant for the team that Angel was tasked with leading, as well as
    how the Elixir system functions at such incredible scale, with Cars.com receiving
    more than a million visitors daily! We touch on Angel’s approach to onboarding
    new engineers, how Elixir impacts this process, and the broader impact Elixir
    has on the community as a whole, as well as what he hopes to see from the community
    in the future, so make sure not to miss this awesome conversation about adopting
    Elixir with Angel Jose! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hot
    takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>\n<li>Why
    Angel won’t be at ElixirConf 2021 and the story of how he began programming in
    Elixir.</li>\n<li>The process of finding a job in software engineering after completing
    an online bootcamp.</li>\n<li>Angel’s experience of navigating the freedom that
    comes with being an engineer.</li>\n<li>Find out how Angel got involved in re-platforming
    Cars.com, one of the original dot coms. </li>\n<li>Get a glimpse into the make
    up of the engineering team at Cars.com.</li>\n<li>How the pandemic impacted not
    only Angel’s deadlines but the car industry as a whole.</li>\n<li>The ETL pipeline
    of different data points that makes up Cars.com and Auto.com.</li>\n<li>Angel
    shares his opinion of LiveView and what he has learned about using it at scale.</li>\n<li>Advice
    for those adopting new technology: make sure there are enough resources out there.</li>\n<li>Where
    Angel believes his team would be without Elixir and what they are looking forward
    to.</li>\n<li>Some of the tangible benefits Cars.com has seen from flipping the
    switch to Elixir.</li>\n<li>How Angel approaches onboarding new engineers by providing
    them with resources and integrating learning into their day-to-day.</li>\n<li>The
    importance of celebrating small wins and fostering feelings of accomplishment.</li>\n<li>Angel
    on how Elixir impacts onboarding and new engineers; more simplicity, less magic.</li>\n<li>How
    Elixir has impacted the programming community and what Angel hopes to see in future.</li>\n<li>Taco
    happy hour, conference food, making the most of each meal, remote work, and more!</li>\n<li>What
    Angel has learned from working remotely, particularly from a social perspective.</li>\n<li>Angel
    shares his dream car after working at Cars.com and moving to Colorado.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Angel Jose on LinkedIn — <a href=\"https://www.linkedin.com/in/ajose01/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ajose01/</a><br>\nAngel Jose on Twitter
    — <a href=\"https://twitter.com/ajose01\" rel=\"nofollow\">https://twitter.com/ajose01</a><br>\nCars.com
    — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nCars.com
    Careers — <a href=\"https://www.cars.com/careers/\" rel=\"nofollow\">https://www.cars.com/careers/</a><br>\nElixir
    Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nElixir
    Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nGeneral
    Assembly — <a href=\"https://generalassemb.ly/\" rel=\"nofollow\">https://generalassemb.ly/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Angel Jose.</p>\n      "
- title: The Impact of Elixir Launchisode
  slug: s7e1-launchisode
  link: https://smartlogic.io/podcast/elixir-wizards/s7e1-launchisode
  guid: 6610fc7c-e295-43f4-b542-40847c96f358
  pubDate: Thu, 04 Nov 2021 06:00:00 -0400
  pubDateFriendly: November  4, 2021
  description: "As we kick off our new, seventh season of the Elixir Wizards podcast,
    we wanted to introduce our theme of the impact of Elixir by having a simple chat
    between our panel and foregoing our usual guest format. As fans of podcasts ourselves,
    we always like to get to know some of the personalities behind the voices, so
    we decided to take this opportunity to do just that, with Alex, Sundi, and Eric!
    So to hear a little about what to expect in the coming weeks of the show, what
    the teams have been up to recently, both professionally and beyond, and to just
    enjoy a quick hangout with some friendly voices, make sure you tune into this
    launchisode!\nKey Points From This Episode:\nWhat our team has been up to recently:
    new projects, the apprentice program, and more. \nReflections on this iteration
    of the apprentice program and differences from 2018.  \nThe recent ElixirConf
    and how our panel was involved in the event.\nInside information that is shared
    at conferences and learning about the world!\nAvoiding the pressure to always
    do more while engaging in the community.\nNoting the impact that Elixir has had
    on each of us, and how we write code respectively. \nProactive learning and career
    growth; looking forward to the new season exploring these subjects! \nStaying
    focused on what's important, getting rest, and pursuing passions.\nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nAino — https://github.com/oestrich/aino\nAino
    Read Me — https://ainoweb.dev/readme.html\nKing Tooth — https://www.instagram.com/kingtoothpug/\nSmartLogic
    Apprenticeship Program — https://smartlogic.io/about/community/apprentice/\nSmartLogic
    Welcomes Two New Developer Apprentices to the Team! — https://smartlogic.io/blog/2021apprentices/\nElixir
    Conf — https://2021.elixirconf.com/\nCulttt — https://www.culttt.com/\nShrek —
    https://www.rottentomatoes.com/m/shrek\nKangaroo Jack — https://www.rottentomatoes.com/m/kangaroojack\nKorn
    — https://www.kornofficial.com/\nFlutter — https://flutter.dev/docs/resources/books\nLonestar
    Elixir — https://lonestarelixir.com/ \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9azQuBd5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6610fc7c-e295-43f4-b542-40847c96f358.mp3
    length: '56531123'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: As we kick off our new, seventh season of the Elixir Wizards podcast,
      we wanted to introduce our theme of the impact of Elixir by having a simple
      chat between our panel and foregoing our usual guest format.
    duration: '58:47'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6610fc7c-e295-43f4-b542-40847c96f358/cover.jpg?v=1
    summary: "\n        <p>As we kick off our new, seventh season of the Elixir Wizards
      podcast, we wanted to introduce our theme of the impact of Elixir by having
      a simple chat between our panel and foregoing our usual guest format. As fans
      of podcasts ourselves, we always like to get to know some of the personalities
      behind the voices, so we decided to take this opportunity to do just that, with
      Alex, Sundi, and Eric! So to hear a little about what to expect in the coming
      weeks of the show, what the teams have been up to recently, both professionally
      and beyond, and to just enjoy a quick hangout with some friendly voices, make
      sure you tune into this launchisode!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
      our team has been up to recently: new projects, the apprentice program, and
      more. </li>\n<li>Reflections on this iteration of the apprentice program and
      differences from 2018.<br></li>\n<li>The recent ElixirConf and how our panel
      was involved in the event.</li>\n<li>Inside information that is shared at conferences
      and learning about the world!</li>\n<li>Avoiding the pressure to always do more
      while engaging in the community.</li>\n<li>Noting the impact that Elixir has
      had on each of us, and how we write code respectively. </li>\n<li>Proactive
      learning and career growth; looking forward to the new season exploring these
      subjects! </li>\n<li>Staying focused on what&#39;s important, getting rest,
      and pursuing passions.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAino — <a href=\"https://github.com/oestrich/aino\" rel=\"nofollow\">https://github.com/oestrich/aino</a><br>\nAino
      Read Me — <a href=\"https://ainoweb.dev/readme.html\" rel=\"nofollow\">https://ainoweb.dev/readme.html</a><br>\nKing
      Tooth — <a href=\"https://www.instagram.com/kingtooth_pug/\" rel=\"nofollow\">https://www.instagram.com/kingtooth_pug/</a><br>\nSmartLogic
      Apprenticeship Program — <a href=\"https://smartlogic.io/about/community/apprentice/\"
      rel=\"nofollow\">https://smartlogic.io/about/community/apprentice/</a><br>\nSmartLogic
      Welcomes Two New Developer Apprentices to the Team! — <a href=\"https://smartlogic.io/blog/2021apprentices/\"
      rel=\"nofollow\">https://smartlogic.io/blog/2021apprentices/</a><br>\nElixir
      Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nCulttt
      — <a href=\"https://www.culttt.com/\" rel=\"nofollow\">https://www.culttt.com/</a><br>\nShrek
      — <a href=\"https://www.rottentomatoes.com/m/shrek\" rel=\"nofollow\">https://www.rottentomatoes.com/m/shrek</a><br>\nKangaroo
      Jack — <a href=\"https://www.rottentomatoes.com/m/kangaroo_jack\" rel=\"nofollow\">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>\nKorn
      — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nFlutter
      — <a href=\"https://flutter.dev/docs/resources/books\" rel=\"nofollow\">https://flutter.dev/docs/resources/books</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p>\n
      \     "
  contentEncoded: "\n        <p>As we kick off our new, seventh season of the Elixir
    Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having
    a simple chat between our panel and foregoing our usual guest format. As fans
    of podcasts ourselves, we always like to get to know some of the personalities
    behind the voices, so we decided to take this opportunity to do just that, with
    Alex, Sundi, and Eric! So to hear a little about what to expect in the coming
    weeks of the show, what the teams have been up to recently, both professionally
    and beyond, and to just enjoy a quick hangout with some friendly voices, make
    sure you tune into this launchisode!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
    our team has been up to recently: new projects, the apprentice program, and more.
    </li>\n<li>Reflections on this iteration of the apprentice program and differences
    from 2018.<br></li>\n<li>The recent ElixirConf and how our panel was involved
    in the event.</li>\n<li>Inside information that is shared at conferences and learning
    about the world!</li>\n<li>Avoiding the pressure to always do more while engaging
    in the community.</li>\n<li>Noting the impact that Elixir has had on each of us,
    and how we write code respectively. </li>\n<li>Proactive learning and career growth;
    looking forward to the new season exploring these subjects! </li>\n<li>Staying
    focused on what&#39;s important, getting rest, and pursuing passions.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAino — <a href=\"https://github.com/oestrich/aino\"
    rel=\"nofollow\">https://github.com/oestrich/aino</a><br>\nAino Read Me — <a href=\"https://ainoweb.dev/readme.html\"
    rel=\"nofollow\">https://ainoweb.dev/readme.html</a><br>\nKing Tooth — <a href=\"https://www.instagram.com/kingtooth_pug/\"
    rel=\"nofollow\">https://www.instagram.com/kingtooth_pug/</a><br>\nSmartLogic
    Apprenticeship Program — <a href=\"https://smartlogic.io/about/community/apprentice/\"
    rel=\"nofollow\">https://smartlogic.io/about/community/apprentice/</a><br>\nSmartLogic
    Welcomes Two New Developer Apprentices to the Team! — <a href=\"https://smartlogic.io/blog/2021apprentices/\"
    rel=\"nofollow\">https://smartlogic.io/blog/2021apprentices/</a><br>\nElixir Conf
    — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nCulttt
    — <a href=\"https://www.culttt.com/\" rel=\"nofollow\">https://www.culttt.com/</a><br>\nShrek
    — <a href=\"https://www.rottentomatoes.com/m/shrek\" rel=\"nofollow\">https://www.rottentomatoes.com/m/shrek</a><br>\nKangaroo
    Jack — <a href=\"https://www.rottentomatoes.com/m/kangaroo_jack\" rel=\"nofollow\">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>\nKorn
    — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nFlutter
    — <a href=\"https://flutter.dev/docs/resources/books\" rel=\"nofollow\">https://flutter.dev/docs/resources/books</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p>\n
    \     "
Season 6:
- title: Wrapping up BEAM Magic with Amos King
  slug: s6e12-king
  link: https://smartlogic.io/podcast/elixir-wizards/s6e12-king
  guid: 5bcca27a-dc98-4584-a152-84f4b04ee0d5
  pubDate: Thu, 26 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 26, 2021
  description: "We have reached the final episode of our season, and as we wrap up
    our exploration of BEAM magic, we are joined by Amos King, whose tweet was the
    inspiration behind this season's focus! We've had such a great time this season
    and hope that our listeners have enjoyed it as much as we have, and gained something
    in the process. Our conversation with Amos jumps around from exploring his experiences
    during the last year and a half, to the journey he has been on with his company,
    Binary Noggin, life as a CEO, and much more! We delve into some thoughts from
    our guest about the relationship between magic and understanding and also talk
    a little about this year's upcoming ElixirConf, where Amos will be speaking. Amos
    also shares how learning a new language can help the coding you do in languages
    you already know, and tells an interesting story about how he turned a long commute
    into a superpower! So stay tuned for Season 7, coming to you soon, and thank you
    for sticking with us this long!\nKey Points From This Episode:\nLooking forward
    to this year's ElixirConf and the hope that it will proceed.\nAmos' return to
    the office after three months of working from home.\nA little about Binary Noggin
    and the different size clients they work with. \nThe inspiration behind the company
    name and the transition from side work to a full-time gig. \nAmos' experiences
    as a CEO during the pandemic and the surprising growth at Binary Noggin.\nHow
    Amos inspired the BEAM Magic theme for this season and his thoughts on understanding.
    \nAmos' experiences of speaking at conferences and the possibility of presenting
    about magic.  \nSome details on Amos' talk this year at ElixirConf.\nHow Amos
    was introduced to Elixir through Erlang and the things that made him love it!
    \nThe impact that learning new languages can have on your work in general. \nHow
    an extremely long commute early in Amos' career served him in unexpected ways.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic Jobs — https://smartlogic.io/about/jobs
    \nAmos King on Twitter — https://twitter.com/adkron\nBinary Noggin — https://binarynoggin.com/\nBinary
    Noggin Careers — https://binarynoggin.com/about-us/#careers\nBinary Noggin Email
    — contact@binarynoggin.com\nDirtyInformation — http://dirtyinformation.com/\nElixir
    Outlaws — https://elixiroutlaws.com/\nWallaby — https://github.com/elixir-wallaby/wallaby\nTesting
    Elixir — https://www.goodreads.com/book/show/54156353-testing-elixir Special Guest:
    Amos King.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+3ljuFMiT
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5bcca27a-dc98-4584-a152-84f4b04ee0d5.mp3
    length: '55716250'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: We have reached the final episode of our season, and as we wrap up our
      exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration
      behind this season's focus!
    duration: '57:56'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5bcca27a-dc98-4584-a152-84f4b04ee0d5/cover.jpg?v=1
    summary: "\n        <p>We have reached the final episode of our season, and as
      we wrap up our exploration of BEAM magic, we are joined by Amos King, whose
      tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such
      a great time this season and hope that our listeners have enjoyed it as much
      as we have, and gained something in the process. Our conversation with Amos
      jumps around from exploring his experiences during the last year and a half,
      to the journey he has been on with his company, Binary Noggin, life as a CEO,
      and much more! We delve into some thoughts from our guest about the relationship
      between magic and understanding and also talk a little about this year&#39;s
      upcoming ElixirConf, where Amos will be speaking. Amos also shares how learning
      a new language can help the coding you do in languages you already know, and
      tells an interesting story about how he turned a long commute into a superpower!
      So stay tuned for Season 7, coming to you soon, and thank you for sticking with
      us this long!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Looking
      forward to this year&#39;s ElixirConf and the hope that it will proceed.</li>\n<li>Amos&#39;
      return to the office after three months of working from home.</li>\n<li>A little
      about Binary Noggin and the different size clients they work with. </li>\n<li>The
      inspiration behind the company name and the transition from side work to a full-time
      gig. </li>\n<li>Amos&#39; experiences as a CEO during the pandemic and the surprising
      growth at Binary Noggin.</li>\n<li>How Amos inspired the BEAM Magic theme for
      this season and his thoughts on understanding. </li>\n<li>Amos&#39; experiences
      of speaking at conferences and the possibility of presenting about magic.<br></li>\n<li>Some
      details on Amos&#39; talk this year at ElixirConf.</li>\n<li>How Amos was introduced
      to Elixir through Erlang and the things that made him love it! </li>\n<li>The
      impact that learning new languages can have on your work in general. </li>\n<li>How
      an extremely long commute early in Amos&#39; career served him in unexpected
      ways. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      Jobs — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a>
      <br>\nAmos King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
      Noggin Careers — <a href=\"https://binarynoggin.com/about-us/#careers\" rel=\"nofollow\">https://binarynoggin.com/about-us/#careers</a><br>\nBinary
      Noggin Email — <a href=\"mailto:contact@binarynoggin.com\" rel=\"nofollow\">contact@binarynoggin.com</a><br>\nDirtyInformation
      — <a href=\"http://dirtyinformation.com/\" rel=\"nofollow\">http://dirtyinformation.com/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWallaby
      — <a href=\"https://github.com/elixir-wallaby/wallaby\" rel=\"nofollow\">https://github.com/elixir-wallaby/wallaby</a><br>\nTesting
      Elixir — <a href=\"https://www.goodreads.com/book/show/54156353-testing-elixir\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special
      Guest: Amos King.</p>\n      "
  contentEncoded: "\n        <p>We have reached the final episode of our season, and
    as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose
    tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such a
    great time this season and hope that our listeners have enjoyed it as much as
    we have, and gained something in the process. Our conversation with Amos jumps
    around from exploring his experiences during the last year and a half, to the
    journey he has been on with his company, Binary Noggin, life as a CEO, and much
    more! We delve into some thoughts from our guest about the relationship between
    magic and understanding and also talk a little about this year&#39;s upcoming
    ElixirConf, where Amos will be speaking. Amos also shares how learning a new language
    can help the coding you do in languages you already know, and tells an interesting
    story about how he turned a long commute into a superpower! So stay tuned for
    Season 7, coming to you soon, and thank you for sticking with us this long!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Looking forward to this year&#39;s
    ElixirConf and the hope that it will proceed.</li>\n<li>Amos&#39; return to the
    office after three months of working from home.</li>\n<li>A little about Binary
    Noggin and the different size clients they work with. </li>\n<li>The inspiration
    behind the company name and the transition from side work to a full-time gig.
    </li>\n<li>Amos&#39; experiences as a CEO during the pandemic and the surprising
    growth at Binary Noggin.</li>\n<li>How Amos inspired the BEAM Magic theme for
    this season and his thoughts on understanding. </li>\n<li>Amos&#39; experiences
    of speaking at conferences and the possibility of presenting about magic.<br></li>\n<li>Some
    details on Amos&#39; talk this year at ElixirConf.</li>\n<li>How Amos was introduced
    to Elixir through Erlang and the things that made him love it! </li>\n<li>The
    impact that learning new languages can have on your work in general. </li>\n<li>How
    an extremely long commute early in Amos&#39; career served him in unexpected ways.
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic Jobs
    — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a>
    <br>\nAmos King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
    Noggin Careers — <a href=\"https://binarynoggin.com/about-us/#careers\" rel=\"nofollow\">https://binarynoggin.com/about-us/#careers</a><br>\nBinary
    Noggin Email — <a href=\"mailto:contact@binarynoggin.com\" rel=\"nofollow\">contact@binarynoggin.com</a><br>\nDirtyInformation
    — <a href=\"http://dirtyinformation.com/\" rel=\"nofollow\">http://dirtyinformation.com/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWallaby
    — <a href=\"https://github.com/elixir-wallaby/wallaby\" rel=\"nofollow\">https://github.com/elixir-wallaby/wallaby</a><br>\nTesting
    Elixir — <a href=\"https://www.goodreads.com/book/show/54156353-testing-elixir\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special
    Guest: Amos King.</p>\n      "
- title: Mini-Feature Extravaganza featuring Tyler Clemens, Elom Amouzou, Elise Navarro,
    and Jeremy Neal
  slug: s6e11-minifeatures
  link: https://smartlogic.io/podcast/elixir-wizards/s6e11-minifeatures
  guid: 332edbe7-b497-4b63-a474-8d468123d586
  pubDate: Thu, 19 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 19, 2021
  description: "This episode serves as a round-up of some of the special mini-features
    we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom
    Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with
    Elixir. Our first segment is with Tyler, who is a software developer at Jackpocket,
    where he explains what he is currently busy with and how the company is offering
    access to the lottery in more safe and convenient ways. We then move on to Elom,
    who talks about transitioning from a life in public education, and what prompted
    him to learn functional programming. Elise, who works at Zingeroo, takes us through
    her relatively new career, why she is so excited about Elixir, and the interesting
    work that is being done at her company to educate the public about the stock market.
    Lastly, Jeremy talks to us about the socially conscious agenda at Clover Food
    Lab, his personal interests in cooking and baking, and how he came to work with
    Elixir. All of our guests share helpful resources for learning, and reflections
    on their time working within Elixir -  make sure to join us to catch all this
    good stuff!\nKey Points From This Episode:\nTyler's path into software engineering
    and the first language he learned.\nWhat Jackpocket offers its customers and how
    Elixir is used within the company.\nTyler's thoughts on the perks and challenges
    associated with engineering with Elixir.  \nThe most helpful resources that Tyler
    uses when in need: Elixir Slack, books, and Elixir School!\nOnboarding and training
    in Elixir and the biggest challenges presented in this area. \nTyler's passion
    for photography and imagining an alternative career path in this direction.\nElom's
    first programming language and the subsequent transition into Elixir. \nHow Elom
    moved into working in programming from his roots in education.\nElom's perspective
    on the positives associated with adopting Elixir early on. \nResource recommendations
    from Elom for early-stage developers. \nConsidering the pros and cons of the small
    intimate Elixir community and its future.\nElom's ideal alternative career path
    and favorite book!\nElise's beginnings in programming and her move from a career
    in digital media. \nComparing Elixir with other languages; Elise weighs in with
    her experiences. \nWhat Zingeroo does and how they use Elixir to make the stock
    market more accessible through the app. \nThe benefits of using Elixir for a real-time
    app like Zingeroo. \nThe resources that have been most valuable to Elise since
    joining the community. \nElise's alternative career path, and her passion for
    teaching Pilates.  \nJeremy's educational and professional path into software
    engineering and working with Elixir.\nHow Jeremy has been using LiveView in his
    work to get a functional UI up and running. \nWhat Clover Food Lab does and how
    Elixir is used at the company and online store. \nJeremy's thoughts on a different
    career and why he would love to be a baker! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nTyler Clemens — https://www.linkedin.com/in/tylerclemens\nJackpocket
    — https://jackpocket.com/\nElixir in Action — https://www.goodreads.com/book/show/38732242-elixir-in-action\nElixir
    School — https://elixirschool.com/\nTuring School — https://turing.edu/\nPragmatic
    Bookshelf — https://pragprog.com/\nCode Flow Thinking Elixir — https://thinkingelixir.com/available-courses/code-flow/\nFrantz
    Fanon — https://www.britannica.com/biography/Frantz-Fanon\nPeau Noire, Masques
    Blancs — https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\nElise
    Navarro — https://www.linkedin.com/in/elise-navarro\nZingeroo — https://zingeroo.com/\nJeremy
    Neal — https://www.linkedin.com/in/jeremy-neal-59ba8b82\nClover Food Lab — https://www.cloverfoodlab.com/
    Special Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6D9agJe5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/332edbe7-b497-4b63-a474-8d468123d586.mp3
    length: '37052095'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: This episode serves as a round-up of some of the special mini-features
      we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom
      Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with
      Elixir.
    duration: '38:30'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/332edbe7-b497-4b63-a474-8d468123d586/cover.jpg?v=1
    summary: "\n        <p>This episode serves as a round-up of some of the special
      mini-features we have recorded throughout Season 6, where we&#39;ll hear from
      Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work
      and experiences with Elixir. Our first segment is with Tyler, who is a software
      developer at Jackpocket, where he explains what he is currently busy with and
      how the company is offering access to the lottery in more safe and convenient
      ways. We then move on to Elom, who talks about transitioning from a life in
      public education, and what prompted him to learn functional programming. Elise,
      who works at Zingeroo, takes us through her relatively new career, why she is
      so excited about Elixir, and the interesting work that is being done at her
      company to educate the public about the stock market. Lastly, Jeremy talks to
      us about the socially conscious agenda at Clover Food Lab, his personal interests
      in cooking and baking, and how he came to work with Elixir. All of our guests
      share helpful resources for learning, and reflections on their time working
      within Elixir -  make sure to join us to catch all this good stuff!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Tyler&#39;s path into software engineering
      and the first language he learned.</li>\n<li>What Jackpocket offers its customers
      and how Elixir is used within the company.</li>\n<li>Tyler&#39;s thoughts on
      the perks and challenges associated with engineering with Elixir.<br></li>\n<li>The
      most helpful resources that Tyler uses when in need: Elixir Slack, books, and
      Elixir School!</li>\n<li>Onboarding and training in Elixir and the biggest challenges
      presented in this area. </li>\n<li>Tyler&#39;s passion for photography and imagining
      an alternative career path in this direction.</li>\n<li>Elom&#39;s first programming
      language and the subsequent transition into Elixir. </li>\n<li>How Elom moved
      into working in programming from his roots in education.</li>\n<li>Elom&#39;s
      perspective on the positives associated with adopting Elixir early on. </li>\n<li>Resource
      recommendations from Elom for early-stage developers. </li>\n<li>Considering
      the pros and cons of the small intimate Elixir community and its future.</li>\n<li>Elom&#39;s
      ideal alternative career path and favorite book!</li>\n<li>Elise&#39;s beginnings
      in programming and her move from a career in digital media. </li>\n<li>Comparing
      Elixir with other languages; Elise weighs in with her experiences. </li>\n<li>What
      Zingeroo does and how they use Elixir to make the stock market more accessible
      through the app. </li>\n<li>The benefits of using Elixir for a real-time app
      like Zingeroo. </li>\n<li>The resources that have been most valuable to Elise
      since joining the community. </li>\n<li>Elise&#39;s alternative career path,
      and her passion for teaching Pilates.<br></li>\n<li>Jeremy&#39;s educational
      and professional path into software engineering and working with Elixir.</li>\n<li>How
      Jeremy has been using LiveView in his work to get a functional UI up and running.
      </li>\n<li>What Clover Food Lab does and how Elixir is used at the company and
      online store. </li>\n<li>Jeremy&#39;s thoughts on a different career and why
      he would love to be a baker! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nTyler Clemens — <a href=\"https://www.linkedin.com/in/tylerclemens\" rel=\"nofollow\">https://www.linkedin.com/in/tylerclemens</a><br>\nJackpocket
      — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nElixir
      in Action — <a href=\"https://www.goodreads.com/book/show/38732242-elixir-in-action\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/\" rel=\"nofollow\">https://elixirschool.com/</a><br>\nTuring
      School — <a href=\"https://turing.edu/\" rel=\"nofollow\">https://turing.edu/</a><br>\nPragmatic
      Bookshelf — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nCode
      Flow Thinking Elixir — <a href=\"https://thinkingelixir.com/available-courses/code-flow/\"
      rel=\"nofollow\">https://thinkingelixir.com/available-courses/code-flow/</a><br>\nFrantz
      Fanon — <a href=\"https://www.britannica.com/biography/Frantz-Fanon\" rel=\"nofollow\">https://www.britannica.com/biography/Frantz-Fanon</a><br>\nPeau
      Noire, Masques Blancs — <a href=\"https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\"
      rel=\"nofollow\">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>\nElise
      Navarro — <a href=\"https://www.linkedin.com/in/elise-navarro\" rel=\"nofollow\">https://www.linkedin.com/in/elise-navarro</a><br>\nZingeroo
      — <a href=\"https://zingeroo.com/\" rel=\"nofollow\">https://zingeroo.com/</a><br>\nJeremy
      Neal — <a href=\"https://www.linkedin.com/in/jeremy-neal-59ba8b82\" rel=\"nofollow\">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>\nClover
      Food Lab — <a href=\"https://www.cloverfoodlab.com/\" rel=\"nofollow\">https://www.cloverfoodlab.com/</a></p><p>Special
      Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>\n      "
  contentEncoded: "\n        <p>This episode serves as a round-up of some of the special
    mini-features we have recorded throughout Season 6, where we&#39;ll hear from
    Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and
    experiences with Elixir. Our first segment is with Tyler, who is a software developer
    at Jackpocket, where he explains what he is currently busy with and how the company
    is offering access to the lottery in more safe and convenient ways. We then move
    on to Elom, who talks about transitioning from a life in public education, and
    what prompted him to learn functional programming. Elise, who works at Zingeroo,
    takes us through her relatively new career, why she is so excited about Elixir,
    and the interesting work that is being done at her company to educate the public
    about the stock market. Lastly, Jeremy talks to us about the socially conscious
    agenda at Clover Food Lab, his personal interests in cooking and baking, and how
    he came to work with Elixir. All of our guests share helpful resources for learning,
    and reflections on their time working within Elixir -  make sure to join us to
    catch all this good stuff!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Tyler&#39;s
    path into software engineering and the first language he learned.</li>\n<li>What
    Jackpocket offers its customers and how Elixir is used within the company.</li>\n<li>Tyler&#39;s
    thoughts on the perks and challenges associated with engineering with Elixir.<br></li>\n<li>The
    most helpful resources that Tyler uses when in need: Elixir Slack, books, and
    Elixir School!</li>\n<li>Onboarding and training in Elixir and the biggest challenges
    presented in this area. </li>\n<li>Tyler&#39;s passion for photography and imagining
    an alternative career path in this direction.</li>\n<li>Elom&#39;s first programming
    language and the subsequent transition into Elixir. </li>\n<li>How Elom moved
    into working in programming from his roots in education.</li>\n<li>Elom&#39;s
    perspective on the positives associated with adopting Elixir early on. </li>\n<li>Resource
    recommendations from Elom for early-stage developers. </li>\n<li>Considering the
    pros and cons of the small intimate Elixir community and its future.</li>\n<li>Elom&#39;s
    ideal alternative career path and favorite book!</li>\n<li>Elise&#39;s beginnings
    in programming and her move from a career in digital media. </li>\n<li>Comparing
    Elixir with other languages; Elise weighs in with her experiences. </li>\n<li>What
    Zingeroo does and how they use Elixir to make the stock market more accessible
    through the app. </li>\n<li>The benefits of using Elixir for a real-time app like
    Zingeroo. </li>\n<li>The resources that have been most valuable to Elise since
    joining the community. </li>\n<li>Elise&#39;s alternative career path, and her
    passion for teaching Pilates.<br></li>\n<li>Jeremy&#39;s educational and professional
    path into software engineering and working with Elixir.</li>\n<li>How Jeremy has
    been using LiveView in his work to get a functional UI up and running. </li>\n<li>What
    Clover Food Lab does and how Elixir is used at the company and online store. </li>\n<li>Jeremy&#39;s
    thoughts on a different career and why he would love to be a baker! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nTyler Clemens — <a href=\"https://www.linkedin.com/in/tylerclemens\"
    rel=\"nofollow\">https://www.linkedin.com/in/tylerclemens</a><br>\nJackpocket
    — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nElixir
    in Action — <a href=\"https://www.goodreads.com/book/show/38732242-elixir-in-action\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/\" rel=\"nofollow\">https://elixirschool.com/</a><br>\nTuring
    School — <a href=\"https://turing.edu/\" rel=\"nofollow\">https://turing.edu/</a><br>\nPragmatic
    Bookshelf — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nCode
    Flow Thinking Elixir — <a href=\"https://thinkingelixir.com/available-courses/code-flow/\"
    rel=\"nofollow\">https://thinkingelixir.com/available-courses/code-flow/</a><br>\nFrantz
    Fanon — <a href=\"https://www.britannica.com/biography/Frantz-Fanon\" rel=\"nofollow\">https://www.britannica.com/biography/Frantz-Fanon</a><br>\nPeau
    Noire, Masques Blancs — <a href=\"https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\"
    rel=\"nofollow\">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>\nElise
    Navarro — <a href=\"https://www.linkedin.com/in/elise-navarro\" rel=\"nofollow\">https://www.linkedin.com/in/elise-navarro</a><br>\nZingeroo
    — <a href=\"https://zingeroo.com/\" rel=\"nofollow\">https://zingeroo.com/</a><br>\nJeremy
    Neal — <a href=\"https://www.linkedin.com/in/jeremy-neal-59ba8b82\" rel=\"nofollow\">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>\nClover
    Food Lab — <a href=\"https://www.cloverfoodlab.com/\" rel=\"nofollow\">https://www.cloverfoodlab.com/</a></p><p>Special
    Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>\n      "
- title: Delving Deeper into Magic with Quinn Wilton
  slug: s6e10-wilton
  link: https://smartlogic.io/podcast/elixir-wizards/s6e10-wilton
  guid: 1487b980-5611-4fbc-9c58-7b4508ebefa9
  pubDate: Thu, 12 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 12, 2021
  description: "Joining us on the show today is Quinn Wilton, and we have a wonderful
    conversation with our guest about her journey with Elixir, unusual path into programming,
    and her wide appreciation for different languages! We start off looking at the
    time Quinn spent at Waterloo University and what separates the Canadian ethos
    around computer science. From there, we turn to Quinn's early work in programming,
    the first proper job that she stepped into, and the immediate affinity she felt
    for working in Elixir. We also talk a bit about the interesting research that
    Quinn has been conducting privately, tracking and plotting the path of Erlang
    over the decades, while also reflecting on the skill of academic reading. We spend
    some necessary time hearing from Quinn about the BEAM and what BEAM magic means
    to her, before hearing about her website, love of Twitter,  other languages that
    currently have her excited, and the avenues she is most lit up about exploring
    in the future! Listen in to hear it all, as we continue this journey! \nKey Points
    From This Episode:\nQuinn's reflections on her education in Canada, and differences
    to the American approach to computer science. \nReasons that Quinn wanted to pursue
    a career in programming  \nThe first jobs that Quinn landed as a programmer; creating
    a Roblox game and tracking malware.\nHow Quinn was introduced to Elixir and the
    immediate love she felt for the language. \nThe recent work that Quinn has been
    busy with researching and tracing the history of Erlang.\nExperiences of reading
    academic papers and what sets it apart from other formats.\nThe inspiration behind
    Quinn's website and her affinity for Twitter's format. \nQuinn's favorite characteristics
    of the BEAM: the debugging possibilities. \nThe project that Quinn worked on using
    Gleam on the BEAM and her enjoyment of its simplicity. \nSome possible areas,
    outlined by Joe Armstrong, that Quinn is excited to explore in the near future.\nQuinn's
    huge appreciation for different programming languages and her fascination with
    Strand.\nEncouragement from Quinn to dive into reading intimidating research papers.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/jobs
    \nQuinn Wilton — https://quinnwilton.com/\nQuinn Wilton on Twitter — https://twitter.com/wiltonquinn\nQuinn
    Wilton on GitHub — https://github.com/QuinnWilton\nUniversity of Waterloo — https://uwaterloo.ca/\nRoblox
    — https://www.roblox.com/\nLookout — https://www.lookout.com/\nClint Gibler —
    https://clintgibler.com/\nGleam — https://gleam.run/\nJoe Armstrong — https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\n'Getting
    Erlang to talk to the outside world' — https://www.researchgate.net/publication/2549678GettingErlangtotalktotheoutsideworld\nUniversal
    Binary Format — https://github.com/ubf/ubf\nCLU — https://en.wikipedia.org/wiki/CLU(programminglanguage)\nStrand
    — https://en.wikipedia.org/wiki/Strand(programming_language) Special Guest: Quinn
    Wilton.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+aOpj3AP9
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1487b980-5611-4fbc-9c58-7b4508ebefa9.mp3
    length: '43192367'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: 'Today we have a wonderful conversation with Quinn Wilton about her
      journey with Elixir, unusual path into programming, and her wide appreciation
      for different languages! '
    duration: '44:54'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1487b980-5611-4fbc-9c58-7b4508ebefa9/cover.jpg?v=1
    summary: "\n        <p>Joining us on the show today is Quinn Wilton, and we have
      a wonderful conversation with our guest about her journey with Elixir, unusual
      path into programming, and her wide appreciation for different languages! We
      start off looking at the time Quinn spent at Waterloo University and what separates
      the Canadian ethos around computer science. From there, we turn to Quinn&#39;s
      early work in programming, the first proper job that she stepped into, and the
      immediate affinity she felt for working in Elixir. We also talk a bit about
      the interesting research that Quinn has been conducting privately, tracking
      and plotting the path of Erlang over the decades, while also reflecting on the
      skill of academic reading. We spend some necessary time hearing from Quinn about
      the BEAM and what BEAM magic means to her, before hearing about her website,
      love of Twitter,  other languages that currently have her excited, and the avenues
      she is most lit up about exploring in the future! Listen in to hear it all,
      as we continue this journey! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Quinn&#39;s
      reflections on her education in Canada, and differences to the American approach
      to computer science. </li>\n<li>Reasons that Quinn wanted to pursue a career
      in programming<br></li>\n<li>The first jobs that Quinn landed as a programmer;
      creating a Roblox game and tracking malware.</li>\n<li>How Quinn was introduced
      to Elixir and the immediate love she felt for the language. </li>\n<li>The recent
      work that Quinn has been busy with researching and tracing the history of Erlang.</li>\n<li>Experiences
      of reading academic papers and what sets it apart from other formats.</li>\n<li>The
      inspiration behind Quinn&#39;s website and her affinity for Twitter&#39;s format.
      </li>\n<li>Quinn&#39;s favorite characteristics of the BEAM: the debugging possibilities.
      </li>\n<li>The project that Quinn worked on using Gleam on the BEAM and her
      enjoyment of its simplicity. </li>\n<li>Some possible areas, outlined by Joe
      Armstrong, that Quinn is excited to explore in the near future.</li>\n<li>Quinn&#39;s
      huge appreciation for different programming languages and her fascination with
      Strand.</li>\n<li>Encouragement from Quinn to dive into reading intimidating
      research papers. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a>
      <br>\nQuinn Wilton — <a href=\"https://quinnwilton.com/\" rel=\"nofollow\">https://quinnwilton.com/</a><br>\nQuinn
      Wilton on Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nQuinn
      Wilton on GitHub — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nUniversity
      of Waterloo — <a href=\"https://uwaterloo.ca/\" rel=\"nofollow\">https://uwaterloo.ca/</a><br>\nRoblox
      — <a href=\"https://www.roblox.com/\" rel=\"nofollow\">https://www.roblox.com/</a><br>\nLookout
      — <a href=\"https://www.lookout.com/\" rel=\"nofollow\">https://www.lookout.com/</a><br>\nClint
      Gibler — <a href=\"https://clintgibler.com/\" rel=\"nofollow\">https://clintgibler.com/</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nJoe
      Armstrong — <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
      rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\n&#39;Getting
      Erlang to talk to the outside world&#39; — <a href=\"https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world\"
      rel=\"nofollow\">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>\nUniversal
      Binary Format — <a href=\"https://github.com/ubf/ubf\" rel=\"nofollow\">https://github.com/ubf/ubf</a><br>\nCLU
      — <a href=\"https://en.wikipedia.org/wiki/CLU_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>\nStrand
      — <a href=\"https://en.wikipedia.org/wiki/Strand_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special
      Guest: Quinn Wilton.</p>\n      "
  contentEncoded: "\n        <p>Joining us on the show today is Quinn Wilton, and
    we have a wonderful conversation with our guest about her journey with Elixir,
    unusual path into programming, and her wide appreciation for different languages!
    We start off looking at the time Quinn spent at Waterloo University and what separates
    the Canadian ethos around computer science. From there, we turn to Quinn&#39;s
    early work in programming, the first proper job that she stepped into, and the
    immediate affinity she felt for working in Elixir. We also talk a bit about the
    interesting research that Quinn has been conducting privately, tracking and plotting
    the path of Erlang over the decades, while also reflecting on the skill of academic
    reading. We spend some necessary time hearing from Quinn about the BEAM and what
    BEAM magic means to her, before hearing about her website, love of Twitter,  other
    languages that currently have her excited, and the avenues she is most lit up
    about exploring in the future! Listen in to hear it all, as we continue this journey!
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Quinn&#39;s reflections
    on her education in Canada, and differences to the American approach to computer
    science. </li>\n<li>Reasons that Quinn wanted to pursue a career in programming<br></li>\n<li>The
    first jobs that Quinn landed as a programmer; creating a Roblox game and tracking
    malware.</li>\n<li>How Quinn was introduced to Elixir and the immediate love she
    felt for the language. </li>\n<li>The recent work that Quinn has been busy with
    researching and tracing the history of Erlang.</li>\n<li>Experiences of reading
    academic papers and what sets it apart from other formats.</li>\n<li>The inspiration
    behind Quinn&#39;s website and her affinity for Twitter&#39;s format. </li>\n<li>Quinn&#39;s
    favorite characteristics of the BEAM: the debugging possibilities. </li>\n<li>The
    project that Quinn worked on using Gleam on the BEAM and her enjoyment of its
    simplicity. </li>\n<li>Some possible areas, outlined by Joe Armstrong, that Quinn
    is excited to explore in the near future.</li>\n<li>Quinn&#39;s huge appreciation
    for different programming languages and her fascination with Strand.</li>\n<li>Encouragement
    from Quinn to dive into reading intimidating research papers. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/jobs\"
    rel=\"nofollow\">https://smartlogic.io/jobs</a> <br>\nQuinn Wilton — <a href=\"https://quinnwilton.com/\"
    rel=\"nofollow\">https://quinnwilton.com/</a><br>\nQuinn Wilton on Twitter — <a
    href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nQuinn
    Wilton on GitHub — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nUniversity
    of Waterloo — <a href=\"https://uwaterloo.ca/\" rel=\"nofollow\">https://uwaterloo.ca/</a><br>\nRoblox
    — <a href=\"https://www.roblox.com/\" rel=\"nofollow\">https://www.roblox.com/</a><br>\nLookout
    — <a href=\"https://www.lookout.com/\" rel=\"nofollow\">https://www.lookout.com/</a><br>\nClint
    Gibler — <a href=\"https://clintgibler.com/\" rel=\"nofollow\">https://clintgibler.com/</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nJoe
    Armstrong — <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
    rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\n&#39;Getting
    Erlang to talk to the outside world&#39; — <a href=\"https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world\"
    rel=\"nofollow\">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>\nUniversal
    Binary Format — <a href=\"https://github.com/ubf/ubf\" rel=\"nofollow\">https://github.com/ubf/ubf</a><br>\nCLU
    — <a href=\"https://en.wikipedia.org/wiki/CLU_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>\nStrand
    — <a href=\"https://en.wikipedia.org/wiki/Strand_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special
    Guest: Quinn Wilton.</p>\n      "
- title: The Bridge Between Elixir and Zig with Isaac Yonemoto
  slug: s6e9-yonemoto
  link: https://smartlogic.io/podcast/elixir-wizards/s6e9-yonemoto
  guid: 5e1ccc21-8727-4ae4-8921-ae296f46cff7
  pubDate: Thu, 05 Aug 2021 06:00:00 -0400
  pubDateFriendly: August  5, 2021
  description: "While NIFs provide a great way to interface with native code in the
    BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac
    Yonemoto built Zigler, things have become a lot simpler, and he joins us today
    to talk about how. Isaac is an Elixir developer with a background in biotech and
    we kick off the discussion by hearing about his journey into programming and some
    of the ways that he has combined it with science. From there we hear more about
    the different languages Isaac has worked in and why he fell in love with Elixir,
    where he talks about its encouragement of test-driven development and how this
    has made him a better programmer. We dive right into the contributions Isaac is
    making to the Elixir community next, and he starts off by talking about Zigler.
    He explains how Zigler provides a bridge between Zig and Elixir that makes it
    far easier to build NIFs. We hear a bunch of the other cool possibilities that
    Zigler offers to Elixir as well, including its ability to make debugging easier
    by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion
    of magic in Elixir, we close today's show off with a few of the other projects
    he is working on, contributions that are bound to make the world of Elixir even
    more exciting!\nKey Points From This Episode:\nIsaac’s early exposure to programming
    and how he got started in tech.\nThe education Isaac had in the sciences and his
    experience in the biotech sphere.\nDifficulties with installing Ruby and how this
    led to Isaac learning Elixir.\nSupport for asynchronous testing and the reasons
    why Isaac finds joy in Elixir.\nThe emphasis on test-driven development in Elixir
    and how this has made Isaac a better programmer.\nIsaac’s experiences with Zig
    and the similarities between it and Elixir.\nHow NIFs allow C code in Elixir and
    what it is like debugging them.\nIsaac’s Zigler project and how it provides integration
    between Elixir and Zig making it easy to build NIFs.\nCross-compiling C using
    Zig and why Isaac built a disassembler.\nAspects of the BEAM that make it harder
    to write NIFs in Elixir than in Julia.\nIsaac’s opinion of magic in programming
    and how it should always be comprehensible.\nFinal plugs from Isaac: where to
    find Zigler, and some upcoming projects.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nIsaac Yonemoto on Twitter — https://twitter.com/DNAutics\nIsaac
    Yonemoto on GitHub — https://github.com/ityonemo\nIsaac Yonemoto on YouTube —
    https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\nSelectrix — https://github.com/ityonemo/selectrix\nMavis
    — https://github.com/ityonemo/mavis\nChiaroscuro - https://github.com/ityonemo/chiaroscuro\nZigler
    - https://hexdocs.pm/zigler/Zig.html\nZigler on GitHub — https://github.com/ityonemo/zigler\nJulia
    — https://julialang.org/\nTesting Elixir with Jeffrey Matthias and Andrea Leopardi
    — https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/ Special
    Guest: Isaac Yonemoto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Gy2RRGyd
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5e1ccc21-8727-4ae4-8921-ae296f46cff7.mp3
    length: '67142697'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While NIFs provide a great way to interface with native code in the
      BEAM machine, the process can also be rather error-prone. Thankfully, since
      Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins
      us today to talk about how.
    duration: '46:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5e1ccc21-8727-4ae4-8921-ae296f46cff7/cover.jpg?v=1
    summary: "\n        <p>While NIFs provide a great way to interface with native
      code in the BEAM machine, the process can also be rather error-prone. Thankfully,
      since Isaac Yonemoto built Zigler, things have become a lot simpler, and he
      joins us today to talk about how. Isaac is an Elixir developer with a background
      in biotech and we kick off the discussion by hearing about his journey into
      programming and some of the ways that he has combined it with science. From
      there we hear more about the different languages Isaac has worked in and why
      he fell in love with Elixir, where he talks about its encouragement of test-driven
      development and how this has made him a better programmer. We dive right into
      the contributions Isaac is making to the Elixir community next, and he starts
      off by talking about Zigler. He explains how Zigler provides a bridge between
      Zig and Elixir that makes it far easier to build NIFs. We hear a bunch of the
      other cool possibilities that Zigler offers to Elixir as well, including its
      ability to make debugging easier by appending the Zig stack trace to the Elixir
      one. After hearing Isaac’s opinion of magic in Elixir, we close today&#39;s
      show off with a few of the other projects he is working on, contributions that
      are bound to make the world of Elixir even more exciting!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Isaac’s early exposure to programming and
      how he got started in tech.</li>\n<li>The education Isaac had in the sciences
      and his experience in the biotech sphere.</li>\n<li>Difficulties with installing
      Ruby and how this led to Isaac learning Elixir.</li>\n<li>Support for asynchronous
      testing and the reasons why Isaac finds joy in Elixir.</li>\n<li>The emphasis
      on test-driven development in Elixir and how this has made Isaac a better programmer.</li>\n<li>Isaac’s
      experiences with Zig and the similarities between it and Elixir.</li>\n<li>How
      NIFs allow C code in Elixir and what it is like debugging them.</li>\n<li>Isaac’s
      Zigler project and how it provides integration between Elixir and Zig making
      it easy to build NIFs.</li>\n<li>Cross-compiling C using Zig and why Isaac built
      a disassembler.</li>\n<li>Aspects of the BEAM that make it harder to write NIFs
      in Elixir than in Julia.</li>\n<li>Isaac’s opinion of magic in programming and
      how it should always be comprehensible.</li>\n<li>Final plugs from Isaac: where
      to find Zigler, and some upcoming projects.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nIsaac Yonemoto on Twitter
      — <a href=\"https://twitter.com/DNAutics\" rel=\"nofollow\">https://twitter.com/DNAutics</a><br>\nIsaac
      Yonemoto on GitHub — <a href=\"https://github.com/ityonemo\" rel=\"nofollow\">https://github.com/ityonemo</a><br>\nIsaac
      Yonemoto on YouTube — <a href=\"https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>\nSelectrix
      — <a href=\"https://github.com/ityonemo/selectrix\" rel=\"nofollow\">https://github.com/ityonemo/selectrix</a><br>\nMavis
      — <a href=\"https://github.com/ityonemo/mavis\" rel=\"nofollow\">https://github.com/ityonemo/mavis</a><br>\nChiaroscuro
      - <a href=\"https://github.com/ityonemo/chiaroscuro\" rel=\"nofollow\">https://github.com/ityonemo/chiaroscuro</a><br>\nZigler
      - <a href=\"https://hexdocs.pm/zigler/Zig.html\" rel=\"nofollow\">https://hexdocs.pm/zigler/Zig.html</a><br>\nZigler
      on GitHub — <a href=\"https://github.com/ityonemo/zigler\" rel=\"nofollow\">https://github.com/ityonemo/zigler</a><br>\nJulia
      — <a href=\"https://julialang.org/\" rel=\"nofollow\">https://julialang.org/</a><br>\nTesting
      Elixir with Jeffrey Matthias and Andrea Leopardi — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special
      Guest: Isaac Yonemoto.</p>\n      "
  contentEncoded: "\n        <p>While NIFs provide a great way to interface with native
    code in the BEAM machine, the process can also be rather error-prone. Thankfully,
    since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins
    us today to talk about how. Isaac is an Elixir developer with a background in
    biotech and we kick off the discussion by hearing about his journey into programming
    and some of the ways that he has combined it with science. From there we hear
    more about the different languages Isaac has worked in and why he fell in love
    with Elixir, where he talks about its encouragement of test-driven development
    and how this has made him a better programmer. We dive right into the contributions
    Isaac is making to the Elixir community next, and he starts off by talking about
    Zigler. He explains how Zigler provides a bridge between Zig and Elixir that makes
    it far easier to build NIFs. We hear a bunch of the other cool possibilities that
    Zigler offers to Elixir as well, including its ability to make debugging easier
    by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion
    of magic in Elixir, we close today&#39;s show off with a few of the other projects
    he is working on, contributions that are bound to make the world of Elixir even
    more exciting!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Isaac’s
    early exposure to programming and how he got started in tech.</li>\n<li>The education
    Isaac had in the sciences and his experience in the biotech sphere.</li>\n<li>Difficulties
    with installing Ruby and how this led to Isaac learning Elixir.</li>\n<li>Support
    for asynchronous testing and the reasons why Isaac finds joy in Elixir.</li>\n<li>The
    emphasis on test-driven development in Elixir and how this has made Isaac a better
    programmer.</li>\n<li>Isaac’s experiences with Zig and the similarities between
    it and Elixir.</li>\n<li>How NIFs allow C code in Elixir and what it is like debugging
    them.</li>\n<li>Isaac’s Zigler project and how it provides integration between
    Elixir and Zig making it easy to build NIFs.</li>\n<li>Cross-compiling C using
    Zig and why Isaac built a disassembler.</li>\n<li>Aspects of the BEAM that make
    it harder to write NIFs in Elixir than in Julia.</li>\n<li>Isaac’s opinion of
    magic in programming and how it should always be comprehensible.</li>\n<li>Final
    plugs from Isaac: where to find Zigler, and some upcoming projects.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nIsaac Yonemoto on Twitter —
    <a href=\"https://twitter.com/DNAutics\" rel=\"nofollow\">https://twitter.com/DNAutics</a><br>\nIsaac
    Yonemoto on GitHub — <a href=\"https://github.com/ityonemo\" rel=\"nofollow\">https://github.com/ityonemo</a><br>\nIsaac
    Yonemoto on YouTube — <a href=\"https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\"
    rel=\"nofollow\">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>\nSelectrix
    — <a href=\"https://github.com/ityonemo/selectrix\" rel=\"nofollow\">https://github.com/ityonemo/selectrix</a><br>\nMavis
    — <a href=\"https://github.com/ityonemo/mavis\" rel=\"nofollow\">https://github.com/ityonemo/mavis</a><br>\nChiaroscuro
    - <a href=\"https://github.com/ityonemo/chiaroscuro\" rel=\"nofollow\">https://github.com/ityonemo/chiaroscuro</a><br>\nZigler
    - <a href=\"https://hexdocs.pm/zigler/Zig.html\" rel=\"nofollow\">https://hexdocs.pm/zigler/Zig.html</a><br>\nZigler
    on GitHub — <a href=\"https://github.com/ityonemo/zigler\" rel=\"nofollow\">https://github.com/ityonemo/zigler</a><br>\nJulia
    — <a href=\"https://julialang.org/\" rel=\"nofollow\">https://julialang.org/</a><br>\nTesting
    Elixir with Jeffrey Matthias and Andrea Leopardi — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special
    Guest: Isaac Yonemoto.</p>\n      "
- title: Maxim Fedorov on Building and Scaling WhatsApp with Erlang
  slug: s6e8-fedorov
  link: https://smartlogic.io/podcast/elixir-wizards/s6e8-fedorov
  guid: ff944923-7612-4245-b9b0-d9217e878b0b
  pubDate: Thu, 29 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 29, 2021
  description: "Today we are so excited to share a conversation with Maxim Fedorov,
    who is the Core Infrastructure Lead at communications giant, WhatsApp! In our
    chat, Maxim offers such interesting insight and wisdom from a long career in the
    space, focusing on Erlang and why he views it as such a powerful language for
    the work at WhatsApp. We also get some backstory from Maxim, looking at his first
    experiences with computers, his educational background, and some of the work he
    did leading up to his current position. Our guest does a great job of sharing
    his thoughts on what he sees as a lack of magic within the Erlang language, why
    he prefers this, and how the company has managed to scale in such a major way
    over the past years. We also deal with some more general questions, weighing functional
    languages against object-oriented ones, useful resource recommendations, and a
    whole lot more! We finish off this episode with a mini-interview with David Hardwick,
    who is the current Vice President of Engineering at STORD, so make sure to stay
    tuned until the end for that! \nKey Points From This Episode:\nThe beginnings
    of Maxim's interest in computer science and software development. \nHow Maxim
    transitioned into the network security field. \nMaxim's experience with timezones
    and how this is approached for an app like WhatsApp.\nThoughts on why WhatsApp
    is so popular outside of the United States. \nHow Erlang is used at WhatsApp to
    power messaging. \nProbable reasons that Erlang was selected as the language for
    WhatsApp.\nOutages and downtime; what constitutes a serious issue for WhatsApp
    user experience. \nThe massive growth that WhatsApp has seen and how their approach
    to scaling has evolved.\nCharacteristics of Erlang that make it so well suited
    to WhatsApp's needs; simplicity and reliability. \nMaxim's perspective on the
    issues around programmer education and their results.  \nFunctional languages
    versus object-oriented programming; Maxim's thoughts on strengths and weaknesses.\nWhy
    Maxim views Erlang as not containing or performing anything magical. \nMaxim's
    recommendations for resources when getting started in Erlang!\nLooking back at
    Maxim's experiences of tertiary education and the thesis he produced. \nThe scaling
    of the WhatsApp server; the project that Maxim is most proud of!\nMaxim's love
    for motorcycles and bicycles and how these grew out of initial conveniences.  \nToday's
    mini-feature interview with David Hardwick, VP of Engineering at STORD.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nMaxim Fedorov:
    https://au.linkedin.com/in/maxim-fedorov-14a570b\nElectronika MK-61 — https://en.wikipedia.org/wiki/ElektronikaMK-52\nBrian
    Acton — https://www.forbes.com/profile/brian-acton/\nLearn You Some Erlang — https://learnyousomeerlang.com/\nAdopting
    Erlang — https://github.com/adoptingerlang\nJoe Armstrong Thesis — https://erlang.org/download/armstrongthesis2003.pdf\nThe
    BEAM Book— https://github.com/happi/theBeamBook\nejabberd — https://www.ejabberd.im/\nWill
    Cathcart Tweet — https://twitter.com/wcathcart/status/1385253969522413568\nClarke's
    three laws — https://en.wikipedia.org/wiki/Clarke%27sthree_laws\nLukas Larson
    — https://twitter.com/garazdawi\nErlang OTP — https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\nDavid
    Hardwick — https://www.linkedin.com/in/davidhardwick\nSTORD — https://www.stord.com/\nBetterCloud
    — http://www.bettercloud.com/ Special Guest: Maxim Fedorov.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+jbA1bSUT
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ff944923-7612-4245-b9b0-d9217e878b0b.mp3
    length: '48273230'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today we are so excited to share a conversation with Maxim Fedorov who
      offers such interesting insight and wisdom from a long career in the space,
      focusing on Erlang and why he views it as such a powerful language for the work
      at WhatsApp.
    duration: '50:13'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/ff944923-7612-4245-b9b0-d9217e878b0b/cover.jpg?v=1
    summary: "\n        <p>Today we are so excited to share a conversation with Maxim
      Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp!
      In our chat, Maxim offers such interesting insight and wisdom from a long career
      in the space, focusing on Erlang and why he views it as such a powerful language
      for the work at WhatsApp. We also get some backstory from Maxim, looking at
      his first experiences with computers, his educational background, and some of
      the work he did leading up to his current position. Our guest does a great job
      of sharing his thoughts on what he sees as a lack of magic within the Erlang
      language, why he prefers this, and how the company has managed to scale in such
      a major way over the past years. We also deal with some more general questions,
      weighing functional languages against object-oriented ones, useful resource
      recommendations, and a whole lot more! We finish off this episode with a mini-interview
      with David Hardwick, who is the current Vice President of Engineering at STORD,
      so make sure to stay tuned until the end for that! </p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>The beginnings of Maxim&#39;s interest in computer
      science and software development. </li>\n<li>How Maxim transitioned into the
      network security field. </li>\n<li>Maxim&#39;s experience with timezones and
      how this is approached for an app like WhatsApp.</li>\n<li>Thoughts on why WhatsApp
      is so popular outside of the United States. </li>\n<li>How Erlang is used at
      WhatsApp to power messaging. </li>\n<li>Probable reasons that Erlang was selected
      as the language for WhatsApp.</li>\n<li>Outages and downtime; what constitutes
      a serious issue for WhatsApp user experience. </li>\n<li>The massive growth
      that WhatsApp has seen and how their approach to scaling has evolved.</li>\n<li>Characteristics
      of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and
      reliability. </li>\n<li>Maxim&#39;s perspective on the issues around programmer
      education and their results.<br></li>\n<li>Functional languages versus object-oriented
      programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>\n<li>Why
      Maxim views Erlang as not containing or performing anything magical. </li>\n<li>Maxim&#39;s
      recommendations for resources when getting started in Erlang!</li>\n<li>Looking
      back at Maxim&#39;s experiences of tertiary education and the thesis he produced.
      </li>\n<li>The scaling of the WhatsApp server; the project that Maxim is most
      proud of!</li>\n<li>Maxim&#39;s love for motorcycles and bicycles and how these
      grew out of initial conveniences.<br></li>\n<li>Today&#39;s mini-feature interview
      with David Hardwick, VP of Engineering at STORD.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMaxim Fedorov: <a href=\"https://au.linkedin.com/in/maxim-fedorov-14a570b\"
      rel=\"nofollow\">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>\nElectronika
      MK-61 — <a href=\"https://en.wikipedia.org/wiki/Elektronika_MK-52\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>\nBrian
      Acton — <a href=\"https://www.forbes.com/profile/brian-acton/\" rel=\"nofollow\">https://www.forbes.com/profile/brian-acton/</a><br>\nLearn
      You Some Erlang — <a href=\"https://learnyousomeerlang.com/\" rel=\"nofollow\">https://learnyousomeerlang.com/</a><br>\nAdopting
      Erlang — <a href=\"https://github.com/adoptingerlang\" rel=\"nofollow\">https://github.com/adoptingerlang</a><br>\nJoe
      Armstrong Thesis — <a href=\"https://erlang.org/download/armstrong_thesis_2003.pdf\"
      rel=\"nofollow\">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>\nThe
      BEAM Book— <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nejabberd
      — <a href=\"https://www.ejabberd.im/\" rel=\"nofollow\">https://www.ejabberd.im/</a><br>\nWill
      Cathcart Tweet — <a href=\"https://twitter.com/wcathcart/status/1385253969522413568\"
      rel=\"nofollow\">https://twitter.com/wcathcart/status/1385253969522413568</a><br>\nClarke&#39;s
      three laws — <a href=\"https://en.wikipedia.org/wiki/Clarke%27s_three_laws\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>\nLukas
      Larson — <a href=\"https://twitter.com/garazdawi\" rel=\"nofollow\">https://twitter.com/garazdawi</a><br>\nErlang
      OTP — <a href=\"https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\"
      rel=\"nofollow\">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>\nDavid
      Hardwick — <a href=\"https://www.linkedin.com/in/davidhardwick\" rel=\"nofollow\">https://www.linkedin.com/in/davidhardwick</a><br>\nSTORD
      — <a href=\"https://www.stord.com/\" rel=\"nofollow\">https://www.stord.com/</a><br>\nBetterCloud
      — <a href=\"http://www.bettercloud.com/\" rel=\"nofollow\">http://www.bettercloud.com/</a></p><p>Special
      Guest: Maxim Fedorov.</p>\n      "
  contentEncoded: "\n        <p>Today we are so excited to share a conversation with
    Maxim Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp!
    In our chat, Maxim offers such interesting insight and wisdom from a long career
    in the space, focusing on Erlang and why he views it as such a powerful language
    for the work at WhatsApp. We also get some backstory from Maxim, looking at his
    first experiences with computers, his educational background, and some of the
    work he did leading up to his current position. Our guest does a great job of
    sharing his thoughts on what he sees as a lack of magic within the Erlang language,
    why he prefers this, and how the company has managed to scale in such a major
    way over the past years. We also deal with some more general questions, weighing
    functional languages against object-oriented ones, useful resource recommendations,
    and a whole lot more! We finish off this episode with a mini-interview with David
    Hardwick, who is the current Vice President of Engineering at STORD, so make sure
    to stay tuned until the end for that! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    beginnings of Maxim&#39;s interest in computer science and software development.
    </li>\n<li>How Maxim transitioned into the network security field. </li>\n<li>Maxim&#39;s
    experience with timezones and how this is approached for an app like WhatsApp.</li>\n<li>Thoughts
    on why WhatsApp is so popular outside of the United States. </li>\n<li>How Erlang
    is used at WhatsApp to power messaging. </li>\n<li>Probable reasons that Erlang
    was selected as the language for WhatsApp.</li>\n<li>Outages and downtime; what
    constitutes a serious issue for WhatsApp user experience. </li>\n<li>The massive
    growth that WhatsApp has seen and how their approach to scaling has evolved.</li>\n<li>Characteristics
    of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and
    reliability. </li>\n<li>Maxim&#39;s perspective on the issues around programmer
    education and their results.<br></li>\n<li>Functional languages versus object-oriented
    programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>\n<li>Why Maxim
    views Erlang as not containing or performing anything magical. </li>\n<li>Maxim&#39;s
    recommendations for resources when getting started in Erlang!</li>\n<li>Looking
    back at Maxim&#39;s experiences of tertiary education and the thesis he produced.
    </li>\n<li>The scaling of the WhatsApp server; the project that Maxim is most
    proud of!</li>\n<li>Maxim&#39;s love for motorcycles and bicycles and how these
    grew out of initial conveniences.<br></li>\n<li>Today&#39;s mini-feature interview
    with David Hardwick, VP of Engineering at STORD.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMaxim Fedorov: <a href=\"https://au.linkedin.com/in/maxim-fedorov-14a570b\"
    rel=\"nofollow\">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>\nElectronika
    MK-61 — <a href=\"https://en.wikipedia.org/wiki/Elektronika_MK-52\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>\nBrian
    Acton — <a href=\"https://www.forbes.com/profile/brian-acton/\" rel=\"nofollow\">https://www.forbes.com/profile/brian-acton/</a><br>\nLearn
    You Some Erlang — <a href=\"https://learnyousomeerlang.com/\" rel=\"nofollow\">https://learnyousomeerlang.com/</a><br>\nAdopting
    Erlang — <a href=\"https://github.com/adoptingerlang\" rel=\"nofollow\">https://github.com/adoptingerlang</a><br>\nJoe
    Armstrong Thesis — <a href=\"https://erlang.org/download/armstrong_thesis_2003.pdf\"
    rel=\"nofollow\">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>\nThe
    BEAM Book— <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nejabberd
    — <a href=\"https://www.ejabberd.im/\" rel=\"nofollow\">https://www.ejabberd.im/</a><br>\nWill
    Cathcart Tweet — <a href=\"https://twitter.com/wcathcart/status/1385253969522413568\"
    rel=\"nofollow\">https://twitter.com/wcathcart/status/1385253969522413568</a><br>\nClarke&#39;s
    three laws — <a href=\"https://en.wikipedia.org/wiki/Clarke%27s_three_laws\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>\nLukas
    Larson — <a href=\"https://twitter.com/garazdawi\" rel=\"nofollow\">https://twitter.com/garazdawi</a><br>\nErlang
    OTP — <a href=\"https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\"
    rel=\"nofollow\">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>\nDavid
    Hardwick — <a href=\"https://www.linkedin.com/in/davidhardwick\" rel=\"nofollow\">https://www.linkedin.com/in/davidhardwick</a><br>\nSTORD
    — <a href=\"https://www.stord.com/\" rel=\"nofollow\">https://www.stord.com/</a><br>\nBetterCloud
    — <a href=\"http://www.bettercloud.com/\" rel=\"nofollow\">http://www.bettercloud.com/</a></p><p>Special
    Guest: Maxim Fedorov.</p>\n      "
- title: Chelsea Troy on the Importance of Access and the Impact of Teaching
  slug: s6e7-troy
  link: https://smartlogic.io/podcast/elixir-wizards/s6e7-troy
  guid: 49a8c965-5f19-4aba-9cd7-6b59acc7188b
  pubDate: Thu, 22 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 22, 2021
  description: |
    Some of you may recognize Chelsea Troy from her popular blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference. Chelsea is an instructor in the Master's Program in Computer Science at the University of Chicago and currently works as a staff software engineer at Mozilla, where she specializes in machine learning and backend systems. In our conversation with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea outlines how programming can be more accessible than other careers because it doesn't have the same financial burden when it comes to education. She also emphasizes the importance of allowing a more diverse range of people access to the field and unpacks the type of person the internet was originally built for, explaining how it had favored privileged affluent individuals from the Bay Area. We hear from Chelsea about how she became a programmer out of a desire for job security rather than passion and why she believes it’s so important to have a broader representation of different narratives when it comes to careers in programming and coding. Later Chelsea shares the story of how she became an educator and why she is so passionate about teaching. For all this and much more, join us today!
    Key Points From This Episode:
    Introducing today’s guest Chelsea Troy
    Why Chelsea believes it’s important to privilege multiple narratives of why people choose to pursue programming as a career.
    There is less of a financial burden with becoming a programmer than other higher-paying professions.
    The benefits of a diverse group of people having access to programming as a career.
    What first prompted Chelsea to start her blog and how her goals for it have changed over time.
    Why Chelsea struggles to give advice on how to market a blog.
    How being able to draw parallels between different coding languages has strengthened Chelsea’s teaching and writing pursuits.
    Why Chelsea is so enthusiastic about teaching.
    How teaching allows Chelsea to have a more meaningful impact in the field of tech.
    How Chelsea prioritizes which jobs and clients to pursue as a consultant.
    How having two parents who taught for living influenced Chelsea’s passion for teaching.
    Chelsea shares how she earned her position at Chicago University, despite expecting not to.
    The challenges and benefits of teaching remotely.
    The pros and cons of functional languages versus object-oriented languages.
    How students tend to react to learning functional languages versus object-oriented languages.
    Mini-feature segment: hear from Rosemary about how she became a software engineer.
    How Rosemary built websites as a side hustle while studying English.
    Rosemary shares how she transitioned from working with Java and Blu-ray discs to doing back-end web development and writing in Elixir.
    How RentPath, the company Rosemary is currently working for, is transitioning from Ruby to Elixir.
    An outline of RentPath and what they do.
    Rosemary’s many hobbies and pursuits, including wildlife photography.
    Links Mentioned in Today’s Episode:
    Chelsea Troy on Twitter — https://twitter.com/HeyChelseaTroy
    Chelsea Troy on LinkedIn — https://www.linkedin.com/in/chelseatroy/
    Chelsea Troy Blog — https://chelseatroy.com/
    Upcoming Code BEAM Conferences — https://codesync.global/
    Chelsea Troy on Youtube —  https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig
    Ruby — https://www.ruby-lang.org/en/
    Mozilla — mozilla.org/en-US/
    Pocket — https://getpocket.com/
    Rosemary Ledesma — https://www.linkedin.com/in/rosemary-ledesma-b6198717/
    RentPath — https://www.rentpath.com/
    RedFin — https://www.redfin.com/
     Special Guest: Chelsea Troy.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ixIufJ34
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49a8c965-5f19-4aba-9cd7-6b59acc7188b.mp3
    length: '46274411'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: You may recognize Chelsea Troy from her popular blog or as a keynote
      speaker for the March 2021 Code BEAM conference. Today she discusses some of
      the unique aspects of coding as a career.
    duration: '48:08'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49a8c965-5f19-4aba-9cd7-6b59acc7188b/cover.jpg?v=1
    summary: "\n        <p>Some of you may recognize Chelsea Troy from her popular
      blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference.
      Chelsea is an instructor in the Master&#39;s Program in Computer Science at
      the University of Chicago and currently works as a staff software engineer at
      Mozilla, where she specializes in machine learning and backend systems. In our
      conversation with Chelsea, we discuss some of the unique aspects of coding as
      a career. Chelsea outlines how programming can be more accessible than other
      careers because it doesn&#39;t have the same financial burden when it comes
      to education. She also emphasizes the importance of allowing a more diverse
      range of people access to the field and unpacks the type of person the internet
      was originally built for, explaining how it had favored privileged affluent
      individuals from the Bay Area. We hear from Chelsea about how she became a programmer
      out of a desire for job security rather than passion and why she believes it’s
      so important to have a broader representation of different narratives when it
      comes to careers in programming and coding. Later Chelsea shares the story of
      how she became an educator and why she is so passionate about teaching. For
      all this and much more, join us today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest Chelsea Troy</li>\n<li>Why Chelsea believes it’s important to
      privilege multiple narratives of why people choose to pursue programming as
      a career.</li>\n<li>There is less of a financial burden with becoming a programmer
      than other higher-paying professions.</li>\n<li>The benefits of a diverse group
      of people having access to programming as a career.</li>\n<li>What first prompted
      Chelsea to start her blog and how her goals for it have changed over time.</li>\n<li>Why
      Chelsea struggles to give advice on how to market a blog.</li>\n<li>How being
      able to draw parallels between different coding languages has strengthened Chelsea’s
      teaching and writing pursuits.</li>\n<li>Why Chelsea is so enthusiastic about
      teaching.</li>\n<li>How teaching allows Chelsea to have a more meaningful impact
      in the field of tech.</li>\n<li>How Chelsea prioritizes which jobs and clients
      to pursue as a consultant.</li>\n<li>How having two parents who taught for living
      influenced Chelsea’s passion for teaching.</li>\n<li>Chelsea shares how she
      earned her position at Chicago University, despite expecting not to.</li>\n<li>The
      challenges and benefits of teaching remotely.</li>\n<li>The pros and cons of
      functional languages versus object-oriented languages.</li>\n<li>How students
      tend to react to learning functional languages versus object-oriented languages.</li>\n<li>Mini-feature
      segment: hear from Rosemary about how she became a software engineer.</li>\n<li>How
      Rosemary built websites as a side hustle while studying English.</li>\n<li>Rosemary
      shares how she transitioned from working with Java and Blu-ray discs to doing
      back-end web development and writing in Elixir.</li>\n<li>How RentPath, the
      company Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>\n<li>An
      outline of RentPath and what they do.</li>\n<li>Rosemary’s many hobbies and
      pursuits, including wildlife photography.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Chelsea Troy on Twitter — <a href=\"https://twitter.com/HeyChelseaTroy\"
      rel=\"nofollow\">https://twitter.com/HeyChelseaTroy</a><br>\nChelsea Troy on
      LinkedIn — <a href=\"https://www.linkedin.com/in/chelseatroy/\" rel=\"nofollow\">https://www.linkedin.com/in/chelseatroy/</a><br>\nChelsea
      Troy Blog — <a href=\"https://chelseatroy.com/\" rel=\"nofollow\">https://chelseatroy.com/</a><br>\nUpcoming
      Code BEAM Conferences — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nChelsea
      Troy on Youtube —  <a href=\"https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nMozilla
      — mozilla.org/en-US/<br>\nPocket — <a href=\"https://getpocket.com/\" rel=\"nofollow\">https://getpocket.com/</a><br>\nRosemary
      Ledesma — <a href=\"https://www.linkedin.com/in/rosemary-ledesma-b6198717/\"
      rel=\"nofollow\">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>\nRentPath
      — <a href=\"https://www.rentpath.com/\" rel=\"nofollow\">https://www.rentpath.com/</a><br>\nRedFin
      — <a href=\"https://www.redfin.com/\" rel=\"nofollow\">https://www.redfin.com/</a></p><p>Special
      Guest: Chelsea Troy.</p>\n      "
  contentEncoded: "\n        <p>Some of you may recognize Chelsea Troy from her popular
    blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference.
    Chelsea is an instructor in the Master&#39;s Program in Computer Science at the
    University of Chicago and currently works as a staff software engineer at Mozilla,
    where she specializes in machine learning and backend systems. In our conversation
    with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea
    outlines how programming can be more accessible than other careers because it
    doesn&#39;t have the same financial burden when it comes to education. She also
    emphasizes the importance of allowing a more diverse range of people access to
    the field and unpacks the type of person the internet was originally built for,
    explaining how it had favored privileged affluent individuals from the Bay Area.
    We hear from Chelsea about how she became a programmer out of a desire for job
    security rather than passion and why she believes it’s so important to have a
    broader representation of different narratives when it comes to careers in programming
    and coding. Later Chelsea shares the story of how she became an educator and why
    she is so passionate about teaching. For all this and much more, join us today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing today’s guest Chelsea Troy</li>\n<li>Why
    Chelsea believes it’s important to privilege multiple narratives of why people
    choose to pursue programming as a career.</li>\n<li>There is less of a financial
    burden with becoming a programmer than other higher-paying professions.</li>\n<li>The
    benefits of a diverse group of people having access to programming as a career.</li>\n<li>What
    first prompted Chelsea to start her blog and how her goals for it have changed
    over time.</li>\n<li>Why Chelsea struggles to give advice on how to market a blog.</li>\n<li>How
    being able to draw parallels between different coding languages has strengthened
    Chelsea’s teaching and writing pursuits.</li>\n<li>Why Chelsea is so enthusiastic
    about teaching.</li>\n<li>How teaching allows Chelsea to have a more meaningful
    impact in the field of tech.</li>\n<li>How Chelsea prioritizes which jobs and
    clients to pursue as a consultant.</li>\n<li>How having two parents who taught
    for living influenced Chelsea’s passion for teaching.</li>\n<li>Chelsea shares
    how she earned her position at Chicago University, despite expecting not to.</li>\n<li>The
    challenges and benefits of teaching remotely.</li>\n<li>The pros and cons of functional
    languages versus object-oriented languages.</li>\n<li>How students tend to react
    to learning functional languages versus object-oriented languages.</li>\n<li>Mini-feature
    segment: hear from Rosemary about how she became a software engineer.</li>\n<li>How
    Rosemary built websites as a side hustle while studying English.</li>\n<li>Rosemary
    shares how she transitioned from working with Java and Blu-ray discs to doing
    back-end web development and writing in Elixir.</li>\n<li>How RentPath, the company
    Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>\n<li>An
    outline of RentPath and what they do.</li>\n<li>Rosemary’s many hobbies and pursuits,
    including wildlife photography.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Chelsea
    Troy on Twitter — <a href=\"https://twitter.com/HeyChelseaTroy\" rel=\"nofollow\">https://twitter.com/HeyChelseaTroy</a><br>\nChelsea
    Troy on LinkedIn — <a href=\"https://www.linkedin.com/in/chelseatroy/\" rel=\"nofollow\">https://www.linkedin.com/in/chelseatroy/</a><br>\nChelsea
    Troy Blog — <a href=\"https://chelseatroy.com/\" rel=\"nofollow\">https://chelseatroy.com/</a><br>\nUpcoming
    Code BEAM Conferences — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nChelsea
    Troy on Youtube —  <a href=\"https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig\"
    rel=\"nofollow\">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nMozilla
    — mozilla.org/en-US/<br>\nPocket — <a href=\"https://getpocket.com/\" rel=\"nofollow\">https://getpocket.com/</a><br>\nRosemary
    Ledesma — <a href=\"https://www.linkedin.com/in/rosemary-ledesma-b6198717/\" rel=\"nofollow\">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>\nRentPath
    — <a href=\"https://www.rentpath.com/\" rel=\"nofollow\">https://www.rentpath.com/</a><br>\nRedFin
    — <a href=\"https://www.redfin.com/\" rel=\"nofollow\">https://www.redfin.com/</a></p><p>Special
    Guest: Chelsea Troy.</p>\n      "
- title: Testing Elixir with Jeffrey Matthias and Andrea Leopardi
  slug: s6e6-matthias-leopardi
  link: https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi
  guid: 3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9
  pubDate: Thu, 15 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 15, 2021
  description: "While we can think of many reasons why we love Elixir, the community
    could always benefit from a more lively conversation around testing. It was with
    this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing
    Elixir, and today they join us on the show to share some of the insights to be
    found in their new book. Our guests start by sketching out the main reasons why
    they decided to write a book of this nature before speaking to the process of
    writing it collaboratively from their respective homes in Italy and the US. Andrea
    and Jeffrey speak about the challenges of finding a middle ground between their
    unique styles to come up with a unified testing method. The conversation then
    takes a deep dive into the weeds of testing in Elixir and we hear our guests'
    perspectives on the most appropriate situations to use async true, Mox, Ecto Sandbox,
    and other techniques. We wrap up our interview with a question about what Andrea
    and Jeffrey would most like people to take away from their book where they express
    the hope that it can act as a springboard for further conversation about best
    practices for testing in Elixir and more. As always, we close the show off with
    our mini-interview, this time talking to Tracey Onim from Podii. \nKey Points
    From This Episode:\nWhy Jeffrey and Andrea wrote their book and how they pitched
    it to the publisher.\nHow the feedback Andrea and Jeffrey got while writing the
    book shaped its content.\nWhat writing the book was like considering its authors
    live in different countries.\nHow our guests came up with a unified testing method
    when each had their own style.\nStories about testing mistakes and the funny situations
    they led to.\nDiscussing the HBO integration test email and how it was responded
    to and dealt with.\nThe issue of developers not using async true enough and how
    to get better at it.\nWhen to use async true, Ecto Sandbox, and Mox.\nWhy our
    guests use Mox, when the best times to use it are, and how it shapes your thinking.
    \nExploring the relationship between test driven development and using the program.\nWhat
    can go wrong if you rely purely on tests to test out your code.\nThe main takeaways
    our guests hope can be found in their book.\nFinal plugs from Jeffrey and Andrea
    and where to find them online.\nA quick interview where we learn more about Tracey
    Onim from Podii. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nJeffrey Matthias on Twitter — https://twitter.com/idlehands\nAndrea Leopardi
    — https://andrealeopardi.com/\nAndrea Leopardi on Twitter — https://twitter.com/whatyouhide\nAndrea
    Leopardi on GitHub — https://github.com/whatyouhide/corsica\nTesting Elixir —
    http://testingelixir.com/\nTesting Elixir — https://pragprog.com/titles/lmelixir/testing-elixir/\nTesting
    Elixir — https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\nTesting
    Elixir on Twitter — https://twitter.com/testingelixir\nPublish with The Pragmatic
    Bookshelf — https://pragprog.com/become-an-author/\nEcto.Adapters.SQL.Sandbox
    — https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\nMox — https://hexdocs.pm/mox/Mox.html\nCommand
    Line Options — https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\nMocks
    and Explicit Contracts — http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\nbypass
    — https://github.com/PSPDFKit-labs/bypass\nTest-Driven Development with Phoenix
    — https://www.tddphoenix.com/\nTracey Onim — https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\nPodii
    — https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count Special
    Guests: Andrea Leopardi and Jeffrey Matthias.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+aQtoGngD
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9.mp3
    length: '47303624'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While we can think of many reasons why we love Elixir, the community
      could always benefit from a more lively conversation around testing. It was
      with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write
      Testing Elixir. Today they join us to share some of the insights to be found
      in their new book.
    duration: '56:18'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9/cover.jpg?v=1
    summary: "\n        <p>While we can think of many reasons why we love Elixir,
      the community could always benefit from a more lively conversation around testing.
      It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to
      write Testing Elixir, and today they join us on the show to share some of the
      insights to be found in their new book. Our guests start by sketching out the
      main reasons why they decided to write a book of this nature before speaking
      to the process of writing it collaboratively from their respective homes in
      Italy and the US. Andrea and Jeffrey speak about the challenges of finding a
      middle ground between their unique styles to come up with a unified testing
      method. The conversation then takes a deep dive into the weeds of testing in
      Elixir and we hear our guests&#39; perspectives on the most appropriate situations
      to use async true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview
      with a question about what Andrea and Jeffrey would most like people to take
      away from their book where they express the hope that it can act as a springboard
      for further conversation about best practices for testing in Elixir and more.
      As always, we close the show off with our mini-interview, this time talking
      to Tracey Onim from Podii. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
      Jeffrey and Andrea wrote their book and how they pitched it to the publisher.</li>\n<li>How
      the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>\n<li>What
      writing the book was like considering its authors live in different countries.</li>\n<li>How
      our guests came up with a unified testing method when each had their own style.</li>\n<li>Stories
      about testing mistakes and the funny situations they led to.</li>\n<li>Discussing
      the HBO integration test email and how it was responded to and dealt with.</li>\n<li>The
      issue of developers not using async true enough and how to get better at it.</li>\n<li>When
      to use async true, Ecto Sandbox, and Mox.</li>\n<li>Why our guests use Mox,
      when the best times to use it are, and how it shapes your thinking. </li>\n<li>Exploring
      the relationship between test driven development and using the program.</li>\n<li>What
      can go wrong if you rely purely on tests to test out your code.</li>\n<li>The
      main takeaways our guests hope can be found in their book.</li>\n<li>Final plugs
      from Jeffrey and Andrea and where to find them online.</li>\n<li>A quick interview
      where we learn more about Tracey Onim from Podii. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nJeffrey Matthias on Twitter
      — <a href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrea
      Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nAndrea
      Leopardi on GitHub — <a href=\"https://github.com/whatyouhide/corsica\" rel=\"nofollow\">https://github.com/whatyouhide/corsica</a><br>\nTesting
      Elixir — <a href=\"http://testingelixir.com/\" rel=\"nofollow\">http://testingelixir.com/</a><br>\nTesting
      Elixir — <a href=\"https://pragprog.com/titles/lmelixir/testing-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>\nTesting
      Elixir — <a href=\"https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\"
      rel=\"nofollow\">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>\nTesting
      Elixir on Twitter — <a href=\"https://twitter.com/testingelixir\" rel=\"nofollow\">https://twitter.com/testingelixir</a><br>\nPublish
      with The Pragmatic Bookshelf — <a href=\"https://pragprog.com/become-an-author/\"
      rel=\"nofollow\">https://pragprog.com/become-an-author/</a><br>\nEcto.Adapters.SQL.Sandbox
      — <a href=\"https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>\nMox
      — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nCommand
      Line Options — <a href=\"https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\"
      rel=\"nofollow\">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>\nMocks
      and Explicit Contracts — <a href=\"http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\"
      rel=\"nofollow\">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>\nbypass
      — <a href=\"https://github.com/PSPDFKit-labs/bypass\" rel=\"nofollow\">https://github.com/PSPDFKit-labs/bypass</a><br>\nTest-Driven
      Development with Phoenix — <a href=\"https://www.tddphoenix.com/\" rel=\"nofollow\">https://www.tddphoenix.com/</a><br>\nTracey
      Onim — <a href=\"https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\"
      rel=\"nofollow\">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>\nPodii
      — <a href=\"https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count\"
      rel=\"nofollow\">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special
      Guests: Andrea Leopardi and Jeffrey Matthias.</p>\n      "
  contentEncoded: "\n        <p>While we can think of many reasons why we love Elixir,
    the community could always benefit from a more lively conversation around testing.
    It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to
    write Testing Elixir, and today they join us on the show to share some of the
    insights to be found in their new book. Our guests start by sketching out the
    main reasons why they decided to write a book of this nature before speaking to
    the process of writing it collaboratively from their respective homes in Italy
    and the US. Andrea and Jeffrey speak about the challenges of finding a middle
    ground between their unique styles to come up with a unified testing method. The
    conversation then takes a deep dive into the weeds of testing in Elixir and we
    hear our guests&#39; perspectives on the most appropriate situations to use async
    true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview with a
    question about what Andrea and Jeffrey would most like people to take away from
    their book where they express the hope that it can act as a springboard for further
    conversation about best practices for testing in Elixir and more. As always, we
    close the show off with our mini-interview, this time talking to Tracey Onim from
    Podii. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why Jeffrey and
    Andrea wrote their book and how they pitched it to the publisher.</li>\n<li>How
    the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>\n<li>What
    writing the book was like considering its authors live in different countries.</li>\n<li>How
    our guests came up with a unified testing method when each had their own style.</li>\n<li>Stories
    about testing mistakes and the funny situations they led to.</li>\n<li>Discussing
    the HBO integration test email and how it was responded to and dealt with.</li>\n<li>The
    issue of developers not using async true enough and how to get better at it.</li>\n<li>When
    to use async true, Ecto Sandbox, and Mox.</li>\n<li>Why our guests use Mox, when
    the best times to use it are, and how it shapes your thinking. </li>\n<li>Exploring
    the relationship between test driven development and using the program.</li>\n<li>What
    can go wrong if you rely purely on tests to test out your code.</li>\n<li>The
    main takeaways our guests hope can be found in their book.</li>\n<li>Final plugs
    from Jeffrey and Andrea and where to find them online.</li>\n<li>A quick interview
    where we learn more about Tracey Onim from Podii. </li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nJeffrey Matthias on Twitter
    — <a href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrea
    Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nAndrea
    Leopardi on GitHub — <a href=\"https://github.com/whatyouhide/corsica\" rel=\"nofollow\">https://github.com/whatyouhide/corsica</a><br>\nTesting
    Elixir — <a href=\"http://testingelixir.com/\" rel=\"nofollow\">http://testingelixir.com/</a><br>\nTesting
    Elixir — <a href=\"https://pragprog.com/titles/lmelixir/testing-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>\nTesting
    Elixir — <a href=\"https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\"
    rel=\"nofollow\">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>\nTesting
    Elixir on Twitter — <a href=\"https://twitter.com/testingelixir\" rel=\"nofollow\">https://twitter.com/testingelixir</a><br>\nPublish
    with The Pragmatic Bookshelf — <a href=\"https://pragprog.com/become-an-author/\"
    rel=\"nofollow\">https://pragprog.com/become-an-author/</a><br>\nEcto.Adapters.SQL.Sandbox
    — <a href=\"https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>\nMox
    — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nCommand
    Line Options — <a href=\"https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\"
    rel=\"nofollow\">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>\nMocks
    and Explicit Contracts — <a href=\"http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\"
    rel=\"nofollow\">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>\nbypass
    — <a href=\"https://github.com/PSPDFKit-labs/bypass\" rel=\"nofollow\">https://github.com/PSPDFKit-labs/bypass</a><br>\nTest-Driven
    Development with Phoenix — <a href=\"https://www.tddphoenix.com/\" rel=\"nofollow\">https://www.tddphoenix.com/</a><br>\nTracey
    Onim — <a href=\"https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\"
    rel=\"nofollow\">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>\nPodii
    — <a href=\"https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count\"
    rel=\"nofollow\">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special
    Guests: Andrea Leopardi and Jeffrey Matthias.</p>\n      "
- title: Scaling and The Growth Curve with Francesco Cesarini
  slug: s6e5-cesarini
  link: https://smartlogic.io/podcast/elixir-wizards/s6e5-cesarini
  guid: 3c07dbc2-eadc-48b9-9136-7decec7a0f57
  pubDate: Thu, 03 Jun 2021 06:00:00 -0400
  pubDateFriendly: June  3, 2021
  description: "Joining us for this episode of Elixir Wizards is the vastly experienced
    and well-traveled Francesco Cesarini! Francesco is the founder of Erlang Solutions
    and we are so lucky to have him here on the show to talk about his personal and
    professional journey, and take this great season of shows on the magic of the
    BEAM even further. Francesco takes us through his early interactions with computers
    and coding and the events that led to his decision to study computer science,
    before diving into his move to Sweden, and subsequently the UK, and how this all
    resulted in the founding of his company. Our guest touches on some helpful lessons
    he learned around marketing and branding, particularly related to the name of
    the company and we also discuss how the company grew in stages over the years.
    From there, the conversation turns to Francesco's work on conferences, and his
    commitment to this important feature of the community. We talk about the benefits
    of virtual conferences, what to look forward to, and the team that Francesco works
    with when organizing. To finish off this segment, our guest gives a few recommended
    resources and comments on Erlang syntax too! For today's mini-feature we welcome
    Jeffery Utter who works as a Senior Software Developer at Bleacher Report, so
    make sure to tune in to catch it all!\nKey Points From This Episode:\nFrancesco's
    route into coding from an early age and first forays into studying computer science.\nThe
    first job that Francesco had out of college: an exciting internship at Ericsson.
    \nHow Francesco founded Erlang Solutions after leaving Sweden and moving to London.
    \nThe big growth steps that happened over the years as Erlang Solutions developed.\nFrancesco's
    evolving mindset during this growth period and his attitude towards scaling the
    company. \nThe current size of the company and the offices that are spread all
    over the world! \nVirtual conferences, more connectivity, and the benefits of
    getting involved in the community. \nThe planning process for conferences and
    the size of the team that put them together. \nThe growth curve for Erlang Solutions
    over the years and the main drivers in the process. \nExamples from the explanatory
    videos that Francesco produced to help people understand Erlang.  \nFrancesco's
    feelings about Erlang syntax and the misconceptions about its difficulty.\nRecommendations
    of helpful resources to aid the learning curve.\nGetting involved with Erlang
    Solutions and connecting with Francesco and his team!\nJeffery Utter from Bleacher
    Report joins us to briefly talk about his journey with Elixir.\nThe time that
    Jeffery spent working at Communication Service for the Deaf prior to Bleacher
    Report.\nSome updates on the growth and evolution of Bleacher Report and what
    they offer users.\nHow Elixir is used at Bleacher Report and its succession of
    Ruby at the company. \nJeffery's alternate career paths and qualifications in
    music and education!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixir Conference — http://smr.tl/conf-podcast\nFrancesco Cesarini on Twitter
    — https://twitter.com/FrancescoC\nJoe Armstrong — https://codersatwork.com/joe-armstrong.html\nErlang
    Solutions — https://www.erlang-solutions.com/\nErlang Programming Language - Computerphile
    — https://www.youtube.com/watch?v=SOqQVoVai6s\nChalmers University of Technology
    — https://www.chalmers.se/en/Pages/default.aspx\nErlang & Elixir Developers |
    Careers at Erlang Solutions — https://www.erlang-solutions.com/careers/\nCode
    BEAM V SF 2021 — https://codesync.global/conferences/code-beam-sf-2021/.\nRabbitMQ
    Summit— https://rabbitmqsummit.com/\nLanguages, and about languages, on the BEAM
    — https://github.com/llaisdy/beam_languages\nLambda Days 2021 — https://www.lambdadays.org/lambdadays2021\nCode
    Mesh — https://codesync.global/conferences/code-mesh-ldn\nErlang Master Classes
    University of Kent — https://www.cs.kent.ac.uk/ErlangMasterClasses/\nProfessor
    Simon Thompson — https://www.kent.ac.uk/computing/people/3164/thompson-simon\nDesigning
    for Scalability with Erlang/OTP — https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\nErlang
    Programming — https://www.oreilly.com/library/view/erlang-programming/9780596803940/\nJeffery
    Utter — https://www.linkedin.com/in/jeffutter\nBleacher Report — https://bleacherreport.com/\nCommunication
    Service for the Deaf — https://www.csd.org/\nGallaudet University — https://www.gallaudet.edu/
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XI8Bq-gm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3c07dbc2-eadc-48b9-9136-7decec7a0f57.mp3
    length: '44755930'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Francesco Cesarini is the founder of Erlang Solutions and we are so
      lucky to have him here on the show to talk about his personal and professional
      journey, and take this great season of shows on the magic of the BEAM even further.
    duration: '46:33'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3c07dbc2-eadc-48b9-9136-7decec7a0f57/cover.jpg?v=1
    summary: "\n        <p>Joining us for this episode of Elixir Wizards is the vastly
      experienced and well-traveled Francesco Cesarini! Francesco is the founder of
      Erlang Solutions and we are so lucky to have him here on the show to talk about
      his personal and professional journey, and take this great season of shows on
      the magic of the BEAM even further. Francesco takes us through his early interactions
      with computers and coding and the events that led to his decision to study computer
      science, before diving into his move to Sweden, and subsequently the UK, and
      how this all resulted in the founding of his company. Our guest touches on some
      helpful lessons he learned around marketing and branding, particularly related
      to the name of the company and we also discuss how the company grew in stages
      over the years. From there, the conversation turns to Francesco&#39;s work on
      conferences, and his commitment to this important feature of the community.
      We talk about the benefits of virtual conferences, what to look forward to,
      and the team that Francesco works with when organizing. To finish off this segment,
      our guest gives a few recommended resources and comments on Erlang syntax too!
      For today&#39;s mini-feature we welcome Jeffery Utter who works as a Senior
      Software Developer at Bleacher Report, so make sure to tune in to catch it all!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Francesco&#39;s route into coding
      from an early age and first forays into studying computer science.</li>\n<li>The
      first job that Francesco had out of college: an exciting internship at Ericsson.
      </li>\n<li>How Francesco founded Erlang Solutions after leaving Sweden and moving
      to London. </li>\n<li>The big growth steps that happened over the years as Erlang
      Solutions developed.</li>\n<li>Francesco&#39;s evolving mindset during this
      growth period and his attitude towards scaling the company. </li>\n<li>The current
      size of the company and the offices that are spread all over the world! </li>\n<li>Virtual
      conferences, more connectivity, and the benefits of getting involved in the
      community. </li>\n<li>The planning process for conferences and the size of the
      team that put them together. </li>\n<li>The growth curve for Erlang Solutions
      over the years and the main drivers in the process. </li>\n<li>Examples from
      the explanatory videos that Francesco produced to help people understand Erlang.<br></li>\n<li>Francesco&#39;s
      feelings about Erlang syntax and the misconceptions about its difficulty.</li>\n<li>Recommendations
      of helpful resources to aid the learning curve.</li>\n<li>Getting involved with
      Erlang Solutions and connecting with Francesco and his team!</li>\n<li>Jeffery
      Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>\n<li>The
      time that Jeffery spent working at Communication Service for the Deaf prior
      to Bleacher Report.</li>\n<li>Some updates on the growth and evolution of Bleacher
      Report and what they offer users.</li>\n<li>How Elixir is used at Bleacher Report
      and its succession of Ruby at the company. </li>\n<li>Jeffery&#39;s alternate
      career paths and qualifications in music and education!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Conference — <a href=\"http://smr.tl/conf-podcast\"
      rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nFrancesco Cesarini on Twitter
      — <a href=\"https://twitter.com/FrancescoC\" rel=\"nofollow\">https://twitter.com/FrancescoC</a><br>\nJoe
      Armstrong — <a href=\"https://codersatwork.com/joe-armstrong.html\" rel=\"nofollow\">https://codersatwork.com/joe-armstrong.html</a><br>\nErlang
      Solutions — <a href=\"https://www.erlang-solutions.com/\" rel=\"nofollow\">https://www.erlang-solutions.com/</a><br>\nErlang
      Programming Language - Computerphile — <a href=\"https://www.youtube.com/watch?v=SOqQVoVai6s\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>\nChalmers
      University of Technology — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\"
      rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nErlang
      &amp; Elixir Developers | Careers at Erlang Solutions — <a href=\"https://www.erlang-solutions.com/careers/\"
      rel=\"nofollow\">https://www.erlang-solutions.com/careers/</a><br>\nCode BEAM
      V SF 2021 — <a href=\"https://codesync.global/conferences/code-beam-sf-2021/\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>\nRabbitMQ
      Summit— <a href=\"https://rabbitmqsummit.com/\" rel=\"nofollow\">https://rabbitmqsummit.com/</a><br>\nLanguages,
      and about languages, on the BEAM — <a href=\"https://github.com/llaisdy/beam_languages\"
      rel=\"nofollow\">https://github.com/llaisdy/beam_languages</a><br>\nLambda Days
      2021 — <a href=\"https://www.lambdadays.org/lambdadays2021\" rel=\"nofollow\">https://www.lambdadays.org/lambdadays2021</a><br>\nCode
      Mesh — <a href=\"https://codesync.global/conferences/code-mesh-ldn\" rel=\"nofollow\">https://codesync.global/conferences/code-mesh-ldn</a><br>\nErlang
      Master Classes University of Kent — <a href=\"https://www.cs.kent.ac.uk/ErlangMasterClasses/\"
      rel=\"nofollow\">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>\nProfessor
      Simon Thompson — <a href=\"https://www.kent.ac.uk/computing/people/3164/thompson-simon\"
      rel=\"nofollow\">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>\nDesigning
      for Scalability with Erlang/OTP — <a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>\nErlang
      Programming — <a href=\"https://www.oreilly.com/library/view/erlang-programming/9780596803940/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>\nJeffery
      Utter — <a href=\"https://www.linkedin.com/in/jeffutter\" rel=\"nofollow\">https://www.linkedin.com/in/jeffutter</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nCommunication
      Service for the Deaf — <a href=\"https://www.csd.org/\" rel=\"nofollow\">https://www.csd.org/</a><br>\nGallaudet
      University — <a href=\"https://www.gallaudet.edu/\" rel=\"nofollow\">https://www.gallaudet.edu/</a></p>\n
      \     "
  contentEncoded: "\n        <p>Joining us for this episode of Elixir Wizards is the
    vastly experienced and well-traveled Francesco Cesarini! Francesco is the founder
    of Erlang Solutions and we are so lucky to have him here on the show to talk about
    his personal and professional journey, and take this great season of shows on
    the magic of the BEAM even further. Francesco takes us through his early interactions
    with computers and coding and the events that led to his decision to study computer
    science, before diving into his move to Sweden, and subsequently the UK, and how
    this all resulted in the founding of his company. Our guest touches on some helpful
    lessons he learned around marketing and branding, particularly related to the
    name of the company and we also discuss how the company grew in stages over the
    years. From there, the conversation turns to Francesco&#39;s work on conferences,
    and his commitment to this important feature of the community. We talk about the
    benefits of virtual conferences, what to look forward to, and the team that Francesco
    works with when organizing. To finish off this segment, our guest gives a few
    recommended resources and comments on Erlang syntax too! For today&#39;s mini-feature
    we welcome Jeffery Utter who works as a Senior Software Developer at Bleacher
    Report, so make sure to tune in to catch it all!</p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>Francesco&#39;s route into coding from an early age
    and first forays into studying computer science.</li>\n<li>The first job that
    Francesco had out of college: an exciting internship at Ericsson. </li>\n<li>How
    Francesco founded Erlang Solutions after leaving Sweden and moving to London.
    </li>\n<li>The big growth steps that happened over the years as Erlang Solutions
    developed.</li>\n<li>Francesco&#39;s evolving mindset during this growth period
    and his attitude towards scaling the company. </li>\n<li>The current size of the
    company and the offices that are spread all over the world! </li>\n<li>Virtual
    conferences, more connectivity, and the benefits of getting involved in the community.
    </li>\n<li>The planning process for conferences and the size of the team that
    put them together. </li>\n<li>The growth curve for Erlang Solutions over the years
    and the main drivers in the process. </li>\n<li>Examples from the explanatory
    videos that Francesco produced to help people understand Erlang.<br></li>\n<li>Francesco&#39;s
    feelings about Erlang syntax and the misconceptions about its difficulty.</li>\n<li>Recommendations
    of helpful resources to aid the learning curve.</li>\n<li>Getting involved with
    Erlang Solutions and connecting with Francesco and his team!</li>\n<li>Jeffery
    Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>\n<li>The
    time that Jeffery spent working at Communication Service for the Deaf prior to
    Bleacher Report.</li>\n<li>Some updates on the growth and evolution of Bleacher
    Report and what they offer users.</li>\n<li>How Elixir is used at Bleacher Report
    and its succession of Ruby at the company. </li>\n<li>Jeffery&#39;s alternate
    career paths and qualifications in music and education!</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Conference — <a href=\"http://smr.tl/conf-podcast\"
    rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nFrancesco Cesarini on Twitter
    — <a href=\"https://twitter.com/FrancescoC\" rel=\"nofollow\">https://twitter.com/FrancescoC</a><br>\nJoe
    Armstrong — <a href=\"https://codersatwork.com/joe-armstrong.html\" rel=\"nofollow\">https://codersatwork.com/joe-armstrong.html</a><br>\nErlang
    Solutions — <a href=\"https://www.erlang-solutions.com/\" rel=\"nofollow\">https://www.erlang-solutions.com/</a><br>\nErlang
    Programming Language - Computerphile — <a href=\"https://www.youtube.com/watch?v=SOqQVoVai6s\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>\nChalmers
    University of Technology — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\"
    rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nErlang
    &amp; Elixir Developers | Careers at Erlang Solutions — <a href=\"https://www.erlang-solutions.com/careers/\"
    rel=\"nofollow\">https://www.erlang-solutions.com/careers/</a><br>\nCode BEAM
    V SF 2021 — <a href=\"https://codesync.global/conferences/code-beam-sf-2021/\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>\nRabbitMQ
    Summit— <a href=\"https://rabbitmqsummit.com/\" rel=\"nofollow\">https://rabbitmqsummit.com/</a><br>\nLanguages,
    and about languages, on the BEAM — <a href=\"https://github.com/llaisdy/beam_languages\"
    rel=\"nofollow\">https://github.com/llaisdy/beam_languages</a><br>\nLambda Days
    2021 — <a href=\"https://www.lambdadays.org/lambdadays2021\" rel=\"nofollow\">https://www.lambdadays.org/lambdadays2021</a><br>\nCode
    Mesh — <a href=\"https://codesync.global/conferences/code-mesh-ldn\" rel=\"nofollow\">https://codesync.global/conferences/code-mesh-ldn</a><br>\nErlang
    Master Classes University of Kent — <a href=\"https://www.cs.kent.ac.uk/ErlangMasterClasses/\"
    rel=\"nofollow\">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>\nProfessor
    Simon Thompson — <a href=\"https://www.kent.ac.uk/computing/people/3164/thompson-simon\"
    rel=\"nofollow\">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>\nDesigning
    for Scalability with Erlang/OTP — <a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>\nErlang
    Programming — <a href=\"https://www.oreilly.com/library/view/erlang-programming/9780596803940/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>\nJeffery
    Utter — <a href=\"https://www.linkedin.com/in/jeffutter\" rel=\"nofollow\">https://www.linkedin.com/in/jeffutter</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nCommunication
    Service for the Deaf — <a href=\"https://www.csd.org/\" rel=\"nofollow\">https://www.csd.org/</a><br>\nGallaudet
    University — <a href=\"https://www.gallaudet.edu/\" rel=\"nofollow\">https://www.gallaudet.edu/</a></p>\n
    \     "
- title: Bringing the Magic of Math into Programming with Chris Miller
  slug: s6e4-miller
  link: https://smartlogic.io/podcast/elixir-wizards/s6e4-miller
  guid: 95a7bb65-24d3-4155-bd40-9a4b4a94fbbb
  pubDate: Thu, 27 May 2021 06:00:00 -0400
  pubDateFriendly: May 27, 2021
  description: "Today we have some extra BEAM magic for all of you! Joining us on
    the show is Chris Miller, who currently works as an Associate Software Engineer
    at Corvus Insurance. We get into a great conversation with Chris about his history
    with programming, his long-held interest in mathematics, and how he is trying
    to bring these two worlds closer together through his work. Chris weighs in with
    some very important expert perspectives on a range of subjects, from monads and
    monoids to Vim and Emacs, before we get into the different avenues of Chris' work.
    Along with an old college friend, Chris runs the informative YouTube Channel,
    Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual,
    speaking Mandarin, Spanish, German, and English! We get some illumination on interesting
    and important concepts such as Turing completeness, programming language theory,
    and more, all delivered with an accessibility that belies the high level of the
    material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney
    Leatherwood, at the end, be sure to listen in today!\nKey Points From This Episode:\nThe
    story behind Chris' Twitter handle and his admiration for Leonhard Euler! \nHow
    Chris is bringing his love of math into his programming work. \nA crash course
    on monads and monoids! \nChris' teaching and tutoring work and his aim of bringing
    fun examples into learning. \nThe YouTube channel that Chris runs with an old
    friend, called Coding Cave. \nChris' take on the Vim versus Emacs debate.\nHow
    Chris learned to program from his father, and his return to it during college.
    \nUnpacking programming language theory and the idea of Turing completeness. \nChris
    clears up the difference between computer science and mathematics.\nReasons that
    Chris enjoys working in Elixir compared with other languages.    \nChris' goals
    for his YouTube channel and his hopes to spread advanced education. \nMagic and
    languages; a programming language theory perspective. \nChris' day job as a software
    engineer at Corvus Insurance using Elixir and Elm.\nThe array of languages that
    Chris can speak; Mandarin, German, and Spanish. \nThe process of language acquisition
    and Chris' methods for learning. \nWhy Chris believes starting with the function
    is the best way to learn a new programming language. \nThe aspects of Elixir and
    the BEAM that have Chris the most excited at the moment! \nThis week's mini-feature
    with Sidney Leatherwood and his use of Elixir in production.\nThe comparative
    rating service that Semsee offers their customers.\nHiring in Elixir currently;
    perks, challenges, and resources in the space. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nChris Miller on Twitter — https://twitter.com/blackeuler\nElixir
    Wizard Conference — http://smr.tl/conf-podcast\nLeonhard Euler — https://en.wikipedia.org/wiki/LeonhardEuler\nCurry–Howard
    Correspondence — https://en.wikipedia.org/wiki/Curry%E2%80%93Howardcorrespondence\nHaskell
    — https://www.haskell.org/\nBrooklyn Zelenka — https://medium.com/@expede\nCoding
    Cave — https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYovg\nConversations
    with the Creator: José Valim — https://www.youtube.com/watch?v=BXpoKKkqAX4\nFunctor
    — https://en.wikipedia.org/wiki/Functor\nSpacemacs: Emacs advanced Kit focused
    on Evil — https://www.spacemacs.org/\nhlissner/doom-emacs — https://github.com/hlissner/doom-emacs\nTuring
    Completeness — https://en.wikipedia.org/wiki/Turingcompleteness\nCal Newport —
    https://www.calnewport.com/\nBoolean Algebra — https://en.wikipedia.org/wiki/Booleanalgebra\nClojure
    — https://clojure.org/\nCorvus Insurance — https://www.corvusinsurance.com/\nAPL
    — https://en.wikipedia.org/wiki/APL(programming_language)\nGleam - https://gleam.run/\nSidney
    Leatherwood on LinkedIn — https://www.linkedin.com/in/leather-s\nSemsee — https://semsee.com/
    Special Guest: Chris Miller.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+iK3LS_7b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb.mp3
    length: '52082260'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today we have some extra BEAM magic for all of you! Joining us on the
      show is Chris Miller with Corvus Insurance. We get into a great conversation
      with Chris about his history with programming, his long-held interest in mathematics,
      and how he is trying to bring these two worlds closer together through his work.
    duration: '54:11'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb/cover.jpg?v=1
    summary: "\n        <p>Today we have some extra BEAM magic for all of you! Joining
      us on the show is Chris Miller, who currently works as an Associate Software
      Engineer at Corvus Insurance. We get into a great conversation with Chris about
      his history with programming, his long-held interest in mathematics, and how
      he is trying to bring these two worlds closer together through his work. Chris
      weighs in with some very important expert perspectives on a range of subjects,
      from monads and monoids to Vim and Emacs, before we get into the different avenues
      of Chris&#39; work. Along with an old college friend, Chris runs the informative
      YouTube Channel, Coding Cave, helps other coders through mentorship and tutoring,
      and is also multilingual, speaking Mandarin, Spanish, German, and English! We
      get some illumination on interesting and important concepts such as Turing completeness,
      programming language theory, and more, all delivered with an accessibility that
      belies the high level of the material. So for all this, plus our bonus mini-segment
      with Semsee employee, Sidney Leatherwood, at the end, be sure to listen in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>The story behind Chris&#39; Twitter
      handle and his admiration for Leonhard Euler! </li>\n<li>How Chris is bringing
      his love of math into his programming work. </li>\n<li>A crash course on monads
      and monoids! </li>\n<li>Chris&#39; teaching and tutoring work and his aim of
      bringing fun examples into learning. </li>\n<li>The YouTube channel that Chris
      runs with an old friend, called Coding Cave. </li>\n<li>Chris&#39; take on the
      Vim versus Emacs debate.</li>\n<li>How Chris learned to program from his father,
      and his return to it during college. </li>\n<li>Unpacking programming language
      theory and the idea of Turing completeness. </li>\n<li>Chris clears up the difference
      between computer science and mathematics.</li>\n<li>Reasons that Chris enjoys
      working in Elixir compared with other languages.<br></li>\n<li>Chris&#39; goals
      for his YouTube channel and his hopes to spread advanced education. </li>\n<li>Magic
      and languages; a programming language theory perspective. </li>\n<li>Chris&#39;
      day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>\n<li>The
      array of languages that Chris can speak; Mandarin, German, and Spanish. </li>\n<li>The
      process of language acquisition and Chris&#39; methods for learning. </li>\n<li>Why
      Chris believes starting with the function is the best way to learn a new programming
      language. </li>\n<li>The aspects of Elixir and the BEAM that have Chris the
      most excited at the moment! </li>\n<li>This week&#39;s mini-feature with Sidney
      Leatherwood and his use of Elixir in production.</li>\n<li>The comparative rating
      service that Semsee offers their customers.</li>\n<li>Hiring in Elixir currently;
      perks, challenges, and resources in the space. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Miller on Twitter —
      <a href=\"https://twitter.com/blackeuler\" rel=\"nofollow\">https://twitter.com/blackeuler</a><br>\nElixir
      Wizard Conference — <a href=\"http://smr.tl/conf-podcast\" rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nLeonhard
      Euler — <a href=\"https://en.wikipedia.org/wiki/Leonhard_Euler\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>\nCurry–Howard
      Correspondence — <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nBrooklyn
      Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nCoding
      Cave — <a href=\"https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>\nConversations
      with the Creator: José Valim — <a href=\"https://www.youtube.com/watch?v=BXpoKKkqAX4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>\nFunctor
      — <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Functor</a><br>\nSpacemacs:
      Emacs advanced Kit focused on Evil — <a href=\"https://www.spacemacs.org/\"
      rel=\"nofollow\">https://www.spacemacs.org/</a><br>\nhlissner/doom-emacs — <a
      href=\"https://github.com/hlissner/doom-emacs\" rel=\"nofollow\">https://github.com/hlissner/doom-emacs</a><br>\nTuring
      Completeness — <a href=\"https://en.wikipedia.org/wiki/Turing_completeness\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Turing_completeness</a><br>\nCal
      Newport — <a href=\"https://www.calnewport.com/\" rel=\"nofollow\">https://www.calnewport.com/</a><br>\nBoolean
      Algebra — <a href=\"https://en.wikipedia.org/wiki/Boolean_algebra\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nCorvus
      Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nAPL
      — <a href=\"https://en.wikipedia.org/wiki/APL_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>\nGleam
      - <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nSidney
      Leatherwood on LinkedIn — <a href=\"https://www.linkedin.com/in/leather-s\"
      rel=\"nofollow\">https://www.linkedin.com/in/leather-s</a><br>\nSemsee — <a
      href=\"https://semsee.com/\" rel=\"nofollow\">https://semsee.com/</a></p><p>Special
      Guest: Chris Miller.</p>\n      "
  contentEncoded: "\n        <p>Today we have some extra BEAM magic for all of you!
    Joining us on the show is Chris Miller, who currently works as an Associate Software
    Engineer at Corvus Insurance. We get into a great conversation with Chris about
    his history with programming, his long-held interest in mathematics, and how he
    is trying to bring these two worlds closer together through his work. Chris weighs
    in with some very important expert perspectives on a range of subjects, from monads
    and monoids to Vim and Emacs, before we get into the different avenues of Chris&#39;
    work. Along with an old college friend, Chris runs the informative YouTube Channel,
    Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual,
    speaking Mandarin, Spanish, German, and English! We get some illumination on interesting
    and important concepts such as Turing completeness, programming language theory,
    and more, all delivered with an accessibility that belies the high level of the
    material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney
    Leatherwood, at the end, be sure to listen in today!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>The story behind Chris&#39; Twitter handle and
    his admiration for Leonhard Euler! </li>\n<li>How Chris is bringing his love of
    math into his programming work. </li>\n<li>A crash course on monads and monoids!
    </li>\n<li>Chris&#39; teaching and tutoring work and his aim of bringing fun examples
    into learning. </li>\n<li>The YouTube channel that Chris runs with an old friend,
    called Coding Cave. </li>\n<li>Chris&#39; take on the Vim versus Emacs debate.</li>\n<li>How
    Chris learned to program from his father, and his return to it during college.
    </li>\n<li>Unpacking programming language theory and the idea of Turing completeness.
    </li>\n<li>Chris clears up the difference between computer science and mathematics.</li>\n<li>Reasons
    that Chris enjoys working in Elixir compared with other languages.<br></li>\n<li>Chris&#39;
    goals for his YouTube channel and his hopes to spread advanced education. </li>\n<li>Magic
    and languages; a programming language theory perspective. </li>\n<li>Chris&#39;
    day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>\n<li>The
    array of languages that Chris can speak; Mandarin, German, and Spanish. </li>\n<li>The
    process of language acquisition and Chris&#39; methods for learning. </li>\n<li>Why
    Chris believes starting with the function is the best way to learn a new programming
    language. </li>\n<li>The aspects of Elixir and the BEAM that have Chris the most
    excited at the moment! </li>\n<li>This week&#39;s mini-feature with Sidney Leatherwood
    and his use of Elixir in production.</li>\n<li>The comparative rating service
    that Semsee offers their customers.</li>\n<li>Hiring in Elixir currently; perks,
    challenges, and resources in the space. </li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nChris Miller on Twitter — <a href=\"https://twitter.com/blackeuler\" rel=\"nofollow\">https://twitter.com/blackeuler</a><br>\nElixir
    Wizard Conference — <a href=\"http://smr.tl/conf-podcast\" rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nLeonhard
    Euler — <a href=\"https://en.wikipedia.org/wiki/Leonhard_Euler\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>\nCurry–Howard
    Correspondence — <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nBrooklyn
    Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nCoding
    Cave — <a href=\"https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g\" rel=\"nofollow\">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>\nConversations
    with the Creator: José Valim — <a href=\"https://www.youtube.com/watch?v=BXpoKKkqAX4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>\nFunctor
    — <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Functor</a><br>\nSpacemacs:
    Emacs advanced Kit focused on Evil — <a href=\"https://www.spacemacs.org/\" rel=\"nofollow\">https://www.spacemacs.org/</a><br>\nhlissner/doom-emacs
    — <a href=\"https://github.com/hlissner/doom-emacs\" rel=\"nofollow\">https://github.com/hlissner/doom-emacs</a><br>\nTuring
    Completeness — <a href=\"https://en.wikipedia.org/wiki/Turing_completeness\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Turing_completeness</a><br>\nCal
    Newport — <a href=\"https://www.calnewport.com/\" rel=\"nofollow\">https://www.calnewport.com/</a><br>\nBoolean
    Algebra — <a href=\"https://en.wikipedia.org/wiki/Boolean_algebra\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nCorvus
    Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nAPL
    — <a href=\"https://en.wikipedia.org/wiki/APL_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>\nGleam
    - <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nSidney
    Leatherwood on LinkedIn — <a href=\"https://www.linkedin.com/in/leather-s\" rel=\"nofollow\">https://www.linkedin.com/in/leather-s</a><br>\nSemsee
    — <a href=\"https://semsee.com/\" rel=\"nofollow\">https://semsee.com/</a></p><p>Special
    Guest: Chris Miller.</p>\n      "
- title: The Controlled Magic of Oban with Parker and Shannon Selbert
  slug: s6e3-selbert
  link: https://smartlogic.io/podcast/elixir-wizards/s6e3-selbert
  guid: 943755c0-4bf5-4c89-949c-44406ea58584
  pubDate: Thu, 20 May 2021 06:00:00 -0400
  pubDateFriendly: May 20, 2021
  description: "While there is magic to be found in many frameworks, having too much
    going on under the hood without you being able to control it is not for everybody.
    Today we invite Parker and Shannon Selbert to speak about their dynamic partnership
    and the ‘controlled magic’ of their tool Oban. Together Parker and Shannon founded
    Soren, where they help clients with established web apps stabilize, scale, and
    ‘add schmancy features’. Their tool Oban is a persistent background job processor
    written in Elixir whose differentiating feature revolves around keeping jobs after
    they're processed. We dive right in with Parker and Shannon hearing about how
    they got into programming before they talk about Oban and what sets it apart.
    Next up we get into how our guests navigate their personal relationship and professional
    partnership and they weigh in on homeschooling kids, writing new features, and
    the necessary life skills for handling Oban user support. Moving onto the topic
    of the BEAM, we explore the unique type of magic it offers and how this plays
    into some of the cooler features of Oban such as being able to cancel jobs. Our
    guests talk about some of the kinks they still need to work out of their tool
    and we wrap up our conversation on the pro version of Oban and how successful
    it has been. As always we close today’s show off with our mini-interview, this
    time with Joe Peck from Spreedly!\nKey Points From This Episode:\nThe illicit
    stories behind how Parker and Shannon got into tech.\nUnderstanding Oban, a persistent
    background job processor written in Elixir.\nHow Oban is different from other
    job processors like Sidekiq.\nThe great partnership our guests have and the story
    behind Soren.\nHow Parker and Shannon differentiate their personal and professional
    life.\nThe approach Parker and Shannon take to handling Oban user support.\nPerspectives
    on the magic of homeschooling, relationships, and Oban!\nDifferent kinds of magic
    provided by different frameworks and why Elixir magic is the best.\nHow Parker
    and Shannon got interested in Erlang, BEAM, and Elixir.\nThe best part about maintaining
    an open-source project.\nThe story behind getting a global concurrency lock on
    handling batches.\nAdded features that come with upgrading to the pro version
    of Oban.\nCanceling a job on Oban and the role the BEAM plays in allowing this.\nWriting
    documentation for Oban and our guest’s plans to make video tutorials.\nThe shift
    in digital learning more towards video tutorials.\nPerspectives on whether we
    have arrived at a golden age in computing yet.\nChallenges around implementing
    seamless horizontal scaling in Oban.\nMaking a living and working on Oban; advantages
    of setting up a pro version.\nOur mini-interview with Joe Peck where we explore
    his journey with Elixir.\nLinks Mentioned in Today’s Episode:\nElixir Wizards
    |> Conference — https://smr.tl/conf-podcast\nSmartLogic — https://smartlogic.io/
    \nSoren on Twitter — https://twitter.com/sorentwo?lang=en\nSoren — https://sorentwo.com/\nParker
    Selbert on GitHub — https://github.com/sorentwo\nShannon Selbert on GitHub — https://github.com/sorenone\nOban
    — https://github.com/sorentwo/oban\nSidekiq — https://sidekiq.org/\nLawnmower
    Man — https://www.imdb.com/title/tt0104692/\nSoren Kierkegaard — https://www.britannica.com/biography/Soren-Kierkegaard\nEnder's
    Game — https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\nJoe
    Peck  — https://peckyeah.com/\nSpreedly — https://www.spreedly.com/\n Special
    Guests: Parker Selbert and Shannon Selbert.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+QjkFjeck
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/943755c0-4bf5-4c89-949c-44406ea58584.mp3
    length: '43252983'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While there is magic to be found in many frameworks, having too much
      going on without being able to control it is not for everybody. Today Parker
      and Shannon Selbert talk about their dynamic partnership and the ‘controlled
      magic’ of their tool Oban.
    duration: '50:21'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/943755c0-4bf5-4c89-949c-44406ea58584/cover.jpg?v=3
    summary: "\n        <p>While there is magic to be found in many frameworks, having
      too much going on under the hood without you being able to control it is not
      for everybody. Today we invite Parker and Shannon Selbert to speak about their
      dynamic partnership and the ‘controlled magic’ of their tool Oban. Together
      Parker and Shannon founded Soren, where they help clients with established web
      apps stabilize, scale, and ‘add schmancy features’. Their tool Oban is a persistent
      background job processor written in Elixir whose differentiating feature revolves
      around keeping jobs after they&#39;re processed. We dive right in with Parker
      and Shannon hearing about how they got into programming before they talk about
      Oban and what sets it apart. Next up we get into how our guests navigate their
      personal relationship and professional partnership and they weigh in on homeschooling
      kids, writing new features, and the necessary life skills for handling Oban
      user support. Moving onto the topic of the BEAM, we explore the unique type
      of magic it offers and how this plays into some of the cooler features of Oban
      such as being able to cancel jobs. Our guests talk about some of the kinks they
      still need to work out of their tool and we wrap up our conversation on the
      pro version of Oban and how successful it has been. As always we close today’s
      show off with our mini-interview, this time with Joe Peck from Spreedly!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>The illicit stories behind how Parker
      and Shannon got into tech.</li>\n<li>Understanding Oban, a persistent background
      job processor written in Elixir.</li>\n<li>How Oban is different from other
      job processors like Sidekiq.</li>\n<li>The great partnership our guests have
      and the story behind Soren.</li>\n<li>How Parker and Shannon differentiate their
      personal and professional life.</li>\n<li>The approach Parker and Shannon take
      to handling Oban user support.</li>\n<li>Perspectives on the magic of homeschooling,
      relationships, and Oban!</li>\n<li>Different kinds of magic provided by different
      frameworks and why Elixir magic is the best.</li>\n<li>How Parker and Shannon
      got interested in Erlang, BEAM, and Elixir.</li>\n<li>The best part about maintaining
      an open-source project.</li>\n<li>The story behind getting a global concurrency
      lock on handling batches.</li>\n<li>Added features that come with upgrading
      to the pro version of Oban.</li>\n<li>Canceling a job on Oban and the role the
      BEAM plays in allowing this.</li>\n<li>Writing documentation for Oban and our
      guest’s plans to make video tutorials.</li>\n<li>The shift in digital learning
      more towards video tutorials.</li>\n<li>Perspectives on whether we have arrived
      at a golden age in computing yet.</li>\n<li>Challenges around implementing seamless
      horizontal scaling in Oban.</li>\n<li>Making a living and working on Oban; advantages
      of setting up a pro version.</li>\n<li>Our mini-interview with Joe Peck where
      we explore his journey with Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Elixir Wizards |&gt; Conference — <a href=\"https://smr.tl/conf-podcast\"
      rel=\"nofollow\">https://smr.tl/conf-podcast</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSoren on Twitter — <a href=\"https://twitter.com/sorentwo?lang=en\"
      rel=\"nofollow\">https://twitter.com/sorentwo?lang=en</a><br>\nSoren — <a href=\"https://sorentwo.com/\"
      rel=\"nofollow\">https://sorentwo.com/</a><br>\nParker Selbert on GitHub — <a
      href=\"https://github.com/sorentwo\" rel=\"nofollow\">https://github.com/sorentwo</a><br>\nShannon
      Selbert on GitHub — <a href=\"https://github.com/sorenone\" rel=\"nofollow\">https://github.com/sorenone</a><br>\nOban
      — <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a><br>\nSidekiq
      — <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a><br>\nLawnmower
      Man — <a href=\"https://www.imdb.com/title/tt0104692/\" rel=\"nofollow\">https://www.imdb.com/title/tt0104692/</a><br>\nSoren
      Kierkegaard — <a href=\"https://www.britannica.com/biography/Soren-Kierkegaard\"
      rel=\"nofollow\">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>\nEnder&#39;s
      Game — <a href=\"https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\"
      rel=\"nofollow\">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>\nJoe
      Peck  — <a href=\"https://peckyeah.com/\" rel=\"nofollow\">https://peckyeah.com/</a><br>\nSpreedly
      — <a href=\"https://www.spreedly.com/\" rel=\"nofollow\">https://www.spreedly.com/</a></p><p>Special
      Guests: Parker Selbert and Shannon Selbert.</p>\n      "
  contentEncoded: "\n        <p>While there is magic to be found in many frameworks,
    having too much going on under the hood without you being able to control it is
    not for everybody. Today we invite Parker and Shannon Selbert to speak about their
    dynamic partnership and the ‘controlled magic’ of their tool Oban. Together Parker
    and Shannon founded Soren, where they help clients with established web apps stabilize,
    scale, and ‘add schmancy features’. Their tool Oban is a persistent background
    job processor written in Elixir whose differentiating feature revolves around
    keeping jobs after they&#39;re processed. We dive right in with Parker and Shannon
    hearing about how they got into programming before they talk about Oban and what
    sets it apart. Next up we get into how our guests navigate their personal relationship
    and professional partnership and they weigh in on homeschooling kids, writing
    new features, and the necessary life skills for handling Oban user support. Moving
    onto the topic of the BEAM, we explore the unique type of magic it offers and
    how this plays into some of the cooler features of Oban such as being able to
    cancel jobs. Our guests talk about some of the kinks they still need to work out
    of their tool and we wrap up our conversation on the pro version of Oban and how
    successful it has been. As always we close today’s show off with our mini-interview,
    this time with Joe Peck from Spreedly!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    illicit stories behind how Parker and Shannon got into tech.</li>\n<li>Understanding
    Oban, a persistent background job processor written in Elixir.</li>\n<li>How Oban
    is different from other job processors like Sidekiq.</li>\n<li>The great partnership
    our guests have and the story behind Soren.</li>\n<li>How Parker and Shannon differentiate
    their personal and professional life.</li>\n<li>The approach Parker and Shannon
    take to handling Oban user support.</li>\n<li>Perspectives on the magic of homeschooling,
    relationships, and Oban!</li>\n<li>Different kinds of magic provided by different
    frameworks and why Elixir magic is the best.</li>\n<li>How Parker and Shannon
    got interested in Erlang, BEAM, and Elixir.</li>\n<li>The best part about maintaining
    an open-source project.</li>\n<li>The story behind getting a global concurrency
    lock on handling batches.</li>\n<li>Added features that come with upgrading to
    the pro version of Oban.</li>\n<li>Canceling a job on Oban and the role the BEAM
    plays in allowing this.</li>\n<li>Writing documentation for Oban and our guest’s
    plans to make video tutorials.</li>\n<li>The shift in digital learning more towards
    video tutorials.</li>\n<li>Perspectives on whether we have arrived at a golden
    age in computing yet.</li>\n<li>Challenges around implementing seamless horizontal
    scaling in Oban.</li>\n<li>Making a living and working on Oban; advantages of
    setting up a pro version.</li>\n<li>Our mini-interview with Joe Peck where we
    explore his journey with Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Elixir Wizards |&gt; Conference — <a href=\"https://smr.tl/conf-podcast\"
    rel=\"nofollow\">https://smr.tl/conf-podcast</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSoren on Twitter — <a href=\"https://twitter.com/sorentwo?lang=en\"
    rel=\"nofollow\">https://twitter.com/sorentwo?lang=en</a><br>\nSoren — <a href=\"https://sorentwo.com/\"
    rel=\"nofollow\">https://sorentwo.com/</a><br>\nParker Selbert on GitHub — <a
    href=\"https://github.com/sorentwo\" rel=\"nofollow\">https://github.com/sorentwo</a><br>\nShannon
    Selbert on GitHub — <a href=\"https://github.com/sorenone\" rel=\"nofollow\">https://github.com/sorenone</a><br>\nOban
    — <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a><br>\nSidekiq
    — <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a><br>\nLawnmower
    Man — <a href=\"https://www.imdb.com/title/tt0104692/\" rel=\"nofollow\">https://www.imdb.com/title/tt0104692/</a><br>\nSoren
    Kierkegaard — <a href=\"https://www.britannica.com/biography/Soren-Kierkegaard\"
    rel=\"nofollow\">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>\nEnder&#39;s
    Game — <a href=\"https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\"
    rel=\"nofollow\">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>\nJoe
    Peck  — <a href=\"https://peckyeah.com/\" rel=\"nofollow\">https://peckyeah.com/</a><br>\nSpreedly
    — <a href=\"https://www.spreedly.com/\" rel=\"nofollow\">https://www.spreedly.com/</a></p><p>Special
    Guests: Parker Selbert and Shannon Selbert.</p>\n      "
- title: The Right Amount of Magic with Erik Person
  slug: s6e2-person
  link: https://smartlogic.io/podcast/elixir-wizards/s6e2-person
  guid: f1486983-1421-45be-87ae-99a0a56ec848
  pubDate: Thu, 13 May 2021 06:00:00 -0400
  pubDateFriendly: May 13, 2021
  description: "Today we are joined by the Vice President of Engineering at Corvus
    Insurance, Erik Person! Erik continues our journey into the magic of the BEAM,
    our season-long theme for the Elixir Wizards Podcast, and we get to hear all about
    Erik's path in programming, his relationship with Elixir, and his utilization
    of the BEAM. Growing up in a family involved in computer science, and an early
    affinity for technology made the choice of what to study at college a straightforward
    one for Erik. He tells us about his life during and after those school years,
    touching on his first job and the important milestones leading up to his current
    position at Corvus. We talk about his early feelings for Elixir and why it appealed
    to him almost immediately before discussing different languages on the BEAM and
    his love of types! Our guest also shares some of the bigger challenges he has
    encountered working in Elixir and touches on the issue of scaling effectively.
    In this episode, we also air a mini-feature with SmartLogic's very own Stephanie
    Vizzi, talking about her work at the company, relationship with Elixir, and more!
    So for all this, plus a lot in between, be sure to tune in!\nKey Points From This
    Episode:\nErik's family ties to computer science and his path leading into programming.
    \nThe first job that Erik landed in programming and his current role at Corvus
    Insurance.\nThe BEAM at Corvus and the general architecture of the company's technology.
    \nErik's first encounters and learnings with Elixir and the questions it answered
    for him immediately.\nThe learning curve for languages on The BEAM; Erik's own
    journey to understanding.\nErik's preference for types and his wish for their
    inclusion on Elixir!\nLisp on The BEAM; Erik unpacks his perspectives and the
    blog post he wrote on the subject. \nGetting to grips with abstract forms and
    how these terms operate in Erlang and Elixir. \nThe challenges that Erik experienced
    parsing and manipulating the code in Elixir.  \nErik weighs in on BEAM magic;
    appreciating the magic that is possible with Elixir and Elm. \nPerspectives on
    scaling on Elm and Elixir as an application grows rapidly.\nHow Erik and his team
    typically use contexts and service-oriented architecture.\nChallenges with compile
    times during the process of scaling of the application.\nExcitement about the
    progressive steps in the data science component of Corvus. \nHow Erik applied
    his skills to his passion for playing blackjack by creating a card-counting application.
    \nThe remote meeting hardware device that Erik built as a pandemic side-project!
    \nThis week's community mini-feature! Looking at how Stephanie Vizzi got into
    and uses Elixir.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nErik Person on LinkedIn — https://www.linkedin.com/in/erik-person-a9368bb\nVirtualBox
    — https://www.virtualbox.org/\nTunnelblick — https://tunnelblick.net/\nCorvus
    Insurance — https://www.corvusinsurance.com/\nCorvus Job Openings — https://boards.greenhouse.io/corvusinsurance/\nClojure
    — https://clojure.org/\nSaša Jurić — https://github.com/sasa1977\nLFE — https://lfe.io/\nElm
    — https://elm-lang.org/\nRobert Virding — https://codesync.global/speaker/robert-virding/\nThe
    Erlang Rationale — https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\nPaul
    Graham — http://www.paulgraham.com/\nHackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nMyers
    Briggs — https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\nChris
    McCord — http://chrismccord.com/\nMix Xref — https://hexdocs.pm/mix/Mix.Tasks.Xref.html\nGleam
    — https://gleam.run/\nLeex — http://erlang.org/doc/man/leex.html\nGNU Bison -
    The Yacc-compatible Parser Generator — https://www.gnu.org/software/bison/manual/\nYACC
    — https://www.geeksforgeeks.org/introduction-to-yacc/\nStephanie Vizzi on LinkedIn
    — https://www.linkedin.com/in/stephanie-vizzi-b1158996 Special Guests: Erik Person
    and Stephanie Vizzi.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KnojL5Gf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f1486983-1421-45be-87ae-99a0a56ec848.mp3
    length: '58315913'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today, Erik Person continues our journey into the magic of the BEAM
      and we get to hear all about his path in programming, his relationship with
      Elixir, and his utilization of the BEAM. We also have a mini-feature with SmartLogic's
      very own Stephanie Vizzi, talking about her work, relationship with Elixir,
      and more!
    duration: '1:00:41'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f1486983-1421-45be-87ae-99a0a56ec848/cover.jpg?v=1
    summary: "\n        <p>Today we are joined by the Vice President of Engineering
      at Corvus Insurance, Erik Person! Erik continues our journey into the magic
      of the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get
      to hear all about Erik&#39;s path in programming, his relationship with Elixir,
      and his utilization of the BEAM. Growing up in a family involved in computer
      science, and an early affinity for technology made the choice of what to study
      at college a straightforward one for Erik. He tells us about his life during
      and after those school years, touching on his first job and the important milestones
      leading up to his current position at Corvus. We talk about his early feelings
      for Elixir and why it appealed to him almost immediately before discussing different
      languages on the BEAM and his love of types! Our guest also shares some of the
      bigger challenges he has encountered working in Elixir and touches on the issue
      of scaling effectively. In this episode, we also air a mini-feature with SmartLogic&#39;s
      very own Stephanie Vizzi, talking about her work at the company, relationship
      with Elixir, and more! So for all this, plus a lot in between, be sure to tune
      in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Erik&#39;s family
      ties to computer science and his path leading into programming. </li>\n<li>The
      first job that Erik landed in programming and his current role at Corvus Insurance.</li>\n<li>The
      BEAM at Corvus and the general architecture of the company&#39;s technology.
      </li>\n<li>Erik&#39;s first encounters and learnings with Elixir and the questions
      it answered for him immediately.</li>\n<li>The learning curve for languages
      on The BEAM; Erik&#39;s own journey to understanding.</li>\n<li>Erik&#39;s preference
      for types and his wish for their inclusion on Elixir!</li>\n<li>Lisp on The
      BEAM; Erik unpacks his perspectives and the blog post he wrote on the subject.
      </li>\n<li>Getting to grips with abstract forms and how these terms operate
      in Erlang and Elixir. </li>\n<li>The challenges that Erik experienced parsing
      and manipulating the code in Elixir.<br></li>\n<li>Erik weighs in on BEAM magic;
      appreciating the magic that is possible with Elixir and Elm. </li>\n<li>Perspectives
      on scaling on Elm and Elixir as an application grows rapidly.</li>\n<li>How
      Erik and his team typically use contexts and service-oriented architecture.</li>\n<li>Challenges
      with compile times during the process of scaling of the application.</li>\n<li>Excitement
      about the progressive steps in the data science component of Corvus. </li>\n<li>How
      Erik applied his skills to his passion for playing blackjack by creating a card-counting
      application. </li>\n<li>The remote meeting hardware device that Erik built as
      a pandemic side-project! </li>\n<li>This week&#39;s community mini-feature!
      Looking at how Stephanie Vizzi got into and uses Elixir.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nErik Person on LinkedIn —
      <a href=\"https://www.linkedin.com/in/erik-person-a9368bb\" rel=\"nofollow\">https://www.linkedin.com/in/erik-person-a9368bb</a><br>\nVirtualBox
      — <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">https://www.virtualbox.org/</a><br>\nTunnelblick
      — <a href=\"https://tunnelblick.net/\" rel=\"nofollow\">https://tunnelblick.net/</a><br>\nCorvus
      Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nCorvus
      Job Openings — <a href=\"https://boards.greenhouse.io/corvusinsurance/\" rel=\"nofollow\">https://boards.greenhouse.io/corvusinsurance/</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nSaša
      Jurić — <a href=\"https://github.com/sasa1977\" rel=\"nofollow\">https://github.com/sasa1977</a><br>\nLFE
      — <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nElm
      — <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nRobert
      Virding — <a href=\"https://codesync.global/speaker/robert-virding/\" rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nThe
      Erlang Rationale — <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
      rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
      and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nMyers
      Briggs — <a href=\"https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\"
      rel=\"nofollow\">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nMix
      Xref — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Xref.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLeex
      — <a href=\"http://erlang.org/doc/man/leex.html\" rel=\"nofollow\">http://erlang.org/doc/man/leex.html</a><br>\nGNU
      Bison - The Yacc-compatible Parser Generator — <a href=\"https://www.gnu.org/software/bison/manual/\"
      rel=\"nofollow\">https://www.gnu.org/software/bison/manual/</a><br>\nYACC —
      <a href=\"https://www.geeksforgeeks.org/introduction-to-yacc/\" rel=\"nofollow\">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>\nStephanie
      Vizzi on LinkedIn — <a href=\"https://www.linkedin.com/in/stephanie-vizzi-b1158996\"
      rel=\"nofollow\">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special
      Guests: Erik Person and Stephanie Vizzi.</p>\n      "
  contentEncoded: "\n        <p>Today we are joined by the Vice President of Engineering
    at Corvus Insurance, Erik Person! Erik continues our journey into the magic of
    the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get to
    hear all about Erik&#39;s path in programming, his relationship with Elixir, and
    his utilization of the BEAM. Growing up in a family involved in computer science,
    and an early affinity for technology made the choice of what to study at college
    a straightforward one for Erik. He tells us about his life during and after those
    school years, touching on his first job and the important milestones leading up
    to his current position at Corvus. We talk about his early feelings for Elixir
    and why it appealed to him almost immediately before discussing different languages
    on the BEAM and his love of types! Our guest also shares some of the bigger challenges
    he has encountered working in Elixir and touches on the issue of scaling effectively.
    In this episode, we also air a mini-feature with SmartLogic&#39;s very own Stephanie
    Vizzi, talking about her work at the company, relationship with Elixir, and more!
    So for all this, plus a lot in between, be sure to tune in!</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Erik&#39;s family ties to computer science
    and his path leading into programming. </li>\n<li>The first job that Erik landed
    in programming and his current role at Corvus Insurance.</li>\n<li>The BEAM at
    Corvus and the general architecture of the company&#39;s technology. </li>\n<li>Erik&#39;s
    first encounters and learnings with Elixir and the questions it answered for him
    immediately.</li>\n<li>The learning curve for languages on The BEAM; Erik&#39;s
    own journey to understanding.</li>\n<li>Erik&#39;s preference for types and his
    wish for their inclusion on Elixir!</li>\n<li>Lisp on The BEAM; Erik unpacks his
    perspectives and the blog post he wrote on the subject. </li>\n<li>Getting to
    grips with abstract forms and how these terms operate in Erlang and Elixir. </li>\n<li>The
    challenges that Erik experienced parsing and manipulating the code in Elixir.<br></li>\n<li>Erik
    weighs in on BEAM magic; appreciating the magic that is possible with Elixir and
    Elm. </li>\n<li>Perspectives on scaling on Elm and Elixir as an application grows
    rapidly.</li>\n<li>How Erik and his team typically use contexts and service-oriented
    architecture.</li>\n<li>Challenges with compile times during the process of scaling
    of the application.</li>\n<li>Excitement about the progressive steps in the data
    science component of Corvus. </li>\n<li>How Erik applied his skills to his passion
    for playing blackjack by creating a card-counting application. </li>\n<li>The
    remote meeting hardware device that Erik built as a pandemic side-project! </li>\n<li>This
    week&#39;s community mini-feature! Looking at how Stephanie Vizzi got into and
    uses Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nErik Person on LinkedIn — <a href=\"https://www.linkedin.com/in/erik-person-a9368bb\"
    rel=\"nofollow\">https://www.linkedin.com/in/erik-person-a9368bb</a><br>\nVirtualBox
    — <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">https://www.virtualbox.org/</a><br>\nTunnelblick
    — <a href=\"https://tunnelblick.net/\" rel=\"nofollow\">https://tunnelblick.net/</a><br>\nCorvus
    Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nCorvus
    Job Openings — <a href=\"https://boards.greenhouse.io/corvusinsurance/\" rel=\"nofollow\">https://boards.greenhouse.io/corvusinsurance/</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nSaša
    Jurić — <a href=\"https://github.com/sasa1977\" rel=\"nofollow\">https://github.com/sasa1977</a><br>\nLFE
    — <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nElm —
    <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nRobert
    Virding — <a href=\"https://codesync.global/speaker/robert-virding/\" rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nThe
    Erlang Rationale — <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
    rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
    and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nMyers
    Briggs — <a href=\"https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\"
    rel=\"nofollow\">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nMix
    Xref — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Xref.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLeex
    — <a href=\"http://erlang.org/doc/man/leex.html\" rel=\"nofollow\">http://erlang.org/doc/man/leex.html</a><br>\nGNU
    Bison - The Yacc-compatible Parser Generator — <a href=\"https://www.gnu.org/software/bison/manual/\"
    rel=\"nofollow\">https://www.gnu.org/software/bison/manual/</a><br>\nYACC — <a
    href=\"https://www.geeksforgeeks.org/introduction-to-yacc/\" rel=\"nofollow\">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>\nStephanie
    Vizzi on LinkedIn — <a href=\"https://www.linkedin.com/in/stephanie-vizzi-b1158996\"
    rel=\"nofollow\">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special
    Guests: Erik Person and Stephanie Vizzi.</p>\n      "
- title: Robert Virding on the Roots of Erlang
  slug: s6e1-virding
  link: https://smartlogic.io/podcast/elixir-wizards/s6e1-virding
  guid: 10914181-66e0-4200-b6c8-260bee7e32bd
  pubDate: Thu, 06 May 2021 06:00:00 -0400
  pubDateFriendly: May  6, 2021
  description: "Welcome to a brand-spanking-new season of Elixir Wizards! This time
    around we will be focussing on the magic of the BEAM, so get ready for an exciting
    journey into new territories filled with mystery and power! To kick things off
    in this inaugural episode we are joined by a true legend in the space of Erlang,
    Elixir, and the BEAM. Robert Virding is one of the three founding members of Erlang,
    and his unrivaled intimacy with the language and its related subjects is truly
    inspiring and informative. We feel like we could fill many more episodes just
    hearing Robert unpack the history he has been involved in, but we do manage to
    cover a lot in this show, touching on Robert's career arcs, the other founders
    of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much
    more. Robert also shares some insight into the BEAM and the idea of a virtual
    machine, broaching these sometimes misunderstood concepts with simplicity and
    clarity. We talk about magic, hurdles, best practices, and the future of community,
    with Robert sharing his experiences working on Erlog, LFE, and much more. Make
    sure to join us for this episode and stay tuned for the rest of another great
    season!\nKey Points From This Episode:\nRobert's description of the Erlang Rationale
    document and why it was important to create it. \nBackground information on the
    founding three members of Erlang and how they came together. \nTraining and early
    career as a computer scientist; Robert's background before Ericsson. \nThe roots
    of the Erlang name, and how Robert first came across and connected with it. \nThe
    simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! \nUnpacking
    the application of a virtual machine and the connection between Erlang and BEAM.\nInformation
    on Core Erlang and how it works within the compiler.\nLFE or Lisp-Flavored Erlang
    and the decisions that were made to keep it straightforward. \nHurdles to learning
    Erlang and Robert's thoughts on getting over these. \nWeighing the usefulness
    of 'magic' and the caution with which Robert approaches it. \nBest practices for
    Erlang and Elixir according to Robert; the biggest shifts necessary for success.\nRobert's
    first feelings about the arrival of Elixir and the questions it raised for him.
    \nThe motivation behind Robert's work on Erlog! \nReflections on the Erlang movies
    that Ericsson produced and their evolution over time! \nThe future of Erlang,
    its community, and the need for continued and increased collaboration. \nWhy Robert
    wants to put more parentheses back in the mix! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    - https://smartlogic.io/\nRobert Virding - https://codesync.global/speaker/robert-virding/\nRobert
    Viriding on Twitter - https://twitter.com/rvirding?lang=en\nThe Erlang Rationale
    - https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\nProlog
    - https://www.swi-prolog.org/\nEricsson - https://www.ericsson.com/\nJoe Armstrong
    - https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\nMike
    Williams - https://codesync.global/speaker/mike-williams/\nFortran - https://fortran-lang.org/\nPascal
    - http://www.pascal-programming.info/index.php\nVAX - https://www.computerhope.com/jargon/v/vax.htm\nFranz
    Lisp - https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\nAgner
    Krarup Erlang - https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\nBogumil
    Hausman - https://peoplepill.com/people/bogumil-hausman\nLFE - https://lfe.io/\nErlang
    The Abstract Format - https://erlang.org/doc/apps/erts/absform.html\nCore Erlang
    - https://blog.erlang.org/core-erlang-by-example/\nErlog - https://github.com/rvirding/erlog\nLua
    in Erlang - https://github.com/rvirding/luerl\nErlang: The Movie - https://elixirforum.com/t/erlang-the-movie/440\nMonty
    Python - http://www.montypython.com/\nErlang Ecosystem Foundation - https://erlef.org/\nA
    first look at the JIT - https://blog.erlang.org/a-first-look-at-the-jit/\nLisp
    Cycles - https://xkcd.com/297/\nCreative Assembly - https://www.creative-assembly.com/home
    \nTotal War - https://www.totalwar.com/\nWorld of Warcraft - https://worldofwarcraft.com/en-us/
    Special Guest: Robert Virding.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+W5dAvToG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10914181-66e0-4200-b6c8-260bee7e32bd.mp3
    length: '47708964'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Welcome to a new season of Elixir Wizards! This time around we will
      be focussing on the magic of the BEAM, so get ready for an exciting journey.
      To kick things off we are joined by a true legend in the space of Erlang, Elixir,
      and the BEAM, Robert Virding.
    duration: '49:38'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10914181-66e0-4200-b6c8-260bee7e32bd/cover.jpg?v=1
    summary: "\n        <p>Welcome to a brand-spanking-new season of Elixir Wizards!
      This time around we will be focussing on the magic of the BEAM, so get ready
      for an exciting journey into new territories filled with mystery and power!
      To kick things off in this inaugural episode we are joined by a true legend
      in the space of Erlang, Elixir, and the BEAM. Robert Virding is one of the three
      founding members of Erlang, and his unrivaled intimacy with the language and
      its related subjects is truly inspiring and informative. We feel like we could
      fill many more episodes just hearing Robert unpack the history he has been involved
      in, but we do manage to cover a lot in this show, touching on Robert&#39;s career
      arcs, the other founders of Erlang, the connection to Ericsson and the bridge
      to Elixir, as well as much more. Robert also shares some insight into the BEAM
      and the idea of a virtual machine, broaching these sometimes misunderstood concepts
      with simplicity and clarity. We talk about magic, hurdles, best practices, and
      the future of community, with Robert sharing his experiences working on Erlog,
      LFE, and much more. Make sure to join us for this episode and stay tuned for
      the rest of another great season!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Robert&#39;s
      description of the Erlang Rationale document and why it was important to create
      it. </li>\n<li>Background information on the founding three members of Erlang
      and how they came together. </li>\n<li>Training and early career as a computer
      scientist; Robert&#39;s background before Ericsson. </li>\n<li>The roots of
      the Erlang name, and how Robert first came across and connected with it. </li>\n<li>The
      simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>\n<li>Unpacking
      the application of a virtual machine and the connection between Erlang and BEAM.</li>\n<li>Information
      on Core Erlang and how it works within the compiler.</li>\n<li>LFE or Lisp-Flavored
      Erlang and the decisions that were made to keep it straightforward. </li>\n<li>Hurdles
      to learning Erlang and Robert&#39;s thoughts on getting over these. </li>\n<li>Weighing
      the usefulness of &#39;magic&#39; and the caution with which Robert approaches
      it. </li>\n<li>Best practices for Erlang and Elixir according to Robert; the
      biggest shifts necessary for success.</li>\n<li>Robert&#39;s first feelings
      about the arrival of Elixir and the questions it raised for him. </li>\n<li>The
      motivation behind Robert&#39;s work on Erlog! </li>\n<li>Reflections on the
      Erlang movies that Ericsson produced and their evolution over time! </li>\n<li>The
      future of Erlang, its community, and the need for continued and increased collaboration.
      </li>\n<li>Why Robert wants to put more parentheses back in the mix! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic - <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nRobert Virding - <a href=\"https://codesync.global/speaker/robert-virding/\"
      rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nRobert
      Viriding on Twitter - <a href=\"https://twitter.com/rvirding?lang=en\" rel=\"nofollow\">https://twitter.com/rvirding?lang=en</a><br>\nThe
      Erlang Rationale - <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
      rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nProlog
      - <a href=\"https://www.swi-prolog.org/\" rel=\"nofollow\">https://www.swi-prolog.org/</a><br>\nEricsson
      - <a href=\"https://www.ericsson.com/\" rel=\"nofollow\">https://www.ericsson.com/</a><br>\nJoe
      Armstrong - <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
      rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\nMike
      Williams - <a href=\"https://codesync.global/speaker/mike-williams/\" rel=\"nofollow\">https://codesync.global/speaker/mike-williams/</a><br>\nFortran
      - <a href=\"https://fortran-lang.org/\" rel=\"nofollow\">https://fortran-lang.org/</a><br>\nPascal
      - <a href=\"http://www.pascal-programming.info/index.php\" rel=\"nofollow\">http://www.pascal-programming.info/index.php</a><br>\nVAX
      - <a href=\"https://www.computerhope.com/jargon/v/vax.htm\" rel=\"nofollow\">https://www.computerhope.com/jargon/v/vax.htm</a><br>\nFranz
      Lisp - <a href=\"https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\"
      rel=\"nofollow\">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>\nAgner
      Krarup Erlang - <a href=\"https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\"
      rel=\"nofollow\">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>\nBogumil
      Hausman - <a href=\"https://peoplepill.com/people/bogumil-hausman\" rel=\"nofollow\">https://peoplepill.com/people/bogumil-hausman</a><br>\nLFE
      - <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nErlang
      The Abstract Format - <a href=\"https://erlang.org/doc/apps/erts/absform.html\"
      rel=\"nofollow\">https://erlang.org/doc/apps/erts/absform.html</a><br>\nCore
      Erlang - <a href=\"https://blog.erlang.org/core-erlang-by-example/\" rel=\"nofollow\">https://blog.erlang.org/core-erlang-by-example/</a><br>\nErlog
      - <a href=\"https://github.com/rvirding/erlog\" rel=\"nofollow\">https://github.com/rvirding/erlog</a><br>\nLua
      in Erlang - <a href=\"https://github.com/rvirding/luerl\" rel=\"nofollow\">https://github.com/rvirding/luerl</a><br>\nErlang:
      The Movie - <a href=\"https://elixirforum.com/t/erlang-the-movie/440\" rel=\"nofollow\">https://elixirforum.com/t/erlang-the-movie/440</a><br>\nMonty
      Python - <a href=\"http://www.montypython.com/\" rel=\"nofollow\">http://www.montypython.com/</a><br>\nErlang
      Ecosystem Foundation - <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nA
      first look at the JIT - <a href=\"https://blog.erlang.org/a-first-look-at-the-jit/\"
      rel=\"nofollow\">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>\nLisp
      Cycles - <a href=\"https://xkcd.com/297/\" rel=\"nofollow\">https://xkcd.com/297/</a><br>\nCreative
      Assembly - <a href=\"https://www.creative-assembly.com/home\" rel=\"nofollow\">https://www.creative-assembly.com/home</a>
      <br>\nTotal War - <a href=\"https://www.totalwar.com/\" rel=\"nofollow\">https://www.totalwar.com/</a><br>\nWorld
      of Warcraft - <a href=\"https://worldofwarcraft.com/en-us/\" rel=\"nofollow\">https://worldofwarcraft.com/en-us/</a></p><p>Special
      Guest: Robert Virding.</p>\n      "
  contentEncoded: "\n        <p>Welcome to a brand-spanking-new season of Elixir Wizards!
    This time around we will be focussing on the magic of the BEAM, so get ready for
    an exciting journey into new territories filled with mystery and power! To kick
    things off in this inaugural episode we are joined by a true legend in the space
    of Erlang, Elixir, and the BEAM. Robert Virding is one of the three founding members
    of Erlang, and his unrivaled intimacy with the language and its related subjects
    is truly inspiring and informative. We feel like we could fill many more episodes
    just hearing Robert unpack the history he has been involved in, but we do manage
    to cover a lot in this show, touching on Robert&#39;s career arcs, the other founders
    of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much
    more. Robert also shares some insight into the BEAM and the idea of a virtual
    machine, broaching these sometimes misunderstood concepts with simplicity and
    clarity. We talk about magic, hurdles, best practices, and the future of community,
    with Robert sharing his experiences working on Erlog, LFE, and much more. Make
    sure to join us for this episode and stay tuned for the rest of another great
    season!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Robert&#39;s
    description of the Erlang Rationale document and why it was important to create
    it. </li>\n<li>Background information on the founding three members of Erlang
    and how they came together. </li>\n<li>Training and early career as a computer
    scientist; Robert&#39;s background before Ericsson. </li>\n<li>The roots of the
    Erlang name, and how Robert first came across and connected with it. </li>\n<li>The
    simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>\n<li>Unpacking
    the application of a virtual machine and the connection between Erlang and BEAM.</li>\n<li>Information
    on Core Erlang and how it works within the compiler.</li>\n<li>LFE or Lisp-Flavored
    Erlang and the decisions that were made to keep it straightforward. </li>\n<li>Hurdles
    to learning Erlang and Robert&#39;s thoughts on getting over these. </li>\n<li>Weighing
    the usefulness of &#39;magic&#39; and the caution with which Robert approaches
    it. </li>\n<li>Best practices for Erlang and Elixir according to Robert; the biggest
    shifts necessary for success.</li>\n<li>Robert&#39;s first feelings about the
    arrival of Elixir and the questions it raised for him. </li>\n<li>The motivation
    behind Robert&#39;s work on Erlog! </li>\n<li>Reflections on the Erlang movies
    that Ericsson produced and their evolution over time! </li>\n<li>The future of
    Erlang, its community, and the need for continued and increased collaboration.
    </li>\n<li>Why Robert wants to put more parentheses back in the mix! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic - <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nRobert Virding - <a href=\"https://codesync.global/speaker/robert-virding/\"
    rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nRobert
    Viriding on Twitter - <a href=\"https://twitter.com/rvirding?lang=en\" rel=\"nofollow\">https://twitter.com/rvirding?lang=en</a><br>\nThe
    Erlang Rationale - <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
    rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nProlog
    - <a href=\"https://www.swi-prolog.org/\" rel=\"nofollow\">https://www.swi-prolog.org/</a><br>\nEricsson
    - <a href=\"https://www.ericsson.com/\" rel=\"nofollow\">https://www.ericsson.com/</a><br>\nJoe
    Armstrong - <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
    rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\nMike
    Williams - <a href=\"https://codesync.global/speaker/mike-williams/\" rel=\"nofollow\">https://codesync.global/speaker/mike-williams/</a><br>\nFortran
    - <a href=\"https://fortran-lang.org/\" rel=\"nofollow\">https://fortran-lang.org/</a><br>\nPascal
    - <a href=\"http://www.pascal-programming.info/index.php\" rel=\"nofollow\">http://www.pascal-programming.info/index.php</a><br>\nVAX
    - <a href=\"https://www.computerhope.com/jargon/v/vax.htm\" rel=\"nofollow\">https://www.computerhope.com/jargon/v/vax.htm</a><br>\nFranz
    Lisp - <a href=\"https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\"
    rel=\"nofollow\">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>\nAgner
    Krarup Erlang - <a href=\"https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\"
    rel=\"nofollow\">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>\nBogumil
    Hausman - <a href=\"https://peoplepill.com/people/bogumil-hausman\" rel=\"nofollow\">https://peoplepill.com/people/bogumil-hausman</a><br>\nLFE
    - <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nErlang
    The Abstract Format - <a href=\"https://erlang.org/doc/apps/erts/absform.html\"
    rel=\"nofollow\">https://erlang.org/doc/apps/erts/absform.html</a><br>\nCore Erlang
    - <a href=\"https://blog.erlang.org/core-erlang-by-example/\" rel=\"nofollow\">https://blog.erlang.org/core-erlang-by-example/</a><br>\nErlog
    - <a href=\"https://github.com/rvirding/erlog\" rel=\"nofollow\">https://github.com/rvirding/erlog</a><br>\nLua
    in Erlang - <a href=\"https://github.com/rvirding/luerl\" rel=\"nofollow\">https://github.com/rvirding/luerl</a><br>\nErlang:
    The Movie - <a href=\"https://elixirforum.com/t/erlang-the-movie/440\" rel=\"nofollow\">https://elixirforum.com/t/erlang-the-movie/440</a><br>\nMonty
    Python - <a href=\"http://www.montypython.com/\" rel=\"nofollow\">http://www.montypython.com/</a><br>\nErlang
    Ecosystem Foundation - <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nA
    first look at the JIT - <a href=\"https://blog.erlang.org/a-first-look-at-the-jit/\"
    rel=\"nofollow\">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>\nLisp
    Cycles - <a href=\"https://xkcd.com/297/\" rel=\"nofollow\">https://xkcd.com/297/</a><br>\nCreative
    Assembly - <a href=\"https://www.creative-assembly.com/home\" rel=\"nofollow\">https://www.creative-assembly.com/home</a>
    <br>\nTotal War - <a href=\"https://www.totalwar.com/\" rel=\"nofollow\">https://www.totalwar.com/</a><br>\nWorld
    of Warcraft - <a href=\"https://worldofwarcraft.com/en-us/\" rel=\"nofollow\">https://worldofwarcraft.com/en-us/</a></p><p>Special
    Guest: Robert Virding.</p>\n      "
Season 5:
- title: Adopting Elixir Finale with Sean Lewis, Anna Neyzberg, and René Föhring
  slug: s5e17-adopting-elixir-finale
  link: https://smartlogic.io/podcast/elixir-wizards/s5e17-adopting-elixir-finale
  guid: 12f603e4-7d53-4e83-baed-33e436cbf102
  pubDate: Thu, 25 Mar 2021 06:00:00 -0400
  pubDateFriendly: March 25, 2021
  description: "Season 5 ends with a bang as we welcome back Sean Lewis, Anna Neyzber,
    and René Föhring onto the show to share their journey on getting their companies
    and teams to adopt Elixir. We open our conversation with each guest sharing their
    first experiences with Elixir. After chatting about the changes that they’ve seen
    in the Elixir ecosystem, we explore Elixir’s benefits and how they’ve persuaded
    companies to make the Elixir leap. From zero downtime deployment to arguing for
    Elixir’s ability to solve immediate problems, we touch on the most convincing
    reasons for stakeholders to adopt Elixir. Following this, we unpack common Elixir
    criticisms before looking at the importance of hiring developers for their aptitude
    as well as for their skill set. Later, we discuss what we most appreciate about
    Elixir, with each guest sharing a story from producing an Elixir app. We round
    off an insightful episode by talking about Elixir accessibility and the top ways
    to train entry-level programmers. Join us as we wrap up this season for a last
    deep-dive on adopting Elixir. \nKey Points From This Episode:\nWe introduce today’s
    panel, featuring Sean Lewis, Anna Neyzberg, and René Föhring.\nHear how each guest
    discovered Elixir and what they’ve seen change in the ecosystem.\nExploring our
    guests' first Elixir projects. \nThe intersections between Elixir and cryptocurrency.\nHow
    to persuade company stakeholders to adopt Elixir. \nWhy choosing a language for
    scalability often isn’t as important as its immediate benefits.\nUnpacking common
    criticisms of Elixir adoption.\nHow a culture of learning can push your company
    in the right direction.\nAnecdotes on getting companies to adopt Elixir.\nWe touch
    on the benefits of using Elixir. \nEach guest reflects on their experiences producing
    and maintaining Elixir apps. \nHow our guests are currently using Elixir.\nUsing
    Credo to train new Elixir developers. \nAdvice on making Elixir accessible to
    entry-level coders.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nElixir
    Wizards Conference — https://smartlogic.io/about/community/elixir-wizards-conference/\nAnna
    Neyzberg on LinkedIn — https://www.linkedin.com/in/anna-neyzberg-93545316/\nAnna
    Neyzberg on Twitter — https://twitter.com/ANeyzb\nSean Lewis on LinkedIn— https://www.linkedin.com/in/sean-lewis-40375077/\nRené
    Föhring on Twitter — https://twitter.com/rrrene\nRené Föhring — https://rrrene.org/\nElixirBridge
    — http://elixirbridge.org/\nCarbon Five — https://www.carbonfive.com/\nGenesis
    Block — https://genesisblock.com/\nGenesis Block Jobs — https://genesisblock.com/jobs\nCredo
    on GitHub — https://github.com/rrrene/credo/\nElixirConf 2018 — https://elixirconf.com/2018\nEthereumex
    — https://hex.pm/packages/ethereumex\nMana — https://github.com/mana-ethereum/mana\nRobinhood
    — https://robinhood.com/us/en/\nSlack — https://slack.com/\nPagerDuty — https://www.pagerduty.com/\nAlexandra
    Episode — https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\nTuring
    — https://turing.io/\nWeedmaps — https://weedmaps.com/\nNav Inc. — https://www.nav.com/\nElixirStatus
    — https://elixirstatus.com/\nDivvy — https://getdivvy.com/\nMatt Mills — https://github.com/photomattmills\nFactorio
    — https://factorio.com/\nDyson Sphere Program — https://store.steampowered.com/app/1366540/DysonSphereProgram/
    Special Guests: Anna Neyzberg, René Föhring, and Sean Lewis.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+M7tEI5pR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/12f603e4-7d53-4e83-baed-33e436cbf102.mp3
    length: '59244335'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Season 5 ends with a bang as we welcome past guests Sean Lewis, Anna
      Neyzber, and René Föhring onto the show to share their journey on getting their
      companies and teams to adopt Elixir.
    duration: '1:01:39'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/12f603e4-7d53-4e83-baed-33e436cbf102/cover.jpg?v=1
    summary: "\n        <p>Season 5 ends with a bang as we welcome back Sean Lewis,
      Anna Neyzber, and René Föhring onto the show to share their journey on getting
      their companies and teams to adopt Elixir. We open our conversation with each
      guest sharing their first experiences with Elixir. After chatting about the
      changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits
      and how they’ve persuaded companies to make the Elixir leap. From zero downtime
      deployment to arguing for Elixir’s ability to solve immediate problems, we touch
      on the most convincing reasons for stakeholders to adopt Elixir. Following this,
      we unpack common Elixir criticisms before looking at the importance of hiring
      developers for their aptitude as well as for their skill set. Later, we discuss
      what we most appreciate about Elixir, with each guest sharing a story from producing
      an Elixir app. We round off an insightful episode by talking about Elixir accessibility
      and the top ways to train entry-level programmers. Join us as we wrap up this
      season for a last deep-dive on adopting Elixir. </p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>We introduce today’s panel, featuring Sean Lewis,
      Anna Neyzberg, and René Föhring.</li>\n<li>Hear how each guest discovered Elixir
      and what they’ve seen change in the ecosystem.</li>\n<li>Exploring our guests&#39;
      first Elixir projects. </li>\n<li>The intersections between Elixir and cryptocurrency.</li>\n<li>How
      to persuade company stakeholders to adopt Elixir. </li>\n<li>Why choosing a
      language for scalability often isn’t as important as its immediate benefits.</li>\n<li>Unpacking
      common criticisms of Elixir adoption.</li>\n<li>How a culture of learning can
      push your company in the right direction.</li>\n<li>Anecdotes on getting companies
      to adopt Elixir.</li>\n<li>We touch on the benefits of using Elixir. </li>\n<li>Each
      guest reflects on their experiences producing and maintaining Elixir apps. </li>\n<li>How
      our guests are currently using Elixir.</li>\n<li>Using Credo to train new Elixir
      developers. </li>\n<li>Advice on making Elixir accessible to entry-level coders.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nElixir
      Wizards Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
      rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nAnna
      Neyzberg on LinkedIn — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\"
      rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nAnna
      Neyzberg on Twitter — <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">https://twitter.com/ANeyzb</a><br>\nSean
      Lewis on LinkedIn— <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nRené
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nRené
      Föhring — <a href=\"https://rrrene.org/\" rel=\"nofollow\">https://rrrene.org/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nCarbon
      Five — <a href=\"https://www.carbonfive.com/\" rel=\"nofollow\">https://www.carbonfive.com/</a><br>\nGenesis
      Block — <a href=\"https://genesisblock.com/\" rel=\"nofollow\">https://genesisblock.com/</a><br>\nGenesis
      Block Jobs — <a href=\"https://genesisblock.com/jobs\" rel=\"nofollow\">https://genesisblock.com/jobs</a><br>\nCredo
      on GitHub — <a href=\"https://github.com/rrrene/credo/\" rel=\"nofollow\">https://github.com/rrrene/credo/</a><br>\nElixirConf
      2018 — <a href=\"https://elixirconf.com/2018\" rel=\"nofollow\">https://elixirconf.com/2018</a><br>\nEthereumex
      — <a href=\"https://hex.pm/packages/ethereumex\" rel=\"nofollow\">https://hex.pm/packages/ethereumex</a><br>\nMana
      — <a href=\"https://github.com/mana-ethereum/mana\" rel=\"nofollow\">https://github.com/mana-ethereum/mana</a><br>\nRobinhood
      — <a href=\"https://robinhood.com/us/en/\" rel=\"nofollow\">https://robinhood.com/us/en/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPagerDuty
      — <a href=\"https://www.pagerduty.com/\" rel=\"nofollow\">https://www.pagerduty.com/</a><br>\nAlexandra
      Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nNav
      Inc. — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a><br>\nElixirStatus
      — <a href=\"https://elixirstatus.com/\" rel=\"nofollow\">https://elixirstatus.com/</a><br>\nDivvy
      — <a href=\"https://getdivvy.com/\" rel=\"nofollow\">https://getdivvy.com/</a><br>\nMatt
      Mills — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nFactorio
      — <a href=\"https://factorio.com/\" rel=\"nofollow\">https://factorio.com/</a><br>\nDyson
      Sphere Program — <a href=\"https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/\"
      rel=\"nofollow\">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special
      Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>\n      "
  contentEncoded: "\n        <p>Season 5 ends with a bang as we welcome back Sean
    Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on
    getting their companies and teams to adopt Elixir. We open our conversation with
    each guest sharing their first experiences with Elixir. After chatting about the
    changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits
    and how they’ve persuaded companies to make the Elixir leap. From zero downtime
    deployment to arguing for Elixir’s ability to solve immediate problems, we touch
    on the most convincing reasons for stakeholders to adopt Elixir. Following this,
    we unpack common Elixir criticisms before looking at the importance of hiring
    developers for their aptitude as well as for their skill set. Later, we discuss
    what we most appreciate about Elixir, with each guest sharing a story from producing
    an Elixir app. We round off an insightful episode by talking about Elixir accessibility
    and the top ways to train entry-level programmers. Join us as we wrap up this
    season for a last deep-dive on adopting Elixir. </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>We introduce today’s panel, featuring Sean Lewis, Anna
    Neyzberg, and René Föhring.</li>\n<li>Hear how each guest discovered Elixir and
    what they’ve seen change in the ecosystem.</li>\n<li>Exploring our guests&#39;
    first Elixir projects. </li>\n<li>The intersections between Elixir and cryptocurrency.</li>\n<li>How
    to persuade company stakeholders to adopt Elixir. </li>\n<li>Why choosing a language
    for scalability often isn’t as important as its immediate benefits.</li>\n<li>Unpacking
    common criticisms of Elixir adoption.</li>\n<li>How a culture of learning can
    push your company in the right direction.</li>\n<li>Anecdotes on getting companies
    to adopt Elixir.</li>\n<li>We touch on the benefits of using Elixir. </li>\n<li>Each
    guest reflects on their experiences producing and maintaining Elixir apps. </li>\n<li>How
    our guests are currently using Elixir.</li>\n<li>Using Credo to train new Elixir
    developers. </li>\n<li>Advice on making Elixir accessible to entry-level coders.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nElixir
    Wizards Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
    rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nAnna
    Neyzberg on LinkedIn — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\"
    rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nAnna
    Neyzberg on Twitter — <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">https://twitter.com/ANeyzb</a><br>\nSean
    Lewis on LinkedIn— <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nRené
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nRené
    Föhring — <a href=\"https://rrrene.org/\" rel=\"nofollow\">https://rrrene.org/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nCarbon
    Five — <a href=\"https://www.carbonfive.com/\" rel=\"nofollow\">https://www.carbonfive.com/</a><br>\nGenesis
    Block — <a href=\"https://genesisblock.com/\" rel=\"nofollow\">https://genesisblock.com/</a><br>\nGenesis
    Block Jobs — <a href=\"https://genesisblock.com/jobs\" rel=\"nofollow\">https://genesisblock.com/jobs</a><br>\nCredo
    on GitHub — <a href=\"https://github.com/rrrene/credo/\" rel=\"nofollow\">https://github.com/rrrene/credo/</a><br>\nElixirConf
    2018 — <a href=\"https://elixirconf.com/2018\" rel=\"nofollow\">https://elixirconf.com/2018</a><br>\nEthereumex
    — <a href=\"https://hex.pm/packages/ethereumex\" rel=\"nofollow\">https://hex.pm/packages/ethereumex</a><br>\nMana
    — <a href=\"https://github.com/mana-ethereum/mana\" rel=\"nofollow\">https://github.com/mana-ethereum/mana</a><br>\nRobinhood
    — <a href=\"https://robinhood.com/us/en/\" rel=\"nofollow\">https://robinhood.com/us/en/</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPagerDuty
    — <a href=\"https://www.pagerduty.com/\" rel=\"nofollow\">https://www.pagerduty.com/</a><br>\nAlexandra
    Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nWeedmaps
    — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nNav
    Inc. — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a><br>\nElixirStatus
    — <a href=\"https://elixirstatus.com/\" rel=\"nofollow\">https://elixirstatus.com/</a><br>\nDivvy
    — <a href=\"https://getdivvy.com/\" rel=\"nofollow\">https://getdivvy.com/</a><br>\nMatt
    Mills — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nFactorio
    — <a href=\"https://factorio.com/\" rel=\"nofollow\">https://factorio.com/</a><br>\nDyson
    Sphere Program — <a href=\"https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/\"
    rel=\"nofollow\">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special
    Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>\n      "
- title: Jenn Gamble on Data Science, Machine Learning, and Elixir
  slug: s5e16-gamble
  link: https://smartlogic.io/podcast/elixir-wizards/s5e16-gamble
  guid: 2bb38486-078c-44b5-a40c-b2c71a50d210
  pubDate: Thu, 18 Mar 2021 06:00:00 -0400
  pubDateFriendly: March 18, 2021
  description: "The fields of data science and machine learning are moving ever faster.
    Jenn Gamble has her finger on the pulse and has become an industry expert with
    a wealth of experience to her name. As today’s guest, she dives into these rich
    and often complex topics, and she helps us boil them down into palatable nuggets
    of knowledge. We start off by asking Jenn about her current role at Very, and
    she tells us about the nature of her team and the things they’re able to achieve.
    She touches on what the language markups look like for a data science team, before
    moving onto her experiences in machine learning and data science. Delving deeper,
    Jenn tells us why it is not a necessity to have a master’s in data science, and
    why you can be well enough equipped in other senses to become proficient in the
    area. Later on, she reveals the differences between Elixir models and data science
    models. Following these detailed explanations, she furnishes listener’s minds
    with informative comments on relating the foundations of machine learning to IoT,
    using priori knowledge to add nuance to your machine learning, and how she envisions
    the future of data science. Join us today and be sure to get all this, and much
    more!\nKey Points From This Episode:\nIntroducing today’s guest, Jenn Gamble.\nJenn
    tells us about Very, an IoT engineering firm.\nHear about the data science team
    at Very.\nWe learn more on what the language markup looks like for a data science
    team.\nJenn’s experience in learning machine learning and data science.\nHear
    her five-year plan while doing her masters.\nWe ask if it’s necessary to have
    a master’s degree to be well-equipped in data science.\nThe difference between
    an Elixir model and a data science model.\nJenn elaborates on weights and intuitive
    algorithms. \nDealing with N-dimensional matrices.\nRelating the foundations of
    machine learning to IoT.\nWays to start building up an intuition around what the
    most fundamental abstractions are.\nUsing priori knowledge to add nuance to your
    machine learning.\nHow Jenn envisions the future of data science.\nHear about
    tensors and vectors.\nJenn tells us about her keynote experience at ElixirConf
    2020.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nJenn
    Gamble on Twitter – https://twitter.com/jennpgamble\nJenn Gamble on LinkedIn –
    https://www.linkedin.com/in/jenn-gamble/\nElixirConf 2020 - Keynote - Jenn Gamble
    – https://www.youtube.com/watch?v=btIvtN9wsI&abchannel=ElixirConf\nIoT – https://www.verypossible.com/careers\nVery
    – https://jobs.lever.co/verypossible\nMathWorks – https://www.mathworks.com/products/matlab.html\nCassie
    Kozykrov – https://kozyrkov.medium.com/\nLinear regression – http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\nPythagorean
    theorem – https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\nQuadratic
    equation – https://www.mathsisfun.com/algebra/quadratic-equation.html\nA priori
    and a posteriori – https://iep.utm.edu/apriori/\nTensor – https://mathworld.wolfram.com/Tensor.html\nVector
    (mathematics and physics) – https://mathinsight.org/vector_introduction\nCoursera
    – https://www.coursera.org/learn/ai-for-everyone Special Guest: Jenn Gamble.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+d_pGgf1o
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2bb38486-078c-44b5-a40c-b2c71a50d210.mp3
    length: '45782601'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: The fields of data science and machine learning are moving ever faster.  Today’s
      guest, Jenn Gamble, dives into these rich and often complex topics, and she
      helps us boil them down into palatable nuggets of knowledge.
    duration: '47:38'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2bb38486-078c-44b5-a40c-b2c71a50d210/cover.jpg?v=1
    summary: "\n        <p>The fields of data science and machine learning are moving
      ever faster. Jenn Gamble has her finger on the pulse and has become an industry
      expert with a wealth of experience to her name. As today’s guest, she dives
      into these rich and often complex topics, and she helps us boil them down into
      palatable nuggets of knowledge. We start off by asking Jenn about her current
      role at Very, and she tells us about the nature of her team and the things they’re
      able to achieve. She touches on what the language markups look like for a data
      science team, before moving onto her experiences in machine learning and data
      science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s
      in data science, and why you can be well enough equipped in other senses to
      become proficient in the area. Later on, she reveals the differences between
      Elixir models and data science models. Following these detailed explanations,
      she furnishes listener’s minds with informative comments on relating the foundations
      of machine learning to IoT, using priori knowledge to add nuance to your machine
      learning, and how she envisions the future of data science. Join us today and
      be sure to get all this, and much more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest, Jenn Gamble.</li>\n<li>Jenn tells us about Very, an IoT engineering
      firm.</li>\n<li>Hear about the data science team at Very.</li>\n<li>We learn
      more on what the language markup looks like for a data science team.</li>\n<li>Jenn’s
      experience in learning machine learning and data science.</li>\n<li>Hear her
      five-year plan while doing her masters.</li>\n<li>We ask if it’s necessary to
      have a master’s degree to be well-equipped in data science.</li>\n<li>The difference
      between an Elixir model and a data science model.</li>\n<li>Jenn elaborates
      on weights and intuitive algorithms. </li>\n<li>Dealing with N-dimensional matrices.</li>\n<li>Relating
      the foundations of machine learning to IoT.</li>\n<li>Ways to start building
      up an intuition around what the most fundamental abstractions are.</li>\n<li>Using
      priori knowledge to add nuance to your machine learning.</li>\n<li>How Jenn
      envisions the future of data science.</li>\n<li>Hear about tensors and vectors.</li>\n<li>Jenn
      tells us about her keynote experience at ElixirConf 2020.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJenn
      Gamble on Twitter – <a href=\"https://twitter.com/jennpgamble\" rel=\"nofollow\">https://twitter.com/jennpgamble</a><br>\nJenn
      Gamble on LinkedIn – <a href=\"https://www.linkedin.com/in/jenn-gamble/\" rel=\"nofollow\">https://www.linkedin.com/in/jenn-gamble/</a><br>\nElixirConf
      2020 - Keynote - Jenn Gamble – <a href=\"https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>\nIoT
      – <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a><br>\nVery
      – <a href=\"https://jobs.lever.co/verypossible\" rel=\"nofollow\">https://jobs.lever.co/verypossible</a><br>\nMathWorks
      – <a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow\">https://www.mathworks.com/products/matlab.html</a><br>\nCassie
      Kozykrov – <a href=\"https://kozyrkov.medium.com/\" rel=\"nofollow\">https://kozyrkov.medium.com/</a><br>\nLinear
      regression – <a href=\"http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\"
      rel=\"nofollow\">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>\nPythagorean
      theorem – <a href=\"https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\"
      rel=\"nofollow\">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>\nQuadratic
      equation – <a href=\"https://www.mathsisfun.com/algebra/quadratic-equation.html\"
      rel=\"nofollow\">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>\nA
      priori and a posteriori – <a href=\"https://iep.utm.edu/apriori/\" rel=\"nofollow\">https://iep.utm.edu/apriori/</a><br>\nTensor
      – <a href=\"https://mathworld.wolfram.com/Tensor.html\" rel=\"nofollow\">https://mathworld.wolfram.com/Tensor.html</a><br>\nVector
      (mathematics and physics) – <a href=\"https://mathinsight.org/vector_introduction\"
      rel=\"nofollow\">https://mathinsight.org/vector_introduction</a><br>\nCoursera
      – <a href=\"https://www.coursera.org/learn/ai-for-everyone\" rel=\"nofollow\">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special
      Guest: Jenn Gamble.</p>\n      "
  contentEncoded: "\n        <p>The fields of data science and machine learning are
    moving ever faster. Jenn Gamble has her finger on the pulse and has become an
    industry expert with a wealth of experience to her name. As today’s guest, she
    dives into these rich and often complex topics, and she helps us boil them down
    into palatable nuggets of knowledge. We start off by asking Jenn about her current
    role at Very, and she tells us about the nature of her team and the things they’re
    able to achieve. She touches on what the language markups look like for a data
    science team, before moving onto her experiences in machine learning and data
    science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s
    in data science, and why you can be well enough equipped in other senses to become
    proficient in the area. Later on, she reveals the differences between Elixir models
    and data science models. Following these detailed explanations, she furnishes
    listener’s minds with informative comments on relating the foundations of machine
    learning to IoT, using priori knowledge to add nuance to your machine learning,
    and how she envisions the future of data science. Join us today and be sure to
    get all this, and much more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    today’s guest, Jenn Gamble.</li>\n<li>Jenn tells us about Very, an IoT engineering
    firm.</li>\n<li>Hear about the data science team at Very.</li>\n<li>We learn more
    on what the language markup looks like for a data science team.</li>\n<li>Jenn’s
    experience in learning machine learning and data science.</li>\n<li>Hear her five-year
    plan while doing her masters.</li>\n<li>We ask if it’s necessary to have a master’s
    degree to be well-equipped in data science.</li>\n<li>The difference between an
    Elixir model and a data science model.</li>\n<li>Jenn elaborates on weights and
    intuitive algorithms. </li>\n<li>Dealing with N-dimensional matrices.</li>\n<li>Relating
    the foundations of machine learning to IoT.</li>\n<li>Ways to start building up
    an intuition around what the most fundamental abstractions are.</li>\n<li>Using
    priori knowledge to add nuance to your machine learning.</li>\n<li>How Jenn envisions
    the future of data science.</li>\n<li>Hear about tensors and vectors.</li>\n<li>Jenn
    tells us about her keynote experience at ElixirConf 2020.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJenn
    Gamble on Twitter – <a href=\"https://twitter.com/jennpgamble\" rel=\"nofollow\">https://twitter.com/jennpgamble</a><br>\nJenn
    Gamble on LinkedIn – <a href=\"https://www.linkedin.com/in/jenn-gamble/\" rel=\"nofollow\">https://www.linkedin.com/in/jenn-gamble/</a><br>\nElixirConf
    2020 - Keynote - Jenn Gamble – <a href=\"https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>\nIoT
    – <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a><br>\nVery
    – <a href=\"https://jobs.lever.co/verypossible\" rel=\"nofollow\">https://jobs.lever.co/verypossible</a><br>\nMathWorks
    – <a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow\">https://www.mathworks.com/products/matlab.html</a><br>\nCassie
    Kozykrov – <a href=\"https://kozyrkov.medium.com/\" rel=\"nofollow\">https://kozyrkov.medium.com/</a><br>\nLinear
    regression – <a href=\"http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\"
    rel=\"nofollow\">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>\nPythagorean
    theorem – <a href=\"https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\"
    rel=\"nofollow\">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>\nQuadratic
    equation – <a href=\"https://www.mathsisfun.com/algebra/quadratic-equation.html\"
    rel=\"nofollow\">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>\nA
    priori and a posteriori – <a href=\"https://iep.utm.edu/apriori/\" rel=\"nofollow\">https://iep.utm.edu/apriori/</a><br>\nTensor
    – <a href=\"https://mathworld.wolfram.com/Tensor.html\" rel=\"nofollow\">https://mathworld.wolfram.com/Tensor.html</a><br>\nVector
    (mathematics and physics) – <a href=\"https://mathinsight.org/vector_introduction\"
    rel=\"nofollow\">https://mathinsight.org/vector_introduction</a><br>\nCoursera
    – <a href=\"https://www.coursera.org/learn/ai-for-everyone\" rel=\"nofollow\">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special
    Guest: Jenn Gamble.</p>\n      "
- title: John Mertens on Adopting Elixir at Change.org
  slug: s5e15-mertens
  link: https://smartlogic.io/podcast/elixir-wizards/s5e15-mertens
  guid: d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f
  pubDate: Thu, 11 Mar 2021 06:00:00 -0500
  pubDateFriendly: March 11, 2021
  description: "Many organizations take an incremental approach when adopting Elixir,
    preferring to pick up its nuances by using it to work on non-essential projects.
    But not Change.org. Today we speak with Change.org Director of Engineering John
    Mertens about how his company adopted Elixir to create a business-critical app
    that handles over a billion emails per month. From building webpages on GeoCities
    to working as an IT intern at an Iowan prison, we open our conversation by exploring
    John’s coding background. After chatting about his first Elixir project, we dive
    into Change.org’s process in adopting Elixir. As John shares his insights into
    successfully integrating Elixir into your tech stack, he highlights the benefits
    provided by the language. Later, John discusses the advantages of event-driven
    architecture and how this structure makes it easier for teams to access and analyze
    data, while also making it easier to add product features. We wrap up this episode
    with John highlighting his user-centered approach to coding. Join us to hear John’s
    lessons on making the leap and adopting Elixir in large organizations.\nKey Points
    From This Episode:\nJohn shares details about his role at Change.org.\nThe story
    behind John and Change’s Elixir adoption. \nHear about John’s coding journey.\nHow
    John made an Elixir app based on spotting San Francisco tram carriages. \nInsights
    into the massive project that Change built using Elixir.\nWhy Elixir is taking
    over Change’s back-end tech stack.\nUsing Elixir to build reliable event-based
    architecture.\nExploring event-driven architecture from the perspective of Change’s
    system.\nJohn makes a compelling case for event-driven architecture. \nHow Change
    hires for Elixir roles.\nChange’s process in training their staff to code in Elixir.\nJohn
    talks about his user-centred approach to design.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/\nElixir Wizards Discord — https://smr.tl/wizards-discord\nElixir
    Wizards Email — podcast@smartlogic.io\nJohn Mertens — https://www.mertonium.com/about\nJohn
    Mertens on Twitter — https://twitter.com/mertonium\nJohn Mertens on GitHub — https://github.com/mertonium\nChange.org
    — https://www.change.org/\nChange.org Careers — https://careers.change.org/\nJosé
    Valim — https://twitter.com/josevalim\nGenStage and Flow - José Valim (Lambda
    Days 2017) — https://www.youtube.com/watch?v=XPlXNUXmcgE\nDashbit — https://dashbit.co/\nHacker
    News — https://thehackernews.com/\nPaul Graham — https://twitter.com/paulg/\nNim
    — https://nim-lang.org/\nPony — https://www.ponylang.io/\nGrax.io — https://www.grax.com/\nLogo
    — https://el.media.mit.edu/logo-foundation/whatislogo/logo_programming.html\nNerves
    — https://www.nerves-project.org/\nFlow — https://hexdocs.pm/flow/Flow.html\nElixirConf
    EU — https://www.elixirconf.eu/\nMartin Fowler — https://martinfowler.com/\n‘The
    Log: What every software engineer should know about real-time data's unifying
    abstraction’ — https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\nSalesforce
    Marketing Cloud — https://www.salesforce.com/eu/products/marketing-cloud/overview/\n‘Delivering
    social change with Elixir at Change.org’  — https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\nCode
    for America — https://www.codeforamerica.org/ Special Guest: John Mertens.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FQWjnk0B
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f.mp3
    length: '41765494'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Change.org Director of Engineering John Mertens
      about how his company adopted Elixir to create a business-critical app that
      handles over a billion emails per month.
    duration: '43:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f/cover.jpg?v=1
    summary: "\n        <p>Many organizations take an incremental approach when adopting
      Elixir, preferring to pick up its nuances by using it to work on non-essential
      projects. But not Change.org. Today we speak with Change.org Director of Engineering
      John Mertens about how his company adopted Elixir to create a business-critical
      app that handles over a billion emails per month. From building webpages on
      GeoCities to working as an IT intern at an Iowan prison, we open our conversation
      by exploring John’s coding background. After chatting about his first Elixir
      project, we dive into Change.org’s process in adopting Elixir. As John shares
      his insights into successfully integrating Elixir into your tech stack, he highlights
      the benefits provided by the language. Later, John discusses the advantages
      of event-driven architecture and how this structure makes it easier for teams
      to access and analyze data, while also making it easier to add product features.
      We wrap up this episode with John highlighting his user-centered approach to
      coding. Join us to hear John’s lessons on making the leap and adopting Elixir
      in large organizations.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>John
      shares details about his role at Change.org.</li>\n<li>The story behind John
      and Change’s Elixir adoption. </li>\n<li>Hear about John’s coding journey.</li>\n<li>How
      John made an Elixir app based on spotting San Francisco tram carriages. </li>\n<li>Insights
      into the massive project that Change built using Elixir.</li>\n<li>Why Elixir
      is taking over Change’s back-end tech stack.</li>\n<li>Using Elixir to build
      reliable event-based architecture.</li>\n<li>Exploring event-driven architecture
      from the perspective of Change’s system.</li>\n<li>John makes a compelling case
      for event-driven architecture. </li>\n<li>How Change hires for Elixir roles.</li>\n<li>Change’s
      process in training their staff to code in Elixir.</li>\n<li>John talks about
      his user-centred approach to design.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
      Wizards Discord — <a href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJohn
      Mertens — <a href=\"https://www.mertonium.com/about\" rel=\"nofollow\">https://www.mertonium.com/about</a><br>\nJohn
      Mertens on Twitter — <a href=\"https://twitter.com/mertonium\" rel=\"nofollow\">https://twitter.com/mertonium</a><br>\nJohn
      Mertens on GitHub — <a href=\"https://github.com/mertonium\" rel=\"nofollow\">https://github.com/mertonium</a><br>\nChange.org
      — <a href=\"https://www.change.org/\" rel=\"nofollow\">https://www.change.org/</a><br>\nChange.org
      Careers — <a href=\"https://careers.change.org/\" rel=\"nofollow\">https://careers.change.org/</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nGenStage
      and Flow - José Valim (Lambda Days 2017) — <a href=\"https://www.youtube.com/watch?v=XPlXNUXmcgE\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>\nDashbit
      — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHacker
      News — <a href=\"https://thehackernews.com/\" rel=\"nofollow\">https://thehackernews.com/</a><br>\nPaul
      Graham — <a href=\"https://twitter.com/paulg/\" rel=\"nofollow\">https://twitter.com/paulg/</a><br>\nNim
      — <a href=\"https://nim-lang.org/\" rel=\"nofollow\">https://nim-lang.org/</a><br>\nPony
      — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nGrax.io
      — <a href=\"https://www.grax.com/\" rel=\"nofollow\">https://www.grax.com/</a><br>\nLogo
      — <a href=\"https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html\"
      rel=\"nofollow\">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>\nNerves
      — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFlow
      — <a href=\"https://hexdocs.pm/flow/Flow.html\" rel=\"nofollow\">https://hexdocs.pm/flow/Flow.html</a><br>\nElixirConf
      EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\nMartin
      Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\n‘The
      Log: What every software engineer should know about real-time data&#39;s unifying
      abstraction’ — <a href=\"https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\"
      rel=\"nofollow\">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>\nSalesforce
      Marketing Cloud — <a href=\"https://www.salesforce.com/eu/products/marketing-cloud/overview/\"
      rel=\"nofollow\">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>\n‘Delivering
      social change with Elixir at Change.org’  — <a href=\"https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\"
      rel=\"nofollow\">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>\nCode
      for America — <a href=\"https://www.codeforamerica.org/\" rel=\"nofollow\">https://www.codeforamerica.org/</a></p><p>Special
      Guest: John Mertens.</p>\n      "
  contentEncoded: "\n        <p>Many organizations take an incremental approach when
    adopting Elixir, preferring to pick up its nuances by using it to work on non-essential
    projects. But not Change.org. Today we speak with Change.org Director of Engineering
    John Mertens about how his company adopted Elixir to create a business-critical
    app that handles over a billion emails per month. From building webpages on GeoCities
    to working as an IT intern at an Iowan prison, we open our conversation by exploring
    John’s coding background. After chatting about his first Elixir project, we dive
    into Change.org’s process in adopting Elixir. As John shares his insights into
    successfully integrating Elixir into your tech stack, he highlights the benefits
    provided by the language. Later, John discusses the advantages of event-driven
    architecture and how this structure makes it easier for teams to access and analyze
    data, while also making it easier to add product features. We wrap up this episode
    with John highlighting his user-centered approach to coding. Join us to hear John’s
    lessons on making the leap and adopting Elixir in large organizations.</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>John shares details about his role
    at Change.org.</li>\n<li>The story behind John and Change’s Elixir adoption. </li>\n<li>Hear
    about John’s coding journey.</li>\n<li>How John made an Elixir app based on spotting
    San Francisco tram carriages. </li>\n<li>Insights into the massive project that
    Change built using Elixir.</li>\n<li>Why Elixir is taking over Change’s back-end
    tech stack.</li>\n<li>Using Elixir to build reliable event-based architecture.</li>\n<li>Exploring
    event-driven architecture from the perspective of Change’s system.</li>\n<li>John
    makes a compelling case for event-driven architecture. </li>\n<li>How Change hires
    for Elixir roles.</li>\n<li>Change’s process in training their staff to code in
    Elixir.</li>\n<li>John talks about his user-centred approach to design.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJohn
    Mertens — <a href=\"https://www.mertonium.com/about\" rel=\"nofollow\">https://www.mertonium.com/about</a><br>\nJohn
    Mertens on Twitter — <a href=\"https://twitter.com/mertonium\" rel=\"nofollow\">https://twitter.com/mertonium</a><br>\nJohn
    Mertens on GitHub — <a href=\"https://github.com/mertonium\" rel=\"nofollow\">https://github.com/mertonium</a><br>\nChange.org
    — <a href=\"https://www.change.org/\" rel=\"nofollow\">https://www.change.org/</a><br>\nChange.org
    Careers — <a href=\"https://careers.change.org/\" rel=\"nofollow\">https://careers.change.org/</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nGenStage
    and Flow - José Valim (Lambda Days 2017) — <a href=\"https://www.youtube.com/watch?v=XPlXNUXmcgE\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>\nDashbit
    — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHacker
    News — <a href=\"https://thehackernews.com/\" rel=\"nofollow\">https://thehackernews.com/</a><br>\nPaul
    Graham — <a href=\"https://twitter.com/paulg/\" rel=\"nofollow\">https://twitter.com/paulg/</a><br>\nNim
    — <a href=\"https://nim-lang.org/\" rel=\"nofollow\">https://nim-lang.org/</a><br>\nPony
    — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nGrax.io
    — <a href=\"https://www.grax.com/\" rel=\"nofollow\">https://www.grax.com/</a><br>\nLogo
    — <a href=\"https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html\"
    rel=\"nofollow\">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>\nNerves
    — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFlow
    — <a href=\"https://hexdocs.pm/flow/Flow.html\" rel=\"nofollow\">https://hexdocs.pm/flow/Flow.html</a><br>\nElixirConf
    EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\nMartin
    Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\n‘The
    Log: What every software engineer should know about real-time data&#39;s unifying
    abstraction’ — <a href=\"https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\"
    rel=\"nofollow\">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>\nSalesforce
    Marketing Cloud — <a href=\"https://www.salesforce.com/eu/products/marketing-cloud/overview/\"
    rel=\"nofollow\">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>\n‘Delivering
    social change with Elixir at Change.org’  — <a href=\"https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\"
    rel=\"nofollow\">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>\nCode
    for America — <a href=\"https://www.codeforamerica.org/\" rel=\"nofollow\">https://www.codeforamerica.org/</a></p><p>Special
    Guest: John Mertens.</p>\n      "
- title: Sophie DeBenedetto on Programming Phoenix LiveView
  slug: s5e14-debenedetto
  link: https://smartlogic.io/podcast/elixir-wizards/s5e14-debenedetto
  guid: 9470edd5-3447-4d40-9f5d-aaba34126ae3
  pubDate: Thu, 04 Mar 2021 06:00:00 -0500
  pubDateFriendly: March  4, 2021
  description: "As users increasingly demand interactivity from their web experiences,
    Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications
    without a loss to reliability. Today we welcome back an old friend of the show
    and GitHub engineer Sophie DeBenedetto to talk about her upcoming book, Programming
    Phoenix LiveView. We open our conversation with Sophie by hearing about her work
    at GitHub, as well as what we can expect from the Code BEAM V conference. As she
    doesn’t always get to use Elixir at her job, Sophie then discusses how coders
    can sharpen their Elixir skills when not at work. After exploring how companies
    can begin adopting Elixir through event-driven design, we dive into Sophie’s book.
    She unpacks the value of LiveView when building efficient web applications before
    touching on how her book can best help people to learn LiveView. We ask Sophie
    how intertwined the future of Elixir is to the success of LiveView and how this
    might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir
    adoption while also making Elixir easier to learn. We wrap up our discussion by
    chatting about the challenges of technical writing and Sophie’s experience working
    with the wonderful Pragmatic Programmers publishing house. Tune in to hear more
    insights into programming LiveView; if you believe the hype, it’s “one of the
    most important new frameworks of our generation.” \nKey Points From This Episode:\nWe
    catch up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.\nSophie
    shares her feelings on coding in Go.\nHow Sophie engages with Elixir when it’s
    not a key part of her day job.\nWhat Flatiron School did to work towards Elixir
    adoption.\nExploring the concept of event-driven design.\nInsights into the eventing
    system used at GitHub.\nSophie talks about her experience as an engineering manager.
    \nWhy Sophie transitioned from being a manager to being an individual contributor.
    \nHow work-from-home has impacted meeting expectations.\nHear the elevator pitch
    for Sophie’s upcoming book.\nThoughts on how beginner-friendly Elixir is as a
    language.\nWhether Phoenix LiveView is the future of Elixir. \nHow the attention
    placed on LiveView limits access to Phoenix resources and tutorials.\nWe ask Sophie
    if LiveView will make it easier or more difficult to learn Elixir. \nAdvice on
    writing technical books and the writing support offered by Pragmatic Programmers.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir Wizards
    Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nSophie DeBenedetto on LinkedIn —
    https://www.linkedin.com/in/sophiedebenedetto/\nSophie DeBenedetto on Twitter
    — https://twitter.com/smdebenedetto\nProgramming Phoenix LiveView — https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\nBeam
    Radio — https://www.beamrad.io/\nCode BEAM V — https://codesync.global/conferences/code-beam-sto/\nBruce
    Tate — https://twitter.com/redrapids\nJosé Valim — https://twitter.com/josevalim\nNx
    — https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\nAlex
    Koutmos — https://twitter.com/akoutmos\nEMPEX — https://empex.co/nyc.html\nFlatiron
    School — https://flatironschool.com/\n‘What is the difference between Event Driven
    and Event Sourcing?’ — https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\nChris
    Keithley — https://twitter.com/chriskeathley\nGitHub — https://github.com/\nSteven
    Nuñez — https://twitter.com/StevenNunez\n‘Shipping Greenfield Elixir in a Legacy
    World’ — https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\nRuby
    on Rails Tutorial: Learn Web Development with Rails — https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\nToran
    Billups — https://twitter.com/toranb\nThe Pragmatic Programmers — https://pragprog.com/\nChris
    McCord — https://twitter.com/chris_mccord/\nDave Thomas — https://twitter.com/pragdave/\nAndy
    Hunt — https://twitter.com/PragmaticAndy/\nZenni — https://www.zennioptical.com/\nWarby
    Parker — https://www.warbyparker.com/ Special Guest: Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+m_tRzC_7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9470edd5-3447-4d40-9f5d-aaba34126ae3.mp3
    length: '46750427'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: As users increasingly demand interactivity from their web experiences,
      Phoenix LiveView is becoming the dominant way of writing interactive Elixir
      applications without a loss to reliability. Today we welcome back Sophie DeBenedetto,
      GitHub engineer, to talk about her upcoming book, Programming Phoenix LiveView.
    duration: '48:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9470edd5-3447-4d40-9f5d-aaba34126ae3/cover.jpg?v=1
    summary: "\n        <p>As users increasingly demand interactivity from their web
      experiences, Phoenix LiveView is becoming the dominant way of writing interactive
      Elixir applications without a loss to reliability. Today we welcome back an
      old friend of the show and GitHub engineer Sophie DeBenedetto to talk about
      her upcoming book, Programming Phoenix LiveView. We open our conversation with
      Sophie by hearing about her work at GitHub, as well as what we can expect from
      the Code BEAM V conference. As she doesn’t always get to use Elixir at her job,
      Sophie then discusses how coders can sharpen their Elixir skills when not at
      work. After exploring how companies can begin adopting Elixir through event-driven
      design, we dive into Sophie’s book. She unpacks the value of LiveView when building
      efficient web applications before touching on how her book can best help people
      to learn LiveView. We ask Sophie how intertwined the future of Elixir is to
      the success of LiveView and how this might impact Phoenix. Her answers highlight
      LiveView’s role in pushing Elixir adoption while also making Elixir easier to
      learn. We wrap up our discussion by chatting about the challenges of technical
      writing and Sophie’s experience working with the wonderful Pragmatic Programmers
      publishing house. Tune in to hear more insights into programming LiveView; if
      you believe the hype, it’s “one of the most important new frameworks of our
      generation.” </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We catch
      up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.</li>\n<li>Sophie
      shares her feelings on coding in Go.</li>\n<li>How Sophie engages with Elixir
      when it’s not a key part of her day job.</li>\n<li>What Flatiron School did
      to work towards Elixir adoption.</li>\n<li>Exploring the concept of event-driven
      design.</li>\n<li>Insights into the eventing system used at GitHub.</li>\n<li>Sophie
      talks about her experience as an engineering manager. </li>\n<li>Why Sophie
      transitioned from being a manager to being an individual contributor. </li>\n<li>How
      work-from-home has impacted meeting expectations.</li>\n<li>Hear the elevator
      pitch for Sophie’s upcoming book.</li>\n<li>Thoughts on how beginner-friendly
      Elixir is as a language.</li>\n<li>Whether Phoenix LiveView is the future of
      Elixir. </li>\n<li>How the attention placed on LiveView limits access to Phoenix
      resources and tutorials.</li>\n<li>We ask Sophie if LiveView will make it easier
      or more difficult to learn Elixir. </li>\n<li>Advice on writing technical books
      and the writing support offered by Pragmatic Programmers.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nSophie
      DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
      DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nProgramming
      Phoenix LiveView — <a href=\"https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\"
      rel=\"nofollow\">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nBeam
      Radio — <a href=\"https://www.beamrad.io/\" rel=\"nofollow\">https://www.beamrad.io/</a><br>\nCode
      BEAM V — <a href=\"https://codesync.global/conferences/code-beam-sto/\" rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nNx
      — <a href=\"https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\"
      rel=\"nofollow\">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>\nAlex
      Koutmos — <a href=\"https://twitter.com/akoutmos\" rel=\"nofollow\">https://twitter.com/akoutmos</a><br>\nEMPEX
      — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\n‘What
      is the difference between Event Driven and Event Sourcing?’ — <a href=\"https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\"
      rel=\"nofollow\">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>\nChris
      Keithley — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nSteven
      Nuñez — <a href=\"https://twitter.com/_StevenNunez\" rel=\"nofollow\">https://twitter.com/_StevenNunez</a><br>\n‘Shipping
      Greenfield Elixir in a Legacy World’ — <a href=\"https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>\nRuby
      on Rails Tutorial: Learn Web Development with Rails — <a href=\"https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\"
      rel=\"nofollow\">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>\nToran
      Billups — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nThe
      Pragmatic Programmers — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nChris
      McCord — <a href=\"https://twitter.com/chris_mccord/\" rel=\"nofollow\">https://twitter.com/chris_mccord/</a><br>\nDave
      Thomas — <a href=\"https://twitter.com/pragdave/\" rel=\"nofollow\">https://twitter.com/pragdave/</a><br>\nAndy
      Hunt — <a href=\"https://twitter.com/PragmaticAndy/\" rel=\"nofollow\">https://twitter.com/PragmaticAndy/</a><br>\nZenni
      — <a href=\"https://www.zennioptical.com/\" rel=\"nofollow\">https://www.zennioptical.com/</a><br>\nWarby
      Parker — <a href=\"https://www.warbyparker.com/\" rel=\"nofollow\">https://www.warbyparker.com/</a></p><p>Special
      Guest: Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>As users increasingly demand interactivity from their
    web experiences, Phoenix LiveView is becoming the dominant way of writing interactive
    Elixir applications without a loss to reliability. Today we welcome back an old
    friend of the show and GitHub engineer Sophie DeBenedetto to talk about her upcoming
    book, Programming Phoenix LiveView. We open our conversation with Sophie by hearing
    about her work at GitHub, as well as what we can expect from the Code BEAM V conference.
    As she doesn’t always get to use Elixir at her job, Sophie then discusses how
    coders can sharpen their Elixir skills when not at work. After exploring how companies
    can begin adopting Elixir through event-driven design, we dive into Sophie’s book.
    She unpacks the value of LiveView when building efficient web applications before
    touching on how her book can best help people to learn LiveView. We ask Sophie
    how intertwined the future of Elixir is to the success of LiveView and how this
    might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir
    adoption while also making Elixir easier to learn. We wrap up our discussion by
    chatting about the challenges of technical writing and Sophie’s experience working
    with the wonderful Pragmatic Programmers publishing house. Tune in to hear more
    insights into programming LiveView; if you believe the hype, it’s “one of the
    most important new frameworks of our generation.” </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>We catch up with guest Sophie DeBenedetto and hear about
    the Code BEAM V conference.</li>\n<li>Sophie shares her feelings on coding in
    Go.</li>\n<li>How Sophie engages with Elixir when it’s not a key part of her day
    job.</li>\n<li>What Flatiron School did to work towards Elixir adoption.</li>\n<li>Exploring
    the concept of event-driven design.</li>\n<li>Insights into the eventing system
    used at GitHub.</li>\n<li>Sophie talks about her experience as an engineering
    manager. </li>\n<li>Why Sophie transitioned from being a manager to being an individual
    contributor. </li>\n<li>How work-from-home has impacted meeting expectations.</li>\n<li>Hear
    the elevator pitch for Sophie’s upcoming book.</li>\n<li>Thoughts on how beginner-friendly
    Elixir is as a language.</li>\n<li>Whether Phoenix LiveView is the future of Elixir.
    </li>\n<li>How the attention placed on LiveView limits access to Phoenix resources
    and tutorials.</li>\n<li>We ask Sophie if LiveView will make it easier or more
    difficult to learn Elixir. </li>\n<li>Advice on writing technical books and the
    writing support offered by Pragmatic Programmers.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nSophie
    DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
    DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nProgramming
    Phoenix LiveView — <a href=\"https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\"
    rel=\"nofollow\">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nBeam
    Radio — <a href=\"https://www.beamrad.io/\" rel=\"nofollow\">https://www.beamrad.io/</a><br>\nCode
    BEAM V — <a href=\"https://codesync.global/conferences/code-beam-sto/\" rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nNx
    — <a href=\"https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\"
    rel=\"nofollow\">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>\nAlex
    Koutmos — <a href=\"https://twitter.com/akoutmos\" rel=\"nofollow\">https://twitter.com/akoutmos</a><br>\nEMPEX
    — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\n‘What
    is the difference between Event Driven and Event Sourcing?’ — <a href=\"https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\"
    rel=\"nofollow\">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>\nChris
    Keithley — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nSteven
    Nuñez — <a href=\"https://twitter.com/_StevenNunez\" rel=\"nofollow\">https://twitter.com/_StevenNunez</a><br>\n‘Shipping
    Greenfield Elixir in a Legacy World’ — <a href=\"https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>\nRuby
    on Rails Tutorial: Learn Web Development with Rails — <a href=\"https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\"
    rel=\"nofollow\">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>\nToran
    Billups — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nThe
    Pragmatic Programmers — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nChris
    McCord — <a href=\"https://twitter.com/chris_mccord/\" rel=\"nofollow\">https://twitter.com/chris_mccord/</a><br>\nDave
    Thomas — <a href=\"https://twitter.com/pragdave/\" rel=\"nofollow\">https://twitter.com/pragdave/</a><br>\nAndy
    Hunt — <a href=\"https://twitter.com/PragmaticAndy/\" rel=\"nofollow\">https://twitter.com/PragmaticAndy/</a><br>\nZenni
    — <a href=\"https://www.zennioptical.com/\" rel=\"nofollow\">https://www.zennioptical.com/</a><br>\nWarby
    Parker — <a href=\"https://www.warbyparker.com/\" rel=\"nofollow\">https://www.warbyparker.com/</a></p><p>Special
    Guest: Sophie DeBenedetto.</p>\n      "
- title: Shaun Robinson and Toran Billups on Using Elixir to Empower Online Learning
  slug: s5e13-robinson-billups
  link: https://smartlogic.io/podcast/elixir-wizards/s5e13-robinson-billups
  guid: 97fc73f8-1e61-447f-953f-99d2580f1476
  pubDate: Thu, 25 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 25, 2021
  description: "With the prevalence of at-home learning, teachers have to compete
    for student attention against numerous screen-based activities. Today we speak
    with engineering lead Shaun Robinson and Elixir developer Toran Billups about
    how Legends of Learning helps educators make their classrooms fun, engaging, and
    productive through their curriculum-based games. After chatting about Legends’
    mission to empower teachers, we talk with Toran about how he landed a job there.
    He then shares his insights into securing Elixir jobs, touching on the importance
    of networking and building a portfolio of Elixir projects. We discuss why Elixir
    became Legends’ language of choice before exploring their process in adopting
    Elixir. Reflecting on their early server structure, Shaun explains their process
    of refactoring from their old code base into an Elixir monolith. Responding to
    a previous episode, where frustrations were shared about coding in LiveView, Toran
    talks about its advantages, despite its issues as a new technology. Later, Shaun
    and Toran dive into what you can do to help your company adopt Elixir. We wrap
    up another incredible conversation by asking our guests about their favorite Legend
    of Learning games. Tune in to hear more about Legend of Learning’s Elixir journey
    and how they’re using it to create dynamic learning environments. \nKey Points
    From This Episode:\nExploring the mission and work of the Legends of Learning
    startup.\nShaun and Toran share details about their backgrounds.  \nWhy building
    a van home is so similar to building software.  \nHear about Toran’s podcast on
    the human side of programming.\nShaun talks about the time when he sold his Twitter
    and GitHub handle.\nWhat Toran did to land his first Elixir job.\nWhy Legends
    of Learning decided to adopt Elixir. \nInsights into Legends of Learning’s early
    server architecture. \nToran unpacks Legend’s hiring process.\nWhy Shaun’s engineering
    team consists of remote workers. \nToran shares the virtues of coding in LiveView.\nWhat
    Shaun did to refactor their old code base into an Elixir monolith.\nThe process
    that Legends underwent when adopting Elixir.\nAdvice on finding an Elixir role
    and adopting Elixir in your company.\nHear about Shaun and Toran’s favorite Legend
    of Learning games. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nShaun Robinson on LinkedIn — https://www.linkedin.com/in/shaun1010/\nToran
    Billups on Twitter — https://twitter.com/toranb\nToran Billups on LinkedIn — https://www.linkedin.com/in/toranb/\nLegends
    of Learning — https://www.legendsoflearning.com/\nVadim Polikov — https://www.linkedin.com/in/vadim-polikov/\nDeveloping
    Fatigue Podcast — https://developingfatigue.fm/\nKris Van Houghton — https://twitter.com/krivaten\nDave
    Gardner — https://www.linkedin.com/in/davegardner01/\nLegends of Learning Careers
    — https://www.legendsoflearning.com/interested-game-developer/\nLegends of Learning
    API Docs — https://docs.legendsoflearning.com/\nLonestar Elixir — https://lonestarelixir.com/\nElixir
    Match —https://elixirmatch.com/\nElixir Match on GitHub —  https://github.com/toranb/elixir-match\nChris
    McCord — http://chrismccord.com/\nGrox.io — https://grox.io/\nBruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/\nPostgraphile
    on GitHub — https://github.com/graphile/postgraphile\nMartin Fowler — https://martinfowler.com/\nThe
    Strangler Application — https://martinfowler.com/bliki/StranglerFigApplication.html\nTimescale
    — https://www.timescale.com/\n‘TimescaleDB 2.0 is now Generally Available’ — https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\nSun,
    Moon & Stars: Patterns of Apparent Motion on Legends of Learning — https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\nMagic
    the Gathering — https://magic.wizards.com/en\nLegends of Learning Awakening —
    https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\nHour
    of Code — https://hourofcode.com/\nOwl Pro — https://owllabs.com/products/meeting-owl-pro\nCorrection:
    In an earlier version of this episode, the host mis-spoke and mis-named the guests'
    company name in the outro; that error has been corrected as of 2021-02-25 3:52PM
    ET. Special Guests: Shaun Robinson and Toran Billups.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KczqS-33
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/97fc73f8-1e61-447f-953f-99d2580f1476.mp3
    length: '42647821'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Shaun Robinson and Toran Billups about how Legends
      of Learning helps educators make their classrooms fun, engaging, and productive
      through their curriculum-based games.
    duration: '50:45'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/97fc73f8-1e61-447f-953f-99d2580f1476/cover.jpg?v=1
    summary: "\n        <p>With the prevalence of at-home learning, teachers have
      to compete for student attention against numerous screen-based activities. Today
      we speak with engineering lead Shaun Robinson and Elixir developer Toran Billups
      about how Legends of Learning helps educators make their classrooms fun, engaging,
      and productive through their curriculum-based games. After chatting about Legends’
      mission to empower teachers, we talk with Toran about how he landed a job there.
      He then shares his insights into securing Elixir jobs, touching on the importance
      of networking and building a portfolio of Elixir projects. We discuss why Elixir
      became Legends’ language of choice before exploring their process in adopting
      Elixir. Reflecting on their early server structure, Shaun explains their process
      of refactoring from their old code base into an Elixir monolith. Responding
      to a previous episode, where frustrations were shared about coding in LiveView,
      Toran talks about its advantages, despite its issues as a new technology. Later,
      Shaun and Toran dive into what you can do to help your company adopt Elixir.
      We wrap up another incredible conversation by asking our guests about their
      favorite Legend of Learning games. Tune in to hear more about Legend of Learning’s
      Elixir journey and how they’re using it to create dynamic learning environments.
      </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Exploring the mission
      and work of the Legends of Learning startup.</li>\n<li>Shaun and Toran share
      details about their backgrounds.<br></li>\n<li>Why building a van home is so
      similar to building software.<br></li>\n<li>Hear about Toran’s podcast on the
      human side of programming.</li>\n<li>Shaun talks about the time when he sold
      his Twitter and GitHub handle.</li>\n<li>What Toran did to land his first Elixir
      job.</li>\n<li>Why Legends of Learning decided to adopt Elixir. </li>\n<li>Insights
      into Legends of Learning’s early server architecture. </li>\n<li>Toran unpacks
      Legend’s hiring process.</li>\n<li>Why Shaun’s engineering team consists of
      remote workers. </li>\n<li>Toran shares the virtues of coding in LiveView.</li>\n<li>What
      Shaun did to refactor their old code base into an Elixir monolith.</li>\n<li>The
      process that Legends underwent when adopting Elixir.</li>\n<li>Advice on finding
      an Elixir role and adopting Elixir in your company.</li>\n<li>Hear about Shaun
      and Toran’s favorite Legend of Learning games. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
      rel=\"nofollow\">podcast@smartlogic.io</a><br>\nShaun Robinson on LinkedIn —
      <a href=\"https://www.linkedin.com/in/shaun1010/\" rel=\"nofollow\">https://www.linkedin.com/in/shaun1010/</a><br>\nToran
      Billups on Twitter — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nToran
      Billups on LinkedIn — <a href=\"https://www.linkedin.com/in/toranb/\" rel=\"nofollow\">https://www.linkedin.com/in/toranb/</a><br>\nLegends
      of Learning — <a href=\"https://www.legendsoflearning.com/\" rel=\"nofollow\">https://www.legendsoflearning.com/</a><br>\nVadim
      Polikov — <a href=\"https://www.linkedin.com/in/vadim-polikov/\" rel=\"nofollow\">https://www.linkedin.com/in/vadim-polikov/</a><br>\nDeveloping
      Fatigue Podcast — <a href=\"https://developingfatigue.fm/\" rel=\"nofollow\">https://developingfatigue.fm/</a><br>\nKris
      Van Houghton — <a href=\"https://twitter.com/krivaten\" rel=\"nofollow\">https://twitter.com/krivaten</a><br>\nDave
      Gardner — <a href=\"https://www.linkedin.com/in/davegardner01/\" rel=\"nofollow\">https://www.linkedin.com/in/davegardner01/</a><br>\nLegends
      of Learning Careers — <a href=\"https://www.legendsoflearning.com/interested-game-developer/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/interested-game-developer/</a><br>\nLegends
      of Learning API Docs — <a href=\"https://docs.legendsoflearning.com/\" rel=\"nofollow\">https://docs.legendsoflearning.com/</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nElixir
      Match —<a href=\"https://elixirmatch.com/\" rel=\"nofollow\">https://elixirmatch.com/</a><br>\nElixir
      Match on GitHub —  <a href=\"https://github.com/toranb/elixir-match\" rel=\"nofollow\">https://github.com/toranb/elixir-match</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nGrox.io
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nPostgraphile
      on GitHub — <a href=\"https://github.com/graphile/postgraphile\" rel=\"nofollow\">https://github.com/graphile/postgraphile</a><br>\nMartin
      Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\nThe
      Strangler Application — <a href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"
      rel=\"nofollow\">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>\nTimescale
      — <a href=\"https://www.timescale.com/\" rel=\"nofollow\">https://www.timescale.com/</a><br>\n‘TimescaleDB
      2.0 is now Generally Available’ — <a href=\"https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\"
      rel=\"nofollow\">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>\nSun,
      Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href=\"https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>\nMagic
      the Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nLegends
      of Learning Awakening — <a href=\"https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>\nHour
      of Code — <a href=\"https://hourofcode.com/\" rel=\"nofollow\">https://hourofcode.com/</a><br>\nOwl
      Pro — <a href=\"https://owllabs.com/products/meeting-owl-pro\" rel=\"nofollow\">https://owllabs.com/products/meeting-owl-pro</a></p>\n\n<p>Correction:
      In an earlier version of this episode, the host mis-spoke and mis-named the
      guests&#39; company name in the outro; that error has been corrected as of 2021-02-25
      3:52PM ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>\n      "
  contentEncoded: "\n        <p>With the prevalence of at-home learning, teachers
    have to compete for student attention against numerous screen-based activities.
    Today we speak with engineering lead Shaun Robinson and Elixir developer Toran
    Billups about how Legends of Learning helps educators make their classrooms fun,
    engaging, and productive through their curriculum-based games. After chatting
    about Legends’ mission to empower teachers, we talk with Toran about how he landed
    a job there. He then shares his insights into securing Elixir jobs, touching on
    the importance of networking and building a portfolio of Elixir projects. We discuss
    why Elixir became Legends’ language of choice before exploring their process in
    adopting Elixir. Reflecting on their early server structure, Shaun explains their
    process of refactoring from their old code base into an Elixir monolith. Responding
    to a previous episode, where frustrations were shared about coding in LiveView,
    Toran talks about its advantages, despite its issues as a new technology. Later,
    Shaun and Toran dive into what you can do to help your company adopt Elixir. We
    wrap up another incredible conversation by asking our guests about their favorite
    Legend of Learning games. Tune in to hear more about Legend of Learning’s Elixir
    journey and how they’re using it to create dynamic learning environments. </p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Exploring the mission and work of the
    Legends of Learning startup.</li>\n<li>Shaun and Toran share details about their
    backgrounds.<br></li>\n<li>Why building a van home is so similar to building software.<br></li>\n<li>Hear
    about Toran’s podcast on the human side of programming.</li>\n<li>Shaun talks
    about the time when he sold his Twitter and GitHub handle.</li>\n<li>What Toran
    did to land his first Elixir job.</li>\n<li>Why Legends of Learning decided to
    adopt Elixir. </li>\n<li>Insights into Legends of Learning’s early server architecture.
    </li>\n<li>Toran unpacks Legend’s hiring process.</li>\n<li>Why Shaun’s engineering
    team consists of remote workers. </li>\n<li>Toran shares the virtues of coding
    in LiveView.</li>\n<li>What Shaun did to refactor their old code base into an
    Elixir monolith.</li>\n<li>The process that Legends underwent when adopting Elixir.</li>\n<li>Advice
    on finding an Elixir role and adopting Elixir in your company.</li>\n<li>Hear
    about Shaun and Toran’s favorite Legend of Learning games. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
    rel=\"nofollow\">podcast@smartlogic.io</a><br>\nShaun Robinson on LinkedIn — <a
    href=\"https://www.linkedin.com/in/shaun1010/\" rel=\"nofollow\">https://www.linkedin.com/in/shaun1010/</a><br>\nToran
    Billups on Twitter — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nToran
    Billups on LinkedIn — <a href=\"https://www.linkedin.com/in/toranb/\" rel=\"nofollow\">https://www.linkedin.com/in/toranb/</a><br>\nLegends
    of Learning — <a href=\"https://www.legendsoflearning.com/\" rel=\"nofollow\">https://www.legendsoflearning.com/</a><br>\nVadim
    Polikov — <a href=\"https://www.linkedin.com/in/vadim-polikov/\" rel=\"nofollow\">https://www.linkedin.com/in/vadim-polikov/</a><br>\nDeveloping
    Fatigue Podcast — <a href=\"https://developingfatigue.fm/\" rel=\"nofollow\">https://developingfatigue.fm/</a><br>\nKris
    Van Houghton — <a href=\"https://twitter.com/krivaten\" rel=\"nofollow\">https://twitter.com/krivaten</a><br>\nDave
    Gardner — <a href=\"https://www.linkedin.com/in/davegardner01/\" rel=\"nofollow\">https://www.linkedin.com/in/davegardner01/</a><br>\nLegends
    of Learning Careers — <a href=\"https://www.legendsoflearning.com/interested-game-developer/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/interested-game-developer/</a><br>\nLegends
    of Learning API Docs — <a href=\"https://docs.legendsoflearning.com/\" rel=\"nofollow\">https://docs.legendsoflearning.com/</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nElixir
    Match —<a href=\"https://elixirmatch.com/\" rel=\"nofollow\">https://elixirmatch.com/</a><br>\nElixir
    Match on GitHub —  <a href=\"https://github.com/toranb/elixir-match\" rel=\"nofollow\">https://github.com/toranb/elixir-match</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nGrox.io
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nPostgraphile
    on GitHub — <a href=\"https://github.com/graphile/postgraphile\" rel=\"nofollow\">https://github.com/graphile/postgraphile</a><br>\nMartin
    Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\nThe
    Strangler Application — <a href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"
    rel=\"nofollow\">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>\nTimescale
    — <a href=\"https://www.timescale.com/\" rel=\"nofollow\">https://www.timescale.com/</a><br>\n‘TimescaleDB
    2.0 is now Generally Available’ — <a href=\"https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\"
    rel=\"nofollow\">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>\nSun,
    Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href=\"https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>\nMagic
    the Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nLegends
    of Learning Awakening — <a href=\"https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>\nHour
    of Code — <a href=\"https://hourofcode.com/\" rel=\"nofollow\">https://hourofcode.com/</a><br>\nOwl
    Pro — <a href=\"https://owllabs.com/products/meeting-owl-pro\" rel=\"nofollow\">https://owllabs.com/products/meeting-owl-pro</a></p>\n\n<p>Correction:
    In an earlier version of this episode, the host mis-spoke and mis-named the guests&#39;
    company name in the outro; that error has been corrected as of 2021-02-25 3:52PM
    ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>\n      "
- title: Brian Howenstein on How ClusterTruck is Innovating Food Delivery
  slug: s5e12-howenstein
  link: https://smartlogic.io/podcast/elixir-wizards/s5e12-howenstein
  guid: 1b9ca1de-dc95-49fa-885b-4e6093d52055
  pubDate: Thu, 18 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 18, 2021
  description: "ClusterTruck, a master of vertical integration, is rewriting the method
    of end-to-end food delivery and ghost kitchens. Today we speak with ClusterTruck
    Product VP Brian Howenstein to find out more about his journey in programming,
    ClusterTruck as an end-to-end food service, and how Elixir became mission-critical
    to the success of the business. \nWe kick things off by hearing more on Brian’s
    childhood and how he became interested in programming. We then hear about his
    internship at Apple where he was part of the Core OS networking team. Brian touches
    on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook, and shares how
    these personalities changed his view of the tech industry. Later in the show,
    we turn our attention to current times. Brian expands on his role at ClusterTruck
    and shares details on how Elixir has played a vital role in the company’s success.
    We hear his take on vertical integration, why they’d never consider third-party
    delivery companies, and much more. We then briefly digress to Brian’s hobby: the
    Scottish Games, before returning to ClusterTruck to find out what his favorite
    menu items are and what the future holds for food delivery and ghost kitchens.
    \nBe sure to stay tuned to enjoy our mini-feature where we speak with Michelle
    Morry, a software engineer at FuturePet. For all things Elixir, be sure to join
    us today! \nBonus: If you’re in Indianapolis, IN, Columbus, OH, or Kansas City,
    MO, download the ClusterTruck app and use code “ELIXIRWIZARDS” at checkout for
    a one-time 25% discount on your ClusterTruck order. Good for a single use for
    both new and returning customers.\nKey Points From This Episode:\nA call to all
    talented engineering managers to join our team!\nIntroducing today’s guest, Brian
    Howenstein.\nBrian tells us about his company, ClusterTruck.\nHear about Brian’s
    background in technology and programming.\nWhat inspired Brian to do programming
    professionally.\nBrian tells us about his internship at Apple.\nHear one of Brian’s
    fondest anecdotes about Jony Ive.\nBrian shares notes on his path to Elixir.\nWhy
    Elixir has had such an impact on ClusterTruck’s success.\nClusterTruck’s origin
    story.\nBrian talks about ClusterTruck’s vertical integration model.\nHow Brian
    got the people around him to buy into Elixir and the hurdles that came with it.\nBrian
    talks about his journey to become a ClusterTruck VP.\nBrian tells us about his
    hobby and we digress to World’s Strongest Man controversy.\nHow COVID has affected
    Brian’s business.\nNerves projects at ClusterTruck and how it’s being used.\nWhat
    the future looks like for ClusterTruck.\nBrian’s advice for people who are trying
    to get their company to code in Elixir.\nHow ClusterTruck is using LiveView.\nBrian’s
    favorite and least favorite menu items.\nStay tuned for our quick mini-feature.\nLinks
    Mentioned in Today’s Episode:\nClusterTruck — https://www.clustertruck.com/\nClusterTruck
    Hiring — https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\nCabermetrics
    — https://www.cabermetrics.com/\nBrain Howenstein on LinkedIn — https://www.linkedin.com/in/brianhowenstein/\nBrain
    Howenstein on Twitter — https://twitter.com/hwrd\nIndianapolis Scottish Games
    Festival — https://indyscotgamesandfest.com/\nPurdue University — https://www.purdue.edu/\nSimCity
    — https://www.ea.com/en-gb/games/simcity\nApple — https://www.apple.com/\nJony
    Ive — https://www.britannica.com/biography/Jonathan-Ive\nTim Cook — https://twitter.com/timcook\nSteve
    Jobs — https://www.biography.com/business-figure/steve-jobs\nUber Eats — https://www.ubereats.com/za\nExactTarget
    — https://www.linkedin.com/company/exacttarget/\nSalesforce — https://www.salesforce.com/\nDoorDash
    — https://www.doordash.com/en-US\nGrubHub — https://www.grubhub.com/\nThe World’s
    Strongest Man — http://theworldsstrongestman.com/\nRaspberry Pi — https://www.raspberrypi.org/\nIndy
    Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
    Hangry — https://www.youtube.com/watch?v=9LMzYTK6dsE&abchannel=IndyElixir\nIndy
    Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
    for a Team Simple — https://www.youtube.com/watch?v=ZY2XeIENMRw&abchannel=IndyElixir\nClusterTruck:
    Liberate Your Appetite — https://www.youtube.com/watch?v=xNC3vrrxNWM&abchannel=ClusterTruck\nSean
    in the City: ClusterTruck Indy — https://www.youtube.com/watch?v=-nusA13LYJI&abchannel=B105.7Indy\nClusterTruck
    + Slack — https://www.youtube.com/watch?v=C6t8aZQPB68&abchannel=ClusterTruck Special
    Guest: Brian Howenstein.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ycil-1Xj
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b9ca1de-dc95-49fa-885b-4e6093d52055.mp3
    length: '49892465'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: 'Today we speak with Brian Howenstein to find out about his journey
      in programming, ClusterTruck as an end-to-end food service, and how Elixir became
      mission-critical to the success of the business. '
    duration: '59:23'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b9ca1de-dc95-49fa-885b-4e6093d52055/cover.jpg?v=1
    summary: "\n        <p>ClusterTruck, a master of vertical integration, is rewriting
      the method of end-to-end food delivery and ghost kitchens. Today we speak with
      ClusterTruck Product VP Brian Howenstein to find out more about his journey
      in programming, ClusterTruck as an end-to-end food service, and how Elixir became
      mission-critical to the success of the business. </p>\n\n<p>We kick things off
      by hearing more on Brian’s childhood and how he became interested in programming.
      We then hear about his internship at Apple where he was part of the Core OS
      networking team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy,
      and Tim Cook, and shares how these personalities changed his view of the tech
      industry. Later in the show, we turn our attention to current times. Brian expands
      on his role at ClusterTruck and shares details on how Elixir has played a vital
      role in the company’s success. We hear his take on vertical integration, why
      they’d never consider third-party delivery companies, and much more. We then
      briefly digress to Brian’s hobby: the Scottish Games, before returning to ClusterTruck
      to find out what his favorite menu items are and what the future holds for food
      delivery and ghost kitchens. </p>\n\n<p>Be sure to stay tuned to enjoy our mini-feature
      where we speak with Michelle Morry, a software engineer at FuturePet. For all
      things Elixir, be sure to join us today! </p>\n\n<p>Bonus: If you’re in Indianapolis,
      IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use
      code “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck
      order. Good for a single use for both new and returning customers.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>A call to all talented engineering
      managers to join our team!</li>\n<li>Introducing today’s guest, Brian Howenstein.</li>\n<li>Brian
      tells us about his company, ClusterTruck.</li>\n<li>Hear about Brian’s background
      in technology and programming.</li>\n<li>What inspired Brian to do programming
      professionally.</li>\n<li>Brian tells us about his internship at Apple.</li>\n<li>Hear
      one of Brian’s fondest anecdotes about Jony Ive.</li>\n<li>Brian shares notes
      on his path to Elixir.</li>\n<li>Why Elixir has had such an impact on ClusterTruck’s
      success.</li>\n<li>ClusterTruck’s origin story.</li>\n<li>Brian talks about
      ClusterTruck’s vertical integration model.</li>\n<li>How Brian got the people
      around him to buy into Elixir and the hurdles that came with it.</li>\n<li>Brian
      talks about his journey to become a ClusterTruck VP.</li>\n<li>Brian tells us
      about his hobby and we digress to World’s Strongest Man controversy.</li>\n<li>How
      COVID has affected Brian’s business.</li>\n<li>Nerves projects at ClusterTruck
      and how it’s being used.</li>\n<li>What the future looks like for ClusterTruck.</li>\n<li>Brian’s
      advice for people who are trying to get their company to code in Elixir.</li>\n<li>How
      ClusterTruck is using LiveView.</li>\n<li>Brian’s favorite and least favorite
      menu items.</li>\n<li>Stay tuned for our quick mini-feature.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>ClusterTruck — <a href=\"https://www.clustertruck.com/\"
      rel=\"nofollow\">https://www.clustertruck.com/</a><br>\nClusterTruck Hiring
      — <a href=\"https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\"
      rel=\"nofollow\">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>\nCabermetrics
      — <a href=\"https://www.cabermetrics.com/\" rel=\"nofollow\">https://www.cabermetrics.com/</a><br>\nBrain
      Howenstein on LinkedIn — <a href=\"https://www.linkedin.com/in/brianhowenstein/\"
      rel=\"nofollow\">https://www.linkedin.com/in/brianhowenstein/</a><br>\nBrain
      Howenstein on Twitter — <a href=\"https://twitter.com/hwrd\" rel=\"nofollow\">https://twitter.com/hwrd</a><br>\nIndianapolis
      Scottish Games Festival — <a href=\"https://indyscotgamesandfest.com/\" rel=\"nofollow\">https://indyscotgamesandfest.com/</a><br>\nPurdue
      University — <a href=\"https://www.purdue.edu/\" rel=\"nofollow\">https://www.purdue.edu/</a><br>\nSimCity
      — <a href=\"https://www.ea.com/en-gb/games/simcity\" rel=\"nofollow\">https://www.ea.com/en-gb/games/simcity</a><br>\nApple
      — <a href=\"https://www.apple.com/\" rel=\"nofollow\">https://www.apple.com/</a><br>\nJony
      Ive — <a href=\"https://www.britannica.com/biography/Jonathan-Ive\" rel=\"nofollow\">https://www.britannica.com/biography/Jonathan-Ive</a><br>\nTim
      Cook — <a href=\"https://twitter.com/tim_cook\" rel=\"nofollow\">https://twitter.com/tim_cook</a><br>\nSteve
      Jobs — <a href=\"https://www.biography.com/business-figure/steve-jobs\" rel=\"nofollow\">https://www.biography.com/business-figure/steve-jobs</a><br>\nUber
      Eats — <a href=\"https://www.ubereats.com/za\" rel=\"nofollow\">https://www.ubereats.com/za</a><br>\nExactTarget
      — <a href=\"https://www.linkedin.com/company/exacttarget/\" rel=\"nofollow\">https://www.linkedin.com/company/exacttarget/</a><br>\nSalesforce
      — <a href=\"https://www.salesforce.com/\" rel=\"nofollow\">https://www.salesforce.com/</a><br>\nDoorDash
      — <a href=\"https://www.doordash.com/en-US\" rel=\"nofollow\">https://www.doordash.com/en-US</a><br>\nGrubHub
      — <a href=\"https://www.grubhub.com/\" rel=\"nofollow\">https://www.grubhub.com/</a><br>\nThe
      World’s Strongest Man — <a href=\"http://theworldsstrongestman.com/\" rel=\"nofollow\">http://theworldsstrongestman.com/</a><br>\nRaspberry
      Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nIndy
      Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
      Hangry — <a href=\"https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>\nIndy
      Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
      for a Team Simple — <a href=\"https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>\nClusterTruck:
      Liberate Your Appetite — <a href=\"https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>\nSean
      in the City: ClusterTruck Indy — <a href=\"https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>\nClusterTruck
      + Slack — <a href=\"https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special
      Guest: Brian Howenstein.</p>\n      "
  contentEncoded: "\n        <p>ClusterTruck, a master of vertical integration, is
    rewriting the method of end-to-end food delivery and ghost kitchens. Today we
    speak with ClusterTruck Product VP Brian Howenstein to find out more about his
    journey in programming, ClusterTruck as an end-to-end food service, and how Elixir
    became mission-critical to the success of the business. </p>\n\n<p>We kick things
    off by hearing more on Brian’s childhood and how he became interested in programming.
    We then hear about his internship at Apple where he was part of the Core OS networking
    team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook,
    and shares how these personalities changed his view of the tech industry. Later
    in the show, we turn our attention to current times. Brian expands on his role
    at ClusterTruck and shares details on how Elixir has played a vital role in the
    company’s success. We hear his take on vertical integration, why they’d never
    consider third-party delivery companies, and much more. We then briefly digress
    to Brian’s hobby: the Scottish Games, before returning to ClusterTruck to find
    out what his favorite menu items are and what the future holds for food delivery
    and ghost kitchens. </p>\n\n<p>Be sure to stay tuned to enjoy our mini-feature
    where we speak with Michelle Morry, a software engineer at FuturePet. For all
    things Elixir, be sure to join us today! </p>\n\n<p>Bonus: If you’re in Indianapolis,
    IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use code
    “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck order.
    Good for a single use for both new and returning customers.</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>A call to all talented engineering managers
    to join our team!</li>\n<li>Introducing today’s guest, Brian Howenstein.</li>\n<li>Brian
    tells us about his company, ClusterTruck.</li>\n<li>Hear about Brian’s background
    in technology and programming.</li>\n<li>What inspired Brian to do programming
    professionally.</li>\n<li>Brian tells us about his internship at Apple.</li>\n<li>Hear
    one of Brian’s fondest anecdotes about Jony Ive.</li>\n<li>Brian shares notes
    on his path to Elixir.</li>\n<li>Why Elixir has had such an impact on ClusterTruck’s
    success.</li>\n<li>ClusterTruck’s origin story.</li>\n<li>Brian talks about ClusterTruck’s
    vertical integration model.</li>\n<li>How Brian got the people around him to buy
    into Elixir and the hurdles that came with it.</li>\n<li>Brian talks about his
    journey to become a ClusterTruck VP.</li>\n<li>Brian tells us about his hobby
    and we digress to World’s Strongest Man controversy.</li>\n<li>How COVID has affected
    Brian’s business.</li>\n<li>Nerves projects at ClusterTruck and how it’s being
    used.</li>\n<li>What the future looks like for ClusterTruck.</li>\n<li>Brian’s
    advice for people who are trying to get their company to code in Elixir.</li>\n<li>How
    ClusterTruck is using LiveView.</li>\n<li>Brian’s favorite and least favorite
    menu items.</li>\n<li>Stay tuned for our quick mini-feature.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>ClusterTruck — <a href=\"https://www.clustertruck.com/\"
    rel=\"nofollow\">https://www.clustertruck.com/</a><br>\nClusterTruck Hiring —
    <a href=\"https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\"
    rel=\"nofollow\">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>\nCabermetrics
    — <a href=\"https://www.cabermetrics.com/\" rel=\"nofollow\">https://www.cabermetrics.com/</a><br>\nBrain
    Howenstein on LinkedIn — <a href=\"https://www.linkedin.com/in/brianhowenstein/\"
    rel=\"nofollow\">https://www.linkedin.com/in/brianhowenstein/</a><br>\nBrain Howenstein
    on Twitter — <a href=\"https://twitter.com/hwrd\" rel=\"nofollow\">https://twitter.com/hwrd</a><br>\nIndianapolis
    Scottish Games Festival — <a href=\"https://indyscotgamesandfest.com/\" rel=\"nofollow\">https://indyscotgamesandfest.com/</a><br>\nPurdue
    University — <a href=\"https://www.purdue.edu/\" rel=\"nofollow\">https://www.purdue.edu/</a><br>\nSimCity
    — <a href=\"https://www.ea.com/en-gb/games/simcity\" rel=\"nofollow\">https://www.ea.com/en-gb/games/simcity</a><br>\nApple
    — <a href=\"https://www.apple.com/\" rel=\"nofollow\">https://www.apple.com/</a><br>\nJony
    Ive — <a href=\"https://www.britannica.com/biography/Jonathan-Ive\" rel=\"nofollow\">https://www.britannica.com/biography/Jonathan-Ive</a><br>\nTim
    Cook — <a href=\"https://twitter.com/tim_cook\" rel=\"nofollow\">https://twitter.com/tim_cook</a><br>\nSteve
    Jobs — <a href=\"https://www.biography.com/business-figure/steve-jobs\" rel=\"nofollow\">https://www.biography.com/business-figure/steve-jobs</a><br>\nUber
    Eats — <a href=\"https://www.ubereats.com/za\" rel=\"nofollow\">https://www.ubereats.com/za</a><br>\nExactTarget
    — <a href=\"https://www.linkedin.com/company/exacttarget/\" rel=\"nofollow\">https://www.linkedin.com/company/exacttarget/</a><br>\nSalesforce
    — <a href=\"https://www.salesforce.com/\" rel=\"nofollow\">https://www.salesforce.com/</a><br>\nDoorDash
    — <a href=\"https://www.doordash.com/en-US\" rel=\"nofollow\">https://www.doordash.com/en-US</a><br>\nGrubHub
    — <a href=\"https://www.grubhub.com/\" rel=\"nofollow\">https://www.grubhub.com/</a><br>\nThe
    World’s Strongest Man — <a href=\"http://theworldsstrongestman.com/\" rel=\"nofollow\">http://theworldsstrongestman.com/</a><br>\nRaspberry
    Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nIndy
    Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
    Hangry — <a href=\"https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>\nIndy
    Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
    for a Team Simple — <a href=\"https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>\nClusterTruck:
    Liberate Your Appetite — <a href=\"https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>\nSean
    in the City: ClusterTruck Indy — <a href=\"https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>\nClusterTruck
    + Slack — <a href=\"https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special
    Guest: Brian Howenstein.</p>\n      "
- title: Yair Flicker on SmartLogic’s Origin, Evolution, and Elixir Adoption Process
  slug: s5e11-flicker
  link: https://smartlogic.io/podcast/elixir-wizards/s5e11-flicker
  guid: bc908c5d-f422-4fc4-809b-ec4f4b051d3a
  pubDate: Thu, 11 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 11, 2021
  description: "Building a successful development company requires having a leader
    with technical know-how and excellent management skills. Today we speak with SmartLogic
    President and Founder Yair Flicker about his company’s origin story, evolution,
    and their Elixir adoption process. Early in the episode, we talk about Yair’s
    first jobs before diving into how he founded SmartLogic. An important transition
    point, we then chat about how he moved from writing code to running a business.
    Reflecting on his tech background, Yair opens up about how he learned to code
    before he shares insights into the languages that his company programs in, how
    they discovered Elixir, and how they integrated it into their practice. In a discussion
    that’s sure to resonate with startup managers, Yair unpacks what he does to grow
    as a manager, along with best practices for companies looking to adopt Elixir.
    We ask Yair about the benefits of coding in Elixir, how SmartLogic has retained
    its top employees, why he prioritizes employee happiness, and the role that company
    values play in strengthening SmartLogic. After hearing about Yair’s vision for
    the future, we jump into our mini-segment where we interview Jake Johnson, the
    Director of Software Engineering at TaxJar. For more on building strong companies
    and advice on adopting Elixir, be sure to tune in and benefit from our conversations
    with Yair and Jake.\nKey Points From This Episode:\nSmartLogic Founder Yair Flicker
    talks about his first job.\nYair shares details about SmartLogic’s humble origins.\nEarly
    challenges SmarLogic faced and Yair’s move from coding to running a business.\nWe
    ask Yair about how he learned to code. \nSmartLogic’s coding evolution and how
    they discovered Elixir.\nThe Maker vs. Manager distinction; what Yair did to grow
    as a manager.\nExploring the benefits of adopting Elixir.\nYair’s advice for companies
    wanting to adopt Elixir.\nWhy Elixir allows for more scalability than many other
    languages.\nHow SmartLogic has been able to retain some of its top employees.\nThe
    link between having happy employees and happy clients. \nHow Yair lives his company’s
    values. \nYair shares his recipe for creating productive meetings.\nHear about
    Yair’s vision for SmartLogic’s future. \nFor our mini-feature segment, we chat
    with Jake Johnson from TaxJar.\nWhy TaxJar adopted Elixir and details on Jake’s
    background. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nYair Flicker on LinkedIn — https://www.linkedin.com/in/yflicker/\nYair
    Flicker on Twitter — https://twitter.com/yflicker\nJake Johnson on LinkedIn —
    https://www.linkedin.com/in/jakej/\nTaxJar — https://www.taxjar.com/\nMusic and
    Arts — https://www.musicarts.com/\nJohns Hopkins University — https://www.jhu.edu/\nHackers
    — https://www.imdb.com/title/tt0113243/\nNational Conference of Synagogue Youth
    — https://ncsy.org/\nStanley Black & Decker — https://www.stanleyblackanddecker.com/\nReddit
    — https://reddit.com/\nDiscord — https://discord.com/\nInstagram — https://www.instagram.com\nAmazon
    Web Services — https://aws.amazon.com/\nSales Tax for Developers — https://salestax.dev\nBackstreet
    Boys — https://linktr.ee/backstreetboys Special Guest: Yair Flicker.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+P_7e0HQf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bc908c5d-f422-4fc4-809b-ec4f4b051d3a.mp3
    length: '53579123'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with SmartLogic President and Founder Yair Flicker about
      his company’s origin story, evolution, and their Elixir adoption process.
    duration: '55:46'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bc908c5d-f422-4fc4-809b-ec4f4b051d3a/cover.jpg?v=1
    summary: "\n        <p>Building a successful development company requires having
      a leader with technical know-how and excellent management skills. Today we speak
      with SmartLogic President and Founder Yair Flicker about his company’s origin
      story, evolution, and their Elixir adoption process. Early in the episode, we
      talk about Yair’s first jobs before diving into how he founded SmartLogic. An
      important transition point, we then chat about how he moved from writing code
      to running a business. Reflecting on his tech background, Yair opens up about
      how he learned to code before he shares insights into the languages that his
      company programs in, how they discovered Elixir, and how they integrated it
      into their practice. In a discussion that’s sure to resonate with startup managers,
      Yair unpacks what he does to grow as a manager, along with best practices for
      companies looking to adopt Elixir. We ask Yair about the benefits of coding
      in Elixir, how SmartLogic has retained its top employees, why he prioritizes
      employee happiness, and the role that company values play in strengthening SmartLogic.
      After hearing about Yair’s vision for the future, we jump into our mini-segment
      where we interview Jake Johnson, the Director of Software Engineering at TaxJar.
      For more on building strong companies and advice on adopting Elixir, be sure
      to tune in and benefit from our conversations with Yair and Jake.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>SmartLogic Founder Yair Flicker talks
      about his first job.</li>\n<li>Yair shares details about SmartLogic’s humble
      origins.</li>\n<li>Early challenges SmarLogic faced and Yair’s move from coding
      to running a business.</li>\n<li>We ask Yair about how he learned to code. </li>\n<li>SmartLogic’s
      coding evolution and how they discovered Elixir.</li>\n<li>The Maker vs. Manager
      distinction; what Yair did to grow as a manager.</li>\n<li>Exploring the benefits
      of adopting Elixir.</li>\n<li>Yair’s advice for companies wanting to adopt Elixir.</li>\n<li>Why
      Elixir allows for more scalability than many other languages.</li>\n<li>How
      SmartLogic has been able to retain some of its top employees.</li>\n<li>The
      link between having happy employees and happy clients. </li>\n<li>How Yair lives
      his company’s values. </li>\n<li>Yair shares his recipe for creating productive
      meetings.</li>\n<li>Hear about Yair’s vision for SmartLogic’s future. </li>\n<li>For
      our mini-feature segment, we chat with Jake Johnson from TaxJar.</li>\n<li>Why
      TaxJar adopted Elixir and details on Jake’s background. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
      rel=\"nofollow\">podcast@smartlogic.io</a><br>\nYair Flicker on LinkedIn — <a
      href=\"https://www.linkedin.com/in/yflicker/\" rel=\"nofollow\">https://www.linkedin.com/in/yflicker/</a><br>\nYair
      Flicker on Twitter — <a href=\"https://twitter.com/yflicker\" rel=\"nofollow\">https://twitter.com/yflicker</a><br>\nJake
      Johnson on LinkedIn — <a href=\"https://www.linkedin.com/in/jakej/\" rel=\"nofollow\">https://www.linkedin.com/in/jakej/</a><br>\nTaxJar
      — <a href=\"https://www.taxjar.com/\" rel=\"nofollow\">https://www.taxjar.com/</a><br>\nMusic
      and Arts — <a href=\"https://www.musicarts.com/\" rel=\"nofollow\">https://www.musicarts.com/</a><br>\nJohns
      Hopkins University — <a href=\"https://www.jhu.edu/\" rel=\"nofollow\">https://www.jhu.edu/</a><br>\nHackers
      — <a href=\"https://www.imdb.com/title/tt0113243/\" rel=\"nofollow\">https://www.imdb.com/title/tt0113243/</a><br>\nNational
      Conference of Synagogue Youth — <a href=\"https://ncsy.org/\" rel=\"nofollow\">https://ncsy.org/</a><br>\nStanley
      Black &amp; Decker — <a href=\"https://www.stanleyblackanddecker.com/\" rel=\"nofollow\">https://www.stanleyblackanddecker.com/</a><br>\nReddit
      — <a href=\"https://reddit.com/\" rel=\"nofollow\">https://reddit.com/</a><br>\nDiscord
      — <a href=\"https://discord.com/\" rel=\"nofollow\">https://discord.com/</a><br>\nInstagram
      — <a href=\"https://www.instagram.com\" rel=\"nofollow\">https://www.instagram.com</a><br>\nAmazon
      Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nSales
      Tax for Developers — <a href=\"https://salestax.dev\" rel=\"nofollow\">https://salestax.dev</a><br>\nBackstreet
      Boys — <a href=\"https://linktr.ee/backstreetboys\" rel=\"nofollow\">https://linktr.ee/backstreetboys</a></p><p>Special
      Guest: Yair Flicker.</p>\n      "
  contentEncoded: "\n        <p>Building a successful development company requires
    having a leader with technical know-how and excellent management skills. Today
    we speak with SmartLogic President and Founder Yair Flicker about his company’s
    origin story, evolution, and their Elixir adoption process. Early in the episode,
    we talk about Yair’s first jobs before diving into how he founded SmartLogic.
    An important transition point, we then chat about how he moved from writing code
    to running a business. Reflecting on his tech background, Yair opens up about
    how he learned to code before he shares insights into the languages that his company
    programs in, how they discovered Elixir, and how they integrated it into their
    practice. In a discussion that’s sure to resonate with startup managers, Yair
    unpacks what he does to grow as a manager, along with best practices for companies
    looking to adopt Elixir. We ask Yair about the benefits of coding in Elixir, how
    SmartLogic has retained its top employees, why he prioritizes employee happiness,
    and the role that company values play in strengthening SmartLogic. After hearing
    about Yair’s vision for the future, we jump into our mini-segment where we interview
    Jake Johnson, the Director of Software Engineering at TaxJar. For more on building
    strong companies and advice on adopting Elixir, be sure to tune in and benefit
    from our conversations with Yair and Jake.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>SmartLogic
    Founder Yair Flicker talks about his first job.</li>\n<li>Yair shares details
    about SmartLogic’s humble origins.</li>\n<li>Early challenges SmarLogic faced
    and Yair’s move from coding to running a business.</li>\n<li>We ask Yair about
    how he learned to code. </li>\n<li>SmartLogic’s coding evolution and how they
    discovered Elixir.</li>\n<li>The Maker vs. Manager distinction; what Yair did
    to grow as a manager.</li>\n<li>Exploring the benefits of adopting Elixir.</li>\n<li>Yair’s
    advice for companies wanting to adopt Elixir.</li>\n<li>Why Elixir allows for
    more scalability than many other languages.</li>\n<li>How SmartLogic has been
    able to retain some of its top employees.</li>\n<li>The link between having happy
    employees and happy clients. </li>\n<li>How Yair lives his company’s values. </li>\n<li>Yair
    shares his recipe for creating productive meetings.</li>\n<li>Hear about Yair’s
    vision for SmartLogic’s future. </li>\n<li>For our mini-feature segment, we chat
    with Jake Johnson from TaxJar.</li>\n<li>Why TaxJar adopted Elixir and details
    on Jake’s background. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
    Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nYair
    Flicker on LinkedIn — <a href=\"https://www.linkedin.com/in/yflicker/\" rel=\"nofollow\">https://www.linkedin.com/in/yflicker/</a><br>\nYair
    Flicker on Twitter — <a href=\"https://twitter.com/yflicker\" rel=\"nofollow\">https://twitter.com/yflicker</a><br>\nJake
    Johnson on LinkedIn — <a href=\"https://www.linkedin.com/in/jakej/\" rel=\"nofollow\">https://www.linkedin.com/in/jakej/</a><br>\nTaxJar
    — <a href=\"https://www.taxjar.com/\" rel=\"nofollow\">https://www.taxjar.com/</a><br>\nMusic
    and Arts — <a href=\"https://www.musicarts.com/\" rel=\"nofollow\">https://www.musicarts.com/</a><br>\nJohns
    Hopkins University — <a href=\"https://www.jhu.edu/\" rel=\"nofollow\">https://www.jhu.edu/</a><br>\nHackers
    — <a href=\"https://www.imdb.com/title/tt0113243/\" rel=\"nofollow\">https://www.imdb.com/title/tt0113243/</a><br>\nNational
    Conference of Synagogue Youth — <a href=\"https://ncsy.org/\" rel=\"nofollow\">https://ncsy.org/</a><br>\nStanley
    Black &amp; Decker — <a href=\"https://www.stanleyblackanddecker.com/\" rel=\"nofollow\">https://www.stanleyblackanddecker.com/</a><br>\nReddit
    — <a href=\"https://reddit.com/\" rel=\"nofollow\">https://reddit.com/</a><br>\nDiscord
    — <a href=\"https://discord.com/\" rel=\"nofollow\">https://discord.com/</a><br>\nInstagram
    — <a href=\"https://www.instagram.com\" rel=\"nofollow\">https://www.instagram.com</a><br>\nAmazon
    Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nSales
    Tax for Developers — <a href=\"https://salestax.dev\" rel=\"nofollow\">https://salestax.dev</a><br>\nBackstreet
    Boys — <a href=\"https://linktr.ee/backstreetboys\" rel=\"nofollow\">https://linktr.ee/backstreetboys</a></p><p>Special
    Guest: Yair Flicker.</p>\n      "
- title: Alexandra Chakeres on Moving Towards an Inclusive Elixir Community
  slug: s5e10-chakeres
  link: https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres
  guid: d3843a34-8180-4e29-ae31-ab4d2da8379b
  pubDate: Thu, 04 Feb 2021 06:00:00 -0500
  pubDateFriendly: February  4, 2021
  description: "Despite its welcoming character, the Elixir community struggles with
    diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists
    are women. Today we speak with Blinker software engineer Alexandra Chakeres about
    her experience of the community, as well as what we can do to make it more inclusive.
    We open by exploring Alexandra’s background and coding career. After expressing
    her enthusiasm for the Turing School, we talk about Alexandra’s learn-by-doing
    approach to picking up Elixir. She shares how she landed her first Elixir job
    before we chat about her current role at Blinker. We discuss why the small size
    of the community means that Alexandra doesn’t recommend Elixir to coding beginners.
    We then dive into the topic of Elixir diversity, touching on factors that limit
    inclusivity, including how few Elixir positions are available for juniors. Alexandra
    unpacks solutions, like how organizations can shift their hiring pipeline and
    the need to approach diversity organizations with openings. Later, listeners will
    enjoy our mini-feature segment where we interview Instinct Science engineer Bill
    Peregoy about how their team uses Elixir. Tune in for more on what we can do to
    create a more diverse community. \nKey Points From This Episode:\nHear how co-host
    Sundi Myint first met Alexandra.\nAlexandra shares details about her coding background.\nWhy
    Alexandra feels so passionately about Turing Boot Camp.\nDetails about Alexandra’s
    first Elixir job.\nWhat Alexandra’s current team builds in Elixir and her experience
    using umbrella apps.\nComparing Ruby with Elixir and insights into what Elixir
    is missing. \nWhy Alexandra doesn’t recommend that junior engineers first learn
    Elixir.\nHow restricted Elixir hirings lead to a lack of diversity in the community.
    \nExploring ways to make the Elixir community more diverse. \nWhat Alexandra most
    enjoys about coding in Elixir.\nAlexandra’s top advice for minorities in the Elixir
    community.\nWhy it’s up to all of us to create a more inclusive community.\nWe
    talk to Bill Peregoy about how the team at Instinct Science uses Elixir.\nBill’s
    challenges and benefits to writing in Elixir.\nHow Bill would help new hires learn
    Elixir.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nAlexandra Chakeres on LinkedIn — https://www.linkedin.com/in/alexandrachakeres/\nAlexandra
    Chakeres on GitHub — https://github.com/chakeresa\nBlinker — https://www.blinker.com/\nElixirConf
    — https://elixirconf.com\nBrian Cardarella — https://twitter.com/bcardarella\nTuring
    School — https://turing.io/\nAngelfire — https://www.angelfire.lycos.com/\nMelvin
    Cedeno — https://twitter.com/thecraftedgem\nWeedmaps — https://weedmaps.com/\nDenver
    Erlang and Elixir Meetup — https://www.meetup.com/Denver-Erlang-Elixir/\nDC |>
    Elixir Meetup — https://www.meetup.com/DC-Elixir/\nDispatchHealth — https://www.dispatchhealth.com/\nAutotrader
    — https://www.autotrader.com/\nJosé Valim - https://github.com/josevalim\nDiversified
    Tech — https://www.diversifytech.co/\nWomen Who Code D.C — https://www.womenwhocode.com/dc\nBruce
    Tate — https://twitter.com/redrapids\nBill Peregoy on LinkedIn — https://www.linkedin.com/in/billperegoy/\nInstinct
    Science — https://www.instinct.vet/\nAppSense — https://www.ivanti.com/company/history/appsense
    Special Guest: Alexandra Chakeres.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Ap-0UjrU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d3843a34-8180-4e29-ae31-ab4d2da8379b.mp3
    length: '46530590'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Despite its welcoming character, the Elixir community struggles with
      diversity. Today we speak with Alexandra Chakeres about her experience and what
      we can do to make it more inclusive.
    duration: '48:25'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d3843a34-8180-4e29-ae31-ab4d2da8379b/cover.jpg?v=1
    summary: "\n        <p>Despite its welcoming character, the Elixir community struggles
      with diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists
      are women. Today we speak with Blinker software engineer Alexandra Chakeres
      about her experience of the community, as well as what we can do to make it
      more inclusive. We open by exploring Alexandra’s background and coding career.
      After expressing her enthusiasm for the Turing School, we talk about Alexandra’s
      learn-by-doing approach to picking up Elixir. She shares how she landed her
      first Elixir job before we chat about her current role at Blinker. We discuss
      why the small size of the community means that Alexandra doesn’t recommend Elixir
      to coding beginners. We then dive into the topic of Elixir diversity, touching
      on factors that limit inclusivity, including how few Elixir positions are available
      for juniors. Alexandra unpacks solutions, like how organizations can shift their
      hiring pipeline and the need to approach diversity organizations with openings.
      Later, listeners will enjoy our mini-feature segment where we interview Instinct
      Science engineer Bill Peregoy about how their team uses Elixir. Tune in for
      more on what we can do to create a more diverse community. </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Hear how co-host Sundi Myint first met Alexandra.</li>\n<li>Alexandra
      shares details about her coding background.</li>\n<li>Why Alexandra feels so
      passionately about Turing Boot Camp.</li>\n<li>Details about Alexandra’s first
      Elixir job.</li>\n<li>What Alexandra’s current team builds in Elixir and her
      experience using umbrella apps.</li>\n<li>Comparing Ruby with Elixir and insights
      into what Elixir is missing. </li>\n<li>Why Alexandra doesn’t recommend that
      junior engineers first learn Elixir.</li>\n<li>How restricted Elixir hirings
      lead to a lack of diversity in the community. </li>\n<li>Exploring ways to make
      the Elixir community more diverse. </li>\n<li>What Alexandra most enjoys about
      coding in Elixir.</li>\n<li>Alexandra’s top advice for minorities in the Elixir
      community.</li>\n<li>Why it’s up to all of us to create a more inclusive community.</li>\n<li>We
      talk to Bill Peregoy about how the team at Instinct Science uses Elixir.</li>\n<li>Bill’s
      challenges and benefits to writing in Elixir.</li>\n<li>How Bill would help
      new hires learn Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nAlexandra
      Chakeres on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandrachakeres/\"
      rel=\"nofollow\">https://www.linkedin.com/in/alexandrachakeres/</a><br>\nAlexandra
      Chakeres on GitHub — <a href=\"https://github.com/chakeresa\" rel=\"nofollow\">https://github.com/chakeresa</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com\" rel=\"nofollow\">https://elixirconf.com</a><br>\nBrian
      Cardarella — <a href=\"https://twitter.com/bcardarella\" rel=\"nofollow\">https://twitter.com/bcardarella</a><br>\nTuring
      School — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nAngelfire
      — <a href=\"https://www.angelfire.lycos.com/\" rel=\"nofollow\">https://www.angelfire.lycos.com/</a><br>\nMelvin
      Cedeno — <a href=\"https://twitter.com/thecraftedgem\" rel=\"nofollow\">https://twitter.com/thecraftedgem</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nDenver
      Erlang and Elixir Meetup — <a href=\"https://www.meetup.com/Denver-Erlang-Elixir/\"
      rel=\"nofollow\">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>\nDC |&gt;
      Elixir Meetup — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nDispatchHealth
      — <a href=\"https://www.dispatchhealth.com/\" rel=\"nofollow\">https://www.dispatchhealth.com/</a><br>\nAutotrader
      — <a href=\"https://www.autotrader.com/\" rel=\"nofollow\">https://www.autotrader.com/</a><br>\nJosé
      Valim - <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nDiversified
      Tech — <a href=\"https://www.diversifytech.co/\" rel=\"nofollow\">https://www.diversifytech.co/</a><br>\nWomen
      Who Code D.C — <a href=\"https://www.womenwhocode.com/dc\" rel=\"nofollow\">https://www.womenwhocode.com/dc</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBill
      Peregoy on LinkedIn — <a href=\"https://www.linkedin.com/in/billperegoy/\" rel=\"nofollow\">https://www.linkedin.com/in/billperegoy/</a><br>\nInstinct
      Science — <a href=\"https://www.instinct.vet/\" rel=\"nofollow\">https://www.instinct.vet/</a><br>\nAppSense
      — <a href=\"https://www.ivanti.com/company/history/appsense\" rel=\"nofollow\">https://www.ivanti.com/company/history/appsense</a></p><p>Special
      Guest: Alexandra Chakeres.</p>\n      "
  contentEncoded: "\n        <p>Despite its welcoming character, the Elixir community
    struggles with diversity; as the 2020 ElixirConf community survey shows, only
    2% of Elixirists are women. Today we speak with Blinker software engineer Alexandra
    Chakeres about her experience of the community, as well as what we can do to make
    it more inclusive. We open by exploring Alexandra’s background and coding career.
    After expressing her enthusiasm for the Turing School, we talk about Alexandra’s
    learn-by-doing approach to picking up Elixir. She shares how she landed her first
    Elixir job before we chat about her current role at Blinker. We discuss why the
    small size of the community means that Alexandra doesn’t recommend Elixir to coding
    beginners. We then dive into the topic of Elixir diversity, touching on factors
    that limit inclusivity, including how few Elixir positions are available for juniors.
    Alexandra unpacks solutions, like how organizations can shift their hiring pipeline
    and the need to approach diversity organizations with openings. Later, listeners
    will enjoy our mini-feature segment where we interview Instinct Science engineer
    Bill Peregoy about how their team uses Elixir. Tune in for more on what we can
    do to create a more diverse community. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hear
    how co-host Sundi Myint first met Alexandra.</li>\n<li>Alexandra shares details
    about her coding background.</li>\n<li>Why Alexandra feels so passionately about
    Turing Boot Camp.</li>\n<li>Details about Alexandra’s first Elixir job.</li>\n<li>What
    Alexandra’s current team builds in Elixir and her experience using umbrella apps.</li>\n<li>Comparing
    Ruby with Elixir and insights into what Elixir is missing. </li>\n<li>Why Alexandra
    doesn’t recommend that junior engineers first learn Elixir.</li>\n<li>How restricted
    Elixir hirings lead to a lack of diversity in the community. </li>\n<li>Exploring
    ways to make the Elixir community more diverse. </li>\n<li>What Alexandra most
    enjoys about coding in Elixir.</li>\n<li>Alexandra’s top advice for minorities
    in the Elixir community.</li>\n<li>Why it’s up to all of us to create a more inclusive
    community.</li>\n<li>We talk to Bill Peregoy about how the team at Instinct Science
    uses Elixir.</li>\n<li>Bill’s challenges and benefits to writing in Elixir.</li>\n<li>How
    Bill would help new hires learn Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
    Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nAlexandra
    Chakeres on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandrachakeres/\"
    rel=\"nofollow\">https://www.linkedin.com/in/alexandrachakeres/</a><br>\nAlexandra
    Chakeres on GitHub — <a href=\"https://github.com/chakeresa\" rel=\"nofollow\">https://github.com/chakeresa</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com\" rel=\"nofollow\">https://elixirconf.com</a><br>\nBrian
    Cardarella — <a href=\"https://twitter.com/bcardarella\" rel=\"nofollow\">https://twitter.com/bcardarella</a><br>\nTuring
    School — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nAngelfire
    — <a href=\"https://www.angelfire.lycos.com/\" rel=\"nofollow\">https://www.angelfire.lycos.com/</a><br>\nMelvin
    Cedeno — <a href=\"https://twitter.com/thecraftedgem\" rel=\"nofollow\">https://twitter.com/thecraftedgem</a><br>\nWeedmaps
    — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nDenver
    Erlang and Elixir Meetup — <a href=\"https://www.meetup.com/Denver-Erlang-Elixir/\"
    rel=\"nofollow\">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>\nDC |&gt;
    Elixir Meetup — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nDispatchHealth
    — <a href=\"https://www.dispatchhealth.com/\" rel=\"nofollow\">https://www.dispatchhealth.com/</a><br>\nAutotrader
    — <a href=\"https://www.autotrader.com/\" rel=\"nofollow\">https://www.autotrader.com/</a><br>\nJosé
    Valim - <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nDiversified
    Tech — <a href=\"https://www.diversifytech.co/\" rel=\"nofollow\">https://www.diversifytech.co/</a><br>\nWomen
    Who Code D.C — <a href=\"https://www.womenwhocode.com/dc\" rel=\"nofollow\">https://www.womenwhocode.com/dc</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBill
    Peregoy on LinkedIn — <a href=\"https://www.linkedin.com/in/billperegoy/\" rel=\"nofollow\">https://www.linkedin.com/in/billperegoy/</a><br>\nInstinct
    Science — <a href=\"https://www.instinct.vet/\" rel=\"nofollow\">https://www.instinct.vet/</a><br>\nAppSense
    — <a href=\"https://www.ivanti.com/company/history/appsense\" rel=\"nofollow\">https://www.ivanti.com/company/history/appsense</a></p><p>Special
    Guest: Alexandra Chakeres.</p>\n      "
- title: 'Matt Nowack and Jake Heinz on Elixir and Discord; Bonus: Arthi Radhakrishnan,
    Community.com'
  slug: s5e8-nowack-heinz
  link: https://smartlogic.io/podcast/elixir-wizards/s5e8-nowack-heinz
  guid: 1752ae0e-feb0-4606-b3b0-97f70e29e3de
  pubDate: Thu, 21 Jan 2021 06:00:00 -0500
  pubDateFriendly: January 21, 2021
  description: |
    In this episode we continue our conversation about adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system! We also invite Arthi Radhakrishnan from community.com for our mini-interview in the last chunk of the episode. Our chat begins with Jake and Matt telling Elixir developers exactly why they should not use Mnesia. They subsequently dive into their journeys in programming and the process of learning Elixir after joining Discord. They share a few aha-moments as well as challenging projects that asked them to get their heads around some of the more powerful features of Elixir, highlighting a way they used immutability for a project that asked them to efficiently calculate deltas for large member list updates. From there we get into the culture around onboarding new devs at Discord, the company’s popular open-source Elixir contributions, and some brags about the high performance of features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their suggestions for teams and devs hoping to adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s standard library. After that, it’s time for our chat with Arthi, where we hear about her programming journey, how Elixir is being put to use at Community.com, how the company supports new devs learning Elixir, and more!
    Key Points From This Episode:
    Our guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.
    How Jake and Matt got into programming and learned Elixir after joining Discord.
    The history of the use of Elixir at Discord and some of the projects Jake helped build since.
    The nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.
    Different projects Matt worked on after joining Discord and how they helped him learn Elixir.
    Aha moments of learning Elixir; features of the language that acted as force multipliers in the development of different Discord projects.
    Processes at Discord for helping new developers learn Elixir.
    Open-source contributions from Discord to the Elixir community and the culture around this at Discord.
    Issues around logging and memory allocation in Elixir and what our guests think could change.
    The sheer power Elixir brought to the Discord project allowing rapid scale with a small team.
    Jake weighs in on the strengths of Python, Rust and Elixir, as well as BEAM processes versus Goroutines.
    Discord as a native Electron app and whether we will see it written in Rust.
    Advice regarding adopting Elixir about the power of OTP and the standard library.
    Introducing Arthi Radhakrishnan for our mini-interview at the end of the show.
    Previous languages Arthi worked in and how she learned Elixir after joining community.com.
    The fan chat service offered at community.com and some famous users.
    Features of the community.com architecture built in Elixir.
    The size of the team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.

    Links Mentioned in Today’s Episode:
    SmartLogic — https://smartlogic.io/
    Matt Nowack on GitHub — https://github.com/ihumanable
    Mat Nowack on Twitter — https://twitter.com/ihumanable?lang=en
    Jake Heinz on GitHub — https://github.com/jhgg
    Apply for a Position at Discord — https://discord.com/jobs
    Stanislav Vishnevskiy on LinkedIn — https://www.linkedin.com/in/svishnevskiy/
    ZenMonitor — https://github.com/discord/zenmonitor
    SortedSet Nif — https://github.com/discord/sortedsetnif
    The BEAM Book — https://github.com/happi/theBeamBook
    Semaphore — https://github.com/discord/semaphore
    ExHashRing — https://github.com/discord/exhashring
    ertsalloc Documentation — https://erlang.org/doc/man/erts_alloc.html
    Arthi Radhakrishnan on LinkedIn — https://www.linkedin.com/in/arthiradhakrishnan/
    Community.com (https://www.community.com/)
    Andrea Leopardi on LinkedIn — https://www.linkedin.com/in/anleopardi/?originalSubdomain=it Special Guests: Jake Heinz and Matt Nowack.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5GV4qQWP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1752ae0e-feb0-4606-b3b0-97f70e29e3de.mp3
    length: '51116798'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: In today's episode we talk with Matt Nowack and Jake Heinz from Discord.
      They get into the features of Elixir that make it a great fit for building a
      real-time chat infrastructure system!
    duration: '53:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1752ae0e-feb0-4606-b3b0-97f70e29e3de/cover.jpg?v=1
    summary: "\n        <p>In this episode we continue our conversation about adopting
      Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them
      get into the features of Elixir that make it a great fit for building a real-time
      chat infrastructure system! We also invite Arthi Radhakrishnan from community.com
      for our mini-interview in the last chunk of the episode. Our chat begins with
      Jake and Matt telling Elixir developers exactly why they should not use Mnesia.
      They subsequently dive into their journeys in programming and the process of
      learning Elixir after joining Discord. They share a few aha-moments as well
      as challenging projects that asked them to get their heads around some of the
      more powerful features of Elixir, highlighting a way they used immutability
      for a project that asked them to efficiently calculate deltas for large member
      list updates. From there we get into the culture around onboarding new devs
      at Discord, the company’s popular open-source Elixir contributions, and some
      brags about the high performance of features of Discord built in Elixir. Wrapping
      up with Jake and Matt, we hear their suggestions for teams and devs hoping to
      adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s
      standard library. After that, it’s time for our chat with Arthi, where we hear
      about her programming journey, how Elixir is being put to use at Community.com,
      how the company supports new devs learning Elixir, and more!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Our guests’ thoughts on why Elixir developers
      shouldn’t use the database driver Mnesia.</li>\n<li>How Jake and Matt got into
      programming and learned Elixir after joining Discord.</li>\n<li>The history
      of the use of Elixir at Discord and some of the projects Jake helped build since.</li>\n<li>The
      nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.</li>\n<li>Different
      projects Matt worked on after joining Discord and how they helped him learn
      Elixir.</li>\n<li>Aha moments of learning Elixir; features of the language that
      acted as force multipliers in the development of different Discord projects.</li>\n<li>Processes
      at Discord for helping new developers learn Elixir.</li>\n<li>Open-source contributions
      from Discord to the Elixir community and the culture around this at Discord.</li>\n<li>Issues
      around logging and memory allocation in Elixir and what our guests think could
      change.</li>\n<li>The sheer power Elixir brought to the Discord project allowing
      rapid scale with a small team.</li>\n<li>Jake weighs in on the strengths of
      Python, Rust and Elixir, as well as BEAM processes versus Goroutines.</li>\n<li>Discord
      as a native Electron app and whether we will see it written in Rust.</li>\n<li>Advice
      regarding adopting Elixir about the power of OTP and the standard library.</li>\n<li>Introducing
      Arthi Radhakrishnan for our mini-interview at the end of the show.</li>\n<li>Previous
      languages Arthi worked in and how she learned Elixir after joining community.com.</li>\n<li>The
      fan chat service offered at community.com and some famous users.</li>\n<li>Features
      of the community.com architecture built in Elixir.</li>\n<li>The size of the
      team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>\n<li>\nLinks
      Mentioned in Today’s Episode:</li>\n</ul>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nMatt Nowack on GitHub — <a
      href=\"https://github.com/ihumanable\" rel=\"nofollow\">https://github.com/ihumanable</a><br>\nMat
      Nowack on Twitter — <a href=\"https://twitter.com/ihumanable?lang=en\" rel=\"nofollow\">https://twitter.com/ihumanable?lang=en</a><br>\nJake
      Heinz on GitHub — <a href=\"https://github.com/jhgg\" rel=\"nofollow\">https://github.com/jhgg</a><br>\nApply
      for a Position at Discord — <a href=\"https://discord.com/jobs\" rel=\"nofollow\">https://discord.com/jobs</a><br>\nStanislav
      Vishnevskiy on LinkedIn — <a href=\"https://www.linkedin.com/in/svishnevskiy/\"
      rel=\"nofollow\">https://www.linkedin.com/in/svishnevskiy/</a><br>\nZenMonitor
      — <a href=\"https://github.com/discord/zen_monitor\" rel=\"nofollow\">https://github.com/discord/zen_monitor</a><br>\nSortedSet
      Nif — <a href=\"https://github.com/discord/sorted_set_nif\" rel=\"nofollow\">https://github.com/discord/sorted_set_nif</a><br>\nThe
      BEAM Book — <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nSemaphore
      — <a href=\"https://github.com/discord/semaphore\" rel=\"nofollow\">https://github.com/discord/semaphore</a><br>\nExHashRing
      — <a href=\"https://github.com/discord/ex_hash_ring\" rel=\"nofollow\">https://github.com/discord/ex_hash_ring</a><br>\nerts_alloc
      Documentation — <a href=\"https://erlang.org/doc/man/erts_alloc.html\" rel=\"nofollow\">https://erlang.org/doc/man/erts_alloc.html</a><br>\nArthi
      Radhakrishnan on LinkedIn — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
      rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>\n<a
      href=\"https://www.community.com/\" rel=\"nofollow\">Community.com</a><br>\nAndrea
      Leopardi on LinkedIn — <a href=\"https://www.linkedin.com/in/anleopardi/?originalSubdomain=it\"
      rel=\"nofollow\">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special
      Guests: Jake Heinz and Matt Nowack.</p>\n      "
  contentEncoded: "\n        <p>In this episode we continue our conversation about
    adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing
    them get into the features of Elixir that make it a great fit for building a real-time
    chat infrastructure system! We also invite Arthi Radhakrishnan from community.com
    for our mini-interview in the last chunk of the episode. Our chat begins with
    Jake and Matt telling Elixir developers exactly why they should not use Mnesia.
    They subsequently dive into their journeys in programming and the process of learning
    Elixir after joining Discord. They share a few aha-moments as well as challenging
    projects that asked them to get their heads around some of the more powerful features
    of Elixir, highlighting a way they used immutability for a project that asked
    them to efficiently calculate deltas for large member list updates. From there
    we get into the culture around onboarding new devs at Discord, the company’s popular
    open-source Elixir contributions, and some brags about the high performance of
    features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their
    suggestions for teams and devs hoping to adopt Elixir, where they strongly advise
    on learning OTP as well as Elixir’s standard library. After that, it’s time for
    our chat with Arthi, where we hear about her programming journey, how Elixir is
    being put to use at Community.com, how the company supports new devs learning
    Elixir, and more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Our
    guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.</li>\n<li>How
    Jake and Matt got into programming and learned Elixir after joining Discord.</li>\n<li>The
    history of the use of Elixir at Discord and some of the projects Jake helped build
    since.</li>\n<li>The nuts and bolts of OTP; Jake’s experiences learning it along
    with Elixir at Discord.</li>\n<li>Different projects Matt worked on after joining
    Discord and how they helped him learn Elixir.</li>\n<li>Aha moments of learning
    Elixir; features of the language that acted as force multipliers in the development
    of different Discord projects.</li>\n<li>Processes at Discord for helping new
    developers learn Elixir.</li>\n<li>Open-source contributions from Discord to the
    Elixir community and the culture around this at Discord.</li>\n<li>Issues around
    logging and memory allocation in Elixir and what our guests think could change.</li>\n<li>The
    sheer power Elixir brought to the Discord project allowing rapid scale with a
    small team.</li>\n<li>Jake weighs in on the strengths of Python, Rust and Elixir,
    as well as BEAM processes versus Goroutines.</li>\n<li>Discord as a native Electron
    app and whether we will see it written in Rust.</li>\n<li>Advice regarding adopting
    Elixir about the power of OTP and the standard library.</li>\n<li>Introducing
    Arthi Radhakrishnan for our mini-interview at the end of the show.</li>\n<li>Previous
    languages Arthi worked in and how she learned Elixir after joining community.com.</li>\n<li>The
    fan chat service offered at community.com and some famous users.</li>\n<li>Features
    of the community.com architecture built in Elixir.</li>\n<li>The size of the team,
    the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>\n<li>\nLinks
    Mentioned in Today’s Episode:</li>\n</ul>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nMatt Nowack on GitHub — <a href=\"https://github.com/ihumanable\"
    rel=\"nofollow\">https://github.com/ihumanable</a><br>\nMat Nowack on Twitter
    — <a href=\"https://twitter.com/ihumanable?lang=en\" rel=\"nofollow\">https://twitter.com/ihumanable?lang=en</a><br>\nJake
    Heinz on GitHub — <a href=\"https://github.com/jhgg\" rel=\"nofollow\">https://github.com/jhgg</a><br>\nApply
    for a Position at Discord — <a href=\"https://discord.com/jobs\" rel=\"nofollow\">https://discord.com/jobs</a><br>\nStanislav
    Vishnevskiy on LinkedIn — <a href=\"https://www.linkedin.com/in/svishnevskiy/\"
    rel=\"nofollow\">https://www.linkedin.com/in/svishnevskiy/</a><br>\nZenMonitor
    — <a href=\"https://github.com/discord/zen_monitor\" rel=\"nofollow\">https://github.com/discord/zen_monitor</a><br>\nSortedSet
    Nif — <a href=\"https://github.com/discord/sorted_set_nif\" rel=\"nofollow\">https://github.com/discord/sorted_set_nif</a><br>\nThe
    BEAM Book — <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nSemaphore
    — <a href=\"https://github.com/discord/semaphore\" rel=\"nofollow\">https://github.com/discord/semaphore</a><br>\nExHashRing
    — <a href=\"https://github.com/discord/ex_hash_ring\" rel=\"nofollow\">https://github.com/discord/ex_hash_ring</a><br>\nerts_alloc
    Documentation — <a href=\"https://erlang.org/doc/man/erts_alloc.html\" rel=\"nofollow\">https://erlang.org/doc/man/erts_alloc.html</a><br>\nArthi
    Radhakrishnan on LinkedIn — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
    rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>\n<a href=\"https://www.community.com/\"
    rel=\"nofollow\">Community.com</a><br>\nAndrea Leopardi on LinkedIn — <a href=\"https://www.linkedin.com/in/anleopardi/?originalSubdomain=it\"
    rel=\"nofollow\">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special
    Guests: Jake Heinz and Matt Nowack.</p>\n      "
- title: Jason Axelson on the Elixir Language Server
  slug: s5e7-axelson
  link: https://smartlogic.io/podcast/elixir-wizards/s5e7-axelson
  guid: 6475cfad-49d7-498d-a06a-c9af4a82e710
  pubDate: Thu, 14 Jan 2021 06:00:00 -0500
  pubDateFriendly: January 14, 2021
  description: |
    Welcome back to the Elixir Wizards podcast! In this episode, we will be continuing our conversation on the theme of adopting elixir, and our great guest for today is Jason Axelson! Jason is a back-end developer for a mixed reality studio called Animal Repair Shop and has also made some significant contributions to the Elixir Language Server project. We kick off our conversation with Jason hearing about his programming journey and then dive into the event chat service app he helped build using Elixir while he was working at Hobnob. From there, we talk about some of his aha moments while learning Elixir and some of his favorite features about the language which he is putting to use building out the back end for Animal Repair Shop. Next, we turn our attention to Elixir Language Server and Jason weighs in on the IDE type features it offers, why he got started as a collaborator on the project, and some of their challenges in the field of shared governance. Wrapping up for today, Jason makes a few suggestions for how devs who love Elixir can convince their teams to adopt it as a more mainstream option. Tune in for a great chat on the topic of adopting Elixir!
    Key Points From This Episode:
    An introduction to Jason Axelson and the story of how he got into programming.
    Some of the books our hosts and guests read as kids and how they relate to programming.
    How Jason got into Elixir while working on a chat service for events app at Hobnob.
    Jason’s current project using Elixir to build the back end for Animal Repair Shop.
    What caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning it.
    The TLDR version of the project that birthed ‘Road to 2 Million WebSocket Connections’.
    What Jason loves about Elixir — pattern matching, immutability, explicitness.
    Why Jason and his team at Animal Repair Shop are building their back end in Elixir.
    The features provided by the Elixir Language Server for giving IDEs Elixir type support.
    Jason’s involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture, etc.
    Some of the most challenging aspects of working on ElixirLS for Jason.
    Jason’s talk on ElixirLS at ElixirConf – its content, doing it virtually, and more.
    New features in the pipeline for ElixirLS; formatting speed improvements and more.
    The role that good tooling plays in being able to learn a language more easily.
    What needs to happen for Elixir to become a more mainstream back end option.
    Advice from Jason regarding ways to convince your firm to adopt Elixir.
    Links Mentioned in Today’s Episode:
    SmartLogic — https://smartlogic.io/
    Jason Axelson on LinkedIn — https://www.linkedin.com/in/jasonaxelson
    Jason Axelson on GitHub — https://github.com/axelson
    Jason Axelson on Twitter — https://twitter.com/bostonvaulter?lang=en
    Privcheck by Jason Axelson — https://github.com/axelson/privcheck
    Jason Axelson ElixirConf ElixirLS Talk — https://2020.elixirconf.com/speakers/126/talk
    A Definitive Guide to JavaScript  — https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/
    Hobnob — https://hobnob.app/
    Elixir for Programmers by Dave Thomas — https://codestool.coding-gnome.com/courses/elixir-for-programmers
    Animal Repair Shop — https://www.animalrepairshop.com/about/
    ‘Road to 2 Million WebSocket Connections’ — https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections
    Elixir Getting Started Guide — https://elixir-lang.org/getting-started/introduction.html
    GitHub/ElixirLP — https://github.com/elixir-lsp/elixir-ls
    Adopting Elixir — https://pragprog.com/titles/tvmelixir/adopting-elixir/
    Elixir Slack — https://elixir-slackin.herokuapp.com/
    elixir-lsp/elixir-ls: Issue #274 — https://github.com/elixir-lsp/elixir-ls/issues/274
    elixir-lsp/elixir-ls: Issue #381 — https://github.com/elixir-lsp/elixir-ls/issues/381 Special Guest: Jason Axelson.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+AGH9ImrY
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6475cfad-49d7-498d-a06a-c9af4a82e710.mp3
    length: '32639876'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: 'Today''s guest Jason Axelson, a back-end developer for a mixed reality
      studio,  talks about his programming journey and contributions to Animal Repair
      Shop and the Elixir Language Server project. '
    duration: '33:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6475cfad-49d7-498d-a06a-c9af4a82e710/cover.jpg?v=1
    summary: "\n        <p>Welcome back to the Elixir Wizards podcast! In this episode,
      we will be continuing our conversation on the theme of adopting elixir, and
      our great guest for today is Jason Axelson! Jason is a back-end developer for
      a mixed reality studio called Animal Repair Shop and has also made some significant
      contributions to the Elixir Language Server project. We kick off our conversation
      with Jason hearing about his programming journey and then dive into the event
      chat service app he helped build using Elixir while he was working at Hobnob.
      From there, we talk about some of his aha moments while learning Elixir and
      some of his favorite features about the language which he is putting to use
      building out the back end for Animal Repair Shop. Next, we turn our attention
      to Elixir Language Server and Jason weighs in on the IDE type features it offers,
      why he got started as a collaborator on the project, and some of their challenges
      in the field of shared governance. Wrapping up for today, Jason makes a few
      suggestions for how devs who love Elixir can convince their teams to adopt it
      as a more mainstream option. Tune in for a great chat on the topic of adopting
      Elixir!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>An introduction
      to Jason Axelson and the story of how he got into programming.</li>\n<li>Some
      of the books our hosts and guests read as kids and how they relate to programming.</li>\n<li>How
      Jason got into Elixir while working on a chat service for events app at Hobnob.</li>\n<li>Jason’s
      current project using Elixir to build the back end for Animal Repair Shop.</li>\n<li>What
      caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments
      learning it.</li>\n<li>The TLDR version of the project that birthed ‘Road to
      2 Million WebSocket Connections’.</li>\n<li>What Jason loves about Elixir —
      pattern matching, immutability, explicitness.</li>\n<li>Why Jason and his team
      at Animal Repair Shop are building their back end in Elixir.</li>\n<li>The features
      provided by the Elixir Language Server for giving IDEs Elixir type support.</li>\n<li>Jason’s
      involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture,
      etc.</li>\n<li>Some of the most challenging aspects of working on ElixirLS for
      Jason.</li>\n<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing
      it virtually, and more.</li>\n<li>New features in the pipeline for ElixirLS;
      formatting speed improvements and more.</li>\n<li>The role that good tooling
      plays in being able to learn a language more easily.</li>\n<li>What needs to
      happen for Elixir to become a more mainstream back end option.</li>\n<li>Advice
      from Jason regarding ways to convince your firm to adopt Elixir.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nJason Axelson on LinkedIn —
      <a href=\"https://www.linkedin.com/in/jasonaxelson\" rel=\"nofollow\">https://www.linkedin.com/in/jasonaxelson</a><br>\nJason
      Axelson on GitHub — <a href=\"https://github.com/axelson\" rel=\"nofollow\">https://github.com/axelson</a><br>\nJason
      Axelson on Twitter — <a href=\"https://twitter.com/bostonvaulter?lang=en\" rel=\"nofollow\">https://twitter.com/bostonvaulter?lang=en</a><br>\nPriv_check
      by Jason Axelson — <a href=\"https://github.com/axelson/priv_check\" rel=\"nofollow\">https://github.com/axelson/priv_check</a><br>\nJason
      Axelson ElixirConf ElixirLS Talk — <a href=\"https://2020.elixirconf.com/speakers/126/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/126/talk</a><br>\nA Definitive
      Guide to JavaScript  — <a href=\"https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>\nHobnob
      — <a href=\"https://hobnob.app/\" rel=\"nofollow\">https://hobnob.app/</a><br>\nElixir
      for Programmers by Dave Thomas — <a href=\"https://codestool.coding-gnome.com/courses/elixir-for-programmers\"
      rel=\"nofollow\">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>\nAnimal
      Repair Shop — <a href=\"https://www.animalrepairshop.com/about/\" rel=\"nofollow\">https://www.animalrepairshop.com/about/</a><br>\n‘Road
      to 2 Million WebSocket Connections’ — <a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
      rel=\"nofollow\">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nElixir
      Getting Started Guide — <a href=\"https://elixir-lang.org/getting-started/introduction.html\"
      rel=\"nofollow\">https://elixir-lang.org/getting-started/introduction.html</a><br>\nGitHub/ElixirLP
      — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAdopting
      Elixir — <a href=\"https://pragprog.com/titles/tvmelixir/adopting-elixir/\"
      rel=\"nofollow\">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>\nElixir
      Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nelixir-lsp/elixir-ls:
      Issue #274 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/274\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>\nelixir-lsp/elixir-ls:
      Issue #381 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/381\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special
      Guest: Jason Axelson.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to the Elixir Wizards podcast! In this
    episode, we will be continuing our conversation on the theme of adopting elixir,
    and our great guest for today is Jason Axelson! Jason is a back-end developer
    for a mixed reality studio called Animal Repair Shop and has also made some significant
    contributions to the Elixir Language Server project. We kick off our conversation
    with Jason hearing about his programming journey and then dive into the event
    chat service app he helped build using Elixir while he was working at Hobnob.
    From there, we talk about some of his aha moments while learning Elixir and some
    of his favorite features about the language which he is putting to use building
    out the back end for Animal Repair Shop. Next, we turn our attention to Elixir
    Language Server and Jason weighs in on the IDE type features it offers, why he
    got started as a collaborator on the project, and some of their challenges in
    the field of shared governance. Wrapping up for today, Jason makes a few suggestions
    for how devs who love Elixir can convince their teams to adopt it as a more mainstream
    option. Tune in for a great chat on the topic of adopting Elixir!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>An introduction to Jason Axelson and
    the story of how he got into programming.</li>\n<li>Some of the books our hosts
    and guests read as kids and how they relate to programming.</li>\n<li>How Jason
    got into Elixir while working on a chat service for events app at Hobnob.</li>\n<li>Jason’s
    current project using Elixir to build the back end for Animal Repair Shop.</li>\n<li>What
    caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning
    it.</li>\n<li>The TLDR version of the project that birthed ‘Road to 2 Million
    WebSocket Connections’.</li>\n<li>What Jason loves about Elixir — pattern matching,
    immutability, explicitness.</li>\n<li>Why Jason and his team at Animal Repair
    Shop are building their back end in Elixir.</li>\n<li>The features provided by
    the Elixir Language Server for giving IDEs Elixir type support.</li>\n<li>Jason’s
    involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture,
    etc.</li>\n<li>Some of the most challenging aspects of working on ElixirLS for
    Jason.</li>\n<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing it
    virtually, and more.</li>\n<li>New features in the pipeline for ElixirLS; formatting
    speed improvements and more.</li>\n<li>The role that good tooling plays in being
    able to learn a language more easily.</li>\n<li>What needs to happen for Elixir
    to become a more mainstream back end option.</li>\n<li>Advice from Jason regarding
    ways to convince your firm to adopt Elixir.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nJason Axelson on LinkedIn — <a
    href=\"https://www.linkedin.com/in/jasonaxelson\" rel=\"nofollow\">https://www.linkedin.com/in/jasonaxelson</a><br>\nJason
    Axelson on GitHub — <a href=\"https://github.com/axelson\" rel=\"nofollow\">https://github.com/axelson</a><br>\nJason
    Axelson on Twitter — <a href=\"https://twitter.com/bostonvaulter?lang=en\" rel=\"nofollow\">https://twitter.com/bostonvaulter?lang=en</a><br>\nPriv_check
    by Jason Axelson — <a href=\"https://github.com/axelson/priv_check\" rel=\"nofollow\">https://github.com/axelson/priv_check</a><br>\nJason
    Axelson ElixirConf ElixirLS Talk — <a href=\"https://2020.elixirconf.com/speakers/126/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/126/talk</a><br>\nA Definitive
    Guide to JavaScript  — <a href=\"https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>\nHobnob
    — <a href=\"https://hobnob.app/\" rel=\"nofollow\">https://hobnob.app/</a><br>\nElixir
    for Programmers by Dave Thomas — <a href=\"https://codestool.coding-gnome.com/courses/elixir-for-programmers\"
    rel=\"nofollow\">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>\nAnimal
    Repair Shop — <a href=\"https://www.animalrepairshop.com/about/\" rel=\"nofollow\">https://www.animalrepairshop.com/about/</a><br>\n‘Road
    to 2 Million WebSocket Connections’ — <a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
    rel=\"nofollow\">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nElixir
    Getting Started Guide — <a href=\"https://elixir-lang.org/getting-started/introduction.html\"
    rel=\"nofollow\">https://elixir-lang.org/getting-started/introduction.html</a><br>\nGitHub/ElixirLP
    — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAdopting
    Elixir — <a href=\"https://pragprog.com/titles/tvmelixir/adopting-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>\nElixir
    Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nelixir-lsp/elixir-ls:
    Issue #274 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/274\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>\nelixir-lsp/elixir-ls:
    Issue #381 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/381\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special
    Guest: Jason Axelson.</p>\n      "
- title: Steve Domin on Innovating Travel APIs
  slug: s5e6-domin
  link: https://smartlogic.io/podcast/elixir-wizards/s5e6-domin
  guid: 6d2c98f6-1ba5-4003-8e4a-d98265dccd91
  pubDate: Fri, 08 Jan 2021 06:00:00 -0500
  pubDateFriendly: January  8, 2021
  description: "Anyone who has written software for the travel industry can tell you
    that it is in desperate need of innovation — shockingly many of their cobwebbed
    systems were built in the 70s. Today we speak with Duffel CEO Steve Domin, who
    is building tech that can finally align travel with the expectations of modern
    consumers. We open by exploring Steve’s journey into coding before diving into
    how Duffel is innovating travel. After touching on how the pandemic has impacted
    Duffel’s roll-out, Steve shares horror stories about the outdated tech and API
    systems that airlines use. We discuss Duffel’s service offerings and why Elixir
    is uniquely suited to solve the problems that Steve’s company is addressing. Steve
    then talks about the types of engineers that Duffel hires, his client base, and
    where his company is heading. Near the end of the episode, we ask Steve for his
    advice on selling your company on Elixir and we chat about the status of the London
    Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make
    travel an effortless experience.  \nKey Points From This Episode:\nIntroducing
    Duffel CEO Steve Domin. \nSteve shares details about his coding journey and career
    highlights. \nInsights into the old school ecosystem of Flash, Flex, and ActionScript.\nExploring
    how Duffel is innovating the travel industry. \nWhy Duffel accelerated their roll-out
    due to the pandemic. \nSteve unpacks the outdated tech and API systems that airlines
    use. \nWhy Duffel decided to use Elixir to tackle their problems.\nThe benefits
    of using Elixir when dealing with airline data. \nSteve gives listeners an overview
    of Duffel’s pipeline. \nInsights into the types of engineers that Duffel hires.
    \nWho Duffel’s clients are and how they’re onboarded.\nSteve reflects on some
    airline API horror stories.\nHear about Duffel’s roadmap — the future is bright.\nWhat
    Elixir has uniquely enabled Duffel to do.\nSteve’s advice on selling Elixir to
    stakeholders in your company.\nThe status of the London Elixir Meetup.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nSteve Domin
    — https://stevedomin.com/about\nSteve Domin on LinkedIn — https://www.linkedin.com/in/stevedomin/\nSteve
    Domin on Twitter — https://twitter.com/stevedomin\nDuffel — https://duffel.com/\nDuffel
    Careers — https://duffel.com/careers\nJosé Valim — https://twitter.com/josevalim\nFlex
    — https://www.adobe.com/products/flex.html\nPassenger Service System — https://en.wikipedia.org/wiki/Passengerservicesystem\nGlobal
    Distribution System — https://en.wikipedia.org/wiki/Globaldistributionsystem\nSabre
    — https://www.sabre.com/\nAmadeus — https://amadeus.com/en\n‘Why does NDC matter
    to my travel business?’ — https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\nIATA
    — https://www.iata.org/\nNext.js — https://nextjs.org/\nGoCardless — https://gocardless.com/\nTwilio
    — https://www.twilio.com/\nStripe — https://stripe.com/\nThomas Bates — https://www.linkedin.com/in/thomas-bates-3908a74b/\nElixir
    London Meetup — https://www.meetup.com/Elixir-London/\nBaris Balic — https://twitter.com/barisbalic
    Special Guest: Steve Domin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+taR6HVSP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6d2c98f6-1ba5-4003-8e4a-d98265dccd91.mp3
    length: '27767287'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: The travel industry is in desperate need of innovation from systems
      that were built in the 70s. Today Steve Domin talks about how Duffel is building
      tech that can finally align travel with modern consumers.
    duration: '38:33'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6d2c98f6-1ba5-4003-8e4a-d98265dccd91/cover.jpg?v=1
    summary: "\n        <p>Anyone who has written software for the travel industry
      can tell you that it is in desperate need of innovation — shockingly many of
      their cobwebbed systems were built in the 70s. Today we speak with Duffel CEO
      Steve Domin, who is building tech that can finally align travel with the expectations
      of modern consumers. We open by exploring Steve’s journey into coding before
      diving into how Duffel is innovating travel. After touching on how the pandemic
      has impacted Duffel’s roll-out, Steve shares horror stories about the outdated
      tech and API systems that airlines use. We discuss Duffel’s service offerings
      and why Elixir is uniquely suited to solve the problems that Steve’s company
      is addressing. Steve then talks about the types of engineers that Duffel hires,
      his client base, and where his company is heading. Near the end of the episode,
      we ask Steve for his advice on selling your company on Elixir and we chat about
      the status of the London Elixir Meetup. Tune in for more insights on how Steve
      is using Elixir to make travel an effortless experience.  </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing Duffel CEO Steve Domin. </li>\n<li>Steve
      shares details about his coding journey and career highlights. </li>\n<li>Insights
      into the old school ecosystem of Flash, Flex, and ActionScript.</li>\n<li>Exploring
      how Duffel is innovating the travel industry. </li>\n<li>Why Duffel accelerated
      their roll-out due to the pandemic. </li>\n<li>Steve unpacks the outdated tech
      and API systems that airlines use. </li>\n<li>Why Duffel decided to use Elixir
      to tackle their problems.</li>\n<li>The benefits of using Elixir when dealing
      with airline data. </li>\n<li>Steve gives listeners an overview of Duffel’s
      pipeline. </li>\n<li>Insights into the types of engineers that Duffel hires.
      </li>\n<li>Who Duffel’s clients are and how they’re onboarded.</li>\n<li>Steve
      reflects on some airline API horror stories.</li>\n<li>Hear about Duffel’s roadmap
      — the future is bright.</li>\n<li>What Elixir has uniquely enabled Duffel to
      do.</li>\n<li>Steve’s advice on selling Elixir to stakeholders in your company.</li>\n<li>The
      status of the London Elixir Meetup.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSteve
      Domin — <a href=\"https://stevedomin.com/about\" rel=\"nofollow\">https://stevedomin.com/about</a><br>\nSteve
      Domin on LinkedIn — <a href=\"https://www.linkedin.com/in/stevedomin/\" rel=\"nofollow\">https://www.linkedin.com/in/stevedomin/</a><br>\nSteve
      Domin on Twitter — <a href=\"https://twitter.com/stevedomin\" rel=\"nofollow\">https://twitter.com/stevedomin</a><br>\nDuffel
      — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nDuffel
      Careers — <a href=\"https://duffel.com/careers\" rel=\"nofollow\">https://duffel.com/careers</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nFlex
      — <a href=\"https://www.adobe.com/products/flex.html\" rel=\"nofollow\">https://www.adobe.com/products/flex.html</a><br>\nPassenger
      Service System — <a href=\"https://en.wikipedia.org/wiki/Passenger_service_system\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>\nGlobal
      Distribution System — <a href=\"https://en.wikipedia.org/wiki/Global_distribution_system\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>\nSabre
      — <a href=\"https://www.sabre.com/\" rel=\"nofollow\">https://www.sabre.com/</a><br>\nAmadeus
      — <a href=\"https://amadeus.com/en\" rel=\"nofollow\">https://amadeus.com/en</a><br>\n‘Why
      does NDC matter to my travel business?’ — <a href=\"https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\"
      rel=\"nofollow\">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>\nIATA
      — <a href=\"https://www.iata.org/\" rel=\"nofollow\">https://www.iata.org/</a><br>\nNext.js
      — <a href=\"https://nextjs.org/\" rel=\"nofollow\">https://nextjs.org/</a><br>\nGoCardless
      — <a href=\"https://gocardless.com/\" rel=\"nofollow\">https://gocardless.com/</a><br>\nTwilio
      — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nStripe
      — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nThomas
      Bates — <a href=\"https://www.linkedin.com/in/thomas-bates-3908a74b/\" rel=\"nofollow\">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>\nElixir
      London Meetup — <a href=\"https://www.meetup.com/Elixir-London/\" rel=\"nofollow\">https://www.meetup.com/Elixir-London/</a><br>\nBaris
      Balic — <a href=\"https://twitter.com/barisbalic\" rel=\"nofollow\">https://twitter.com/barisbalic</a></p><p>Special
      Guest: Steve Domin.</p>\n      "
  contentEncoded: "\n        <p>Anyone who has written software for the travel industry
    can tell you that it is in desperate need of innovation — shockingly many of their
    cobwebbed systems were built in the 70s. Today we speak with Duffel CEO Steve
    Domin, who is building tech that can finally align travel with the expectations
    of modern consumers. We open by exploring Steve’s journey into coding before diving
    into how Duffel is innovating travel. After touching on how the pandemic has impacted
    Duffel’s roll-out, Steve shares horror stories about the outdated tech and API
    systems that airlines use. We discuss Duffel’s service offerings and why Elixir
    is uniquely suited to solve the problems that Steve’s company is addressing. Steve
    then talks about the types of engineers that Duffel hires, his client base, and
    where his company is heading. Near the end of the episode, we ask Steve for his
    advice on selling your company on Elixir and we chat about the status of the London
    Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make
    travel an effortless experience.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Duffel CEO Steve Domin. </li>\n<li>Steve shares details about his coding journey
    and career highlights. </li>\n<li>Insights into the old school ecosystem of Flash,
    Flex, and ActionScript.</li>\n<li>Exploring how Duffel is innovating the travel
    industry. </li>\n<li>Why Duffel accelerated their roll-out due to the pandemic.
    </li>\n<li>Steve unpacks the outdated tech and API systems that airlines use.
    </li>\n<li>Why Duffel decided to use Elixir to tackle their problems.</li>\n<li>The
    benefits of using Elixir when dealing with airline data. </li>\n<li>Steve gives
    listeners an overview of Duffel’s pipeline. </li>\n<li>Insights into the types
    of engineers that Duffel hires. </li>\n<li>Who Duffel’s clients are and how they’re
    onboarded.</li>\n<li>Steve reflects on some airline API horror stories.</li>\n<li>Hear
    about Duffel’s roadmap — the future is bright.</li>\n<li>What Elixir has uniquely
    enabled Duffel to do.</li>\n<li>Steve’s advice on selling Elixir to stakeholders
    in your company.</li>\n<li>The status of the London Elixir Meetup.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nSteve Domin — <a href=\"https://stevedomin.com/about\"
    rel=\"nofollow\">https://stevedomin.com/about</a><br>\nSteve Domin on LinkedIn
    — <a href=\"https://www.linkedin.com/in/stevedomin/\" rel=\"nofollow\">https://www.linkedin.com/in/stevedomin/</a><br>\nSteve
    Domin on Twitter — <a href=\"https://twitter.com/stevedomin\" rel=\"nofollow\">https://twitter.com/stevedomin</a><br>\nDuffel
    — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nDuffel
    Careers — <a href=\"https://duffel.com/careers\" rel=\"nofollow\">https://duffel.com/careers</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nFlex
    — <a href=\"https://www.adobe.com/products/flex.html\" rel=\"nofollow\">https://www.adobe.com/products/flex.html</a><br>\nPassenger
    Service System — <a href=\"https://en.wikipedia.org/wiki/Passenger_service_system\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>\nGlobal
    Distribution System — <a href=\"https://en.wikipedia.org/wiki/Global_distribution_system\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>\nSabre
    — <a href=\"https://www.sabre.com/\" rel=\"nofollow\">https://www.sabre.com/</a><br>\nAmadeus
    — <a href=\"https://amadeus.com/en\" rel=\"nofollow\">https://amadeus.com/en</a><br>\n‘Why
    does NDC matter to my travel business?’ — <a href=\"https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\"
    rel=\"nofollow\">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>\nIATA
    — <a href=\"https://www.iata.org/\" rel=\"nofollow\">https://www.iata.org/</a><br>\nNext.js
    — <a href=\"https://nextjs.org/\" rel=\"nofollow\">https://nextjs.org/</a><br>\nGoCardless
    — <a href=\"https://gocardless.com/\" rel=\"nofollow\">https://gocardless.com/</a><br>\nTwilio
    — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nStripe
    — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nThomas
    Bates — <a href=\"https://www.linkedin.com/in/thomas-bates-3908a74b/\" rel=\"nofollow\">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>\nElixir
    London Meetup — <a href=\"https://www.meetup.com/Elixir-London/\" rel=\"nofollow\">https://www.meetup.com/Elixir-London/</a><br>\nBaris
    Balic — <a href=\"https://twitter.com/barisbalic\" rel=\"nofollow\">https://twitter.com/barisbalic</a></p><p>Special
    Guest: Steve Domin.</p>\n      "
- title: Shawn Vo on Elixir as a Competitive Advantage
  slug: s5e5-vo
  link: https://smartlogic.io/podcast/elixir-wizards/s5e5-vo
  guid: a15c1f14-3ae4-4a02-a642-a03ab3e11660
  pubDate: Tue, 29 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 29, 2020
  description: "To beat out their competitors, startups need to code quickly, simply,
    and in a language that attracts top engineers. Enter Elixir. Today we speak with
    Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and
    how it has given his company a competitive advantage. We open our conversation
    by exploring how Shawn got into coding while automating his work as an investment
    banker. After touching on why he sees programming as a superpower for adding value,
    he shares his growth hacks for learning a language — these range from reading
    old books to attending coding meetups. We then dive into Axle Payments’ business
    model, with Shawn highlighting the business opportunity of creating tech for industries
    that “people don’t think about.” A key theme in this episode, Shawn talks about
    how building in Elixir has helped Axle Payments hire the best engineers. We also
    discuss how Elixir allows them to quickly and efficiently write code that doesn’t
    break. Near the end of the episode, we explore Shawn’s browser extension projects
    and why he has a readme file to help guide people who want to work with him. Be
    sure to tune in to hear more insight from Shawn on the benefits of using Elixir
    in the startup space. \nKey Points From This Episode:\nIntroducing Axle Payments
    CTO Shawn Vo. \nFrom investment banking to coding, hear how Shawn got into our
    industry. \nWhy coding and creating content are top ways of creating value. \nReading
    books and getting into the fundamentals; tips on how Shawn learns a language.
    \nShawn shares details about his professional career.\nHow Shawn grew his skills
    by attending coding meetups.\nHear about Axle Payments’ model providing a factoring
    service.  \nHow Shawn discovered and fell in love with Elixir. \nWhy Elixir has
    given Axle Payments their competitive advantage. \nShawn reflects on his first
    Elixir project. \nThe benefits of using event sourcing to build your app.\nWhy
    Shawn created a readme to guide people who want to work with him.\nShawn summarizes
    why Elixir is the perfect language for his company. \nLinks Mentioned in Today’s
    Episode:\nShawn Vo on LinkedIn — https://www.linkedin.com/in/shawnvo/\nShawn Vo
    on Twitter — https://twitter.com/shawnvo\nShawn Vo on GitHub — https://github.com/voshawn\nShawn
    Vo Email — shawn@axlepayments.com\nAxle Payments — https://www.axlepayments.com/\nThe
    Technical Cofounder Newsletter — https://technicalcofounder.substack.com/\nMeryl
    Dakin — https://twitter.com/meryldakin\nWALL-E — https://www.imdb.com/title/tt0910970/\nBarclays
    Investment Bank — https://www.investmentbank.barclays.com/\nThe Climate Corporation
    — https://www.climate.com/\nThe Monsanto Company — https://www.cropscience.bayer.com/\nFederal
    Deposit Insurance Corporation — https://www.fdic.gov/\nDeep Learning NYC — https://www.meetup.com/Deep-Learning-NYC/\nBaltimore
    AI Meetup — https://www.meetup.com/Baltimore-AI/\nFast.ai — https://www.fast.ai/\nMegabus
    — https://www.megabus.com/\nGreyhound — https://www.greyhound.com/\nTechstars
    — https://www.techstars.com/\nPeter Thiel — https://www.forbes.com/profile/peter-thiel/\nWeWork
    — https://www.wework.com/\nPaul Graham — http://www.paulgraham.com/\nY Combinator
    — https://www.ycombinator.com/\n‘The Python Paradox’ — http://www.paulgraham.com/pypar.html\nHeroku
    — https://www.heroku.com/\nSessionizer — https://sessionize-me.herokuapp.com/\nHamilton
    — https://hamiltonmusical.com/new-york/home/\nSlack — https://slack.com/\nPhoenix
    — https://hexdocs.pm/phoenix/overview.html\nCommanded — https://hexdocs.pm/commanded/Commanded.html\nThe
    Social Dilemma — https://www.imdb.com/title/tt11464826/ Special Guest: Shawn Vo.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+SisMEP3c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a15c1f14-3ae4-4a02-a642-a03ab3e11660.mp3
    length: '37436800'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about
      his journey with Elixir and how it has given his company a competitive advantage.
    duration: '38:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a15c1f14-3ae4-4a02-a642-a03ab3e11660/cover.jpg?v=2
    summary: "\n        <p>To beat out their competitors, startups need to code quickly,
      simply, and in a language that attracts top engineers. Enter Elixir. Today we
      speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with
      Elixir and how it has given his company a competitive advantage. We open our
      conversation by exploring how Shawn got into coding while automating his work
      as an investment banker. After touching on why he sees programming as a superpower
      for adding value, he shares his growth hacks for learning a language — these
      range from reading old books to attending coding meetups. We then dive into
      Axle Payments’ business model, with Shawn highlighting the business opportunity
      of creating tech for industries that “people don’t think about.” A key theme
      in this episode, Shawn talks about how building in Elixir has helped Axle Payments
      hire the best engineers. We also discuss how Elixir allows them to quickly and
      efficiently write code that doesn’t break. Near the end of the episode, we explore
      Shawn’s browser extension projects and why he has a readme file to help guide
      people who want to work with him. Be sure to tune in to hear more insight from
      Shawn on the benefits of using Elixir in the startup space. </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing Axle Payments CTO Shawn Vo.
      </li>\n<li>From investment banking to coding, hear how Shawn got into our industry.
      </li>\n<li>Why coding and creating content are top ways of creating value. </li>\n<li>Reading
      books and getting into the fundamentals; tips on how Shawn learns a language.
      </li>\n<li>Shawn shares details about his professional career.</li>\n<li>How
      Shawn grew his skills by attending coding meetups.</li>\n<li>Hear about Axle
      Payments’ model providing a factoring service.<br></li>\n<li>How Shawn discovered
      and fell in love with Elixir. </li>\n<li>Why Elixir has given Axle Payments
      their competitive advantage. </li>\n<li>Shawn reflects on his first Elixir project.
      </li>\n<li>The benefits of using event sourcing to build your app.</li>\n<li>Why
      Shawn created a readme to guide people who want to work with him.</li>\n<li>Shawn
      summarizes why Elixir is the perfect language for his company. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Shawn Vo on LinkedIn — <a href=\"https://www.linkedin.com/in/shawnvo/\"
      rel=\"nofollow\">https://www.linkedin.com/in/shawnvo/</a><br>\nShawn Vo on Twitter
      — <a href=\"https://twitter.com/shawnvo\" rel=\"nofollow\">https://twitter.com/shawnvo</a><br>\nShawn
      Vo on GitHub — <a href=\"https://github.com/voshawn\" rel=\"nofollow\">https://github.com/voshawn</a><br>\nShawn
      Vo Email — <a href=\"mailto:shawn@axlepayments.com\" rel=\"nofollow\">shawn@axlepayments.com</a><br>\nAxle
      Payments — <a href=\"https://www.axlepayments.com/\" rel=\"nofollow\">https://www.axlepayments.com/</a><br>\nThe
      Technical Cofounder Newsletter — <a href=\"https://technicalcofounder.substack.com/\"
      rel=\"nofollow\">https://technicalcofounder.substack.com/</a><br>\nMeryl Dakin
      — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nWALL-E
      — <a href=\"https://www.imdb.com/title/tt0910970/\" rel=\"nofollow\">https://www.imdb.com/title/tt0910970/</a><br>\nBarclays
      Investment Bank — <a href=\"https://www.investmentbank.barclays.com/\" rel=\"nofollow\">https://www.investmentbank.barclays.com/</a><br>\nThe
      Climate Corporation — <a href=\"https://www.climate.com/\" rel=\"nofollow\">https://www.climate.com/</a><br>\nThe
      Monsanto Company — <a href=\"https://www.cropscience.bayer.com/\" rel=\"nofollow\">https://www.cropscience.bayer.com/</a><br>\nFederal
      Deposit Insurance Corporation — <a href=\"https://www.fdic.gov/\" rel=\"nofollow\">https://www.fdic.gov/</a><br>\nDeep
      Learning NYC — <a href=\"https://www.meetup.com/Deep-Learning-NYC/\" rel=\"nofollow\">https://www.meetup.com/Deep-Learning-NYC/</a><br>\nBaltimore
      AI Meetup — <a href=\"https://www.meetup.com/Baltimore-AI/\" rel=\"nofollow\">https://www.meetup.com/Baltimore-AI/</a><br>\nFast.ai
      — <a href=\"https://www.fast.ai/\" rel=\"nofollow\">https://www.fast.ai/</a><br>\nMegabus
      — <a href=\"https://www.megabus.com/\" rel=\"nofollow\">https://www.megabus.com/</a><br>\nGreyhound
      — <a href=\"https://www.greyhound.com/\" rel=\"nofollow\">https://www.greyhound.com/</a><br>\nTechstars
      — <a href=\"https://www.techstars.com/\" rel=\"nofollow\">https://www.techstars.com/</a><br>\nPeter
      Thiel — <a href=\"https://www.forbes.com/profile/peter-thiel/\" rel=\"nofollow\">https://www.forbes.com/profile/peter-thiel/</a><br>\nWeWork
      — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nY
      Combinator — <a href=\"https://www.ycombinator.com/\" rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n‘The
      Python Paradox’ — <a href=\"http://www.paulgraham.com/pypar.html\" rel=\"nofollow\">http://www.paulgraham.com/pypar.html</a><br>\nHeroku
      — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nSessionizer
      — <a href=\"https://sessionize-me.herokuapp.com/\" rel=\"nofollow\">https://sessionize-me.herokuapp.com/</a><br>\nHamilton
      — <a href=\"https://hamiltonmusical.com/new-york/home/\" rel=\"nofollow\">https://hamiltonmusical.com/new-york/home/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPhoenix
      — <a href=\"https://hexdocs.pm/phoenix/overview.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/overview.html</a><br>\nCommanded
      — <a href=\"https://hexdocs.pm/commanded/Commanded.html\" rel=\"nofollow\">https://hexdocs.pm/commanded/Commanded.html</a><br>\nThe
      Social Dilemma — <a href=\"https://www.imdb.com/title/tt11464826/\" rel=\"nofollow\">https://www.imdb.com/title/tt11464826/</a></p><p>Special
      Guest: Shawn Vo.</p>\n      "
  contentEncoded: "\n        <p>To beat out their competitors, startups need to code
    quickly, simply, and in a language that attracts top engineers. Enter Elixir.
    Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey
    with Elixir and how it has given his company a competitive advantage. We open
    our conversation by exploring how Shawn got into coding while automating his work
    as an investment banker. After touching on why he sees programming as a superpower
    for adding value, he shares his growth hacks for learning a language — these range
    from reading old books to attending coding meetups. We then dive into Axle Payments’
    business model, with Shawn highlighting the business opportunity of creating tech
    for industries that “people don’t think about.” A key theme in this episode, Shawn
    talks about how building in Elixir has helped Axle Payments hire the best engineers.
    We also discuss how Elixir allows them to quickly and efficiently write code that
    doesn’t break. Near the end of the episode, we explore Shawn’s browser extension
    projects and why he has a readme file to help guide people who want to work with
    him. Be sure to tune in to hear more insight from Shawn on the benefits of using
    Elixir in the startup space. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Axle Payments CTO Shawn Vo. </li>\n<li>From investment banking to coding, hear
    how Shawn got into our industry. </li>\n<li>Why coding and creating content are
    top ways of creating value. </li>\n<li>Reading books and getting into the fundamentals;
    tips on how Shawn learns a language. </li>\n<li>Shawn shares details about his
    professional career.</li>\n<li>How Shawn grew his skills by attending coding meetups.</li>\n<li>Hear
    about Axle Payments’ model providing a factoring service.<br></li>\n<li>How Shawn
    discovered and fell in love with Elixir. </li>\n<li>Why Elixir has given Axle
    Payments their competitive advantage. </li>\n<li>Shawn reflects on his first Elixir
    project. </li>\n<li>The benefits of using event sourcing to build your app.</li>\n<li>Why
    Shawn created a readme to guide people who want to work with him.</li>\n<li>Shawn
    summarizes why Elixir is the perfect language for his company. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Shawn Vo on LinkedIn — <a href=\"https://www.linkedin.com/in/shawnvo/\"
    rel=\"nofollow\">https://www.linkedin.com/in/shawnvo/</a><br>\nShawn Vo on Twitter
    — <a href=\"https://twitter.com/shawnvo\" rel=\"nofollow\">https://twitter.com/shawnvo</a><br>\nShawn
    Vo on GitHub — <a href=\"https://github.com/voshawn\" rel=\"nofollow\">https://github.com/voshawn</a><br>\nShawn
    Vo Email — <a href=\"mailto:shawn@axlepayments.com\" rel=\"nofollow\">shawn@axlepayments.com</a><br>\nAxle
    Payments — <a href=\"https://www.axlepayments.com/\" rel=\"nofollow\">https://www.axlepayments.com/</a><br>\nThe
    Technical Cofounder Newsletter — <a href=\"https://technicalcofounder.substack.com/\"
    rel=\"nofollow\">https://technicalcofounder.substack.com/</a><br>\nMeryl Dakin
    — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nWALL-E
    — <a href=\"https://www.imdb.com/title/tt0910970/\" rel=\"nofollow\">https://www.imdb.com/title/tt0910970/</a><br>\nBarclays
    Investment Bank — <a href=\"https://www.investmentbank.barclays.com/\" rel=\"nofollow\">https://www.investmentbank.barclays.com/</a><br>\nThe
    Climate Corporation — <a href=\"https://www.climate.com/\" rel=\"nofollow\">https://www.climate.com/</a><br>\nThe
    Monsanto Company — <a href=\"https://www.cropscience.bayer.com/\" rel=\"nofollow\">https://www.cropscience.bayer.com/</a><br>\nFederal
    Deposit Insurance Corporation — <a href=\"https://www.fdic.gov/\" rel=\"nofollow\">https://www.fdic.gov/</a><br>\nDeep
    Learning NYC — <a href=\"https://www.meetup.com/Deep-Learning-NYC/\" rel=\"nofollow\">https://www.meetup.com/Deep-Learning-NYC/</a><br>\nBaltimore
    AI Meetup — <a href=\"https://www.meetup.com/Baltimore-AI/\" rel=\"nofollow\">https://www.meetup.com/Baltimore-AI/</a><br>\nFast.ai
    — <a href=\"https://www.fast.ai/\" rel=\"nofollow\">https://www.fast.ai/</a><br>\nMegabus
    — <a href=\"https://www.megabus.com/\" rel=\"nofollow\">https://www.megabus.com/</a><br>\nGreyhound
    — <a href=\"https://www.greyhound.com/\" rel=\"nofollow\">https://www.greyhound.com/</a><br>\nTechstars
    — <a href=\"https://www.techstars.com/\" rel=\"nofollow\">https://www.techstars.com/</a><br>\nPeter
    Thiel — <a href=\"https://www.forbes.com/profile/peter-thiel/\" rel=\"nofollow\">https://www.forbes.com/profile/peter-thiel/</a><br>\nWeWork
    — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nY
    Combinator — <a href=\"https://www.ycombinator.com/\" rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n‘The
    Python Paradox’ — <a href=\"http://www.paulgraham.com/pypar.html\" rel=\"nofollow\">http://www.paulgraham.com/pypar.html</a><br>\nHeroku
    — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nSessionizer
    — <a href=\"https://sessionize-me.herokuapp.com/\" rel=\"nofollow\">https://sessionize-me.herokuapp.com/</a><br>\nHamilton
    — <a href=\"https://hamiltonmusical.com/new-york/home/\" rel=\"nofollow\">https://hamiltonmusical.com/new-york/home/</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPhoenix
    — <a href=\"https://hexdocs.pm/phoenix/overview.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/overview.html</a><br>\nCommanded
    — <a href=\"https://hexdocs.pm/commanded/Commanded.html\" rel=\"nofollow\">https://hexdocs.pm/commanded/Commanded.html</a><br>\nThe
    Social Dilemma — <a href=\"https://www.imdb.com/title/tt11464826/\" rel=\"nofollow\">https://www.imdb.com/title/tt11464826/</a></p><p>Special
    Guest: Shawn Vo.</p>\n      "
- title: Viktória Fördős on Erlang
  slug: s5e4-fordos
  link: https://smartlogic.io/podcast/elixir-wizards/s5e4-fordos
  guid: 6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b
  pubDate: Tue, 22 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 22, 2020
  description: "Today we sit down with Erlanger Viktória Fördős, who talks with us
    about Erlang and how it is used at Cisco. We open the show by finding out about
    Viki’s background in coding and her unorthodox entry into the field. After hearing
    about her experiences in her school choir and her transition into the informatics
    faculty, Viki talks to us about her first experiences in coding and the thrills
    she found in it. She then expands on the topic, revealing how she approached people
    to build their websites using her newfound skills in HTML and PHP. A flash-forward
    later, and Viki shares details about her role as an NSO Core Engineer for Cisco.
    After hearing how NSO serves as a network operating system, device automation
    platform, and orchestration engine, Viki explains why NSO is so special. She touches
    on fast map-based service and some of the ways she and her team implement network-wide
    transactions using — you guessed it — Erlang. Viki then explains Erlang, how you
    should approach it if you’re a newbie, and what to expect from its biggest challenges.
    She elaborates on tail-recursive functions and high-level vulnerabilities concerned
    with SSL crypto libraries, system integrity, and atom tables. Toward the end of
    the show, we ask Viki to tell us about her Code BEAM presentation and about her
    thoughts on why academia and industry should collaborate on a more regular basis.
    Join us today and be treated to an enriching conversation about Erlang, as well
    as our secret mini-feature segment!\nKey Points From This Episode:\nIntroducing
    today’s guest, Viki Fördős from Cisco.\nA snapshot of Viki’s unorthodox background
    in coding.\nViki shares details about early experiences learning Basic.\nHear
    about Viki’s first programming job out of college.\nViki’s position as a core
    engineer for the NSO team at Cisco.\nFind out what the NSO team at Cisco does.\nInsights
    into the patented algorithm, “fast map.”\nHow Viki started to use Erlang on a
    day-to-day basis.\nWays you can start thinking in Erlang from an Elixir background.\nThe
    kinds of issues Viki runs into when spawning too many processes.\nWhat Erlang
    has to offer that other languages cannot.\nViki’s biggest challenges when she
    first started learning Erlang.\nThe elevator pitch Viki uses when she encourages
    friends and colleagues to use Erlang.\nDistribution protocols and what they mean
    to Erlang newbies.\nHear about the high-level vulnerabilities you ought to pay
    attention to when coding in Erlang.\nIntroducing Christian Koch, today’s mini-feature
    segment guest.\nHow Chris first got into Elixir. \nHow Elixir is being used by
    platform engineers at Cars.com.\nWhy Elixir was chosen as the end-game language
    to be used at Cars.com\nThe process behind onboarding coders onto Chris’s Elixir
    team.\nViki’s best advice to those wanting to give a Code BEAM talk.\nHear about
    refactoring and how it works.\nWhat Viki means by, “research being consumed by
    industry.”\nLinks Mentioned in Today’s Episode:\nViktória Fördős - https://github.com/viktoriafordos
    \nCisco — https://www.cisco.com/ \nEW20 — https://github.com/viktoriafordos/ew20
    Prototype implementation of the security analysis introduced in V. Fördős: Secure
    Design and Verification of Erlang Systems paper\nChristian Koch — https://www.linkedin.com/in/ckochx/
    \nCars.com — https://www.cars.com/\nBASIC —  https://en.wikipedia.org/wiki/BASIC\nCisco
    NSO — https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\nThink
    in Erlang! - Viktória Fördős — https://www.youtube.com/watch?v=bYkOsQU2ywM\nErlang
    general server — https://erlang.org/doc/man/genserver.html\nErland Reference Manual
    — https://erlang.org/doc/referencemanual/distributed.html\n4 Using TLS — https://erlang.org/doc/apps/ssl/ssldistribution.html\nErland
    System Limits — http://erlang.org/doc/efficiencyguide/advanced.html#system-limits\nHexdocs
    — https://hexdocs.pm/elixir/String.html#toexistingatom/1\nRefactorErl — https://plc.inf.elte.hu/erlang/\nPipedream
    on GitHub — https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md
    Special Guest: Viktória Fördős.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+d0bVLmUa
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b.mp3
    length: '46411863'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we sit down with Erlanger Viktória Fördős, who talks with us about
      Erlang and how it is used at Cisco.
    duration: '47:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b/cover.jpg?v=2
    summary: "\n        <p>Today we sit down with Erlanger Viktória Fördős, who talks
      with us about Erlang and how it is used at Cisco. We open the show by finding
      out about Viki’s background in coding and her unorthodox entry into the field.
      After hearing about her experiences in her school choir and her transition into
      the informatics faculty, Viki talks to us about her first experiences in coding
      and the thrills she found in it. She then expands on the topic, revealing how
      she approached people to build their websites using her newfound skills in HTML
      and PHP. A flash-forward later, and Viki shares details about her role as an
      NSO Core Engineer for Cisco. After hearing how NSO serves as a network operating
      system, device automation platform, and orchestration engine, Viki explains
      why NSO is so special. She touches on fast map-based service and some of the
      ways she and her team implement network-wide transactions using — you guessed
      it — Erlang. Viki then explains Erlang, how you should approach it if you’re
      a newbie, and what to expect from its biggest challenges. She elaborates on
      tail-recursive functions and high-level vulnerabilities concerned with SSL crypto
      libraries, system integrity, and atom tables. Toward the end of the show, we
      ask Viki to tell us about her Code BEAM presentation and about her thoughts
      on why academia and industry should collaborate on a more regular basis. Join
      us today and be treated to an enriching conversation about Erlang, as well as
      our secret mini-feature segment!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest, Viki Fördős from Cisco.</li>\n<li>A snapshot of Viki’s unorthodox
      background in coding.</li>\n<li>Viki shares details about early experiences
      learning Basic.</li>\n<li>Hear about Viki’s first programming job out of college.</li>\n<li>Viki’s
      position as a core engineer for the NSO team at Cisco.</li>\n<li>Find out what
      the NSO team at Cisco does.</li>\n<li>Insights into the patented algorithm,
      “fast map.”</li>\n<li>How Viki started to use Erlang on a day-to-day basis.</li>\n<li>Ways
      you can start thinking in Erlang from an Elixir background.</li>\n<li>The kinds
      of issues Viki runs into when spawning too many processes.</li>\n<li>What Erlang
      has to offer that other languages cannot.</li>\n<li>Viki’s biggest challenges
      when she first started learning Erlang.</li>\n<li>The elevator pitch Viki uses
      when she encourages friends and colleagues to use Erlang.</li>\n<li>Distribution
      protocols and what they mean to Erlang newbies.</li>\n<li>Hear about the high-level
      vulnerabilities you ought to pay attention to when coding in Erlang.</li>\n<li>Introducing
      Christian Koch, today’s mini-feature segment guest.</li>\n<li>How Chris first
      got into Elixir. </li>\n<li>How Elixir is being used by platform engineers at
      Cars.com.</li>\n<li>Why Elixir was chosen as the end-game language to be used
      at Cars.com</li>\n<li>The process behind onboarding coders onto Chris’s Elixir
      team.</li>\n<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>\n<li>Hear
      about refactoring and how it works.</li>\n<li>What Viki means by, “research
      being consumed by industry.”</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Viktória
      Fördős - <a href=\"https://github.com/viktoriafordos\" rel=\"nofollow\">https://github.com/viktoriafordos</a>
      <br>\nCisco — <a href=\"https://www.cisco.com/\" rel=\"nofollow\">https://www.cisco.com/</a>
      <br>\nEW20 — <a href=\"https://github.com/viktoriafordos/ew20\" rel=\"nofollow\">https://github.com/viktoriafordos/ew20</a>
      Prototype implementation of the security analysis introduced in V. Fördős: Secure
      Design and Verification of Erlang Systems paper<br>\nChristian Koch — <a href=\"https://www.linkedin.com/in/ckochx/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ckochx/</a> <br>\nCars.com — <a
      href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nBASIC
      —  <a href=\"https://en.wikipedia.org/wiki/BASIC\" rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nCisco
      NSO — <a href=\"https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\"
      rel=\"nofollow\">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>\nThink
      in Erlang! - Viktória Fördős — <a href=\"https://www.youtube.com/watch?v=bYkOsQU2ywM\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>\nErlang
      general server — <a href=\"https://erlang.org/doc/man/gen_server.html\" rel=\"nofollow\">https://erlang.org/doc/man/gen_server.html</a><br>\nErland
      Reference Manual — <a href=\"https://erlang.org/doc/reference_manual/distributed.html\"
      rel=\"nofollow\">https://erlang.org/doc/reference_manual/distributed.html</a><br>\n4
      Using TLS — <a href=\"https://erlang.org/doc/apps/ssl/ssl_distribution.html\"
      rel=\"nofollow\">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>\nErland
      System Limits — <a href=\"http://erlang.org/doc/efficiency_guide/advanced.html#system-limits\"
      rel=\"nofollow\">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>\nHexdocs
      — <a href=\"https://hexdocs.pm/elixir/String.html#to_existing_atom/1\" rel=\"nofollow\">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>\nRefactorErl
      — <a href=\"https://plc.inf.elte.hu/erlang/\" rel=\"nofollow\">https://plc.inf.elte.hu/erlang/</a><br>\nPipedream
      on GitHub — <a href=\"https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md\"
      rel=\"nofollow\">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special
      Guest: Viktória Fördős.</p>\n      "
  contentEncoded: "\n        <p>Today we sit down with Erlanger Viktória Fördős, who
    talks with us about Erlang and how it is used at Cisco. We open the show by finding
    out about Viki’s background in coding and her unorthodox entry into the field.
    After hearing about her experiences in her school choir and her transition into
    the informatics faculty, Viki talks to us about her first experiences in coding
    and the thrills she found in it. She then expands on the topic, revealing how
    she approached people to build their websites using her newfound skills in HTML
    and PHP. A flash-forward later, and Viki shares details about her role as an NSO
    Core Engineer for Cisco. After hearing how NSO serves as a network operating system,
    device automation platform, and orchestration engine, Viki explains why NSO is
    so special. She touches on fast map-based service and some of the ways she and
    her team implement network-wide transactions using — you guessed it — Erlang.
    Viki then explains Erlang, how you should approach it if you’re a newbie, and
    what to expect from its biggest challenges. She elaborates on tail-recursive functions
    and high-level vulnerabilities concerned with SSL crypto libraries, system integrity,
    and atom tables. Toward the end of the show, we ask Viki to tell us about her
    Code BEAM presentation and about her thoughts on why academia and industry should
    collaborate on a more regular basis. Join us today and be treated to an enriching
    conversation about Erlang, as well as our secret mini-feature segment!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing today’s guest, Viki Fördős
    from Cisco.</li>\n<li>A snapshot of Viki’s unorthodox background in coding.</li>\n<li>Viki
    shares details about early experiences learning Basic.</li>\n<li>Hear about Viki’s
    first programming job out of college.</li>\n<li>Viki’s position as a core engineer
    for the NSO team at Cisco.</li>\n<li>Find out what the NSO team at Cisco does.</li>\n<li>Insights
    into the patented algorithm, “fast map.”</li>\n<li>How Viki started to use Erlang
    on a day-to-day basis.</li>\n<li>Ways you can start thinking in Erlang from an
    Elixir background.</li>\n<li>The kinds of issues Viki runs into when spawning
    too many processes.</li>\n<li>What Erlang has to offer that other languages cannot.</li>\n<li>Viki’s
    biggest challenges when she first started learning Erlang.</li>\n<li>The elevator
    pitch Viki uses when she encourages friends and colleagues to use Erlang.</li>\n<li>Distribution
    protocols and what they mean to Erlang newbies.</li>\n<li>Hear about the high-level
    vulnerabilities you ought to pay attention to when coding in Erlang.</li>\n<li>Introducing
    Christian Koch, today’s mini-feature segment guest.</li>\n<li>How Chris first
    got into Elixir. </li>\n<li>How Elixir is being used by platform engineers at
    Cars.com.</li>\n<li>Why Elixir was chosen as the end-game language to be used
    at Cars.com</li>\n<li>The process behind onboarding coders onto Chris’s Elixir
    team.</li>\n<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>\n<li>Hear
    about refactoring and how it works.</li>\n<li>What Viki means by, “research being
    consumed by industry.”</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Viktória
    Fördős - <a href=\"https://github.com/viktoriafordos\" rel=\"nofollow\">https://github.com/viktoriafordos</a>
    <br>\nCisco — <a href=\"https://www.cisco.com/\" rel=\"nofollow\">https://www.cisco.com/</a>
    <br>\nEW20 — <a href=\"https://github.com/viktoriafordos/ew20\" rel=\"nofollow\">https://github.com/viktoriafordos/ew20</a>
    Prototype implementation of the security analysis introduced in V. Fördős: Secure
    Design and Verification of Erlang Systems paper<br>\nChristian Koch — <a href=\"https://www.linkedin.com/in/ckochx/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ckochx/</a> <br>\nCars.com — <a href=\"https://www.cars.com/\"
    rel=\"nofollow\">https://www.cars.com/</a><br>\nBASIC —  <a href=\"https://en.wikipedia.org/wiki/BASIC\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nCisco NSO — <a href=\"https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\"
    rel=\"nofollow\">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>\nThink
    in Erlang! - Viktória Fördős — <a href=\"https://www.youtube.com/watch?v=bYkOsQU2ywM\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>\nErlang general
    server — <a href=\"https://erlang.org/doc/man/gen_server.html\" rel=\"nofollow\">https://erlang.org/doc/man/gen_server.html</a><br>\nErland
    Reference Manual — <a href=\"https://erlang.org/doc/reference_manual/distributed.html\"
    rel=\"nofollow\">https://erlang.org/doc/reference_manual/distributed.html</a><br>\n4
    Using TLS — <a href=\"https://erlang.org/doc/apps/ssl/ssl_distribution.html\"
    rel=\"nofollow\">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>\nErland
    System Limits — <a href=\"http://erlang.org/doc/efficiency_guide/advanced.html#system-limits\"
    rel=\"nofollow\">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>\nHexdocs
    — <a href=\"https://hexdocs.pm/elixir/String.html#to_existing_atom/1\" rel=\"nofollow\">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>\nRefactorErl
    — <a href=\"https://plc.inf.elte.hu/erlang/\" rel=\"nofollow\">https://plc.inf.elte.hu/erlang/</a><br>\nPipedream
    on GitHub — <a href=\"https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md\"
    rel=\"nofollow\">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special
    Guest: Viktória Fördős.</p>\n      "
- title: Simon Glenn-Gregg on Building an Election Results Prototype in Elixir
  slug: s5e3-glenn-gregg
  link: https://smartlogic.io/podcast/elixir-wizards/s5e3-glenn-gregg
  guid: 4653eb7c-8637-447c-8ead-a6fe53e5c3cc
  pubDate: Thu, 17 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 17, 2020
  description: "Today’s guest is Simon Glenn-Gregg, News Engineer at The Washington
    Post. He joins us to talk about using Elixir to build a prototype for a platform
    the news house recently implemented to visualize the results of the November 2020
    elections in real-time. \nWhile the job title of ‘News Engineer’ makes it seem
    like Simon invents news, this is not the case. He is focused on software related
    to publishing at The Washington Post, and in particular, has been working on building
    their election visualization platform for the past two years. Before the final
    iteration of the platform was built, the software engineering team at The Washington
    Post were given a period to test different technologies as an experiment to find
    the best fit, and Simon decided to try his hand at Elixir and Phoenix. He talks
    about what led him to this choice, and his experiences building out his prototype
    which he demonstrated on a dataset generated by the North Carolina 3rd Congressional
    District house race in September. Simon tells us about how the pitch went, what
    the team at The Washington Post was especially impressed by, and what led to the
    choice to use Node in the end. \nSimon talks about the culture of openness to
    new technologies at The Washington Post as well as some of the limitations to
    their adoption. We also hear about how the final version of the visualization
    platform held up during the elections proper, and Simon’s plans to include Elixir
    in future stacks due to its amazing abilities as far as concurrency and memory.
    Tune in today! \nKey Points From This Episode:\nWhat kinds of projects Simon works
    on at The Washington Post as a ‘news engineer’.\nThe live updating election visualizer
    that Simon was working on at The Washington Post.\nWhat went into building the
    infrastructure for this platform and how Elixir was chosen as a candidate.\n A
    blog post about Elixir’s memory management; abilities Elixir has regarding concurrency.\nThe
    first steps Simon took toward learning Elixir and Phoenix by building simple projects.\nSimon’s
    process of integrating his Elixir app into the current stack and people at The
    Washington Post.\nTesting the app on the 3rd Congressional District house race
    in North Carolina, and pitching to the team.\nWhy it is hard to implement projects
    in new languages at The Washington Post.\nHow the voting process went after the
    pitch and which project won.\nWhat the audience at the pitch loved about Elixir,
    and what the stumbling blocks were.\nThe nature of working at a deadline-driven
    place like The Washington Post when it comes to adopting new technologies.\nSources
    The Washington Post used to get their election data.\nWhat technologies and methods
    the team used to handle the size of data some election moments generated.\nWhich
    parts about the election visualizer that ended up being built using Node would
    have been easier to do in Elixir.\nThe other side of the coin – what made writing
    the app in Python and JavaScript easier.\nWhat future projects Elixir might be
    better suited to at The Washington Post.\nSimon’s background, education, and how
    he learned programming in previous jobs\nWhy Simon stuck programming out and decided
    it was the right path for him.\nThe need for software engineers at The Washington
    Post and why they are recruiting so often.\nA deep dive into the tech stack at
    The Washington Post and how they render their pages and maps.\nHow Simon feels
    having reached the end of a successful project that millions of people engaged
    with.\nFuture projects at The Washington Post and Simon’s hopes to incorporate
    more Elixir.\nA funny story about having to manually update the votes from rural
    New Hampshire into the app.\nLinks Mentioned in Today’s Episode:\nSmartLogic —
    https://smartlogic.io/ \nSimon Glenn-Gregg on LinkedIn — https://www.linkedin.com/in/simongle/\nSimon
    Glenn-Gregg — http://simonglenngregg.com/\nThe Washington Post — https://www.washingtonpost.com/\nJason
    Holt on Twitter — https://twitter.com/offpol\n‘Elixir RAM and the Template of
    Doom’ — https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\nErik
    Reyna on LinkedIn — https://www.linkedin.com/in/erikreyna/\nJeremy Bowers on LinkedIn
    — https://www.linkedin.com/in/jeremyjbowers/\nAssociated Press — https://apnews.com/\nEdison
    — https://www.edisonresearch.com/\nWhole Whale — https://www.wholewhale.com/\nThe
    Century Foundation — https://tcf.org/\nArc Publishing — https://www.arcpublishing.com/\nSundi
    Myint on Twitter — https://twitter.com/sundikhin\nJustus Eapen — https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Simon Glenn-Gregg.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bUzbxrep
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4653eb7c-8637-447c-8ead-a6fe53e5c3cc.mp3
    length: '26984468'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today’s guest, Simon Glenn-Gregg joins us to talk about using Elixir
      to build a prototype for a platform The Washington Post recently implemented
      to visualize the results of the 2020 elections in real-time.
    duration: '37:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4653eb7c-8637-447c-8ead-a6fe53e5c3cc/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Simon Glenn-Gregg, News Engineer at The
      Washington Post. He joins us to talk about using Elixir to build a prototype
      for a platform the news house recently implemented to visualize the results
      of the November 2020 elections in real-time. </p>\n\n<p>While the job title
      of ‘News Engineer’ makes it seem like Simon invents news, this is not the case.
      He is focused on software related to publishing at The Washington Post, and
      in particular, has been working on building their election visualization platform
      for the past two years. Before the final iteration of the platform was built,
      the software engineering team at The Washington Post were given a period to
      test different technologies as an experiment to find the best fit, and Simon
      decided to try his hand at Elixir and Phoenix. He talks about what led him to
      this choice, and his experiences building out his prototype which he demonstrated
      on a dataset generated by the North Carolina 3rd Congressional District house
      race in September. Simon tells us about how the pitch went, what the team at
      The Washington Post was especially impressed by, and what led to the choice
      to use Node in the end. </p>\n\n<p>Simon talks about the culture of openness
      to new technologies at The Washington Post as well as some of the limitations
      to their adoption. We also hear about how the final version of the visualization
      platform held up during the elections proper, and Simon’s plans to include Elixir
      in future stacks due to its amazing abilities as far as concurrency and memory.
      Tune in today! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
      kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>\n<li>The
      live updating election visualizer that Simon was working on at The Washington
      Post.</li>\n<li>What went into building the infrastructure for this platform
      and how Elixir was chosen as a candidate.</li>\n<li> A blog post about Elixir’s
      memory management; abilities Elixir has regarding concurrency.</li>\n<li>The
      first steps Simon took toward learning Elixir and Phoenix by building simple
      projects.</li>\n<li>Simon’s process of integrating his Elixir app into the current
      stack and people at The Washington Post.</li>\n<li>Testing the app on the 3rd
      Congressional District house race in North Carolina, and pitching to the team.</li>\n<li>Why
      it is hard to implement projects in new languages at The Washington Post.</li>\n<li>How
      the voting process went after the pitch and which project won.</li>\n<li>What
      the audience at the pitch loved about Elixir, and what the stumbling blocks
      were.</li>\n<li>The nature of working at a deadline-driven place like The Washington
      Post when it comes to adopting new technologies.</li>\n<li>Sources The Washington
      Post used to get their election data.</li>\n<li>What technologies and methods
      the team used to handle the size of data some election moments generated.</li>\n<li>Which
      parts about the election visualizer that ended up being built using Node would
      have been easier to do in Elixir.</li>\n<li>The other side of the coin – what
      made writing the app in Python and JavaScript easier.</li>\n<li>What future
      projects Elixir might be better suited to at The Washington Post.</li>\n<li>Simon’s
      background, education, and how he learned programming in previous jobs</li>\n<li>Why
      Simon stuck programming out and decided it was the right path for him.</li>\n<li>The
      need for software engineers at The Washington Post and why they are recruiting
      so often.</li>\n<li>A deep dive into the tech stack at The Washington Post and
      how they render their pages and maps.</li>\n<li>How Simon feels having reached
      the end of a successful project that millions of people engaged with.</li>\n<li>Future
      projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>\n<li>A
      funny story about having to manually update the votes from rural New Hampshire
      into the app.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSimon Glenn-Gregg on LinkedIn — <a href=\"https://www.linkedin.com/in/simongle/\"
      rel=\"nofollow\">https://www.linkedin.com/in/simongle/</a><br>\nSimon Glenn-Gregg
      — <a href=\"http://simonglenngregg.com/\" rel=\"nofollow\">http://simonglenngregg.com/</a><br>\nThe
      Washington Post — <a href=\"https://www.washingtonpost.com/\" rel=\"nofollow\">https://www.washingtonpost.com/</a><br>\nJason
      Holt on Twitter — <a href=\"https://twitter.com/offpol\" rel=\"nofollow\">https://twitter.com/offpol</a><br>\n‘Elixir
      RAM and the Template of Doom’ — <a href=\"https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\"
      rel=\"nofollow\">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>\nErik
      Reyna on LinkedIn — <a href=\"https://www.linkedin.com/in/erikreyna/\" rel=\"nofollow\">https://www.linkedin.com/in/erikreyna/</a><br>\nJeremy
      Bowers on LinkedIn — <a href=\"https://www.linkedin.com/in/jeremyjbowers/\"
      rel=\"nofollow\">https://www.linkedin.com/in/jeremyjbowers/</a><br>\nAssociated
      Press — <a href=\"https://apnews.com/\" rel=\"nofollow\">https://apnews.com/</a><br>\nEdison
      — <a href=\"https://www.edisonresearch.com/\" rel=\"nofollow\">https://www.edisonresearch.com/</a><br>\nWhole
      Whale — <a href=\"https://www.wholewhale.com/\" rel=\"nofollow\">https://www.wholewhale.com/</a><br>\nThe
      Century Foundation — <a href=\"https://tcf.org/\" rel=\"nofollow\">https://tcf.org/</a><br>\nArc
      Publishing — <a href=\"https://www.arcpublishing.com/\" rel=\"nofollow\">https://www.arcpublishing.com/</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Simon Glenn-Gregg.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Simon Glenn-Gregg, News Engineer
    at The Washington Post. He joins us to talk about using Elixir to build a prototype
    for a platform the news house recently implemented to visualize the results of
    the November 2020 elections in real-time. </p>\n\n<p>While the job title of ‘News
    Engineer’ makes it seem like Simon invents news, this is not the case. He is focused
    on software related to publishing at The Washington Post, and in particular, has
    been working on building their election visualization platform for the past two
    years. Before the final iteration of the platform was built, the software engineering
    team at The Washington Post were given a period to test different technologies
    as an experiment to find the best fit, and Simon decided to try his hand at Elixir
    and Phoenix. He talks about what led him to this choice, and his experiences building
    out his prototype which he demonstrated on a dataset generated by the North Carolina
    3rd Congressional District house race in September. Simon tells us about how the
    pitch went, what the team at The Washington Post was especially impressed by,
    and what led to the choice to use Node in the end. </p>\n\n<p>Simon talks about
    the culture of openness to new technologies at The Washington Post as well as
    some of the limitations to their adoption. We also hear about how the final version
    of the visualization platform held up during the elections proper, and Simon’s
    plans to include Elixir in future stacks due to its amazing abilities as far as
    concurrency and memory. Tune in today! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
    kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>\n<li>The
    live updating election visualizer that Simon was working on at The Washington
    Post.</li>\n<li>What went into building the infrastructure for this platform and
    how Elixir was chosen as a candidate.</li>\n<li> A blog post about Elixir’s memory
    management; abilities Elixir has regarding concurrency.</li>\n<li>The first steps
    Simon took toward learning Elixir and Phoenix by building simple projects.</li>\n<li>Simon’s
    process of integrating his Elixir app into the current stack and people at The
    Washington Post.</li>\n<li>Testing the app on the 3rd Congressional District house
    race in North Carolina, and pitching to the team.</li>\n<li>Why it is hard to
    implement projects in new languages at The Washington Post.</li>\n<li>How the
    voting process went after the pitch and which project won.</li>\n<li>What the
    audience at the pitch loved about Elixir, and what the stumbling blocks were.</li>\n<li>The
    nature of working at a deadline-driven place like The Washington Post when it
    comes to adopting new technologies.</li>\n<li>Sources The Washington Post used
    to get their election data.</li>\n<li>What technologies and methods the team used
    to handle the size of data some election moments generated.</li>\n<li>Which parts
    about the election visualizer that ended up being built using Node would have
    been easier to do in Elixir.</li>\n<li>The other side of the coin – what made
    writing the app in Python and JavaScript easier.</li>\n<li>What future projects
    Elixir might be better suited to at The Washington Post.</li>\n<li>Simon’s background,
    education, and how he learned programming in previous jobs</li>\n<li>Why Simon
    stuck programming out and decided it was the right path for him.</li>\n<li>The
    need for software engineers at The Washington Post and why they are recruiting
    so often.</li>\n<li>A deep dive into the tech stack at The Washington Post and
    how they render their pages and maps.</li>\n<li>How Simon feels having reached
    the end of a successful project that millions of people engaged with.</li>\n<li>Future
    projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>\n<li>A
    funny story about having to manually update the votes from rural New Hampshire
    into the app.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSimon Glenn-Gregg on LinkedIn — <a href=\"https://www.linkedin.com/in/simongle/\"
    rel=\"nofollow\">https://www.linkedin.com/in/simongle/</a><br>\nSimon Glenn-Gregg
    — <a href=\"http://simonglenngregg.com/\" rel=\"nofollow\">http://simonglenngregg.com/</a><br>\nThe
    Washington Post — <a href=\"https://www.washingtonpost.com/\" rel=\"nofollow\">https://www.washingtonpost.com/</a><br>\nJason
    Holt on Twitter — <a href=\"https://twitter.com/offpol\" rel=\"nofollow\">https://twitter.com/offpol</a><br>\n‘Elixir
    RAM and the Template of Doom’ — <a href=\"https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\"
    rel=\"nofollow\">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>\nErik
    Reyna on LinkedIn — <a href=\"https://www.linkedin.com/in/erikreyna/\" rel=\"nofollow\">https://www.linkedin.com/in/erikreyna/</a><br>\nJeremy
    Bowers on LinkedIn — <a href=\"https://www.linkedin.com/in/jeremyjbowers/\" rel=\"nofollow\">https://www.linkedin.com/in/jeremyjbowers/</a><br>\nAssociated
    Press — <a href=\"https://apnews.com/\" rel=\"nofollow\">https://apnews.com/</a><br>\nEdison
    — <a href=\"https://www.edisonresearch.com/\" rel=\"nofollow\">https://www.edisonresearch.com/</a><br>\nWhole
    Whale — <a href=\"https://www.wholewhale.com/\" rel=\"nofollow\">https://www.wholewhale.com/</a><br>\nThe
    Century Foundation — <a href=\"https://tcf.org/\" rel=\"nofollow\">https://tcf.org/</a><br>\nArc
    Publishing — <a href=\"https://www.arcpublishing.com/\" rel=\"nofollow\">https://www.arcpublishing.com/</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Simon Glenn-Gregg.</p>\n      "
- title: Randall Thomas on Learning Elixir and Why Community Matters
  slug: s5e2-thomas
  link: https://smartlogic.io/podcast/elixir-wizards/s5e2-thomas
  guid: 41c6ea5d-4915-4a6e-9795-3e2a9b57aa72
  pubDate: Thu, 10 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 10, 2020
  description: "The culture of your programming community directly impacts your professional
    success. As Thunderbolt Labs Founder Randall Thomas explains in this episode,
    a community that practices openness and which warmly welcomes its newer members
    leads to greater career happiness. \nWe open our chat with Randall by exploring
    his start in coding and how he discovered Elixir. He shares some of the teething
    problems that he had moving from Ruby to Elixir before we touch on how learning
    other languages expands your ability to both appreciate and code in languages
    that you’re already fluent in. Following this, Randall explodes the myth of the
    genius polyglot programmer by sharing his take on why all coders are polyglots.
    As the Thunderbolt CEO, we ask Randall how his company adopted Elixir. He provides
    listeners with insights into how they introduced Elixir into their practice without
    affecting existing projects. \nAfter highlighting the efficiency of Elixir and
    how community affects the feel of a language, we compare the culture and challenges
    of Ruby, JavaScript, and Elixir. Near the end of the episode, Randall reflects
    on why experts make for poor teachers. For Randall, Elixir gives his company a
    competitive advantage. Tune in to hear Randall’s perspective on why community
    matters and for his top advice on teaching your team Elixir. \nKey Points From
    This Episode:\nIntroducing Thunderbolt Labs Founder and CEO, Randall Thomas.\nRandall
    shares how he discovered coding and engineering. \nHear how Randall first heard
    about Elixir and how he picked up the language.\nExploring common challenges moving
    from Ruby to Elixir. \nHow learning new languages can deepen your understanding
    of languages that you already know.\nWhy there’s no such thing as the ‘genius
    polyglot programmer.’ \nDetails on why Randall’s company began gravitating towards
    Elixir.\nHow communities affect the ‘feel’ of a language.\nWhy no one actually
    writes in JavaScript anymore. \nRandall gives his take on why Elixir is a god-send
    for certain programmers. \nInsights into how Randall integrated Elixir into his
    company.\nThe challenge of learning Elixir versus the ease of learning JavaScript.\nHow
    Randall sold his clients on Elixir and the benefits of having clients that trust
    you.\nRandall’s top tips on helping your developers learn Elixir.\nWhy Elixir
    gives Randall’s a strategic advantage.\nThe importance of having non-experts explain
    things to you. \nHow your coding community can impact your happiness and career
    success.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nRandall Thomas on LinkedIn — https://www.linkedin.com/in/randall-j-thomas/\nRandall
    Thomas on Twitter — https://twitter.com/daksis\nThunderbolt Labs — https://www.thunderboltlabs.com/\nEpisode
    with Miki Rezentes — https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\nGödel,
    Escher, Bach on Amazon — https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\nStephen
    Hawking — https://www.biography.com/scientist/stephen-hawking\nWilliam James —
    https://plato.stanford.edu/entries/james/\nBertrand Russell — https://plato.stanford.edu/entries/russell/\nBarcelona
    Ruby Conference — https://twitter.com/baruco\nJosé Valim — https://twitter.com/josevalim\nProgramming
    Elixir on Amazon — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\nDave
    Thomas — https://pragdave.me/\nElixirConf — https://2020.elixirconf.com/\n‘(UN)Learning
    Elixir’ — https://www.youtube.com/watch?v=o54EurlzK8o\nBruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/\nGrox.io
    — https://grox.io/\nEric S. Raymond — http://www.catb.org/~esr/\nStack Overflow
    — https://stackoverflow.com/\nMedium — https://medium.com/\nEngine Yard — https://www.engineyard.com/\nDouglas
    Crockford — https://www.crockford.com/about.html\nYehuda Katz — https://www.linkedin.com/in/yehudakatz/\nBlake
    Mizerany — https://www.linkedin.com/in/bmizerany/\nThe Pragmatic Studio — https://pragmaticstudio.com/\nStuff
    Goes Bad: Erlang in Anger on Amazon — https://www.erlang-in-anger.com/\n Frederic
    Trottier-Hebert — https://www.linkedin.com/in/fredth/\nStu Holloway — https://www.linkedin.com/in/stu-holloway-linvio/\nPaul
    Graham — http://www.paulgraham.com/\nHackers and Painters on Amazon — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nLonestar
    Elixir — https://lonestarelixir.com/\nTuring.io — https://turing.io/\nSundi Myint
    on Twitter — https://twitter.com/sundikhin\nJustus Eapen on Twitter— https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Randall
    Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+cTOOXU7U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72.mp3
    length: '38278017'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: In today's episode, Randall Thomas explains  how a community that practices
      openness and which warmly welcomes its newer members leads to greater career
      happiness.
    duration: '53:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72/cover.jpg?v=1
    summary: "\n        <p>The culture of your programming community directly impacts
      your professional success. As Thunderbolt Labs Founder Randall Thomas explains
      in this episode, a community that practices openness and which warmly welcomes
      its newer members leads to greater career happiness. </p>\n\n<p>We open our
      chat with Randall by exploring his start in coding and how he discovered Elixir.
      He shares some of the teething problems that he had moving from Ruby to Elixir
      before we touch on how learning other languages expands your ability to both
      appreciate and code in languages that you’re already fluent in. Following this,
      Randall explodes the myth of the genius polyglot programmer by sharing his take
      on why all coders are polyglots. As the Thunderbolt CEO, we ask Randall how
      his company adopted Elixir. He provides listeners with insights into how they
      introduced Elixir into their practice without affecting existing projects. </p>\n\n<p>After
      highlighting the efficiency of Elixir and how community affects the feel of
      a language, we compare the culture and challenges of Ruby, JavaScript, and Elixir.
      Near the end of the episode, Randall reflects on why experts make for poor teachers.
      For Randall, Elixir gives his company a competitive advantage. Tune in to hear
      Randall’s perspective on why community matters and for his top advice on teaching
      your team Elixir. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      Thunderbolt Labs Founder and CEO, Randall Thomas.</li>\n<li>Randall shares how
      he discovered coding and engineering. </li>\n<li>Hear how Randall first heard
      about Elixir and how he picked up the language.</li>\n<li>Exploring common challenges
      moving from Ruby to Elixir. </li>\n<li>How learning new languages can deepen
      your understanding of languages that you already know.</li>\n<li>Why there’s
      no such thing as the ‘genius polyglot programmer.’ </li>\n<li>Details on why
      Randall’s company began gravitating towards Elixir.</li>\n<li>How communities
      affect the ‘feel’ of a language.</li>\n<li>Why no one actually writes in JavaScript
      anymore. </li>\n<li>Randall gives his take on why Elixir is a god-send for certain
      programmers. </li>\n<li>Insights into how Randall integrated Elixir into his
      company.</li>\n<li>The challenge of learning Elixir versus the ease of learning
      JavaScript.</li>\n<li>How Randall sold his clients on Elixir and the benefits
      of having clients that trust you.</li>\n<li>Randall’s top tips on helping your
      developers learn Elixir.</li>\n<li>Why Elixir gives Randall’s a strategic advantage.</li>\n<li>The
      importance of having non-experts explain things to you. </li>\n<li>How your
      coding community can impact your happiness and career success.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nRandall Thomas on LinkedIn
      — <a href=\"https://www.linkedin.com/in/randall-j-thomas/\" rel=\"nofollow\">https://www.linkedin.com/in/randall-j-thomas/</a><br>\nRandall
      Thomas on Twitter — <a href=\"https://twitter.com/daksis\" rel=\"nofollow\">https://twitter.com/daksis</a><br>\nThunderbolt
      Labs — <a href=\"https://www.thunderboltlabs.com/\" rel=\"nofollow\">https://www.thunderboltlabs.com/</a><br>\nEpisode
      with Miki Rezentes — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>\nGödel,
      Escher, Bach on Amazon — <a href=\"https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\"
      rel=\"nofollow\">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>\nStephen
      Hawking — <a href=\"https://www.biography.com/scientist/stephen-hawking\" rel=\"nofollow\">https://www.biography.com/scientist/stephen-hawking</a><br>\nWilliam
      James — <a href=\"https://plato.stanford.edu/entries/james/\" rel=\"nofollow\">https://plato.stanford.edu/entries/james/</a><br>\nBertrand
      Russell — <a href=\"https://plato.stanford.edu/entries/russell/\" rel=\"nofollow\">https://plato.stanford.edu/entries/russell/</a><br>\nBarcelona
      Ruby Conference — <a href=\"https://twitter.com/baruco\" rel=\"nofollow\">https://twitter.com/baruco</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nProgramming
      Elixir on Amazon — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nDave
      Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nElixirConf
      — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\n‘(UN)Learning
      Elixir’ — <a href=\"https://www.youtube.com/watch?v=o54EurlzK8o\" rel=\"nofollow\">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nGrox.io
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nEric
      S. Raymond — <a href=\"http://www.catb.org/%7Eesr/\" rel=\"nofollow\">http://www.catb.org/~esr/</a><br>\nStack
      Overflow — <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">https://stackoverflow.com/</a><br>\nMedium
      — <a href=\"https://medium.com/\" rel=\"nofollow\">https://medium.com/</a><br>\nEngine
      Yard — <a href=\"https://www.engineyard.com/\" rel=\"nofollow\">https://www.engineyard.com/</a><br>\nDouglas
      Crockford — <a href=\"https://www.crockford.com/about.html\" rel=\"nofollow\">https://www.crockford.com/about.html</a><br>\nYehuda
      Katz — <a href=\"https://www.linkedin.com/in/yehudakatz/\" rel=\"nofollow\">https://www.linkedin.com/in/yehudakatz/</a><br>\nBlake
      Mizerany — <a href=\"https://www.linkedin.com/in/bmizerany/\" rel=\"nofollow\">https://www.linkedin.com/in/bmizerany/</a><br>\nThe
      Pragmatic Studio — <a href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\nStuff
      Goes Bad: Erlang in Anger on Amazon — <a href=\"https://www.erlang-in-anger.com/\"
      rel=\"nofollow\">https://www.erlang-in-anger.com/</a><br>\n Frederic Trottier-Hebert
      — <a href=\"https://www.linkedin.com/in/fredth/\" rel=\"nofollow\">https://www.linkedin.com/in/fredth/</a><br>\nStu
      Holloway — <a href=\"https://www.linkedin.com/in/stu-holloway-linvio/\" rel=\"nofollow\">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
      and Painters on Amazon — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTuring.io
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen on Twitter— <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Randall Thomas.</p>\n      "
  contentEncoded: "\n        <p>The culture of your programming community directly
    impacts your professional success. As Thunderbolt Labs Founder Randall Thomas
    explains in this episode, a community that practices openness and which warmly
    welcomes its newer members leads to greater career happiness. </p>\n\n<p>We open
    our chat with Randall by exploring his start in coding and how he discovered Elixir.
    He shares some of the teething problems that he had moving from Ruby to Elixir
    before we touch on how learning other languages expands your ability to both appreciate
    and code in languages that you’re already fluent in. Following this, Randall explodes
    the myth of the genius polyglot programmer by sharing his take on why all coders
    are polyglots. As the Thunderbolt CEO, we ask Randall how his company adopted
    Elixir. He provides listeners with insights into how they introduced Elixir into
    their practice without affecting existing projects. </p>\n\n<p>After highlighting
    the efficiency of Elixir and how community affects the feel of a language, we
    compare the culture and challenges of Ruby, JavaScript, and Elixir. Near the end
    of the episode, Randall reflects on why experts make for poor teachers. For Randall,
    Elixir gives his company a competitive advantage. Tune in to hear Randall’s perspective
    on why community matters and for his top advice on teaching your team Elixir.
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing Thunderbolt
    Labs Founder and CEO, Randall Thomas.</li>\n<li>Randall shares how he discovered
    coding and engineering. </li>\n<li>Hear how Randall first heard about Elixir and
    how he picked up the language.</li>\n<li>Exploring common challenges moving from
    Ruby to Elixir. </li>\n<li>How learning new languages can deepen your understanding
    of languages that you already know.</li>\n<li>Why there’s no such thing as the
    ‘genius polyglot programmer.’ </li>\n<li>Details on why Randall’s company began
    gravitating towards Elixir.</li>\n<li>How communities affect the ‘feel’ of a language.</li>\n<li>Why
    no one actually writes in JavaScript anymore. </li>\n<li>Randall gives his take
    on why Elixir is a god-send for certain programmers. </li>\n<li>Insights into
    how Randall integrated Elixir into his company.</li>\n<li>The challenge of learning
    Elixir versus the ease of learning JavaScript.</li>\n<li>How Randall sold his
    clients on Elixir and the benefits of having clients that trust you.</li>\n<li>Randall’s
    top tips on helping your developers learn Elixir.</li>\n<li>Why Elixir gives Randall’s
    a strategic advantage.</li>\n<li>The importance of having non-experts explain
    things to you. </li>\n<li>How your coding community can impact your happiness
    and career success.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nRandall Thomas on LinkedIn — <a href=\"https://www.linkedin.com/in/randall-j-thomas/\"
    rel=\"nofollow\">https://www.linkedin.com/in/randall-j-thomas/</a><br>\nRandall
    Thomas on Twitter — <a href=\"https://twitter.com/daksis\" rel=\"nofollow\">https://twitter.com/daksis</a><br>\nThunderbolt
    Labs — <a href=\"https://www.thunderboltlabs.com/\" rel=\"nofollow\">https://www.thunderboltlabs.com/</a><br>\nEpisode
    with Miki Rezentes — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>\nGödel,
    Escher, Bach on Amazon — <a href=\"https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\"
    rel=\"nofollow\">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>\nStephen
    Hawking — <a href=\"https://www.biography.com/scientist/stephen-hawking\" rel=\"nofollow\">https://www.biography.com/scientist/stephen-hawking</a><br>\nWilliam
    James — <a href=\"https://plato.stanford.edu/entries/james/\" rel=\"nofollow\">https://plato.stanford.edu/entries/james/</a><br>\nBertrand
    Russell — <a href=\"https://plato.stanford.edu/entries/russell/\" rel=\"nofollow\">https://plato.stanford.edu/entries/russell/</a><br>\nBarcelona
    Ruby Conference — <a href=\"https://twitter.com/baruco\" rel=\"nofollow\">https://twitter.com/baruco</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nProgramming
    Elixir on Amazon — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nDave
    Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nElixirConf
    — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\n‘(UN)Learning
    Elixir’ — <a href=\"https://www.youtube.com/watch?v=o54EurlzK8o\" rel=\"nofollow\">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nGrox.io
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nEric
    S. Raymond — <a href=\"http://www.catb.org/%7Eesr/\" rel=\"nofollow\">http://www.catb.org/~esr/</a><br>\nStack
    Overflow — <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">https://stackoverflow.com/</a><br>\nMedium
    — <a href=\"https://medium.com/\" rel=\"nofollow\">https://medium.com/</a><br>\nEngine
    Yard — <a href=\"https://www.engineyard.com/\" rel=\"nofollow\">https://www.engineyard.com/</a><br>\nDouglas
    Crockford — <a href=\"https://www.crockford.com/about.html\" rel=\"nofollow\">https://www.crockford.com/about.html</a><br>\nYehuda
    Katz — <a href=\"https://www.linkedin.com/in/yehudakatz/\" rel=\"nofollow\">https://www.linkedin.com/in/yehudakatz/</a><br>\nBlake
    Mizerany — <a href=\"https://www.linkedin.com/in/bmizerany/\" rel=\"nofollow\">https://www.linkedin.com/in/bmizerany/</a><br>\nThe
    Pragmatic Studio — <a href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\nStuff
    Goes Bad: Erlang in Anger on Amazon — <a href=\"https://www.erlang-in-anger.com/\"
    rel=\"nofollow\">https://www.erlang-in-anger.com/</a><br>\n Frederic Trottier-Hebert
    — <a href=\"https://www.linkedin.com/in/fredth/\" rel=\"nofollow\">https://www.linkedin.com/in/fredth/</a><br>\nStu
    Holloway — <a href=\"https://www.linkedin.com/in/stu-holloway-linvio/\" rel=\"nofollow\">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
    and Painters on Amazon — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTuring.io
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen on Twitter— <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Randall Thomas.</p>\n      "
- title: Launchisode and Outlaws Takeover with Chris Keathley, Amos King, and Anna
    Neyzberg
  slug: s5e1-launchisode-outlaws-takeover
  link: https://smartlogic.io/podcast/elixir-wizards/s5e1-launchisode-outlaws-takeover
  guid: 4a9a2637-46ff-42d5-af60-6c46bbf9c3fa
  pubDate: Thu, 03 Dec 2020 06:00:00 -0500
  pubDateFriendly: December  3, 2020
  description: "Welcome back to Elixir Wizards, season five, episode one! The theme
    for this season is ‘Adopting Elixir’, and for today’s show the team at Elixir
    Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give the Elixir
    Wizards a chance to talk about what they love about Elixir, how they learned it,
    and some of their experiences using it at SmartLogic! \nWe kick off the conversation
    with some memories of college and the different degrees everybody did, how these
    experiences fit into programming and the different paths that Justus, Eric, and
    Sundi took into the world of Elixir. From there, we dive into some of the amazing
    features about Elixir, highlighting pattern matching, readability, and how easy
    it is to think about how to write solutions to problems using it. Our conversation
    moves onto the topic of serving clients with Elixir, and here we consider the
    risk of basing a consultancy on one technology, as well as how open clients are
    to their needs being met with this young but powerful language. We also talk about
    training staff and convincing teams to adopt Elixir, covering themes of barriers
    to entry, the job market, and using the Elixir community as a resource. For a
    fun conversation about Elixir where our hosts take the mic as guests, be sure
    to tune in today.\nKey Points From This Episode:\nIntroducing this season’s topic
    and today’s plan where the hosts become guests.\nHow Justus, Eric and Sundi got
    introduced to Elixir and their respective journeys using it.\nEverybody discusses
    their forays into programming and compares their different degrees.\nHustles Justus
    did at college to get tuition cheaper for his friends and him.\n‘Staking a consultancy
    on a tech’; how SmartLogic adopted Elixir initially.\nHow the first few clients
    SmartLogic served with Elixir felt about the language being used.\nSundi’s onboarding
    experience at CAVA and how she got introduced to Elixir.\nHow Justus discovered
    the beauty of Elixir after he began to understand pattern matching.\nSundi’s thoughts
    about hidden functionality in JavaScript code versus Elixir which reads better.\nWhether
    using Elixir to solve problems feels easy due to familiarity or its inherent characteristics.\nConventions
    SmartLogic is implementing regarding using Elixir to build projects.\nThe lack
    of introductory resources for learning Elixir and the team’s attempts at making
    some.\nThe value of getting involved in your community for learning a new technology.\nFind
    out the value of investing in staff training for companies who want to switch
    to Elixir.\nA new wall between Dev and Ops in the form of Kubernetes.\nHow to
    get your co-workers to learn Elixir if you are passionate about it.\nGrowth at
    SmartLogic, new hires, and what they specialize in.\nThe job landscape in 2020
    and how this relates to having Elixir under your belt.\nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nChris Keathley on Twitter — https://twitter.com/chriskeathley\nAmos
    King on Twitter — https://twitter.com/adkron\nAnna Neyzberg on Twitter — https://twitter.com/aneyzb\nSundi
    Myint on Twitter — https://twitter.com/sundikhin\nJustus Eapen — https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich\nCAVA — https://cava.com/\nPavlok
    — https://pavlok.com/\nJohnny Boursiquot — https://www.jboursiquot.com/\nElixirBridge
    — http://elixirbridge.org/\nMatt Mills on GitHub — https://github.com/photomattmills\nBrooklyn
    Zelenca on Functional Programming — https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\nBleacher
    Report — https://bleacherreport.com/\nLiveView by Bruce Tate — https://pragprog.com/titles/passlive/programmer-passport-liveview/
    Special Guests: Amos King, Anna Neyzberg, and Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+R9k5VsM4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa.mp3
    length: '81502282'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Welcome to season five, 'Adopting Elixir'. Today the Elixir Outlaws
      play host!  The Elixir Wizards talk about what they love about Elixir, how they
      learned it, and their experiences using it at SmartLogic.
    duration: '56:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa/cover.jpg?v=1
    summary: "\n        <p>Welcome back to Elixir Wizards, season five, episode one!
      The theme for this season is ‘Adopting Elixir’, and for today’s show the team
      at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give
      the Elixir Wizards a chance to talk about what they love about Elixir, how they
      learned it, and some of their experiences using it at SmartLogic! </p>\n\n<p>We
      kick off the conversation with some memories of college and the different degrees
      everybody did, how these experiences fit into programming and the different
      paths that Justus, Eric, and Sundi took into the world of Elixir. From there,
      we dive into some of the amazing features about Elixir, highlighting pattern
      matching, readability, and how easy it is to think about how to write solutions
      to problems using it. Our conversation moves onto the topic of serving clients
      with Elixir, and here we consider the risk of basing a consultancy on one technology,
      as well as how open clients are to their needs being met with this young but
      powerful language. We also talk about training staff and convincing teams to
      adopt Elixir, covering themes of barriers to entry, the job market, and using
      the Elixir community as a resource. For a fun conversation about Elixir where
      our hosts take the mic as guests, be sure to tune in today.</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing this season’s topic and today’s
      plan where the hosts become guests.</li>\n<li>How Justus, Eric and Sundi got
      introduced to Elixir and their respective journeys using it.</li>\n<li>Everybody
      discusses their forays into programming and compares their different degrees.</li>\n<li>Hustles
      Justus did at college to get tuition cheaper for his friends and him.</li>\n<li>‘Staking
      a consultancy on a tech’; how SmartLogic adopted Elixir initially.</li>\n<li>How
      the first few clients SmartLogic served with Elixir felt about the language
      being used.</li>\n<li>Sundi’s onboarding experience at CAVA and how she got
      introduced to Elixir.</li>\n<li>How Justus discovered the beauty of Elixir after
      he began to understand pattern matching.</li>\n<li>Sundi’s thoughts about hidden
      functionality in JavaScript code versus Elixir which reads better.</li>\n<li>Whether
      using Elixir to solve problems feels easy due to familiarity or its inherent
      characteristics.</li>\n<li>Conventions SmartLogic is implementing regarding
      using Elixir to build projects.</li>\n<li>The lack of introductory resources
      for learning Elixir and the team’s attempts at making some.</li>\n<li>The value
      of getting involved in your community for learning a new technology.</li>\n<li>Find
      out the value of investing in staff training for companies who want to switch
      to Elixir.</li>\n<li>A new wall between Dev and Ops in the form of Kubernetes.</li>\n<li>How
      to get your co-workers to learn Elixir if you are passionate about it.</li>\n<li>Growth
      at SmartLogic, new hires, and what they specialize in.</li>\n<li>The job landscape
      in 2020 and how this relates to having Elixir under your belt.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter
      — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nAmos
      King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nAnna
      Neyzberg on Twitter — <a href=\"https://twitter.com/aneyzb\" rel=\"nofollow\">https://twitter.com/aneyzb</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nCAVA
      — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nPavlok
      — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nJohnny
      Boursiquot — <a href=\"https://www.jboursiquot.com/\" rel=\"nofollow\">https://www.jboursiquot.com/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nMatt
      Mills on GitHub — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nBrooklyn
      Zelenca on Functional Programming — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nLiveView
      by Bruce Tate — <a href=\"https://pragprog.com/titles/passlive/programmer-passport-liveview/\"
      rel=\"nofollow\">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special
      Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to Elixir Wizards, season five, episode
    one! The theme for this season is ‘Adopting Elixir’, and for today’s show the
    team at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg
    give the Elixir Wizards a chance to talk about what they love about Elixir, how
    they learned it, and some of their experiences using it at SmartLogic! </p>\n\n<p>We
    kick off the conversation with some memories of college and the different degrees
    everybody did, how these experiences fit into programming and the different paths
    that Justus, Eric, and Sundi took into the world of Elixir. From there, we dive
    into some of the amazing features about Elixir, highlighting pattern matching,
    readability, and how easy it is to think about how to write solutions to problems
    using it. Our conversation moves onto the topic of serving clients with Elixir,
    and here we consider the risk of basing a consultancy on one technology, as well
    as how open clients are to their needs being met with this young but powerful
    language. We also talk about training staff and convincing teams to adopt Elixir,
    covering themes of barriers to entry, the job market, and using the Elixir community
    as a resource. For a fun conversation about Elixir where our hosts take the mic
    as guests, be sure to tune in today.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    this season’s topic and today’s plan where the hosts become guests.</li>\n<li>How
    Justus, Eric and Sundi got introduced to Elixir and their respective journeys
    using it.</li>\n<li>Everybody discusses their forays into programming and compares
    their different degrees.</li>\n<li>Hustles Justus did at college to get tuition
    cheaper for his friends and him.</li>\n<li>‘Staking a consultancy on a tech’;
    how SmartLogic adopted Elixir initially.</li>\n<li>How the first few clients SmartLogic
    served with Elixir felt about the language being used.</li>\n<li>Sundi’s onboarding
    experience at CAVA and how she got introduced to Elixir.</li>\n<li>How Justus
    discovered the beauty of Elixir after he began to understand pattern matching.</li>\n<li>Sundi’s
    thoughts about hidden functionality in JavaScript code versus Elixir which reads
    better.</li>\n<li>Whether using Elixir to solve problems feels easy due to familiarity
    or its inherent characteristics.</li>\n<li>Conventions SmartLogic is implementing
    regarding using Elixir to build projects.</li>\n<li>The lack of introductory resources
    for learning Elixir and the team’s attempts at making some.</li>\n<li>The value
    of getting involved in your community for learning a new technology.</li>\n<li>Find
    out the value of investing in staff training for companies who want to switch
    to Elixir.</li>\n<li>A new wall between Dev and Ops in the form of Kubernetes.</li>\n<li>How
    to get your co-workers to learn Elixir if you are passionate about it.</li>\n<li>Growth
    at SmartLogic, new hires, and what they specialize in.</li>\n<li>The job landscape
    in 2020 and how this relates to having Elixir under your belt.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter —
    <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nAmos
    King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nAnna
    Neyzberg on Twitter — <a href=\"https://twitter.com/aneyzb\" rel=\"nofollow\">https://twitter.com/aneyzb</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nCAVA
    — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nPavlok
    — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nJohnny
    Boursiquot — <a href=\"https://www.jboursiquot.com/\" rel=\"nofollow\">https://www.jboursiquot.com/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nMatt
    Mills on GitHub — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nBrooklyn
    Zelenca on Functional Programming — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nLiveView
    by Bruce Tate — <a href=\"https://pragprog.com/titles/passlive/programmer-passport-liveview/\"
    rel=\"nofollow\">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special
    Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>\n      "
Season 4:
- title: 'Season Four Wrap: Whose Design Is It Anyway? with Swadia, Windholtz, Rezentes,
    and Keathley'
  slug: s4e22-s4wrap-whose-design-is-it-anyway
  link: https://smartlogic.io/podcast/elixir-wizards/s4e22-s4wrap-whose-design-is-it-anyway
  guid: 8cbeff8e-7468-4da6-a117-7e0a1f94d653
  pubDate: Thu, 15 Oct 2020 06:00:00 -0400
  pubDateFriendly: October 15, 2020
  description: "To close off this season and conclude our deep dive into system and
    application architecture, today’s episode is a special panel discussion on a topic
    that has provoked a mix of answers that range from the controversial to the philosophical
    — “What does domain-driven design mean to you?” For the final word on this subject,
    we welcome back software developers Chris Keathley, Japa Swadia, Mark Windholtz,
    and Miki Rezentes. Our first hot take comes from Miki, who shares her thoughts
    about how domain-driven design developed because the tech industry undervalues
    communication. Following this, Mark and Japa discuss how domain-driven design
    gives developers a context for what they create while informing how you code using
    Elixir. We then touch on whether domain-driven design makes it easier or more
    difficult to change your code and how communication is valued within a business
    context. We explore key domain-driven design concepts, including the role of bounded
    contexts, and how this design ethos can help you appeal to stakeholders such as
    product managers. After Miki highlights the reasons why communication should be
    seen as a vital tech skill, each guest provides their final thoughts on domain-driven
    design. Tune in for this season’s insightful finale and find out which of today’s
    guests is the winner of “Whose Design Is It Anyway?”\nKey Points From This Episode:\nIntroducing
    guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.\nHear what
    domain-driven design means for each guest.\nMiki shares her hot take that domain-driven
    design is “nothing new under the sun.”\nWhy the essence of domain-driven design
    is about listening. \nHow domain-driven design can inform your Elixir architecture.
    \nMapping your system and developing names for your bounded contexts.\nDomain-driven
    design trade-offs and how it can lead to a loss of productivity. \nThe idea that
    domain-driven design has developed because the tech industry undervalues communication.
    \nWhy communication should be valued — bad communication costs money. \nHow tech
    companies are generally aligned with the goals of domain-driven design.\nWhy Mark
    is so delighted to be working with Elixir and domain-driven design.\nThe link
    between domain-driven design and developing better products.\nExploring how bounded
    contexts allow teams to create solutions to unique problems.\nSeeing communication
    as a tech skill that should be learned early in your career.\nOur guests share
    their final thoughts on domain-driven design. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nChris Keathley on Twitter — @ChrisKeathley/\nChris
    Keathley — https://keathley.io/\nJapa Swadia on Twitter — https://twitter.com/japa2292\nJapa
    Swadia on LinkedIn — https://www.linkedin.com/in/japaswadia/\nMark Windholtz on
    Twitter — https://twitter.com/windholtz\nMark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/\nMiki
    Rezentes on Twitter — https://twitter.com/mikirez\nMiki Rezentes on LinkedIn —
    https://www.linkedin.com/in/miki-rezentes-823ba02a/ \nPodium — https://www.podium.com/\nElixir
    Outlaws — https://elixiroutlaws.com/\nAgile DNA — http://www.agiledna.com\nFrame.io
    — https://frame.io/\nBleacher Report — https://bleacherreport.com/\nDomain-Driven
    Design: Tackling Complexity in the Heart of Software on Amazon— https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\nDomain
    Language — https://www.domainlanguage.com/\nThe Seven Laws of Learning: Why Great
    Leaders Are Also Great Teachers on Amazon\n— https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\nPatterns,
    Principles, and Practices of Domain-Driven Design on Amazon — https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\n‘Ubiquitous
    Language’ — https://martinfowler.com/bliki/UbiquitousLanguage.html\n‘Value Object’
    — https://martinfowler.com/bliki/ValueObject.html\nDomain-Driven Design Europe
    — https://dddeurope.com/2021/\nDomain-Driven Design Europe on YouTube — https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\nA
    Philosophy of Software Design on Amazon — https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\nEric
    Evans Training Videos — https://elearn.domainlanguage.com/\nDesigning Elixir Systems
    with OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\nWhose
    Line Is It Anyway? — https://www.imdb.com/title/tt0163507/\nDrew Carey — https://www.imdb.com/name/nm0004804/
    Special Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XRBHme1c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8cbeff8e-7468-4da6-a117-7e0a1f94d653.mp3
    length: '42936728'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: To close off this season and conclude our deep dive into system and
      application architecture, today’s episode is a panel discussion on domain-driven
      design with special guests Japa Swadia, Mark Windholtz, Miki Rezentes, and Chris
      Keathley.
    duration: '59:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8cbeff8e-7468-4da6-a117-7e0a1f94d653/cover.jpg?v=1
    summary: "\n        <p>To close off this season and conclude our deep dive into
      system and application architecture, today’s episode is a special panel discussion
      on a topic that has provoked a mix of answers that range from the controversial
      to the philosophical — “What does domain-driven design mean to you?” For the
      final word on this subject, we welcome back software developers Chris Keathley,
      Japa Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from
      Miki, who shares her thoughts about how domain-driven design developed because
      the tech industry undervalues communication. Following this, Mark and Japa discuss
      how domain-driven design gives developers a context for what they create while
      informing how you code using Elixir. We then touch on whether domain-driven
      design makes it easier or more difficult to change your code and how communication
      is valued within a business context. We explore key domain-driven design concepts,
      including the role of bounded contexts, and how this design ethos can help you
      appeal to stakeholders such as product managers. After Miki highlights the reasons
      why communication should be seen as a vital tech skill, each guest provides
      their final thoughts on domain-driven design. Tune in for this season’s insightful
      finale and find out which of today’s guests is the winner of “Whose Design Is
      It Anyway?”</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>\n<li>Hear
      what domain-driven design means for each guest.</li>\n<li>Miki shares her hot
      take that domain-driven design is “nothing new under the sun.”</li>\n<li>Why
      the essence of domain-driven design is about listening. </li>\n<li>How domain-driven
      design can inform your Elixir architecture. </li>\n<li>Mapping your system and
      developing names for your bounded contexts.</li>\n<li>Domain-driven design trade-offs
      and how it can lead to a loss of productivity. </li>\n<li>The idea that domain-driven
      design has developed because the tech industry undervalues communication. </li>\n<li>Why
      communication should be valued — bad communication costs money. </li>\n<li>How
      tech companies are generally aligned with the goals of domain-driven design.</li>\n<li>Why
      Mark is so delighted to be working with Elixir and domain-driven design.</li>\n<li>The
      link between domain-driven design and developing better products.</li>\n<li>Exploring
      how bounded contexts allow teams to create solutions to unique problems.</li>\n<li>Seeing
      communication as a tech skill that should be learned early in your career.</li>\n<li>Our
      guests share their final thoughts on domain-driven design. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter
      — @ChrisKeathley/<br>\nChris Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nJapa
      Swadia on Twitter — <a href=\"https://twitter.com/japa2292\" rel=\"nofollow\">https://twitter.com/japa2292</a><br>\nJapa
      Swadia on LinkedIn — <a href=\"https://www.linkedin.com/in/japaswadia/\" rel=\"nofollow\">https://www.linkedin.com/in/japaswadia/</a><br>\nMark
      Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nMark
      Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\"
      rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMiki Rezentes
      on Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMiki
      Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
      rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>\nPodium
      — <a href=\"https://www.podium.com/\" rel=\"nofollow\">https://www.podium.com/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nAgile
      DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nFrame.io
      — <a href=\"https://frame.io/\" rel=\"nofollow\">https://frame.io/</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nDomain-Driven
      Design: Tackling Complexity in the Heart of Software on Amazon— <a href=\"https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\"
      rel=\"nofollow\">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>\nDomain
      Language — <a href=\"https://www.domainlanguage.com/\" rel=\"nofollow\">https://www.domainlanguage.com/</a><br>\nThe
      Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>\n—
      <a href=\"https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\"
      rel=\"nofollow\">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>\nPatterns,
      Principles, and Practices of Domain-Driven Design on Amazon — <a href=\"https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\"
      rel=\"nofollow\">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>\n‘Ubiquitous
      Language’ — <a href=\"https://martinfowler.com/bliki/UbiquitousLanguage.html\"
      rel=\"nofollow\">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>\n‘Value
      Object’ — <a href=\"https://martinfowler.com/bliki/ValueObject.html\" rel=\"nofollow\">https://martinfowler.com/bliki/ValueObject.html</a><br>\nDomain-Driven
      Design Europe — <a href=\"https://dddeurope.com/2021/\" rel=\"nofollow\">https://dddeurope.com/2021/</a><br>\nDomain-Driven
      Design Europe on YouTube — <a href=\"https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\"
      rel=\"nofollow\">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>\nA
      Philosophy of Software Design on Amazon — <a href=\"https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\"
      rel=\"nofollow\">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>\nEric
      Evans Training Videos — <a href=\"https://elearn.domainlanguage.com/\" rel=\"nofollow\">https://elearn.domainlanguage.com/</a><br>\nDesigning
      Elixir Systems with OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nWhose
      Line Is It Anyway? — <a href=\"https://www.imdb.com/title/tt0163507/\" rel=\"nofollow\">https://www.imdb.com/title/tt0163507/</a><br>\nDrew
      Carey — <a href=\"https://www.imdb.com/name/nm0004804/\" rel=\"nofollow\">https://www.imdb.com/name/nm0004804/</a></p><p>Special
      Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>\n      "
  contentEncoded: "\n        <p>To close off this season and conclude our deep dive
    into system and application architecture, today’s episode is a special panel discussion
    on a topic that has provoked a mix of answers that range from the controversial
    to the philosophical — “What does domain-driven design mean to you?” For the final
    word on this subject, we welcome back software developers Chris Keathley, Japa
    Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from Miki,
    who shares her thoughts about how domain-driven design developed because the tech
    industry undervalues communication. Following this, Mark and Japa discuss how
    domain-driven design gives developers a context for what they create while informing
    how you code using Elixir. We then touch on whether domain-driven design makes
    it easier or more difficult to change your code and how communication is valued
    within a business context. We explore key domain-driven design concepts, including
    the role of bounded contexts, and how this design ethos can help you appeal to
    stakeholders such as product managers. After Miki highlights the reasons why communication
    should be seen as a vital tech skill, each guest provides their final thoughts
    on domain-driven design. Tune in for this season’s insightful finale and find
    out which of today’s guests is the winner of “Whose Design Is It Anyway?”</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing guests Chris Keathley,
    Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>\n<li>Hear what domain-driven
    design means for each guest.</li>\n<li>Miki shares her hot take that domain-driven
    design is “nothing new under the sun.”</li>\n<li>Why the essence of domain-driven
    design is about listening. </li>\n<li>How domain-driven design can inform your
    Elixir architecture. </li>\n<li>Mapping your system and developing names for your
    bounded contexts.</li>\n<li>Domain-driven design trade-offs and how it can lead
    to a loss of productivity. </li>\n<li>The idea that domain-driven design has developed
    because the tech industry undervalues communication. </li>\n<li>Why communication
    should be valued — bad communication costs money. </li>\n<li>How tech companies
    are generally aligned with the goals of domain-driven design.</li>\n<li>Why Mark
    is so delighted to be working with Elixir and domain-driven design.</li>\n<li>The
    link between domain-driven design and developing better products.</li>\n<li>Exploring
    how bounded contexts allow teams to create solutions to unique problems.</li>\n<li>Seeing
    communication as a tech skill that should be learned early in your career.</li>\n<li>Our
    guests share their final thoughts on domain-driven design. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter —
    @ChrisKeathley/<br>\nChris Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nJapa
    Swadia on Twitter — <a href=\"https://twitter.com/japa2292\" rel=\"nofollow\">https://twitter.com/japa2292</a><br>\nJapa
    Swadia on LinkedIn — <a href=\"https://www.linkedin.com/in/japaswadia/\" rel=\"nofollow\">https://www.linkedin.com/in/japaswadia/</a><br>\nMark
    Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nMark
    Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\" rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMiki
    Rezentes on Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMiki
    Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
    rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>\nPodium
    — <a href=\"https://www.podium.com/\" rel=\"nofollow\">https://www.podium.com/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nAgile
    DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nFrame.io
    — <a href=\"https://frame.io/\" rel=\"nofollow\">https://frame.io/</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nDomain-Driven
    Design: Tackling Complexity in the Heart of Software on Amazon— <a href=\"https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\"
    rel=\"nofollow\">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>\nDomain
    Language — <a href=\"https://www.domainlanguage.com/\" rel=\"nofollow\">https://www.domainlanguage.com/</a><br>\nThe
    Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>\n—
    <a href=\"https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\"
    rel=\"nofollow\">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>\nPatterns,
    Principles, and Practices of Domain-Driven Design on Amazon — <a href=\"https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\"
    rel=\"nofollow\">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>\n‘Ubiquitous
    Language’ — <a href=\"https://martinfowler.com/bliki/UbiquitousLanguage.html\"
    rel=\"nofollow\">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>\n‘Value
    Object’ — <a href=\"https://martinfowler.com/bliki/ValueObject.html\" rel=\"nofollow\">https://martinfowler.com/bliki/ValueObject.html</a><br>\nDomain-Driven
    Design Europe — <a href=\"https://dddeurope.com/2021/\" rel=\"nofollow\">https://dddeurope.com/2021/</a><br>\nDomain-Driven
    Design Europe on YouTube — <a href=\"https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\"
    rel=\"nofollow\">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>\nA
    Philosophy of Software Design on Amazon — <a href=\"https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\"
    rel=\"nofollow\">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>\nEric
    Evans Training Videos — <a href=\"https://elearn.domainlanguage.com/\" rel=\"nofollow\">https://elearn.domainlanguage.com/</a><br>\nDesigning
    Elixir Systems with OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nWhose
    Line Is It Anyway? — <a href=\"https://www.imdb.com/title/tt0163507/\" rel=\"nofollow\">https://www.imdb.com/title/tt0163507/</a><br>\nDrew
    Carey — <a href=\"https://www.imdb.com/name/nm0004804/\" rel=\"nofollow\">https://www.imdb.com/name/nm0004804/</a></p><p>Special
    Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>\n      "
- title: Anna Sherman on Change, Failure, and living in Gig City
  slug: s4e21-sherman
  link: https://smartlogic.io/podcast/elixir-wizards/s4e21-sherman
  guid: 6cb1796f-017c-4f06-bd10-9cbf85fff404
  pubDate: Thu, 08 Oct 2020 06:00:00 -0400
  pubDateFriendly: October  8, 2020
  description: "Even with the most programming experience in the world, coding still
    involves a lot of trial and error. People getting started in the industry should
    not become bogged down by failure. Because in the end, it’s a feature and not
    a bug. That’s one of Zillion developer Anna Sherman’s key messages this episode.
    We open our discussion with Anna by talking about living in Chattanooga, AKA,
    Gig City. She talks about why the tech scene there is exploding before diving
    into her journey into programming. Having created her own personal coding boot
    camp, she opens up about what she did to land her first software job within only
    two months of looking. After discussing her early working experiences, we explore
    her work at Zillion, along with her side projects. We then touch on what Anna
    does to expand her skillset and develop herself as a professional, using a style
    guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch
    for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture
    and design, as well as the importance of domain-driven design in keeping your
    team aligned with what they’re building. Near the end of the episode, we talk
    about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why
    failure is an important part of coding. Tune in to hear more of Anna’s insights
    on change, failure, and living in Gig City.  \nKey Points From This Episode:\nFast
    internet and the great outdoors; hear why Chattanooga has become a tech hub.\nAnna
    shares her love of math and how she got into programming.\nCreating your own boot
    camp and becoming a self-taught coder.\nHow Anna landed her first gig, just two
    months after learning code.\nExploring Anna’s first job at Sovee, a machine translation
    company.\nWhat side projects Anna is working on and how they help her Magic: The
    Gathering games.\nHow Anna expands her skill set and develops herself as a professional.\nHear
    Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.\nWhat
    architecture, design, and domain-driven design mean to Anna. \nUsing a style guide
    and ‘lunch and learns’ to help your team understand patterns.\nDetails on how
    Anna’s style guide keeps her team informed. \nThe virtues of being a ‘physlistcler;’
    anchoring your workflow to a physical list. \nWhy failure is a key part of coding
    and the idea that anyone can learn to code.\nWe close the episode by chatting
    about Anna’s favorite board games. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nAnna Sherman on LinkedIn — https://www.linkedin.com/in/anna-sherman-54289372/\nAnna
    Sherman on Twitter — https://twitter.com/cavewoman90\nAnna Sherman on Instagram
    — https://www.instagram.com/annasherman100816/\nAnna Sherman Email — anna@myzillion.com\nCraig
    Lyons Email — craig@myzillion.com\nZillion — https://www.myzillion.com/\nBruce
    Tate — https://twitter.com/redrapids\nBrett Wise — https://twitter.com/brettwise\nGig
    City Elixir — https://www.gigcityelixir.com/\nNervesConf — https://www.nervesconf.com/\nChili’s
    — https://www.chilis.com/\nGodTube — https://www.godtube.com/\nMagic: The Gathering
    — https://magic.wizards.com/en\nScryfall — https://scryfall.com/\nCode BEAM SF
    Talk — https://www.youtube.com/watch?v=XgOJQAK6iHI\nEvernote — https://evernote.com/\nNerves
    — https://www.nerves-project.org/\n‘Repository and Services Pattern in a Multilayered
    architecture’ — https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\nA
    Handful of Stars — https://boardgamegeek.com/boardgame/197320/handful-stars\nA
    Few Acres Of Snow — https://boardgamegeek.com/boardgame/79828/few-acres-snow Special
    Guest: Anna Sherman.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+oXpUq12b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cb1796f-017c-4f06-bd10-9cbf85fff404.mp3
    length: '51319210'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'People in the industry should not be bogged down by failure. It’s a
      feature and not a bug. Today Anna Sherman talks about why the tech scene in
      Chattanooga is exploding and her journey into programming. '
    duration: '35:16'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cb1796f-017c-4f06-bd10-9cbf85fff404/cover.jpg?v=1
    summary: "\n        <p>Even with the most programming experience in the world,
      coding still involves a lot of trial and error. People getting started in the
      industry should not become bogged down by failure. Because in the end, it’s
      a feature and not a bug. That’s one of Zillion developer Anna Sherman’s key
      messages this episode. We open our discussion with Anna by talking about living
      in Chattanooga, AKA, Gig City. She talks about why the tech scene there is exploding
      before diving into her journey into programming. Having created her own personal
      coding boot camp, she opens up about what she did to land her first software
      job within only two months of looking. After discussing her early working experiences,
      we explore her work at Zillion, along with her side projects. We then touch
      on what Anna does to expand her skillset and develop herself as a professional,
      using a style guide and ‘lunch and learns’ to update her team, and we hear the
      elevator pitch for Anna’s Code BEAM San Francisco talk. Anna shares her take
      on architecture and design, as well as the importance of domain-driven design
      in keeping your team aligned with what they’re building. Near the end of the
      episode, we talk about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’
      and why failure is an important part of coding. Tune in to hear more of Anna’s
      insights on change, failure, and living in Gig City.  </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Fast internet and the great outdoors; hear
      why Chattanooga has become a tech hub.</li>\n<li>Anna shares her love of math
      and how she got into programming.</li>\n<li>Creating your own boot camp and
      becoming a self-taught coder.</li>\n<li>How Anna landed her first gig, just
      two months after learning code.</li>\n<li>Exploring Anna’s first job at Sovee,
      a machine translation company.</li>\n<li>What side projects Anna is working
      on and how they help her Magic: The Gathering games.</li>\n<li>How Anna expands
      her skill set and develops herself as a professional.</li>\n<li>Hear Anna’s
      elevator pitch for the talk she gave at Code BEAM San Francisco.</li>\n<li>What
      architecture, design, and domain-driven design mean to Anna. </li>\n<li>Using
      a style guide and ‘lunch and learns’ to help your team understand patterns.</li>\n<li>Details
      on how Anna’s style guide keeps her team informed. </li>\n<li>The virtues of
      being a ‘physlistcler;’ anchoring your workflow to a physical list. </li>\n<li>Why
      failure is a key part of coding and the idea that anyone can learn to code.</li>\n<li>We
      close the episode by chatting about Anna’s favorite board games. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAnna Sherman on LinkedIn —
      <a href=\"https://www.linkedin.com/in/anna-sherman-54289372/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>\nAnna
      Sherman on Twitter — <a href=\"https://twitter.com/cavewoman90\" rel=\"nofollow\">https://twitter.com/cavewoman90</a><br>\nAnna
      Sherman on Instagram — <a href=\"https://www.instagram.com/annasherman100816/\"
      rel=\"nofollow\">https://www.instagram.com/annasherman100816/</a><br>\nAnna
      Sherman Email — <a href=\"mailto:anna@myzillion.com\" rel=\"nofollow\">anna@myzillion.com</a><br>\nCraig
      Lyons Email — <a href=\"mailto:craig@myzillion.com\" rel=\"nofollow\">craig@myzillion.com</a><br>\nZillion
      — <a href=\"https://www.myzillion.com/\" rel=\"nofollow\">https://www.myzillion.com/</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBrett
      Wise — <a href=\"https://twitter.com/brettwise\" rel=\"nofollow\">https://twitter.com/brettwise</a><br>\nGig
      City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nNervesConf
      — <a href=\"https://www.nervesconf.com/\" rel=\"nofollow\">https://www.nervesconf.com/</a><br>\nChili’s
      — <a href=\"https://www.chilis.com/\" rel=\"nofollow\">https://www.chilis.com/</a><br>\nGodTube
      — <a href=\"https://www.godtube.com/\" rel=\"nofollow\">https://www.godtube.com/</a><br>\nMagic:
      The Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nScryfall
      — <a href=\"https://scryfall.com/\" rel=\"nofollow\">https://scryfall.com/</a><br>\nCode
      BEAM SF Talk — <a href=\"https://www.youtube.com/watch?v=XgOJQAK6iHI\" rel=\"nofollow\">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>\nEvernote
      — <a href=\"https://evernote.com/\" rel=\"nofollow\">https://evernote.com/</a><br>\nNerves
      — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\n‘Repository
      and Services Pattern in a Multilayered architecture’ — <a href=\"https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\"
      rel=\"nofollow\">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>\nA
      Handful of Stars — <a href=\"https://boardgamegeek.com/boardgame/197320/handful-stars\"
      rel=\"nofollow\">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>\nA
      Few Acres Of Snow — <a href=\"https://boardgamegeek.com/boardgame/79828/few-acres-snow\"
      rel=\"nofollow\">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special
      Guest: Anna Sherman.</p>\n      "
  contentEncoded: "\n        <p>Even with the most programming experience in the world,
    coding still involves a lot of trial and error. People getting started in the
    industry should not become bogged down by failure. Because in the end, it’s a
    feature and not a bug. That’s one of Zillion developer Anna Sherman’s key messages
    this episode. We open our discussion with Anna by talking about living in Chattanooga,
    AKA, Gig City. She talks about why the tech scene there is exploding before diving
    into her journey into programming. Having created her own personal coding boot
    camp, she opens up about what she did to land her first software job within only
    two months of looking. After discussing her early working experiences, we explore
    her work at Zillion, along with her side projects. We then touch on what Anna
    does to expand her skillset and develop herself as a professional, using a style
    guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch
    for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture
    and design, as well as the importance of domain-driven design in keeping your
    team aligned with what they’re building. Near the end of the episode, we talk
    about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why
    failure is an important part of coding. Tune in to hear more of Anna’s insights
    on change, failure, and living in Gig City.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Fast
    internet and the great outdoors; hear why Chattanooga has become a tech hub.</li>\n<li>Anna
    shares her love of math and how she got into programming.</li>\n<li>Creating your
    own boot camp and becoming a self-taught coder.</li>\n<li>How Anna landed her
    first gig, just two months after learning code.</li>\n<li>Exploring Anna’s first
    job at Sovee, a machine translation company.</li>\n<li>What side projects Anna
    is working on and how they help her Magic: The Gathering games.</li>\n<li>How
    Anna expands her skill set and develops herself as a professional.</li>\n<li>Hear
    Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.</li>\n<li>What
    architecture, design, and domain-driven design mean to Anna. </li>\n<li>Using
    a style guide and ‘lunch and learns’ to help your team understand patterns.</li>\n<li>Details
    on how Anna’s style guide keeps her team informed. </li>\n<li>The virtues of being
    a ‘physlistcler;’ anchoring your workflow to a physical list. </li>\n<li>Why failure
    is a key part of coding and the idea that anyone can learn to code.</li>\n<li>We
    close the episode by chatting about Anna’s favorite board games. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAnna Sherman on LinkedIn — <a
    href=\"https://www.linkedin.com/in/anna-sherman-54289372/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>\nAnna
    Sherman on Twitter — <a href=\"https://twitter.com/cavewoman90\" rel=\"nofollow\">https://twitter.com/cavewoman90</a><br>\nAnna
    Sherman on Instagram — <a href=\"https://www.instagram.com/annasherman100816/\"
    rel=\"nofollow\">https://www.instagram.com/annasherman100816/</a><br>\nAnna Sherman
    Email — <a href=\"mailto:anna@myzillion.com\" rel=\"nofollow\">anna@myzillion.com</a><br>\nCraig
    Lyons Email — <a href=\"mailto:craig@myzillion.com\" rel=\"nofollow\">craig@myzillion.com</a><br>\nZillion
    — <a href=\"https://www.myzillion.com/\" rel=\"nofollow\">https://www.myzillion.com/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBrett
    Wise — <a href=\"https://twitter.com/brettwise\" rel=\"nofollow\">https://twitter.com/brettwise</a><br>\nGig
    City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nNervesConf
    — <a href=\"https://www.nervesconf.com/\" rel=\"nofollow\">https://www.nervesconf.com/</a><br>\nChili’s
    — <a href=\"https://www.chilis.com/\" rel=\"nofollow\">https://www.chilis.com/</a><br>\nGodTube
    — <a href=\"https://www.godtube.com/\" rel=\"nofollow\">https://www.godtube.com/</a><br>\nMagic:
    The Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nScryfall
    — <a href=\"https://scryfall.com/\" rel=\"nofollow\">https://scryfall.com/</a><br>\nCode
    BEAM SF Talk — <a href=\"https://www.youtube.com/watch?v=XgOJQAK6iHI\" rel=\"nofollow\">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>\nEvernote
    — <a href=\"https://evernote.com/\" rel=\"nofollow\">https://evernote.com/</a><br>\nNerves
    — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\n‘Repository
    and Services Pattern in a Multilayered architecture’ — <a href=\"https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\"
    rel=\"nofollow\">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>\nA
    Handful of Stars — <a href=\"https://boardgamegeek.com/boardgame/197320/handful-stars\"
    rel=\"nofollow\">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>\nA
    Few Acres Of Snow — <a href=\"https://boardgamegeek.com/boardgame/79828/few-acres-snow\"
    rel=\"nofollow\">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special
    Guest: Anna Sherman.</p>\n      "
- title: 'Devon Estes on how Architecture Is a Myth and One-file Design '
  slug: s4e20-estes
  link: https://smartlogic.io/podcast/elixir-wizards/s4e20-estes
  guid: b59ac59d-736e-4581-b0c0-e04adeb1ba91
  pubDate: Thu, 01 Oct 2020 06:00:00 -0400
  pubDateFriendly: October  1, 2020
  description: "There is no difference between architecture and design. It's all engineering
    and creating a distinction between the two is a way for someone to get paid more
    and have a different title. That hot take comes from Devon Estes, today’s guest,
    who provides a novel way of seeing design and architecture. We open the episode
    by diving straight into the topic of design, with Devon exploring how good design
    might be less important than developing the right toolset. We then talk about
    how language servers can help you effortlessly define functions, meaning that
    in some cases, it doesn’t matter where you put your code — even if it’s all in
    one file. After touching on game-changing innovations in the world of design,
    such as GTP-3, Devon shares how our design options are limited by our editors.
    Considering the impact of human error on software, we discuss the value of convention
    and rulesets. As Elixir apps or apps that use Phoenix are open-ended, Devon talks
    about his middle-ground solution to help teams overcome this challenge. Near the
    end of the episode, Devon chats about why design and architecture, as elements
    of engineering, are different levels of abstraction and not separate entities.
    Following this, he highlights how domain-driven design can be used to avoid confusion
    and bugs by ensuring that people across departments all use the same language.
    Tune in to hear more of Devon’s unique and well-pondered insights. \nKey Points
    From This Episode:\nDevon’s take on design; “Where things go doesn’t matter if
    you have a language server.” \nDefining what a language server is and its incredible
    usefulness. \nHow ‘go to definition’ functions could render much of design as
    unnecessary. \nGame-changing innovations that will change the world of design.\nFunctional
    versus object-orientated languages and the challenge of finding files.\nWhy Devon
    uses Vim and what makes it attractive to other programmers.\nHow Elixir apps can
    be a challenge due to their open-ended nature.\nCreating primary and secondary
    contexts to give Phoenix more structure. \nThe human factor; why people are often
    the cause of many coding issues.\nHear how Devon has been structuring his Absinthe
    projects.\nDevon shares details about his Absinthe testing library, Assertions.\nDevon’s
    hot take that there is no difference between architecture and design.\nThe importance
    of domain-driven design in avoiding confusion and bugs.\nWhy engineers need to
    push to ensure the same language is used across departments. \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nDevon Estes —  http://www.devonestes.com/\nDevon
    Estes on GitHub — https://github.com/devonestes\nDevon Estes on Twitter — https://twitter.com/devoncestes\nJake
    Becker on GitHub — https://github.com/JakeBecker\nGPT-3 — https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\nElixir
    Is — https://github.com/elixir-lsp/elixir-ls\nAle — https://github.com/dense-analysis/ale\nMOO
    — https://lisdude.com/moo/\nErlang code — https://erlang.org/doc/man/code.html\n‘A
    Proposal for Some New Rules for Phoenix Contexts’ — http://www.devonestes.com/a-proposal-for-context-rules\n‘A
    proposal for an Absinthe application structure’ — http://www.devonestes.com/a-proposal-for-absinthe-project-structure\nElixir
    Radar — https://elixir-radar.com/\nAssertions.Absinthe — https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\nElixirConf
    EU — https://www.elixirconf.eu/\n‘Elixir testing from beginner to expert’ — https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/
    Special Guest: Devon Estes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+K3IqkLnV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b59ac59d-736e-4581-b0c0-e04adeb1ba91.mp3
    length: '70507362'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'There''s no difference between architecture and design. It''s all engineering
      and creating a distinction between the two. Today''s guest, Devon Estes provides
      a novel way of seeing design and architecture. '
    duration: '48:36'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b59ac59d-736e-4581-b0c0-e04adeb1ba91/cover.jpg?v=1
    summary: "\n        <p>There is no difference between architecture and design.
      It&#39;s all engineering and creating a distinction between the two is a way
      for someone to get paid more and have a different title. That hot take comes
      from Devon Estes, today’s guest, who provides a novel way of seeing design and
      architecture. We open the episode by diving straight into the topic of design,
      with Devon exploring how good design might be less important than developing
      the right toolset. We then talk about how language servers can help you effortlessly
      define functions, meaning that in some cases, it doesn’t matter where you put
      your code — even if it’s all in one file. After touching on game-changing innovations
      in the world of design, such as GTP-3, Devon shares how our design options are
      limited by our editors. Considering the impact of human error on software, we
      discuss the value of convention and rulesets. As Elixir apps or apps that use
      Phoenix are open-ended, Devon talks about his middle-ground solution to help
      teams overcome this challenge. Near the end of the episode, Devon chats about
      why design and architecture, as elements of engineering, are different levels
      of abstraction and not separate entities. Following this, he highlights how
      domain-driven design can be used to avoid confusion and bugs by ensuring that
      people across departments all use the same language. Tune in to hear more of
      Devon’s unique and well-pondered insights. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Devon’s
      take on design; “Where things go doesn’t matter if you have a language server.”
      </li>\n<li>Defining what a language server is and its incredible usefulness.
      </li>\n<li>How ‘go to definition’ functions could render much of design as unnecessary.
      </li>\n<li>Game-changing innovations that will change the world of design.</li>\n<li>Functional
      versus object-orientated languages and the challenge of finding files.</li>\n<li>Why
      Devon uses Vim and what makes it attractive to other programmers.</li>\n<li>How
      Elixir apps can be a challenge due to their open-ended nature.</li>\n<li>Creating
      primary and secondary contexts to give Phoenix more structure. </li>\n<li>The
      human factor; why people are often the cause of many coding issues.</li>\n<li>Hear
      how Devon has been structuring his Absinthe projects.</li>\n<li>Devon shares
      details about his Absinthe testing library, Assertions.</li>\n<li>Devon’s hot
      take that there is no difference between architecture and design.</li>\n<li>The
      importance of domain-driven design in avoiding confusion and bugs.</li>\n<li>Why
      engineers need to push to ensure the same language is used across departments.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nDevon Estes —  <a href=\"http://www.devonestes.com/\" rel=\"nofollow\">http://www.devonestes.com/</a><br>\nDevon
      Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\nDevon
      Estes on Twitter — <a href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a><br>\nJake
      Becker on GitHub — <a href=\"https://github.com/JakeBecker\" rel=\"nofollow\">https://github.com/JakeBecker</a><br>\nGPT-3
      — <a href=\"https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\"
      rel=\"nofollow\">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>\nElixir
      Is — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAle
      — <a href=\"https://github.com/dense-analysis/ale\" rel=\"nofollow\">https://github.com/dense-analysis/ale</a><br>\nMOO
      — <a href=\"https://lisdude.com/moo/\" rel=\"nofollow\">https://lisdude.com/moo/</a><br>\nErlang
      code — <a href=\"https://erlang.org/doc/man/code.html\" rel=\"nofollow\">https://erlang.org/doc/man/code.html</a><br>\n‘A
      Proposal for Some New Rules for Phoenix Contexts’ — <a href=\"http://www.devonestes.com/a-proposal-for-context-rules\"
      rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-context-rules</a><br>\n‘A
      proposal for an Absinthe application structure’ — <a href=\"http://www.devonestes.com/a-proposal-for-absinthe-project-structure\"
      rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>\nElixir
      Radar — <a href=\"https://elixir-radar.com/\" rel=\"nofollow\">https://elixir-radar.com/</a><br>\nAssertions.Absinthe
      — <a href=\"https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\"
      rel=\"nofollow\">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>\nElixirConf
      EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\n‘Elixir
      testing from beginner to expert’ — <a href=\"https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/\"
      rel=\"nofollow\">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special
      Guest: Devon Estes.</p>\n      "
  contentEncoded: "\n        <p>There is no difference between architecture and design.
    It&#39;s all engineering and creating a distinction between the two is a way for
    someone to get paid more and have a different title. That hot take comes from
    Devon Estes, today’s guest, who provides a novel way of seeing design and architecture.
    We open the episode by diving straight into the topic of design, with Devon exploring
    how good design might be less important than developing the right toolset. We
    then talk about how language servers can help you effortlessly define functions,
    meaning that in some cases, it doesn’t matter where you put your code — even if
    it’s all in one file. After touching on game-changing innovations in the world
    of design, such as GTP-3, Devon shares how our design options are limited by our
    editors. Considering the impact of human error on software, we discuss the value
    of convention and rulesets. As Elixir apps or apps that use Phoenix are open-ended,
    Devon talks about his middle-ground solution to help teams overcome this challenge.
    Near the end of the episode, Devon chats about why design and architecture, as
    elements of engineering, are different levels of abstraction and not separate
    entities. Following this, he highlights how domain-driven design can be used to
    avoid confusion and bugs by ensuring that people across departments all use the
    same language. Tune in to hear more of Devon’s unique and well-pondered insights.
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Devon’s take on design;
    “Where things go doesn’t matter if you have a language server.” </li>\n<li>Defining
    what a language server is and its incredible usefulness. </li>\n<li>How ‘go to
    definition’ functions could render much of design as unnecessary. </li>\n<li>Game-changing
    innovations that will change the world of design.</li>\n<li>Functional versus
    object-orientated languages and the challenge of finding files.</li>\n<li>Why
    Devon uses Vim and what makes it attractive to other programmers.</li>\n<li>How
    Elixir apps can be a challenge due to their open-ended nature.</li>\n<li>Creating
    primary and secondary contexts to give Phoenix more structure. </li>\n<li>The
    human factor; why people are often the cause of many coding issues.</li>\n<li>Hear
    how Devon has been structuring his Absinthe projects.</li>\n<li>Devon shares details
    about his Absinthe testing library, Assertions.</li>\n<li>Devon’s hot take that
    there is no difference between architecture and design.</li>\n<li>The importance
    of domain-driven design in avoiding confusion and bugs.</li>\n<li>Why engineers
    need to push to ensure the same language is used across departments. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDevon Estes —  <a href=\"http://www.devonestes.com/\"
    rel=\"nofollow\">http://www.devonestes.com/</a><br>\nDevon Estes on GitHub — <a
    href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\nDevon
    Estes on Twitter — <a href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a><br>\nJake
    Becker on GitHub — <a href=\"https://github.com/JakeBecker\" rel=\"nofollow\">https://github.com/JakeBecker</a><br>\nGPT-3
    — <a href=\"https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\"
    rel=\"nofollow\">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>\nElixir
    Is — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAle
    — <a href=\"https://github.com/dense-analysis/ale\" rel=\"nofollow\">https://github.com/dense-analysis/ale</a><br>\nMOO
    — <a href=\"https://lisdude.com/moo/\" rel=\"nofollow\">https://lisdude.com/moo/</a><br>\nErlang
    code — <a href=\"https://erlang.org/doc/man/code.html\" rel=\"nofollow\">https://erlang.org/doc/man/code.html</a><br>\n‘A
    Proposal for Some New Rules for Phoenix Contexts’ — <a href=\"http://www.devonestes.com/a-proposal-for-context-rules\"
    rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-context-rules</a><br>\n‘A
    proposal for an Absinthe application structure’ — <a href=\"http://www.devonestes.com/a-proposal-for-absinthe-project-structure\"
    rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>\nElixir
    Radar — <a href=\"https://elixir-radar.com/\" rel=\"nofollow\">https://elixir-radar.com/</a><br>\nAssertions.Absinthe
    — <a href=\"https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\"
    rel=\"nofollow\">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>\nElixirConf
    EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\n‘Elixir
    testing from beginner to expert’ — <a href=\"https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/\"
    rel=\"nofollow\">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special
    Guest: Devon Estes.</p>\n      "
- title: Lizzie Paquette on Compiling, Microliths, and Macros
  slug: s4e19-paquette
  link: https://smartlogic.io/podcast/elixir-wizards/s4e19-paquette
  guid: a61dcf3a-a8e5-45c7-a648-6994628ce9ec
  pubDate: Thu, 24 Sep 2020 06:00:00 -0400
  pubDateFriendly: September 24, 2020
  description: "Imagine being hired into a rocketship startup using Elixir as its
    primary language. And all this, straight out of college. Today, we speak with
    systems software engineer, Lizzie Paquette who works at Brex, the aforementioned
    rocketship. We start our conversation by talking about how Lizzie got into coding
    relatively late in her life, partly due to an ill-fated run-in with Java. She
    shares details about her role at Brex and how the company has evolved. With a
    love of compilers, Lizzie dives into what beginners can do to get into compiling
    before chatting about her top underrated Elixir resources. Following this topic,
    Lizzie discusses her experience liberally implementing macros at Brex — something
    that ended up being detrimental when onboarding new hires. After sharing how she
    develops herself as a professional and coder, Lizzie talks about her involvement
    in Code 2040, a career accelerator and mentorship program. \nReflecting this season’s
    theme, we ask for Lizzie’s take on what architecture, design, and domain-driven
    design means to her. She then reveals her coding process and emphasizes the value
    of creating thorough design docs to avoid bugs. We explore Brex’s architecture,
    how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench
    approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s
    learned from working with Brex’s architecture. \nAfter closing our discussion
    with Lizzie, we open with another edition Pattern Matching with Todd Resudek and
    special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite
    movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights,
    along with more on microliths and macros from Lizzie Paquette.\nKey Points From
    This Episode:\nLizzie shares how she got into coding and her start in the industry.\nHear
    about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir
    community.\nHow novices should approach learning how to code compilers. \nUnderrated
    Elixir resources that Lizzie makes the most out of.\nThe double-edged sword; why
    macros are an incredible yet dangerous tool.\nHow Lizzie develops herself as a
    professional and a coder. \nBoosting inclusivity in the software industry through
    programs like Code 2040.\nLizzie’s take on what architecture, design, and domain-driven
    design mean.\nThe value of design docs in catching bugs and laying out a clear
    process. \nMicroliths, microservices, and the nitty-gritty of Brex’s architecture.
    \nExploring ‘chaos engineering’; testing your system by purposefully creating
    problems.  \nLizzie’s pain points when either using or not using umbrella apps.
    \nWhat Lizzie would do if she could rewrite Brex’s architecture from scratch.
    \nUsing Brex.result to streamline code and handle common return values. \nFor
    this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.\nSophie’s
    journey from liberal arts to learning software at a code boot camp.\nTodd asks
    Sophie about her favorite movies, music, and what Elixir projects excite her.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nLizzie
    Paquette on LinkedIn — https://www.linkedin.com/in/lizzie-paquette/\nLizzie Paquette
    on GitHub — https://github.com/lizziepaquette\nBrex — https://www.brex.com/\nEric
    Meadows Jonssön — https://twitter.com/emjii\nHaskell — https://www.haskell.org/\nColumbia
    University — https://www.columbia.edu/\nClash — https://clash-lang.org/\nFramer
    — https://www.framer.com/\nElixir Protobuf on GitHub — https://github.com/brexhq/protobuf-elixir\nTony612
    on GitHub — https://github.com/tony612\nElixir Syntax Reference — https://hexdocs.pm/elixir/syntax-reference.html\nMetaprogramming
    Elixir: Write Less Code, Get More Done (and Have Fun!) — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\nMacros
    in Elixir: Responsible Code Generation — https://www.youtube.com/watch?v=55-X7rSw8M0\nCode
    2040 — http://www.code2040.org/\nErlpack — https://github.com/discord/erlpack\nPrinciples
    of Chaos Engineering — https://principlesofchaos.org/?lang=ENcontent\nREST Fest
    2019 | Lorinda Brandon — https://vimeo.com/364373007\n‘Building a rewards platform
    from scratch’ — https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\nBrex.result
    on GitHub— https://github.com/brexhq/result\nRabbitMQ — https://www.rabbitmq.com/\nNetflix
    Chaos Monkey on GitHub — https://github.com/Netflix/chaosmonkey\nMark Erickson
    — https://brainlid.org/\nJohanna Larsson — https://blog.jola.dev/\nTodd Resudek
    — https://twitter.com/sprsmpl\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nElixir
    School — https://elixirschool.com/en/\nGitHub — https://github.com/\nFlatiron
    School — https://flatironschool.com/\nBarnard College — https://barnard.edu/\nLaw
    and Order — https://www.imdb.com/title/tt0098844/\nSpotify — https://www.spotify.com/\nCeline
    Dion — https://www.celinedion.com/\nHill Street Blues — https://www.imdb.com/title/tt0081873/\nPerry
    Mason — https://en.wikipedia.org/wiki/PerryMason\nMatlock — https://www.imdb.com/title/tt0090481/\nTelemetry
    on GitHub — https://github.com/beam-telemetry/telemetry\nPhoenix LiveView on GitHub
    — https://github.com/phoenixframework/phoenixlive_view Special Guest: Lizzie Paquette.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Y-QFzcSQ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a61dcf3a-a8e5-45c7-a648-6994628ce9ec.mp3
    length: '34861006'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Imagine being hired into a rocketship startup using Elixir as its primary
      language. Today, we speak with Lizzie Paquette, a system software engineer,
      about how she got into coding and her role at Brex.
    duration: '48:24'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a61dcf3a-a8e5-45c7-a648-6994628ce9ec/cover.jpg?v=1
    summary: "\n        <p>Imagine being hired into a rocketship startup using Elixir
      as its primary language. And all this, straight out of college. Today, we speak
      with systems software engineer, Lizzie Paquette who works at Brex, the aforementioned
      rocketship. We start our conversation by talking about how Lizzie got into coding
      relatively late in her life, partly due to an ill-fated run-in with Java. She
      shares details about her role at Brex and how the company has evolved. With
      a love of compilers, Lizzie dives into what beginners can do to get into compiling
      before chatting about her top underrated Elixir resources. Following this topic,
      Lizzie discusses her experience liberally implementing macros at Brex — something
      that ended up being detrimental when onboarding new hires. After sharing how
      she develops herself as a professional and coder, Lizzie talks about her involvement
      in Code 2040, a career accelerator and mentorship program. </p>\n\n<p>Reflecting
      this season’s theme, we ask for Lizzie’s take on what architecture, design,
      and domain-driven design means to her. She then reveals her coding process and
      emphasizes the value of creating thorough design docs to avoid bugs. We explore
      Brex’s architecture, how it makes use of microliths, and applying ‘chaos engineering’
      — a monkey-wrench approach to testing your system. We touch on umbrella apps
      and lessons that Lizzie’s learned from working with Brex’s architecture. </p>\n\n<p>After
      closing our discussion with Lizzie, we open with another edition Pattern Matching
      with Todd Resudek and special guest Sophie DeBenedetto from GitHub. Todd asks
      Sophie about her favorite movies, music, and what Elixir projects excite her.
      Tune in to hear Sophie’s insights, along with more on microliths and macros
      from Lizzie Paquette.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Lizzie
      shares how she got into coding and her start in the industry.</li>\n<li>Hear
      about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir
      community.</li>\n<li>How novices should approach learning how to code compilers.
      </li>\n<li>Underrated Elixir resources that Lizzie makes the most out of.</li>\n<li>The
      double-edged sword; why macros are an incredible yet dangerous tool.</li>\n<li>How
      Lizzie develops herself as a professional and a coder. </li>\n<li>Boosting inclusivity
      in the software industry through programs like Code 2040.</li>\n<li>Lizzie’s
      take on what architecture, design, and domain-driven design mean.</li>\n<li>The
      value of design docs in catching bugs and laying out a clear process. </li>\n<li>Microliths,
      microservices, and the nitty-gritty of Brex’s architecture. </li>\n<li>Exploring
      ‘chaos engineering’; testing your system by purposefully creating problems.<br></li>\n<li>Lizzie’s
      pain points when either using or not using umbrella apps. </li>\n<li>What Lizzie
      would do if she could rewrite Brex’s architecture from scratch. </li>\n<li><p>Using
      Brex.result to streamline code and handle common return values. </p></li>\n<li><p>For
      this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>\n<li><p>Sophie’s
      journey from liberal arts to learning software at a code boot camp.</p></li>\n<li><p>Todd
      asks Sophie about her favorite movies, music, and what Elixir projects excite
      her. </p></li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nLizzie Paquette on LinkedIn — <a href=\"https://www.linkedin.com/in/lizzie-paquette/\"
      rel=\"nofollow\">https://www.linkedin.com/in/lizzie-paquette/</a><br>\nLizzie
      Paquette on GitHub — <a href=\"https://github.com/lizziepaquette\" rel=\"nofollow\">https://github.com/lizziepaquette</a><br>\nBrex
      — <a href=\"https://www.brex.com/\" rel=\"nofollow\">https://www.brex.com/</a><br>\nEric
      Meadows Jonssön — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nColumbia
      University — <a href=\"https://www.columbia.edu/\" rel=\"nofollow\">https://www.columbia.edu/</a><br>\nClash
      — <a href=\"https://clash-lang.org/\" rel=\"nofollow\">https://clash-lang.org/</a><br>\nFramer
      — <a href=\"https://www.framer.com/\" rel=\"nofollow\">https://www.framer.com/</a><br>\nElixir
      Protobuf on GitHub — <a href=\"https://github.com/brexhq/protobuf-elixir\" rel=\"nofollow\">https://github.com/brexhq/protobuf-elixir</a><br>\nTony612
      on GitHub — <a href=\"https://github.com/tony612\" rel=\"nofollow\">https://github.com/tony612</a><br>\nElixir
      Syntax Reference — <a href=\"https://hexdocs.pm/elixir/syntax-reference.html\"
      rel=\"nofollow\">https://hexdocs.pm/elixir/syntax-reference.html</a><br>\nMetaprogramming
      Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
      rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nMacros
      in Elixir: Responsible Code Generation — <a href=\"https://www.youtube.com/watch?v=55-X7rSw8M0\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>\nCode 2040
      — <a href=\"http://www.code2040.org/\" rel=\"nofollow\">http://www.code2040.org/</a><br>\nErlpack
      — <a href=\"https://github.com/discord/erlpack\" rel=\"nofollow\">https://github.com/discord/erlpack</a><br>\nPrinciples
      of Chaos Engineering — <a href=\"https://principlesofchaos.org/?lang=ENcontent\"
      rel=\"nofollow\">https://principlesofchaos.org/?lang=ENcontent</a><br>\nREST
      Fest 2019 | Lorinda Brandon — <a href=\"https://vimeo.com/364373007\" rel=\"nofollow\">https://vimeo.com/364373007</a><br>\n‘Building
      a rewards platform from scratch’ — <a href=\"https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\"
      rel=\"nofollow\">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>\nBrex.result
      on GitHub— <a href=\"https://github.com/brexhq/result\" rel=\"nofollow\">https://github.com/brexhq/result</a><br>\nRabbitMQ
      — <a href=\"https://www.rabbitmq.com/\" rel=\"nofollow\">https://www.rabbitmq.com/</a><br>\nNetflix
      Chaos Monkey on GitHub — <a href=\"https://github.com/Netflix/chaosmonkey\"
      rel=\"nofollow\">https://github.com/Netflix/chaosmonkey</a><br>\nMark Erickson
      — <a href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a><br>\nJohanna
      Larsson — <a href=\"https://blog.jola.dev/\" rel=\"nofollow\">https://blog.jola.dev/</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nBarnard
      College — <a href=\"https://barnard.edu/\" rel=\"nofollow\">https://barnard.edu/</a><br>\nLaw
      and Order — <a href=\"https://www.imdb.com/title/tt0098844/\" rel=\"nofollow\">https://www.imdb.com/title/tt0098844/</a><br>\nSpotify
      — <a href=\"https://www.spotify.com/\" rel=\"nofollow\">https://www.spotify.com/</a><br>\nCeline
      Dion — <a href=\"https://www.celinedion.com/\" rel=\"nofollow\">https://www.celinedion.com/</a><br>\nHill
      Street Blues — <a href=\"https://www.imdb.com/title/tt0081873/\" rel=\"nofollow\">https://www.imdb.com/title/tt0081873/</a><br>\nPerry
      Mason — <a href=\"https://en.wikipedia.org/wiki/Perry_Mason\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Perry_Mason</a><br>\nMatlock
      — <a href=\"https://www.imdb.com/title/tt0090481/\" rel=\"nofollow\">https://www.imdb.com/title/tt0090481/</a><br>\nTelemetry
      on GitHub — <a href=\"https://github.com/beam-telemetry/telemetry\" rel=\"nofollow\">https://github.com/beam-telemetry/telemetry</a><br>\nPhoenix
      LiveView on GitHub — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special
      Guest: Lizzie Paquette.</p>\n      "
  contentEncoded: "\n        <p>Imagine being hired into a rocketship startup using
    Elixir as its primary language. And all this, straight out of college. Today,
    we speak with systems software engineer, Lizzie Paquette who works at Brex, the
    aforementioned rocketship. We start our conversation by talking about how Lizzie
    got into coding relatively late in her life, partly due to an ill-fated run-in
    with Java. She shares details about her role at Brex and how the company has evolved.
    With a love of compilers, Lizzie dives into what beginners can do to get into
    compiling before chatting about her top underrated Elixir resources. Following
    this topic, Lizzie discusses her experience liberally implementing macros at Brex
    — something that ended up being detrimental when onboarding new hires. After sharing
    how she develops herself as a professional and coder, Lizzie talks about her involvement
    in Code 2040, a career accelerator and mentorship program. </p>\n\n<p>Reflecting
    this season’s theme, we ask for Lizzie’s take on what architecture, design, and
    domain-driven design means to her. She then reveals her coding process and emphasizes
    the value of creating thorough design docs to avoid bugs. We explore Brex’s architecture,
    how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench
    approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s
    learned from working with Brex’s architecture. </p>\n\n<p>After closing our discussion
    with Lizzie, we open with another edition Pattern Matching with Todd Resudek and
    special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite
    movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights,
    along with more on microliths and macros from Lizzie Paquette.</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Lizzie shares how she got into coding and
    her start in the industry.</li>\n<li>Hear about Lizzie’s role at Brex, a rocketship
    startup and key member of the Elixir community.</li>\n<li>How novices should approach
    learning how to code compilers. </li>\n<li>Underrated Elixir resources that Lizzie
    makes the most out of.</li>\n<li>The double-edged sword; why macros are an incredible
    yet dangerous tool.</li>\n<li>How Lizzie develops herself as a professional and
    a coder. </li>\n<li>Boosting inclusivity in the software industry through programs
    like Code 2040.</li>\n<li>Lizzie’s take on what architecture, design, and domain-driven
    design mean.</li>\n<li>The value of design docs in catching bugs and laying out
    a clear process. </li>\n<li>Microliths, microservices, and the nitty-gritty of
    Brex’s architecture. </li>\n<li>Exploring ‘chaos engineering’; testing your system
    by purposefully creating problems.<br></li>\n<li>Lizzie’s pain points when either
    using or not using umbrella apps. </li>\n<li>What Lizzie would do if she could
    rewrite Brex’s architecture from scratch. </li>\n<li><p>Using Brex.result to streamline
    code and handle common return values. </p></li>\n<li><p>For this edition of Pattern
    Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>\n<li><p>Sophie’s
    journey from liberal arts to learning software at a code boot camp.</p></li>\n<li><p>Todd
    asks Sophie about her favorite movies, music, and what Elixir projects excite
    her. </p></li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nLizzie Paquette on LinkedIn — <a href=\"https://www.linkedin.com/in/lizzie-paquette/\"
    rel=\"nofollow\">https://www.linkedin.com/in/lizzie-paquette/</a><br>\nLizzie
    Paquette on GitHub — <a href=\"https://github.com/lizziepaquette\" rel=\"nofollow\">https://github.com/lizziepaquette</a><br>\nBrex
    — <a href=\"https://www.brex.com/\" rel=\"nofollow\">https://www.brex.com/</a><br>\nEric
    Meadows Jonssön — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nColumbia
    University — <a href=\"https://www.columbia.edu/\" rel=\"nofollow\">https://www.columbia.edu/</a><br>\nClash
    — <a href=\"https://clash-lang.org/\" rel=\"nofollow\">https://clash-lang.org/</a><br>\nFramer
    — <a href=\"https://www.framer.com/\" rel=\"nofollow\">https://www.framer.com/</a><br>\nElixir
    Protobuf on GitHub — <a href=\"https://github.com/brexhq/protobuf-elixir\" rel=\"nofollow\">https://github.com/brexhq/protobuf-elixir</a><br>\nTony612
    on GitHub — <a href=\"https://github.com/tony612\" rel=\"nofollow\">https://github.com/tony612</a><br>\nElixir
    Syntax Reference — <a href=\"https://hexdocs.pm/elixir/syntax-reference.html\"
    rel=\"nofollow\">https://hexdocs.pm/elixir/syntax-reference.html</a><br>\nMetaprogramming
    Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
    rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nMacros
    in Elixir: Responsible Code Generation — <a href=\"https://www.youtube.com/watch?v=55-X7rSw8M0\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>\nCode 2040
    — <a href=\"http://www.code2040.org/\" rel=\"nofollow\">http://www.code2040.org/</a><br>\nErlpack
    — <a href=\"https://github.com/discord/erlpack\" rel=\"nofollow\">https://github.com/discord/erlpack</a><br>\nPrinciples
    of Chaos Engineering — <a href=\"https://principlesofchaos.org/?lang=ENcontent\"
    rel=\"nofollow\">https://principlesofchaos.org/?lang=ENcontent</a><br>\nREST Fest
    2019 | Lorinda Brandon — <a href=\"https://vimeo.com/364373007\" rel=\"nofollow\">https://vimeo.com/364373007</a><br>\n‘Building
    a rewards platform from scratch’ — <a href=\"https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\"
    rel=\"nofollow\">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>\nBrex.result
    on GitHub— <a href=\"https://github.com/brexhq/result\" rel=\"nofollow\">https://github.com/brexhq/result</a><br>\nRabbitMQ
    — <a href=\"https://www.rabbitmq.com/\" rel=\"nofollow\">https://www.rabbitmq.com/</a><br>\nNetflix
    Chaos Monkey on GitHub — <a href=\"https://github.com/Netflix/chaosmonkey\" rel=\"nofollow\">https://github.com/Netflix/chaosmonkey</a><br>\nMark
    Erickson — <a href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a><br>\nJohanna
    Larsson — <a href=\"https://blog.jola.dev/\" rel=\"nofollow\">https://blog.jola.dev/</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nBarnard
    College — <a href=\"https://barnard.edu/\" rel=\"nofollow\">https://barnard.edu/</a><br>\nLaw
    and Order — <a href=\"https://www.imdb.com/title/tt0098844/\" rel=\"nofollow\">https://www.imdb.com/title/tt0098844/</a><br>\nSpotify
    — <a href=\"https://www.spotify.com/\" rel=\"nofollow\">https://www.spotify.com/</a><br>\nCeline
    Dion — <a href=\"https://www.celinedion.com/\" rel=\"nofollow\">https://www.celinedion.com/</a><br>\nHill
    Street Blues — <a href=\"https://www.imdb.com/title/tt0081873/\" rel=\"nofollow\">https://www.imdb.com/title/tt0081873/</a><br>\nPerry
    Mason — <a href=\"https://en.wikipedia.org/wiki/Perry_Mason\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Perry_Mason</a><br>\nMatlock
    — <a href=\"https://www.imdb.com/title/tt0090481/\" rel=\"nofollow\">https://www.imdb.com/title/tt0090481/</a><br>\nTelemetry
    on GitHub — <a href=\"https://github.com/beam-telemetry/telemetry\" rel=\"nofollow\">https://github.com/beam-telemetry/telemetry</a><br>\nPhoenix
    LiveView on GitHub — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special
    Guest: Lizzie Paquette.</p>\n      "
- title: 'Eric Steen on Neuroevolution in AI '
  slug: s4e18-steen
  link: https://smartlogic.io/podcast/elixir-wizards/s4e18-steen
  guid: 7070efa5-519a-4d9b-ac5a-75cfc1882a31
  pubDate: Thu, 17 Sep 2020 06:00:00 -0400
  pubDateFriendly: September 17, 2020
  description: "Building a sophisticated AI that can evolve to fit our vast and diverse
    needs is a Herculean challenge. Today we speak with senior engineer Eric Steen
    about Automata, his experimental Elixir project that uses neuroevolution and cutting
    edge theory to create a multi-agent behavior tree — or really good AI in the common
    tongue. But before we tap into that rich topic, we talk with Eric about tech burnout,
    his background, and why Elixir is an excellent language for writing modern software.
    He then unpacks AI concepts like the need to develop backpropagation in your system,
    and the value of “neural diversity,” and Markov decision processes. \nAfter Eric
    gives his take on architecture versus design and the place of domain-driven design,
    we discuss Automata. A key breakthrough, Eric shares his enthusiasm for ‘novelty
    search,’ where machines learn from a variety of new behaviors and searches, as
    opposed to completing one task at a time. We touch on Automata’s progress, Eric’s
    long-term approach, and what his project might be used for. Near the end of our
    interview, we chat about CryptoWise, a collaborative analysis platform for cryptocurrency.
    \nTodd Resudek then opens with another edition of Pattern Matching, where he interviews
    Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
    and music that he enjoys, and the projects that excite him. Tune in to hear more
    about both Michał and neuroevolution in AI.\nKey Points From This Episode:\nExperiencing
    tech burnout and challenges around algorithms rendering you redundant.\nHear about
    Eric’s programming background and shifts in the industry. \nBackpropagation and
    using Elixir to build a neural evolutionary system.\nHow Markov decision processes
    help systems choose between possible actions. \nEric’s take on architecture versus
    design and the place of domain-driven design.\nExploring Automata — Eric’s ambitious
    multi-agent behavior tree.\nThe importance of neurodiversity when building AIs;
    they need to adapt to many needs. \nNovelty search; why learn through one task
    when you can learn through a variety of tasks at the same time?\nAutomata’s practical
    applications and why Eric sees it as a long-term project.\nEric shares a progress
    report on his work and using design processes like Sprint. \nWhat Eric would like
    people to use Automata for. \nA sense that Elixir is gaining in popularity within
    Silicon Valley.\nEric gives an elevator-pitch for CryptoWise, a collaborative
    analysis platform for cryptocurrency.\nTodd Resudek interviews Michał Muskała
    on another edition of Pattern Matching.\nMichał shares his background and his
    move from Poland to London. \nMovies and music that Michał enjoys, and details
    on projects that excite him.\nDifferences between Erlang and Elixir and why both
    communities would benefit from working together.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nEric Steen on LinkedIn — https://www.linkedin.com/in/ericsteen1/\nEric
    Steen — https://twitter.com/thesteener\nWebflow — https://webflow.com/\nAutomata
    GitHub — https://github.com/upstarter/automata\nAutomata on Slack — https://join.slack.com/t/automata-project/sharedinvite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\nCryptoWise
    — https://www.cryptowise.ai/\nHippo Insurance — https://www.hippo.com/\nCarl Hewitt
    — https://en.wikipedia.org/wiki/CarlHewitt\nStanford University — https://www.stanford.edu/\nMIT
    — https://web.mit.edu/\nActor Model — https://en.wikipedia.org/wiki/Actormodel\nMarvin
    Minsky — http://web.media.mit.edu/~minsky/\nTensorflex on GitHub— https://github.com/anshuman23/tensorflex\nMatrex
    on GitHub — https://github.com/versilov/matrex \nHandbook of Neuroevolution Through
    Erlang — \nhttps://www.springer.com/gp/book/9781461444626\nMarkov Decision Process
    — https://en.wikipedia.org/wiki/Markovdecisionprocess\nAmazon Web Services — https://aws.amazon.com/\nThe
    Little Elixir & OTP Guidebook — https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\nElon
    Musk — https://www.forbes.com/profile/elon-musk/\nWelcome to the Era of Deep Neuroevolution
    — https://eng.uber.com/deep-neuroevolution/\nKenneth O. Stanley — https://www.cs.ucf.edu/~kstanley/\nWhy
    Greatness Cannot Be Planned: The Myth of the Objective — https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\nUniversity
    of Florida — https://www.ufl.edu/\nUber Air — https://www.uber.com/us/es/elevate/\nJeff
    Bezos — https://www.forbes.com/profile/jeff-bezos/\nSprint — https://www.thesprintbook.com/
    \nAdobe — https://www.adobe.com/\nHorde — https://www.horde.org/development/\nLibcluster
    on GitHub — https://github.com/dsteinberg/libcluster\nSwift for Tensorflow — https://www.tensorflow.org/swift\nTriplebyte
    Blog — https://triplebyte.com/blog\nEquiTrader — https://coinmarketcap.com/currencies/equitrader/
    \nBloXroute Labs — https://bloxroute.com/\nHolochain — https://holochain.org/\nMichał
    Muskała on GitHub — https://github.com/michalmuskala\nJason on GitHub — https://github.com/michalmuskala/jason\nTodd
    Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek/\nWhatsapp — https://www.whatsapp.com/\nCERN
    — https://home.cern/\nRalph Kaminski — https://ralphkaminski.com/\nJayme Edwards
    — https://jaymeedwards.com/ Special Guest: Eric Steen.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XcIINcx4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7070efa5-519a-4d9b-ac5a-75cfc1882a31.mp3
    length: '71308642'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Today we speak with Eric Steen about Automata, his Elixir project that
      uses neuroevolution and cutting edge theory to create a multi-agent behavior
      tree — otherwise known as really good AI.
    duration: '49:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7070efa5-519a-4d9b-ac5a-75cfc1882a31/cover.jpg?v=1
    summary: "\n        <p>Building a sophisticated AI that can evolve to fit our
      vast and diverse needs is a Herculean challenge. Today we speak with senior
      engineer Eric Steen about Automata, his experimental Elixir project that uses
      neuroevolution and cutting edge theory to create a multi-agent behavior tree
      — or really good AI in the common tongue. But before we tap into that rich topic,
      we talk with Eric about tech burnout, his background, and why Elixir is an excellent
      language for writing modern software. He then unpacks AI concepts like the need
      to develop backpropagation in your system, and the value of “neural diversity,”
      and Markov decision processes. </p>\n\n<p>After Eric gives his take on architecture
      versus design and the place of domain-driven design, we discuss Automata. A
      key breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines
      learn from a variety of new behaviors and searches, as opposed to completing
      one task at a time. We touch on Automata’s progress, Eric’s long-term approach,
      and what his project might be used for. Near the end of our interview, we chat
      about CryptoWise, a collaborative analysis platform for cryptocurrency. </p>\n\n<p>Todd
      Resudek then opens with another edition of Pattern Matching, where he interviews
      Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
      and music that he enjoys, and the projects that excite him. Tune in to hear
      more about both Michał and neuroevolution in AI.</p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>Experiencing tech burnout and challenges around algorithms
      rendering you redundant.</li>\n<li>Hear about Eric’s programming background
      and shifts in the industry. </li>\n<li>Backpropagation and using Elixir to build
      a neural evolutionary system.</li>\n<li>How Markov decision processes help systems
      choose between possible actions. </li>\n<li>Eric’s take on architecture versus
      design and the place of domain-driven design.</li>\n<li>Exploring Automata —
      Eric’s ambitious multi-agent behavior tree.</li>\n<li>The importance of neurodiversity
      when building AIs; they need to adapt to many needs. </li>\n<li>Novelty search;
      why learn through one task when you can learn through a variety of tasks at
      the same time?</li>\n<li>Automata’s practical applications and why Eric sees
      it as a long-term project.</li>\n<li>Eric shares a progress report on his work
      and using design processes like Sprint. </li>\n<li>What Eric would like people
      to use Automata for. </li>\n<li>A sense that Elixir is gaining in popularity
      within Silicon Valley.</li>\n<li>Eric gives an elevator-pitch for CryptoWise,
      a collaborative analysis platform for cryptocurrency.</li>\n<li>Todd Resudek
      interviews Michał Muskała on another edition of Pattern Matching.</li>\n<li>Michał
      shares his background and his move from Poland to London. </li>\n<li>Movies
      and music that Michał enjoys, and details on projects that excite him.</li>\n<li>Differences
      between Erlang and Elixir and why both communities would benefit from working
      together.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nEric Steen on LinkedIn — <a href=\"https://www.linkedin.com/in/ericsteen1/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ericsteen1/</a><br>\nEric Steen
      — <a href=\"https://twitter.com/the_steener\" rel=\"nofollow\">https://twitter.com/the_steener</a><br>\nWebflow
      — <a href=\"https://webflow.com/\" rel=\"nofollow\">https://webflow.com/</a><br>\nAutomata
      GitHub — <a href=\"https://github.com/upstarter/automata\" rel=\"nofollow\">https://github.com/upstarter/automata</a><br>\nAutomata
      on Slack — <a href=\"https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\"
      rel=\"nofollow\">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>\nCryptoWise
      — <a href=\"https://www.cryptowise.ai/\" rel=\"nofollow\">https://www.cryptowise.ai/</a><br>\nHippo
      Insurance — <a href=\"https://www.hippo.com/\" rel=\"nofollow\">https://www.hippo.com/</a><br>\nCarl
      Hewitt — <a href=\"https://en.wikipedia.org/wiki/Carl_Hewitt\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>\nStanford
      University — <a href=\"https://www.stanford.edu/\" rel=\"nofollow\">https://www.stanford.edu/</a><br>\nMIT
      — <a href=\"https://web.mit.edu/\" rel=\"nofollow\">https://web.mit.edu/</a><br>\nActor
      Model — <a href=\"https://en.wikipedia.org/wiki/Actor_model\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Actor_model</a><br>\nMarvin
      Minsky — <a href=\"http://web.media.mit.edu/%7Eminsky/\" rel=\"nofollow\">http://web.media.mit.edu/~minsky/</a><br>\nTensorflex
      on GitHub— <a href=\"https://github.com/anshuman23/tensorflex\" rel=\"nofollow\">https://github.com/anshuman23/tensorflex</a><br>\nMatrex
      on GitHub — <a href=\"https://github.com/versilov/matrex\" rel=\"nofollow\">https://github.com/versilov/matrex</a>
      <br>\nHandbook of Neuroevolution Through Erlang — <br>\n<a href=\"https://www.springer.com/gp/book/9781461444626\"
      rel=\"nofollow\">https://www.springer.com/gp/book/9781461444626</a><br>\nMarkov
      Decision Process — <a href=\"https://en.wikipedia.org/wiki/Markov_decision_process\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>\nAmazon
      Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nThe
      Little Elixir &amp; OTP Guidebook — <a href=\"https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\"
      rel=\"nofollow\">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nWelcome
      to the Era of Deep Neuroevolution — <a href=\"https://eng.uber.com/deep-neuroevolution/\"
      rel=\"nofollow\">https://eng.uber.com/deep-neuroevolution/</a><br>\nKenneth
      O. Stanley — <a href=\"https://www.cs.ucf.edu/%7Ekstanley/\" rel=\"nofollow\">https://www.cs.ucf.edu/~kstanley/</a><br>\nWhy
      Greatness Cannot Be Planned: The Myth of the Objective — <a href=\"https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\"
      rel=\"nofollow\">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>\nUniversity
      of Florida — <a href=\"https://www.ufl.edu/\" rel=\"nofollow\">https://www.ufl.edu/</a><br>\nUber
      Air — <a href=\"https://www.uber.com/us/es/elevate/\" rel=\"nofollow\">https://www.uber.com/us/es/elevate/</a><br>\nJeff
      Bezos — <a href=\"https://www.forbes.com/profile/jeff-bezos/\" rel=\"nofollow\">https://www.forbes.com/profile/jeff-bezos/</a><br>\nSprint
      — <a href=\"https://www.thesprintbook.com/\" rel=\"nofollow\">https://www.thesprintbook.com/</a>
      <br>\nAdobe — <a href=\"https://www.adobe.com/\" rel=\"nofollow\">https://www.adobe.com/</a><br>\nHorde
      — <a href=\"https://www.horde.org/development/\" rel=\"nofollow\">https://www.horde.org/development/</a><br>\nLibcluster
      on GitHub — <a href=\"https://github.com/dsteinberg/libcluster\" rel=\"nofollow\">https://github.com/dsteinberg/libcluster</a><br>\nSwift
      for Tensorflow — <a href=\"https://www.tensorflow.org/swift\" rel=\"nofollow\">https://www.tensorflow.org/swift</a><br>\nTriplebyte
      Blog — <a href=\"https://triplebyte.com/blog\" rel=\"nofollow\">https://triplebyte.com/blog</a><br>\nEquiTrader
      — <a href=\"https://coinmarketcap.com/currencies/equitrader/\" rel=\"nofollow\">https://coinmarketcap.com/currencies/equitrader/</a>
      <br>\nBloXroute Labs — <a href=\"https://bloxroute.com/\" rel=\"nofollow\">https://bloxroute.com/</a><br>\nHolochain
      — <a href=\"https://holochain.org/\" rel=\"nofollow\">https://holochain.org/</a><br>\nMichał
      Muskała on GitHub — <a href=\"https://github.com/michalmuskala\" rel=\"nofollow\">https://github.com/michalmuskala</a><br>\nJason
      on GitHub — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a><br>\nTodd
      Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWhatsapp
      — <a href=\"https://www.whatsapp.com/\" rel=\"nofollow\">https://www.whatsapp.com/</a><br>\nCERN
      — <a href=\"https://home.cern/\" rel=\"nofollow\">https://home.cern/</a><br>\nRalph
      Kaminski — <a href=\"https://ralphkaminski.com/\" rel=\"nofollow\">https://ralphkaminski.com/</a><br>\nJayme
      Edwards — <a href=\"https://jaymeedwards.com/\" rel=\"nofollow\">https://jaymeedwards.com/</a></p><p>Special
      Guest: Eric Steen.</p>\n      "
  contentEncoded: "\n        <p>Building a sophisticated AI that can evolve to fit
    our vast and diverse needs is a Herculean challenge. Today we speak with senior
    engineer Eric Steen about Automata, his experimental Elixir project that uses
    neuroevolution and cutting edge theory to create a multi-agent behavior tree —
    or really good AI in the common tongue. But before we tap into that rich topic,
    we talk with Eric about tech burnout, his background, and why Elixir is an excellent
    language for writing modern software. He then unpacks AI concepts like the need
    to develop backpropagation in your system, and the value of “neural diversity,”
    and Markov decision processes. </p>\n\n<p>After Eric gives his take on architecture
    versus design and the place of domain-driven design, we discuss Automata. A key
    breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines
    learn from a variety of new behaviors and searches, as opposed to completing one
    task at a time. We touch on Automata’s progress, Eric’s long-term approach, and
    what his project might be used for. Near the end of our interview, we chat about
    CryptoWise, a collaborative analysis platform for cryptocurrency. </p>\n\n<p>Todd
    Resudek then opens with another edition of Pattern Matching, where he interviews
    Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
    and music that he enjoys, and the projects that excite him. Tune in to hear more
    about both Michał and neuroevolution in AI.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Experiencing
    tech burnout and challenges around algorithms rendering you redundant.</li>\n<li>Hear
    about Eric’s programming background and shifts in the industry. </li>\n<li>Backpropagation
    and using Elixir to build a neural evolutionary system.</li>\n<li>How Markov decision
    processes help systems choose between possible actions. </li>\n<li>Eric’s take
    on architecture versus design and the place of domain-driven design.</li>\n<li>Exploring
    Automata — Eric’s ambitious multi-agent behavior tree.</li>\n<li>The importance
    of neurodiversity when building AIs; they need to adapt to many needs. </li>\n<li>Novelty
    search; why learn through one task when you can learn through a variety of tasks
    at the same time?</li>\n<li>Automata’s practical applications and why Eric sees
    it as a long-term project.</li>\n<li>Eric shares a progress report on his work
    and using design processes like Sprint. </li>\n<li>What Eric would like people
    to use Automata for. </li>\n<li>A sense that Elixir is gaining in popularity within
    Silicon Valley.</li>\n<li>Eric gives an elevator-pitch for CryptoWise, a collaborative
    analysis platform for cryptocurrency.</li>\n<li>Todd Resudek interviews Michał
    Muskała on another edition of Pattern Matching.</li>\n<li>Michał shares his background
    and his move from Poland to London. </li>\n<li>Movies and music that Michał enjoys,
    and details on projects that excite him.</li>\n<li>Differences between Erlang
    and Elixir and why both communities would benefit from working together.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Steen on LinkedIn — <a
    href=\"https://www.linkedin.com/in/ericsteen1/\" rel=\"nofollow\">https://www.linkedin.com/in/ericsteen1/</a><br>\nEric
    Steen — <a href=\"https://twitter.com/the_steener\" rel=\"nofollow\">https://twitter.com/the_steener</a><br>\nWebflow
    — <a href=\"https://webflow.com/\" rel=\"nofollow\">https://webflow.com/</a><br>\nAutomata
    GitHub — <a href=\"https://github.com/upstarter/automata\" rel=\"nofollow\">https://github.com/upstarter/automata</a><br>\nAutomata
    on Slack — <a href=\"https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\"
    rel=\"nofollow\">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>\nCryptoWise
    — <a href=\"https://www.cryptowise.ai/\" rel=\"nofollow\">https://www.cryptowise.ai/</a><br>\nHippo
    Insurance — <a href=\"https://www.hippo.com/\" rel=\"nofollow\">https://www.hippo.com/</a><br>\nCarl
    Hewitt — <a href=\"https://en.wikipedia.org/wiki/Carl_Hewitt\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>\nStanford
    University — <a href=\"https://www.stanford.edu/\" rel=\"nofollow\">https://www.stanford.edu/</a><br>\nMIT
    — <a href=\"https://web.mit.edu/\" rel=\"nofollow\">https://web.mit.edu/</a><br>\nActor
    Model — <a href=\"https://en.wikipedia.org/wiki/Actor_model\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Actor_model</a><br>\nMarvin
    Minsky — <a href=\"http://web.media.mit.edu/%7Eminsky/\" rel=\"nofollow\">http://web.media.mit.edu/~minsky/</a><br>\nTensorflex
    on GitHub— <a href=\"https://github.com/anshuman23/tensorflex\" rel=\"nofollow\">https://github.com/anshuman23/tensorflex</a><br>\nMatrex
    on GitHub — <a href=\"https://github.com/versilov/matrex\" rel=\"nofollow\">https://github.com/versilov/matrex</a>
    <br>\nHandbook of Neuroevolution Through Erlang — <br>\n<a href=\"https://www.springer.com/gp/book/9781461444626\"
    rel=\"nofollow\">https://www.springer.com/gp/book/9781461444626</a><br>\nMarkov
    Decision Process — <a href=\"https://en.wikipedia.org/wiki/Markov_decision_process\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>\nAmazon
    Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nThe
    Little Elixir &amp; OTP Guidebook — <a href=\"https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\"
    rel=\"nofollow\">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nWelcome
    to the Era of Deep Neuroevolution — <a href=\"https://eng.uber.com/deep-neuroevolution/\"
    rel=\"nofollow\">https://eng.uber.com/deep-neuroevolution/</a><br>\nKenneth O.
    Stanley — <a href=\"https://www.cs.ucf.edu/%7Ekstanley/\" rel=\"nofollow\">https://www.cs.ucf.edu/~kstanley/</a><br>\nWhy
    Greatness Cannot Be Planned: The Myth of the Objective — <a href=\"https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\"
    rel=\"nofollow\">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>\nUniversity
    of Florida — <a href=\"https://www.ufl.edu/\" rel=\"nofollow\">https://www.ufl.edu/</a><br>\nUber
    Air — <a href=\"https://www.uber.com/us/es/elevate/\" rel=\"nofollow\">https://www.uber.com/us/es/elevate/</a><br>\nJeff
    Bezos — <a href=\"https://www.forbes.com/profile/jeff-bezos/\" rel=\"nofollow\">https://www.forbes.com/profile/jeff-bezos/</a><br>\nSprint
    — <a href=\"https://www.thesprintbook.com/\" rel=\"nofollow\">https://www.thesprintbook.com/</a>
    <br>\nAdobe — <a href=\"https://www.adobe.com/\" rel=\"nofollow\">https://www.adobe.com/</a><br>\nHorde
    — <a href=\"https://www.horde.org/development/\" rel=\"nofollow\">https://www.horde.org/development/</a><br>\nLibcluster
    on GitHub — <a href=\"https://github.com/dsteinberg/libcluster\" rel=\"nofollow\">https://github.com/dsteinberg/libcluster</a><br>\nSwift
    for Tensorflow — <a href=\"https://www.tensorflow.org/swift\" rel=\"nofollow\">https://www.tensorflow.org/swift</a><br>\nTriplebyte
    Blog — <a href=\"https://triplebyte.com/blog\" rel=\"nofollow\">https://triplebyte.com/blog</a><br>\nEquiTrader
    — <a href=\"https://coinmarketcap.com/currencies/equitrader/\" rel=\"nofollow\">https://coinmarketcap.com/currencies/equitrader/</a>
    <br>\nBloXroute Labs — <a href=\"https://bloxroute.com/\" rel=\"nofollow\">https://bloxroute.com/</a><br>\nHolochain
    — <a href=\"https://holochain.org/\" rel=\"nofollow\">https://holochain.org/</a><br>\nMichał
    Muskała on GitHub — <a href=\"https://github.com/michalmuskala\" rel=\"nofollow\">https://github.com/michalmuskala</a><br>\nJason
    on GitHub — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a><br>\nTodd
    Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWhatsapp
    — <a href=\"https://www.whatsapp.com/\" rel=\"nofollow\">https://www.whatsapp.com/</a><br>\nCERN
    — <a href=\"https://home.cern/\" rel=\"nofollow\">https://home.cern/</a><br>\nRalph
    Kaminski — <a href=\"https://ralphkaminski.com/\" rel=\"nofollow\">https://ralphkaminski.com/</a><br>\nJayme
    Edwards — <a href=\"https://jaymeedwards.com/\" rel=\"nofollow\">https://jaymeedwards.com/</a></p><p>Special
    Guest: Eric Steen.</p>\n      "
- title: Miki Rezentes on how it's APIs All the Way Down
  slug: s4e16-rezentes
  link: https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes
  guid: 441f7029-d8ab-4494-aa7b-cfb08e4ade23
  pubDate: Tue, 01 Sep 2020 06:00:00 -0400
  pubDateFriendly: September  1, 2020
  description: "According to an ancient myth, the world rests on the back of a turtle.
    And what does that turtle stand on? Another turtle. It turns out that it’s turtles
    all the way down. Miki Rezentes, today’s guest, believes that all software rests
    on the back of APIs. Similar to the myth, it’s APIs all the way down. We open
    our conversation by discussing how homeschooling her children did more to prepare
    Miki for a software career than anything else she’s encountered. Miki shares highlights
    from her talk, ‘APIs All the Way Down’. This set up this episode’s key theme,
    that the tech industry is too concerned with how its software interacts to focus
    on how the people in its organizations communicate — their ‘human APIs.’ Following
    this, we ask Miki how she learns people’s APIs and we talk about the benefits
    of observation and mirroring. Tracking her career, we touch on how Miki transitioned
    from a homemaker to a developer before diving into her recent work at the data
    science platform Mode. She provides unique insights into how she views architecture
    and design and why the concept of domain-driven design doesn’t go far enough.
    We chat about how you can see your team as customers to promote domain-driven
    design and then drill into what she does to create a ‘shared pool of knowledge’
    with her team. As Miki explains, ‘people problems’ are more difficult than technical
    ones and developers often make mistakes by not first developing common understanding.
    Especially when this relates to expectations within a company. Near the end of
    the episode, we explore what leaders can do to maintain productivity when growing
    their teams. Tune in to hear what you can do to deepen your team’s pool of understanding
    and improve the quality of your communication. \nNote: this episode was recorded
    in late July when Miki was working at Mode; she is now a Senior Software Engineer
    at Frame.io (https://frame.io).\nKey Points From This Episode:\nWhy homeschooling
    her kids better prepared Miki for software development than anything else.\nHow
    people within an organization express themselves through individual APIs. \nUnderstanding
    that people come from different backgrounds which influence their API.\nThe ‘shared
    pool of knowledge’ and figuring out how to communicate with people. \nMiki’s journey
    from homemaker to becoming a software engineer.\nHow nobody really knows what
    they’re doing.\nSecurity as a trade-off, privacy, and the power of two-factor
    authentication.\nHear about Miki’s work at the data science platform Mode.\nWhat
    Miki enjoys most about working in Elixir and what she uses it for. \nHow Miki
    sees architecture and the differences between architecture and design.\nDomain-driven
    design and the differences between data models and software. \nTreating your team
    ‘Agilely’ and seeing them as your customers.  \nMiki’s process of developing a
    shared pool of understanding before hammering out the end-to-end components. \nWhy
    ‘people problems’ are much more difficult than development problems. \nHow tech
    companies misdiagnose ‘people problems’ as bad design.\nConway’s Law and how code
    production reflects an organization’s structure. \nThe importance of setting expectations
    to maintain productivity as a team grows in size. \nThe danger of the Peter principle;
    when people are promoted to their level of incompetency.\nLinks Mentioned in Today’s
    Episode:\nMiki Rezentes LinkedIn —https://www.linkedin.com/in/miki-rezentes-823ba02a/\nMiki
    Rezentes GitHub — https://github.com/mrezentes\nMiki Rezentes Twitter — https://twitter.com/mikirez\nMode
    — https://mode.com/\nSmartLogic — https://smartlogic.io/ \nElixir Wizards Survey
    — smr.tl/podcastsurvey\nManning Publications — https://www.manning.com/\n‘APIs
    All the Way Down’ — https://www.youtube.com/watch?v=hBpbEsAG4es\nTurtles all the
    way down — https://en.wikipedia.org/wiki/Turtlesallthewaydown\nCrucial Conversations
    — https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\nThomas
    Edison State University — https://www.tesu.edu/academics/online-degrees\nXkcd
    — https://xkcd.com/\nToshiba Global Commerce Systems — https://commerce.toshiba.com/\nKroger
    — https://www.kroger.com/\nCA Technologies — https://www.ca.com/\nJira — https://www.atlassian.com/software/jira\nICFP
    2020 — https://icfp20.sigplan.org/\nJames Edward Gray II — https://github.com/JEG2\nHelix
    Data Engine - Mode — https://mode.com/helix/\nPractical Object-Oriented Design
    in Ruby — https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\nTanium
    — https://www.tanium.com/\nPoodr — https://www.poodr.com/\nGödel, Escher, Bach
    — https://en.wikipedia.org/wiki/G%C3%B6del,Escher,Bach\nD'Aulaires' Book of Greek
    Myths — https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\nThe
    Mythical Man-Month — https://en.wikipedia.org/wiki/TheMythicalMan-Month\nApplying
    Conway's Law to improve your software development — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\nPeter
    Principle — https://en.wikipedia.org/wiki/Peter_principle Special Guest: Miki
    Rezentes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Kj_RKzex
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/441f7029-d8ab-4494-aa7b-cfb08e4ade23.mp3
    length: '61712062'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: According to an ancient myth, the world rests on the back of a turtle.
      Miki Rezentes believes that all software rests on the back of APIs and shares
      highlights from her talk, ‘APIs All the Way Down’.
    duration: '42:29'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/441f7029-d8ab-4494-aa7b-cfb08e4ade23/cover.jpg?v=1
    summary: "\n        <p>According to an ancient myth, the world rests on the back
      of a turtle. And what does that turtle stand on? Another turtle. It turns out
      that it’s turtles all the way down. Miki Rezentes, today’s guest, believes that
      all software rests on the back of APIs. Similar to the myth, it’s APIs all the
      way down. We open our conversation by discussing how homeschooling her children
      did more to prepare Miki for a software career than anything else she’s encountered.
      Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this
      episode’s key theme, that the tech industry is too concerned with how its software
      interacts to focus on how the people in its organizations communicate — their
      ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we
      talk about the benefits of observation and mirroring. Tracking her career, we
      touch on how Miki transitioned from a homemaker to a developer before diving
      into her recent work at the data science platform Mode. She provides unique
      insights into how she views architecture and design and why the concept of domain-driven
      design doesn’t go far enough. We chat about how you can see your team as customers
      to promote domain-driven design and then drill into what she does to create
      a ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’
      are more difficult than technical ones and developers often make mistakes by
      not first developing common understanding. Especially when this relates to expectations
      within a company. Near the end of the episode, we explore what leaders can do
      to maintain productivity when growing their teams. Tune in to hear what you
      can do to deepen your team’s pool of understanding and improve the quality of
      your communication. </p>\n\n<p><em><strong>Note</strong>: this episode was recorded
      in late July when Miki was working at Mode; she is now a Senior Software Engineer
      at <a href=\"https://frame.io\" rel=\"nofollow\">Frame.io</a>.</em></p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Why homeschooling her kids better
      prepared Miki for software development than anything else.</li>\n<li>How people
      within an organization express themselves through individual APIs. </li>\n<li>Understanding
      that people come from different backgrounds which influence their API.</li>\n<li>The
      ‘shared pool of knowledge’ and figuring out how to communicate with people.
      </li>\n<li>Miki’s journey from homemaker to becoming a software engineer.</li>\n<li>How
      nobody really knows what they’re doing.</li>\n<li>Security as a trade-off, privacy,
      and the power of two-factor authentication.</li>\n<li>Hear about Miki’s work
      at the data science platform Mode.</li>\n<li>What Miki enjoys most about working
      in Elixir and what she uses it for. </li>\n<li>How Miki sees architecture and
      the differences between architecture and design.</li>\n<li>Domain-driven design
      and the differences between data models and software. </li>\n<li>Treating your
      team ‘Agilely’ and seeing them as your customers.<br></li>\n<li>Miki’s process
      of developing a shared pool of understanding before hammering out the end-to-end
      components. </li>\n<li>Why ‘people problems’ are much more difficult than development
      problems. </li>\n<li>How tech companies misdiagnose ‘people problems’ as bad
      design.</li>\n<li>Conway’s Law and how code production reflects an organization’s
      structure. </li>\n<li>The importance of setting expectations to maintain productivity
      as a team grows in size. </li>\n<li>The danger of the Peter principle; when
      people are promoted to their level of incompetency.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Miki Rezentes LinkedIn —<a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
      rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>\nMiki
      Rezentes GitHub — <a href=\"https://github.com/mrezentes\" rel=\"nofollow\">https://github.com/mrezentes</a><br>\nMiki
      Rezentes Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMode
      — <a href=\"https://mode.com/\" rel=\"nofollow\">https://mode.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir Wizards Survey — smr.tl/podcastsurvey<br>\nManning Publications
      — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\n‘APIs
      All the Way Down’ — <a href=\"https://www.youtube.com/watch?v=hBpbEsAG4es\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>\nTurtles
      all the way down — <a href=\"https://en.wikipedia.org/wiki/Turtles_all_the_way_down\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>\nCrucial
      Conversations — <a href=\"https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\"
      rel=\"nofollow\">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>\nThomas
      Edison State University — <a href=\"https://www.tesu.edu/academics/online-degrees\"
      rel=\"nofollow\">https://www.tesu.edu/academics/online-degrees</a><br>\nXkcd
      — <a href=\"https://xkcd.com/\" rel=\"nofollow\">https://xkcd.com/</a><br>\nToshiba
      Global Commerce Systems — <a href=\"https://commerce.toshiba.com/\" rel=\"nofollow\">https://commerce.toshiba.com/</a><br>\nKroger
      — <a href=\"https://www.kroger.com/\" rel=\"nofollow\">https://www.kroger.com/</a><br>\nCA
      Technologies — <a href=\"https://www.ca.com/\" rel=\"nofollow\">https://www.ca.com/</a><br>\nJira
      — <a href=\"https://www.atlassian.com/software/jira\" rel=\"nofollow\">https://www.atlassian.com/software/jira</a><br>\nICFP
      2020 — <a href=\"https://icfp20.sigplan.org/\" rel=\"nofollow\">https://icfp20.sigplan.org/</a><br>\nJames
      Edward Gray II — <a href=\"https://github.com/JEG2\" rel=\"nofollow\">https://github.com/JEG2</a><br>\nHelix
      Data Engine - Mode — <a href=\"https://mode.com/helix/\" rel=\"nofollow\">https://mode.com/helix/</a><br>\nPractical
      Object-Oriented Design in Ruby — <a href=\"https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\"
      rel=\"nofollow\">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>\nTanium
      — <a href=\"https://www.tanium.com/\" rel=\"nofollow\">https://www.tanium.com/</a><br>\nPoodr
      — <a href=\"https://www.poodr.com/\" rel=\"nofollow\">https://www.poodr.com/</a><br>\nGödel,
      Escher, Bach — <a href=\"https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>\nD&#39;Aulaires&#39;
      Book of Greek Myths — <a href=\"https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\"
      rel=\"nofollow\">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>\nThe
      Mythical Man-Month — <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>\nApplying
      Conway&#39;s Law to improve your software development — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
      rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nPeter
      Principle — <a href=\"https://en.wikipedia.org/wiki/Peter_principle\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special
      Guest: Miki Rezentes.</p>\n      "
  contentEncoded: "\n        <p>According to an ancient myth, the world rests on the
    back of a turtle. And what does that turtle stand on? Another turtle. It turns
    out that it’s turtles all the way down. Miki Rezentes, today’s guest, believes
    that all software rests on the back of APIs. Similar to the myth, it’s APIs all
    the way down. We open our conversation by discussing how homeschooling her children
    did more to prepare Miki for a software career than anything else she’s encountered.
    Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this
    episode’s key theme, that the tech industry is too concerned with how its software
    interacts to focus on how the people in its organizations communicate — their
    ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we
    talk about the benefits of observation and mirroring. Tracking her career, we
    touch on how Miki transitioned from a homemaker to a developer before diving into
    her recent work at the data science platform Mode. She provides unique insights
    into how she views architecture and design and why the concept of domain-driven
    design doesn’t go far enough. We chat about how you can see your team as customers
    to promote domain-driven design and then drill into what she does to create a
    ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’
    are more difficult than technical ones and developers often make mistakes by not
    first developing common understanding. Especially when this relates to expectations
    within a company. Near the end of the episode, we explore what leaders can do
    to maintain productivity when growing their teams. Tune in to hear what you can
    do to deepen your team’s pool of understanding and improve the quality of your
    communication. </p>\n\n<p><em><strong>Note</strong>: this episode was recorded
    in late July when Miki was working at Mode; she is now a Senior Software Engineer
    at <a href=\"https://frame.io\" rel=\"nofollow\">Frame.io</a>.</em></p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Why homeschooling her kids better prepared
    Miki for software development than anything else.</li>\n<li>How people within
    an organization express themselves through individual APIs. </li>\n<li>Understanding
    that people come from different backgrounds which influence their API.</li>\n<li>The
    ‘shared pool of knowledge’ and figuring out how to communicate with people. </li>\n<li>Miki’s
    journey from homemaker to becoming a software engineer.</li>\n<li>How nobody really
    knows what they’re doing.</li>\n<li>Security as a trade-off, privacy, and the
    power of two-factor authentication.</li>\n<li>Hear about Miki’s work at the data
    science platform Mode.</li>\n<li>What Miki enjoys most about working in Elixir
    and what she uses it for. </li>\n<li>How Miki sees architecture and the differences
    between architecture and design.</li>\n<li>Domain-driven design and the differences
    between data models and software. </li>\n<li>Treating your team ‘Agilely’ and
    seeing them as your customers.<br></li>\n<li>Miki’s process of developing a shared
    pool of understanding before hammering out the end-to-end components. </li>\n<li>Why
    ‘people problems’ are much more difficult than development problems. </li>\n<li>How
    tech companies misdiagnose ‘people problems’ as bad design.</li>\n<li>Conway’s
    Law and how code production reflects an organization’s structure. </li>\n<li>The
    importance of setting expectations to maintain productivity as a team grows in
    size. </li>\n<li>The danger of the Peter principle; when people are promoted to
    their level of incompetency.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Miki
    Rezentes LinkedIn —<a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
    rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>\nMiki
    Rezentes GitHub — <a href=\"https://github.com/mrezentes\" rel=\"nofollow\">https://github.com/mrezentes</a><br>\nMiki
    Rezentes Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMode
    — <a href=\"https://mode.com/\" rel=\"nofollow\">https://mode.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir Wizards Survey — smr.tl/podcastsurvey<br>\nManning Publications —
    <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\n‘APIs
    All the Way Down’ — <a href=\"https://www.youtube.com/watch?v=hBpbEsAG4es\" rel=\"nofollow\">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>\nTurtles
    all the way down — <a href=\"https://en.wikipedia.org/wiki/Turtles_all_the_way_down\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>\nCrucial
    Conversations — <a href=\"https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\"
    rel=\"nofollow\">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>\nThomas
    Edison State University — <a href=\"https://www.tesu.edu/academics/online-degrees\"
    rel=\"nofollow\">https://www.tesu.edu/academics/online-degrees</a><br>\nXkcd —
    <a href=\"https://xkcd.com/\" rel=\"nofollow\">https://xkcd.com/</a><br>\nToshiba
    Global Commerce Systems — <a href=\"https://commerce.toshiba.com/\" rel=\"nofollow\">https://commerce.toshiba.com/</a><br>\nKroger
    — <a href=\"https://www.kroger.com/\" rel=\"nofollow\">https://www.kroger.com/</a><br>\nCA
    Technologies — <a href=\"https://www.ca.com/\" rel=\"nofollow\">https://www.ca.com/</a><br>\nJira
    — <a href=\"https://www.atlassian.com/software/jira\" rel=\"nofollow\">https://www.atlassian.com/software/jira</a><br>\nICFP
    2020 — <a href=\"https://icfp20.sigplan.org/\" rel=\"nofollow\">https://icfp20.sigplan.org/</a><br>\nJames
    Edward Gray II — <a href=\"https://github.com/JEG2\" rel=\"nofollow\">https://github.com/JEG2</a><br>\nHelix
    Data Engine - Mode — <a href=\"https://mode.com/helix/\" rel=\"nofollow\">https://mode.com/helix/</a><br>\nPractical
    Object-Oriented Design in Ruby — <a href=\"https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\"
    rel=\"nofollow\">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>\nTanium
    — <a href=\"https://www.tanium.com/\" rel=\"nofollow\">https://www.tanium.com/</a><br>\nPoodr
    — <a href=\"https://www.poodr.com/\" rel=\"nofollow\">https://www.poodr.com/</a><br>\nGödel,
    Escher, Bach — <a href=\"https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>\nD&#39;Aulaires&#39;
    Book of Greek Myths — <a href=\"https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\"
    rel=\"nofollow\">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>\nThe
    Mythical Man-Month — <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>\nApplying
    Conway&#39;s Law to improve your software development — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
    rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nPeter
    Principle — <a href=\"https://en.wikipedia.org/wiki/Peter_principle\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special
    Guest: Miki Rezentes.</p>\n      "
- title: ElixirConf 2020 Preview
  slug: s4e15-elixirconf
  link: https://smartlogic.io/podcast/elixir-wizards/s4e15-elixirconf
  guid: a233d61f-e572-4479-a477-18b0d08fb053
  pubDate: Thu, 27 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 27, 2020
  description: "With ElixirConf 2020 just around the corner, today’s episode is a
    sneak peek where we talk with six of this year’s speakers. Each speaker gives
    listeners an elevator pitch of their talk while throwing in extra details about
    who their talk is aimed at, what they learned through the process, and which talks
    they’re excited about attending. \nOur first guest is Quinn Wilton, a developer
    at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with Gleam’. Quinn
    explains how she’s created a symbiosis between Elixir and Gleam that helps her
    create more consistent code while offsetting the disadvantages of dynamic typing.
    \nWe then chat with Dan Lindeman whose talk, ‘Short Circuit IoT Development Time
    with Nerves,’ is an overview of building custom hardware using Nerves and Elixir.
    \nAfter Dan’s plug on how you can start programming Nerves on your laptop, we
    welcome Jeffrey Utter to the show. His talk is a deep dive into ‘Debugging Live
    Systems on the Beam.’ Teasing out the topic, we discuss inefficiencies in the
    debugging process and how many developers adopt a ‘whack-a-mole’ approach to dealing
    with bugs. \nFrom debugging to UintSet, Luciano Ramalho, our next speaker, gives
    us a taste of his presentation, ‘UIntSet: enumerable, streamable, understandable.’
    Luciano shares how the Go language inspired him to experiment with leveraging
    protocols and streams to build new idiomatic Elixir data structures from scratch.
    He also touches on the importance of being humble when learning new languages
    and gearing Elixir to a non-engineer user base. \nAfter Luciano, we’re joined
    by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings
    his teaching experience to bear on the topic of ‘Teaching Functional Programming
    with Elixir.’ This is a key talk in growing our community, especially when considering
    the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited
    to teach it. \nLast but certainly not least, we speak with Japa Swadia from Podium
    about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s been a huge
    focus on the podcast. We chat about what domain-driven design means and why it’s
    an important foundational concept for beginners to learn. \nTune in for this tip-of-the-iceberg
    preview. It’s just a glimpse into the varied and wonderfully informative talks
    you can expect at ElixirConf 2020.\nKey Points From This Episode:\nIntroducing
    Quinn Wilton who is using Gleam to interact with Elixir. \nHow being acquired
    by Synopsys has given Tinfoil Security access to greater resources.\nBalancing
    the advantages of Elixir with its drawbacks when it comes to dynamic analysis.\nWhat
    Gleam is and how it makes static typing more approachable. \nTeasing Quinn’s ElixirConf
    talk — ‘Talk Type-Safe LiveView with Gleam’\nWhat Quinn has learned from the process
    of creating his presentation. \nBuilding a dissembler and the talk that Quinn
    is most looking forward to attending.\nDan Lindeman’s work at Very making solar
    micro-grids.\nThe benefits of Elixir and Nerves when building custom hardware.
    \nWho Dan’s talk is aimed at and why it’s appropriate for any experience level.
    \nWorking with smart minds and laboring through hardware docs that often lie.
    \nHow scary it can be to work with hardware and the value of having your talk
    appeal to entry-level Elixir users. \nJeffrey Utter unpacks his talk — ‘Debugging
    Live Systems on the Beam.’\nHow most people play ‘whack-a-mole’ when dealing with
    live system bugs.\nUsing match specs to hone in on your debugging process. \nWhy
    most Elixir coders should learn about Jeffrey’s debugging system. \nWhy is Recon
    Library is such an excellent tool and its potential uses in distributed systems.\nHear
    which talks Jeffrey is looking forward to attending.\nHow Go inspired Luciano
    Ramalho to explore applying different data structures to Elixir.\nWhat skill-level
    Luciano’s talk is aimed at and why.\nDeveloping a sense of how Elixir is idiomatic,
    despite being such a new language.  \nBeing humble when learning new languages
    and the importance of protocols in understanding idiomatic data structures. \nHow
    Elixir is geared towards engineers which can create barriers of entry. \nMark
    Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming
    with Elixir.’\nWhy knowing Elixir very well doesn’t mean that you can teach it.\nThe
    benefits of remote learning; it can make your teaching more organized and to-the-point.
    \nHear about the talks that Mark is excited about attending. \nJapa gives us a
    crash-course on domain-driven design.\nCreating a solid foundation for your app
    by considering the contexts in which it’s used.\nWhy beginners or those wanting
    to switch to domain-orientated coding should attend Japa’s talk.\nUsing schema
    to point to the same table in different contexts.\nWhich talks Japa is attending
    and how she got selected for ElixirConf 2020.\nLinks Mentioned in Today’s Episode:\nElixir
    Wizards Listener Survey — https://smr.tl/podcastsurvey\nSmartLogic — https://smartlogic.io/\nElixirConf
    2020 — https://2020.elixirconf.com/ \nQuinn Wilton — https://github.com/QuinnWilton/gleam-chip8\nQuinn
    Wilton Twitter — https://twitter.com/wiltonquinn\n‘Type-Safe LiveView with Gleam’
    — https://2020.elixirconf.com/speakers/128/talk\nTinfoil Security — https://www.tinfoilsecurity.com/\nSynopsys
    — https://www.synopsys.com/\nGleam — https://gleam.run/\nLouis Pilfold GitHub
    — https://github.com/lpil\nPhoenix LiveView — https://github.com/phoenixframework/phoenixliveview\nCHIP-8
    — https://en.wikipedia.org/wiki/CHIP-8\nStephen Bussey — https://github.com/sb8244\n‘The
    Joy of an Elixir Monolith’ — https://2020.elixirconf.com/speakers/121/talk\nCode
    BEAM / Code Sync — https://codesync.global/\nDan Lindeman — https://github.com/DanLindeman\nDan
    Lindeman Twitter — https://twitter.com/lindemda\n‘Short Circuit IoT Development
    Time with Nerves’ — https://2020.elixirconf.com/speakers/117/talk\nNerves Platform
    — https://www.nerves-project.org/\nVery — https://www.verypossible.com/\nJustin
    Schneck — https://www.linkedin.com/in/justinschneck/\nDaniel Stoppard — https://www.linkedin.com/in/daniel-spofford-2307a655/\nJenn
    Gamble — https://2020.elixirconf.com/speakers/115/bio\nJuliana Helena — https://2020.elixirconf.com/speakers/129/bio\n‘How
    Elixir made me a better Java programmer’ — https://2020.elixirconf.com/speakers/129/talk\nNerves
    Hub — https://www.nerves-hub.org/\nJeffrey Utter — https://github.com/jeffutter\nBleacher
    Report — https://bleacherreport.com/\n‘Debugging Live Systems on the Beam’ — https://2020.elixirconf.com/speakers/114/talk\nDatadog
    — https://www.datadoghq.com/\nErlang Sys Trace 2 — https://erlang.org/doc/man/sys.html#trace-2\nRecon
    Library — https://ferd.github.io/recon/\nErlang Debugger — http://erlang.org/doc/apps/debugger/debuggerchapter.html\nCatalina
    Astengo — https://github.com/castengo\ngRPC + Elixir Microservices = A Love Story?
    — https://2020.elixirconf.com/speakers/116/talk\nKC Elixir — https://www.kcelixir.com/\nLuciano
    Ramalho — https://github.com/ramalho/\nLuciano Ramalho Twitter — https://twitter.com/ramalhoorg\n‘UintSet:
    enumerable, streamable, understandable’ — https://2020.elixirconf.com/speakers/125/talk\nThoughtWorks
    — https://www.thoughtworks.com/\nGo — https://golang.org/\nThe Go Programming
    Language — https://www.gopl.io/\nBrian W. Kernighan — https://www.cs.princeton.edu/people/profile/bwk\nFluent
    Python — https://www.oreilly.com/library/view/fluent-python/9781491946237/\nSimon
    de Haan — https://github.com/smn\n‘Using Elixir and WhatsApp to launch WHO’s global
    COVID-19 response’ — https://2020.elixirconf.com/speakers/124/talk\nYutaka Kikuchi
    — https://github.com/kikuyuta\n‘Applying Elixir for driving small hydropower plants
    with Nerves’\n— https://2020.elixirconf.com/speakers/123/talk\nProcessing — https://processing.org/\nMelvin
    Cedeno — https://github.com/thecraftedgem\n‘Teaching Functional Programming With
    Elixir’ — https://2020.elixirconf.com/speakers/99/talk\nTuring — https://turing.io/\n
    Nicholas Henry — https://github.com/nicholasjhenry\n‘The Upside Dimension of Elixir
    - An Introduction to Metaprogramming’ —\nhttps://2020.elixirconf.com/speakers/120/talk\nBrian
    Marick — https://github.com/marick/\n‘Tricks and tools for writing Elixir tests’
    — https://2020.elixirconf.com/speakers/109/talk\nGerman Velasco — http://www.germanvelasco.com/\n‘Testing
    LiveView’ — https://2020.elixirconf.com/speakers/119/talk\nLonestar Elixir — https://lonestarelixir.com/\nJapa
    Swadia — https://github.com/japa-swadia\nPodium — https://www.podium.com\n‘Domain-Driven
    Design with Elixir’ — https://2020.elixirconf.com/speakers/105/talk\nDesign Patterns
    — https://en.wikipedia.org/wiki/Design_Patterns\nJustus Eapen Social Handle —
    @JustusEapen\nEric Oestrich Social Handle — @EricOestrich\nSundi Myint Social
    Handle — @SundiKhin Special Guests: Dan Lindeman, Japa Swadia, Jeffrey Utter,
    Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5KevXeMq
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a233d61f-e572-4479-a477-18b0d08fb053.mp3
    length: '55896497'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: With ElixirConf 2020 just around the corner, today’s episode is a sneak
      peek where we talk with six of this year’s speakers.
    duration: '1:17:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a233d61f-e572-4479-a477-18b0d08fb053/cover.jpg?v=1
    summary: "\n        <p>With ElixirConf 2020 just around the corner, today’s episode
      is a sneak peek where we talk with six of this year’s speakers. Each speaker
      gives listeners an elevator pitch of their talk while throwing in extra details
      about who their talk is aimed at, what they learned through the process, and
      which talks they’re excited about attending. </p>\n\n<p>Our first guest is Quinn
      Wilton, a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView
      with Gleam’. Quinn explains how she’s created a symbiosis between Elixir and
      Gleam that helps her create more consistent code while offsetting the disadvantages
      of dynamic typing. </p>\n\n<p>We then chat with Dan Lindeman whose talk, ‘Short
      Circuit IoT Development Time with Nerves,’ is an overview of building custom
      hardware using Nerves and Elixir. </p>\n\n<p>After Dan’s plug on how you can
      start programming Nerves on your laptop, we welcome Jeffrey Utter to the show.
      His talk is a deep dive into ‘Debugging Live Systems on the Beam.’ Teasing out
      the topic, we discuss inefficiencies in the debugging process and how many developers
      adopt a ‘whack-a-mole’ approach to dealing with bugs. </p>\n\n<p>From debugging
      to UintSet, Luciano Ramalho, our next speaker, gives us a taste of his presentation,
      ‘UIntSet: enumerable, streamable, understandable.’ Luciano shares how the Go
      language inspired him to experiment with leveraging protocols and streams to
      build new idiomatic Elixir data structures from scratch. He also touches on
      the importance of being humble when learning new languages and gearing Elixir
      to a non-engineer user base. </p>\n\n<p>After Luciano, we’re joined by Melvin
      Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings his
      teaching experience to bear on the topic of ‘Teaching Functional Programming
      with Elixir.’ This is a key talk in growing our community, especially when considering
      the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited
      to teach it. </p>\n\n<p>Last but certainly not least, we speak with Japa Swadia
      from Podium about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s
      been a huge focus on the podcast. We chat about what domain-driven design means
      and why it’s an important foundational concept for beginners to learn. </p>\n\n<p>Tune
      in for this tip-of-the-iceberg preview. It’s just a glimpse into the varied
      and wonderfully informative talks you can expect at ElixirConf 2020.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Introducing Quinn Wilton who is using
      Gleam to interact with Elixir. </li>\n<li>How being acquired by Synopsys has
      given Tinfoil Security access to greater resources.</li>\n<li>Balancing the
      advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>\n<li>What
      Gleam is and how it makes static typing more approachable. </li>\n<li>Teasing
      Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>\n<li>What
      Quinn has learned from the process of creating his presentation. </li>\n<li>Building
      a dissembler and the talk that Quinn is most looking forward to attending.</li>\n<li>Dan
      Lindeman’s work at Very making solar micro-grids.</li>\n<li>The benefits of
      Elixir and Nerves when building custom hardware. </li>\n<li>Who Dan’s talk is
      aimed at and why it’s appropriate for any experience level. </li>\n<li>Working
      with smart minds and laboring through hardware docs that often lie. </li>\n<li>How
      scary it can be to work with hardware and the value of having your talk appeal
      to entry-level Elixir users. </li>\n<li>Jeffrey Utter unpacks his talk — ‘Debugging
      Live Systems on the Beam.’</li>\n<li>How most people play ‘whack-a-mole’ when
      dealing with live system bugs.</li>\n<li>Using match specs to hone in on your
      debugging process. </li>\n<li>Why most Elixir coders should learn about Jeffrey’s
      debugging system. </li>\n<li>Why is Recon Library is such an excellent tool
      and its potential uses in distributed systems.</li>\n<li>Hear which talks Jeffrey
      is looking forward to attending.</li>\n<li>How Go inspired Luciano Ramalho to
      explore applying different data structures to Elixir.</li>\n<li>What skill-level
      Luciano’s talk is aimed at and why.</li>\n<li>Developing a sense of how Elixir
      is idiomatic, despite being such a new language.<br></li>\n<li>Being humble
      when learning new languages and the importance of protocols in understanding
      idiomatic data structures. </li>\n<li>How Elixir is geared towards engineers
      which can create barriers of entry. </li>\n<li>Mark Cedeno gives an elevator
      pitch for his talk — ‘Teaching Functional Programming with Elixir.’</li>\n<li>Why
      knowing Elixir very well doesn’t mean that you can teach it.</li>\n<li>The benefits
      of remote learning; it can make your teaching more organized and to-the-point.
      </li>\n<li>Hear about the talks that Mark is excited about attending. </li>\n<li>Japa
      gives us a crash-course on domain-driven design.</li>\n<li>Creating a solid
      foundation for your app by considering the contexts in which it’s used.</li>\n<li>Why
      beginners or those wanting to switch to domain-orientated coding should attend
      Japa’s talk.</li>\n<li>Using schema to point to the same table in different
      contexts.</li>\n<li>Which talks Japa is attending and how she got selected for
      ElixirConf 2020.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Elixir
      Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\" rel=\"nofollow\">https://smr.tl/podcastsurvey</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixirConf
      2020 — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a>
      <br>\nQuinn Wilton — <a href=\"https://github.com/QuinnWilton/gleam-chip8\"
      rel=\"nofollow\">https://github.com/QuinnWilton/gleam-chip8</a><br>\nQuinn Wilton
      Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\n‘Type-Safe
      LiveView with Gleam’ — <a href=\"https://2020.elixirconf.com/speakers/128/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/128/talk</a><br>\nTinfoil
      Security — <a href=\"https://www.tinfoilsecurity.com/\" rel=\"nofollow\">https://www.tinfoilsecurity.com/</a><br>\nSynopsys
      — <a href=\"https://www.synopsys.com/\" rel=\"nofollow\">https://www.synopsys.com/</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLouis
      Pilfold GitHub — <a href=\"https://github.com/lpil\" rel=\"nofollow\">https://github.com/lpil</a><br>\nPhoenix
      LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nCHIP-8
      — <a href=\"https://en.wikipedia.org/wiki/CHIP-8\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CHIP-8</a><br>\nStephen
      Bussey — <a href=\"https://github.com/sb8244\" rel=\"nofollow\">https://github.com/sb8244</a><br>\n‘The
      Joy of an Elixir Monolith’ — <a href=\"https://2020.elixirconf.com/speakers/121/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/121/talk</a><br>\nCode
      BEAM / Code Sync — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nDan
      Lindeman — <a href=\"https://github.com/DanLindeman\" rel=\"nofollow\">https://github.com/DanLindeman</a><br>\nDan
      Lindeman Twitter — <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\n‘Short
      Circuit IoT Development Time with Nerves’ — <a href=\"https://2020.elixirconf.com/speakers/117/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/117/talk</a><br>\nNerves
      Platform — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nVery
      — <a href=\"https://www.verypossible.com/\" rel=\"nofollow\">https://www.verypossible.com/</a><br>\nJustin
      Schneck — <a href=\"https://www.linkedin.com/in/justinschneck/\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck/</a><br>\nDaniel
      Stoppard — <a href=\"https://www.linkedin.com/in/daniel-spofford-2307a655/\"
      rel=\"nofollow\">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>\nJenn
      Gamble — <a href=\"https://2020.elixirconf.com/speakers/115/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/115/bio</a><br>\nJuliana
      Helena — <a href=\"https://2020.elixirconf.com/speakers/129/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/bio</a><br>\n‘How
      Elixir made me a better Java programmer’ — <a href=\"https://2020.elixirconf.com/speakers/129/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/talk</a><br>\nNerves
      Hub — <a href=\"https://www.nerves-hub.org/\" rel=\"nofollow\">https://www.nerves-hub.org/</a><br>\nJeffrey
      Utter — <a href=\"https://github.com/jeffutter\" rel=\"nofollow\">https://github.com/jeffutter</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\n‘Debugging
      Live Systems on the Beam’ — <a href=\"https://2020.elixirconf.com/speakers/114/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/114/talk</a><br>\nDatadog
      — <a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a><br>\nErlang
      Sys Trace 2 — <a href=\"https://erlang.org/doc/man/sys.html#trace-2\" rel=\"nofollow\">https://erlang.org/doc/man/sys.html#trace-2</a><br>\nRecon
      Library — <a href=\"https://ferd.github.io/recon/\" rel=\"nofollow\">https://ferd.github.io/recon/</a><br>\nErlang
      Debugger — <a href=\"http://erlang.org/doc/apps/debugger/debugger_chapter.html\"
      rel=\"nofollow\">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>\nCatalina
      Astengo — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a><br>\ngRPC
      + Elixir Microservices = A Love Story? — <a href=\"https://2020.elixirconf.com/speakers/116/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/116/talk</a><br>\nKC Elixir
      — <a href=\"https://www.kcelixir.com/\" rel=\"nofollow\">https://www.kcelixir.com/</a><br>\nLuciano
      Ramalho — <a href=\"https://github.com/ramalho/\" rel=\"nofollow\">https://github.com/ramalho/</a><br>\nLuciano
      Ramalho Twitter — <a href=\"https://twitter.com/ramalhoorg\" rel=\"nofollow\">https://twitter.com/ramalhoorg</a><br>\n‘UintSet:
      enumerable, streamable, understandable’ — <a href=\"https://2020.elixirconf.com/speakers/125/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/125/talk</a><br>\nThoughtWorks
      — <a href=\"https://www.thoughtworks.com/\" rel=\"nofollow\">https://www.thoughtworks.com/</a><br>\nGo
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nThe
      Go Programming Language — <a href=\"https://www.gopl.io/\" rel=\"nofollow\">https://www.gopl.io/</a><br>\nBrian
      W. Kernighan — <a href=\"https://www.cs.princeton.edu/people/profile/bwk\" rel=\"nofollow\">https://www.cs.princeton.edu/people/profile/bwk</a><br>\nFluent
      Python — <a href=\"https://www.oreilly.com/library/view/fluent-python/9781491946237/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>\nSimon
      de Haan — <a href=\"https://github.com/smn\" rel=\"nofollow\">https://github.com/smn</a><br>\n‘Using
      Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href=\"https://2020.elixirconf.com/speakers/124/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/124/talk</a><br>\nYutaka
      Kikuchi — <a href=\"https://github.com/kikuyuta\" rel=\"nofollow\">https://github.com/kikuyuta</a><br>\n‘Applying
      Elixir for driving small hydropower plants with Nerves’<br>\n— <a href=\"https://2020.elixirconf.com/speakers/123/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/123/talk</a><br>\nProcessing
      — <a href=\"https://processing.org/\" rel=\"nofollow\">https://processing.org/</a><br>\nMelvin
      Cedeno — <a href=\"https://github.com/thecraftedgem\" rel=\"nofollow\">https://github.com/thecraftedgem</a><br>\n‘Teaching
      Functional Programming With Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/99/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/99/talk</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\n
      Nicholas Henry — <a href=\"https://github.com/nicholasjhenry\" rel=\"nofollow\">https://github.com/nicholasjhenry</a><br>\n‘The
      Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>\n<a href=\"https://2020.elixirconf.com/speakers/120/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/120/talk</a><br>\nBrian
      Marick — <a href=\"https://github.com/marick/\" rel=\"nofollow\">https://github.com/marick/</a><br>\n‘Tricks
      and tools for writing Elixir tests’ — <a href=\"https://2020.elixirconf.com/speakers/109/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/109/talk</a><br>\nGerman
      Velasco — <a href=\"http://www.germanvelasco.com/\" rel=\"nofollow\">http://www.germanvelasco.com/</a><br>\n‘Testing
      LiveView’ — <a href=\"https://2020.elixirconf.com/speakers/119/talk\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/119/talk</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJapa
      Swadia — <a href=\"https://github.com/japa-swadia\" rel=\"nofollow\">https://github.com/japa-swadia</a><br>\nPodium
      — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\n‘Domain-Driven
      Design with Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/105/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/105/talk</a><br>\nDesign
      Patterns — <a href=\"https://en.wikipedia.org/wiki/Design_Patterns\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Design_Patterns</a><br>\nJustus
      Eapen Social Handle — @JustusEapen<br>\nEric Oestrich Social Handle — @EricOestrich<br>\nSundi
      Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia,
      Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>\n      "
  contentEncoded: "\n        <p>With ElixirConf 2020 just around the corner, today’s
    episode is a sneak peek where we talk with six of this year’s speakers. Each speaker
    gives listeners an elevator pitch of their talk while throwing in extra details
    about who their talk is aimed at, what they learned through the process, and which
    talks they’re excited about attending. </p>\n\n<p>Our first guest is Quinn Wilton,
    a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with
    Gleam’. Quinn explains how she’s created a symbiosis between Elixir and Gleam
    that helps her create more consistent code while offsetting the disadvantages
    of dynamic typing. </p>\n\n<p>We then chat with Dan Lindeman whose talk, ‘Short
    Circuit IoT Development Time with Nerves,’ is an overview of building custom hardware
    using Nerves and Elixir. </p>\n\n<p>After Dan’s plug on how you can start programming
    Nerves on your laptop, we welcome Jeffrey Utter to the show. His talk is a deep
    dive into ‘Debugging Live Systems on the Beam.’ Teasing out the topic, we discuss
    inefficiencies in the debugging process and how many developers adopt a ‘whack-a-mole’
    approach to dealing with bugs. </p>\n\n<p>From debugging to UintSet, Luciano Ramalho,
    our next speaker, gives us a taste of his presentation, ‘UIntSet: enumerable,
    streamable, understandable.’ Luciano shares how the Go language inspired him to
    experiment with leveraging protocols and streams to build new idiomatic Elixir
    data structures from scratch. He also touches on the importance of being humble
    when learning new languages and gearing Elixir to a non-engineer user base. </p>\n\n<p>After
    Luciano, we’re joined by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic
    family. Melvin brings his teaching experience to bear on the topic of ‘Teaching
    Functional Programming with Elixir.’ This is a key talk in growing our community,
    especially when considering the point that being an Elixir genius doesn’t necessarily
    mean that you’re well-suited to teach it. </p>\n\n<p>Last but certainly not least,
    we speak with Japa Swadia from Podium about her talk, ‘Domain-Driven Design with
    Elixir’ — a subject that’s been a huge focus on the podcast. We chat about what
    domain-driven design means and why it’s an important foundational concept for
    beginners to learn. </p>\n\n<p>Tune in for this tip-of-the-iceberg preview. It’s
    just a glimpse into the varied and wonderfully informative talks you can expect
    at ElixirConf 2020.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Quinn Wilton who is using Gleam to interact with Elixir. </li>\n<li>How being
    acquired by Synopsys has given Tinfoil Security access to greater resources.</li>\n<li>Balancing
    the advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>\n<li>What
    Gleam is and how it makes static typing more approachable. </li>\n<li>Teasing
    Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>\n<li>What
    Quinn has learned from the process of creating his presentation. </li>\n<li>Building
    a dissembler and the talk that Quinn is most looking forward to attending.</li>\n<li>Dan
    Lindeman’s work at Very making solar micro-grids.</li>\n<li>The benefits of Elixir
    and Nerves when building custom hardware. </li>\n<li>Who Dan’s talk is aimed at
    and why it’s appropriate for any experience level. </li>\n<li>Working with smart
    minds and laboring through hardware docs that often lie. </li>\n<li>How scary
    it can be to work with hardware and the value of having your talk appeal to entry-level
    Elixir users. </li>\n<li>Jeffrey Utter unpacks his talk — ‘Debugging Live Systems
    on the Beam.’</li>\n<li>How most people play ‘whack-a-mole’ when dealing with
    live system bugs.</li>\n<li>Using match specs to hone in on your debugging process.
    </li>\n<li>Why most Elixir coders should learn about Jeffrey’s debugging system.
    </li>\n<li>Why is Recon Library is such an excellent tool and its potential uses
    in distributed systems.</li>\n<li>Hear which talks Jeffrey is looking forward
    to attending.</li>\n<li>How Go inspired Luciano Ramalho to explore applying different
    data structures to Elixir.</li>\n<li>What skill-level Luciano’s talk is aimed
    at and why.</li>\n<li>Developing a sense of how Elixir is idiomatic, despite being
    such a new language.<br></li>\n<li>Being humble when learning new languages and
    the importance of protocols in understanding idiomatic data structures. </li>\n<li>How
    Elixir is geared towards engineers which can create barriers of entry. </li>\n<li>Mark
    Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming
    with Elixir.’</li>\n<li>Why knowing Elixir very well doesn’t mean that you can
    teach it.</li>\n<li>The benefits of remote learning; it can make your teaching
    more organized and to-the-point. </li>\n<li>Hear about the talks that Mark is
    excited about attending. </li>\n<li>Japa gives us a crash-course on domain-driven
    design.</li>\n<li>Creating a solid foundation for your app by considering the
    contexts in which it’s used.</li>\n<li>Why beginners or those wanting to switch
    to domain-orientated coding should attend Japa’s talk.</li>\n<li>Using schema
    to point to the same table in different contexts.</li>\n<li>Which talks Japa is
    attending and how she got selected for ElixirConf 2020.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\"
    rel=\"nofollow\">https://smr.tl/podcastsurvey</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixirConf 2020 — <a href=\"https://2020.elixirconf.com/\"
    rel=\"nofollow\">https://2020.elixirconf.com/</a> <br>\nQuinn Wilton — <a href=\"https://github.com/QuinnWilton/gleam-chip8\"
    rel=\"nofollow\">https://github.com/QuinnWilton/gleam-chip8</a><br>\nQuinn Wilton
    Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\n‘Type-Safe
    LiveView with Gleam’ — <a href=\"https://2020.elixirconf.com/speakers/128/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/128/talk</a><br>\nTinfoil
    Security — <a href=\"https://www.tinfoilsecurity.com/\" rel=\"nofollow\">https://www.tinfoilsecurity.com/</a><br>\nSynopsys
    — <a href=\"https://www.synopsys.com/\" rel=\"nofollow\">https://www.synopsys.com/</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLouis
    Pilfold GitHub — <a href=\"https://github.com/lpil\" rel=\"nofollow\">https://github.com/lpil</a><br>\nPhoenix
    LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nCHIP-8
    — <a href=\"https://en.wikipedia.org/wiki/CHIP-8\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CHIP-8</a><br>\nStephen
    Bussey — <a href=\"https://github.com/sb8244\" rel=\"nofollow\">https://github.com/sb8244</a><br>\n‘The
    Joy of an Elixir Monolith’ — <a href=\"https://2020.elixirconf.com/speakers/121/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/121/talk</a><br>\nCode BEAM
    / Code Sync — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nDan
    Lindeman — <a href=\"https://github.com/DanLindeman\" rel=\"nofollow\">https://github.com/DanLindeman</a><br>\nDan
    Lindeman Twitter — <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\n‘Short
    Circuit IoT Development Time with Nerves’ — <a href=\"https://2020.elixirconf.com/speakers/117/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/117/talk</a><br>\nNerves
    Platform — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nVery
    — <a href=\"https://www.verypossible.com/\" rel=\"nofollow\">https://www.verypossible.com/</a><br>\nJustin
    Schneck — <a href=\"https://www.linkedin.com/in/justinschneck/\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck/</a><br>\nDaniel
    Stoppard — <a href=\"https://www.linkedin.com/in/daniel-spofford-2307a655/\" rel=\"nofollow\">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>\nJenn
    Gamble — <a href=\"https://2020.elixirconf.com/speakers/115/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/115/bio</a><br>\nJuliana
    Helena — <a href=\"https://2020.elixirconf.com/speakers/129/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/bio</a><br>\n‘How
    Elixir made me a better Java programmer’ — <a href=\"https://2020.elixirconf.com/speakers/129/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/talk</a><br>\nNerves
    Hub — <a href=\"https://www.nerves-hub.org/\" rel=\"nofollow\">https://www.nerves-hub.org/</a><br>\nJeffrey
    Utter — <a href=\"https://github.com/jeffutter\" rel=\"nofollow\">https://github.com/jeffutter</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\n‘Debugging
    Live Systems on the Beam’ — <a href=\"https://2020.elixirconf.com/speakers/114/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/114/talk</a><br>\nDatadog
    — <a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a><br>\nErlang
    Sys Trace 2 — <a href=\"https://erlang.org/doc/man/sys.html#trace-2\" rel=\"nofollow\">https://erlang.org/doc/man/sys.html#trace-2</a><br>\nRecon
    Library — <a href=\"https://ferd.github.io/recon/\" rel=\"nofollow\">https://ferd.github.io/recon/</a><br>\nErlang
    Debugger — <a href=\"http://erlang.org/doc/apps/debugger/debugger_chapter.html\"
    rel=\"nofollow\">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>\nCatalina
    Astengo — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a><br>\ngRPC
    + Elixir Microservices = A Love Story? — <a href=\"https://2020.elixirconf.com/speakers/116/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/116/talk</a><br>\nKC Elixir
    — <a href=\"https://www.kcelixir.com/\" rel=\"nofollow\">https://www.kcelixir.com/</a><br>\nLuciano
    Ramalho — <a href=\"https://github.com/ramalho/\" rel=\"nofollow\">https://github.com/ramalho/</a><br>\nLuciano
    Ramalho Twitter — <a href=\"https://twitter.com/ramalhoorg\" rel=\"nofollow\">https://twitter.com/ramalhoorg</a><br>\n‘UintSet:
    enumerable, streamable, understandable’ — <a href=\"https://2020.elixirconf.com/speakers/125/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/125/talk</a><br>\nThoughtWorks
    — <a href=\"https://www.thoughtworks.com/\" rel=\"nofollow\">https://www.thoughtworks.com/</a><br>\nGo
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nThe
    Go Programming Language — <a href=\"https://www.gopl.io/\" rel=\"nofollow\">https://www.gopl.io/</a><br>\nBrian
    W. Kernighan — <a href=\"https://www.cs.princeton.edu/people/profile/bwk\" rel=\"nofollow\">https://www.cs.princeton.edu/people/profile/bwk</a><br>\nFluent
    Python — <a href=\"https://www.oreilly.com/library/view/fluent-python/9781491946237/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>\nSimon
    de Haan — <a href=\"https://github.com/smn\" rel=\"nofollow\">https://github.com/smn</a><br>\n‘Using
    Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href=\"https://2020.elixirconf.com/speakers/124/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/124/talk</a><br>\nYutaka
    Kikuchi — <a href=\"https://github.com/kikuyuta\" rel=\"nofollow\">https://github.com/kikuyuta</a><br>\n‘Applying
    Elixir for driving small hydropower plants with Nerves’<br>\n— <a href=\"https://2020.elixirconf.com/speakers/123/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/123/talk</a><br>\nProcessing
    — <a href=\"https://processing.org/\" rel=\"nofollow\">https://processing.org/</a><br>\nMelvin
    Cedeno — <a href=\"https://github.com/thecraftedgem\" rel=\"nofollow\">https://github.com/thecraftedgem</a><br>\n‘Teaching
    Functional Programming With Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/99/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/99/talk</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\n
    Nicholas Henry — <a href=\"https://github.com/nicholasjhenry\" rel=\"nofollow\">https://github.com/nicholasjhenry</a><br>\n‘The
    Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>\n<a href=\"https://2020.elixirconf.com/speakers/120/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/120/talk</a><br>\nBrian
    Marick — <a href=\"https://github.com/marick/\" rel=\"nofollow\">https://github.com/marick/</a><br>\n‘Tricks
    and tools for writing Elixir tests’ — <a href=\"https://2020.elixirconf.com/speakers/109/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/109/talk</a><br>\nGerman
    Velasco — <a href=\"http://www.germanvelasco.com/\" rel=\"nofollow\">http://www.germanvelasco.com/</a><br>\n‘Testing
    LiveView’ — <a href=\"https://2020.elixirconf.com/speakers/119/talk\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/119/talk</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJapa
    Swadia — <a href=\"https://github.com/japa-swadia\" rel=\"nofollow\">https://github.com/japa-swadia</a><br>\nPodium
    — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\n‘Domain-Driven
    Design with Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/105/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/105/talk</a><br>\nDesign
    Patterns — <a href=\"https://en.wikipedia.org/wiki/Design_Patterns\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Design_Patterns</a><br>\nJustus
    Eapen Social Handle — @JustusEapen<br>\nEric Oestrich Social Handle — @EricOestrich<br>\nSundi
    Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia,
    Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>\n      "
- title: Mark Windholtz on Domain-Driven Design (DDD)
  slug: s4e14-windholtz
  link: https://smartlogic.io/podcast/elixir-wizards/s4e14-windholtz
  guid: e18fef05-5ebe-42a1-9317-b193dfa84cd2
  pubDate: Thu, 20 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 20, 2020
  description: "Domain-driven design and extreme programming can help bridge the gap
    between development and business, and today we invite Mark Windholtz from Agile
    DNA to talk about how! Mark starts out by telling us about his early work in extreme
    programming before agile was a term and how he switched from Rails to Elixir after
    realizing its power for implementing domain-driven design. We take a deep dive
    with him into what these concepts mean, hearing him weigh in on how DDD can help
    architecture accommodate both development and business oriented complexities.
    For Mark, development and business teams must get a better understanding of each
    other’s jargon, and DDD is a way to accomplish this. The goal is to find a way
    of building a solid software core and to move away from features to systems thinking,
    whereby flexible software can make it more possible to do agile on the business
    side. We chat about some of the practices and principles that come into play when
    implementing DDD for Mark, and he details concepts like ubiquitous language, bounded
    contexts, and how to focus on the core domain by exploring models using tactical
    and strategic patterns. Along with this, Mark discusses users not being a domain
    concept, the challenges of getting new terms to stick in teams’ minds, and the
    task of refactoring code to reflect updated glossaries. Near the end of our conversation,
    Mark drills down on how DDD can optimize team efficiency. In closing, we get to
    know Chris Bell from ElixirTalk a little better in this week’s edition of Pattern
    Matching with Todd!\nKey Points From This Episode:\nThoughts on SpaceEx and their
    approach to engineering: system versus feature optimization.\nMark’s background
    in extreme programming, how he got started with AgileDNA, and the work they do
    there.\nA definition of extreme programming that adds engineering practices to
    Scrum.\nElixir’s superior ability to do DDD compared to Rails and how Mark got
    started using it.\nA brief introduction to domain-driven design, an approach to
    simplifying complex software.\nHow architecture needs to accommodate essential
    as well as accidental complexity.\nElixir’s ability to accommodate the building
    of domain models with well-separated code chunks.\nPrinciples of ubiquitous language
    and bounded contexts that make up DDD for Mark.\nUbiquitous language helps devs
    and businesspeople understand each other.\nBounded contexts: ‘Within this space,
    this world means this thing.’\nShifting focus from trying to make not all software,
    but core software, good.\nWhat patterns are applied to use principles of ubiquitous
    language and bounded contexts.\nFinding and focusing on the core domain by exploring
    models and how to do this using tactical and strategic patterns.\nThe consequences
    of users not being a domain concept which demands having a clearer language.\nChallenges
    of getting language and concepts to stick in business people’s minds.\nRefactoring
    code to reflect updated glossaries: Technical challenges teams doing DDD face.\nSwitching
    paradigms from feature-based optimizations to building an amazing code core.\nApproaches
    to modeling: the value of exploring multiple models.\nHow teams can become more
    efficient using DDD and extreme programming.\nFinal plugs from Mark and how Agile
    DNA can help use Elixir to implement DDD.\nPattern matching: Todd gets to know
    more about Chris Bell from ElixirTalk.\nHow Chris got into programming, what he’d
    do if not be a programmer, and more!\nWhy Chris loves history, dream pop, and
    what movie he’ll watch over and over.\nWhat project Chris is most excited about
    next: Building Settlers of Catan using LiveView.\nLinks Mentioned in Today’s Episode:\nElixir
    Wizards Listener Survey — https://smr.tl/podcastsurvey\nSmartLogic — https://smartlogic.io/
    \nMark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/\nMark Windholtz
    on Twitter — https://twitter.com/windholtz\nAgile DNA — http://www.agiledna.com\nChris
    Bell on Twitter — https://twitter.com/cjbell?lang=en\nElixirTalk — http://elixirtalk.com/\nChris
    Keathley — https://keathley.io/\nElon Musk — https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\nThe
    Everyday Astronaut — https://www.youtube.com/channel/UC6uKrUWqJ1R2HMTY3LIx5Q\nRob
    Martin — https://www.linkedin.com/in/version2beta/\nPerhap — https://github.com/Perhap/perhap\nAndrew
    Hao — https://github.com/andrewhao\nFred Brooks — http://www.cs.unc.edu/~brooks/\nThe
    Mythical Man-Month — https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\nZach
    Thomas — https://github.com/zdcthomas?language=elixir&tab=stars\n1917 — https://www.imdb.com/title/tt8579674/\nReal
    Estate — https://www.realestatetheband.com/\nGalaxie 500 — https://pitchfork.com/artists/1673-galaxie-500/\nStar
    Trek: First Contact — https://www.imdb.com/title/tt0117731/\nStar Trek: The Wrath
    of Khan — https://www.imdb.com/title/tt0084726/\nLiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nLonestar
    Elixir — https://lonestarelixir.com/\n Special Guest: Mark Windholtz.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+oBfiEP0c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e18fef05-5ebe-42a1-9317-b193dfa84cd2.mp3
    length: '42382398'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Today we invite Mark Windholtz from Agile DNA to talk about how domain-driven
      design and extreme programming can help bridge the gap between development and
      business.
    duration: '58:51'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e18fef05-5ebe-42a1-9317-b193dfa84cd2/cover.jpg?v=1
    summary: "\n        <p>Domain-driven design and extreme programming can help bridge
      the gap between development and business, and today we invite Mark Windholtz
      from Agile DNA to talk about how! Mark starts out by telling us about his early
      work in extreme programming before agile was a term and how he switched from
      Rails to Elixir after realizing its power for implementing domain-driven design.
      We take a deep dive with him into what these concepts mean, hearing him weigh
      in on how DDD can help architecture accommodate both development and business
      oriented complexities. For Mark, development and business teams must get a better
      understanding of each other’s jargon, and DDD is a way to accomplish this. The
      goal is to find a way of building a solid software core and to move away from
      features to systems thinking, whereby flexible software can make it more possible
      to do agile on the business side. We chat about some of the practices and principles
      that come into play when implementing DDD for Mark, and he details concepts
      like ubiquitous language, bounded contexts, and how to focus on the core domain
      by exploring models using tactical and strategic patterns. Along with this,
      Mark discusses users not being a domain concept, the challenges of getting new
      terms to stick in teams’ minds, and the task of refactoring code to reflect
      updated glossaries. Near the end of our conversation, Mark drills down on how
      DDD can optimize team efficiency. In closing, we get to know Chris Bell from
      ElixirTalk a little better in this week’s edition of Pattern Matching with Todd!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Thoughts on SpaceEx and their approach
      to engineering: system versus feature optimization.</li>\n<li>Mark’s background
      in extreme programming, how he got started with AgileDNA, and the work they
      do there.</li>\n<li>A definition of extreme programming that adds engineering
      practices to Scrum.</li>\n<li>Elixir’s superior ability to do DDD compared to
      Rails and how Mark got started using it.</li>\n<li>A brief introduction to domain-driven
      design, an approach to simplifying complex software.</li>\n<li>How architecture
      needs to accommodate essential as well as accidental complexity.</li>\n<li>Elixir’s
      ability to accommodate the building of domain models with well-separated code
      chunks.</li>\n<li>Principles of ubiquitous language and bounded contexts that
      make up DDD for Mark.</li>\n<li>Ubiquitous language helps devs and businesspeople
      understand each other.</li>\n<li>Bounded contexts: ‘Within this space, this
      world means this thing.’</li>\n<li>Shifting focus from trying to make not all
      software, but core software, good.</li>\n<li>What patterns are applied to use
      principles of ubiquitous language and bounded contexts.</li>\n<li>Finding and
      focusing on the core domain by exploring models and how to do this using tactical
      and strategic patterns.</li>\n<li>The consequences of users not being a domain
      concept which demands having a clearer language.</li>\n<li>Challenges of getting
      language and concepts to stick in business people’s minds.</li>\n<li>Refactoring
      code to reflect updated glossaries: Technical challenges teams doing DDD face.</li>\n<li>Switching
      paradigms from feature-based optimizations to building an amazing code core.</li>\n<li>Approaches
      to modeling: the value of exploring multiple models.</li>\n<li>How teams can
      become more efficient using DDD and extreme programming.</li>\n<li>Final plugs
      from Mark and how Agile DNA can help use Elixir to implement DDD.</li>\n<li>Pattern
      matching: Todd gets to know more about Chris Bell from ElixirTalk.</li>\n<li>How
      Chris got into programming, what he’d do if not be a programmer, and more!</li>\n<li>Why
      Chris loves history, dream pop, and what movie he’ll watch over and over.</li>\n<li>What
      project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a
      href=\"https://smr.tl/podcastsurvey\" rel=\"nofollow\">https://smr.tl/podcastsurvey</a></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nMark Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\"
      rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMark Windholtz
      on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nAgile
      DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nChris
      Bell on Twitter — <a href=\"https://twitter.com/cjbell_?lang=en\" rel=\"nofollow\">https://twitter.com/cjbell_?lang=en</a><br>\nElixirTalk
      — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>\nThe
      Everyday Astronaut — <a href=\"https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q\"
      rel=\"nofollow\">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>\nRob
      Martin — <a href=\"https://www.linkedin.com/in/version2beta/\" rel=\"nofollow\">https://www.linkedin.com/in/version2beta/</a><br>\nPerhap
      — <a href=\"https://github.com/Perhap/perhap\" rel=\"nofollow\">https://github.com/Perhap/perhap</a><br>\nAndrew
      Hao — <a href=\"https://github.com/andrewhao\" rel=\"nofollow\">https://github.com/andrewhao</a><br>\nFred
      Brooks — <a href=\"http://www.cs.unc.edu/%7Ebrooks/\" rel=\"nofollow\">http://www.cs.unc.edu/~brooks/</a><br>\nThe
      Mythical Man-Month — <a href=\"https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\"
      rel=\"nofollow\">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>\nZach
      Thomas — <a href=\"https://github.com/zdcthomas?language=elixir&tab=stars\"
      rel=\"nofollow\">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>\n1917
      — <a href=\"https://www.imdb.com/title/tt8579674/\" rel=\"nofollow\">https://www.imdb.com/title/tt8579674/</a><br>\nReal
      Estate — <a href=\"https://www.realestatetheband.com/\" rel=\"nofollow\">https://www.realestatetheband.com/</a><br>\nGalaxie
      500 — <a href=\"https://pitchfork.com/artists/1673-galaxie-500/\" rel=\"nofollow\">https://pitchfork.com/artists/1673-galaxie-500/</a><br>\nStar
      Trek: First Contact — <a href=\"https://www.imdb.com/title/tt0117731/\" rel=\"nofollow\">https://www.imdb.com/title/tt0117731/</a><br>\nStar
      Trek: The Wrath of Khan — <a href=\"https://www.imdb.com/title/tt0084726/\"
      rel=\"nofollow\">https://www.imdb.com/title/tt0084726/</a><br>\nLiveView — <a
      href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
      Guest: Mark Windholtz.</p>\n      "
  contentEncoded: "\n        <p>Domain-driven design and extreme programming can help
    bridge the gap between development and business, and today we invite Mark Windholtz
    from Agile DNA to talk about how! Mark starts out by telling us about his early
    work in extreme programming before agile was a term and how he switched from Rails
    to Elixir after realizing its power for implementing domain-driven design. We
    take a deep dive with him into what these concepts mean, hearing him weigh in
    on how DDD can help architecture accommodate both development and business oriented
    complexities. For Mark, development and business teams must get a better understanding
    of each other’s jargon, and DDD is a way to accomplish this. The goal is to find
    a way of building a solid software core and to move away from features to systems
    thinking, whereby flexible software can make it more possible to do agile on the
    business side. We chat about some of the practices and principles that come into
    play when implementing DDD for Mark, and he details concepts like ubiquitous language,
    bounded contexts, and how to focus on the core domain by exploring models using
    tactical and strategic patterns. Along with this, Mark discusses users not being
    a domain concept, the challenges of getting new terms to stick in teams’ minds,
    and the task of refactoring code to reflect updated glossaries. Near the end of
    our conversation, Mark drills down on how DDD can optimize team efficiency. In
    closing, we get to know Chris Bell from ElixirTalk a little better in this week’s
    edition of Pattern Matching with Todd!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Thoughts
    on SpaceEx and their approach to engineering: system versus feature optimization.</li>\n<li>Mark’s
    background in extreme programming, how he got started with AgileDNA, and the work
    they do there.</li>\n<li>A definition of extreme programming that adds engineering
    practices to Scrum.</li>\n<li>Elixir’s superior ability to do DDD compared to
    Rails and how Mark got started using it.</li>\n<li>A brief introduction to domain-driven
    design, an approach to simplifying complex software.</li>\n<li>How architecture
    needs to accommodate essential as well as accidental complexity.</li>\n<li>Elixir’s
    ability to accommodate the building of domain models with well-separated code
    chunks.</li>\n<li>Principles of ubiquitous language and bounded contexts that
    make up DDD for Mark.</li>\n<li>Ubiquitous language helps devs and businesspeople
    understand each other.</li>\n<li>Bounded contexts: ‘Within this space, this world
    means this thing.’</li>\n<li>Shifting focus from trying to make not all software,
    but core software, good.</li>\n<li>What patterns are applied to use principles
    of ubiquitous language and bounded contexts.</li>\n<li>Finding and focusing on
    the core domain by exploring models and how to do this using tactical and strategic
    patterns.</li>\n<li>The consequences of users not being a domain concept which
    demands having a clearer language.</li>\n<li>Challenges of getting language and
    concepts to stick in business people’s minds.</li>\n<li>Refactoring code to reflect
    updated glossaries: Technical challenges teams doing DDD face.</li>\n<li>Switching
    paradigms from feature-based optimizations to building an amazing code core.</li>\n<li>Approaches
    to modeling: the value of exploring multiple models.</li>\n<li>How teams can become
    more efficient using DDD and extreme programming.</li>\n<li>Final plugs from Mark
    and how Agile DNA can help use Elixir to implement DDD.</li>\n<li>Pattern matching:
    Todd gets to know more about Chris Bell from ElixirTalk.</li>\n<li>How Chris got
    into programming, what he’d do if not be a programmer, and more!</li>\n<li>Why
    Chris loves history, dream pop, and what movie he’ll watch over and over.</li>\n<li>What
    project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\"
    rel=\"nofollow\">https://smr.tl/podcastsurvey</a></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMark Windholtz on LinkedIn —
    <a href=\"https://www.linkedin.com/in/mwindholtz/\" rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMark
    Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nAgile
    DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nChris
    Bell on Twitter — <a href=\"https://twitter.com/cjbell_?lang=en\" rel=\"nofollow\">https://twitter.com/cjbell_?lang=en</a><br>\nElixirTalk
    — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>\nThe
    Everyday Astronaut — <a href=\"https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q\"
    rel=\"nofollow\">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>\nRob
    Martin — <a href=\"https://www.linkedin.com/in/version2beta/\" rel=\"nofollow\">https://www.linkedin.com/in/version2beta/</a><br>\nPerhap
    — <a href=\"https://github.com/Perhap/perhap\" rel=\"nofollow\">https://github.com/Perhap/perhap</a><br>\nAndrew
    Hao — <a href=\"https://github.com/andrewhao\" rel=\"nofollow\">https://github.com/andrewhao</a><br>\nFred
    Brooks — <a href=\"http://www.cs.unc.edu/%7Ebrooks/\" rel=\"nofollow\">http://www.cs.unc.edu/~brooks/</a><br>\nThe
    Mythical Man-Month — <a href=\"https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\"
    rel=\"nofollow\">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>\nZach
    Thomas — <a href=\"https://github.com/zdcthomas?language=elixir&tab=stars\" rel=\"nofollow\">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>\n1917
    — <a href=\"https://www.imdb.com/title/tt8579674/\" rel=\"nofollow\">https://www.imdb.com/title/tt8579674/</a><br>\nReal
    Estate — <a href=\"https://www.realestatetheband.com/\" rel=\"nofollow\">https://www.realestatetheband.com/</a><br>\nGalaxie
    500 — <a href=\"https://pitchfork.com/artists/1673-galaxie-500/\" rel=\"nofollow\">https://pitchfork.com/artists/1673-galaxie-500/</a><br>\nStar
    Trek: First Contact — <a href=\"https://www.imdb.com/title/tt0117731/\" rel=\"nofollow\">https://www.imdb.com/title/tt0117731/</a><br>\nStar
    Trek: The Wrath of Khan — <a href=\"https://www.imdb.com/title/tt0084726/\" rel=\"nofollow\">https://www.imdb.com/title/tt0084726/</a><br>\nLiveView
    — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
    Guest: Mark Windholtz.</p>\n      "
- title: 'Elixir Wizards Dojo: Nerves Part 2 with Connor Rigby and Todd Resudek'
  slug: s4e13b-dojo
  link: https://smartlogic.io/podcast/elixir-wizards/s4e13b-dojo
  guid: 6cf32d50-909b-4839-a690-0fdc8ec48a2f
  pubDate: Thu, 13 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 13, 2020
  description: "Welcome to the second part of our special Elixir Wizards Dojo. A mashup
    made in partnership with ElixirConf Japan. In today’s episode, we talk to Nerves
    core team members Todd Resudek and Connor Rigby about all things Nerves. But first,
    Todd leads us into a delightful digression about his enjoyment of heavy metal
    music. From metal back to Nerves, Todd chats about how he uses Nerves to monitor
    his internet connection and to automatically restart his router when certain conditions
    are met. After talking about using Flutter and Dart to build GUIs, we ask Todd
    to share another of his Nerves projects; the future of sprinklers — the Drizzle
    2000! We then explore Connor’s self-defined role in the Nerves team as the development
    head of networking libraries before discussing how easy it is to use Nerves if
    you are an Elixir user. Todd and Connor dive into their utopian visions for the
    future of Nerves and why no other IoT solutions can compete with the tooling that
    Nerves provides. We talk about FarmBot and the many features that its models have,
    including how they can pulverize weeds. This springboards the conversion into
    the increasing importance of IoT tech in the agriculture sector and how it’s likely
    to be the next billion-dollar industry. We round off the episode by giving our
    guests the space to plug themselves and they close with a request for listeners
    to Iron Maiden and Metallica’s first albums. A perfect compliment to the first
    installment of the Elixir Wizards Dojo, tune in to learn more about the Nerves
    Project.\nKey Points From This Episode:\nIntroducing our guests and this episode’s
    connection to ElixirConf Japan. \nConnor and Todd lead a chat on the history and
    subgenres of heavy metal music.\nTodd talks about using Nerves to monitor his
    internet connection and restart his router.\nBuilding a user interface for Nerves’s
    projects using Flutter; Google’s UI toolkit. \nBest practices for developing apps
    with a specific focus on GUI apps.\nHear about the Drizzle 2000! Todd’s sprinkler
    controller system that runs on Nerves.\nTodd and Connor’s respective roles as
    a part of the Nerves core team. \nThe benefit of using Nerves; once it’s booted
    it’s a regular Elixir app. \nWhat a kiosk terminal is and how you would go about
    internationalizing one.\nExploring the future of Nerves and hardware development.\nComparing
    Nerves to other IoT solutions; in conclusion, nothing can compete. \nDifferent
    FarmBot system models that all use Nerves to grow food for you.\nUsing Nerves
    to encode and record video or to create a live stream. \nWhy integrating IoT into
    the agricultural sector will be the next billion-dollar industry.\nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nElixirConf — https://elixirconf.com/2020\nConnor
    Rigby GitHub — https://github.com/ConnorRigby\nTodd Resudek Twitter — https://twitter.com/sprsmpl\nTodd
    Resudek GitHub — https://github.com/supersimple\nSimplebet — https://simplebet.io/\nFlutter
    — https://flutter.dev/\nBinary Noggin — https://binarynoggin.com/\nNerves Project
    — https://www.nerves-project.org/\nNerves Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution\nNerves
    Vintage Net GitHub — https://github.com/nerves-networking/vintagenet\nNerves Web
    Kiosk GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3\nRhapsody of
    Fire — https://www.rhapsodyoffire.com/\nRonnie James Dio — https://www.ronniejamesdio.com/\nDragonForce
    — https://dragonforce.com/\nBlack Sabbath — https://www.blacksabbath.com/\nDeep
    Purple — https://deeppurple.com/\nIron Maiden — https://ironmaiden.com\nJudas
    Priest — http://www.judaspriest.com/home/\nSam Dunn — https://www.imdb.com/name/nm0242757/\nRyan
    Holiday — https://ryanholiday.net/\nArjen Lucassen — https://www.arjenlucassen.com\nMetallica
    — https://www.metallica.com/\nSan Francisco Symphony — https://www.sfsymphony.org/\nFping
    — https://fping.org/\nDart — https://dart.dev/\nReact Native — https://reactnative.dev/\nScenic
    — https://kry10.com/\nPhoenix Framework — https://www.phoenixframework.org/\nDrizzler
    2000 GitHub — https://github.com/supersimple/drizzle\nDitch Witch — https://www.ditchwitch.com/\nJon
    Carstens — https://twitter.com/joncarstens?lang=en\nLe Tote — https://letote.com/\nElectron
    — https://www.electronjs.org/\nMatthew Ludwigs — https://www.linkedin.com/in/mattludwigs/\nSmartRent
    — https://smartrent.com/\nSophie Debenedetto — http://sophiedebenedetto.nyc/\nFarmBot
    — https://farm.bot/\nMembrane Framework — https://www.membraneframework.org/\nGreg
    Mefford — https://www.linkedin.com/in/ferggo/\nOmni-eye GitHub — https://github.com/GregMefford/omni_eye\nBowery
    Farming — https://boweryfarming.com/\nJohn Deere — https://www.deere.com\nShow
    Notes - Japanese\nElixir Wizards Dojo 第2部 Connor Rigby と Todd Resudek\nEpisode
    S4E13b: 概要\nElixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd
    Resudek と Connor Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
    2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
    Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。\nこのエピソードのみどころ\nゲストの紹介と、このエピソードとElixirConf
    JPとのコネクションについて\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の\nFultter
    というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス\nDrizzle
    2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム\nToddとConnorのNervesコアチームにおけるそれぞれの役割\nNervesを使う利点:
    一度起動すると通常のElixirアプリになる\nキオスク端末とは何か，どのようにキオスク端末を国際化するか\nNervesとハードウェア開発の将来の探求\nNervesと他のIoTソリューションの比較:
    結論としては，Nervesに敵うものはない\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法\nIoTを農業分野に統合することが次の10億ドル産業になる理由
    Special Guests: Connor Rigby and Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+JKHYdMz-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cf32d50-909b-4839-a690-0fdc8ec48a2f.mp3
    length: '61996266'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, in partnership with ElixirConf Japan, we talk to
      Nerves core team members about all things Nerves.
    duration: '42:41'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cf32d50-909b-4839-a690-0fdc8ec48a2f/cover.jpg?v=1
    summary: "\n        <p>Welcome to the second part of our special Elixir Wizards
      Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode,
      we talk to Nerves core team members Todd Resudek and Connor Rigby about all
      things Nerves. But first, Todd leads us into a delightful digression about his
      enjoyment of heavy metal music. From metal back to Nerves, Todd chats about
      how he uses Nerves to monitor his internet connection and to automatically restart
      his router when certain conditions are met. After talking about using Flutter
      and Dart to build GUIs, we ask Todd to share another of his Nerves projects;
      the future of sprinklers — the Drizzle 2000! We then explore Connor’s self-defined
      role in the Nerves team as the development head of networking libraries before
      discussing how easy it is to use Nerves if you are an Elixir user. Todd and
      Connor dive into their utopian visions for the future of Nerves and why no other
      IoT solutions can compete with the tooling that Nerves provides. We talk about
      FarmBot and the many features that its models have, including how they can pulverize
      weeds. This springboards the conversion into the increasing importance of IoT
      tech in the agriculture sector and how it’s likely to be the next billion-dollar
      industry. We round off the episode by giving our guests the space to plug themselves
      and they close with a request for listeners to Iron Maiden and Metallica’s first
      albums. A perfect compliment to the first installment of the Elixir Wizards
      Dojo, tune in to learn more about the Nerves Project.</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>Introducing our guests and this episode’s connection
      to ElixirConf Japan. </li>\n<li>Connor and Todd lead a chat on the history and
      subgenres of heavy metal music.</li>\n<li>Todd talks about using Nerves to monitor
      his internet connection and restart his router.</li>\n<li>Building a user interface
      for Nerves’s projects using Flutter; Google’s UI toolkit. </li>\n<li>Best practices
      for developing apps with a specific focus on GUI apps.</li>\n<li>Hear about
      the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>\n<li>Todd
      and Connor’s respective roles as a part of the Nerves core team. </li>\n<li>The
      benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>\n<li>What
      a kiosk terminal is and how you would go about internationalizing one.</li>\n<li>Exploring
      the future of Nerves and hardware development.</li>\n<li>Comparing Nerves to
      other IoT solutions; in conclusion, nothing can compete. </li>\n<li>Different
      FarmBot system models that all use Nerves to grow food for you.</li>\n<li>Using
      Nerves to encode and record video or to create a live stream. </li>\n<li>Why
      integrating IoT into the agricultural sector will be the next billion-dollar
      industry.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nConnor
      Rigby GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nTodd
      Resudek Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
      Resudek GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nSimplebet
      — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a><br>\nFlutter
      — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
      Project GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
      Vintage Net GitHub — <a href=\"https://github.com/nerves-networking/vintage_net\"
      rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nNerves
      Web Kiosk GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
      rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nRhapsody
      of Fire — <a href=\"https://www.rhapsodyoffire.com/\" rel=\"nofollow\">https://www.rhapsodyoffire.com/</a><br>\nRonnie
      James Dio — <a href=\"https://www.ronniejamesdio.com/\" rel=\"nofollow\">https://www.ronniejamesdio.com/</a><br>\nDragonForce
      — <a href=\"https://dragonforce.com/\" rel=\"nofollow\">https://dragonforce.com/</a><br>\nBlack
      Sabbath — <a href=\"https://www.blacksabbath.com/\" rel=\"nofollow\">https://www.blacksabbath.com/</a><br>\nDeep
      Purple — <a href=\"https://deeppurple.com/\" rel=\"nofollow\">https://deeppurple.com/</a><br>\nIron
      Maiden — <a href=\"https://ironmaiden.com\" rel=\"nofollow\">https://ironmaiden.com</a><br>\nJudas
      Priest — <a href=\"http://www.judaspriest.com/home/\" rel=\"nofollow\">http://www.judaspriest.com/home/</a><br>\nSam
      Dunn — <a href=\"https://www.imdb.com/name/nm0242757/\" rel=\"nofollow\">https://www.imdb.com/name/nm0242757/</a><br>\nRyan
      Holiday — <a href=\"https://ryanholiday.net/\" rel=\"nofollow\">https://ryanholiday.net/</a><br>\nArjen
      Lucassen — <a href=\"https://www.arjenlucassen.com\" rel=\"nofollow\">https://www.arjenlucassen.com</a><br>\nMetallica
      — <a href=\"https://www.metallica.com/\" rel=\"nofollow\">https://www.metallica.com/</a><br>\nSan
      Francisco Symphony — <a href=\"https://www.sfsymphony.org/\" rel=\"nofollow\">https://www.sfsymphony.org/</a><br>\nFping
      — <a href=\"https://fping.org/\" rel=\"nofollow\">https://fping.org/</a><br>\nDart
      — <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nReact
      Native — <a href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\nScenic
      — <a href=\"https://kry10.com/\" rel=\"nofollow\">https://kry10.com/</a><br>\nPhoenix
      Framework — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nDrizzler
      2000 GitHub — <a href=\"https://github.com/supersimple/drizzle\" rel=\"nofollow\">https://github.com/supersimple/drizzle</a><br>\nDitch
      Witch — <a href=\"https://www.ditchwitch.com/\" rel=\"nofollow\">https://www.ditchwitch.com/</a><br>\nJon
      Carstens — <a href=\"https://twitter.com/joncarstens?lang=en\" rel=\"nofollow\">https://twitter.com/joncarstens?lang=en</a><br>\nLe
      Tote — <a href=\"https://letote.com/\" rel=\"nofollow\">https://letote.com/</a><br>\nElectron
      — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\nMatthew
      Ludwigs — <a href=\"https://www.linkedin.com/in/mattludwigs/\" rel=\"nofollow\">https://www.linkedin.com/in/mattludwigs/</a><br>\nSmartRent
      — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nSophie
      Debenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFarmBot
      — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nMembrane
      Framework — <a href=\"https://www.membraneframework.org/\" rel=\"nofollow\">https://www.membraneframework.org/</a><br>\nGreg
      Mefford — <a href=\"https://www.linkedin.com/in/ferggo/\" rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nOmni-eye
      GitHub — <a href=\"https://github.com/GregMefford/omni_eye\" rel=\"nofollow\">https://github.com/GregMefford/omni_eye</a><br>\nBowery
      Farming — <a href=\"https://boweryfarming.com/\" rel=\"nofollow\">https://boweryfarming.com/</a><br>\nJohn
      Deere — <a href=\"https://www.deere.com\" rel=\"nofollow\">https://www.deere.com</a></p>\n\n<p><strong>Show
      Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd
      Resudek</p>\n\n<p>Episode S4E13b: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf
      JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor
      Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
      2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
      Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、このエピソードとElixirConf
      JPとのコネクションについて<br>\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>\nFultter
      というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>\nDrizzle
      2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>\nToddとConnorのNervesコアチームにおけるそれぞれの役割<br>\nNervesを使う利点:
      一度起動すると通常のElixirアプリになる<br>\nキオスク端末とは何か，どのようにキオスク端末を国際化するか<br>\nNervesとハードウェア開発の将来の探求<br>\nNervesと他のIoTソリューションの比較:
      結論としては，Nervesに敵うものはない<br>\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>\nIoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special
      Guests: Connor Rigby and Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the second part of our special Elixir Wizards
    Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode,
    we talk to Nerves core team members Todd Resudek and Connor Rigby about all things
    Nerves. But first, Todd leads us into a delightful digression about his enjoyment
    of heavy metal music. From metal back to Nerves, Todd chats about how he uses
    Nerves to monitor his internet connection and to automatically restart his router
    when certain conditions are met. After talking about using Flutter and Dart to
    build GUIs, we ask Todd to share another of his Nerves projects; the future of
    sprinklers — the Drizzle 2000! We then explore Connor’s self-defined role in the
    Nerves team as the development head of networking libraries before discussing
    how easy it is to use Nerves if you are an Elixir user. Todd and Connor dive into
    their utopian visions for the future of Nerves and why no other IoT solutions
    can compete with the tooling that Nerves provides. We talk about FarmBot and the
    many features that its models have, including how they can pulverize weeds. This
    springboards the conversion into the increasing importance of IoT tech in the
    agriculture sector and how it’s likely to be the next billion-dollar industry.
    We round off the episode by giving our guests the space to plug themselves and
    they close with a request for listeners to Iron Maiden and Metallica’s first albums.
    A perfect compliment to the first installment of the Elixir Wizards Dojo, tune
    in to learn more about the Nerves Project.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    our guests and this episode’s connection to ElixirConf Japan. </li>\n<li>Connor
    and Todd lead a chat on the history and subgenres of heavy metal music.</li>\n<li>Todd
    talks about using Nerves to monitor his internet connection and restart his router.</li>\n<li>Building
    a user interface for Nerves’s projects using Flutter; Google’s UI toolkit. </li>\n<li>Best
    practices for developing apps with a specific focus on GUI apps.</li>\n<li>Hear
    about the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>\n<li>Todd
    and Connor’s respective roles as a part of the Nerves core team. </li>\n<li>The
    benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>\n<li>What
    a kiosk terminal is and how you would go about internationalizing one.</li>\n<li>Exploring
    the future of Nerves and hardware development.</li>\n<li>Comparing Nerves to other
    IoT solutions; in conclusion, nothing can compete. </li>\n<li>Different FarmBot
    system models that all use Nerves to grow food for you.</li>\n<li>Using Nerves
    to encode and record video or to create a live stream. </li>\n<li>Why integrating
    IoT into the agricultural sector will be the next billion-dollar industry.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\"
    rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nConnor Rigby GitHub — <a
    href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nTodd
    Resudek Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
    Resudek GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nSimplebet
    — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a><br>\nFlutter
    — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
    Project GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
    Vintage Net GitHub — <a href=\"https://github.com/nerves-networking/vintage_net\"
    rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nNerves
    Web Kiosk GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
    rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nRhapsody
    of Fire — <a href=\"https://www.rhapsodyoffire.com/\" rel=\"nofollow\">https://www.rhapsodyoffire.com/</a><br>\nRonnie
    James Dio — <a href=\"https://www.ronniejamesdio.com/\" rel=\"nofollow\">https://www.ronniejamesdio.com/</a><br>\nDragonForce
    — <a href=\"https://dragonforce.com/\" rel=\"nofollow\">https://dragonforce.com/</a><br>\nBlack
    Sabbath — <a href=\"https://www.blacksabbath.com/\" rel=\"nofollow\">https://www.blacksabbath.com/</a><br>\nDeep
    Purple — <a href=\"https://deeppurple.com/\" rel=\"nofollow\">https://deeppurple.com/</a><br>\nIron
    Maiden — <a href=\"https://ironmaiden.com\" rel=\"nofollow\">https://ironmaiden.com</a><br>\nJudas
    Priest — <a href=\"http://www.judaspriest.com/home/\" rel=\"nofollow\">http://www.judaspriest.com/home/</a><br>\nSam
    Dunn — <a href=\"https://www.imdb.com/name/nm0242757/\" rel=\"nofollow\">https://www.imdb.com/name/nm0242757/</a><br>\nRyan
    Holiday — <a href=\"https://ryanholiday.net/\" rel=\"nofollow\">https://ryanholiday.net/</a><br>\nArjen
    Lucassen — <a href=\"https://www.arjenlucassen.com\" rel=\"nofollow\">https://www.arjenlucassen.com</a><br>\nMetallica
    — <a href=\"https://www.metallica.com/\" rel=\"nofollow\">https://www.metallica.com/</a><br>\nSan
    Francisco Symphony — <a href=\"https://www.sfsymphony.org/\" rel=\"nofollow\">https://www.sfsymphony.org/</a><br>\nFping
    — <a href=\"https://fping.org/\" rel=\"nofollow\">https://fping.org/</a><br>\nDart
    — <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nReact
    Native — <a href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\nScenic
    — <a href=\"https://kry10.com/\" rel=\"nofollow\">https://kry10.com/</a><br>\nPhoenix
    Framework — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nDrizzler
    2000 GitHub — <a href=\"https://github.com/supersimple/drizzle\" rel=\"nofollow\">https://github.com/supersimple/drizzle</a><br>\nDitch
    Witch — <a href=\"https://www.ditchwitch.com/\" rel=\"nofollow\">https://www.ditchwitch.com/</a><br>\nJon
    Carstens — <a href=\"https://twitter.com/joncarstens?lang=en\" rel=\"nofollow\">https://twitter.com/joncarstens?lang=en</a><br>\nLe
    Tote — <a href=\"https://letote.com/\" rel=\"nofollow\">https://letote.com/</a><br>\nElectron
    — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\nMatthew
    Ludwigs — <a href=\"https://www.linkedin.com/in/mattludwigs/\" rel=\"nofollow\">https://www.linkedin.com/in/mattludwigs/</a><br>\nSmartRent
    — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nSophie
    Debenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFarmBot
    — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nMembrane
    Framework — <a href=\"https://www.membraneframework.org/\" rel=\"nofollow\">https://www.membraneframework.org/</a><br>\nGreg
    Mefford — <a href=\"https://www.linkedin.com/in/ferggo/\" rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nOmni-eye
    GitHub — <a href=\"https://github.com/GregMefford/omni_eye\" rel=\"nofollow\">https://github.com/GregMefford/omni_eye</a><br>\nBowery
    Farming — <a href=\"https://boweryfarming.com/\" rel=\"nofollow\">https://boweryfarming.com/</a><br>\nJohn
    Deere — <a href=\"https://www.deere.com\" rel=\"nofollow\">https://www.deere.com</a></p>\n\n<p><strong>Show
    Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd
    Resudek</p>\n\n<p>Episode S4E13b: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf
    JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor Rigby
    とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
    2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
    Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、このエピソードとElixirConf
    JPとのコネクションについて<br>\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>\nFultter
    というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>\nDrizzle
    2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>\nToddとConnorのNervesコアチームにおけるそれぞれの役割<br>\nNervesを使う利点:
    一度起動すると通常のElixirアプリになる<br>\nキオスク端末とは何か，どのようにキオスク端末を国際化するか<br>\nNervesとハードウェア開発の将来の探求<br>\nNervesと他のIoTソリューションの比較:
    結論としては，Nervesに敵うものはない<br>\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>\nIoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special
    Guests: Connor Rigby and Todd Resudek.</p>\n      "
- title: 'Elixir Wizards Dojo: Nerves Part 1 with Frank Hunleth and Justin Schneck'
  slug: s4e13a-dojo
  link: https://smartlogic.io/podcast/elixir-wizards/s4e13a-dojo
  guid: 96d50b65-bc90-434e-ae8b-96b7c9f3990d
  pubDate: Tue, 11 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 11, 2020
  description: "Welcome to the first part of our extra special Elixir Wizards Dojo.
    A mashup made in partnership with ElixirConf Japan, in today’s episode, we pose
    questions asked by the Japanese Nerves community to Nerves core team members,
    Frank Hunleth and Justin Schneck. After introducing our guests, we talk about
    which companies make use of Nerve and explore its use cases by looking at FarmBot,
    an open source robotic farming tool. Justin and Frank take turns explaining the
    differences between soft and hard real-time — a springboard to show how Nerve
    excels within its ‘middle-ground of complexity’, production-orientated niche.
    From Halloween pranks to growing Sichuan chili peppers in the office, Justin and
    Frank share the projects that they’ve built using Nerves and emphasize its wide
    applicability. We discuss how Nerves has been both officially and unofficially
    ported to different devices, why people send Frank random pieces of hardware in
    the mail, and the differences between open-source and making your work publicly
    available. Justin and Frank commiserate over the challenge of working with Bluetooth
    and the beauty of the Nerves community in pushing innovation. We chat more about
    Nerves, including how you can extend the functionality of file systems, before
    Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more
    about the Nerves Project, a system that can add a great deal of agility to any
    development cycle. \nKey Points From This Episode:\nIntroducing our guests and
    this episode’s focus on the Japanese Elixir community. \nThe double-edge of broadcasting
    your excitement about Elixir projects. \nLooking at FarmBot as a practical use-case
    to show off what Nerve can do.\nDifferences between soft and hard real-time using
    FarmBot as an example.\nWhat Nerves excels at; acting as a gateway for other processors.
    \nJustin and Frank share the projects that they’ve built using Nerves.\nA brief
    digression where Justin shares his love of Chinese Sichuan cooking. \nWhat other
    markets are making use of Nerves in their product cycle.\nThe unique ‘middle-ground’
    of complexity that Nerves is best suited to address. \nPorting Nerves to different
    devices and what devices need to run Nerves. \nOpen-source versus making work
    public and how Justin took some of his Bluetooth work public.\nThe challenges
    of working with Bluetooth.\nHear how a group in the community is making a Nerves
    keyboard.  \nHow you can extend the functionality of a file system on Nerves.\nNerves’s
    features that make it such an excellent tool within a production environment.\nWhen
    deploying with Nerves Hub, learn how to configure Wi-Fi modules with different
    devices. \nStarting with a facelift, Frank and Justin share their roadmap for
    Nerves’s future. \nHow companies Vary and SmartRent have contributed to the longevity
    of Nerves.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixirConf — https://elixirconf.com/2020\nFrank Hunleth — https://www.linkedin.com/in/fhunleth/\nJustin
    Schneck — https://www.linkedin.com/in/justinschneck\nSusumu Yamazaki — https://twitter.com/zacky1972\nNerves
    Project — https://www.nerves-project.org/\nNerves Project Open Collective — https://opencollective.com/nerves-project\nNerves
    Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution\nNerves
    Kiosk System GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3\nFarmBot
    — https://farm.bot/\nRose Point — https://www.rosepoint.com/\nThe Food of Sichuan
    — https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\nLance Halvorsen
    — https://www.linkedin.com/in/lance-halvorsen-07a102/\nAtom VM GitHub — https://github.com/bettio/AtomVM\nLichee
    Pi Zero — https://licheepizero.us/\nPavlok — https://pavlok.com/\nHarald GitHub
    — https://github.com/verypossible-labs/harald\nBluetooth with Nerves Notes GitHub
    — https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\nFwup GitHub
    — https://github.com/fhunleth/fwup\n‘Building a keyboard with Elixir’ — https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\nVintage
    Net Wizard GitHub — https://github.com/nerves-networking/vintagenet_wizard\nGrizzly
    GitHub — https://github.com/smartrent/grizzly\nSmartRent Careers — https://smartrent.com/careers/\nVery
    Possible Careers — https://www.verypossible.com/careers\nShow Notes - Japanese\nElixir
    Wizards Dojo 第一部 Frank Hunleth と Justin Shneck\nEpisode S4E13a: 概要\nElixir Wizards
    Dojo スペシャル番組の第一部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
    Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
    プロジェクトについてより詳しく知りたいという人は、是非聴いてください。\nこのエピソードのみどころ\nゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点\nElixirプロジェクトについての興奮を広める上での「両刃」\nファームボットに見るNervesが実現できる実事例\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い\nNervesの何が優れているのか:
    他のプロセッサへのゲートウェイの役割\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々\nJustinが愛する四川料理についての軽い脱線\nNervesを製品サイクルに応用する他のマーケットや事例\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
    \nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか\nBluetoothの開発作業のチャレンジ\nコミュニティのグループがどのようにNervesキーボードを作っているか
    \nどのようにNervesのファイルシステムの機能性を拡張するか\n本番環境で優れたツールとなる上でのNervesの機能\n Special Guests:
    Frank Hunleth and Justin Schneck.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qeBvur8Z
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/96d50b65-bc90-434e-ae8b-96b7c9f3990d.mp3
    length: '78689808'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, in partnership with ElixirConf Japan, we pose questions
      asked by the Japanese Nerves community to Nerves core team members. Make sure
      to tune in today and stay tuned for part 2!
    duration: '54:17'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/96d50b65-bc90-434e-ae8b-96b7c9f3990d/cover.jpg?v=1
    summary: "\n        <p>Welcome to the first part of our extra special Elixir Wizards
      Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode,
      we pose questions asked by the Japanese Nerves community to Nerves core team
      members, Frank Hunleth and Justin Schneck. After introducing our guests, we
      talk about which companies make use of Nerve and explore its use cases by looking
      at FarmBot, an open source robotic farming tool. Justin and Frank take turns
      explaining the differences between soft and hard real-time — a springboard to
      show how Nerve excels within its ‘middle-ground of complexity’, production-orientated
      niche. From Halloween pranks to growing Sichuan chili peppers in the office,
      Justin and Frank share the projects that they’ve built using Nerves and emphasize
      its wide applicability. We discuss how Nerves has been both officially and unofficially
      ported to different devices, why people send Frank random pieces of hardware
      in the mail, and the differences between open-source and making your work publicly
      available. Justin and Frank commiserate over the challenge of working with Bluetooth
      and the beauty of the Nerves community in pushing innovation. We chat more about
      Nerves, including how you can extend the functionality of file systems, before
      Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn
      more about the Nerves Project, a system that can add a great deal of agility
      to any development cycle. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      our guests and this episode’s focus on the Japanese Elixir community. </li>\n<li>The
      double-edge of broadcasting your excitement about Elixir projects. </li>\n<li>Looking
      at FarmBot as a practical use-case to show off what Nerve can do.</li>\n<li>Differences
      between soft and hard real-time using FarmBot as an example.</li>\n<li>What
      Nerves excels at; acting as a gateway for other processors. </li>\n<li>Justin
      and Frank share the projects that they’ve built using Nerves.</li>\n<li>A brief
      digression where Justin shares his love of Chinese Sichuan cooking. </li>\n<li>What
      other markets are making use of Nerves in their product cycle.</li>\n<li>The
      unique ‘middle-ground’ of complexity that Nerves is best suited to address.
      </li>\n<li>Porting Nerves to different devices and what devices need to run
      Nerves. </li>\n<li>Open-source versus making work public and how Justin took
      some of his Bluetooth work public.</li>\n<li>The challenges of working with
      Bluetooth.</li>\n<li>Hear how a group in the community is making a Nerves keyboard.<br></li>\n<li>How
      you can extend the functionality of a file system on Nerves.</li>\n<li>Nerves’s
      features that make it such an excellent tool within a production environment.</li>\n<li>When
      deploying with Nerves Hub, learn how to configure Wi-Fi modules with different
      devices. </li>\n<li>Starting with a facelift, Frank and Justin share their roadmap
      for Nerves’s future. </li>\n<li>How companies Vary and SmartRent have contributed
      to the longevity of Nerves.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nFrank
      Hunleth — <a href=\"https://www.linkedin.com/in/fhunleth/\" rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nJustin
      Schneck — <a href=\"https://www.linkedin.com/in/justinschneck\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck</a><br>\nSusumu
      Yamazaki — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
      Project Open Collective — <a href=\"https://opencollective.com/nerves-project\"
      rel=\"nofollow\">https://opencollective.com/nerves-project</a><br>\nNerves Project
      GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
      Kiosk System GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
      rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nFarmBot
      — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nRose
      Point — <a href=\"https://www.rosepoint.com/\" rel=\"nofollow\">https://www.rosepoint.com/</a><br>\nThe
      Food of Sichuan — <a href=\"https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\"
      rel=\"nofollow\">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>\nLance
      Halvorsen — <a href=\"https://www.linkedin.com/in/lance-halvorsen-07a102/\"
      rel=\"nofollow\">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>\nAtom
      VM GitHub — <a href=\"https://github.com/bettio/AtomVM\" rel=\"nofollow\">https://github.com/bettio/AtomVM</a><br>\nLichee
      Pi Zero — <a href=\"https://licheepizero.us/\" rel=\"nofollow\">https://licheepizero.us/</a><br>\nPavlok
      — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nHarald
      GitHub — <a href=\"https://github.com/verypossible-labs/harald\" rel=\"nofollow\">https://github.com/verypossible-labs/harald</a><br>\nBluetooth
      with Nerves Notes GitHub — <a href=\"https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\"
      rel=\"nofollow\">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>\nFwup
      GitHub — <a href=\"https://github.com/fhunleth/fwup\" rel=\"nofollow\">https://github.com/fhunleth/fwup</a><br>\n‘Building
      a keyboard with Elixir’ — <a href=\"https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\"
      rel=\"nofollow\">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>\nVintage
      Net Wizard GitHub — <a href=\"https://github.com/nerves-networking/vintage_net_wizard\"
      rel=\"nofollow\">https://github.com/nerves-networking/vintage_net_wizard</a><br>\nGrizzly
      GitHub — <a href=\"https://github.com/smartrent/grizzly\" rel=\"nofollow\">https://github.com/smartrent/grizzly</a><br>\nSmartRent
      Careers — <a href=\"https://smartrent.com/careers/\" rel=\"nofollow\">https://smartrent.com/careers/</a><br>\nVery
      Possible Careers — <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a></p>\n\n<p><strong>Show
      Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第一部 Frank Hunleth と
      Justin Shneck</p>\n\n<p>Episode S4E13a: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf
      JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
      Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
      プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>\nElixirプロジェクトについての興奮を広める上での「両刃」<br>\nファームボットに見るNervesが実現できる実事例<br>\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>\nNervesの何が優れているのか:
      他のプロセッサへのゲートウェイの役割<br>\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>\nJustinが愛する四川料理についての軽い脱線<br>\nNervesを製品サイクルに応用する他のマーケットや事例<br>\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
      <br>\nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>\nBluetoothの開発作業のチャレンジ<br>\nコミュニティのグループがどのようにNervesキーボードを作っているか
      <br>\nどのようにNervesのファイルシステムの機能性を拡張するか<br>\n本番環境で優れたツールとなる上でのNervesの機能</p><p>Special
      Guests: Frank Hunleth and Justin Schneck.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the first part of our extra special Elixir
    Wizards Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode,
    we pose questions asked by the Japanese Nerves community to Nerves core team members,
    Frank Hunleth and Justin Schneck. After introducing our guests, we talk about
    which companies make use of Nerve and explore its use cases by looking at FarmBot,
    an open source robotic farming tool. Justin and Frank take turns explaining the
    differences between soft and hard real-time — a springboard to show how Nerve
    excels within its ‘middle-ground of complexity’, production-orientated niche.
    From Halloween pranks to growing Sichuan chili peppers in the office, Justin and
    Frank share the projects that they’ve built using Nerves and emphasize its wide
    applicability. We discuss how Nerves has been both officially and unofficially
    ported to different devices, why people send Frank random pieces of hardware in
    the mail, and the differences between open-source and making your work publicly
    available. Justin and Frank commiserate over the challenge of working with Bluetooth
    and the beauty of the Nerves community in pushing innovation. We chat more about
    Nerves, including how you can extend the functionality of file systems, before
    Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more
    about the Nerves Project, a system that can add a great deal of agility to any
    development cycle. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    our guests and this episode’s focus on the Japanese Elixir community. </li>\n<li>The
    double-edge of broadcasting your excitement about Elixir projects. </li>\n<li>Looking
    at FarmBot as a practical use-case to show off what Nerve can do.</li>\n<li>Differences
    between soft and hard real-time using FarmBot as an example.</li>\n<li>What Nerves
    excels at; acting as a gateway for other processors. </li>\n<li>Justin and Frank
    share the projects that they’ve built using Nerves.</li>\n<li>A brief digression
    where Justin shares his love of Chinese Sichuan cooking. </li>\n<li>What other
    markets are making use of Nerves in their product cycle.</li>\n<li>The unique
    ‘middle-ground’ of complexity that Nerves is best suited to address. </li>\n<li>Porting
    Nerves to different devices and what devices need to run Nerves. </li>\n<li>Open-source
    versus making work public and how Justin took some of his Bluetooth work public.</li>\n<li>The
    challenges of working with Bluetooth.</li>\n<li>Hear how a group in the community
    is making a Nerves keyboard.<br></li>\n<li>How you can extend the functionality
    of a file system on Nerves.</li>\n<li>Nerves’s features that make it such an excellent
    tool within a production environment.</li>\n<li>When deploying with Nerves Hub,
    learn how to configure Wi-Fi modules with different devices. </li>\n<li>Starting
    with a facelift, Frank and Justin share their roadmap for Nerves’s future. </li>\n<li>How
    companies Vary and SmartRent have contributed to the longevity of Nerves.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\"
    rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nFrank Hunleth — <a href=\"https://www.linkedin.com/in/fhunleth/\"
    rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nJustin Schneck
    — <a href=\"https://www.linkedin.com/in/justinschneck\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck</a><br>\nSusumu
    Yamazaki — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
    Project Open Collective — <a href=\"https://opencollective.com/nerves-project\"
    rel=\"nofollow\">https://opencollective.com/nerves-project</a><br>\nNerves Project
    GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
    Kiosk System GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
    rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nFarmBot
    — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nRose
    Point — <a href=\"https://www.rosepoint.com/\" rel=\"nofollow\">https://www.rosepoint.com/</a><br>\nThe
    Food of Sichuan — <a href=\"https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\"
    rel=\"nofollow\">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>\nLance
    Halvorsen — <a href=\"https://www.linkedin.com/in/lance-halvorsen-07a102/\" rel=\"nofollow\">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>\nAtom
    VM GitHub — <a href=\"https://github.com/bettio/AtomVM\" rel=\"nofollow\">https://github.com/bettio/AtomVM</a><br>\nLichee
    Pi Zero — <a href=\"https://licheepizero.us/\" rel=\"nofollow\">https://licheepizero.us/</a><br>\nPavlok
    — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nHarald
    GitHub — <a href=\"https://github.com/verypossible-labs/harald\" rel=\"nofollow\">https://github.com/verypossible-labs/harald</a><br>\nBluetooth
    with Nerves Notes GitHub — <a href=\"https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\"
    rel=\"nofollow\">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>\nFwup
    GitHub — <a href=\"https://github.com/fhunleth/fwup\" rel=\"nofollow\">https://github.com/fhunleth/fwup</a><br>\n‘Building
    a keyboard with Elixir’ — <a href=\"https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\"
    rel=\"nofollow\">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>\nVintage
    Net Wizard GitHub — <a href=\"https://github.com/nerves-networking/vintage_net_wizard\"
    rel=\"nofollow\">https://github.com/nerves-networking/vintage_net_wizard</a><br>\nGrizzly
    GitHub — <a href=\"https://github.com/smartrent/grizzly\" rel=\"nofollow\">https://github.com/smartrent/grizzly</a><br>\nSmartRent
    Careers — <a href=\"https://smartrent.com/careers/\" rel=\"nofollow\">https://smartrent.com/careers/</a><br>\nVery
    Possible Careers — <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a></p>\n\n<p><strong>Show
    Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第一部 Frank Hunleth と Justin
    Shneck</p>\n\n<p>Episode S4E13a: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf
    JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
    Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
    プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>\nElixirプロジェクトについての興奮を広める上での「両刃」<br>\nファームボットに見るNervesが実現できる実事例<br>\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>\nNervesの何が優れているのか:
    他のプロセッサへのゲートウェイの役割<br>\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>\nJustinが愛する四川料理についての軽い脱線<br>\nNervesを製品サイクルに応用する他のマーケットや事例<br>\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
    <br>\nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>\nBluetoothの開発作業のチャレンジ<br>\nコミュニティのグループがどのようにNervesキーボードを作っているか
    <br>\nどのようにNervesのファイルシステムの機能性を拡張するか<br>\n本番環境で優れたツールとなる上でのNervesの機能</p><p>Special
    Guests: Frank Hunleth and Justin Schneck.</p>\n      "
- title: Greg Mefford on Nerves, Poncho vs Umbrella Apps, and Pre-Code Planning
  slug: s4e12-mefford
  link: https://smartlogic.io/podcast/elixir-wizards/s4e12-mefford
  guid: f66990d4-1466-41eb-aa79-c89d644f8d94
  pubDate: Thu, 06 Aug 2020 06:00:00 -0400
  pubDateFriendly: August  6, 2020
  description: "In today’s episode, we chat about system architecture, Ruby, Elixir,
    and everything in between with Greg Mefford, the senior back-end engineer for
    the Bleacher Report. We open the conversation by asking Greg about his start in
    coding, leading to a story about how Greg was that bored kid pressuring a math
    teacher to teach him QBasic. He shares how he fell in love with Ruby before discovering
    Elixir and Nerves. Having faced some challenges when learning Nerves, Greg talks
    about how he began documenting his pain points and writing documents to help onboard
    newcomers. We discuss Greg’s work with Nerves, his project aspirations, and his
    recommended resources for anyone looking to get into Nerves or Elixir. After providing
    his hot take on the latest Code BEAM V conference, we ask Greg what system architecture
    means to him. From there we get super meta about the meaning of architecture and
    what it means to translate design into practice. We touch on the struggle of understanding
    domain-driven design and Greg’s approach to pre-code planning before delving into
    how the Bleacher Report is set up. As Greg goes into details, you’ll hear why
    their servers now run on Elixir and not Ruby. Near the end of the episode, we
    talk about Poncho versus Umbrella apps, and Greg shares his passion for multi-user
    dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir and
    Nerves landscape.  \nKey Points From This Episode:\nGreg’s start in coding and
    his transition from electronics design into IT.\nWhy Greg loves Ruby and how he
    discovered the magic of Elixir. \nGreg’s contribution to the Elixir and Nerves
    community by helping onboard newcomers.\nWhat Greg’s job as a senior engineer
    for Bleacher Report looks like.\nGreg recommends resources for beginners getting
    into Nerves and Elixir.  \nCreating a kid’s game using Nerves and Greg’s Blinkchain
    library.\nGreg’s take on the Code BEAM V conference and hating on the Whova app.\nWhat
    architecture means to Greg. This one gets deep. \nHow translating designs into
    software has changed over the years. \nWhy Greg struggles with the idea of domain-driven
    design.\nThe state of Extreme Programming practices and how they synergize together.\nHow
    Greg views pre-code planning; something that’s become his specialty within his
    latest job.\nThe many elements that contribute to how the Bleacher Report’s IT
    is set up. \nRuby servers versus Elixir servers and why the Bleacher Report uses
    Elixir. \nWhy the Poncho system was designed to fix Nerves issues not covered
    by Umbrella apps. \nGreg’s history creating multi-user dungeons (MUDs) and playing
    DragonRealm.\nLinks Mentioned in Today’s Episode:\nGreg Mefford LinkedIn — https://www.linkedin.com/in/ferggo/\nSmartLogic
    — https://smartlogic.io/ \nSmartLogic Jobs — https://apply.workable.com/smartlogic/\nElixirConf
    — https://elixirconf.com/2020\nBlinkchain GitHub — https://github.com/GregMefford/blinkchain\nJustin
    Schneck GitHub — https://github.com/mobileoverlord \nLe Tote — https://www.letote.com/\nJames
    Smith — https://twitter.com/st23am\nGarth Hitchens, ElixirCof 2015 — https://www.youtube.com/watch?v=kpzQrFC55q4\nNerves
    Project — https://www.nerves-project.org/documentation\nBleacher Report — https://bleacherreport.com/\nProgramming
    Elixir — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\nChris
    Keathley — https://codesync.global/speaker/chris-keathley/\nCode BEAM V Conference
    — https://codesync.global/conferences/code-beam-sto/\nWhova App — https://whova.com/\nAmos
    King — https://twitter.com/adkron?lang=en\nChristopher Keele — https://github.com/christhekeele\nSteve
    Bussey Episode — https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\nMark
    Windholtz — https://github.com/mwindholtz\nExtreme Programming — http://www.extremeprogramming.org/\nAdopting
    Elixir: From Concept to Production — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nLive
    Elixir Wizards - Betweenisode — https://www.youtube.com/watch?v=kEwxhGYEGts\nTwirp
    GitHub — https://github.com/twitchtv/twirp\nFrank Hunleth — https://github.com/fhunleth\nElixir
    Supervisor Behavior — https://hexdocs.pm/elixir/Supervisor.html\nElixir Poncho
    Projects — https://embedded-elixir.com/post/2017-05-19-poncho-projects/\nTitans
    of Text — https://www.titansoftext.com/\nMiriani — https://www.toastsoft.net/\nDragonRealms
    — https://www.play.net/dr/\nJustus Eapen Twitter — https://twitter.com/justuseapen\nEric
    Oestrich — https://twitter.com/EricOestrich Special Guest: Greg Mefford.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+77w8wp5q
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f66990d4-1466-41eb-aa79-c89d644f8d94.mp3
    length: '60611782'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, we chat about system architecture, Ruby, Elixir,
      and everything in between with Greg Mefford, the senior back-end engineer for
      the Bleacher Report.
    duration: '41:43'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f66990d4-1466-41eb-aa79-c89d644f8d94/cover.jpg?v=1
    summary: "\n        <p>In today’s episode, we chat about system architecture,
      Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end
      engineer for the Bleacher Report. We open the conversation by asking Greg about
      his start in coding, leading to a story about how Greg was that bored kid pressuring
      a math teacher to teach him QBasic. He shares how he fell in love with Ruby
      before discovering Elixir and Nerves. Having faced some challenges when learning
      Nerves, Greg talks about how he began documenting his pain points and writing
      documents to help onboard newcomers. We discuss Greg’s work with Nerves, his
      project aspirations, and his recommended resources for anyone looking to get
      into Nerves or Elixir. After providing his hot take on the latest Code BEAM
      V conference, we ask Greg what system architecture means to him. From there
      we get super meta about the meaning of architecture and what it means to translate
      design into practice. We touch on the struggle of understanding domain-driven
      design and Greg’s approach to pre-code planning before delving into how the
      Bleacher Report is set up. As Greg goes into details, you’ll hear why their
      servers now run on Elixir and not Ruby. Near the end of the episode, we talk
      about Poncho versus Umbrella apps, and Greg shares his passion for multi-user
      dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir
      and Nerves landscape.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Greg’s
      start in coding and his transition from electronics design into IT.</li>\n<li>Why
      Greg loves Ruby and how he discovered the magic of Elixir. </li>\n<li>Greg’s
      contribution to the Elixir and Nerves community by helping onboard newcomers.</li>\n<li>What
      Greg’s job as a senior engineer for Bleacher Report looks like.</li>\n<li>Greg
      recommends resources for beginners getting into Nerves and Elixir.<br></li>\n<li>Creating
      a kid’s game using Nerves and Greg’s Blinkchain library.</li>\n<li>Greg’s take
      on the Code BEAM V conference and hating on the Whova app.</li>\n<li>What architecture
      means to Greg. This one gets deep. </li>\n<li>How translating designs into software
      has changed over the years. </li>\n<li>Why Greg struggles with the idea of domain-driven
      design.</li>\n<li>The state of Extreme Programming practices and how they synergize
      together.</li>\n<li>How Greg views pre-code planning; something that’s become
      his specialty within his latest job.</li>\n<li>The many elements that contribute
      to how the Bleacher Report’s IT is set up. </li>\n<li>Ruby servers versus Elixir
      servers and why the Bleacher Report uses Elixir. </li>\n<li>Why the Poncho system
      was designed to fix Nerves issues not covered by Umbrella apps. </li>\n<li>Greg’s
      history creating multi-user dungeons (MUDs) and playing DragonRealm.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Greg Mefford LinkedIn — <a href=\"https://www.linkedin.com/in/ferggo/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nSmartLogic — <a
      href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic Jobs — <a href=\"https://apply.workable.com/smartlogic/\" rel=\"nofollow\">https://apply.workable.com/smartlogic/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nBlinkchain
      GitHub — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nJustin
      Schneck GitHub — <a href=\"https://github.com/mobileoverlord\" rel=\"nofollow\">https://github.com/mobileoverlord</a>
      <br>\nLe Tote — <a href=\"https://www.letote.com/\" rel=\"nofollow\">https://www.letote.com/</a><br>\nJames
      Smith — <a href=\"https://twitter.com/st23am\" rel=\"nofollow\">https://twitter.com/st23am</a><br>\nGarth
      Hitchens, ElixirCof 2015 — <a href=\"https://www.youtube.com/watch?v=kpzQrFC55q4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/documentation\" rel=\"nofollow\">https://www.nerves-project.org/documentation</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nProgramming
      Elixir — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>\nChris
      Keathley — <a href=\"https://codesync.global/speaker/chris-keathley/\" rel=\"nofollow\">https://codesync.global/speaker/chris-keathley/</a><br>\nCode
      BEAM V Conference — <a href=\"https://codesync.global/conferences/code-beam-sto/\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nWhova
      App — <a href=\"https://whova.com/\" rel=\"nofollow\">https://whova.com/</a><br>\nAmos
      King — <a href=\"https://twitter.com/adkron?lang=en\" rel=\"nofollow\">https://twitter.com/adkron?lang=en</a><br>\nChristopher
      Keele — <a href=\"https://github.com/christhekeele\" rel=\"nofollow\">https://github.com/christhekeele</a><br>\nSteve
      Bussey Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>\nMark
      Windholtz — <a href=\"https://github.com/mwindholtz\" rel=\"nofollow\">https://github.com/mwindholtz</a><br>\nExtreme
      Programming — <a href=\"http://www.extremeprogramming.org/\" rel=\"nofollow\">http://www.extremeprogramming.org/</a><br>\nAdopting
      Elixir: From Concept to Production — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nLive
      Elixir Wizards - Betweenisode — <a href=\"https://www.youtube.com/watch?v=kEwxhGYEGts\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>\nTwirp
      GitHub — <a href=\"https://github.com/twitchtv/twirp\" rel=\"nofollow\">https://github.com/twitchtv/twirp</a><br>\nFrank
      Hunleth — <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nElixir
      Supervisor Behavior — <a href=\"https://hexdocs.pm/elixir/Supervisor.html\"
      rel=\"nofollow\">https://hexdocs.pm/elixir/Supervisor.html</a><br>\nElixir Poncho
      Projects — <a href=\"https://embedded-elixir.com/post/2017-05-19-poncho-projects/\"
      rel=\"nofollow\">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>\nTitans
      of Text — <a href=\"https://www.titansoftext.com/\" rel=\"nofollow\">https://www.titansoftext.com/</a><br>\nMiriani
      — <a href=\"https://www.toastsoft.net/\" rel=\"nofollow\">https://www.toastsoft.net/</a><br>\nDragonRealms
      — <a href=\"https://www.play.net/dr/\" rel=\"nofollow\">https://www.play.net/dr/</a><br>\nJustus
      Eapen Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://twitter.com/EricOestrich\" rel=\"nofollow\">https://twitter.com/EricOestrich</a></p><p>Special
      Guest: Greg Mefford.</p>\n      "
  contentEncoded: "\n        <p>In today’s episode, we chat about system architecture,
    Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end
    engineer for the Bleacher Report. We open the conversation by asking Greg about
    his start in coding, leading to a story about how Greg was that bored kid pressuring
    a math teacher to teach him QBasic. He shares how he fell in love with Ruby before
    discovering Elixir and Nerves. Having faced some challenges when learning Nerves,
    Greg talks about how he began documenting his pain points and writing documents
    to help onboard newcomers. We discuss Greg’s work with Nerves, his project aspirations,
    and his recommended resources for anyone looking to get into Nerves or Elixir.
    After providing his hot take on the latest Code BEAM V conference, we ask Greg
    what system architecture means to him. From there we get super meta about the
    meaning of architecture and what it means to translate design into practice. We
    touch on the struggle of understanding domain-driven design and Greg’s approach
    to pre-code planning before delving into how the Bleacher Report is set up. As
    Greg goes into details, you’ll hear why their servers now run on Elixir and not
    Ruby. Near the end of the episode, we talk about Poncho versus Umbrella apps,
    and Greg shares his passion for multi-user dungeons (MUDs). Tune in to learn more
    about Greg and his role in the Elixir and Nerves landscape.  </p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Greg’s start in coding and his transition
    from electronics design into IT.</li>\n<li>Why Greg loves Ruby and how he discovered
    the magic of Elixir. </li>\n<li>Greg’s contribution to the Elixir and Nerves community
    by helping onboard newcomers.</li>\n<li>What Greg’s job as a senior engineer for
    Bleacher Report looks like.</li>\n<li>Greg recommends resources for beginners
    getting into Nerves and Elixir.<br></li>\n<li>Creating a kid’s game using Nerves
    and Greg’s Blinkchain library.</li>\n<li>Greg’s take on the Code BEAM V conference
    and hating on the Whova app.</li>\n<li>What architecture means to Greg. This one
    gets deep. </li>\n<li>How translating designs into software has changed over the
    years. </li>\n<li>Why Greg struggles with the idea of domain-driven design.</li>\n<li>The
    state of Extreme Programming practices and how they synergize together.</li>\n<li>How
    Greg views pre-code planning; something that’s become his specialty within his
    latest job.</li>\n<li>The many elements that contribute to how the Bleacher Report’s
    IT is set up. </li>\n<li>Ruby servers versus Elixir servers and why the Bleacher
    Report uses Elixir. </li>\n<li>Why the Poncho system was designed to fix Nerves
    issues not covered by Umbrella apps. </li>\n<li>Greg’s history creating multi-user
    dungeons (MUDs) and playing DragonRealm.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Greg Mefford LinkedIn — <a href=\"https://www.linkedin.com/in/ferggo/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nSmartLogic — <a
    href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic
    Jobs — <a href=\"https://apply.workable.com/smartlogic/\" rel=\"nofollow\">https://apply.workable.com/smartlogic/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nBlinkchain
    GitHub — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nJustin
    Schneck GitHub — <a href=\"https://github.com/mobileoverlord\" rel=\"nofollow\">https://github.com/mobileoverlord</a>
    <br>\nLe Tote — <a href=\"https://www.letote.com/\" rel=\"nofollow\">https://www.letote.com/</a><br>\nJames
    Smith — <a href=\"https://twitter.com/st23am\" rel=\"nofollow\">https://twitter.com/st23am</a><br>\nGarth
    Hitchens, ElixirCof 2015 — <a href=\"https://www.youtube.com/watch?v=kpzQrFC55q4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>\nNerves Project
    — <a href=\"https://www.nerves-project.org/documentation\" rel=\"nofollow\">https://www.nerves-project.org/documentation</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nProgramming
    Elixir — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>\nChris
    Keathley — <a href=\"https://codesync.global/speaker/chris-keathley/\" rel=\"nofollow\">https://codesync.global/speaker/chris-keathley/</a><br>\nCode
    BEAM V Conference — <a href=\"https://codesync.global/conferences/code-beam-sto/\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nWhova
    App — <a href=\"https://whova.com/\" rel=\"nofollow\">https://whova.com/</a><br>\nAmos
    King — <a href=\"https://twitter.com/adkron?lang=en\" rel=\"nofollow\">https://twitter.com/adkron?lang=en</a><br>\nChristopher
    Keele — <a href=\"https://github.com/christhekeele\" rel=\"nofollow\">https://github.com/christhekeele</a><br>\nSteve
    Bussey Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>\nMark
    Windholtz — <a href=\"https://github.com/mwindholtz\" rel=\"nofollow\">https://github.com/mwindholtz</a><br>\nExtreme
    Programming — <a href=\"http://www.extremeprogramming.org/\" rel=\"nofollow\">http://www.extremeprogramming.org/</a><br>\nAdopting
    Elixir: From Concept to Production — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nLive
    Elixir Wizards - Betweenisode — <a href=\"https://www.youtube.com/watch?v=kEwxhGYEGts\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>\nTwirp GitHub
    — <a href=\"https://github.com/twitchtv/twirp\" rel=\"nofollow\">https://github.com/twitchtv/twirp</a><br>\nFrank
    Hunleth — <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nElixir
    Supervisor Behavior — <a href=\"https://hexdocs.pm/elixir/Supervisor.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Supervisor.html</a><br>\nElixir
    Poncho Projects — <a href=\"https://embedded-elixir.com/post/2017-05-19-poncho-projects/\"
    rel=\"nofollow\">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>\nTitans
    of Text — <a href=\"https://www.titansoftext.com/\" rel=\"nofollow\">https://www.titansoftext.com/</a><br>\nMiriani
    — <a href=\"https://www.toastsoft.net/\" rel=\"nofollow\">https://www.toastsoft.net/</a><br>\nDragonRealms
    — <a href=\"https://www.play.net/dr/\" rel=\"nofollow\">https://www.play.net/dr/</a><br>\nJustus
    Eapen Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://twitter.com/EricOestrich\" rel=\"nofollow\">https://twitter.com/EricOestrich</a></p><p>Special
    Guest: Greg Mefford.</p>\n      "
- title: Johanna Larsson on Hex Diff, Domain Driven Design, Umbrella apps, and more
  slug: s4e11-larsson
  link: https://smartlogic.io/podcast/elixir-wizards/s4e11-larsson
  guid: 1b6e0936-69df-48a0-83aa-42c3302bcb0a
  pubDate: Mon, 27 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 27, 2020
  description: "Johanna Larsson is a community-minded software engineer whose project,
    Hex Diff, generates highlighted git diffs, right in your browser. In this episode,
    we talk to Johanna about how Hex Diff can benefit Elixir users, the differences
    between code architecture and code design, and the debatably under-appreciated
    role of Elixir umbrella apps. We start the conversation by chatting with Johanna
    about her recent move to London and her work for Duffel; a startup helping travel
    agencies book trips. After talking about how she got into software development,
    we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers
    greater security for your code. We ask Johanna about the origins of the Hex Diff
    project and she explores its aims and her experiences working on the project.
    In line with this month’s theme, we discuss what architecture means to Joanna
    and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving
    and she explains how her coding process emphasizes building an early prototype
    and constantly iterating on it. Despite hearing that umbrella apps are bad news,
    Joanna makes a case for their value while acknowledging how that they need greater
    tooling. We round off our conversation by asking Joanna how she tries to grow
    her skillset and what her favorite Elixir resource is. Following our discussion
    with Johanna, we open with another edition of Pattern Matching with Todd. This
    week, friend of the podcast Todd Resudek asks five questions of Elixir community
    member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist
    for the US Airforce, his software career, and the therapeutic uses of playing
    Animal Crossing during a pandemic. \nKey Points From This Episode:\nWe introduce
    Johanna Larsson and she shares how she is doing in London. \nHow Johanna developed
    a love for software and how Elixir brought her to London. \nDetails about Johanna’s
    job at Duffel; a startup that helps travel companies book trips. \nHow Hex Diff
    is solving problems that arise when using code from GitHub.\nJohanna’s experience
    working on Hex Diff and the problems that they aim to solve.\nHex Diff’s caching
    system and what Hex Diff does to counter malicious software uploads.\nThe disconnect
    between system architecture and implementation. \nJohanna’s view on the differences
    between code design and code architecture.\nWhy domain-driven design increases
    usefulness to the end-user.\nHow Johanna approaches a problem and her steps when
    building code. \nHear what key lesson Johanna learned from her latest big project.
    \nJohanna’s experience with umbrella apps and why they need tooling functions.
    \nHow working in a strong team can motivate you and help grow your skill set.\nWhy
    the Elixir Slack group is Johanna’s favorite tool.\nWhy you should check out Hex
    Diff; it’s a great introduction to Elixir. \nThis edition of Pattern Matching
    with Todd; Todd Resudek interviews Bruce Williams.\nLinks Mentioned in Today’s
    Episode:\nJohanna Larsson — https://blog.jola.dev/\nJohanna Larsson LinkedIn —
    https://www.linkedin.com/in/joladev/\nJohanna Larsson Twitter — https://twitter.com/joladev\nSmartLogic
    — https://smartlogic.io/ \nElixirConf — https://elixirconf.com/2020\nSharePoint
    — https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\nDuffel
    — https://duffel.com/\nStripe — https://stripe.com/\nHex Diff — https://diff.hex.pm/\nHex
    Diff GitHub — https://github.com/hexpm/diff\nMaciej Mensfeld — https://mensfeld.pl/\nDiffend
    — https://my.diffend.io/\nWojtek Mach — https://twitter.com/wojtekmach\nEric Meadows-Jönsson
    — https://twitter.com/emjii\nTodd Resudek — https://twitter.com/sprsmpl\nAnnouncing
    Hex Diff — https://hex.pm/blog/announcing-hex-diff\nHex Core GitHub — https://github.com/hexpm/hexcore\nHex
    Diff Phoenix — https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\nThe Design of Everyday
    Things — https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\nBrooklyn
    Zelenka LinkedIn— https://www.linkedin.com/in/brooklynzelenka/\nUnified Modeling
    Language — https://en.wikipedia.org/wiki/UnifiedModeling_Language\nElixir v. 1.10.4
    Mix CMD — https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\nElixir v1.11 Forum Post —
    https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\nRustler
    GitHub — https://github.com/rusterlium/rustler\nLive View —https://blog.codepen.io/documentation/live-view/\nBruce
    Williams — https://www.linkedin.com/in/wbruce/\nAbsinthe — https://absinthe-graphql.org/\nUntitled
    Goose Game — https://goose.game/\nStardew Valley — https://www.stardewvalley.net/\nMyst
    — https://cyan.com/games/myst/\nBlanco White — https://www.blancowhite.info/\nGroundhog
    Day — https://www.imdb.com/title/tt0107048/\nAnimal Crossing — https://www.animal-crossing.com/
    Special Guest: Johanna Larsson.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FHTJ3dLy
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b6e0936-69df-48a0-83aa-42c3302bcb0a.mp3
    length: '35460080'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In this episode, we talk to Johanna Larsson about how Hex Diff can benefit
      Elixir users, the differences between code architecture and code design, and
      the role of Elixir umbrella apps
    duration: '49:14'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b6e0936-69df-48a0-83aa-42c3302bcb0a/cover.jpg?v=1
    summary: "\n        <p>Johanna Larsson is a community-minded software engineer
      whose project, Hex Diff, generates highlighted git diffs, right in your browser.
      In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users,
      the differences between code architecture and code design, and the debatably
      under-appreciated role of Elixir umbrella apps. We start the conversation by
      chatting with Johanna about her recent move to London and her work for Duffel;
      a startup helping travel agencies book trips. After talking about how she got
      into software development, we dive into Hex Diff versus GitHub, with Joanna
      detailing how Hex Diff offers greater security for your code. We ask Johanna
      about the origins of the Hex Diff project and she explores its aims and her
      experiences working on the project. In line with this month’s theme, we discuss
      what architecture means to Joanna and the need for domain-driven design. We
      quiz Joanna on her approaches to problem-solving and she explains how her coding
      process emphasizes building an early prototype and constantly iterating on it.
      Despite hearing that umbrella apps are bad news, Joanna makes a case for their
      value while acknowledging how that they need greater tooling. We round off our
      conversation by asking Joanna how she tries to grow her skillset and what her
      favorite Elixir resource is. Following our discussion with Johanna, we open
      with another edition of Pattern Matching with Todd. This week, friend of the
      podcast Todd Resudek asks five questions of Elixir community member Bruce Williams.
      They talk about Bruce’s work as an Arabic cryptologic linguist for the US Airforce,
      his software career, and the therapeutic uses of playing Animal Crossing during
      a pandemic. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We introduce
      Johanna Larsson and she shares how she is doing in London. </li>\n<li>How Johanna
      developed a love for software and how Elixir brought her to London. </li>\n<li>Details
      about Johanna’s job at Duffel; a startup that helps travel companies book trips.
      </li>\n<li>How Hex Diff is solving problems that arise when using code from
      GitHub.</li>\n<li>Johanna’s experience working on Hex Diff and the problems
      that they aim to solve.</li>\n<li>Hex Diff’s caching system and what Hex Diff
      does to counter malicious software uploads.</li>\n<li>The disconnect between
      system architecture and implementation. </li>\n<li>Johanna’s view on the differences
      between code design and code architecture.</li>\n<li>Why domain-driven design
      increases usefulness to the end-user.</li>\n<li>How Johanna approaches a problem
      and her steps when building code. </li>\n<li>Hear what key lesson Johanna learned
      from her latest big project. </li>\n<li>Johanna’s experience with umbrella apps
      and why they need tooling functions. </li>\n<li>How working in a strong team
      can motivate you and help grow your skill set.</li>\n<li>Why the Elixir Slack
      group is Johanna’s favorite tool.</li>\n<li>Why you should check out Hex Diff;
      it’s a great introduction to Elixir. </li>\n<li>This edition of Pattern Matching
      with Todd; Todd Resudek interviews Bruce Williams.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Johanna Larsson — <a href=\"https://blog.jola.dev/\"
      rel=\"nofollow\">https://blog.jola.dev/</a><br>\nJohanna Larsson LinkedIn —
      <a href=\"https://www.linkedin.com/in/joladev/\" rel=\"nofollow\">https://www.linkedin.com/in/joladev/</a><br>\nJohanna
      Larsson Twitter — <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nSharePoint
      — <a href=\"https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\"
      rel=\"nofollow\">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>\nDuffel
      — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nStripe
      — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nHex
      Diff — <a href=\"https://diff.hex.pm/\" rel=\"nofollow\">https://diff.hex.pm/</a><br>\nHex
      Diff GitHub — <a href=\"https://github.com/hexpm/diff\" rel=\"nofollow\">https://github.com/hexpm/diff</a><br>\nMaciej
      Mensfeld — <a href=\"https://mensfeld.pl/\" rel=\"nofollow\">https://mensfeld.pl/</a><br>\nDiffend
      — <a href=\"https://my.diffend.io/\" rel=\"nofollow\">https://my.diffend.io/</a><br>\nWojtek
      Mach — <a href=\"https://twitter.com/wojtekmach\" rel=\"nofollow\">https://twitter.com/wojtekmach</a><br>\nEric
      Meadows-Jönsson — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAnnouncing
      Hex Diff — <a href=\"https://hex.pm/blog/announcing-hex-diff\" rel=\"nofollow\">https://hex.pm/blog/announcing-hex-diff</a><br>\nHex
      Core GitHub — <a href=\"https://github.com/hexpm/hex_core\" rel=\"nofollow\">https://github.com/hexpm/hex_core</a><br>\nHex
      Diff Phoenix — <a href=\"https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\" rel=\"nofollow\">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>\nThe
      Design of Everyday Things — <a href=\"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"
      rel=\"nofollow\">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>\nBrooklyn
      Zelenka LinkedIn— <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nUnified
      Modeling Language — <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>\nElixir
      v. 1.10.4 Mix CMD — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>\nElixir
      v1.11 Forum Post — <a href=\"https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\"
      rel=\"nofollow\">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>\nRustler
      GitHub — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nLive
      View —<a href=\"https://blog.codepen.io/documentation/live-view/\" rel=\"nofollow\">https://blog.codepen.io/documentation/live-view/</a><br>\nBruce
      Williams — <a href=\"https://www.linkedin.com/in/wbruce/\" rel=\"nofollow\">https://www.linkedin.com/in/wbruce/</a><br>\nAbsinthe
      — <a href=\"https://absinthe-graphql.org/\" rel=\"nofollow\">https://absinthe-graphql.org/</a><br>\nUntitled
      Goose Game — <a href=\"https://goose.game/\" rel=\"nofollow\">https://goose.game/</a><br>\nStardew
      Valley — <a href=\"https://www.stardewvalley.net/\" rel=\"nofollow\">https://www.stardewvalley.net/</a><br>\nMyst
      — <a href=\"https://cyan.com/games/myst/\" rel=\"nofollow\">https://cyan.com/games/myst/</a><br>\nBlanco
      White — <a href=\"https://www.blancowhite.info/\" rel=\"nofollow\">https://www.blancowhite.info/</a><br>\nGroundhog
      Day — <a href=\"https://www.imdb.com/title/tt0107048/\" rel=\"nofollow\">https://www.imdb.com/title/tt0107048/</a><br>\nAnimal
      Crossing — <a href=\"https://www.animal-crossing.com/\" rel=\"nofollow\">https://www.animal-crossing.com/</a></p><p>Special
      Guest: Johanna Larsson.</p>\n      "
  contentEncoded: "\n        <p>Johanna Larsson is a community-minded software engineer
    whose project, Hex Diff, generates highlighted git diffs, right in your browser.
    In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users,
    the differences between code architecture and code design, and the debatably under-appreciated
    role of Elixir umbrella apps. We start the conversation by chatting with Johanna
    about her recent move to London and her work for Duffel; a startup helping travel
    agencies book trips. After talking about how she got into software development,
    we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers
    greater security for your code. We ask Johanna about the origins of the Hex Diff
    project and she explores its aims and her experiences working on the project.
    In line with this month’s theme, we discuss what architecture means to Joanna
    and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving
    and she explains how her coding process emphasizes building an early prototype
    and constantly iterating on it. Despite hearing that umbrella apps are bad news,
    Joanna makes a case for their value while acknowledging how that they need greater
    tooling. We round off our conversation by asking Joanna how she tries to grow
    her skillset and what her favorite Elixir resource is. Following our discussion
    with Johanna, we open with another edition of Pattern Matching with Todd. This
    week, friend of the podcast Todd Resudek asks five questions of Elixir community
    member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist
    for the US Airforce, his software career, and the therapeutic uses of playing
    Animal Crossing during a pandemic. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We
    introduce Johanna Larsson and she shares how she is doing in London. </li>\n<li>How
    Johanna developed a love for software and how Elixir brought her to London. </li>\n<li>Details
    about Johanna’s job at Duffel; a startup that helps travel companies book trips.
    </li>\n<li>How Hex Diff is solving problems that arise when using code from GitHub.</li>\n<li>Johanna’s
    experience working on Hex Diff and the problems that they aim to solve.</li>\n<li>Hex
    Diff’s caching system and what Hex Diff does to counter malicious software uploads.</li>\n<li>The
    disconnect between system architecture and implementation. </li>\n<li>Johanna’s
    view on the differences between code design and code architecture.</li>\n<li>Why
    domain-driven design increases usefulness to the end-user.</li>\n<li>How Johanna
    approaches a problem and her steps when building code. </li>\n<li>Hear what key
    lesson Johanna learned from her latest big project. </li>\n<li>Johanna’s experience
    with umbrella apps and why they need tooling functions. </li>\n<li>How working
    in a strong team can motivate you and help grow your skill set.</li>\n<li>Why
    the Elixir Slack group is Johanna’s favorite tool.</li>\n<li>Why you should check
    out Hex Diff; it’s a great introduction to Elixir. </li>\n<li>This edition of
    Pattern Matching with Todd; Todd Resudek interviews Bruce Williams.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Johanna Larsson — <a href=\"https://blog.jola.dev/\"
    rel=\"nofollow\">https://blog.jola.dev/</a><br>\nJohanna Larsson LinkedIn — <a
    href=\"https://www.linkedin.com/in/joladev/\" rel=\"nofollow\">https://www.linkedin.com/in/joladev/</a><br>\nJohanna
    Larsson Twitter — <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nSharePoint
    — <a href=\"https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\"
    rel=\"nofollow\">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>\nDuffel
    — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nStripe
    — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nHex
    Diff — <a href=\"https://diff.hex.pm/\" rel=\"nofollow\">https://diff.hex.pm/</a><br>\nHex
    Diff GitHub — <a href=\"https://github.com/hexpm/diff\" rel=\"nofollow\">https://github.com/hexpm/diff</a><br>\nMaciej
    Mensfeld — <a href=\"https://mensfeld.pl/\" rel=\"nofollow\">https://mensfeld.pl/</a><br>\nDiffend
    — <a href=\"https://my.diffend.io/\" rel=\"nofollow\">https://my.diffend.io/</a><br>\nWojtek
    Mach — <a href=\"https://twitter.com/wojtekmach\" rel=\"nofollow\">https://twitter.com/wojtekmach</a><br>\nEric
    Meadows-Jönsson — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAnnouncing
    Hex Diff — <a href=\"https://hex.pm/blog/announcing-hex-diff\" rel=\"nofollow\">https://hex.pm/blog/announcing-hex-diff</a><br>\nHex
    Core GitHub — <a href=\"https://github.com/hexpm/hex_core\" rel=\"nofollow\">https://github.com/hexpm/hex_core</a><br>\nHex
    Diff Phoenix — <a href=\"https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\" rel=\"nofollow\">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>\nThe
    Design of Everyday Things — <a href=\"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"
    rel=\"nofollow\">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>\nBrooklyn
    Zelenka LinkedIn— <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nUnified
    Modeling Language — <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>\nElixir
    v. 1.10.4 Mix CMD — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>\nElixir
    v1.11 Forum Post — <a href=\"https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\"
    rel=\"nofollow\">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>\nRustler
    GitHub — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nLive
    View —<a href=\"https://blog.codepen.io/documentation/live-view/\" rel=\"nofollow\">https://blog.codepen.io/documentation/live-view/</a><br>\nBruce
    Williams — <a href=\"https://www.linkedin.com/in/wbruce/\" rel=\"nofollow\">https://www.linkedin.com/in/wbruce/</a><br>\nAbsinthe
    — <a href=\"https://absinthe-graphql.org/\" rel=\"nofollow\">https://absinthe-graphql.org/</a><br>\nUntitled
    Goose Game — <a href=\"https://goose.game/\" rel=\"nofollow\">https://goose.game/</a><br>\nStardew
    Valley — <a href=\"https://www.stardewvalley.net/\" rel=\"nofollow\">https://www.stardewvalley.net/</a><br>\nMyst
    — <a href=\"https://cyan.com/games/myst/\" rel=\"nofollow\">https://cyan.com/games/myst/</a><br>\nBlanco
    White — <a href=\"https://www.blancowhite.info/\" rel=\"nofollow\">https://www.blancowhite.info/</a><br>\nGroundhog
    Day — <a href=\"https://www.imdb.com/title/tt0107048/\" rel=\"nofollow\">https://www.imdb.com/title/tt0107048/</a><br>\nAnimal
    Crossing — <a href=\"https://www.animal-crossing.com/\" rel=\"nofollow\">https://www.animal-crossing.com/</a></p><p>Special
    Guest: Johanna Larsson.</p>\n      "
- title: Lau Taarnskov on the Trouble with Time Zones
  slug: s4e10-taarnskov
  link: https://smartlogic.io/podcast/elixir-wizards/s4e10-taarnskov
  guid: f39e6147-f6c0-4c1e-803f-d128bfbec255
  pubDate: Thu, 23 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 23, 2020
  description: "Handling date and time is a challenge in any language, but Lau Taarnskov
    is determined to solve that problem in Elixir. Lau is today’s guest on Elixir
    Wizards, and this episode is all about his contributions to Elixir. Lau has been
    involved with web development and e-commerce for decades. He started contributing
    to Elixir open source in 2014 and created the Calendar and tzdata libraries. Calendar
    is a datetime library for Elixir, that provides explicit types for datetimes,
    dates, and times, and full time zone support is provided via its sister package,
    tzdata. When it comes to the subject of date, time, and time zones, besides talking
    about it and writing software for it, Lau also writes about it on his blog, Creative
    Deletion. \nThis episode explores how Lau got started in programming, and what
    led him to creating Calendar and tzdata. Lau shares the resources that he found
    helpful when he started using Elixir, and why he was drawn to Elixir in the first
    place. We hear Lau’s opinions on time zones and daylight savings and whether or
    not they’re necessary, and he shares some advice for anyone working with time
    in Elixir. \nThen it’s time for another edition of Pattern Matching with Todd,
    in which Todd Resudek asks Brooklyn Zekanka five questions to help us get to know
    her better. Brooklyn talks about everything from she has lived, what jobs she
    did before becoming a programmer, and her education in classical music, to her
    favorite bands, movies, and TV shows, as well as some of the projects she is working
    on. For all this, and more, don’t miss today’s episode! \nKey Points From This
    Episode: \nLau explains what TLAs are and why they aren’t always helpful for explicit
    communication. \nLau introduces himself and shares how he got into programming
    and computer science. \nThe resources Lau found most useful when he started using
    Elixir, including books he read. \nWhat it means that Elixir’s source code is
    written in Elixir, and why that was helpful for Lau. \nLu talks about Calendar,
    a datetime library that Lau created for Elixir, and Tzdata, a parser and library
    he created for the tz database, and why he created them. \nHow Lau deconstructed
    the time zone problems and how his ideas have changed over time. \nLau’s opinions
    on time zones and daylight savings and whether or not they’re necessary. \nAdvice
    from Lau for anyone working with time in Elixir. \nAnother edition of Pattern
    Matching with Todd – today’s guest is Brooklyn Zelenka. \nWhere Brooklyn was born,
    where she has lived, and the jobs she did before programming. \nBrooklyn talks
    about her musical background and how it’s similar to programming. \nBrooklyn shares
    a pro tip about slides and reflects on her highlights as a speaker. \nWhat Brooklyn
    would be doing if she weren’t a programmer and the genre of music she likes. \nBrooklyn’s
    favorite TV shows and movies, including Amadeus and Mad Men. \nBrooklyn shares
    what she’s working on currently and the next project she’s excited about. \nLinks
    Mentioned in Today’s Episode: \nLau Taarnskov on Twitter – https://twitter.com/laut
    \nCreative Deletion Blog – http://www.creativedeletion.com/ \nLau Taarnskov on
    GitHub – https://github.com/lau \nCalendar on GitHub – https://github.com/lau/calendar
    \nTzdata on GitHub – https://github.com/lau/tzdata \nElixir in Action – https://www.amazon.com/Elixir-Action
    \nProgramming Elixir – https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/
    \nBrooklyn Zelenka on LinkedIn – https://www.linkedin.com/in/brooklynzelenka/
    Brooklyn Zelenka on \nTwitter – https://twitter.com/expede \nBrooklyn Zelenka
    on GitHub – https://github.com/expede \nFISSIONcodes Website – https://fission.codes/
    \nSmartLogic — https://smartlogic.io/ \nAmadeus — https://www.rottentomatoes.com/m/amadeus
    \nMad Men — https://www.rottentomatoes.com/tv/mad-men  Special Guest: Lau Taarnskov.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+uPrb-5ZK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f39e6147-f6c0-4c1e-803f-d128bfbec255.mp3
    length: '27035996'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Handling date and time is a challenge in any language, but today's guest,
      Lau Taarnskov is determined to solve that problem in Elixir.
    duration: '37:32'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f39e6147-f6c0-4c1e-803f-d128bfbec255/cover.jpg?v=1
    summary: "\n        <p>Handling date and time is a challenge in any language,
      but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s
      guest on Elixir Wizards, and this episode is all about his contributions to
      Elixir. Lau has been involved with web development and e-commerce for decades.
      He started contributing to Elixir open source in 2014 and created the Calendar
      and tzdata libraries. Calendar is a datetime library for Elixir, that provides
      explicit types for datetimes, dates, and times, and full time zone support is
      provided via its sister package, tzdata. When it comes to the subject of date,
      time, and time zones, besides talking about it and writing software for it,
      Lau also writes about it on his blog, Creative Deletion. </p>\n\n<p>This episode
      explores how Lau got started in programming, and what led him to creating Calendar
      and tzdata. Lau shares the resources that he found helpful when he started using
      Elixir, and why he was drawn to Elixir in the first place. We hear Lau’s opinions
      on time zones and daylight savings and whether or not they’re necessary, and
      he shares some advice for anyone working with time in Elixir. </p>\n\n<p>Then
      it’s time for another edition of Pattern Matching with Todd, in which Todd Resudek
      asks Brooklyn Zekanka five questions to help us get to know her better. Brooklyn
      talks about everything from she has lived, what jobs she did before becoming
      a programmer, and her education in classical music, to her favorite bands, movies,
      and TV shows, as well as some of the projects she is working on. For all this,
      and more, don’t miss today’s episode! </p>\n\n<p>Key Points From This Episode:
      </p>\n\n<ul>\n<li>Lau explains what TLAs are and why they aren’t always helpful
      for explicit communication. </li>\n<li>Lau introduces himself and shares how
      he got into programming and computer science. </li>\n<li>The resources Lau found
      most useful when he started using Elixir, including books he read. </li>\n<li>What
      it means that Elixir’s source code is written in Elixir, and why that was helpful
      for Lau. </li>\n<li>Lu talks about Calendar, a datetime library that Lau created
      for Elixir, and Tzdata, a parser and library he created for the tz database,
      and why he created them. </li>\n<li>How Lau deconstructed the time zone problems
      and how his ideas have changed over time. </li>\n<li>Lau’s opinions on time
      zones and daylight savings and whether or not they’re necessary. </li>\n<li>Advice
      from Lau for anyone working with time in Elixir. </li>\n<li>Another edition
      of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>\n<li>Where
      Brooklyn was born, where she has lived, and the jobs she did before programming.
      </li>\n<li>Brooklyn talks about her musical background and how it’s similar
      to programming. </li>\n<li>Brooklyn shares a pro tip about slides and reflects
      on her highlights as a speaker. </li>\n<li>What Brooklyn would be doing if she
      weren’t a programmer and the genre of music she likes. </li>\n<li>Brooklyn’s
      favorite TV shows and movies, including Amadeus and Mad Men. </li>\n<li>Brooklyn
      shares what she’s working on currently and the next project she’s excited about.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode: </p>\n\n<p>Lau Taarnskov
      on Twitter – <a href=\"https://twitter.com/laut\" rel=\"nofollow\">https://twitter.com/laut</a>
      <br>\nCreative Deletion Blog – <a href=\"http://www.creativedeletion.com/\"
      rel=\"nofollow\">http://www.creativedeletion.com/</a> <br>\nLau Taarnskov on
      GitHub – <a href=\"https://github.com/lau\" rel=\"nofollow\">https://github.com/lau</a>
      <br>\nCalendar on GitHub – <a href=\"https://github.com/lau/calendar\" rel=\"nofollow\">https://github.com/lau/calendar</a>
      <br>\nTzdata on GitHub – <a href=\"https://github.com/lau/tzdata\" rel=\"nofollow\">https://github.com/lau/tzdata</a>
      <br>\nElixir in Action – <a href=\"https://www.amazon.com/Elixir-Action\" rel=\"nofollow\">https://www.amazon.com/Elixir-Action</a>
      <br>\nProgramming Elixir – <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a>
      <br>\nBrooklyn Zelenka on LinkedIn – <a href=\"https://www.linkedin.com/in/brooklynzelenka/\"
      rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka
      on <br>\nTwitter – <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a>
      <br>\nBrooklyn Zelenka on GitHub – <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a>
      <br>\nFISSIONcodes Website – <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a>
      <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAmadeus — <a href=\"https://www.rottentomatoes.com/m/amadeus\" rel=\"nofollow\">https://www.rottentomatoes.com/m/amadeus</a>
      <br>\nMad Men — <a href=\"https://www.rottentomatoes.com/tv/mad-men\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/mad-men</a>
      </p><p>Special Guest: Lau Taarnskov.</p>\n      "
  contentEncoded: "\n        <p>Handling date and time is a challenge in any language,
    but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s
    guest on Elixir Wizards, and this episode is all about his contributions to Elixir.
    Lau has been involved with web development and e-commerce for decades. He started
    contributing to Elixir open source in 2014 and created the Calendar and tzdata
    libraries. Calendar is a datetime library for Elixir, that provides explicit types
    for datetimes, dates, and times, and full time zone support is provided via its
    sister package, tzdata. When it comes to the subject of date, time, and time zones,
    besides talking about it and writing software for it, Lau also writes about it
    on his blog, Creative Deletion. </p>\n\n<p>This episode explores how Lau got started
    in programming, and what led him to creating Calendar and tzdata. Lau shares the
    resources that he found helpful when he started using Elixir, and why he was drawn
    to Elixir in the first place. We hear Lau’s opinions on time zones and daylight
    savings and whether or not they’re necessary, and he shares some advice for anyone
    working with time in Elixir. </p>\n\n<p>Then it’s time for another edition of
    Pattern Matching with Todd, in which Todd Resudek asks Brooklyn Zekanka five questions
    to help us get to know her better. Brooklyn talks about everything from she has
    lived, what jobs she did before becoming a programmer, and her education in classical
    music, to her favorite bands, movies, and TV shows, as well as some of the projects
    she is working on. For all this, and more, don’t miss today’s episode! </p>\n\n<p>Key
    Points From This Episode: </p>\n\n<ul>\n<li>Lau explains what TLAs are and why
    they aren’t always helpful for explicit communication. </li>\n<li>Lau introduces
    himself and shares how he got into programming and computer science. </li>\n<li>The
    resources Lau found most useful when he started using Elixir, including books
    he read. </li>\n<li>What it means that Elixir’s source code is written in Elixir,
    and why that was helpful for Lau. </li>\n<li>Lu talks about Calendar, a datetime
    library that Lau created for Elixir, and Tzdata, a parser and library he created
    for the tz database, and why he created them. </li>\n<li>How Lau deconstructed
    the time zone problems and how his ideas have changed over time. </li>\n<li>Lau’s
    opinions on time zones and daylight savings and whether or not they’re necessary.
    </li>\n<li>Advice from Lau for anyone working with time in Elixir. </li>\n<li>Another
    edition of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>\n<li>Where
    Brooklyn was born, where she has lived, and the jobs she did before programming.
    </li>\n<li>Brooklyn talks about her musical background and how it’s similar to
    programming. </li>\n<li>Brooklyn shares a pro tip about slides and reflects on
    her highlights as a speaker. </li>\n<li>What Brooklyn would be doing if she weren’t
    a programmer and the genre of music she likes. </li>\n<li>Brooklyn’s favorite
    TV shows and movies, including Amadeus and Mad Men. </li>\n<li>Brooklyn shares
    what she’s working on currently and the next project she’s excited about. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode: </p>\n\n<p>Lau Taarnskov on Twitter – <a href=\"https://twitter.com/laut\"
    rel=\"nofollow\">https://twitter.com/laut</a> <br>\nCreative Deletion Blog – <a
    href=\"http://www.creativedeletion.com/\" rel=\"nofollow\">http://www.creativedeletion.com/</a>
    <br>\nLau Taarnskov on GitHub – <a href=\"https://github.com/lau\" rel=\"nofollow\">https://github.com/lau</a>
    <br>\nCalendar on GitHub – <a href=\"https://github.com/lau/calendar\" rel=\"nofollow\">https://github.com/lau/calendar</a>
    <br>\nTzdata on GitHub – <a href=\"https://github.com/lau/tzdata\" rel=\"nofollow\">https://github.com/lau/tzdata</a>
    <br>\nElixir in Action – <a href=\"https://www.amazon.com/Elixir-Action\" rel=\"nofollow\">https://www.amazon.com/Elixir-Action</a>
    <br>\nProgramming Elixir – <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a>
    <br>\nBrooklyn Zelenka on LinkedIn – <a href=\"https://www.linkedin.com/in/brooklynzelenka/\"
    rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka
    on <br>\nTwitter – <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a>
    <br>\nBrooklyn Zelenka on GitHub – <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a>
    <br>\nFISSIONcodes Website – <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a>
    <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nAmadeus — <a href=\"https://www.rottentomatoes.com/m/amadeus\" rel=\"nofollow\">https://www.rottentomatoes.com/m/amadeus</a>
    <br>\nMad Men — <a href=\"https://www.rottentomatoes.com/tv/mad-men\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/mad-men</a>
    </p><p>Special Guest: Lau Taarnskov.</p>\n      "
- title: Council of Wizards Part 2 with Chris Bell, Desmond Bowe, Emily Maxie, Dan
    Lindeman, and Alan Voss
  slug: s4e9b-council
  link: https://smartlogic.io/podcast/elixir-wizards/s4e9b-council
  guid: e9769249-24cb-455c-9983-011f1c414d3d
  pubDate: Thu, 16 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 16, 2020
  description: "For part 2 of our Council of Wizards panel discussion, we are joined
    by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! Chris and
    Desmond run the ElixirTalk Podcast and we get in-depth on the intersection of
    the language and talking about it. They share the lessons they have learned in
    the podcasting space, making some pit stops to chat about aliens, Elixir beef,
    and marble flooring! We discuss the community during the pandemic and what the
    Elixir world might look like for the next year or two. Emily and Dan then step
    in to give us all the information about Very and their very functional remote
    work model. They talk us through the full departure that the company made from
    a physical hub and both share what they love and hate about working from home,
    before and during the COVID crisis. Dan and Emily talk about onboarding and team
    spirit in remote teams and the strategies that have best served Very in this regard.
    Lastly, we have a bonus section with Alan Voss, to discuss his game night competitions
    and more. He unpacks the games he has already hosted and some of the candidates
    for future events before we hear about his experiences in the pandemic, specifically
    as an extrovert and a father. For all of this make sure to join us on the show!\nKey
    Points From This Episode:\nThe exciting possibility of starting beef in the Elixir
    community! \nBooks and podcasts we have been reading and listening to. \nMarble
    flooring, glass blowing, aliens, conspiracy theories, and impersonations! \nTips,
    tricks, and lessons for the podcast space from Chris and Desmond.\nThoughts on
    the future of the Elixir community during and after the pandemic. \nThe array
    of projects that keep Chris and Desmond busy; startups, meetups, conferences!
    \nVery's fully remote-work setup and the decision to move away from a physical
    office.  \nChallenges and lessons in the work-from-home model; making do with
    less in-person interaction. \nPositive sides to a home workspace; making a mess
    and closing the door. \nEmployee socialization and familiarization at a remote
    company. \nThe applicability of Elixir across different projects and libraries.
    \ \nThe infinite amount of puns that are available when talking about Very! \nProgramming
    Connect Four and the future of bot competitions according to Alan.\nStrategy snobs
    and taking this to its logical conclusion with chess and Go. \nThe effect that
    the pandemic has had on extroverts and the adjustments that Alan has made.\nThe
    possibility of ElixirConf this year and the forms it could take.\nWork that has
    gone into Alan's game-night side project over the last months.\nThe growth of
    Postmates and their current need for new employees! \nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nElixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1\nElixirConf
    — https://elixirconf.com/2020\nGithub Repo for Transcript Corrections — https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\nChris
    Bell — https://cjbell.co/\nChris Bell on Twitter — https://twitter.com/cjbell\nDesmond
    Bowe on Twitter — https://twitter.com/desmondmonster\nElixirTalk — http://elixirtalk.com/\nEmily
    Maxie on Twitter  — https://twitter.com/emilymaxie\nDan Lindeman on Twitter— https://twitter.com/lindemda\nVery
    — http://verypossible.com/\nChris McCord — http://chrismccord.com/\nAlan Voss
    — http://www.alanvoss.org/\nAlan Voss on Twitter — https://twitter.com/alanvoss\nLonestar
    Elixir— https://lonestarelixir.com/\nMPex — https://mpex.com/\nPayitoff — https://www.payitoff.io/\nMeetup
    — https://www.meetup.com/\nOpenAI — https://openai.com/\nRisk — https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\nStrange
    Loop — https://www.thestrangeloop.com/\nPostmates — https://postmates.com/ Special
    Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Yi5vSoNZ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e9769249-24cb-455c-9983-011f1c414d3d.mp3
    length: '80012368'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: For part 2 of our Council of Wizards panel discussion, we are joined
      by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! They
      share the lessons they have learned in the podcasting space and discuss strategies
      on working remotely.
    duration: '55:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e9769249-24cb-455c-9983-011f1c414d3d/cover.jpg?v=1
    summary: "\n        <p>For part 2 of our Council of Wizards panel discussion,
      we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan
      Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the
      intersection of the language and talking about it. They share the lessons they
      have learned in the podcasting space, making some pit stops to chat about aliens,
      Elixir beef, and marble flooring! We discuss the community during the pandemic
      and what the Elixir world might look like for the next year or two. Emily and
      Dan then step in to give us all the information about Very and their very functional
      remote work model. They talk us through the full departure that the company
      made from a physical hub and both share what they love and hate about working
      from home, before and during the COVID crisis. Dan and Emily talk about onboarding
      and team spirit in remote teams and the strategies that have best served Very
      in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his
      game night competitions and more. He unpacks the games he has already hosted
      and some of the candidates for future events before we hear about his experiences
      in the pandemic, specifically as an extrovert and a father. For all of this
      make sure to join us on the show!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
      exciting possibility of starting beef in the Elixir community! </li>\n<li>Books
      and podcasts we have been reading and listening to. </li>\n<li>Marble flooring,
      glass blowing, aliens, conspiracy theories, and impersonations! </li>\n<li>Tips,
      tricks, and lessons for the podcast space from Chris and Desmond.</li>\n<li>Thoughts
      on the future of the Elixir community during and after the pandemic. </li>\n<li>The
      array of projects that keep Chris and Desmond busy; startups, meetups, conferences!
      </li>\n<li>Very&#39;s fully remote-work setup and the decision to move away
      from a physical office.<br></li>\n<li>Challenges and lessons in the work-from-home
      model; making do with less in-person interaction. </li>\n<li>Positive sides
      to a home workspace; making a mess and closing the door. </li>\n<li>Employee
      socialization and familiarization at a remote company. </li>\n<li>The applicability
      of Elixir across different projects and libraries.<br></li>\n<li>The infinite
      amount of puns that are available when talking about Very! </li>\n<li>Programming
      Connect Four and the future of bot competitions according to Alan.</li>\n<li>Strategy
      snobs and taking this to its logical conclusion with chess and Go. </li>\n<li>The
      effect that the pandemic has had on extroverts and the adjustments that Alan
      has made.</li>\n<li>The possibility of ElixirConf this year and the forms it
      could take.</li>\n<li>Work that has gone into Alan&#39;s game-night side project
      over the last months.</li>\n<li>The growth of Postmates and their current need
      for new employees! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir Ecosystem Survey — <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\"
      rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nGithub
      Repo for Transcript Corrections — <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
      rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nChris
      Bell — <a href=\"https://cjbell.co/\" rel=\"nofollow\">https://cjbell.co/</a><br>\nChris
      Bell on Twitter — <a href=\"https://twitter.com/cjbell\" rel=\"nofollow\">https://twitter.com/cjbell</a><br>\nDesmond
      Bowe on Twitter — <a href=\"https://twitter.com/desmondmonster\" rel=\"nofollow\">https://twitter.com/desmondmonster</a><br>\nElixirTalk
      — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nEmily
      Maxie on Twitter  — <a href=\"https://twitter.com/emilymaxie\" rel=\"nofollow\">https://twitter.com/emilymaxie</a><br>\nDan
      Lindeman on Twitter— <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\nVery
      — <a href=\"http://verypossible.com/\" rel=\"nofollow\">http://verypossible.com/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nAlan
      Voss — <a href=\"http://www.alanvoss.org/\" rel=\"nofollow\">http://www.alanvoss.org/</a><br>\nAlan
      Voss on Twitter — <a href=\"https://twitter.com/alanvoss\" rel=\"nofollow\">https://twitter.com/alanvoss</a><br>\nLonestar
      Elixir— <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nMPex
      — <a href=\"https://mpex.com/\" rel=\"nofollow\">https://mpex.com/</a><br>\nPayitoff
      — <a href=\"https://www.payitoff.io/\" rel=\"nofollow\">https://www.payitoff.io/</a><br>\nMeetup
      — <a href=\"https://www.meetup.com/\" rel=\"nofollow\">https://www.meetup.com/</a><br>\nOpenAI
      — <a href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\nRisk
      — <a href=\"https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\" rel=\"nofollow\">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>\nStrange
      Loop — <a href=\"https://www.thestrangeloop.com/\" rel=\"nofollow\">https://www.thestrangeloop.com/</a><br>\nPostmates
      — <a href=\"https://postmates.com/\" rel=\"nofollow\">https://postmates.com/</a></p><p>Special
      Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>\n
      \     "
  contentEncoded: "\n        <p>For part 2 of our Council of Wizards panel discussion,
    we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan
    Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the
    intersection of the language and talking about it. They share the lessons they
    have learned in the podcasting space, making some pit stops to chat about aliens,
    Elixir beef, and marble flooring! We discuss the community during the pandemic
    and what the Elixir world might look like for the next year or two. Emily and
    Dan then step in to give us all the information about Very and their very functional
    remote work model. They talk us through the full departure that the company made
    from a physical hub and both share what they love and hate about working from
    home, before and during the COVID crisis. Dan and Emily talk about onboarding
    and team spirit in remote teams and the strategies that have best served Very
    in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his
    game night competitions and more. He unpacks the games he has already hosted and
    some of the candidates for future events before we hear about his experiences
    in the pandemic, specifically as an extrovert and a father. For all of this make
    sure to join us on the show!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    exciting possibility of starting beef in the Elixir community! </li>\n<li>Books
    and podcasts we have been reading and listening to. </li>\n<li>Marble flooring,
    glass blowing, aliens, conspiracy theories, and impersonations! </li>\n<li>Tips,
    tricks, and lessons for the podcast space from Chris and Desmond.</li>\n<li>Thoughts
    on the future of the Elixir community during and after the pandemic. </li>\n<li>The
    array of projects that keep Chris and Desmond busy; startups, meetups, conferences!
    </li>\n<li>Very&#39;s fully remote-work setup and the decision to move away from
    a physical office.<br></li>\n<li>Challenges and lessons in the work-from-home
    model; making do with less in-person interaction. </li>\n<li>Positive sides to
    a home workspace; making a mess and closing the door. </li>\n<li>Employee socialization
    and familiarization at a remote company. </li>\n<li>The applicability of Elixir
    across different projects and libraries.<br></li>\n<li>The infinite amount of
    puns that are available when talking about Very! </li>\n<li>Programming Connect
    Four and the future of bot competitions according to Alan.</li>\n<li>Strategy
    snobs and taking this to its logical conclusion with chess and Go. </li>\n<li>The
    effect that the pandemic has had on extroverts and the adjustments that Alan has
    made.</li>\n<li>The possibility of ElixirConf this year and the forms it could
    take.</li>\n<li>Work that has gone into Alan&#39;s game-night side project over
    the last months.</li>\n<li>The growth of Postmates and their current need for
    new employees! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir Ecosystem Survey — <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\"
    rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nGithub
    Repo for Transcript Corrections — <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
    rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nChris
    Bell — <a href=\"https://cjbell.co/\" rel=\"nofollow\">https://cjbell.co/</a><br>\nChris
    Bell on Twitter — <a href=\"https://twitter.com/cjbell\" rel=\"nofollow\">https://twitter.com/cjbell</a><br>\nDesmond
    Bowe on Twitter — <a href=\"https://twitter.com/desmondmonster\" rel=\"nofollow\">https://twitter.com/desmondmonster</a><br>\nElixirTalk
    — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nEmily
    Maxie on Twitter  — <a href=\"https://twitter.com/emilymaxie\" rel=\"nofollow\">https://twitter.com/emilymaxie</a><br>\nDan
    Lindeman on Twitter— <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\nVery
    — <a href=\"http://verypossible.com/\" rel=\"nofollow\">http://verypossible.com/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nAlan
    Voss — <a href=\"http://www.alanvoss.org/\" rel=\"nofollow\">http://www.alanvoss.org/</a><br>\nAlan
    Voss on Twitter — <a href=\"https://twitter.com/alanvoss\" rel=\"nofollow\">https://twitter.com/alanvoss</a><br>\nLonestar
    Elixir— <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nMPex
    — <a href=\"https://mpex.com/\" rel=\"nofollow\">https://mpex.com/</a><br>\nPayitoff
    — <a href=\"https://www.payitoff.io/\" rel=\"nofollow\">https://www.payitoff.io/</a><br>\nMeetup
    — <a href=\"https://www.meetup.com/\" rel=\"nofollow\">https://www.meetup.com/</a><br>\nOpenAI
    — <a href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\nRisk
    — <a href=\"https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\" rel=\"nofollow\">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>\nStrange
    Loop — <a href=\"https://www.thestrangeloop.com/\" rel=\"nofollow\">https://www.thestrangeloop.com/</a><br>\nPostmates
    — <a href=\"https://postmates.com/\" rel=\"nofollow\">https://postmates.com/</a></p><p>Special
    Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>\n
    \     "
- title: Council of Wizards Part 1 with Andrea Leopardi and René Föhring
  slug: s4e9a-council
  link: https://smartlogic.io/podcast/elixir-wizards/s4e9a-council
  guid: 2e71b35e-54cc-4bfe-be34-6567c5fb448c
  pubDate: Tue, 14 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 14, 2020
  description: "The Elixir community continues to flourish and evolve in these uncertain
    times and in honor of this we have put together a live show with a number of special
    guests! In part one today, we are joined by Andrea Leopardi and René Föhring,
    who we are so happy to welcome back. We get the lowdown from each of them in turn,
    discussing personal preferences, tips and tricks, and recommendations for Elixir
    and beyond. Andrea gets into some of his pet peeves and comments on the trend
    of slow interfaces. We then look at future possibilities for Elixir including
    the outside chance of it being run on mobile and for crypto-mining! Andrea also
    updates us on the book he is currently working on so keep an eye out for that
    in the future! René then steps in to talk about his work on Credo, his hopes for
    it in the future, and some suggestions for listeners using it. We do some comparisons
    between Elixir and Ruby before René offers some thoughts on Electron and functional
    programming concepts. So for all this and a whole lot more, make sure to tune
    in today and stay tuned for part 2!\nKey Points From This Episode:\nA reintroduction
    to Andrea and his current work in the Elixir space.\nAndrea's tool recommendations
    and what he uses most at the moment. \nUpdates, the short term future of the world
    of Elixir and Andrea's current focus.\nRSpec versus xUnit: Andrea's personal preferences.
    \nAndrea's limited experience of LiveView and early reactions.\nFeelings about
    computers and phones with slow interfaces!\nThe very slim chances of seeing Elixir
    run on mobile. \nCryptocurrency and Andrea's lack of experience and ambition in
    the space.  \nSome exciting information about Andrea's upcoming book to keep an
    eye out for. \nRené's current projects; Credo, Elixir weekly newsletter, and more!
    \nThe future of Elixir — will it be the next Ruby? \nElixir on a phone; René's
    thoughts on this possibility and its validity. \nUpdates for Credo — all the exciting
    news since our last conversation with René. \nImproving work that you are proud
    of and René's own feelings about Credo.\nThe objectives and vision for Credo and
    improving upon certain pain points. \nWriting and running in Electron and how
    to have fun while doing it!\nThe application of functional programming concepts
    in René's work in Electron.\nRené's suggestion for Credo — using the Credo master
    after it being reworked.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1\nElixirConf
    — https://elixirconf.com/2020 \nGithub Repo for Transcripts Corrections - https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\nAndrea
    Leopardi — https://andrealeopardi.com/\nAndrew Leopardi on Twitter — https://twitter.com/whatyouhide\nRene
    Föhring — http://rrrene.org/\nRene Föhring on Twitter — https://twitter.com/rrrene\nAlfred
    — https://www.alfredapp.com/\nTesla — https://www.tesla.com/\nTempleOS — https://templeos.org/\nElon
    Musk — https://www.forbes.com/profile/elon-musk/\nMint — https://www.mint.com/\nFinch
    — https://finch.io/\nRuby — https://www.ruby-lang.org/en/\nElectron — https://www.electronjs.org/\n
    Special Guests: Andrea Leopardi and René Föhring.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+elvags8f
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2e71b35e-54cc-4bfe-be34-6567c5fb448c.mp3
    length: '57422532'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: We are joined by Andrea Leopardi and René Föhring discussing personal
      preferences, tips and tricks, and recommendations for Elixir and beyond. Make
      sure to tune in today and stay tuned for part 2!
    duration: '39:28'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2e71b35e-54cc-4bfe-be34-6567c5fb448c/cover.jpg?v=1
    summary: "\n        <p>The Elixir community continues to flourish and evolve in
      these uncertain times and in honor of this we have put together a live show
      with a number of special guests! In part one today, we are joined by Andrea
      Leopardi and René Föhring, who we are so happy to welcome back. We get the lowdown
      from each of them in turn, discussing personal preferences, tips and tricks,
      and recommendations for Elixir and beyond. Andrea gets into some of his pet
      peeves and comments on the trend of slow interfaces. We then look at future
      possibilities for Elixir including the outside chance of it being run on mobile
      and for crypto-mining! Andrea also updates us on the book he is currently working
      on so keep an eye out for that in the future! René then steps in to talk about
      his work on Credo, his hopes for it in the future, and some suggestions for
      listeners using it. We do some comparisons between Elixir and Ruby before René
      offers some thoughts on Electron and functional programming concepts. So for
      all this and a whole lot more, make sure to tune in today and stay tuned for
      part 2!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A reintroduction
      to Andrea and his current work in the Elixir space.</li>\n<li>Andrea&#39;s tool
      recommendations and what he uses most at the moment. </li>\n<li>Updates, the
      short term future of the world of Elixir and Andrea&#39;s current focus.</li>\n<li>RSpec
      versus xUnit: Andrea&#39;s personal preferences. </li>\n<li>Andrea&#39;s limited
      experience of LiveView and early reactions.</li>\n<li>Feelings about computers
      and phones with slow interfaces!</li>\n<li>The very slim chances of seeing Elixir
      run on mobile. </li>\n<li>Cryptocurrency and Andrea&#39;s lack of experience
      and ambition in the space.<br></li>\n<li>Some exciting information about Andrea&#39;s
      upcoming book to keep an eye out for. </li>\n<li>René&#39;s current projects;
      Credo, Elixir weekly newsletter, and more! </li>\n<li>The future of Elixir —
      will it be the next Ruby? </li>\n<li>Elixir on a phone; René&#39;s thoughts
      on this possibility and its validity. </li>\n<li>Updates for Credo — all the
      exciting news since our last conversation with René. </li>\n<li>Improving work
      that you are proud of and René&#39;s own feelings about Credo.</li>\n<li>The
      objectives and vision for Credo and improving upon certain pain points. </li>\n<li>Writing
      and running in Electron and how to have fun while doing it!</li>\n<li>The application
      of functional programming concepts in René&#39;s work in Electron.</li>\n<li>René&#39;s
      suggestion for Credo — using the Credo master after it being reworked.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Ecosystem Survey —
      <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\" rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a>
      <br>\nGithub Repo for Transcripts Corrections - <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
      rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrew
      Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nRene
      Föhring — <a href=\"http://rrrene.org/\" rel=\"nofollow\">http://rrrene.org/</a><br>\nRene
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nAlfred
      — <a href=\"https://www.alfredapp.com/\" rel=\"nofollow\">https://www.alfredapp.com/</a><br>\nTesla
      — <a href=\"https://www.tesla.com/\" rel=\"nofollow\">https://www.tesla.com/</a><br>\nTempleOS
      — <a href=\"https://templeos.org/\" rel=\"nofollow\">https://templeos.org/</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nMint
      — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nFinch
      — <a href=\"https://finch.io/\" rel=\"nofollow\">https://finch.io/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElectron
      — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a></p><p>Special
      Guests: Andrea Leopardi and René Föhring.</p>\n      "
  contentEncoded: "\n        <p>The Elixir community continues to flourish and evolve
    in these uncertain times and in honor of this we have put together a live show
    with a number of special guests! In part one today, we are joined by Andrea Leopardi
    and René Föhring, who we are so happy to welcome back. We get the lowdown from
    each of them in turn, discussing personal preferences, tips and tricks, and recommendations
    for Elixir and beyond. Andrea gets into some of his pet peeves and comments on
    the trend of slow interfaces. We then look at future possibilities for Elixir
    including the outside chance of it being run on mobile and for crypto-mining!
    Andrea also updates us on the book he is currently working on so keep an eye out
    for that in the future! René then steps in to talk about his work on Credo, his
    hopes for it in the future, and some suggestions for listeners using it. We do
    some comparisons between Elixir and Ruby before René offers some thoughts on Electron
    and functional programming concepts. So for all this and a whole lot more, make
    sure to tune in today and stay tuned for part 2!</p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>A reintroduction to Andrea and his current work in the
    Elixir space.</li>\n<li>Andrea&#39;s tool recommendations and what he uses most
    at the moment. </li>\n<li>Updates, the short term future of the world of Elixir
    and Andrea&#39;s current focus.</li>\n<li>RSpec versus xUnit: Andrea&#39;s personal
    preferences. </li>\n<li>Andrea&#39;s limited experience of LiveView and early
    reactions.</li>\n<li>Feelings about computers and phones with slow interfaces!</li>\n<li>The
    very slim chances of seeing Elixir run on mobile. </li>\n<li>Cryptocurrency and
    Andrea&#39;s lack of experience and ambition in the space.<br></li>\n<li>Some
    exciting information about Andrea&#39;s upcoming book to keep an eye out for.
    </li>\n<li>René&#39;s current projects; Credo, Elixir weekly newsletter, and more!
    </li>\n<li>The future of Elixir — will it be the next Ruby? </li>\n<li>Elixir
    on a phone; René&#39;s thoughts on this possibility and its validity. </li>\n<li>Updates
    for Credo — all the exciting news since our last conversation with René. </li>\n<li>Improving
    work that you are proud of and René&#39;s own feelings about Credo.</li>\n<li>The
    objectives and vision for Credo and improving upon certain pain points. </li>\n<li>Writing
    and running in Electron and how to have fun while doing it!</li>\n<li>The application
    of functional programming concepts in René&#39;s work in Electron.</li>\n<li>René&#39;s
    suggestion for Credo — using the Credo master after it being reworked.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Ecosystem Survey — <a
    href=\"https://elixirsurvey.typeform.com/to/yYmJv1\" rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a>
    <br>\nGithub Repo for Transcripts Corrections - <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
    rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrew
    Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nRene
    Föhring — <a href=\"http://rrrene.org/\" rel=\"nofollow\">http://rrrene.org/</a><br>\nRene
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nAlfred
    — <a href=\"https://www.alfredapp.com/\" rel=\"nofollow\">https://www.alfredapp.com/</a><br>\nTesla
    — <a href=\"https://www.tesla.com/\" rel=\"nofollow\">https://www.tesla.com/</a><br>\nTempleOS
    — <a href=\"https://templeos.org/\" rel=\"nofollow\">https://templeos.org/</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nMint
    — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nFinch
    — <a href=\"https://finch.io/\" rel=\"nofollow\">https://finch.io/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElectron
    — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a></p><p>Special
    Guests: Andrea Leopardi and René Föhring.</p>\n      "
- title: Chris McCord with a Deep Dive on Phoenix
  slug: s4e8-mccord
  link: https://smartlogic.io/podcast/elixir-wizards/s4e8-mccord
  guid: c87149f2-e430-4fcb-8e22-e3242c625e1b
  pubDate: Thu, 09 Jul 2020 06:00:00 -0400
  pubDateFriendly: July  9, 2020
  description: "Although it’s taken him four seasons to make an appearance, we are
    so glad to finally welcome Chris McCord, creator of the Phoenix framework, onto
    the show. While this season’s focus is on system and application architecture,
    today’s discussion deviates to focus on Phoenix. We get started by hearing more
    about Chris’s programming journey, all the way from TI-Basic to where he is now.
    After this, we dive into LiveView, the project Chris is currently focusing most
    of his energy on. We get into some of the incredible changes that have been made
    including live navigation, deep change tracking optimizations, and static asset
    tracking. Chris shares which of the changes he is most excited about, along with
    why he enjoys seeing LiveView being misused. We then look at some of the critiques
    of LiveView and Phoenix generally. Chris offers counter-arguments to the most
    common criticisms of the framework. He shares how the title of 'framework' can
    be a double-edged sword, as well as why he is hesitant to extract channels prematurely.
    We wrap the show up with a look into the future, hearing more about what’s on
    the horizon for Phoenix and where Chris hopes the Elixir community is headed.
    This conversation was well worth the four season-long wait, so be sure to tune
    in today!\nKey Points From This Episode:\nWhy it took Chris four whole seasons
    to finally make an appearance on the show.\nChris’s programming journey from T-Basic
    all the way to Java, HTML, and PHP.\nHow a broken back landed Chris his first
    paid programming job.\nLearn more about Chris’s current project, LiveView, and
    some of the recent additions.\nWhy the optimizations were the most interesting
    changes for Chris to make on LiveView.\nSome of the most interesting use cases
    Chris has seen of LiveView.\nHow Chris plans to navigate laying LiveView out on
    a larger codebase.\nChris’s take on stateful applications and why the platform
    is so important.\nThe origins of the hilariously termed ‘dead view.’\nSome of
    the most pertinent critiques of LiveView and Phoenix generally.\nChris busts some
    of the invalid critiques of Phoenix.\nWhy the community feedback on LiveWire has
    been so surprising to Chris.\nPhoenix 1.6 changes and when we can expect its release.\nChris’s
    take on whether Elixir is likely to overthrow Rails in terms of popularity.\nThe
    systemic blockers that create adoption friction of Elixir and Phoenix.\nLooking
    into the future — Chris’s goals for Phoenix and his hopes for the Elixir community.\nLinks
    Mentioned in Today’s Episode:\nChris McCord — http://chrismccord.com/\nChris McCord
    on Twitter — https://twitter.com/chrismccord\nDockYard — https://dockyard.com/\nDave’s
    Site — https://www.davesite.com/\nHacking with PHP — http://www.hackingwithphp.com/\nPhoenix
    LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nPhoenix Phrenzy
    — https://groundstation.gigalixirapp.com/\nDashbit: An Upcoming Authentication
    Solution for Phoenix — https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\nAaron
    Renner on GitHub — https://github.com/aaronrenner/phxgenauth\nPhoenix Issues on
    GitHub —\nhttps://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\nPhoenix
    Fire Nest — https://github.com/phoenixframework/firenest\nPhoenix Pub/Sub — https://github.com/phoenixframework/phoenixpubsub\nElixirConf
    2020— https://2020.elixirconf.com/\nElixirConf 2020 Speaker Proposals — https://2020.elixirconf.com/#cfp\nTI-83
    Calculator — https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\nTeach
    Yourself C in 21 Days — https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\nRest
    Fest — https://www.restfest.org/\nJosé Valim on Twitter — https://twitter.com/josevalim\nJason
    Goldberger on LinkedIn — https://www.linkedin.com/in/jason-goldberger-84237392/\nSmartLogic
    — https://smartlogic.io/ \nSmartLogic Jobs — https://smartlogic.workable.com/
    Special Guest: Chris McCord.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+NVs1Q3t3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c87149f2-e430-4fcb-8e22-e3242c625e1b.mp3
    length: '31476646'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: We take a detour away from system and application architecture this
      week to talk with Chris McCord, creator of the Phoenix framework, onto the show.
      Listen in to hear Chris's programming journey from TI-Basic to where he is now.
    duration: '43:42'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c87149f2-e430-4fcb-8e22-e3242c625e1b/cover.jpg?v=1
    summary: "\n        <p>Although it’s taken him four seasons to make an appearance,
      we are so glad to finally welcome Chris McCord, creator of the Phoenix framework,
      onto the show. While this season’s focus is on system and application architecture,
      today’s discussion deviates to focus on Phoenix. We get started by hearing more
      about Chris’s programming journey, all the way from TI-Basic to where he is
      now. After this, we dive into LiveView, the project Chris is currently focusing
      most of his energy on. We get into some of the incredible changes that have
      been made including live navigation, deep change tracking optimizations, and
      static asset tracking. Chris shares which of the changes he is most excited
      about, along with why he enjoys seeing LiveView being misused. We then look
      at some of the critiques of LiveView and Phoenix generally. Chris offers counter-arguments
      to the most common criticisms of the framework. He shares how the title of &#39;framework&#39;
      can be a double-edged sword, as well as why he is hesitant to extract channels
      prematurely. We wrap the show up with a look into the future, hearing more about
      what’s on the horizon for Phoenix and where Chris hopes the Elixir community
      is headed. This conversation was well worth the four season-long wait, so be
      sure to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
      it took Chris four whole seasons to finally make an appearance on the show.</li>\n<li>Chris’s
      programming journey from T-Basic all the way to Java, HTML, and PHP.</li>\n<li>How
      a broken back landed Chris his first paid programming job.</li>\n<li>Learn more
      about Chris’s current project, LiveView, and some of the recent additions.</li>\n<li>Why
      the optimizations were the most interesting changes for Chris to make on LiveView.</li>\n<li>Some
      of the most interesting use cases Chris has seen of LiveView.</li>\n<li>How
      Chris plans to navigate laying LiveView out on a larger codebase.</li>\n<li>Chris’s
      take on stateful applications and why the platform is so important.</li>\n<li>The
      origins of the hilariously termed ‘dead view.’</li>\n<li>Some of the most pertinent
      critiques of LiveView and Phoenix generally.</li>\n<li>Chris busts some of the
      invalid critiques of Phoenix.</li>\n<li>Why the community feedback on LiveWire
      has been so surprising to Chris.</li>\n<li>Phoenix 1.6 changes and when we can
      expect its release.</li>\n<li>Chris’s take on whether Elixir is likely to overthrow
      Rails in terms of popularity.</li>\n<li>The systemic blockers that create adoption
      friction of Elixir and Phoenix.</li>\n<li>Looking into the future — Chris’s
      goals for Phoenix and his hopes for the Elixir community.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Chris McCord — <a href=\"http://chrismccord.com/\"
      rel=\"nofollow\">http://chrismccord.com/</a><br>\nChris McCord on Twitter —
      <a href=\"https://twitter.com/chris_mccord\" rel=\"nofollow\">https://twitter.com/chris_mccord</a><br>\nDockYard
      — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a><br>\nDave’s
      Site — <a href=\"https://www.davesite.com/\" rel=\"nofollow\">https://www.davesite.com/</a><br>\nHacking
      with PHP — <a href=\"http://www.hackingwithphp.com/\" rel=\"nofollow\">http://www.hackingwithphp.com/</a><br>\nPhoenix
      LiveView — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
      Phrenzy — <a href=\"https://groundstation.gigalixirapp.com/\" rel=\"nofollow\">https://groundstation.gigalixirapp.com/</a><br>\nDashbit:
      An Upcoming Authentication Solution for Phoenix — <a href=\"https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\"
      rel=\"nofollow\">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>\nAaron
      Renner on GitHub — <a href=\"https://github.com/aaronrenner/phx_gen_auth\" rel=\"nofollow\">https://github.com/aaronrenner/phx_gen_auth</a><br>\nPhoenix
      Issues on GitHub —<br>\n<a href=\"https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>\nPhoenix
      Fire Nest — <a href=\"https://github.com/phoenixframework/firenest\" rel=\"nofollow\">https://github.com/phoenixframework/firenest</a><br>\nPhoenix
      Pub/Sub — <a href=\"https://github.com/phoenixframework/phoenix_pubsub\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_pubsub</a><br>\nElixirConf
      2020— <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\nElixirConf
      2020 Speaker Proposals — <a href=\"https://2020.elixirconf.com/#cfp\" rel=\"nofollow\">https://2020.elixirconf.com/#cfp</a><br>\nTI-83
      Calculator — <a href=\"https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\"
      rel=\"nofollow\">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>\nTeach
      Yourself C in 21 Days — <a href=\"https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\"
      rel=\"nofollow\">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>\nRest
      Fest — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nJosé
      Valim on Twitter — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nJason
      Goldberger on LinkedIn — <a href=\"https://www.linkedin.com/in/jason-goldberger-84237392/\"
      rel=\"nofollow\">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.workable.com/\" rel=\"nofollow\">https://smartlogic.workable.com/</a></p><p>Special
      Guest: Chris McCord.</p>\n      "
  contentEncoded: "\n        <p>Although it’s taken him four seasons to make an appearance,
    we are so glad to finally welcome Chris McCord, creator of the Phoenix framework,
    onto the show. While this season’s focus is on system and application architecture,
    today’s discussion deviates to focus on Phoenix. We get started by hearing more
    about Chris’s programming journey, all the way from TI-Basic to where he is now.
    After this, we dive into LiveView, the project Chris is currently focusing most
    of his energy on. We get into some of the incredible changes that have been made
    including live navigation, deep change tracking optimizations, and static asset
    tracking. Chris shares which of the changes he is most excited about, along with
    why he enjoys seeing LiveView being misused. We then look at some of the critiques
    of LiveView and Phoenix generally. Chris offers counter-arguments to the most
    common criticisms of the framework. He shares how the title of &#39;framework&#39;
    can be a double-edged sword, as well as why he is hesitant to extract channels
    prematurely. We wrap the show up with a look into the future, hearing more about
    what’s on the horizon for Phoenix and where Chris hopes the Elixir community is
    headed. This conversation was well worth the four season-long wait, so be sure
    to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
    it took Chris four whole seasons to finally make an appearance on the show.</li>\n<li>Chris’s
    programming journey from T-Basic all the way to Java, HTML, and PHP.</li>\n<li>How
    a broken back landed Chris his first paid programming job.</li>\n<li>Learn more
    about Chris’s current project, LiveView, and some of the recent additions.</li>\n<li>Why
    the optimizations were the most interesting changes for Chris to make on LiveView.</li>\n<li>Some
    of the most interesting use cases Chris has seen of LiveView.</li>\n<li>How Chris
    plans to navigate laying LiveView out on a larger codebase.</li>\n<li>Chris’s
    take on stateful applications and why the platform is so important.</li>\n<li>The
    origins of the hilariously termed ‘dead view.’</li>\n<li>Some of the most pertinent
    critiques of LiveView and Phoenix generally.</li>\n<li>Chris busts some of the
    invalid critiques of Phoenix.</li>\n<li>Why the community feedback on LiveWire
    has been so surprising to Chris.</li>\n<li>Phoenix 1.6 changes and when we can
    expect its release.</li>\n<li>Chris’s take on whether Elixir is likely to overthrow
    Rails in terms of popularity.</li>\n<li>The systemic blockers that create adoption
    friction of Elixir and Phoenix.</li>\n<li>Looking into the future — Chris’s goals
    for Phoenix and his hopes for the Elixir community.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Chris McCord — <a href=\"http://chrismccord.com/\"
    rel=\"nofollow\">http://chrismccord.com/</a><br>\nChris McCord on Twitter — <a
    href=\"https://twitter.com/chris_mccord\" rel=\"nofollow\">https://twitter.com/chris_mccord</a><br>\nDockYard
    — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a><br>\nDave’s
    Site — <a href=\"https://www.davesite.com/\" rel=\"nofollow\">https://www.davesite.com/</a><br>\nHacking
    with PHP — <a href=\"http://www.hackingwithphp.com/\" rel=\"nofollow\">http://www.hackingwithphp.com/</a><br>\nPhoenix
    LiveView — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
    Phrenzy — <a href=\"https://groundstation.gigalixirapp.com/\" rel=\"nofollow\">https://groundstation.gigalixirapp.com/</a><br>\nDashbit:
    An Upcoming Authentication Solution for Phoenix — <a href=\"https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\"
    rel=\"nofollow\">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>\nAaron
    Renner on GitHub — <a href=\"https://github.com/aaronrenner/phx_gen_auth\" rel=\"nofollow\">https://github.com/aaronrenner/phx_gen_auth</a><br>\nPhoenix
    Issues on GitHub —<br>\n<a href=\"https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>\nPhoenix
    Fire Nest — <a href=\"https://github.com/phoenixframework/firenest\" rel=\"nofollow\">https://github.com/phoenixframework/firenest</a><br>\nPhoenix
    Pub/Sub — <a href=\"https://github.com/phoenixframework/phoenix_pubsub\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_pubsub</a><br>\nElixirConf
    2020— <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\nElixirConf
    2020 Speaker Proposals — <a href=\"https://2020.elixirconf.com/#cfp\" rel=\"nofollow\">https://2020.elixirconf.com/#cfp</a><br>\nTI-83
    Calculator — <a href=\"https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\"
    rel=\"nofollow\">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>\nTeach
    Yourself C in 21 Days — <a href=\"https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\"
    rel=\"nofollow\">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>\nRest
    Fest — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nJosé
    Valim on Twitter — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nJason
    Goldberger on LinkedIn — <a href=\"https://www.linkedin.com/in/jason-goldberger-84237392/\"
    rel=\"nofollow\">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.workable.com/\" rel=\"nofollow\">https://smartlogic.workable.com/</a></p><p>Special
    Guest: Chris McCord.</p>\n      "
- title: Amos King on MUDs, Architecture, Domain-driven design, and Military Bases
  slug: s4e7-king
  link: https://smartlogic.io/podcast/elixir-wizards/s4e7-king
  guid: c4183a48-6039-4dc1-b54b-c43973086490
  pubDate: Thu, 02 Jul 2020 06:00:00 -0400
  pubDateFriendly: July  2, 2020
  description: "Today’s guest is Amos King, Principal CEO at Binary Noggin, and host
    on the Elixir Outlaws and This Agile Life podcasts. This episode is centered around
    a casual conversation about everything from programming, the military, sarcasm,
    and puns to systems and application architecture, domain-driven design, and bitmasks.
    Amos shares with us how he got into programming, after wanting to be a doctor
    or an engineer first, and tells us how he met Famous Amos. We talk about spectrum
    analyzers, Elixir resources, and MUDs, as well as type-first design and Haskell.
    Amos gives us his takes on domain-driven design, API, booleans, and enums, and
    even roasts his co-host Chris Keithley a little. Don’t miss this episode for everything
    you’ve ever wanted to know about the legendary Amos King (and a whole lot more)!\nKey
    Points From This Episode:\n* Amos explains what Adkron means, which is his gaming
    and social media handle.\n* Where the name Elixir Outlaws for the podcast came
    from.\n* How Amos got into programming as a career, after wanting to be a surgeon
    and an engineer.\n* What Amos’s first opportunity as a programmer was, and how
    he met Wally Amos.\n* Amos explains what a spectrum analyzer is, based on his
    experience in the military.\n* Amos shares why Steve Bussey’s book, Real-Time
    Phoenix, is his favorite Elixir resource.\n* Eric and Amos talk about the MUD
    engine that they worked on together.\n* What systems and application architecture
    means to Amos and how it differs from design.\n* What type-first design (TFD)
    is and Amos’s opinion on it as a thought exercise.\n* Amos talks about Haskell
    programming and domain-driven design.\n* Relating domain-driven design to a car
    dealership to describe types and terminology.\n* Amos talks a bit about his company
    and what they do.\n* Justus, Eric, and Amos debate the term “architect” and what
    it actually means.\n* Amos shares his take on API architecture, booleans, enums,
    and bitmasks.\n* Amos gives his hot take on his co-host Chris Keithley.\nLinks
    Mentioned in Today’s Episode:\nAmos King on Twitter — https://twitter.com/adkron\nElixir
    Outlaws Podcast — https://elixiroutlaws.com/\nWally Amos — https://en.wikipedia.org/wiki/WallyAmos\nWindows
    3.0 — https://en.wikipedia.org/wiki/Windows3.0\nReal-Time Phoenix on Pragmatic
    Bookshelf — https://pragprog.com/book/sbsockets/real-time-phoenix\nElixir School
    — https://elixirschool.com/en/\nElixir Inaction — https://twitter.com/gausby/status/986550202248187904\nThis
    Agile Life Podcast — https://www.thisagilelife.com/\nScreen — https://screen.so/#/home\nHaskell
    Book — https://haskellbook.com/\nBinary Noggin Website — https://binarynoggin.com/\nBinary
    Noggin on Twitter — https://twitter.com/BinaryNoggin\nSmartLogic — https://smartlogic.io/
    \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich — https://oestrich.org/\nKalevala
    — https://github.com/oestrich/kalevala\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nEric
    Oestrich on GitHub — https://github.com/oestrich Special Guest: Amos King.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FoPa6y-U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c4183a48-6039-4dc1-b54b-c43973086490.mp3
    length: '80349782'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws
      and This Agile Life podcasts joins us to talk about everything from programming,
      the military, sarcasm, and puns to systems and application architecture, domain-driven
      design, and bitmasks.
    duration: '55:23'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c4183a48-6039-4dc1-b54b-c43973086490/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Amos King, Principal CEO at Binary Noggin,
      and host on the Elixir Outlaws and This Agile Life podcasts. This episode is
      centered around a casual conversation about everything from programming, the
      military, sarcasm, and puns to systems and application architecture, domain-driven
      design, and bitmasks. Amos shares with us how he got into programming, after
      wanting to be a doctor or an engineer first, and tells us how he met Famous
      Amos. We talk about spectrum analyzers, Elixir resources, and MUDs, as well
      as type-first design and Haskell. Amos gives us his takes on domain-driven design,
      API, booleans, and enums, and even roasts his co-host Chris Keithley a little.
      Don’t miss this episode for everything you’ve ever wanted to know about the
      legendary Amos King (and a whole lot more)!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Amos
      explains what Adkron means, which is his gaming and social media handle.</li>\n<li>Where
      the name Elixir Outlaws for the podcast came from.</li>\n<li>How Amos got into
      programming as a career, after wanting to be a surgeon and an engineer.</li>\n<li>What
      Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>\n<li>Amos
      explains what a spectrum analyzer is, based on his experience in the military.</li>\n<li>Amos
      shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>\n<li>Eric
      and Amos talk about the MUD engine that they worked on together.</li>\n<li>What
      systems and application architecture means to Amos and how it differs from design.</li>\n<li>What
      type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>\n<li>Amos
      talks about Haskell programming and domain-driven design.</li>\n<li>Relating
      domain-driven design to a car dealership to describe types and terminology.</li>\n<li>Amos
      talks a bit about his company and what they do.</li>\n<li>Justus, Eric, and
      Amos debate the term “architect” and what it actually means.</li>\n<li>Amos
      shares his take on API architecture, booleans, enums, and bitmasks.</li>\n<li>Amos
      gives his hot take on his co-host Chris Keithley.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Amos King on Twitter — <a href=\"https://twitter.com/adkron\"
      rel=\"nofollow\">https://twitter.com/adkron</a><br>\nElixir Outlaws Podcast
      — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWally
      Amos — <a href=\"https://en.wikipedia.org/wiki/Wally_Amos\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Wally_Amos</a><br>\nWindows
      3.0 — <a href=\"https://en.wikipedia.org/wiki/Windows_3.0\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Windows_3.0</a><br>\nReal-Time
      Phoenix on Pragmatic Bookshelf — <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
      rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nElixir
      Inaction — <a href=\"https://twitter.com/gausby/status/986550202248187904\"
      rel=\"nofollow\">https://twitter.com/gausby/status/986550202248187904</a><br>\nThis
      Agile Life Podcast — <a href=\"https://www.thisagilelife.com/\" rel=\"nofollow\">https://www.thisagilelife.com/</a><br>\nScreen
      — <a href=\"https://screen.so/#/home\" rel=\"nofollow\">https://screen.so/#/home</a><br>\nHaskell
      Book — <a href=\"https://haskellbook.com/\" rel=\"nofollow\">https://haskellbook.com/</a><br>\nBinary
      Noggin Website — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
      Noggin on Twitter — <a href=\"https://twitter.com/BinaryNoggin\" rel=\"nofollow\">https://twitter.com/BinaryNoggin</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich — <a
      href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nKalevala
      — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Amos King.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Amos King, Principal CEO at Binary
    Noggin, and host on the Elixir Outlaws and This Agile Life podcasts. This episode
    is centered around a casual conversation about everything from programming, the
    military, sarcasm, and puns to systems and application architecture, domain-driven
    design, and bitmasks. Amos shares with us how he got into programming, after wanting
    to be a doctor or an engineer first, and tells us how he met Famous Amos. We talk
    about spectrum analyzers, Elixir resources, and MUDs, as well as type-first design
    and Haskell. Amos gives us his takes on domain-driven design, API, booleans, and
    enums, and even roasts his co-host Chris Keithley a little. Don’t miss this episode
    for everything you’ve ever wanted to know about the legendary Amos King (and a
    whole lot more)!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Amos
    explains what Adkron means, which is his gaming and social media handle.</li>\n<li>Where
    the name Elixir Outlaws for the podcast came from.</li>\n<li>How Amos got into
    programming as a career, after wanting to be a surgeon and an engineer.</li>\n<li>What
    Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>\n<li>Amos
    explains what a spectrum analyzer is, based on his experience in the military.</li>\n<li>Amos
    shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>\n<li>Eric
    and Amos talk about the MUD engine that they worked on together.</li>\n<li>What
    systems and application architecture means to Amos and how it differs from design.</li>\n<li>What
    type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>\n<li>Amos
    talks about Haskell programming and domain-driven design.</li>\n<li>Relating domain-driven
    design to a car dealership to describe types and terminology.</li>\n<li>Amos talks
    a bit about his company and what they do.</li>\n<li>Justus, Eric, and Amos debate
    the term “architect” and what it actually means.</li>\n<li>Amos shares his take
    on API architecture, booleans, enums, and bitmasks.</li>\n<li>Amos gives his hot
    take on his co-host Chris Keithley.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Amos King on Twitter — <a href=\"https://twitter.com/adkron\"
    rel=\"nofollow\">https://twitter.com/adkron</a><br>\nElixir Outlaws Podcast —
    <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWally
    Amos — <a href=\"https://en.wikipedia.org/wiki/Wally_Amos\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Wally_Amos</a><br>\nWindows
    3.0 — <a href=\"https://en.wikipedia.org/wiki/Windows_3.0\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Windows_3.0</a><br>\nReal-Time
    Phoenix on Pragmatic Bookshelf — <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
    rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nElixir
    Inaction — <a href=\"https://twitter.com/gausby/status/986550202248187904\" rel=\"nofollow\">https://twitter.com/gausby/status/986550202248187904</a><br>\nThis
    Agile Life Podcast — <a href=\"https://www.thisagilelife.com/\" rel=\"nofollow\">https://www.thisagilelife.com/</a><br>\nScreen
    — <a href=\"https://screen.so/#/home\" rel=\"nofollow\">https://screen.so/#/home</a><br>\nHaskell
    Book — <a href=\"https://haskellbook.com/\" rel=\"nofollow\">https://haskellbook.com/</a><br>\nBinary
    Noggin Website — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
    Noggin on Twitter — <a href=\"https://twitter.com/BinaryNoggin\" rel=\"nofollow\">https://twitter.com/BinaryNoggin</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nKalevala
    — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Amos King.</p>\n      "
- title: Sundi Myint on The Visual Side of Elixir, the History of Emojis, and Test-
    and Domain-Driven Architecture
  slug: s4e6-myint
  link: https://smartlogic.io/podcast/elixir-wizards/s4e6-myint
  guid: f14188bd-903b-49eb-bc8b-f52429966e63
  pubDate: Thu, 25 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 25, 2020
  description: "Welcome to another episode of Elixir Wizards as we continue our journey
    into system and application architecture! Our featured guest today is Sundi Myint
    and she is here to share her journey with Elixir and her non-traditional path
    to programming. We hear about Sundi's interest in gaming, her role at Cava and
    a bit of the inspiration behind her amazing Instagram account! We discuss her
    first internship and how she found herself in the role quite suddenly before diving
    into the motivation behind her blog post on the history of emojis. Sundi did some
    serious research into this interesting subject and she shares some of the more
    technical aspects of the story with us on the show. We talk about architecture
    and both test and design-driven approaches. Sundi also explains her process and
    how mapping things out on a whiteboard has been her favored way to do things for
    some time. Andrea Leopardi then joins us for another edition of Pattern Matching
    with Todd! He answers Todd's questions about his home life, media favorites, future
    projects and more!\nKey Points From This Episode:\nSundi's Instagram aesthetic
    and her love of food and photography. \nHow Sundi got into programming and her
    first internship.  \nGetting hired at Cava and an introduction to Elixir and the
    community.\nVideo game programming and Sundi's thoughts on the possibility of
    pursuing this path. \nSundi's first paid job out of college and the tech stack
    at the company.\nThoughts on easily available learning resources and the power
    of Live View. \nSome background on Sundi's amazing blog post on the history of
    emojis.\nUnderstanding Unicode, how it works and its role in translation and interpretation.
    \nSundi's perspectives on architecture and domain-driven design.\nCode design
    strategies, workflow and the idea and practice of test-driven code. \nConversations
    with stakeholders and moving to the planning stage. \nHow Sundi uses whiteboards
    to map out her work graphically and Elixir's part in this. \nAndrea's travels
    and some of the amazing locations he has visited for conferences. \nHome life
    and lifestyle in quarantine for Andrea in Italy.\nAlternative career paths and
    Andrea's other interests; balancing creativity and logic. \nMusic, movies and
    television choices for Andrea.\nExciting new projects on the horizon for Andrea;
    a book, HTTP and more!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nSundi Myint on Twitter — https://twitter.com/sundikhin\nSundi Myint on Instagram
    — https://www.instagram.com/sundikhin\nCava — https://cava.com/\nHackers & Painters
    — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nLonestar
    Elixir — https://lonestarelixir.com/\nBruce Tate — https://codesync.global/speaker/bruce-tate/\nEA
    — https://www.ea.com\nGroxio Learning — https://grox.io/training/elixir/home\nLive
    View — https://support.google.com/maps/thread/11554255?hl=en\nBuild a real-time
    Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — https://www.youtube.com/watch?v=MZvmYaFkNJI\nThe
    History of Emojis Blog Post — https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\nBurgergate
    https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\nJoy
    of Coding — https://joyofcoding.org/\nTest-driven development — https://en.wikipedia.org/wiki/Test-drivendevelopment\nMox
    — https://hexdocs.pm/mox/Mox.html\nVenmo — https://venmo.com/\nMint — https://www.mint.com/\nAvengers
    — https://www.marvel.com/movies/avengers-endgame\nDC Elixir — https://www.meetup.com/DC-Elixir/\nTodd
    Resudek — https://medium.com/@toddresudek\nAndrea Leopardi — https://andrealeopardi.com/\nBrooklyn
    Zelenka — https://medium.com/@expede\nThe Lord of Rings — https://www.rottentomatoes.com/franchise/lordoftherings\nWes
    Anderson — https://www.imdb.com/name/nm0027572/\nScott Pilgrim vs. The World —
    https://www.rottentomatoes.com/m/scottpilgrimsvstheworld\nCommunity — https://www.rottentomatoes.com/tv/community\nThe
    Office — https://www.rottentomatoes.com/tv/theoffice\nRick and Morty — https://www.rottentomatoes.com/tv/rickand_morty\nJustus
    Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich on Twitter —
    https://twitter.com/ericoestrich Special Guests: Andrea Leopardi and Sundi Myint.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ssgk_8p1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f14188bd-903b-49eb-bc8b-f52429966e63.mp3
    length: '66791874'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: "Our featured guest today is Sundi Myint and she is here to share her
      journey with Elixir and her non-traditional path to programming. We hear about
      Sundi's interest in gaming, experience using Elixir at Cava, and the inspiration
      behind her amazing Instagram account.  Plus we dive into Sundi's History of
      Emojis technical blog posts - a favorite of Justus'. \n\nAnd Pattern Matching
      with Todd is back with a conversation with Andrea Leopardi."
    duration: '45:58'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f14188bd-903b-49eb-bc8b-f52429966e63/cover.jpg?v=1
    summary: "\n        <p>Welcome to another episode of Elixir Wizards as we continue
      our journey into system and application architecture! Our featured guest today
      is Sundi Myint and she is here to share her journey with Elixir and her non-traditional
      path to programming. We hear about Sundi&#39;s interest in gaming, her role
      at Cava and a bit of the inspiration behind her amazing Instagram account! We
      discuss her first internship and how she found herself in the role quite suddenly
      before diving into the motivation behind her blog post on the history of emojis.
      Sundi did some serious research into this interesting subject and she shares
      some of the more technical aspects of the story with us on the show. We talk
      about architecture and both test and design-driven approaches. Sundi also explains
      her process and how mapping things out on a whiteboard has been her favored
      way to do things for some time. Andrea Leopardi then joins us for another edition
      of Pattern Matching with Todd! He answers Todd&#39;s questions about his home
      life, media favorites, future projects and more!</p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>Sundi&#39;s Instagram aesthetic and her love of food
      and photography. </li>\n<li>How Sundi got into programming and her first internship.<br></li>\n<li>Getting
      hired at Cava and an introduction to Elixir and the community.</li>\n<li>Video
      game programming and Sundi&#39;s thoughts on the possibility of pursuing this
      path. </li>\n<li>Sundi&#39;s first paid job out of college and the tech stack
      at the company.</li>\n<li>Thoughts on easily available learning resources and
      the power of Live View. </li>\n<li>Some background on Sundi&#39;s amazing blog
      post on the history of emojis.</li>\n<li>Understanding Unicode, how it works
      and its role in translation and interpretation. </li>\n<li>Sundi&#39;s perspectives
      on architecture and domain-driven design.</li>\n<li>Code design strategies,
      workflow and the idea and practice of test-driven code. </li>\n<li>Conversations
      with stakeholders and moving to the planning stage. </li>\n<li>How Sundi uses
      whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>\n<li>Andrea&#39;s
      travels and some of the amazing locations he has visited for conferences. </li>\n<li>Home
      life and lifestyle in quarantine for Andrea in Italy.</li>\n<li>Alternative
      career paths and Andrea&#39;s other interests; balancing creativity and logic.
      </li>\n<li>Music, movies and television choices for Andrea.</li>\n<li>Exciting
      new projects on the horizon for Andrea; a book, HTTP and more!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSundi Myint on Twitter — <a
      href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nSundi
      Myint on Instagram — <a href=\"https://www.instagram.com/sundikhin\" rel=\"nofollow\">https://www.instagram.com/sundikhin</a><br>\nCava
      — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nHackers
      &amp; Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
      Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nEA
      — <a href=\"https://www.ea.com\" rel=\"nofollow\">https://www.ea.com</a><br>\nGroxio
      Learning — <a href=\"https://grox.io/training/elixir/home\" rel=\"nofollow\">https://grox.io/training/elixir/home</a><br>\nLive
      View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nBuild
      a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href=\"https://www.youtube.com/watch?v=MZvmYaFkNJI\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>\nThe History
      of Emojis Blog Post — <a href=\"https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\"
      rel=\"nofollow\">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>\nBurgergate
      <a href=\"https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\"
      rel=\"nofollow\">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>\nJoy
      of Coding — <a href=\"https://joyofcoding.org/\" rel=\"nofollow\">https://joyofcoding.org/</a><br>\nTest-driven
      development — <a href=\"https://en.wikipedia.org/wiki/Test-driven_development\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Test-driven_development</a><br>\nMox
      — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nVenmo
      — <a href=\"https://venmo.com/\" rel=\"nofollow\">https://venmo.com/</a><br>\nMint
      — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nAvengers
      — <a href=\"https://www.marvel.com/movies/avengers-endgame\" rel=\"nofollow\">https://www.marvel.com/movies/avengers-endgame</a><br>\nDC
      Elixir — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nTodd
      Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nBrooklyn
      Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nThe
      Lord of Rings — <a href=\"https://www.rottentomatoes.com/franchise/lord_of_the_rings\"
      rel=\"nofollow\">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>\nWes
      Anderson — <a href=\"https://www.imdb.com/name/nm0027572/\" rel=\"nofollow\">https://www.imdb.com/name/nm0027572/</a><br>\nScott
      Pilgrim vs. The World — <a href=\"https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world\"
      rel=\"nofollow\">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>\nCommunity
      — <a href=\"https://www.rottentomatoes.com/tv/community\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/community</a><br>\nThe
      Office — <a href=\"https://www.rottentomatoes.com/tv/the_office\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/the_office</a><br>\nRick
      and Morty — <a href=\"https://www.rottentomatoes.com/tv/rick_and_morty\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>\nJustus
      Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guests: Andrea Leopardi and Sundi Myint.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another episode of Elixir Wizards as we
    continue our journey into system and application architecture! Our featured guest
    today is Sundi Myint and she is here to share her journey with Elixir and her
    non-traditional path to programming. We hear about Sundi&#39;s interest in gaming,
    her role at Cava and a bit of the inspiration behind her amazing Instagram account!
    We discuss her first internship and how she found herself in the role quite suddenly
    before diving into the motivation behind her blog post on the history of emojis.
    Sundi did some serious research into this interesting subject and she shares some
    of the more technical aspects of the story with us on the show. We talk about
    architecture and both test and design-driven approaches. Sundi also explains her
    process and how mapping things out on a whiteboard has been her favored way to
    do things for some time. Andrea Leopardi then joins us for another edition of
    Pattern Matching with Todd! He answers Todd&#39;s questions about his home life,
    media favorites, future projects and more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Sundi&#39;s
    Instagram aesthetic and her love of food and photography. </li>\n<li>How Sundi
    got into programming and her first internship.<br></li>\n<li>Getting hired at
    Cava and an introduction to Elixir and the community.</li>\n<li>Video game programming
    and Sundi&#39;s thoughts on the possibility of pursuing this path. </li>\n<li>Sundi&#39;s
    first paid job out of college and the tech stack at the company.</li>\n<li>Thoughts
    on easily available learning resources and the power of Live View. </li>\n<li>Some
    background on Sundi&#39;s amazing blog post on the history of emojis.</li>\n<li>Understanding
    Unicode, how it works and its role in translation and interpretation. </li>\n<li>Sundi&#39;s
    perspectives on architecture and domain-driven design.</li>\n<li>Code design strategies,
    workflow and the idea and practice of test-driven code. </li>\n<li>Conversations
    with stakeholders and moving to the planning stage. </li>\n<li>How Sundi uses
    whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>\n<li>Andrea&#39;s
    travels and some of the amazing locations he has visited for conferences. </li>\n<li>Home
    life and lifestyle in quarantine for Andrea in Italy.</li>\n<li>Alternative career
    paths and Andrea&#39;s other interests; balancing creativity and logic. </li>\n<li>Music,
    movies and television choices for Andrea.</li>\n<li>Exciting new projects on the
    horizon for Andrea; a book, HTTP and more!</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSundi Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nSundi
    Myint on Instagram — <a href=\"https://www.instagram.com/sundikhin\" rel=\"nofollow\">https://www.instagram.com/sundikhin</a><br>\nCava
    — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nHackers
    &amp; Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
    Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nEA
    — <a href=\"https://www.ea.com\" rel=\"nofollow\">https://www.ea.com</a><br>\nGroxio
    Learning — <a href=\"https://grox.io/training/elixir/home\" rel=\"nofollow\">https://grox.io/training/elixir/home</a><br>\nLive
    View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nBuild
    a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href=\"https://www.youtube.com/watch?v=MZvmYaFkNJI\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>\nThe History
    of Emojis Blog Post — <a href=\"https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\"
    rel=\"nofollow\">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>\nBurgergate
    <a href=\"https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\"
    rel=\"nofollow\">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>\nJoy
    of Coding — <a href=\"https://joyofcoding.org/\" rel=\"nofollow\">https://joyofcoding.org/</a><br>\nTest-driven
    development — <a href=\"https://en.wikipedia.org/wiki/Test-driven_development\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Test-driven_development</a><br>\nMox
    — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nVenmo
    — <a href=\"https://venmo.com/\" rel=\"nofollow\">https://venmo.com/</a><br>\nMint
    — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nAvengers
    — <a href=\"https://www.marvel.com/movies/avengers-endgame\" rel=\"nofollow\">https://www.marvel.com/movies/avengers-endgame</a><br>\nDC
    Elixir — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nTodd
    Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nBrooklyn
    Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nThe
    Lord of Rings — <a href=\"https://www.rottentomatoes.com/franchise/lord_of_the_rings\"
    rel=\"nofollow\">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>\nWes
    Anderson — <a href=\"https://www.imdb.com/name/nm0027572/\" rel=\"nofollow\">https://www.imdb.com/name/nm0027572/</a><br>\nScott
    Pilgrim vs. The World — <a href=\"https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world\"
    rel=\"nofollow\">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>\nCommunity
    — <a href=\"https://www.rottentomatoes.com/tv/community\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/community</a><br>\nThe
    Office — <a href=\"https://www.rottentomatoes.com/tv/the_office\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/the_office</a><br>\nRick
    and Morty — <a href=\"https://www.rottentomatoes.com/tv/rick_and_morty\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>\nJustus
    Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guests: Andrea Leopardi and Sundi Myint.</p>\n      "
- title: Dave Thomas on Learning How Things Work
  slug: s4e5-thomas
  link: https://smartlogic.io/podcast/elixir-wizards/s4e5-thomas
  guid: 9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f
  pubDate: Thu, 18 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 18, 2020
  description: "Dave Thomas is recognized internationally as an expert who develops
    high-quality software–accurate and highly flexible systems. He helped write the
    now-famous Agile Manifesto, and regularly gives inspiring and controversial speeches
    on new ways of producing software. He is the author of six books, including the
    best selling The Pragmatic Programmer: From Journeyman to Master and Programming
    Ruby: A Pragmatic Programmer's Guide. In this episode, we discuss everything from
    learning computer science in an academic setting, test-driven development, and
    state to architecture, libraries, and what Dave loves about what he does. Dave
    talks about his students, both those who are passionate and those who are just
    going through the motions, as well as his own experience of being a student. He
    explains to us what he means when he said he doesn’t write unit tests at an Elixir
    conference in Austin recently, we talk about his favorite and most rewarding books,
    and Dave gives us a really unique answer to our architecture question. We discuss
    domain-driven design, microservice architectures, and Elixir libraries, and Dave
    shares why is so passionate about what he does. Tune in to hear some of Dave’s
    strong opinions on programming!\nKey Points From This Episode:\nThe Coding Gnome
    and how it bridges the gap between learned and practical experience.\nDave talks
    about being a lecturer at SMU and why students aren’t prepared for the real world.\nWhy
    Dave stopped teaching Elixir at SMU.\nStudents who study computer science for
    passion versus those who study it to get a job.\nDave talks about his experience
    of studying computer science at university.\nThe inspiring and controversial keynote
    addresses Dave has given at conferences.\nWhat it means when Dave said he doesn’t
    write unit tests and the projects he’s working on.\nThe culture around test-driven
    development and writing tests when Dave was at university.\nDave tells a story
    about writing the incoming telex switch for the UK.\nWhy the first edition of
    Programming Ruby was Dave’s favorite book to write.\nWhy The Pragmatic Programmer
    is the book Dave is most proud of.\nDave isn’t currently writing a new book, so
    he can concentrate on pseudo-course material.\nDave explains the process of developing
    a narrative arc when writing a technical book.\nWhat the state of a system is
    and how it is distinct from data.\nDave describes why he believes architecture
    is a misunderstood and borrowed metaphor.\nDave’s opinions on buzzwords like domain-driven
    design and microservice architectures.\nThe status on The Component Library, as
    mentioned by Dave in his EMPEX 2018 keynote.\nGetting involved with publishing
    Elixir libraries and what his process looks like.\nHow Dave likes to receive product
    specification when dealing with clients.\nWhat Dave loves about the programming
    industry.\nWhy Dave doesn’t write Elixir anymore and why he became frustrated
    with it.\nWhere Dave is going from here to how best to express what he wants.\nFinal
    advice from Dave, not to abandon Elixir if it makes you happy.\nLinks Mentioned
    in Today’s Episode:\nDave Thomas on Twitter – https://twitter.com/pragdave\nThe
    Coding Gnome – https://pragdave.me/\nThe Coding Gnome Training — https://codestool.coding-gnome.com/\nAgile
    Manifesto – https://agilemanifesto.org/\nThe Pragmatic Programmer – https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\nProgramming
    Ruby – https://en.wikipedia.org/wiki/ProgrammingRuby\nRobert Kowalski on Wikipedia
    — https://en.wikipedia.org/wiki/RobertKowalski\nDave Thomas on Wikipedia — https://en.wikipedia.org/wiki/DaveThomas(programmer)\nSpace-state
    representation — https://en.wikipedia.org/wiki/State-spacerepresentation\nChristopher
    Alexander — https://en.wikipedia.org/wiki/ChristopherAlexander\nA Pattern Language
    — https://en.wikipedia.org/wiki/APatternLanguage\nDave Thomas Keynote at Empex
    NYC 2018 — https://www.youtube.com/watch?v=6U7cLUygMeI\nSmartLogic — https://smartlogic.io/
    \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich on
    Twitter — https://twitter.com/ericoestrich\n Special Guest: Dave Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+_-HB_kh-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f.mp3
    length: '100994010'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Dave Thomas is recognized internationally as an expert who develops
      high-quality software–accurate and highly flexible systems. Today we pick his
      brain on everything from learning computer science in an academic setting, test-driven
      development, and state to architecture, libraries, and what Dave loves about
      what he does. '
    duration: '1:09:43'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f/cover.jpg?v=1
    summary: "\n        <p>Dave Thomas is recognized internationally as an expert
      who develops high-quality software–accurate and highly flexible systems. He
      helped write the now-famous Agile Manifesto, and regularly gives inspiring and
      controversial speeches on new ways of producing software. He is the author of
      six books, including the best selling The Pragmatic Programmer: From Journeyman
      to Master and Programming Ruby: A Pragmatic Programmer&#39;s Guide. In this
      episode, we discuss everything from learning computer science in an academic
      setting, test-driven development, and state to architecture, libraries, and
      what Dave loves about what he does. Dave talks about his students, both those
      who are passionate and those who are just going through the motions, as well
      as his own experience of being a student. He explains to us what he means when
      he said he doesn’t write unit tests at an Elixir conference in Austin recently,
      we talk about his favorite and most rewarding books, and Dave gives us a really
      unique answer to our architecture question. We discuss domain-driven design,
      microservice architectures, and Elixir libraries, and Dave shares why is so
      passionate about what he does. Tune in to hear some of Dave’s strong opinions
      on programming!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
      Coding Gnome and how it bridges the gap between learned and practical experience.</li>\n<li>Dave
      talks about being a lecturer at SMU and why students aren’t prepared for the
      real world.</li>\n<li>Why Dave stopped teaching Elixir at SMU.</li>\n<li>Students
      who study computer science for passion versus those who study it to get a job.</li>\n<li>Dave
      talks about his experience of studying computer science at university.</li>\n<li>The
      inspiring and controversial keynote addresses Dave has given at conferences.</li>\n<li>What
      it means when Dave said he doesn’t write unit tests and the projects he’s working
      on.</li>\n<li>The culture around test-driven development and writing tests when
      Dave was at university.</li>\n<li>Dave tells a story about writing the incoming
      telex switch for the UK.</li>\n<li>Why the first edition of Programming Ruby
      was Dave’s favorite book to write.</li>\n<li>Why The Pragmatic Programmer is
      the book Dave is most proud of.</li>\n<li>Dave isn’t currently writing a new
      book, so he can concentrate on pseudo-course material.</li>\n<li>Dave explains
      the process of developing a narrative arc when writing a technical book.</li>\n<li>What
      the state of a system is and how it is distinct from data.</li>\n<li>Dave describes
      why he believes architecture is a misunderstood and borrowed metaphor.</li>\n<li>Dave’s
      opinions on buzzwords like domain-driven design and microservice architectures.</li>\n<li>The
      status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>\n<li>Getting
      involved with publishing Elixir libraries and what his process looks like.</li>\n<li>How
      Dave likes to receive product specification when dealing with clients.</li>\n<li>What
      Dave loves about the programming industry.</li>\n<li>Why Dave doesn’t write
      Elixir anymore and why he became frustrated with it.</li>\n<li>Where Dave is
      going from here to how best to express what he wants.</li>\n<li>Final advice
      from Dave, not to abandon Elixir if it makes you happy.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Dave Thomas on Twitter – <a href=\"https://twitter.com/pragdave\"
      rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nThe Coding Gnome – <a
      href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nThe
      Coding Gnome Training — <a href=\"https://codestool.coding-gnome.com/\" rel=\"nofollow\">https://codestool.coding-gnome.com/</a><br>\nAgile
      Manifesto – <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a><br>\nThe
      Pragmatic Programmer – <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
      rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nProgramming
      Ruby – <a href=\"https://en.wikipedia.org/wiki/Programming_Ruby\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>\nRobert
      Kowalski on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Robert_Kowalski\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>\nDave
      Thomas on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>\nSpace-state
      representation — <a href=\"https://en.wikipedia.org/wiki/State-space_representation\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/State-space_representation</a><br>\nChristopher
      Alexander — <a href=\"https://en.wikipedia.org/wiki/Christopher_Alexander\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>\nA
      Pattern Language — <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>\nDave
      Thomas Keynote at Empex NYC 2018 — <a href=\"https://www.youtube.com/watch?v=6U7cLUygMeI\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich on Twitter
      — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Dave Thomas.</p>\n      "
  contentEncoded: "\n        <p>Dave Thomas is recognized internationally as an expert
    who develops high-quality software–accurate and highly flexible systems. He helped
    write the now-famous Agile Manifesto, and regularly gives inspiring and controversial
    speeches on new ways of producing software. He is the author of six books, including
    the best selling The Pragmatic Programmer: From Journeyman to Master and Programming
    Ruby: A Pragmatic Programmer&#39;s Guide. In this episode, we discuss everything
    from learning computer science in an academic setting, test-driven development,
    and state to architecture, libraries, and what Dave loves about what he does.
    Dave talks about his students, both those who are passionate and those who are
    just going through the motions, as well as his own experience of being a student.
    He explains to us what he means when he said he doesn’t write unit tests at an
    Elixir conference in Austin recently, we talk about his favorite and most rewarding
    books, and Dave gives us a really unique answer to our architecture question.
    We discuss domain-driven design, microservice architectures, and Elixir libraries,
    and Dave shares why is so passionate about what he does. Tune in to hear some
    of Dave’s strong opinions on programming!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    Coding Gnome and how it bridges the gap between learned and practical experience.</li>\n<li>Dave
    talks about being a lecturer at SMU and why students aren’t prepared for the real
    world.</li>\n<li>Why Dave stopped teaching Elixir at SMU.</li>\n<li>Students who
    study computer science for passion versus those who study it to get a job.</li>\n<li>Dave
    talks about his experience of studying computer science at university.</li>\n<li>The
    inspiring and controversial keynote addresses Dave has given at conferences.</li>\n<li>What
    it means when Dave said he doesn’t write unit tests and the projects he’s working
    on.</li>\n<li>The culture around test-driven development and writing tests when
    Dave was at university.</li>\n<li>Dave tells a story about writing the incoming
    telex switch for the UK.</li>\n<li>Why the first edition of Programming Ruby was
    Dave’s favorite book to write.</li>\n<li>Why The Pragmatic Programmer is the book
    Dave is most proud of.</li>\n<li>Dave isn’t currently writing a new book, so he
    can concentrate on pseudo-course material.</li>\n<li>Dave explains the process
    of developing a narrative arc when writing a technical book.</li>\n<li>What the
    state of a system is and how it is distinct from data.</li>\n<li>Dave describes
    why he believes architecture is a misunderstood and borrowed metaphor.</li>\n<li>Dave’s
    opinions on buzzwords like domain-driven design and microservice architectures.</li>\n<li>The
    status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>\n<li>Getting
    involved with publishing Elixir libraries and what his process looks like.</li>\n<li>How
    Dave likes to receive product specification when dealing with clients.</li>\n<li>What
    Dave loves about the programming industry.</li>\n<li>Why Dave doesn’t write Elixir
    anymore and why he became frustrated with it.</li>\n<li>Where Dave is going from
    here to how best to express what he wants.</li>\n<li>Final advice from Dave, not
    to abandon Elixir if it makes you happy.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Dave Thomas on Twitter – <a href=\"https://twitter.com/pragdave\"
    rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nThe Coding Gnome – <a href=\"https://pragdave.me/\"
    rel=\"nofollow\">https://pragdave.me/</a><br>\nThe Coding Gnome Training — <a
    href=\"https://codestool.coding-gnome.com/\" rel=\"nofollow\">https://codestool.coding-gnome.com/</a><br>\nAgile
    Manifesto – <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a><br>\nThe
    Pragmatic Programmer – <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
    rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nProgramming
    Ruby – <a href=\"https://en.wikipedia.org/wiki/Programming_Ruby\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>\nRobert
    Kowalski on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Robert_Kowalski\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>\nDave Thomas
    on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>\nSpace-state
    representation — <a href=\"https://en.wikipedia.org/wiki/State-space_representation\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/State-space_representation</a><br>\nChristopher
    Alexander — <a href=\"https://en.wikipedia.org/wiki/Christopher_Alexander\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>\nA
    Pattern Language — <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>\nDave
    Thomas Keynote at Empex NYC 2018 — <a href=\"https://www.youtube.com/watch?v=6U7cLUygMeI\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Dave Thomas.</p>\n      "
- title: Ben Marx on the Launch and Architecture of SubSpace
  slug: s4e4-marx
  link: https://smartlogic.io/podcast/elixir-wizards/s4e4-marx
  guid: e711fb4d-502b-4733-b5e2-01ff002b836a
  pubDate: Thu, 11 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 11, 2020
  description: "Joining us on the show for this episode is Ben Marx, author of Adopting
    Elixir and Principal Control Plane Engineer at the recently launched SubSpace!
    We continue our Season 4 journey into system and application architecture with
    Ben and he unpacks what he can about the somewhat still under wraps work at the
    new company. Ben is all about plain-spoken and easy to understand conversations
    on these topics, preferring to avoid highfalutin and confusing terms with multiple
    interpretations. He really drills down on his understanding of the fundamentals
    of his work and we also get to hear about his previous position at Bleacher Report.
    He unpacks the lessons he took away from the company, and the changes he witnessed
    while there. Ben explains how Elixir fits into the work at SubSpace and what a
    perfect fit it is for their low-latency service. We also spend a bit of time talking
    about life as an introverted programmer, attending conferences and meeting people,
    and remote work and family life during the pandemic. For all this and then some,
    tune in today!\nKey Points From This Episode:\n* Ben's exciting new position at
    SubSpace, and how the company reduces latency.\n* The increasing need for more
    reliable internet speeds during the pandemic.\n* Use of Elixir for SubSpace and
    how well it fits the needs of the company.\n* The engineering team at SubSpace
    and some of the basic system architecture. \n* Meeting people, giving talks and
    life at conferences as an introvert.  \n* The meaning of architecture to Ben;
    more dynamic than static. \n* Differentiating between architecture and design;
    the abstract and reality.\n* The idea of domain-driven design what the concept
    means to Ben.\n* Placement of the authentication and authorization systems.\n*
    Ben's time working at Bleacher Report and the development of the company during
    his time there.\n* Thoughts on Kafka and its baffling name! \n* Ben's new role
    at SubSpace and major areas of learning for him so far.\n* Adapting to a new role
    during the work from home era; life under quarantine. \n* Project management and
    helpful processes for remote work in a new world. \n* Ideas for another book from
    Ben, his belief in Elixir and getting in contact! \nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nBen Marx — https://bgmarx.com/\nSubSpace
    — https://www.subspace.com/\nBen Marx on Twitter — https://twitter.com/bgmarx\nAdopting
    Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nBleacher
    Report — https://bleacherreport.com/\nSubspace article at the Wall Street Journal
    — https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\nSubspace
    article at VentureBeat — https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\nKafka
    — https://kafka.apache.org/coding-guide\nFranz Kafka — https://www.biography.com/writer/franz-kafka\nMax
    Brod — https://www.britannica.com/biography/Max-Brod\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nJustus
    Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich — https://oestrich.org/\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich\nEric Oestrich on GitHub
    — https://github.com/oestrich Special Guest: Ben Marx.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+poHi9Gg5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e711fb4d-502b-4733-b5e2-01ff002b836a.mp3
    length: '55964578'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Joining us on the show for this episode is Ben Marx, author of Adopting
      Elixir and Principal Control Plane Engineer at the recently launched SubSpace.
      We continue our Season 4 journey into system and application architecture with
      Ben and he unpacks tech lingo, understanding of the fundamentals, and how Elixir
      fits into his work at SubSpace. '
    duration: '38:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e711fb4d-502b-4733-b5e2-01ff002b836a/cover.jpg?v=1
    summary: "\n        <p>Joining us on the show for this episode is Ben Marx, author
      of Adopting Elixir and Principal Control Plane Engineer at the recently launched
      SubSpace! We continue our Season 4 journey into system and application architecture
      with Ben and he unpacks what he can about the somewhat still under wraps work
      at the new company. Ben is all about plain-spoken and easy to understand conversations
      on these topics, preferring to avoid highfalutin and confusing terms with multiple
      interpretations. He really drills down on his understanding of the fundamentals
      of his work and we also get to hear about his previous position at Bleacher
      Report. He unpacks the lessons he took away from the company, and the changes
      he witnessed while there. Ben explains how Elixir fits into the work at SubSpace
      and what a perfect fit it is for their low-latency service. We also spend a
      bit of time talking about life as an introverted programmer, attending conferences
      and meeting people, and remote work and family life during the pandemic. For
      all this and then some, tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Ben&#39;s
      exciting new position at SubSpace, and how the company reduces latency.</li>\n<li>The
      increasing need for more reliable internet speeds during the pandemic.</li>\n<li>Use
      of Elixir for SubSpace and how well it fits the needs of the company.</li>\n<li>The
      engineering team at SubSpace and some of the basic system architecture. </li>\n<li>Meeting
      people, giving talks and life at conferences as an introvert.<br></li>\n<li>The
      meaning of architecture to Ben; more dynamic than static. </li>\n<li>Differentiating
      between architecture and design; the abstract and reality.</li>\n<li>The idea
      of domain-driven design what the concept means to Ben.</li>\n<li>Placement of
      the authentication and authorization systems.</li>\n<li>Ben&#39;s time working
      at Bleacher Report and the development of the company during his time there.</li>\n<li>Thoughts
      on Kafka and its baffling name! </li>\n<li>Ben&#39;s new role at SubSpace and
      major areas of learning for him so far.</li>\n<li>Adapting to a new role during
      the work from home era; life under quarantine. </li>\n<li>Project management
      and helpful processes for remote work in a new world. </li>\n<li>Ideas for another
      book from Ben, his belief in Elixir and getting in contact! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBen Marx — <a href=\"https://bgmarx.com/\"
      rel=\"nofollow\">https://bgmarx.com/</a><br>\nSubSpace — <a href=\"https://www.subspace.com/\"
      rel=\"nofollow\">https://www.subspace.com/</a><br>\nBen Marx on Twitter — <a
      href=\"https://twitter.com/bgmarx\" rel=\"nofollow\">https://twitter.com/bgmarx</a><br>\nAdopting
      Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nSubspace
      article at the Wall Street Journal — <a href=\"https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\"
      rel=\"nofollow\">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>\nSubspace
      article at VentureBeat — <a href=\"https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\"
      rel=\"nofollow\">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>\nKafka
      — <a href=\"https://kafka.apache.org/coding-guide\" rel=\"nofollow\">https://kafka.apache.org/coding-guide</a><br>\nFranz
      Kafka — <a href=\"https://www.biography.com/writer/franz-kafka\" rel=\"nofollow\">https://www.biography.com/writer/franz-kafka</a><br>\nMax
      Brod — <a href=\"https://www.britannica.com/biography/Max-Brod\" rel=\"nofollow\">https://www.britannica.com/biography/Max-Brod</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nJustus
      Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Ben Marx.</p>\n      "
  contentEncoded: "\n        <p>Joining us on the show for this episode is Ben Marx,
    author of Adopting Elixir and Principal Control Plane Engineer at the recently
    launched SubSpace! We continue our Season 4 journey into system and application
    architecture with Ben and he unpacks what he can about the somewhat still under
    wraps work at the new company. Ben is all about plain-spoken and easy to understand
    conversations on these topics, preferring to avoid highfalutin and confusing terms
    with multiple interpretations. He really drills down on his understanding of the
    fundamentals of his work and we also get to hear about his previous position at
    Bleacher Report. He unpacks the lessons he took away from the company, and the
    changes he witnessed while there. Ben explains how Elixir fits into the work at
    SubSpace and what a perfect fit it is for their low-latency service. We also spend
    a bit of time talking about life as an introverted programmer, attending conferences
    and meeting people, and remote work and family life during the pandemic. For all
    this and then some, tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Ben&#39;s
    exciting new position at SubSpace, and how the company reduces latency.</li>\n<li>The
    increasing need for more reliable internet speeds during the pandemic.</li>\n<li>Use
    of Elixir for SubSpace and how well it fits the needs of the company.</li>\n<li>The
    engineering team at SubSpace and some of the basic system architecture. </li>\n<li>Meeting
    people, giving talks and life at conferences as an introvert.<br></li>\n<li>The
    meaning of architecture to Ben; more dynamic than static. </li>\n<li>Differentiating
    between architecture and design; the abstract and reality.</li>\n<li>The idea
    of domain-driven design what the concept means to Ben.</li>\n<li>Placement of
    the authentication and authorization systems.</li>\n<li>Ben&#39;s time working
    at Bleacher Report and the development of the company during his time there.</li>\n<li>Thoughts
    on Kafka and its baffling name! </li>\n<li>Ben&#39;s new role at SubSpace and
    major areas of learning for him so far.</li>\n<li>Adapting to a new role during
    the work from home era; life under quarantine. </li>\n<li>Project management and
    helpful processes for remote work in a new world. </li>\n<li>Ideas for another
    book from Ben, his belief in Elixir and getting in contact! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBen Marx — <a href=\"https://bgmarx.com/\"
    rel=\"nofollow\">https://bgmarx.com/</a><br>\nSubSpace — <a href=\"https://www.subspace.com/\"
    rel=\"nofollow\">https://www.subspace.com/</a><br>\nBen Marx on Twitter — <a href=\"https://twitter.com/bgmarx\"
    rel=\"nofollow\">https://twitter.com/bgmarx</a><br>\nAdopting Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nSubspace
    article at the Wall Street Journal — <a href=\"https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\"
    rel=\"nofollow\">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>\nSubspace
    article at VentureBeat — <a href=\"https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\"
    rel=\"nofollow\">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>\nKafka
    — <a href=\"https://kafka.apache.org/coding-guide\" rel=\"nofollow\">https://kafka.apache.org/coding-guide</a><br>\nFranz
    Kafka — <a href=\"https://www.biography.com/writer/franz-kafka\" rel=\"nofollow\">https://www.biography.com/writer/franz-kafka</a><br>\nMax
    Brod — <a href=\"https://www.britannica.com/biography/Max-Brod\" rel=\"nofollow\">https://www.britannica.com/biography/Max-Brod</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nJustus
    Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Ben Marx.</p>\n      "
- title: Pattern Matching  - Johanna Larsson
  slug: s4e4b-pattern-matching-larsson
  link: https://smartlogic.io/podcast/elixir-wizards/s4e4b-pattern-matching-larsson
  guid: ac3f0d31-f498-4d6a-ba69-3dbae9d0510f
  pubDate: Tue, 09 Jun 2020 06:00:00 -0400
  pubDateFriendly: June  9, 2020
  description: "A special episode of Elixir Wizards highlighting Pattern Matching
    with Todd - a short format interview where our friend, Todd Resudek, asks different
    guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna
    is active on the Elixir scene and is currently working as a Software Engineer
    at Duffel.\nKey Points From This Episode:\n* Living in Malmo, Sweden.\n* Johanna's
    love of languages.\n* The complexities of written Japanese.  \n* How Johanna uses
    music to set the soundtrack to her work. \n* Todd missing the boat on a cinematic
    and cultural masterpiece.\n* Integrating and improving upon the hex diff project.\nLinks
    Mentioned in Today’s Episode:\nJohanna Larsson on GitHub - https://github.com/joladev\nJohanna
    Larsson on Twitter - https://twitter.com/joladev\nTodd Resudek on Twitter — https://twitter.com/sprsmpl\nSmartLogic
    — https://smartlogic.io/  Special Guest: Johanna Larsson.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+lFYLJIym
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f.mp3
    length: '21303933'
    type: audio/mpeg
  itunes:
    episodeType: bonus
    season: '4'
    author: SmartLogic LLC
    subtitle: A special episode of Elixir Wizards highlighting Pattern Matching with
      Todd - a short format interview where our friend, Todd Resudek, asks different
      guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna
      is active on the Elixir scene and is currently working as a Software Engineer
      at Duffel.
    duration: '14:46'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f/cover.jpg?v=1
    summary: "\n        <p>A special episode of Elixir Wizards highlighting Pattern
      Matching with Todd - a short format interview where our friend, Todd Resudek,
      asks different guests the same five questions. This week Todd spoke with Johanna
      Larsson. Johanna is active on the Elixir scene and is currently working as a
      Software Engineer at Duffel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Living
      in Malmo, Sweden.</li>\n<li>Johanna&#39;s love of languages.</li>\n<li>The complexities
      of written Japanese.<br></li>\n<li>How Johanna uses music to set the soundtrack
      to her work. </li>\n<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>\n<li>Integrating
      and improving upon the hex diff project.</li>\n</ul>\n\n<p>Links Mentioned in
      Today’s Episode:</p>\n\n<p>Johanna Larsson on GitHub - <a href=\"https://github.com/joladev\"
      rel=\"nofollow\">https://github.com/joladev</a><br>\nJohanna Larsson on Twitter
      - <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Johanna Larsson.</p>\n      "
  contentEncoded: "\n        <p>A special episode of Elixir Wizards highlighting Pattern
    Matching with Todd - a short format interview where our friend, Todd Resudek,
    asks different guests the same five questions. This week Todd spoke with Johanna
    Larsson. Johanna is active on the Elixir scene and is currently working as a Software
    Engineer at Duffel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Living
    in Malmo, Sweden.</li>\n<li>Johanna&#39;s love of languages.</li>\n<li>The complexities
    of written Japanese.<br></li>\n<li>How Johanna uses music to set the soundtrack
    to her work. </li>\n<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>\n<li>Integrating
    and improving upon the hex diff project.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Johanna Larsson on GitHub - <a href=\"https://github.com/joladev\"
    rel=\"nofollow\">https://github.com/joladev</a><br>\nJohanna Larsson on Twitter
    - <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Johanna Larsson.</p>\n      "
- title: Steve Bussey on Real-Time Applications
  slug: s4e3-bussey
  link: https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey
  guid: b07768d6-b987-496e-87d3-483eedd42fa5
  pubDate: Thu, 28 May 2020 06:00:00 -0400
  pubDateFriendly: May 28, 2020
  description: "Real-time applications come with real challenges—persistent connections,
    multi-server deployment, and strict performance requirements are just a few. Our
    guest today is Steve Bussey, a software architect at SalesLoft and author of the
    new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels. In this
    episode, Steve shares with us what he has written on real-time Elixir applications
    and how he has led development in the field. We discuss how Steve found Elixir,
    what system and application architecture means to him, and what he considers the
    differences between architecting and designing a system. Steve gives us his opinions
    on domain-driven design, umbrella apps, and Phoenix LiveView, and shares some
    of his personal processes when working on new real-time features, as well as what
    he believes are the toughest parts of developing and rolling out real-time applications.
    Finally, we talk about testing, security, and performance issues, and Steve sells
    us on his book. Tune in today!\nKey Points From This Episode:\nWhat Steve’s favorite
    pair of shoes is and how he got into sneakers.\nWhere Steve is from and how long
    he has been doing programming.\nWhat system and application architecture means
    to Steve.\nThe difference between architecting and designing a system.\nSteve’s
    opinions on domain-driven design.\nEric’s opinion on umbrella apps and Steve’s
    response.\nWhere Steve starts when he works on a new real-time feature.\nSteve’s
    personal and professional pre-code design processes.\nThe toughest parts of developing
    and rolling out real-time applications.\nTesting real-time features and Steve’s
    thoughts on Phoenix LiveView.\nHow Steve incorporates security into the architecture
    when designing applications.\nMulti-tenant applications and how Steve deals with
    performance issues.\nDeployment considerations when going into production with
    a real-time application.\nSteve sells us on his book and gives his final plugs
    and asks for the audience.\nLinks Mentioned in Today’s Episode:\nSteve Bussey
    on Twitter – https://twitter.com/YOOOODAAAA\nSteven Bussey’s Website – https://stevenbussey.com/\nReal-Time
    Phoenix on Pragmatic Bookshelf – https://pragprog.com/book/sbsockets/real-time-phoenix\nSmartLogic
    — https://smartlogic.io/ \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric
    Oestrich — https://oestrich.org/\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nEric
    Oestrich on GitHub — https://github.com/oestrich Special Guest: Steve Bussey.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+BulaMkUf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b07768d6-b987-496e-87d3-483eedd42fa5.mp3
    length: '71781094'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Real-time applications come with real challenges—persistent connections,
      multi-server deployment, and strict performance requirements are just a few.
      Our guest Steve Bussey, a software architect at SalesLoft and author of the
      new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels, talks
      with us about how he has led development in the field. '
    duration: '49:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b07768d6-b987-496e-87d3-483eedd42fa5/cover.jpg?v=1
    summary: "\n        <p>Real-time applications come with real challenges—persistent
      connections, multi-server deployment, and strict performance requirements are
      just a few. Our guest today is Steve Bussey, a software architect at SalesLoft
      and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems
      with Channels. In this episode, Steve shares with us what he has written on
      real-time Elixir applications and how he has led development in the field. We
      discuss how Steve found Elixir, what system and application architecture means
      to him, and what he considers the differences between architecting and designing
      a system. Steve gives us his opinions on domain-driven design, umbrella apps,
      and Phoenix LiveView, and shares some of his personal processes when working
      on new real-time features, as well as what he believes are the toughest parts
      of developing and rolling out real-time applications. Finally, we talk about
      testing, security, and performance issues, and Steve sells us on his book. Tune
      in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What Steve’s
      favorite pair of shoes is and how he got into sneakers.</li>\n<li>Where Steve
      is from and how long he has been doing programming.</li>\n<li>What system and
      application architecture means to Steve.</li>\n<li>The difference between architecting
      and designing a system.</li>\n<li>Steve’s opinions on domain-driven design.</li>\n<li>Eric’s
      opinion on umbrella apps and Steve’s response.</li>\n<li>Where Steve starts
      when he works on a new real-time feature.</li>\n<li>Steve’s personal and professional
      pre-code design processes.</li>\n<li>The toughest parts of developing and rolling
      out real-time applications.</li>\n<li>Testing real-time features and Steve’s
      thoughts on Phoenix LiveView.</li>\n<li>How Steve incorporates security into
      the architecture when designing applications.</li>\n<li>Multi-tenant applications
      and how Steve deals with performance issues.</li>\n<li>Deployment considerations
      when going into production with a real-time application.</li>\n<li>Steve sells
      us on his book and gives his final plugs and asks for the audience.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Steve Bussey on Twitter – <a href=\"https://twitter.com/YOOOODAAAA\"
      rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nSteven Bussey’s Website
      – <a href=\"https://stevenbussey.com/\" rel=\"nofollow\">https://stevenbussey.com/</a><br>\nReal-Time
      Phoenix on Pragmatic Bookshelf – <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
      rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich — <a
      href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Steve Bussey.</p>\n      "
  contentEncoded: "\n        <p>Real-time applications come with real challenges—persistent
    connections, multi-server deployment, and strict performance requirements are
    just a few. Our guest today is Steve Bussey, a software architect at SalesLoft
    and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with
    Channels. In this episode, Steve shares with us what he has written on real-time
    Elixir applications and how he has led development in the field. We discuss how
    Steve found Elixir, what system and application architecture means to him, and
    what he considers the differences between architecting and designing a system.
    Steve gives us his opinions on domain-driven design, umbrella apps, and Phoenix
    LiveView, and shares some of his personal processes when working on new real-time
    features, as well as what he believes are the toughest parts of developing and
    rolling out real-time applications. Finally, we talk about testing, security,
    and performance issues, and Steve sells us on his book. Tune in today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>What Steve’s favorite pair of shoes
    is and how he got into sneakers.</li>\n<li>Where Steve is from and how long he
    has been doing programming.</li>\n<li>What system and application architecture
    means to Steve.</li>\n<li>The difference between architecting and designing a
    system.</li>\n<li>Steve’s opinions on domain-driven design.</li>\n<li>Eric’s opinion
    on umbrella apps and Steve’s response.</li>\n<li>Where Steve starts when he works
    on a new real-time feature.</li>\n<li>Steve’s personal and professional pre-code
    design processes.</li>\n<li>The toughest parts of developing and rolling out real-time
    applications.</li>\n<li>Testing real-time features and Steve’s thoughts on Phoenix
    LiveView.</li>\n<li>How Steve incorporates security into the architecture when
    designing applications.</li>\n<li>Multi-tenant applications and how Steve deals
    with performance issues.</li>\n<li>Deployment considerations when going into production
    with a real-time application.</li>\n<li>Steve sells us on his book and gives his
    final plugs and asks for the audience.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Steve Bussey on Twitter – <a href=\"https://twitter.com/YOOOODAAAA\"
    rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nSteven Bussey’s Website
    – <a href=\"https://stevenbussey.com/\" rel=\"nofollow\">https://stevenbussey.com/</a><br>\nReal-Time
    Phoenix on Pragmatic Bookshelf – <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
    rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Steve Bussey.</p>\n      "
- title: Mohd Maqbool Alam on System and Application Architecture
  slug: s4e2-alam
  link: https://smartlogic.io/podcast/elixir-wizards/s4e2-alam
  guid: a3a16821-cb7c-4c88-be0e-c2b412ad7bee
  pubDate: Thu, 21 May 2020 06:00:00 -0400
  pubDateFriendly: May 21, 2020
  description: |
    Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi. He enjoys learning about programming language theory, distributed systems, Cloud Native technologies, and open source. As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world, and what drew him to programming in the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir has changed the way he thinks about architecture applications, as well as his opinions on microservices, APIs, and static typing. We talk about the real-world consequences of programming, using Neil Ferguson’s pandemic simulation model as an example, and Maqbool shares his favorite RPC (when we actually meant to ask him his favorite RFC)! The episode concludes with Pattern Matching with Todd. In this edition, he discusses Kubernetes and Beam with Principal Software Architect Cory O’Daniel.
    Key Points From This Episode:
    Maqbool tells us a bit about himself and how he came to be part of the Elixir community.
    What enticed Maqbool to programming.
    Maqbool’s favorite resources from Elixir.
    How Elixir has changed the way Maqbool thinks about architecting applications.
    Maqbool’s ‘aha’ moment in distributed programming and how he got into pattern matching.
    Phoenix Live Dashboard and why Maqbool and the team are excited about it.
    How Maqbool approaches the design process when building an application from scratch.
    The tools and methods Maqbool uses when designing information architecture and APIs.
    Maqbool’s opinions on microservices, Kubernetes, and Amazon Lambda.
    Protocols and non-standard protocols.
    Neil Ferguson’s pandemic simulation model using undocumented C-code.
    How we should think about the real world consequences of high-stakes programming.
    Maqbool’s opinion on static typing.
    Macbool’s favorite RPC and RFC.
    Pattern Matching with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.
    Links Mentioned in Today’s Episode:
    Justus Eapen on LinkedIn — https://www.linkedin.com/in/justuseapen/
    Justus Eapen on Twitter — https://twitter.com/justuseapen
    Eric Oestrich — https://oestrich.org/
    Eric Oestrich on Twitter — https://twitter.com/ericoestrich
    Eric Oestrich on GitHub — https://github.com/oestrich
    Mohd Maqbool Alam on Twitter – https://twitter.com/Maqboolism
    Elixir Forum – https://elixirforum.com/
    Elixir in Action – https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X
    Phoenix Live Dashboard – https://github.com/phoenixframework/phoenixlivedashboard
    Absinthe – https://github.com/absinthe-graphql/absinthe
    Kubeless – https://kubeless.io/
    Kubernetes — https://kubernetes.io/
    Amazon Lambda – https://aws.amazon.com/lambda/
    Groxio – https://grox.io/
    Todd Resudek on Twitter — https://twitter.com/sprsmpl
    Cory O’Daniel on Twitter – https://twitter.com/coryodaniel
    Ziggy O’Doodle on Instagram – https://www.instagram.com/ziggy.odoodle/
    SmartLogic — https://smartlogic.io/  Special Guests: Cory O'Daniel and Mohd Maqbool Alam.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+kaRyq5P7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a3a16821-cb7c-4c88-be0e-c2b412ad7bee.mp3
    length: '63044638'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Today’s guest is Mohd Maqbool Alam, a software developer and Elixir
      fan from Delhi.  As he is working towards building an Elixir community in Delhi,
      we caught up with him to find out how he came to be part of the Elixir world
      and how Elixir has changed the way he thinks about architecture applications.
      Our new segment Pattern Matching with Todd Resudek features Principal Software
      Architect Cory O''Daniel discussing Kubernetes and Beam. '
    duration: '43:22'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a3a16821-cb7c-4c88-be0e-c2b412ad7bee/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Mohd Maqbool Alam, a software developer
      and Elixir fan from Delhi. He enjoys learning about programming language theory,
      distributed systems, Cloud Native technologies, and open source. As he is working
      towards building an Elixir community in Delhi, we caught up with him to find
      out how he came to be part of the Elixir world, and what drew him to programming
      in the first place. We also discuss Maqbool’s favorite Elixir resources and
      how Elixir has changed the way he thinks about architecture applications, as
      well as his opinions on microservices, APIs, and static typing. We talk about
      the real-world consequences of programming, using Neil Ferguson’s pandemic simulation
      model as an example, and Maqbool shares his favorite RPC (when we actually meant
      to ask him his favorite RFC)! The episode concludes with Pattern Matching with
      Todd. In this edition, he discusses Kubernetes and Beam with Principal Software
      Architect Cory O’Daniel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Maqbool
      tells us a bit about himself and how he came to be part of the Elixir community.</li>\n<li>What
      enticed Maqbool to programming.</li>\n<li>Maqbool’s favorite resources from
      Elixir.</li>\n<li>How Elixir has changed the way Maqbool thinks about architecting
      applications.</li>\n<li>Maqbool’s ‘aha’ moment in distributed programming and
      how he got into pattern matching.</li>\n<li>Phoenix Live Dashboard and why Maqbool
      and the team are excited about it.</li>\n<li>How Maqbool approaches the design
      process when building an application from scratch.</li>\n<li>The tools and methods
      Maqbool uses when designing information architecture and APIs.</li>\n<li>Maqbool’s
      opinions on microservices, Kubernetes, and Amazon Lambda.</li>\n<li>Protocols
      and non-standard protocols.</li>\n<li>Neil Ferguson’s pandemic simulation model
      using undocumented C-code.</li>\n<li>How we should think about the real world
      consequences of high-stakes programming.</li>\n<li>Maqbool’s opinion on static
      typing.</li>\n<li>Macbool’s favorite RPC and RFC.</li>\n<li>Pattern Matching
      with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\"
      rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nJustus Eapen
      on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a><br>\nMohd
      Maqbool Alam on Twitter – <a href=\"https://twitter.com/Maqboolism\" rel=\"nofollow\">https://twitter.com/Maqboolism</a><br>\nElixir
      Forum – <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir
      in Action – <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nPhoenix
      Live Dashboard – <a href=\"https://github.com/phoenixframework/phoenix_live_dashboard\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>\nAbsinthe
      – <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nKubeless
      – <a href=\"https://kubeless.io/\" rel=\"nofollow\">https://kubeless.io/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nAmazon
      Lambda – <a href=\"https://aws.amazon.com/lambda/\" rel=\"nofollow\">https://aws.amazon.com/lambda/</a><br>\nGroxio
      – <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nCory
      O’Daniel on Twitter – <a href=\"https://twitter.com/coryodaniel\" rel=\"nofollow\">https://twitter.com/coryodaniel</a><br>\nZiggy
      O’Doodle on Instagram – <a href=\"https://www.instagram.com/ziggy.odoodle/\"
      rel=\"nofollow\">https://www.instagram.com/ziggy.odoodle/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Mohd Maqbool Alam, a software developer
    and Elixir fan from Delhi. He enjoys learning about programming language theory,
    distributed systems, Cloud Native technologies, and open source. As he is working
    towards building an Elixir community in Delhi, we caught up with him to find out
    how he came to be part of the Elixir world, and what drew him to programming in
    the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir
    has changed the way he thinks about architecture applications, as well as his
    opinions on microservices, APIs, and static typing. We talk about the real-world
    consequences of programming, using Neil Ferguson’s pandemic simulation model as
    an example, and Maqbool shares his favorite RPC (when we actually meant to ask
    him his favorite RFC)! The episode concludes with Pattern Matching with Todd.
    In this edition, he discusses Kubernetes and Beam with Principal Software Architect
    Cory O’Daniel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Maqbool
    tells us a bit about himself and how he came to be part of the Elixir community.</li>\n<li>What
    enticed Maqbool to programming.</li>\n<li>Maqbool’s favorite resources from Elixir.</li>\n<li>How
    Elixir has changed the way Maqbool thinks about architecting applications.</li>\n<li>Maqbool’s
    ‘aha’ moment in distributed programming and how he got into pattern matching.</li>\n<li>Phoenix
    Live Dashboard and why Maqbool and the team are excited about it.</li>\n<li>How
    Maqbool approaches the design process when building an application from scratch.</li>\n<li>The
    tools and methods Maqbool uses when designing information architecture and APIs.</li>\n<li>Maqbool’s
    opinions on microservices, Kubernetes, and Amazon Lambda.</li>\n<li>Protocols
    and non-standard protocols.</li>\n<li>Neil Ferguson’s pandemic simulation model
    using undocumented C-code.</li>\n<li>How we should think about the real world
    consequences of high-stakes programming.</li>\n<li>Maqbool’s opinion on static
    typing.</li>\n<li>Macbool’s favorite RPC and RFC.</li>\n<li>Pattern Matching with
    Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\"
    rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nJustus Eapen
    on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a><br>\nMohd
    Maqbool Alam on Twitter – <a href=\"https://twitter.com/Maqboolism\" rel=\"nofollow\">https://twitter.com/Maqboolism</a><br>\nElixir
    Forum – <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir
    in Action – <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nPhoenix
    Live Dashboard – <a href=\"https://github.com/phoenixframework/phoenix_live_dashboard\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>\nAbsinthe
    – <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nKubeless
    – <a href=\"https://kubeless.io/\" rel=\"nofollow\">https://kubeless.io/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nAmazon
    Lambda – <a href=\"https://aws.amazon.com/lambda/\" rel=\"nofollow\">https://aws.amazon.com/lambda/</a><br>\nGroxio
    – <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nCory
    O’Daniel on Twitter – <a href=\"https://twitter.com/coryodaniel\" rel=\"nofollow\">https://twitter.com/coryodaniel</a><br>\nZiggy
    O’Doodle on Instagram – <a href=\"https://www.instagram.com/ziggy.odoodle/\" rel=\"nofollow\">https://www.instagram.com/ziggy.odoodle/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>\n      "
- title: Season Four Launchisode
  slug: s4e1-launchisode
  link: https://smartlogic.io/podcast/elixir-wizards/s4e1-launchisode
  guid: 34c3c1af-3f50-4e83-be65-e7420d65eada
  pubDate: Thu, 14 May 2020 06:00:00 -0400
  pubDateFriendly: May 14, 2020
  description: "As our first trilogy comes to a close, and we embark on the next one,
    we’re doing what all great trilogies do: Upending everything that made the initial
    one great and starting afresh. We have taken on board some excellent listener
    feedback to keep this the highest quality Elixir related podcast. So, for this
    launchisode, rather than doing a trailer, we are diving in headfirst with a full
    episode on system and application architecture, this season’s theme, with Justus
    Eapen, Dan Ivovich, and Eric Oestrich. \nWe kick off the show by getting to know
    Dan and Eric a bit better. This season, as per listener requests, we will spend
    more time on our guests' personal lives. We learn about Dan and Eric’s time at
    SmartLogic, their experience working with Elixir, and their approaches to learning
    it. From there, we move onto tackling clients’ projects. We discuss the importance
    of letting ideas flow free as well as how to break projects down into manageable
    sized segments to work on. Following this, we touch on flexible architecture.
    As the world changes, sometimes at a pace faster than we anticipate, it is more
    important than ever to design systems that we can iterate on. Then, we discuss
    the future of applications and architecture and the exciting possibilities in-store.
    \nThe show rounds off with our new segment, Pattern Matching with Todd, where
    our friend Todd Resudek gets to know someone in the community a bit better. Today,
    he talks with Connor Rigby of Binary Noggin, finding out more about his programing
    journey, his favorite music and movies, and his WiFi meshing project. We're so
    excited for this season, and we hope you join us on the journey. Tune in today!\nKey
    Points From This Episode:\nDan’s background and how he came to be Director of
    Development Operations.\nHow Eric started at SmartLogic and what his journey at
    the company has been like.\nLearn what convinced Dan to go all-in on Elixir and
    make the move from Rails\nSome of the educational materials and tools Dan and
    Eric used to learn Elixir.\nDan’s preferred style of design and why he enjoys
    TDD.\nWhy we think that Cucumber falls short and chose to move away from it.\nFind
    out what we think domain-driven design is.\nHow Dan and Eric approach deconstructing
    clients’ projects.\nPre-coding: Why it’s best to do free-form planning, with no
    constraints.\nInsights into the broad-reaching term of ‘API’ and what we mean
    by it.\nSOAP and REST APIs: What they are and the differences between them.\nHow
    Dan, Eric, and Justus’s thinking about designing and application architecture
    has evolved.\nObject-oriented programming versus functional: Our take on the age-old
    debate.\nIs this finally the year that we get to kill micro-services?\nThe relationship
    between team size and micro-services and some other constraints.\nWhat the future
    has in store for applications and architecting.\nPattern-matching with Todd: Five
    questions to get to know Connor Rigby a bit better.\nLinks Mentioned in Today’s
    Episode:\nJustus Eapen on Twitter — https://twitter.com/justuseapen\nDan Ivovich
    on Twitter — https://twitter.com/danivovich\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nKalevala
    on GitHub — https://github.com/oestrich/kalevala\nValve — https://www.valvesoftware.com/en/\nEcto
    — https://hexdocs.pm/ecto/Ecto.html\nPhoenix Elixir books — https://pragprog.com/book/phoenix14/programming-phoenix-1-4\nRuby
    on Rails — https://rubyonrails.org/\nDesigning for Scalability with Erlang — http://shop.oreilly.com/product/0636920024149.do\nMike
    Amundsen on O’Reily Media — https://www.oreilly.com/pub/au/1192\nDesigning Elixir
    Systems With OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\nCucumber
    — https://cucumber.io/\nVisual Studio Code — https://code.visualstudio.com/\nSOAP
    vs REST APIs — https://www.soapui.org/learn/api/soap-vs-rest-api/\nRESTFest —
    https://www.restfest.org/\nExVenture — https://exventure.org/\nKubernetes — https://kubernetes.io/\nPhoenix
    — https://phoenixframework.org/\nNerves Project — https://www.nerves-project.org/\nTodd
    Resudek on Twitter — https://twitter.com/sprsmpl\nBinary Noggin — https://binarynoggin.com/\nConnor
    Rigby on GitHub — https://github.com/ConnorRigby\nThe Big Lebowski — https://www.imdb.com/title/tt0118715/\nAesop
    Rock on Twitter — https://twitter.com/AesopRockWins\nAll That Remains on Twitter
    — https://twitter.com/ATRhq\nKorn — https://www.kornofficial.com/\nEric Meadows-Jönsson
    on Twitter — https://twitter.com/emjii\nDonnie Darko — https://www.imdb.com/title/tt0246578/\nRichard
    Kelly — https://www.imdb.com/name/nm0446819/\nFrank Hunleth on Twitter — https://twitter.com/fhunleth\nSmartLogic
    — https://smartlogic.io/  Special Guests: Connor Rigby and Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+pqaMg-ck
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/34c3c1af-3f50-4e83-be65-e7420d65eada.mp3
    length: '100537910'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'As our first trilogy comes to a close, and we embark on the next one,
      we’re doing what all great trilogies do: Upending everything that made the initial
      one great and starting afresh. We''ve incorporated listener feedback, hear more
      about our guests'' personal lives, dive into architecture, and debut a new segment!'
    duration: '1:09:36'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/34c3c1af-3f50-4e83-be65-e7420d65eada/cover.jpg?v=2
    summary: "\n        <p>As our first trilogy comes to a close, and we embark on
      the next one, we’re doing what all great trilogies do: Upending everything that
      made the initial one great and starting afresh. We have taken on board some
      excellent listener feedback to keep this the highest quality Elixir related
      podcast. So, for this launchisode, rather than doing a trailer, we are diving
      in headfirst with a full episode on system and application architecture, this
      season’s theme, with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>\n\n<p>We
      kick off the show by getting to know Dan and Eric a bit better. This season,
      as per listener requests, we will spend more time on our guests&#39; personal
      lives. We learn about Dan and Eric’s time at SmartLogic, their experience working
      with Elixir, and their approaches to learning it. From there, we move onto tackling
      clients’ projects. We discuss the importance of letting ideas flow free as well
      as how to break projects down into manageable sized segments to work on. Following
      this, we touch on flexible architecture. As the world changes, sometimes at
      a pace faster than we anticipate, it is more important than ever to design systems
      that we can iterate on. Then, we discuss the future of applications and architecture
      and the exciting possibilities in-store. </p>\n\n<p>The show rounds off with
      our new segment, Pattern Matching with Todd, where our friend Todd Resudek gets
      to know someone in the community a bit better. Today, he talks with Connor Rigby
      of Binary Noggin, finding out more about his programing journey, his favorite
      music and movies, and his WiFi meshing project. We&#39;re so excited for this
      season, and we hope you join us on the journey. Tune in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Dan’s background and how he came
      to be Director of Development Operations.</li>\n<li>How Eric started at SmartLogic
      and what his journey at the company has been like.</li>\n<li>Learn what convinced
      Dan to go all-in on Elixir and make the move from Rails</li>\n<li>Some of the
      educational materials and tools Dan and Eric used to learn Elixir.</li>\n<li>Dan’s
      preferred style of design and why he enjoys TDD.</li>\n<li>Why we think that
      Cucumber falls short and chose to move away from it.</li>\n<li>Find out what
      we think domain-driven design is.</li>\n<li>How Dan and Eric approach deconstructing
      clients’ projects.</li>\n<li>Pre-coding: Why it’s best to do free-form planning,
      with no constraints.</li>\n<li>Insights into the broad-reaching term of ‘API’
      and what we mean by it.</li>\n<li>SOAP and REST APIs: What they are and the
      differences between them.</li>\n<li>How Dan, Eric, and Justus’s thinking about
      designing and application architecture has evolved.</li>\n<li>Object-oriented
      programming versus functional: Our take on the age-old debate.</li>\n<li>Is
      this finally the year that we get to kill micro-services?</li>\n<li>The relationship
      between team size and micro-services and some other constraints.</li>\n<li>What
      the future has in store for applications and architecting.</li>\n<li>Pattern-matching
      with Todd: Five questions to get to know Connor Rigby a bit better.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nDan Ivovich on Twitter
      — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nKalevala
      on GitHub — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nValve
      — <a href=\"https://www.valvesoftware.com/en/\" rel=\"nofollow\">https://www.valvesoftware.com/en/</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nPhoenix
      Elixir books — <a href=\"https://pragprog.com/book/phoenix14/programming-phoenix-1-4\"
      rel=\"nofollow\">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>\nRuby
      on Rails — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nDesigning
      for Scalability with Erlang — <a href=\"http://shop.oreilly.com/product/0636920024149.do\"
      rel=\"nofollow\">http://shop.oreilly.com/product/0636920024149.do</a><br>\nMike
      Amundsen on O’Reily Media — <a href=\"https://www.oreilly.com/pub/au/1192\"
      rel=\"nofollow\">https://www.oreilly.com/pub/au/1192</a><br>\nDesigning Elixir
      Systems With OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>\nCucumber
      — <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nVisual
      Studio Code — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nSOAP
      vs REST APIs — <a href=\"https://www.soapui.org/learn/api/soap-vs-rest-api/\"
      rel=\"nofollow\">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>\nRESTFest
      — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nExVenture
      — <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nPhoenix
      — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
      Rigby on GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nThe
      Big Lebowski — <a href=\"https://www.imdb.com/title/tt0118715/\" rel=\"nofollow\">https://www.imdb.com/title/tt0118715/</a><br>\nAesop
      Rock on Twitter — <a href=\"https://twitter.com/AesopRockWins\" rel=\"nofollow\">https://twitter.com/AesopRockWins</a><br>\nAll
      That Remains on Twitter — <a href=\"https://twitter.com/ATRhq\" rel=\"nofollow\">https://twitter.com/ATRhq</a><br>\nKorn
      — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nEric
      Meadows-Jönsson on Twitter — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nDonnie
      Darko — <a href=\"https://www.imdb.com/title/tt0246578/\" rel=\"nofollow\">https://www.imdb.com/title/tt0246578/</a><br>\nRichard
      Kelly — <a href=\"https://www.imdb.com/name/nm0446819/\" rel=\"nofollow\">https://www.imdb.com/name/nm0446819/</a><br>\nFrank
      Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>As our first trilogy comes to a close, and we embark
    on the next one, we’re doing what all great trilogies do: Upending everything
    that made the initial one great and starting afresh. We have taken on board some
    excellent listener feedback to keep this the highest quality Elixir related podcast.
    So, for this launchisode, rather than doing a trailer, we are diving in headfirst
    with a full episode on system and application architecture, this season’s theme,
    with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>\n\n<p>We kick off the
    show by getting to know Dan and Eric a bit better. This season, as per listener
    requests, we will spend more time on our guests&#39; personal lives. We learn
    about Dan and Eric’s time at SmartLogic, their experience working with Elixir,
    and their approaches to learning it. From there, we move onto tackling clients’
    projects. We discuss the importance of letting ideas flow free as well as how
    to break projects down into manageable sized segments to work on. Following this,
    we touch on flexible architecture. As the world changes, sometimes at a pace faster
    than we anticipate, it is more important than ever to design systems that we can
    iterate on. Then, we discuss the future of applications and architecture and the
    exciting possibilities in-store. </p>\n\n<p>The show rounds off with our new segment,
    Pattern Matching with Todd, where our friend Todd Resudek gets to know someone
    in the community a bit better. Today, he talks with Connor Rigby of Binary Noggin,
    finding out more about his programing journey, his favorite music and movies,
    and his WiFi meshing project. We&#39;re so excited for this season, and we hope
    you join us on the journey. Tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Dan’s
    background and how he came to be Director of Development Operations.</li>\n<li>How
    Eric started at SmartLogic and what his journey at the company has been like.</li>\n<li>Learn
    what convinced Dan to go all-in on Elixir and make the move from Rails</li>\n<li>Some
    of the educational materials and tools Dan and Eric used to learn Elixir.</li>\n<li>Dan’s
    preferred style of design and why he enjoys TDD.</li>\n<li>Why we think that Cucumber
    falls short and chose to move away from it.</li>\n<li>Find out what we think domain-driven
    design is.</li>\n<li>How Dan and Eric approach deconstructing clients’ projects.</li>\n<li>Pre-coding:
    Why it’s best to do free-form planning, with no constraints.</li>\n<li>Insights
    into the broad-reaching term of ‘API’ and what we mean by it.</li>\n<li>SOAP and
    REST APIs: What they are and the differences between them.</li>\n<li>How Dan,
    Eric, and Justus’s thinking about designing and application architecture has evolved.</li>\n<li>Object-oriented
    programming versus functional: Our take on the age-old debate.</li>\n<li>Is this
    finally the year that we get to kill micro-services?</li>\n<li>The relationship
    between team size and micro-services and some other constraints.</li>\n<li>What
    the future has in store for applications and architecting.</li>\n<li>Pattern-matching
    with Todd: Five questions to get to know Connor Rigby a bit better.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
    rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nDan Ivovich on Twitter
    — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nKalevala
    on GitHub — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nValve
    — <a href=\"https://www.valvesoftware.com/en/\" rel=\"nofollow\">https://www.valvesoftware.com/en/</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nPhoenix
    Elixir books — <a href=\"https://pragprog.com/book/phoenix14/programming-phoenix-1-4\"
    rel=\"nofollow\">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>\nRuby
    on Rails — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nDesigning
    for Scalability with Erlang — <a href=\"http://shop.oreilly.com/product/0636920024149.do\"
    rel=\"nofollow\">http://shop.oreilly.com/product/0636920024149.do</a><br>\nMike
    Amundsen on O’Reily Media — <a href=\"https://www.oreilly.com/pub/au/1192\" rel=\"nofollow\">https://www.oreilly.com/pub/au/1192</a><br>\nDesigning
    Elixir Systems With OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>\nCucumber
    — <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nVisual
    Studio Code — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nSOAP
    vs REST APIs — <a href=\"https://www.soapui.org/learn/api/soap-vs-rest-api/\"
    rel=\"nofollow\">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>\nRESTFest
    — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nExVenture
    — <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nPhoenix
    — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
    Rigby on GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nThe
    Big Lebowski — <a href=\"https://www.imdb.com/title/tt0118715/\" rel=\"nofollow\">https://www.imdb.com/title/tt0118715/</a><br>\nAesop
    Rock on Twitter — <a href=\"https://twitter.com/AesopRockWins\" rel=\"nofollow\">https://twitter.com/AesopRockWins</a><br>\nAll
    That Remains on Twitter — <a href=\"https://twitter.com/ATRhq\" rel=\"nofollow\">https://twitter.com/ATRhq</a><br>\nKorn
    — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nEric
    Meadows-Jönsson on Twitter — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nDonnie
    Darko — <a href=\"https://www.imdb.com/title/tt0246578/\" rel=\"nofollow\">https://www.imdb.com/title/tt0246578/</a><br>\nRichard
    Kelly — <a href=\"https://www.imdb.com/name/nm0446819/\" rel=\"nofollow\">https://www.imdb.com/name/nm0446819/</a><br>\nFrank
    Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>\n      "
- title: Betweenisode Part 2!  Featuring Amos King, Chris Keathley, Anna Neyzberg,
    Paul Schoenfelder, Sophie DeBenedetto, Meryl Dakin, and Dave Thomas
  slug: s4e0b-betweenisode-part-2
  link: https://smartlogic.io/podcast/elixir-wizards/s4e0b-betweenisode-part-2
  guid: dbe34c01-2361-41a8-ab85-dab81699cc7e
  pubDate: Thu, 23 Apr 2020 06:00:00 -0400
  pubDateFriendly: April 23, 2020
  description: |
    Welcome back to part two of our betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life after social distancing! The show is a back-to-back of four different conversations, the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas. Our four conversations cover the same broad themes, and we mostly share our thoughts about what is happening in the world right now, how we are coping with working remotely, and what particular projects have been keeping us busy. Our guests share varying perspectives about what it means that we are restructuring the way we do things. We talk about how even if you worked remotely before, things feel different now, and we also consider the extra burdens of being a remote software developer. Other topics include the line between complaints and constructive criticism, wild animals roaming the streets, and the general atmosphere in our different locations. From a tech point of view, we touch on IoT development, various GitHub projects to get involved with, why students aren’t learning how to program properly anymore, and a lot more. Get it all here and make sure you stay tuned for episode one of season four!
    Key Points From This Episode:
    Scaling up the NFL Draft website for remote screening.
    Home life and side projects in the quarantine: Mogde Podge, a baby, and game development.
    Shameless plugs from everybody: Binary Noggin, ElixirBridge, and Finch.
    Isolation, low supplies and trying to stay positive at present.
    Imagining roaming wild animals now that humans are in quarantine.
    Advice from Paul who works at home for surviving social distancing.
    What Paul is doing for Ockam to secure IoT devices.
    The danger of starting hack vulnerable tech companies.
    A plug from Paul to get involved with Lumen.
    Nature taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right now.
    Working from home versus working from home due to a global crisis.
    Domestic squabbles over bandwidth between Meryl and her software developer brother.
    Lessons learned to stay sane during quarantine: getting dressed.
    Extra tasks remote developers are having to do remotely; becoming project managers.
    The difference between complaints and legitimate critiques of work systems.
    Dave’s amazing remote communications setup 40 miles north of Dallas.
    The situation where Dave is with regard to coronavirus and freedom.
    How COBOL has not become too broad despite not using libraries.
    The history of programming languages that Dave teaches.
    That PDP-11 runs better emulated in Javascript than in its original hardware.
    A drawback of modern development: not understanding hardware.
    How Dave is digitizing his SMU courses due to teaching them online at present.
    All the effort Dave puts into grading his students’ exercises.
    Issues that coding is not taught rigorously enough; students can’t ‘program’.
    How well the human race is doing to mobilize en masse right now.
    Whether tech caused the crisis and humanity could manage this crisis 100 years ago.
    Links Mentioned in Today’s Episode:
    Eric Oestrich — https://oestrich.org/
    Justus Eapen — https://www.linkedin.com/in/justuseapen/
    Amos King — https://www.linkedin.com/in/amosking/
    Chris Keathley — https://keathley.io/
    Anna Neyzberg — https://www.linkedin.com/in/anna-neyzberg-93545316/
    Elixir Outlaws — https://elixiroutlaws.com/
    NFL Draft — https://www.nfl.com/draft/home
    Modge Podge — https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O
    Star Trek — https://intl.startrek.com/
    Sublime — https://www.sublimetext.com/
    VSCode — https://code.visualstudio.com/
    Binary Noggin — https://binarynoggin.com/
    Connor Rigby — https://binarynoggin.com/author/connor/
    ElixirBridge — http://elixirbridge.org/
    Nico Piderman — https://github.com/sneako
    Quinn Wilton — https://github.com/QuinnWilton
    Jose Valim — https://github.com/josevalim
    Finch Library— https://github.com/keathley/finch
    Paul Schoenfelder — https://www.linkedin.com/in/gotbones/
    Ockam — https://www.ockam.io/
    Lumen — https://github.com/lumen/lumen
    Timex — https://github.com/bitwalker/timex
    Sophie DeBenedetto — https://www.linkedin.com/in/sophiedebenedetto/
    Meryl Dakin — https://github.com/meryldakin
    Flatiron — https://flatironschool.com/
    Sophie DeBenedetto’s GitHub Post — https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/
    Elixir School — https://elixirschool.com/en/
    Meryl Dakin’s Watch if Your Dare Episode — https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true
    Luigi’s Mansion — https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html
    Dave Thomas — https://pragdave.me/
    COBOL — https://www.tutorialspoint.com/cobol/index.htm
    PD-11 — https://history-computer.com/ModernComputer/Electronic/PDP-11.html
    SMU — https://www.smu.edu/lyle
    Elixir Wizards Podcast — https://podcast.smartlogic.io
    SmartLogic — https://smartlogic.io/  Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas, Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Q1zm3CKU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe34c01-2361-41a8-ab85-dab81699cc7e.mp3
    length: '77474023'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Welcome back to part two of our Betweenisode! Everybody is working remotely
      now including ourselves, so today we continue the catch ups we were having with
      a number of longstanding buddies and chat about life during social distancing.
    duration: '53:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/dbe34c01-2361-41a8-ab85-dab81699cc7e/cover.jpg?v=1
    summary: "\n        <p>Welcome back to part two of our betweenisode! Everybody
      is working remotely now including ourselves, so today we continue the catch
      ups we were having with a number of longstanding buddies and chat about life
      after social distancing! The show is a back-to-back of four different conversations,
      the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir
      Outlaws. After that we talk to Paul Schoenfelder, before getting on the line
      with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with
      Dave Thomas. Our four conversations cover the same broad themes, and we mostly
      share our thoughts about what is happening in the world right now, how we are
      coping with working remotely, and what particular projects have been keeping
      us busy. Our guests share varying perspectives about what it means that we are
      restructuring the way we do things. We talk about how even if you worked remotely
      before, things feel different now, and we also consider the extra burdens of
      being a remote software developer. Other topics include the line between complaints
      and constructive criticism, wild animals roaming the streets, and the general
      atmosphere in our different locations. From a tech point of view, we touch on
      IoT development, various GitHub projects to get involved with, why students
      aren’t learning how to program properly anymore, and a lot more. Get it all
      here and make sure you stay tuned for episode one of season four!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Scaling up the NFL Draft website
      for remote screening.</li>\n<li>Home life and side projects in the quarantine:
      Mogde Podge, a baby, and game development.</li>\n<li>Shameless plugs from everybody:
      Binary Noggin, ElixirBridge, and Finch.</li>\n<li>Isolation, low supplies and
      trying to stay positive at present.</li>\n<li>Imagining roaming wild animals
      now that humans are in quarantine.</li>\n<li>Advice from Paul who works at home
      for surviving social distancing.</li>\n<li>What Paul is doing for Ockam to secure
      IoT devices.</li>\n<li>The danger of starting hack vulnerable tech companies.</li>\n<li>A
      plug from Paul to get involved with Lumen.</li>\n<li>Nature taking over; Meryl
      and Sophie’s experiences in Brooklyn and Westchester right now.</li>\n<li>Working
      from home versus working from home due to a global crisis.</li>\n<li>Domestic
      squabbles over bandwidth between Meryl and her software developer brother.</li>\n<li>Lessons
      learned to stay sane during quarantine: getting dressed.</li>\n<li>Extra tasks
      remote developers are having to do remotely; becoming project managers.</li>\n<li>The
      difference between complaints and legitimate critiques of work systems.</li>\n<li>Dave’s
      amazing remote communications setup 40 miles north of Dallas.</li>\n<li>The
      situation where Dave is with regard to coronavirus and freedom.</li>\n<li>How
      COBOL has not become too broad despite not using libraries.</li>\n<li>The history
      of programming languages that Dave teaches.</li>\n<li>That PDP-11 runs better
      emulated in Javascript than in its original hardware.</li>\n<li>A drawback of
      modern development: not understanding hardware.</li>\n<li>How Dave is digitizing
      his SMU courses due to teaching them online at present.</li>\n<li>All the effort
      Dave puts into grading his students’ exercises.</li>\n<li>Issues that coding
      is not taught rigorously enough; students can’t ‘program’.</li>\n<li>How well
      the human race is doing to mobilize en masse right now.</li>\n<li>Whether tech
      caused the crisis and humanity could manage this crisis 100 years ago.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Eric Oestrich — <a href=\"https://oestrich.org/\"
      rel=\"nofollow\">https://oestrich.org/</a><br>\nJustus Eapen — <a href=\"https://www.linkedin.com/in/justuseapen/\"
      rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nAmos King
      — <a href=\"https://www.linkedin.com/in/amosking/\" rel=\"nofollow\">https://www.linkedin.com/in/amosking/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nAnna
      Neyzberg — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNFL
      Draft — <a href=\"https://www.nfl.com/draft/home\" rel=\"nofollow\">https://www.nfl.com/draft/home</a><br>\nModge
      Podge — <a href=\"https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O\"
      rel=\"nofollow\">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>\nStar
      Trek — <a href=\"https://intl.startrek.com/\" rel=\"nofollow\">https://intl.startrek.com/</a><br>\nSublime
      — <a href=\"https://www.sublimetext.com/\" rel=\"nofollow\">https://www.sublimetext.com/</a><br>\nVSCode
      — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
      Rigby — <a href=\"https://binarynoggin.com/author/connor/\" rel=\"nofollow\">https://binarynoggin.com/author/connor/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nNico
      Piderman — <a href=\"https://github.com/sneako\" rel=\"nofollow\">https://github.com/sneako</a><br>\nQuinn
      Wilton — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nJose
      Valim — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nFinch
      Library— <a href=\"https://github.com/keathley/finch\" rel=\"nofollow\">https://github.com/keathley/finch</a><br>\nPaul
      Schoenfelder — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nOckam
      — <a href=\"https://www.ockam.io/\" rel=\"nofollow\">https://www.ockam.io/</a><br>\nLumen
      — <a href=\"https://github.com/lumen/lumen\" rel=\"nofollow\">https://github.com/lumen/lumen</a><br>\nTimex
      — <a href=\"https://github.com/bitwalker/timex\" rel=\"nofollow\">https://github.com/bitwalker/timex</a><br>\nSophie
      DeBenedetto — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\" rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nMeryl
      Dakin — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nSophie
      DeBenedetto’s GitHub Post — <a href=\"https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/\"
      rel=\"nofollow\">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nMeryl
      Dakin’s Watch if Your Dare Episode — <a href=\"https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true\"
      rel=\"nofollow\">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>\nLuigi’s
      Mansion — <a href=\"https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html\"
      rel=\"nofollow\">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>\nDave
      Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nCOBOL
      — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nPD-11
      — <a href=\"https://history-computer.com/ModernComputer/Electronic/PDP-11.html\"
      rel=\"nofollow\">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>\nSMU
      — <a href=\"https://www.smu.edu/lyle\" rel=\"nofollow\">https://www.smu.edu/lyle</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas,
      Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to part two of our betweenisode! Everybody
    is working remotely now including ourselves, so today we continue the catch ups
    we were having with a number of longstanding buddies and chat about life after
    social distancing! The show is a back-to-back of four different conversations,
    the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir
    Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with
    Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas.
    Our four conversations cover the same broad themes, and we mostly share our thoughts
    about what is happening in the world right now, how we are coping with working
    remotely, and what particular projects have been keeping us busy. Our guests share
    varying perspectives about what it means that we are restructuring the way we
    do things. We talk about how even if you worked remotely before, things feel different
    now, and we also consider the extra burdens of being a remote software developer.
    Other topics include the line between complaints and constructive criticism, wild
    animals roaming the streets, and the general atmosphere in our different locations.
    From a tech point of view, we touch on IoT development, various GitHub projects
    to get involved with, why students aren’t learning how to program properly anymore,
    and a lot more. Get it all here and make sure you stay tuned for episode one of
    season four!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Scaling
    up the NFL Draft website for remote screening.</li>\n<li>Home life and side projects
    in the quarantine: Mogde Podge, a baby, and game development.</li>\n<li>Shameless
    plugs from everybody: Binary Noggin, ElixirBridge, and Finch.</li>\n<li>Isolation,
    low supplies and trying to stay positive at present.</li>\n<li>Imagining roaming
    wild animals now that humans are in quarantine.</li>\n<li>Advice from Paul who
    works at home for surviving social distancing.</li>\n<li>What Paul is doing for
    Ockam to secure IoT devices.</li>\n<li>The danger of starting hack vulnerable
    tech companies.</li>\n<li>A plug from Paul to get involved with Lumen.</li>\n<li>Nature
    taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right
    now.</li>\n<li>Working from home versus working from home due to a global crisis.</li>\n<li>Domestic
    squabbles over bandwidth between Meryl and her software developer brother.</li>\n<li>Lessons
    learned to stay sane during quarantine: getting dressed.</li>\n<li>Extra tasks
    remote developers are having to do remotely; becoming project managers.</li>\n<li>The
    difference between complaints and legitimate critiques of work systems.</li>\n<li>Dave’s
    amazing remote communications setup 40 miles north of Dallas.</li>\n<li>The situation
    where Dave is with regard to coronavirus and freedom.</li>\n<li>How COBOL has
    not become too broad despite not using libraries.</li>\n<li>The history of programming
    languages that Dave teaches.</li>\n<li>That PDP-11 runs better emulated in Javascript
    than in its original hardware.</li>\n<li>A drawback of modern development: not
    understanding hardware.</li>\n<li>How Dave is digitizing his SMU courses due to
    teaching them online at present.</li>\n<li>All the effort Dave puts into grading
    his students’ exercises.</li>\n<li>Issues that coding is not taught rigorously
    enough; students can’t ‘program’.</li>\n<li>How well the human race is doing to
    mobilize en masse right now.</li>\n<li>Whether tech caused the crisis and humanity
    could manage this crisis 100 years ago.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Eric Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nJustus
    Eapen — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nAmos
    King — <a href=\"https://www.linkedin.com/in/amosking/\" rel=\"nofollow\">https://www.linkedin.com/in/amosking/</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nAnna
    Neyzberg — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNFL
    Draft — <a href=\"https://www.nfl.com/draft/home\" rel=\"nofollow\">https://www.nfl.com/draft/home</a><br>\nModge
    Podge — <a href=\"https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O\"
    rel=\"nofollow\">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>\nStar
    Trek — <a href=\"https://intl.startrek.com/\" rel=\"nofollow\">https://intl.startrek.com/</a><br>\nSublime
    — <a href=\"https://www.sublimetext.com/\" rel=\"nofollow\">https://www.sublimetext.com/</a><br>\nVSCode
    — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
    Rigby — <a href=\"https://binarynoggin.com/author/connor/\" rel=\"nofollow\">https://binarynoggin.com/author/connor/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nNico
    Piderman — <a href=\"https://github.com/sneako\" rel=\"nofollow\">https://github.com/sneako</a><br>\nQuinn
    Wilton — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nJose
    Valim — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nFinch
    Library— <a href=\"https://github.com/keathley/finch\" rel=\"nofollow\">https://github.com/keathley/finch</a><br>\nPaul
    Schoenfelder — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nOckam
    — <a href=\"https://www.ockam.io/\" rel=\"nofollow\">https://www.ockam.io/</a><br>\nLumen
    — <a href=\"https://github.com/lumen/lumen\" rel=\"nofollow\">https://github.com/lumen/lumen</a><br>\nTimex
    — <a href=\"https://github.com/bitwalker/timex\" rel=\"nofollow\">https://github.com/bitwalker/timex</a><br>\nSophie
    DeBenedetto — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\" rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nMeryl
    Dakin — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nSophie
    DeBenedetto’s GitHub Post — <a href=\"https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/\"
    rel=\"nofollow\">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nMeryl
    Dakin’s Watch if Your Dare Episode — <a href=\"https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true\"
    rel=\"nofollow\">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>\nLuigi’s
    Mansion — <a href=\"https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html\"
    rel=\"nofollow\">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>\nDave
    Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nCOBOL
    — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nPD-11
    — <a href=\"https://history-computer.com/ModernComputer/Electronic/PDP-11.html\"
    rel=\"nofollow\">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>\nSMU
    — <a href=\"https://www.smu.edu/lyle\" rel=\"nofollow\">https://www.smu.edu/lyle</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas,
    Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>\n      "
- title: 'Betweenisode Part 1: Saša Jurić, Bruce and Maggie Tate, James Edward Gray
    II, Jim and Chris Freeze, and Frank Hunleth'
  slug: s4e0a-betweenisode-part-1
  link: https://smartlogic.io/podcast/elixir-wizards/s4e0a-betweenisode-part-1
  guid: 1b54b0cf-efaa-46fa-90b5-e40411069750
  pubDate: Tue, 21 Apr 2020 06:00:00 -0400
  pubDateFriendly: April 21, 2020
  description: "The world has changed so much since the end of season 3, that we thought
    we’d put together a special Betweenisode to tide you over until Season 4 launches.
    In this episode, we talk to several friends and respected members of the Elixir
    community, about how they’re coping and tips they have for retaining some normalcy
    in your life if you’re suddenly having to work from home. Our first guest, Saša
    Jurić, of Very Big Things, and author of the unrivaled Elixir in Action, has had
    the privilege of working from home for several years. He shares the importance
    of having a routine, connecting with people, and why you should get out of your
    pajamas and into some real clothes when you work. He also shares what it’s been
    like in his home city of Zagreb, and how previous devastating events have in some
    way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio,
    an educational platform to learn languages, also join us. Maggie shares more on
    her culinary adventures, and the importance of having a definite start and finish
    time to your day. Bruce talks about some of the professional projects he’s working
    on, and why he believes it’s crucial to tackle difficult technical skills outside
    of developing. Other guests include James Edward Gray II, who shares more about
    the incredible way he and his daughter have been bonding, Jim Freeze, founder
    of ElixirConf, and his son Chris, who share some of the benefits of working from
    home, and show us how to see the silver lining during this difficult time, and
    Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have
    certainly been more changes in the world than we could have anticipated, so it
    was wonderful to catch up and see how people in our community have been coping.
    Be sure to tune in today!\nKey Points From This Episode:\nLearn what’s happening
    in Saša’s home city, Zagreb, and what he’s doing to keep busy.\nSaša’s advice
    for coping during the pandemic and preventing information overload.\nThe transition
    to remote work in Saša’s company and the impacts it’s had on workload.\nHow Saša
    started working remotely and the main lessons he has learned from doing it.\nWhat
    Saša believes the future of virtual events and conferences will be.\nFind out
    how Bruce and Maggie are dealing with these strange times. \nGroxio’s mission
    in terms of learning and Bruce and Maggie’s tip for working from home.\nCurrent
    projects that Bruce and Maggie are working on both at Groxio and personally.\nWhat’s
    in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.\nHow
    James is holding up and his take on the COBOL debacle. \nFind out what motivated
    James to transition from Ruby to Elixir and what it’s been like. \nJames’s experience
    working from home and tips for people who are new to it.\nSpecific versus general
    solutions: The difference and how James thinks we can tackle this.\nHear James’s
    ExVenture plug, which is Eric’s project.\nJim’s and Chris’s experience of the
    lockdown and the silver linings that have come from it\nFind out Jim and Chris’s
    necessities for working from home and being productive. \nJim’s plans for ElixirConf
    for this year and 2021, and Chris and Jim’s final plug. \nFrank’s tips for working
    from home and his product plugs. \nLinks Mentioned in Today’s Episode:\nSaša Jurić
    on Twitter — https://twitter.com/sasajuric\nSaša Jurić on LinkedIn — https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\nErlangelist
    — https://www.theerlangelist.com/\nVery Big Things — https://verybigthings.com/\nElixir
    in Action — https://www.manning.com/books/elixir-in-action-second-edition\nBruce
    Tate — https://www.linkedin.com/in/bruce-tate-a836b\nBruce Tate on Twitter — https://twitter.com/redrapids\nMaggie
    Tate on LinkedIn — https://www.linkedin.com/in/maggie-tate-230234171\nGroxio —
    https://grox.io/\nProgrammer Passport — https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\nLonestar
    Elixir — https://lonestarelixir.com/\nJames Edward Gray II — https://twitter.com/JEG2\nCOBOL
    — https://www.tutorialspoint.com/cobol/index.htm\nGray Inc — http://graysoftinc.com/\nProgramming
    Erlang — https://pragprog.com/book/jaerlang2/programming-erlang\nNathan Long —
    https://twitter.com/sleeplessgeek\nPOV-Ray — http://www.povray.org/\nElixir Wizards
    S02 Eric on ExVenture — https://podcast.smartlogic.io/season-two-oestrich\nJesse
    Link — http://www.jesselink.com/\nJim Freeze on Twitter— https://twitter.com/jimfreeze\nElixirConf
    — https://elixirconf.com/2020\nChris Freeze on Twitter— https://twitter.com/chrisfreeze_\nTesla
    Car Lot — https://teslacarlot.com/\nDavid Antaramian — https://www.linkedin.com/in/davidantaramian/\nPepsiCo
    — https://www.pepsico.com/\nNerves Project — https://www.nerves-project.org/\nFrank
    Hunleth on Twitter — https://twitter.com/fhunleth\nSmartLogic — https://smartlogic.io/
    \ Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth, James
    Gray, Maggie Tate, and Saša Jurić.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+pwHjjtQA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b54b0cf-efaa-46fa-90b5-e40411069750.mp3
    length: '77231497'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'The world has changed so much since the end of season 3, that we thought
      we’d put together a special Betweenisode to tide you over until Season 4 launches.
      In this episode, we talk to several friends and respected members of the Elixir
      community, about how they’re coping and tips they have for retaining some normalcy
      in your life if you’re suddenly having to work from home. '
    duration: '53:16'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b54b0cf-efaa-46fa-90b5-e40411069750/cover.jpg?v=1
    summary: "\n        <p>The world has changed so much since the end of season 3,
      that we thought we’d put together a special Betweenisode to tide you over until
      Season 4 launches. In this episode, we talk to several friends and respected
      members of the Elixir community, about how they’re coping and tips they have
      for retaining some normalcy in your life if you’re suddenly having to work from
      home. Our first guest, Saša Jurić, of Very Big Things, and author of the unrivaled
      Elixir in Action, has had the privilege of working from home for several years.
      He shares the importance of having a routine, connecting with people, and why
      you should get out of your pajamas and into some real clothes when you work.
      He also shares what it’s been like in his home city of Zagreb, and how previous
      devastating events have in some way prepared him for what’s currently happening.
      Bruce and Maggie Tate of Groxio, an educational platform to learn languages,
      also join us. Maggie shares more on her culinary adventures, and the importance
      of having a definite start and finish time to your day. Bruce talks about some
      of the professional projects he’s working on, and why he believes it’s crucial
      to tackle difficult technical skills outside of developing. Other guests include
      James Edward Gray II, who shares more about the incredible way he and his daughter
      have been bonding, Jim Freeze, founder of ElixirConf, and his son Chris, who
      share some of the benefits of working from home, and show us how to see the
      silver lining during this difficult time, and Frank Hunleth, of Nerves Project,
      who talks about what he’s up to. There have certainly been more changes in the
      world than we could have anticipated, so it was wonderful to catch up and see
      how people in our community have been coping. Be sure to tune in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Learn what’s happening in Saša’s
      home city, Zagreb, and what he’s doing to keep busy.</li>\n<li>Saša’s advice
      for coping during the pandemic and preventing information overload.</li>\n<li>The
      transition to remote work in Saša’s company and the impacts it’s had on workload.</li>\n<li>How
      Saša started working remotely and the main lessons he has learned from doing
      it.</li>\n<li>What Saša believes the future of virtual events and conferences
      will be.</li>\n<li>Find out how Bruce and Maggie are dealing with these strange
      times. </li>\n<li>Groxio’s mission in terms of learning and Bruce and Maggie’s
      tip for working from home.</li>\n<li>Current projects that Bruce and Maggie
      are working on both at Groxio and personally.</li>\n<li>What’s in the pipeline
      with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>\n<li>How James
      is holding up and his take on the COBOL debacle. </li>\n<li>Find out what motivated
      James to transition from Ruby to Elixir and what it’s been like. </li>\n<li>James’s
      experience working from home and tips for people who are new to it.</li>\n<li>Specific
      versus general solutions: The difference and how James thinks we can tackle
      this.</li>\n<li>Hear James’s ExVenture plug, which is Eric’s project.</li>\n<li>Jim’s
      and Chris’s experience of the lockdown and the silver linings that have come
      from it</li>\n<li>Find out Jim and Chris’s necessities for working from home
      and being productive. </li>\n<li>Jim’s plans for ElixirConf for this year and
      2021, and Chris and Jim’s final plug. </li>\n<li>Frank’s tips for working from
      home and his product plugs. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Saša
      Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nSaša
      Jurić on LinkedIn — <a href=\"https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\"
      rel=\"nofollow\">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>\nErlangelist
      — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nVery
      Big Things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nElixir
      in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b</a><br>\nBruce
      Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
      Tate on LinkedIn — <a href=\"https://www.linkedin.com/in/maggie-tate-230234171\"
      rel=\"nofollow\">https://www.linkedin.com/in/maggie-tate-230234171</a><br>\nGroxio
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nProgrammer
      Passport — <a href=\"https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\"
      rel=\"nofollow\">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJames
      Edward Gray II — <a href=\"https://twitter.com/JEG2\" rel=\"nofollow\">https://twitter.com/JEG2</a><br>\nCOBOL
      — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nGray
      Inc — <a href=\"http://graysoftinc.com/\" rel=\"nofollow\">http://graysoftinc.com/</a><br>\nProgramming
      Erlang — <a href=\"https://pragprog.com/book/jaerlang2/programming-erlang\"
      rel=\"nofollow\">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>\nNathan
      Long — <a href=\"https://twitter.com/sleeplessgeek\" rel=\"nofollow\">https://twitter.com/sleeplessgeek</a><br>\nPOV-Ray
      — <a href=\"http://www.povray.org/\" rel=\"nofollow\">http://www.povray.org/</a><br>\nElixir
      Wizards S02 Eric on ExVenture — <a href=\"https://podcast.smartlogic.io/season-two-oestrich\"
      rel=\"nofollow\">https://podcast.smartlogic.io/season-two-oestrich</a><br>\nJesse
      Link — <a href=\"http://www.jesselink.com/\" rel=\"nofollow\">http://www.jesselink.com/</a><br>\nJim
      Freeze on Twitter— <a href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">https://twitter.com/jimfreeze</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nChris
      Freeze on Twitter— <a href=\"https://twitter.com/chrisfreeze_\" rel=\"nofollow\">https://twitter.com/chrisfreeze_</a><br>\nTesla
      Car Lot — <a href=\"https://teslacarlot.com/\" rel=\"nofollow\">https://teslacarlot.com/</a><br>\nDavid
      Antaramian — <a href=\"https://www.linkedin.com/in/davidantaramian/\" rel=\"nofollow\">https://www.linkedin.com/in/davidantaramian/</a><br>\nPepsiCo
      — <a href=\"https://www.pepsico.com/\" rel=\"nofollow\">https://www.pepsico.com/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFrank
      Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth,
      James Gray, Maggie Tate, and Saša Jurić.</p>\n      "
  contentEncoded: "\n        <p>The world has changed so much since the end of season
    3, that we thought we’d put together a special Betweenisode to tide you over until
    Season 4 launches. In this episode, we talk to several friends and respected members
    of the Elixir community, about how they’re coping and tips they have for retaining
    some normalcy in your life if you’re suddenly having to work from home. Our first
    guest, Saša Jurić, of Very Big Things, and author of the unrivaled Elixir in Action,
    has had the privilege of working from home for several years. He shares the importance
    of having a routine, connecting with people, and why you should get out of your
    pajamas and into some real clothes when you work. He also shares what it’s been
    like in his home city of Zagreb, and how previous devastating events have in some
    way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio,
    an educational platform to learn languages, also join us. Maggie shares more on
    her culinary adventures, and the importance of having a definite start and finish
    time to your day. Bruce talks about some of the professional projects he’s working
    on, and why he believes it’s crucial to tackle difficult technical skills outside
    of developing. Other guests include James Edward Gray II, who shares more about
    the incredible way he and his daughter have been bonding, Jim Freeze, founder
    of ElixirConf, and his son Chris, who share some of the benefits of working from
    home, and show us how to see the silver lining during this difficult time, and
    Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have
    certainly been more changes in the world than we could have anticipated, so it
    was wonderful to catch up and see how people in our community have been coping.
    Be sure to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Learn
    what’s happening in Saša’s home city, Zagreb, and what he’s doing to keep busy.</li>\n<li>Saša’s
    advice for coping during the pandemic and preventing information overload.</li>\n<li>The
    transition to remote work in Saša’s company and the impacts it’s had on workload.</li>\n<li>How
    Saša started working remotely and the main lessons he has learned from doing it.</li>\n<li>What
    Saša believes the future of virtual events and conferences will be.</li>\n<li>Find
    out how Bruce and Maggie are dealing with these strange times. </li>\n<li>Groxio’s
    mission in terms of learning and Bruce and Maggie’s tip for working from home.</li>\n<li>Current
    projects that Bruce and Maggie are working on both at Groxio and personally.</li>\n<li>What’s
    in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>\n<li>How
    James is holding up and his take on the COBOL debacle. </li>\n<li>Find out what
    motivated James to transition from Ruby to Elixir and what it’s been like. </li>\n<li>James’s
    experience working from home and tips for people who are new to it.</li>\n<li>Specific
    versus general solutions: The difference and how James thinks we can tackle this.</li>\n<li>Hear
    James’s ExVenture plug, which is Eric’s project.</li>\n<li>Jim’s and Chris’s experience
    of the lockdown and the silver linings that have come from it</li>\n<li>Find out
    Jim and Chris’s necessities for working from home and being productive. </li>\n<li>Jim’s
    plans for ElixirConf for this year and 2021, and Chris and Jim’s final plug. </li>\n<li>Frank’s
    tips for working from home and his product plugs. </li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Saša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\"
    rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nSaša Jurić on LinkedIn
    — <a href=\"https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\" rel=\"nofollow\">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>\nErlangelist
    — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nVery
    Big Things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nElixir
    in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b</a><br>\nBruce
    Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
    Tate on LinkedIn — <a href=\"https://www.linkedin.com/in/maggie-tate-230234171\"
    rel=\"nofollow\">https://www.linkedin.com/in/maggie-tate-230234171</a><br>\nGroxio
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nProgrammer
    Passport — <a href=\"https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\"
    rel=\"nofollow\">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJames
    Edward Gray II — <a href=\"https://twitter.com/JEG2\" rel=\"nofollow\">https://twitter.com/JEG2</a><br>\nCOBOL
    — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nGray
    Inc — <a href=\"http://graysoftinc.com/\" rel=\"nofollow\">http://graysoftinc.com/</a><br>\nProgramming
    Erlang — <a href=\"https://pragprog.com/book/jaerlang2/programming-erlang\" rel=\"nofollow\">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>\nNathan
    Long — <a href=\"https://twitter.com/sleeplessgeek\" rel=\"nofollow\">https://twitter.com/sleeplessgeek</a><br>\nPOV-Ray
    — <a href=\"http://www.povray.org/\" rel=\"nofollow\">http://www.povray.org/</a><br>\nElixir
    Wizards S02 Eric on ExVenture — <a href=\"https://podcast.smartlogic.io/season-two-oestrich\"
    rel=\"nofollow\">https://podcast.smartlogic.io/season-two-oestrich</a><br>\nJesse
    Link — <a href=\"http://www.jesselink.com/\" rel=\"nofollow\">http://www.jesselink.com/</a><br>\nJim
    Freeze on Twitter— <a href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">https://twitter.com/jimfreeze</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nChris
    Freeze on Twitter— <a href=\"https://twitter.com/chrisfreeze_\" rel=\"nofollow\">https://twitter.com/chrisfreeze_</a><br>\nTesla
    Car Lot — <a href=\"https://teslacarlot.com/\" rel=\"nofollow\">https://teslacarlot.com/</a><br>\nDavid
    Antaramian — <a href=\"https://www.linkedin.com/in/davidantaramian/\" rel=\"nofollow\">https://www.linkedin.com/in/davidantaramian/</a><br>\nPepsiCo
    — <a href=\"https://www.pepsico.com/\" rel=\"nofollow\">https://www.pepsico.com/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFrank
    Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth,
    James Gray, Maggie Tate, and Saša Jurić.</p>\n      "
