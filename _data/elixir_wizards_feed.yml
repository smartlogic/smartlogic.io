---
title: Elixir Wizards
pubDate: Thu, 26 Dec 2024 11:30:04 -0000
link: https://smartlogic.io/podcast/elixir-wizards
description: "Elixir Wizards is an interview-style podcast for anyone interested in
  functional programming and the Elixir Programming Language. Hosted by SmartLogic
  engineers and Elixirists Owen Bickford, Dan Ivovich, and Sundi Myint, this show
  features in-depth discussions with some of the brightest minds in the industry,
  discussing training and documentation in Phoenix LiveView, the evolution of programming
  languages, Erlang VM, and more. \nIn the current season, we're branching out from
  Elixir to compare notes with thought leaders and software engineers from programming
  languages like JavaScript, Ruby on Rails, Go, Scala, Java, and more. Each episode
  will take a deep dive into a topic from Machine Learning and AI, to ECS and game
  development, to education and community.\nLearn more about how SmartLogic uses Phoenix
  and Elixir. (https://smartlogic.io/phoenix-and-elixir?utm_source=podcast) \n"
items:
- title: Season 3 Trailer
  slug: s3-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/s3-trailer
  guid: ba3a7fde-7592-4074-906d-1689a9801712
  pubDate: Tue, 19 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 19, 2019
  description: "Welcome back to Season 3! Our theme this time around is Working with
    Elixir. Listen for more on our theme, upcoming guests, and our new name. \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+k6GywxC4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ba3a7fde-7592-4074-906d-1689a9801712.mp3
    length: '2412548'
    type: audio/mp3
  itunes:
    episodeType: trailer
    season: '3'
    author: SmartLogic LLC
    subtitle: Welcome back to Season 3! Our theme this time around is Working with
      Elixir. Listen for more on our theme, upcoming guests, and our new name.
    duration: '1:40'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome back to Season 3! Our theme this time around is
      Working with Elixir. Listen for more on our theme, upcoming guests, and our
      new name.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to Season 3! Our theme this time around
    is Working with Elixir. Listen for more on our theme, upcoming guests, and our
    new name.</p>\n      "
- title: Season 2 Trailer
  slug: season-2-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/season-2-trailer
  guid: 2301755d-d5af-4c53-b044-2d84b35b340f
  pubDate: Tue, 09 Jul 2019 06:00:00 -0400
  pubDateFriendly: July  9, 2019
  description: "We’re excited to announce our season two topic, Elixir Internals.
    In this season we talk with developers behind some of the most popular Elixir
    libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more! \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6-2E3Exs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2301755d-d5af-4c53-b044-2d84b35b340f.mp3
    length: '2507438'
    type: audio/mpeg
  itunes:
    episodeType: trailer
    season: '2'
    author: SmartLogic LLC
    subtitle: We’re excited to announce our season two topic, Elixir Internals. In
      this season we talk with developers behind some of the most popular Elixir libraries,
      including Witchcraft, ElixirScript, Distillery, Ecto, and more!
    duration: '1:26'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>We’re excited to announce our season two topic, Elixir
      Internals. In this season we talk with developers behind some of the most popular
      Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and
      more!</p>\n      "
  contentEncoded: "\n        <p>We’re excited to announce our season two topic, Elixir
    Internals. In this season we talk with developers behind some of the most popular
    Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more!</p>\n
    \     "
- title: Smart Software Season 1 Trailer
  slug: season-1-trailer
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-trailer
  guid: 8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72
  pubDate: Mon, 25 Feb 2019 10:00:00 -0500
  pubDateFriendly: February 25, 2019
  description: "Welcome to the first season of Smart Software with SmartLogic. We'll
    be interviewing several companies about how they use Elixir in Production this
    season. In this preview episode, we introduce ourselves and some of the topics
    we’ll be covering.\nLearn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8)
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+CMqsR3oF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72.mp3
    length: '1009172'
    type: audio/mp3
  itunes:
    episodeType: trailer
    season: '1'
    author: SmartLogic LLC
    subtitle: Welcome to the first season of Smart Software with SmartLogic. We'll
      be interviewing several companies about how they use Elixir in Production this
      season. In this preview episode, we introduce ourselves and some of the topics
      we’ll be covering.
    duration: '1:24'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome to the first season of Smart Software with SmartLogic.
      We&#39;ll be interviewing several companies about how they use Elixir in Production
      this season. In this preview episode, we introduce ourselves and some of the
      topics we’ll be covering.</p>\n\n<p>Learn more about how SmartLogic uses <a
      href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p>\n
      \     "
  contentEncoded: "\n        <p>Welcome to the first season of Smart Software with
    SmartLogic. We&#39;ll be interviewing several companies about how they use Elixir
    in Production this season. In this preview episode, we introduce ourselves and
    some of the topics we’ll be covering.</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p>\n
    \     "
- title: Building an Open Vehicle Control System using Elixir and Nerves with Marc,
    Thibault, and Loïc
  slug: s13-e11-ovcs-vehicle-control-system-elixir-nerves-spin42
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e11-ovcs-vehicle-control-system-elixir-nerves-spin42
  guid: 3657c934-7196-4133-948a-d186b2482df7
  pubDate: Thu, 26 Dec 2024 06:30:00 -0500
  pubDateFriendly: December 26, 2024
  description: "For the Season 13 finale, Elixir Wizards Dan and Charles are joined
    by Spin42 Engineers Marc Lainez, Thibault Poncelet, and Loïc Vigneron to discuss
    their work retrofitting a 2007 VW Polo and creating an Open Vehicle Control System
    (OVCS). Using Elixir, Nerves, and Raspberry Pis, the team is reimagining vehicle
    technology to extend the lifespan of older cars and reduce waste—all while making
    the process approachable and open source.\nThe Spin42 team shares the technical
    details behind OVCS and how they use Elixir and Nerves to interact with the CAN
    bus and build a Vehicle Management System (VMS) to coordinate various vehicle
    components. They dive into the challenges of reverse engineering CAN messages,
    designing a distributed architecture with Elixir processes, and ensuring safety
    with fail-safe modes and emergency shutoffs.\nBeyond the technical, the team discusses
    their motivation for the project—upgrading older vehicles with modern features
    to keep them on the road, building an open-source platform to share their findings
    with others, and above all-- to just have fun. They explore potential applications
    for OVCS in boats, construction equipment, and other vehicles, while reflecting
    on the hurdles of certifying the system for road use.\nIf you’ve ever wondered
    how Elixir and Nerves can drive innovation beyond software, this episode is packed
    with insights into automotive computing, hardware development, and the collaborative
    potential of open-source projects.\nTopics Discussed in this Episode:\nRetrofitting
    a 2007 VW Polo with electric engines and modern tech\nBuilding an open-source
    Vehicle Control System (OVCS) using Elixir and Nerves\nLeveraging Elixir to interact
    with the CAN bus and parse proprietary messages\nDesigning a Vehicle Management
    System (VMS) to coordinate vehicle components\nDeveloping custom hardware for
    CAN communication\nCreating a YAML-based DSL for CAN message and frame descriptions\nBuilding
    a distributed architecture using Elixir processes\nEnsuring safety with fail-safe
    modes and emergency shutoffs\nUsing Flutter and Nerves to build a custom infotainment
    system\nExploring autonomous driving features with a ROS2 bridge\nDeveloping remote
    control functionality with a Mavlink transmitter\nTesting OVCS features at scale
    with a Traxxas RC car (OVCS Mini)\nChallenges of certifying OVCS for road use
    and meeting regulatory requirements\nEncouraging community contributions to expand
    OVCS functionality\nBalancing open-source projects with contract work to sustain
    development\nThe fun and fulfillment of experimenting with Elixir beyond traditional
    applications\nLinks mentioned:\nhttps://www.spin42.com/\nhttps://nerves-project.org/\nQuadcopter
    https://github.com/Spin42/elicopter \nhttps://github.com/linux-can/can-utils\nhttps://docs.kernel.org/networking/can.html\nhttps://github.com/open-vehicle-control-system/cantastic\nhttps://github.com/commaai/opendbc\nhttps://en.wikipedia.org/wiki/CANbus#CANFD\nhttps://comma.ai/\nhttps://en.wikipedia.org/wiki/CANFD\nhttps://webkit.org/wpe/\nhttps://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/WindowingSystems/WestonWayland.html\nhttps://buildroot.org/\nhttps://vuejs.org/\nhttps://flutter.dev/\nhttps://github.com/smartrent/elixirflutterembedder\nhttps://www.raspberrypi.com/products/raspberry-pi-5/\nThe
    Rabbit Pickup https://www.hemmings.com/stories/value-guide-1980-83-volkswagen-pickup
    \nhttps://www.expresslrs.org/software/mavlink\nhttps://industrial-training-master.readthedocs.io/en/melodic/source/session7/ROS1-ROS2-bridge.html\nhttps://github.com/ros2/rcl\nhttps://github.com/open-vehicle-control-system/traxxas\nContact
    Marc, Thibault, and Loïc: info@spin42.com\n Special Guests: Loïc Vigneron, Marc
    Lainez, and Thibault Poncelet.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+TvXHGz1u
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3657c934-7196-4133-948a-d186b2482df7.mp3
    length: '105715479'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: ''
    duration: '54:19'
    explicit: 'no'
    keywords: hardware engineering, elixir programming language, embedded systems,
      IoT, vehicle control systems, retrofitting cars, CAN bus, automotive engineering,
      Nerves project, Raspberry Pi, open-source projects, software development, freebsd,
      distributed systems, infotainment systems, electric vehicles, autonomous vehicles,
      hardware development, software engineering, functional programming, elixir nerves,
      automotive computing, custom hardware, telemetry systems, programming for IoT
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3657c934-7196-4133-948a-d186b2482df7/cover.jpg?v=1
    summary: "\n        <p>For the Season 13 finale, Elixir Wizards Dan and Charles
      are joined by Spin42 Engineers Marc Lainez, Thibault Poncelet, and Loïc Vigneron
      to discuss their work retrofitting a 2007 VW Polo and creating an Open Vehicle
      Control System (OVCS). Using Elixir, Nerves, and Raspberry Pis, the team is
      reimagining vehicle technology to extend the lifespan of older cars and reduce
      waste—all while making the process approachable and open source.</p>\n\n<p>The
      Spin42 team shares the technical details behind OVCS and how they use Elixir
      and Nerves to interact with the CAN bus and build a Vehicle Management System
      (VMS) to coordinate various vehicle components. They dive into the challenges
      of reverse engineering CAN messages, designing a distributed architecture with
      Elixir processes, and ensuring safety with fail-safe modes and emergency shutoffs.</p>\n\n<p>Beyond
      the technical, the team discusses their motivation for the project—upgrading
      older vehicles with modern features to keep them on the road, building an open-source
      platform to share their findings with others, and above all-- to just have fun.
      They explore potential applications for OVCS in boats, construction equipment,
      and other vehicles, while reflecting on the hurdles of certifying the system
      for road use.</p>\n\n<p>If you’ve ever wondered how Elixir and Nerves can drive
      innovation beyond software, this episode is packed with insights into automotive
      computing, hardware development, and the collaborative potential of open-source
      projects.</p>\n\n<h3>Topics Discussed in this Episode:</h3>\n\n<ul>\n<li>Retrofitting
      a 2007 VW Polo with electric engines and modern tech</li>\n<li>Building an open-source
      Vehicle Control System (OVCS) using Elixir and Nerves</li>\n<li>Leveraging Elixir
      to interact with the CAN bus and parse proprietary messages</li>\n<li>Designing
      a Vehicle Management System (VMS) to coordinate vehicle components</li>\n<li>Developing
      custom hardware for CAN communication</li>\n<li>Creating a YAML-based DSL for
      CAN message and frame descriptions</li>\n<li>Building a distributed architecture
      using Elixir processes</li>\n<li>Ensuring safety with fail-safe modes and emergency
      shutoffs</li>\n<li>Using Flutter and Nerves to build a custom infotainment system</li>\n<li>Exploring
      autonomous driving features with a ROS2 bridge</li>\n<li>Developing remote control
      functionality with a Mavlink transmitter</li>\n<li>Testing OVCS features at
      scale with a Traxxas RC car (OVCS Mini)</li>\n<li>Challenges of certifying OVCS
      for road use and meeting regulatory requirements</li>\n<li>Encouraging community
      contributions to expand OVCS functionality</li>\n<li>Balancing open-source projects
      with contract work to sustain development</li>\n<li>The fun and fulfillment
      of experimenting with Elixir beyond traditional applications</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p><a href=\"https://www.spin42.com/\" rel=\"nofollow\">https://www.spin42.com/</a><br>\n<a
      href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nQuadcopter
      <a href=\"https://github.com/Spin42/elicopter\" rel=\"nofollow\">https://github.com/Spin42/elicopter</a>
      <br>\n<a href=\"https://github.com/linux-can/can-utils\" rel=\"nofollow\">https://github.com/linux-can/can-utils</a><br>\n<a
      href=\"https://docs.kernel.org/networking/can.html\" rel=\"nofollow\">https://docs.kernel.org/networking/can.html</a><br>\n<a
      href=\"https://github.com/open-vehicle-control-system/cantastic\" rel=\"nofollow\">https://github.com/open-vehicle-control-system/cantastic</a><br>\n<a
      href=\"https://github.com/commaai/opendbc\" rel=\"nofollow\">https://github.com/commaai/opendbc</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/CAN_bus#CAN_FD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CAN_bus#CAN_FD</a><br>\n<a
      href=\"https://comma.ai/\" rel=\"nofollow\">https://comma.ai/</a><br>\n<a href=\"https://en.wikipedia.org/wiki/CAN_FD\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/CAN_FD</a><br>\n<a href=\"https://webkit.org/wpe/\"
      rel=\"nofollow\">https://webkit.org/wpe/</a><br>\n<a href=\"https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/WindowingSystems/WestonWayland.html\"
      rel=\"nofollow\">https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/WindowingSystems/WestonWayland.html</a><br>\n<a
      href=\"https://buildroot.org/\" rel=\"nofollow\">https://buildroot.org/</a><br>\n<a
      href=\"https://vuejs.org/\" rel=\"nofollow\">https://vuejs.org/</a><br>\n<a
      href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a><br>\n<a
      href=\"https://github.com/smartrent/elixir_flutter_embedder\" rel=\"nofollow\">https://github.com/smartrent/elixir_flutter_embedder</a><br>\n<a
      href=\"https://www.raspberrypi.com/products/raspberry-pi-5/\" rel=\"nofollow\">https://www.raspberrypi.com/products/raspberry-pi-5/</a><br>\nThe
      Rabbit Pickup <a href=\"https://www.hemmings.com/stories/value-guide-1980-83-volkswagen-pickup\"
      rel=\"nofollow\">https://www.hemmings.com/stories/value-guide-1980-83-volkswagen-pickup</a>
      <br>\n<a href=\"https://www.expresslrs.org/software/mavlink\" rel=\"nofollow\">https://www.expresslrs.org/software/mavlink</a><br>\n<a
      href=\"https://industrial-training-master.readthedocs.io/en/melodic/_source/session7/ROS1-ROS2-bridge.html\"
      rel=\"nofollow\">https://industrial-training-master.readthedocs.io/en/melodic/_source/session7/ROS1-ROS2-bridge.html</a><br>\n<a
      href=\"https://github.com/ros2/rcl\" rel=\"nofollow\">https://github.com/ros2/rcl</a><br>\n<a
      href=\"https://github.com/open-vehicle-control-system/traxxas\" rel=\"nofollow\">https://github.com/open-vehicle-control-system/traxxas</a><br>\nContact
      Marc, Thibault, and Loïc: <a href=\"mailto:info@spin42.com\" rel=\"nofollow\">info@spin42.com</a></p><p>Special
      Guests: Loïc Vigneron, Marc Lainez, and Thibault Poncelet.</p>\n      "
  contentEncoded: "\n        <p>For the Season 13 finale, Elixir Wizards Dan and Charles
    are joined by Spin42 Engineers Marc Lainez, Thibault Poncelet, and Loïc Vigneron
    to discuss their work retrofitting a 2007 VW Polo and creating an Open Vehicle
    Control System (OVCS). Using Elixir, Nerves, and Raspberry Pis, the team is reimagining
    vehicle technology to extend the lifespan of older cars and reduce waste—all while
    making the process approachable and open source.</p>\n\n<p>The Spin42 team shares
    the technical details behind OVCS and how they use Elixir and Nerves to interact
    with the CAN bus and build a Vehicle Management System (VMS) to coordinate various
    vehicle components. They dive into the challenges of reverse engineering CAN messages,
    designing a distributed architecture with Elixir processes, and ensuring safety
    with fail-safe modes and emergency shutoffs.</p>\n\n<p>Beyond the technical, the
    team discusses their motivation for the project—upgrading older vehicles with
    modern features to keep them on the road, building an open-source platform to
    share their findings with others, and above all-- to just have fun. They explore
    potential applications for OVCS in boats, construction equipment, and other vehicles,
    while reflecting on the hurdles of certifying the system for road use.</p>\n\n<p>If
    you’ve ever wondered how Elixir and Nerves can drive innovation beyond software,
    this episode is packed with insights into automotive computing, hardware development,
    and the collaborative potential of open-source projects.</p>\n\n<h3>Topics Discussed
    in this Episode:</h3>\n\n<ul>\n<li>Retrofitting a 2007 VW Polo with electric engines
    and modern tech</li>\n<li>Building an open-source Vehicle Control System (OVCS)
    using Elixir and Nerves</li>\n<li>Leveraging Elixir to interact with the CAN bus
    and parse proprietary messages</li>\n<li>Designing a Vehicle Management System
    (VMS) to coordinate vehicle components</li>\n<li>Developing custom hardware for
    CAN communication</li>\n<li>Creating a YAML-based DSL for CAN message and frame
    descriptions</li>\n<li>Building a distributed architecture using Elixir processes</li>\n<li>Ensuring
    safety with fail-safe modes and emergency shutoffs</li>\n<li>Using Flutter and
    Nerves to build a custom infotainment system</li>\n<li>Exploring autonomous driving
    features with a ROS2 bridge</li>\n<li>Developing remote control functionality
    with a Mavlink transmitter</li>\n<li>Testing OVCS features at scale with a Traxxas
    RC car (OVCS Mini)</li>\n<li>Challenges of certifying OVCS for road use and meeting
    regulatory requirements</li>\n<li>Encouraging community contributions to expand
    OVCS functionality</li>\n<li>Balancing open-source projects with contract work
    to sustain development</li>\n<li>The fun and fulfillment of experimenting with
    Elixir beyond traditional applications</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
    href=\"https://www.spin42.com/\" rel=\"nofollow\">https://www.spin42.com/</a><br>\n<a
    href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nQuadcopter
    <a href=\"https://github.com/Spin42/elicopter\" rel=\"nofollow\">https://github.com/Spin42/elicopter</a>
    <br>\n<a href=\"https://github.com/linux-can/can-utils\" rel=\"nofollow\">https://github.com/linux-can/can-utils</a><br>\n<a
    href=\"https://docs.kernel.org/networking/can.html\" rel=\"nofollow\">https://docs.kernel.org/networking/can.html</a><br>\n<a
    href=\"https://github.com/open-vehicle-control-system/cantastic\" rel=\"nofollow\">https://github.com/open-vehicle-control-system/cantastic</a><br>\n<a
    href=\"https://github.com/commaai/opendbc\" rel=\"nofollow\">https://github.com/commaai/opendbc</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/CAN_bus#CAN_FD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CAN_bus#CAN_FD</a><br>\n<a
    href=\"https://comma.ai/\" rel=\"nofollow\">https://comma.ai/</a><br>\n<a href=\"https://en.wikipedia.org/wiki/CAN_FD\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/CAN_FD</a><br>\n<a href=\"https://webkit.org/wpe/\"
    rel=\"nofollow\">https://webkit.org/wpe/</a><br>\n<a href=\"https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/WindowingSystems/WestonWayland.html\"
    rel=\"nofollow\">https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/WindowingSystems/WestonWayland.html</a><br>\n<a
    href=\"https://buildroot.org/\" rel=\"nofollow\">https://buildroot.org/</a><br>\n<a
    href=\"https://vuejs.org/\" rel=\"nofollow\">https://vuejs.org/</a><br>\n<a href=\"https://flutter.dev/\"
    rel=\"nofollow\">https://flutter.dev/</a><br>\n<a href=\"https://github.com/smartrent/elixir_flutter_embedder\"
    rel=\"nofollow\">https://github.com/smartrent/elixir_flutter_embedder</a><br>\n<a
    href=\"https://www.raspberrypi.com/products/raspberry-pi-5/\" rel=\"nofollow\">https://www.raspberrypi.com/products/raspberry-pi-5/</a><br>\nThe
    Rabbit Pickup <a href=\"https://www.hemmings.com/stories/value-guide-1980-83-volkswagen-pickup\"
    rel=\"nofollow\">https://www.hemmings.com/stories/value-guide-1980-83-volkswagen-pickup</a>
    <br>\n<a href=\"https://www.expresslrs.org/software/mavlink\" rel=\"nofollow\">https://www.expresslrs.org/software/mavlink</a><br>\n<a
    href=\"https://industrial-training-master.readthedocs.io/en/melodic/_source/session7/ROS1-ROS2-bridge.html\"
    rel=\"nofollow\">https://industrial-training-master.readthedocs.io/en/melodic/_source/session7/ROS1-ROS2-bridge.html</a><br>\n<a
    href=\"https://github.com/ros2/rcl\" rel=\"nofollow\">https://github.com/ros2/rcl</a><br>\n<a
    href=\"https://github.com/open-vehicle-control-system/traxxas\" rel=\"nofollow\">https://github.com/open-vehicle-control-system/traxxas</a><br>\nContact
    Marc, Thibault, and Loïc: <a href=\"mailto:info@spin42.com\" rel=\"nofollow\">info@spin42.com</a></p><p>Special
    Guests: Loïc Vigneron, Marc Lainez, and Thibault Poncelet.</p>\n      "
- title: 'Creating Horizon: Deploy Elixir Phoenix Apps on FreeBSD with Jim Freeze'
  slug: s13-e10-elixirconf-horizon-elixir-deployment-jim-freeze
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e10-elixirconf-horizon-elixir-deployment-jim-freeze
  guid: c04de5e0-2475-4142-b98f-f80779747f0d
  pubDate: Thu, 19 Dec 2024 06:30:00 -0500
  pubDateFriendly: December 19, 2024
  description: "The Elixir Wizards welcome Jim Freeze, organizer of ElixirConf and
    creator of the Horizon library. Jim shares his journey from organizing Ruby conferences
    to founding and growing ElixirConf into the community cornerstone it is today.
    He reflects on the challenges of running a major conference, how COVID-19 shaped
    the event, and why the talks remain an evergreen resource for the Elixir ecosystem.\nWe
    discuss Horizon, Jim’s deployment library for Elixir and Phoenix applications
    with Postgres on FreeBSD. Driven by a need for simplicity and cost-effectiveness,
    Jim explains how Horizon minimizes external dependencies while delivering fault-tolerant
    and streamlined setups. He compares it to tools like Fly, Terraform, and Ansible,
    highlighting its low cognitive load and flexibility—key benefits for developers
    seeking more control over their deployment environments.\nJim also unpacks the
    broader value of understanding and customizing your deployment stack rather than
    relying solely on managed services. He discusses the benefits of using FreeBSD,
    including its stability, security, and performance advantages, as well as its
    robust ZFS file system. \nJim emphasizes the importance of coherent deployment
    workflows, community collaboration, and contributions to open-source projects
    like Horizon. He invites listeners to explore Horizon, share feedback, and own
    their deployments.\nTopics discussed in this episode:\nJim Freeze’s background
    organizing RubyConf and founding ElixirConf\nReducing reliance on managed services
    and external dependencies\nSimplifying deployments with minimal tools and lower
    cognitive overhead\nThe trade-offs of cutting-edge tools vs. stable, well-documented
    solutions\nThe importance of customizing deployment tools to meet specific needs\nAddressing
    challenges with Tailwind compatibility\nStreamlining the FreeBSD installation
    process for Horizon users\nCommunity collaboration: contributing to open-source
    tools\nJim’s vision for Horizon: PKI support, hot standby features, and serverless
    potential\nLinks mentioned\nNine Minutes of Elixir (https://youtu.be/hht9s6nAAx8?si=ocrk1wQtGplSGL0B)\nhttps://www.youtube.com/@ElixirConf
    \nhttps://github.com/liveview-native \nhttps://github.com/elixir-nx/nx \nhttps://2024.elixirconf.com/
    \nhttps://github.com/jfreeze/horizon \nhttps://hexdocs.pm/horizon/deploying-with-horizon.html#web-cluster-topology\nhttps://kamal-deploy.org/
    \nhttps://fly.io/ \nhttps://aws.amazon.com/console/ \nhttps://www.digitalocean.com/
    \nhttps://cloud.google.com/ \nhttps://www.cloudflare.com/ \nhttps://www.hetzner.com/
    \nhttps://www.proxmox.com/en/\nhttps://nginx.org/\nhttps://github.com/openzfs/zfs
    \nZettabyte File System https://en.wikipedia.org/wiki/ZFS \nhttps://www.postgresql.org/
    \nhttps://www.terraform.io/ \nhttps://www.ansible.com/ \nhttps://docs.freebsd.org/
    \nhttps://www.redhat.com/ \nhttps://ubuntu.com/ \nhttps://esbuild.github.io/\nListener's
    Survey: https://smr.tl/EWS13 \n Special Guest: Jim Freeze.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5lrLp0nl
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c04de5e0-2475-4142-b98f-f80779747f0d.mp3
    length: '87043770'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: ''
    duration: '44:48'
    explicit: 'no'
    keywords: Deploying Apps, Deployment, DevOps Tools, FreeBSD, Elixir Programming
      Language, Elixir Phoenix, Webdev, Software Development, Software Engineering,
      Software Deployment, Software Deployment Tools, Elixirlang, DevOps, Programming,
      Functional Programming
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c04de5e0-2475-4142-b98f-f80779747f0d/cover.jpg?v=1
    summary: "\n        <p>The Elixir Wizards welcome Jim Freeze, organizer of ElixirConf
      and creator of the Horizon library. Jim shares his journey from organizing Ruby
      conferences to founding and growing ElixirConf into the community cornerstone
      it is today. He reflects on the challenges of running a major conference, how
      COVID-19 shaped the event, and why the talks remain an evergreen resource for
      the Elixir ecosystem.</p>\n\n<p>We discuss Horizon, Jim’s deployment library
      for Elixir and Phoenix applications with Postgres on FreeBSD. Driven by a need
      for simplicity and cost-effectiveness, Jim explains how Horizon minimizes external
      dependencies while delivering fault-tolerant and streamlined setups. He compares
      it to tools like Fly, Terraform, and Ansible, highlighting its low cognitive
      load and flexibility—key benefits for developers seeking more control over their
      deployment environments.</p>\n\n<p>Jim also unpacks the broader value of understanding
      and customizing your deployment stack rather than relying solely on managed
      services. He discusses the benefits of using FreeBSD, including its stability,
      security, and performance advantages, as well as its robust ZFS file system.
      </p>\n\n<p>Jim emphasizes the importance of coherent deployment workflows, community
      collaboration, and contributions to open-source projects like Horizon. He invites
      listeners to explore Horizon, share feedback, and own their deployments.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Jim Freeze’s background organizing
      RubyConf and founding ElixirConf</li>\n<li>Reducing reliance on managed services
      and external dependencies</li>\n<li>Simplifying deployments with minimal tools
      and lower cognitive overhead</li>\n<li>The trade-offs of cutting-edge tools
      vs. stable, well-documented solutions</li>\n<li>The importance of customizing
      deployment tools to meet specific needs</li>\n<li>Addressing challenges with
      Tailwind compatibility</li>\n<li>Streamlining the FreeBSD installation process
      for Horizon users</li>\n<li>Community collaboration: contributing to open-source
      tools</li>\n<li>Jim’s vision for Horizon: PKI support, hot standby features,
      and serverless potential</li>\n</ul>\n\n<h3>Links mentioned</h3>\n\n<p><a href=\"https://youtu.be/hht9s6nAAx8?si=ocrk1wQtGplSGL0B\"
      rel=\"nofollow\">Nine Minutes of Elixir</a><br>\n<a href=\"https://www.youtube.com/@ElixirConf\"
      rel=\"nofollow\">https://www.youtube.com/@ElixirConf</a> <br>\n<a href=\"https://github.com/liveview-native\"
      rel=\"nofollow\">https://github.com/liveview-native</a> <br>\n<a href=\"https://github.com/elixir-nx/nx\"
      rel=\"nofollow\">https://github.com/elixir-nx/nx</a> <br>\n<a href=\"https://2024.elixirconf.com/\"
      rel=\"nofollow\">https://2024.elixirconf.com/</a> <br>\n<a href=\"https://github.com/jfreeze/horizon\"
      rel=\"nofollow\">https://github.com/jfreeze/horizon</a> <br>\n<a href=\"https://hexdocs.pm/horizon/deploying-with-horizon.html#web-cluster-topology\"
      rel=\"nofollow\">https://hexdocs.pm/horizon/deploying-with-horizon.html#web-cluster-topology</a><br>\n<a
      href=\"https://kamal-deploy.org/\" rel=\"nofollow\">https://kamal-deploy.org/</a>
      <br>\n<a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a> <br>\n<a
      href=\"https://aws.amazon.com/console/\" rel=\"nofollow\">https://aws.amazon.com/console/</a>
      <br>\n<a href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a>
      <br>\n<a href=\"https://cloud.google.com/\" rel=\"nofollow\">https://cloud.google.com/</a>
      <br>\n<a href=\"https://www.cloudflare.com/\" rel=\"nofollow\">https://www.cloudflare.com/</a>
      <br>\n<a href=\"https://www.hetzner.com/\" rel=\"nofollow\">https://www.hetzner.com/</a>
      <br>\n<a href=\"https://www.proxmox.com/en/\" rel=\"nofollow\">https://www.proxmox.com/en/</a><br>\n<a
      href=\"https://nginx.org/\" rel=\"nofollow\">https://nginx.org/</a><br>\n<a
      href=\"https://github.com/openzfs/zfs\" rel=\"nofollow\">https://github.com/openzfs/zfs</a>
      <br>\nZettabyte File System <a href=\"https://en.wikipedia.org/wiki/ZFS\" rel=\"nofollow\">https://en.wikipedia.org/wiki/ZFS</a>
      <br>\n<a href=\"https://www.postgresql.org/\" rel=\"nofollow\">https://www.postgresql.org/</a>
      <br>\n<a href=\"https://www.terraform.io/\" rel=\"nofollow\">https://www.terraform.io/</a>
      <br>\n<a href=\"https://www.ansible.com/\" rel=\"nofollow\">https://www.ansible.com/</a>
      <br>\n<a href=\"https://docs.freebsd.org/\" rel=\"nofollow\">https://docs.freebsd.org/</a>
      <br>\n<a href=\"https://www.redhat.com/\" rel=\"nofollow\">https://www.redhat.com/</a>
      <br>\n<a href=\"https://ubuntu.com/\" rel=\"nofollow\">https://ubuntu.com/</a>
      <br>\n<a href=\"https://esbuild.github.io/\" rel=\"nofollow\">https://esbuild.github.io/</a><br>\nListener&#39;s
      Survey: <a href=\"https://smr.tl/EWS13\" rel=\"nofollow\">https://smr.tl/EWS13</a>
      </p><p>Special Guest: Jim Freeze.</p>\n      "
  contentEncoded: "\n        <p>The Elixir Wizards welcome Jim Freeze, organizer of
    ElixirConf and creator of the Horizon library. Jim shares his journey from organizing
    Ruby conferences to founding and growing ElixirConf into the community cornerstone
    it is today. He reflects on the challenges of running a major conference, how
    COVID-19 shaped the event, and why the talks remain an evergreen resource for
    the Elixir ecosystem.</p>\n\n<p>We discuss Horizon, Jim’s deployment library for
    Elixir and Phoenix applications with Postgres on FreeBSD. Driven by a need for
    simplicity and cost-effectiveness, Jim explains how Horizon minimizes external
    dependencies while delivering fault-tolerant and streamlined setups. He compares
    it to tools like Fly, Terraform, and Ansible, highlighting its low cognitive load
    and flexibility—key benefits for developers seeking more control over their deployment
    environments.</p>\n\n<p>Jim also unpacks the broader value of understanding and
    customizing your deployment stack rather than relying solely on managed services.
    He discusses the benefits of using FreeBSD, including its stability, security,
    and performance advantages, as well as its robust ZFS file system. </p>\n\n<p>Jim
    emphasizes the importance of coherent deployment workflows, community collaboration,
    and contributions to open-source projects like Horizon. He invites listeners to
    explore Horizon, share feedback, and own their deployments.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Jim Freeze’s background organizing
    RubyConf and founding ElixirConf</li>\n<li>Reducing reliance on managed services
    and external dependencies</li>\n<li>Simplifying deployments with minimal tools
    and lower cognitive overhead</li>\n<li>The trade-offs of cutting-edge tools vs.
    stable, well-documented solutions</li>\n<li>The importance of customizing deployment
    tools to meet specific needs</li>\n<li>Addressing challenges with Tailwind compatibility</li>\n<li>Streamlining
    the FreeBSD installation process for Horizon users</li>\n<li>Community collaboration:
    contributing to open-source tools</li>\n<li>Jim’s vision for Horizon: PKI support,
    hot standby features, and serverless potential</li>\n</ul>\n\n<h3>Links mentioned</h3>\n\n<p><a
    href=\"https://youtu.be/hht9s6nAAx8?si=ocrk1wQtGplSGL0B\" rel=\"nofollow\">Nine
    Minutes of Elixir</a><br>\n<a href=\"https://www.youtube.com/@ElixirConf\" rel=\"nofollow\">https://www.youtube.com/@ElixirConf</a>
    <br>\n<a href=\"https://github.com/liveview-native\" rel=\"nofollow\">https://github.com/liveview-native</a>
    <br>\n<a href=\"https://github.com/elixir-nx/nx\" rel=\"nofollow\">https://github.com/elixir-nx/nx</a>
    <br>\n<a href=\"https://2024.elixirconf.com/\" rel=\"nofollow\">https://2024.elixirconf.com/</a>
    <br>\n<a href=\"https://github.com/jfreeze/horizon\" rel=\"nofollow\">https://github.com/jfreeze/horizon</a>
    <br>\n<a href=\"https://hexdocs.pm/horizon/deploying-with-horizon.html#web-cluster-topology\"
    rel=\"nofollow\">https://hexdocs.pm/horizon/deploying-with-horizon.html#web-cluster-topology</a><br>\n<a
    href=\"https://kamal-deploy.org/\" rel=\"nofollow\">https://kamal-deploy.org/</a>
    <br>\n<a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a> <br>\n<a
    href=\"https://aws.amazon.com/console/\" rel=\"nofollow\">https://aws.amazon.com/console/</a>
    <br>\n<a href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a>
    <br>\n<a href=\"https://cloud.google.com/\" rel=\"nofollow\">https://cloud.google.com/</a>
    <br>\n<a href=\"https://www.cloudflare.com/\" rel=\"nofollow\">https://www.cloudflare.com/</a>
    <br>\n<a href=\"https://www.hetzner.com/\" rel=\"nofollow\">https://www.hetzner.com/</a>
    <br>\n<a href=\"https://www.proxmox.com/en/\" rel=\"nofollow\">https://www.proxmox.com/en/</a><br>\n<a
    href=\"https://nginx.org/\" rel=\"nofollow\">https://nginx.org/</a><br>\n<a href=\"https://github.com/openzfs/zfs\"
    rel=\"nofollow\">https://github.com/openzfs/zfs</a> <br>\nZettabyte File System
    <a href=\"https://en.wikipedia.org/wiki/ZFS\" rel=\"nofollow\">https://en.wikipedia.org/wiki/ZFS</a>
    <br>\n<a href=\"https://www.postgresql.org/\" rel=\"nofollow\">https://www.postgresql.org/</a>
    <br>\n<a href=\"https://www.terraform.io/\" rel=\"nofollow\">https://www.terraform.io/</a>
    <br>\n<a href=\"https://www.ansible.com/\" rel=\"nofollow\">https://www.ansible.com/</a>
    <br>\n<a href=\"https://docs.freebsd.org/\" rel=\"nofollow\">https://docs.freebsd.org/</a>
    <br>\n<a href=\"https://www.redhat.com/\" rel=\"nofollow\">https://www.redhat.com/</a>
    <br>\n<a href=\"https://ubuntu.com/\" rel=\"nofollow\">https://ubuntu.com/</a>
    <br>\n<a href=\"https://esbuild.github.io/\" rel=\"nofollow\">https://esbuild.github.io/</a><br>\nListener&#39;s
    Survey: <a href=\"https://smr.tl/EWS13\" rel=\"nofollow\">https://smr.tl/EWS13</a>
    </p><p>Special Guest: Jim Freeze.</p>\n      "
- title: Telemetry & Observability for Elixir Apps at Cars.com with Zack Kayser &
    Ethan Gunderson
  slug: s13-e09-observability-telemetry-elixir-cars-commerce
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e09-observability-telemetry-elixir-cars-commerce
  guid: 0fd8471e-c80e-4683-8410-e06ece191a31
  pubDate: Thu, 12 Dec 2024 06:30:00 -0500
  pubDateFriendly: December 12, 2024
  description: "Zack Kayser and Ethan Gunderson, Software Engineers at Cars Commerce,
    join the Elixir Wizards to share their expertise on telemetry and observability
    in large-scale systems. Drawing from their experience at Cars.com—a platform handling
    high traffic and concurrent users—they discuss the technical and organizational
    challenges of scaling applications, managing microservices, and implementing effective
    observability practices.\nThe conversation highlights the pivotal role observability
    plays in diagnosing incidents, anticipating system behavior, and asking unplanned
    questions of a system. Zack and Ethan explore tracing, spans, and the unique challenges
    introduced by LiveView deployments and WebSocket connections.\nThey also discuss
    the benefits of OpenTelemetry as a vendor-agnostic instrumentation tool, the significance
    of Elixir’s telemetry library, and practical steps for developers starting their
    observability journey. Additionally, Zack and Ethan introduce their upcoming book,
    Instrumenting Elixir Applications, which will offer guidance on integrating telemetry
    and tracing into Elixir projects.\nTopics Discussed:\nCars.com’s transition to
    Elixir and scaling solutions\nThe role of observability in large-scale systems\nUncovering
    insights by asking unplanned system questions\nManaging high-traffic and concurrent
    users with Elixir\nDiagnosing incidents and preventing recurrence using telemetry\nBalancing
    data collection with storage constraints\nSampling strategies for large data volumes\nTracing
    and spans in observability\nLiveView’s influence on deployments and WebSocket
    behavior\nMitigating downstream effects of socket reconnections\nContextual debugging
    for system behavior insights\nObservability strategies for small vs. large-scale
    apps\nOpenTelemetry for vendor-agnostic instrumentation\nLeveraging OpenTelemetry
    contrib libraries for easy setup\nElixir’s telemetry library as an ecosystem cornerstone\nTracing
    as the first step in observability\nDifferentiating observability from business
    analytics\nProfiling with OpenTelemetry Erlang project tools\nThe value of profiling
    for performance insights\nMaking observability tools accessible and impactful
    for developers\nLinks Mentioned\nhttps://www.carscommerce.inc/\nhttps://www.cars.com/
    \nhttps://hexdocs.pm/telemetry/readme.html \nhttps://kubernetes.io/ \nhttps://github.com/ninenines/cowboy\nhttps://hexdocs.pm/bandit/Bandit.html
    \nhttps://hexdocs.pm/broadway/Broadway.html \nhttps://hexdocs.pm/oban/Oban.html
    \nhttps://www.dynatrace.com/ \nhttps://www.jaegertracing.io/ \nhttps://newrelic.com/
    \nhttps://www.datadoghq.com/ \nhttps://www.honeycomb.io/\nhttps://fly.io/phoenix-files/how-phoenix-liveview-form-auto-recovery-works/
    \nhttps://www.elastic.co/ \nhttps://opentelemetry.io/ \nhttps://opentelemetry.io/docs/languages/erlang/
    \nhttps://opentelemetry.io/docs/concepts/signals/traces/ \nhttps://opentelemetry.io/docs/specs/otel/logs/
    \nhttps://github.com/runfinch/finch\nhttps://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html
    \nhttps://opentelemetry.io/blog/2024/state-profiling \nhttps://www.instrumentingelixir.com/
    \nhttps://prometheus.io/ \nhttps://www.datadoghq.com/dg/monitor/ts/statsd/ \nhttps://x.com/kayserzl
    \nhttps://github.com/zkayser \nhttps://bsky.app/profile/ethangunderson.com \nhttps://github.com/open-telemetry/opentelemetry-collector-contrib
    Special Guests: Ethan Gunderson and Zack Kayser.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ctTvyeRg
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0fd8471e-c80e-4683-8410-e06ece191a31.mp3
    length: '82883402'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: ''
    duration: '42:39'
    explicit: 'no'
    keywords: elixir, elixirlang, elixir programming language, phoenix, phoenix liveview,
      functional programming, devops, observability, telemetry, app performance, software
      development, web development, web apps, software engineering, backend development,
      server-side rendering, erlang, beam vm, concurrency, scalability
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0fd8471e-c80e-4683-8410-e06ece191a31/cover.jpg?v=1
    summary: "\n        <p>Zack Kayser and Ethan Gunderson, Software Engineers at
      Cars Commerce, join the Elixir Wizards to share their expertise on telemetry
      and observability in large-scale systems. Drawing from their experience at Cars.com—a
      platform handling high traffic and concurrent users—they discuss the technical
      and organizational challenges of scaling applications, managing microservices,
      and implementing effective observability practices.</p>\n\n<p>The conversation
      highlights the pivotal role observability plays in diagnosing incidents, anticipating
      system behavior, and asking unplanned questions of a system. Zack and Ethan
      explore tracing, spans, and the unique challenges introduced by LiveView deployments
      and WebSocket connections.</p>\n\n<p>They also discuss the benefits of OpenTelemetry
      as a vendor-agnostic instrumentation tool, the significance of Elixir’s telemetry
      library, and practical steps for developers starting their observability journey.
      Additionally, Zack and Ethan introduce their upcoming book, Instrumenting Elixir
      Applications, which will offer guidance on integrating telemetry and tracing
      into Elixir projects.</p>\n\n<h3>Topics Discussed:</h3>\n\n<ul>\n<li>Cars.com’s
      transition to Elixir and scaling solutions</li>\n<li>The role of observability
      in large-scale systems</li>\n<li>Uncovering insights by asking unplanned system
      questions</li>\n<li>Managing high-traffic and concurrent users with Elixir</li>\n<li>Diagnosing
      incidents and preventing recurrence using telemetry</li>\n<li>Balancing data
      collection with storage constraints</li>\n<li>Sampling strategies for large
      data volumes</li>\n<li>Tracing and spans in observability</li>\n<li>LiveView’s
      influence on deployments and WebSocket behavior</li>\n<li>Mitigating downstream
      effects of socket reconnections</li>\n<li>Contextual debugging for system behavior
      insights</li>\n<li>Observability strategies for small vs. large-scale apps</li>\n<li>OpenTelemetry
      for vendor-agnostic instrumentation</li>\n<li>Leveraging OpenTelemetry contrib
      libraries for easy setup</li>\n<li>Elixir’s telemetry library as an ecosystem
      cornerstone</li>\n<li>Tracing as the first step in observability</li>\n<li>Differentiating
      observability from business analytics</li>\n<li>Profiling with OpenTelemetry
      Erlang project tools</li>\n<li>The value of profiling for performance insights</li>\n<li>Making
      observability tools accessible and impactful for developers</li>\n</ul>\n\n<h3>Links
      Mentioned</h3>\n\n<p><a href=\"https://www.carscommerce.inc/\" rel=\"nofollow\">https://www.carscommerce.inc/</a><br>\n<a
      href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a> <br>\n<a
      href=\"https://hexdocs.pm/telemetry/readme.html\" rel=\"nofollow\">https://hexdocs.pm/telemetry/readme.html</a>
      <br>\n<a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a>
      <br>\n<a href=\"https://github.com/ninenines/cowboy\" rel=\"nofollow\">https://github.com/ninenines/cowboy</a><br>\n<a
      href=\"https://hexdocs.pm/bandit/Bandit.html\" rel=\"nofollow\">https://hexdocs.pm/bandit/Bandit.html</a>
      <br>\n<a href=\"https://hexdocs.pm/broadway/Broadway.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a>
      <br>\n<a href=\"https://hexdocs.pm/oban/Oban.html\" rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a>
      <br>\n<a href=\"https://www.dynatrace.com/\" rel=\"nofollow\">https://www.dynatrace.com/</a>
      <br>\n<a href=\"https://www.jaegertracing.io/\" rel=\"nofollow\">https://www.jaegertracing.io/</a>
      <br>\n<a href=\"https://newrelic.com/\" rel=\"nofollow\">https://newrelic.com/</a>
      <br>\n<a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a>
      <br>\n<a href=\"https://www.honeycomb.io/\" rel=\"nofollow\">https://www.honeycomb.io/</a><br>\n<a
      href=\"https://fly.io/phoenix-files/how-phoenix-liveview-form-auto-recovery-works/\"
      rel=\"nofollow\">https://fly.io/phoenix-files/how-phoenix-liveview-form-auto-recovery-works/</a>
      <br>\n<a href=\"https://www.elastic.co/\" rel=\"nofollow\">https://www.elastic.co/</a>
      <br>\n<a href=\"https://opentelemetry.io/\" rel=\"nofollow\">https://opentelemetry.io/</a>
      <br>\n<a href=\"https://opentelemetry.io/docs/languages/erlang/\" rel=\"nofollow\">https://opentelemetry.io/docs/languages/erlang/</a>
      <br>\n<a href=\"https://opentelemetry.io/docs/concepts/signals/traces/\" rel=\"nofollow\">https://opentelemetry.io/docs/concepts/signals/traces/</a>
      <br>\n<a href=\"https://opentelemetry.io/docs/specs/otel/logs/\" rel=\"nofollow\">https://opentelemetry.io/docs/specs/otel/logs/</a>
      <br>\n<a href=\"https://github.com/runfinch/finch\" rel=\"nofollow\">https://github.com/runfinch/finch</a><br>\n<a
      href=\"https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html\" rel=\"nofollow\">https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html</a>
      <br>\n<a href=\"https://opentelemetry.io/blog/2024/state-profiling\" rel=\"nofollow\">https://opentelemetry.io/blog/2024/state-profiling</a>
      <br>\n<a href=\"https://www.instrumentingelixir.com/\" rel=\"nofollow\">https://www.instrumentingelixir.com/</a>
      <br>\n<a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a>
      <br>\n<a href=\"https://www.datadoghq.com/dg/monitor/ts/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/dg/monitor/ts/statsd/</a>
      <br>\n<a href=\"https://x.com/kayserzl\" rel=\"nofollow\">https://x.com/kayserzl</a>
      <br>\n<a href=\"https://github.com/zkayser\" rel=\"nofollow\">https://github.com/zkayser</a>
      <br>\n<a href=\"https://bsky.app/profile/ethangunderson.com%C2%A0\" rel=\"nofollow\">https://bsky.app/profile/ethangunderson.com </a><br>\n<a
      href=\"https://github.com/open-telemetry/opentelemetry-collector-contrib\" rel=\"nofollow\">https://github.com/open-telemetry/opentelemetry-collector-contrib</a></p><p>Special
      Guests: Ethan Gunderson and Zack Kayser.</p>\n      "
  contentEncoded: "\n        <p>Zack Kayser and Ethan Gunderson, Software Engineers
    at Cars Commerce, join the Elixir Wizards to share their expertise on telemetry
    and observability in large-scale systems. Drawing from their experience at Cars.com—a
    platform handling high traffic and concurrent users—they discuss the technical
    and organizational challenges of scaling applications, managing microservices,
    and implementing effective observability practices.</p>\n\n<p>The conversation
    highlights the pivotal role observability plays in diagnosing incidents, anticipating
    system behavior, and asking unplanned questions of a system. Zack and Ethan explore
    tracing, spans, and the unique challenges introduced by LiveView deployments and
    WebSocket connections.</p>\n\n<p>They also discuss the benefits of OpenTelemetry
    as a vendor-agnostic instrumentation tool, the significance of Elixir’s telemetry
    library, and practical steps for developers starting their observability journey.
    Additionally, Zack and Ethan introduce their upcoming book, Instrumenting Elixir
    Applications, which will offer guidance on integrating telemetry and tracing into
    Elixir projects.</p>\n\n<h3>Topics Discussed:</h3>\n\n<ul>\n<li>Cars.com’s transition
    to Elixir and scaling solutions</li>\n<li>The role of observability in large-scale
    systems</li>\n<li>Uncovering insights by asking unplanned system questions</li>\n<li>Managing
    high-traffic and concurrent users with Elixir</li>\n<li>Diagnosing incidents and
    preventing recurrence using telemetry</li>\n<li>Balancing data collection with
    storage constraints</li>\n<li>Sampling strategies for large data volumes</li>\n<li>Tracing
    and spans in observability</li>\n<li>LiveView’s influence on deployments and WebSocket
    behavior</li>\n<li>Mitigating downstream effects of socket reconnections</li>\n<li>Contextual
    debugging for system behavior insights</li>\n<li>Observability strategies for
    small vs. large-scale apps</li>\n<li>OpenTelemetry for vendor-agnostic instrumentation</li>\n<li>Leveraging
    OpenTelemetry contrib libraries for easy setup</li>\n<li>Elixir’s telemetry library
    as an ecosystem cornerstone</li>\n<li>Tracing as the first step in observability</li>\n<li>Differentiating
    observability from business analytics</li>\n<li>Profiling with OpenTelemetry Erlang
    project tools</li>\n<li>The value of profiling for performance insights</li>\n<li>Making
    observability tools accessible and impactful for developers</li>\n</ul>\n\n<h3>Links
    Mentioned</h3>\n\n<p><a href=\"https://www.carscommerce.inc/\" rel=\"nofollow\">https://www.carscommerce.inc/</a><br>\n<a
    href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a> <br>\n<a
    href=\"https://hexdocs.pm/telemetry/readme.html\" rel=\"nofollow\">https://hexdocs.pm/telemetry/readme.html</a>
    <br>\n<a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a>
    <br>\n<a href=\"https://github.com/ninenines/cowboy\" rel=\"nofollow\">https://github.com/ninenines/cowboy</a><br>\n<a
    href=\"https://hexdocs.pm/bandit/Bandit.html\" rel=\"nofollow\">https://hexdocs.pm/bandit/Bandit.html</a>
    <br>\n<a href=\"https://hexdocs.pm/broadway/Broadway.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a>
    <br>\n<a href=\"https://hexdocs.pm/oban/Oban.html\" rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a>
    <br>\n<a href=\"https://www.dynatrace.com/\" rel=\"nofollow\">https://www.dynatrace.com/</a>
    <br>\n<a href=\"https://www.jaegertracing.io/\" rel=\"nofollow\">https://www.jaegertracing.io/</a>
    <br>\n<a href=\"https://newrelic.com/\" rel=\"nofollow\">https://newrelic.com/</a>
    <br>\n<a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a>
    <br>\n<a href=\"https://www.honeycomb.io/\" rel=\"nofollow\">https://www.honeycomb.io/</a><br>\n<a
    href=\"https://fly.io/phoenix-files/how-phoenix-liveview-form-auto-recovery-works/\"
    rel=\"nofollow\">https://fly.io/phoenix-files/how-phoenix-liveview-form-auto-recovery-works/</a>
    <br>\n<a href=\"https://www.elastic.co/\" rel=\"nofollow\">https://www.elastic.co/</a>
    <br>\n<a href=\"https://opentelemetry.io/\" rel=\"nofollow\">https://opentelemetry.io/</a>
    <br>\n<a href=\"https://opentelemetry.io/docs/languages/erlang/\" rel=\"nofollow\">https://opentelemetry.io/docs/languages/erlang/</a>
    <br>\n<a href=\"https://opentelemetry.io/docs/concepts/signals/traces/\" rel=\"nofollow\">https://opentelemetry.io/docs/concepts/signals/traces/</a>
    <br>\n<a href=\"https://opentelemetry.io/docs/specs/otel/logs/\" rel=\"nofollow\">https://opentelemetry.io/docs/specs/otel/logs/</a>
    <br>\n<a href=\"https://github.com/runfinch/finch\" rel=\"nofollow\">https://github.com/runfinch/finch</a><br>\n<a
    href=\"https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html\" rel=\"nofollow\">https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html</a>
    <br>\n<a href=\"https://opentelemetry.io/blog/2024/state-profiling\" rel=\"nofollow\">https://opentelemetry.io/blog/2024/state-profiling</a>
    <br>\n<a href=\"https://www.instrumentingelixir.com/\" rel=\"nofollow\">https://www.instrumentingelixir.com/</a>
    <br>\n<a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a>
    <br>\n<a href=\"https://www.datadoghq.com/dg/monitor/ts/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/dg/monitor/ts/statsd/</a>
    <br>\n<a href=\"https://x.com/kayserzl\" rel=\"nofollow\">https://x.com/kayserzl</a>
    <br>\n<a href=\"https://github.com/zkayser\" rel=\"nofollow\">https://github.com/zkayser</a>
    <br>\n<a href=\"https://bsky.app/profile/ethangunderson.com%C2%A0\" rel=\"nofollow\">https://bsky.app/profile/ethangunderson.com </a><br>\n<a
    href=\"https://github.com/open-telemetry/opentelemetry-collector-contrib\" rel=\"nofollow\">https://github.com/open-telemetry/opentelemetry-collector-contrib</a></p><p>Special
    Guests: Ethan Gunderson and Zack Kayser.</p>\n      "
- title: Scaling the Daylite Apple-Native CRM Using Elixir with AJ
  slug: s13-e08-scaling-daylite-with-alykhan-jetha
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e08-scaling-daylite-with-alykhan-jetha
  guid: 18fc1aa1-fd78-488c-99d4-8e9405c99273
  pubDate: Thu, 05 Dec 2024 06:30:00 -0500
  pubDateFriendly: December  5, 2024
  description: "AJ (Alykhan Jetha), CEO and CTO of Marketcircle, joins the Elixir
    Wizards to share his experience building and evolving Daylite, their award-winning
    CRM and business productivity app for Apple users. He details his experiences
    as a self-taught programmer and how Marketcircle has navigated pivots, challenges,
    and opportunities since its founding in 1999.\nAJ explains why they migrated Daylite’s
    backend to Elixir, focusing on their sync engine, which demands high concurrency
    and fault tolerance. He highlights how Elixir has improved performance, reduced
    cloud costs, and simplified development with its approachable syntax and productive
    workflows.\nThe conversation also touches on the technical hurdles of deploying
    native apps for Apple devices and the potential for integrating new technologies
    like LiveView Native to streamline cross-platform development.\nFor technical
    founders, AJ emphasizes the importance of leveraging your strengths (“superpowers”),
    staying deeply connected to the development process, and finding stability in
    tools like Elixir amidst a rapidly evolving tech ecosystem. He also shares Marketcircle’s
    roadmap for migrating more customers to Elixir-powered systems and explores the
    potential for new features in their native apps.\nTune in for insights on building
    resilient systems, navigating technical and business challenges, and how Elixir
    is shaping Marketcircle’s future.\nTopics discussed in this episode:\nAJ’s journey
    as a self-taught programmer and entrepreneur\nMarketcircle’s evolution since 1999
    and lessons from their pivots\nDaylite’s growth as a flagship product for Apple
    users\nMigrating to Elixir for high concurrency and fault tolerance\nHow Elixir
    improved performance and reduced cloud costs\nThe simplicity of Elixir and its
    impact on developer onboarding\nChallenges in managing a growing microservices
    architecture\nInsights into deploying native apps for the Apple ecosystem\nExploring
    LiveView Native for future cross-platform development\nAdvice for technical founders:
    leveraging your superpowers\nStaying connected to development to maintain system
    understanding\nThe role of Elixir in improving development efficiency and stability\nPlanning
    gradual customer migrations to an Elixir-powered backend\nPotential new features
    for Daylite’s native apps\nBenefits of collaboration with the Elixir community\n#ElixirMullet
    -- native app in the front, Elixir in the back\nNavigating a rapidly evolving
    tech ecosystem as a founder\nLeveraging Elixir to future-proof Marketcircle’s
    systems\nBalancing technical and business priorities in a startup environment\nAJ’s
    thoughts on the future of Elixir in powering business tools\nLinks mentioned:\nhttps://www.marketcircle.com/\nDaylite.app\nhttps://www.nextcomputers.org/\nhttps://www.digitalocean.com/\nPython
    Async https://docs.python.org/3/library/asyncio.html \nhttps://github.com/sinatra/sinatra\nhttps://github.com/dependabot\nhttps://kafka.apache.org/\nhttps://www.djangoproject.com/\nhttps://github.com/socketry/falcon\nhttps://github.com/puma/puma\nhttps://www.swift.org/blog/announcing-swift-6/\nhttps://en.wikipedia.org/wiki/Async/await\nhttps://www.ffmpeg.org/\nhttps://www.sqlite.org/\nhttps://github.com/commanded/commanded\nhttps://pragprog.com/titles/khpes/real-world-event-sourcing/\nhttps://en.wikipedia.org/wiki/ShipofTheseus\nhttps://reactnative.dev/\nhttps://www.electronjs.org/\nhttps://en.wikipedia.org/wiki/WebOS\nhttps://www.linkedin.com/in/alykhanjetha/\nhttps://bsky.app/profile/ajetha.bsky.social
    Special Guest: Alykhan Jetha.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9EjyoRcP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/18fc1aa1-fd78-488c-99d4-8e9405c99273.mp3
    length: '101629226'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: AJ (Alykhan Jetha), CEO and CTO of Marketcircle, joins the Elixir Wizards
      to share his experience building and evolving Daylite, their award-winning CRM
      and business productivity app for Apple users. He details his experiences as
      a self-taught programmer and how Marketcircle has navigated pivots, challenges,
      and opportunities since its founding in 1999.
    duration: '52:21'
    explicit: 'no'
    keywords: 'scalability, erlang, beam vm, backend development, elixir, elixir programming
      language, cloud applications, functional programming, database performance,
      concurrency, load balancing, event sourcing, on-prem vs cloud, distributed systems,
      conflict resolution, elixirlang, native apps, apple native apps, cloud apps,
      SaaS, software development, software engineering, '
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/18fc1aa1-fd78-488c-99d4-8e9405c99273/cover.jpg?v=1
    summary: "\n        <p>AJ (Alykhan Jetha), CEO and CTO of Marketcircle, joins
      the Elixir Wizards to share his experience building and evolving Daylite, their
      award-winning CRM and business productivity app for Apple users. He details
      his experiences as a self-taught programmer and how Marketcircle has navigated
      pivots, challenges, and opportunities since its founding in 1999.</p>\n\n<p>AJ
      explains why they migrated Daylite’s backend to Elixir, focusing on their sync
      engine, which demands high concurrency and fault tolerance. He highlights how
      Elixir has improved performance, reduced cloud costs, and simplified development
      with its approachable syntax and productive workflows.</p>\n\n<p>The conversation
      also touches on the technical hurdles of deploying native apps for Apple devices
      and the potential for integrating new technologies like LiveView Native to streamline
      cross-platform development.</p>\n\n<p>For technical founders, AJ emphasizes
      the importance of leveraging your strengths (“superpowers”), staying deeply
      connected to the development process, and finding stability in tools like Elixir
      amidst a rapidly evolving tech ecosystem. He also shares Marketcircle’s roadmap
      for migrating more customers to Elixir-powered systems and explores the potential
      for new features in their native apps.</p>\n\n<p>Tune in for insights on building
      resilient systems, navigating technical and business challenges, and how Elixir
      is shaping Marketcircle’s future.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>AJ’s
      journey as a self-taught programmer and entrepreneur</li>\n<li>Marketcircle’s
      evolution since 1999 and lessons from their pivots</li>\n<li>Daylite’s growth
      as a flagship product for Apple users</li>\n<li>Migrating to Elixir for high
      concurrency and fault tolerance</li>\n<li>How Elixir improved performance and
      reduced cloud costs</li>\n<li>The simplicity of Elixir and its impact on developer
      onboarding</li>\n<li>Challenges in managing a growing microservices architecture</li>\n<li>Insights
      into deploying native apps for the Apple ecosystem</li>\n<li>Exploring LiveView
      Native for future cross-platform development</li>\n<li>Advice for technical
      founders: leveraging your superpowers</li>\n<li>Staying connected to development
      to maintain system understanding</li>\n<li>The role of Elixir in improving development
      efficiency and stability</li>\n<li>Planning gradual customer migrations to an
      Elixir-powered backend</li>\n<li>Potential new features for Daylite’s native
      apps</li>\n<li>Benefits of collaboration with the Elixir community</li>\n<li>#ElixirMullet
      -- native app in the front, Elixir in the back</li>\n<li>Navigating a rapidly
      evolving tech ecosystem as a founder</li>\n<li>Leveraging Elixir to future-proof
      Marketcircle’s systems</li>\n<li>Balancing technical and business priorities
      in a startup environment</li>\n<li>AJ’s thoughts on the future of Elixir in
      powering business tools</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://www.marketcircle.com/\"
      rel=\"nofollow\">https://www.marketcircle.com/</a><br>\nDaylite.app<br>\n<a
      href=\"https://www.nextcomputers.org/\" rel=\"nofollow\">https://www.nextcomputers.org/</a><br>\n<a
      href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a><br>\nPython
      Async <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">https://docs.python.org/3/library/asyncio.html</a>
      <br>\n<a href=\"https://github.com/sinatra/sinatra\" rel=\"nofollow\">https://github.com/sinatra/sinatra</a><br>\n<a
      href=\"https://github.com/dependabot\" rel=\"nofollow\">https://github.com/dependabot</a><br>\n<a
      href=\"https://kafka.apache.org/\" rel=\"nofollow\">https://kafka.apache.org/</a><br>\n<a
      href=\"https://www.djangoproject.com/\" rel=\"nofollow\">https://www.djangoproject.com/</a><br>\n<a
      href=\"https://github.com/socketry/falcon\" rel=\"nofollow\">https://github.com/socketry/falcon</a><br>\n<a
      href=\"https://github.com/puma/puma\" rel=\"nofollow\">https://github.com/puma/puma</a><br>\n<a
      href=\"https://www.swift.org/blog/announcing-swift-6/\" rel=\"nofollow\">https://www.swift.org/blog/announcing-swift-6/</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Async/await\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Async/await</a><br>\n<a
      href=\"https://www.ffmpeg.org/\" rel=\"nofollow\">https://www.ffmpeg.org/</a><br>\n<a
      href=\"https://www.sqlite.org/\" rel=\"nofollow\">https://www.sqlite.org/</a><br>\n<a
      href=\"https://github.com/commanded/commanded\" rel=\"nofollow\">https://github.com/commanded/commanded</a><br>\n<a
      href=\"https://pragprog.com/titles/khpes/real-world-event-sourcing/\" rel=\"nofollow\">https://pragprog.com/titles/khpes/real-world-event-sourcing/</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Ship_of_Theseus\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Ship_of_Theseus</a><br>\n<a
      href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\n<a
      href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/WebOS\" rel=\"nofollow\">https://en.wikipedia.org/wiki/WebOS</a><br>\n<a
      href=\"https://www.linkedin.com/in/alykhanjetha/\" rel=\"nofollow\">https://www.linkedin.com/in/alykhanjetha/</a><br>\n<a
      href=\"https://bsky.app/profile/ajetha.bsky.social\" rel=\"nofollow\">https://bsky.app/profile/ajetha.bsky.social</a></p><p>Special
      Guest: Alykhan Jetha.</p>\n      "
  contentEncoded: "\n        <p>AJ (Alykhan Jetha), CEO and CTO of Marketcircle, joins
    the Elixir Wizards to share his experience building and evolving Daylite, their
    award-winning CRM and business productivity app for Apple users. He details his
    experiences as a self-taught programmer and how Marketcircle has navigated pivots,
    challenges, and opportunities since its founding in 1999.</p>\n\n<p>AJ explains
    why they migrated Daylite’s backend to Elixir, focusing on their sync engine,
    which demands high concurrency and fault tolerance. He highlights how Elixir has
    improved performance, reduced cloud costs, and simplified development with its
    approachable syntax and productive workflows.</p>\n\n<p>The conversation also
    touches on the technical hurdles of deploying native apps for Apple devices and
    the potential for integrating new technologies like LiveView Native to streamline
    cross-platform development.</p>\n\n<p>For technical founders, AJ emphasizes the
    importance of leveraging your strengths (“superpowers”), staying deeply connected
    to the development process, and finding stability in tools like Elixir amidst
    a rapidly evolving tech ecosystem. He also shares Marketcircle’s roadmap for migrating
    more customers to Elixir-powered systems and explores the potential for new features
    in their native apps.</p>\n\n<p>Tune in for insights on building resilient systems,
    navigating technical and business challenges, and how Elixir is shaping Marketcircle’s
    future.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>AJ’s journey
    as a self-taught programmer and entrepreneur</li>\n<li>Marketcircle’s evolution
    since 1999 and lessons from their pivots</li>\n<li>Daylite’s growth as a flagship
    product for Apple users</li>\n<li>Migrating to Elixir for high concurrency and
    fault tolerance</li>\n<li>How Elixir improved performance and reduced cloud costs</li>\n<li>The
    simplicity of Elixir and its impact on developer onboarding</li>\n<li>Challenges
    in managing a growing microservices architecture</li>\n<li>Insights into deploying
    native apps for the Apple ecosystem</li>\n<li>Exploring LiveView Native for future
    cross-platform development</li>\n<li>Advice for technical founders: leveraging
    your superpowers</li>\n<li>Staying connected to development to maintain system
    understanding</li>\n<li>The role of Elixir in improving development efficiency
    and stability</li>\n<li>Planning gradual customer migrations to an Elixir-powered
    backend</li>\n<li>Potential new features for Daylite’s native apps</li>\n<li>Benefits
    of collaboration with the Elixir community</li>\n<li>#ElixirMullet -- native app
    in the front, Elixir in the back</li>\n<li>Navigating a rapidly evolving tech
    ecosystem as a founder</li>\n<li>Leveraging Elixir to future-proof Marketcircle’s
    systems</li>\n<li>Balancing technical and business priorities in a startup environment</li>\n<li>AJ’s
    thoughts on the future of Elixir in powering business tools</li>\n</ul>\n\n<h3>Links
    mentioned:</h3>\n\n<p><a href=\"https://www.marketcircle.com/\" rel=\"nofollow\">https://www.marketcircle.com/</a><br>\nDaylite.app<br>\n<a
    href=\"https://www.nextcomputers.org/\" rel=\"nofollow\">https://www.nextcomputers.org/</a><br>\n<a
    href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a><br>\nPython
    Async <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">https://docs.python.org/3/library/asyncio.html</a>
    <br>\n<a href=\"https://github.com/sinatra/sinatra\" rel=\"nofollow\">https://github.com/sinatra/sinatra</a><br>\n<a
    href=\"https://github.com/dependabot\" rel=\"nofollow\">https://github.com/dependabot</a><br>\n<a
    href=\"https://kafka.apache.org/\" rel=\"nofollow\">https://kafka.apache.org/</a><br>\n<a
    href=\"https://www.djangoproject.com/\" rel=\"nofollow\">https://www.djangoproject.com/</a><br>\n<a
    href=\"https://github.com/socketry/falcon\" rel=\"nofollow\">https://github.com/socketry/falcon</a><br>\n<a
    href=\"https://github.com/puma/puma\" rel=\"nofollow\">https://github.com/puma/puma</a><br>\n<a
    href=\"https://www.swift.org/blog/announcing-swift-6/\" rel=\"nofollow\">https://www.swift.org/blog/announcing-swift-6/</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Async/await\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Async/await</a><br>\n<a
    href=\"https://www.ffmpeg.org/\" rel=\"nofollow\">https://www.ffmpeg.org/</a><br>\n<a
    href=\"https://www.sqlite.org/\" rel=\"nofollow\">https://www.sqlite.org/</a><br>\n<a
    href=\"https://github.com/commanded/commanded\" rel=\"nofollow\">https://github.com/commanded/commanded</a><br>\n<a
    href=\"https://pragprog.com/titles/khpes/real-world-event-sourcing/\" rel=\"nofollow\">https://pragprog.com/titles/khpes/real-world-event-sourcing/</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Ship_of_Theseus\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Ship_of_Theseus</a><br>\n<a
    href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\n<a
    href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/WebOS\" rel=\"nofollow\">https://en.wikipedia.org/wiki/WebOS</a><br>\n<a
    href=\"https://www.linkedin.com/in/alykhanjetha/\" rel=\"nofollow\">https://www.linkedin.com/in/alykhanjetha/</a><br>\n<a
    href=\"https://bsky.app/profile/ajetha.bsky.social\" rel=\"nofollow\">https://bsky.app/profile/ajetha.bsky.social</a></p><p>Special
    Guest: Alykhan Jetha.</p>\n      "
- title: Creating the Castmagic AI-Powered Content Workflow Platform with Justin Tormey
  slug: s13-e07-castmagic-ai-content-creation-workflows
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e07-castmagic-ai-content-creation-workflows
  guid: b5986064-a9f7-40f9-9931-10db7af17e14
  pubDate: Thu, 28 Nov 2024 06:30:00 -0500
  pubDateFriendly: November 28, 2024
  description: |
    Justin Tormey, co-founder of Castmagic, joins the Elixir Wizards to discuss building an AI-powered content creation app. Castmagic repurposes audio and video into social media posts, blog articles, newsletters, and more. The tech stack leverages OpenAI and Anthropic LLMs with Elixir as the coordination layer and Phoenix LiveView powering the front end.
    Justin dives into the technical details of Castmagic, including the integration of JavaScript libraries like ProseMirror and TipTap through LiveSvelte, as well as enabling real-time collaboration with CRDTs and YDoc. He shares the benefits and challenges of using Elixir for rapid development, as well as the trade-offs between custom code and off-the-shelf solutions.
    The conversation also covers Justin’s entrepreneurial journey, highlighting the advantages of bootstrapping over venture capital, the importance of acquiring early customers, and creative marketing strategies like affiliate programs and software marketplaces.
    Whether you're an Elixirist exploring machine learning or an aspiring tech founder, tune in to learn more about AI with Elixir, navigating startup challenges, and turning ideas into impactful software.
    Topics discussed in this episode:
    Building Castmagic to generate content from audio and video for creators
    Using AI services like OpenAI and Anthropic for transcription and workflows
    Elixir as the coordination layer for complex processes
    Rapid UI development with Phoenix LiveView
    Integrating rich text editing libraries through LiveSvelte
    Enabling collaborative editing with CRDTs and YDoc
    Balancing offline functionality with cloud-based AI tools
    Challenges of working with external AI services
    Exploring the future of multimodal AI in product development
    Bootstrapping vs. venture capital: benefits and challenges
    Strategies for finding distribution channels and early adopters
    Creative approaches to marketing, including affiliates and marketplaces
    Balancing engineering efforts with customer and business needs
    Practical advice for navigating the early stages of a startup
    Links mentioned:
    https://www.castmagic.io/
    https://pragprog.com/titles/jaerlang2/programming-erlang-2nd-edition/
    https://www.blockchain.com/
    https://fly.io/
    https://hexdocs.pm/livesvelte/readme.html
    https://github.com/woutdp/livesvelte
    https://prosemirror.net/
    https://tiptap.dev/
    https://docs.yjs.dev/api/y.doc
    https://hexdocs.pm/polymorphicembed/readme.html
    https://github.com/elixir-nx/nx
    https://github.com/elixir-nx/tokenizers
    https://github.com/thmsmlr/instructorex
    https://openai.com/
    https://www.anthropic.com/
    https://getoban.pro/
    https://github.com/wojtekmach/req
    https://ollama.com/
    https://x.com/j_tormey Special Guest: Justin Tormey.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+opiD5SGb
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b5986064-a9f7-40f9-9931-10db7af17e14.mp3
    length: '69439382'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: Justin Tormey, co-founder of Castmagic, joins the Elixir Wizards to
      discuss building an AI-powered content creation app. Castmagic repurposes audio
      and video into social media posts, blog articles, newsletters, and more. The
      tech stack leverages OpenAI and Anthropic LLMs with Elixir as the coordination
      layer and Phoenix LiveView powering the front end.
    duration: '35:40'
    explicit: 'no'
    keywords: Elixir, phoenix, liveview, elixir programming language, javascript,
      LLMs, large language models, generative AI, ML, machine learning, APIs, tech
      startups, entrepreneurship, AI tools, artificial intelligence, podcasting, podcasts,
      content creation, content generation, audio video editing
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b5986064-a9f7-40f9-9931-10db7af17e14/cover.jpg?v=1
    summary: "\n        <p>Justin Tormey, co-founder of Castmagic, joins the Elixir
      Wizards to discuss building an AI-powered content creation app. Castmagic repurposes
      audio and video into social media posts, blog articles, newsletters, and more.
      The tech stack leverages OpenAI and Anthropic LLMs with Elixir as the coordination
      layer and Phoenix LiveView powering the front end.</p>\n\n<p>Justin dives into
      the technical details of Castmagic, including the integration of JavaScript
      libraries like ProseMirror and TipTap through LiveSvelte, as well as enabling
      real-time collaboration with CRDTs and YDoc. He shares the benefits and challenges
      of using Elixir for rapid development, as well as the trade-offs between custom
      code and off-the-shelf solutions.</p>\n\n<p>The conversation also covers Justin’s
      entrepreneurial journey, highlighting the advantages of bootstrapping over venture
      capital, the importance of acquiring early customers, and creative marketing
      strategies like affiliate programs and software marketplaces.</p>\n\n<p>Whether
      you&#39;re an Elixirist exploring machine learning or an aspiring tech founder,
      tune in to learn more about AI with Elixir, navigating startup challenges, and
      turning ideas into impactful software.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>Building
      Castmagic to generate content from audio and video for creators</li>\n<li>Using
      AI services like OpenAI and Anthropic for transcription and workflows</li>\n<li>Elixir
      as the coordination layer for complex processes</li>\n<li>Rapid UI development
      with Phoenix LiveView</li>\n<li>Integrating rich text editing libraries through
      LiveSvelte</li>\n<li>Enabling collaborative editing with CRDTs and YDoc</li>\n<li>Balancing
      offline functionality with cloud-based AI tools</li>\n<li>Challenges of working
      with external AI services</li>\n<li>Exploring the future of multimodal AI in
      product development</li>\n<li>Bootstrapping vs. venture capital: benefits and
      challenges</li>\n<li>Strategies for finding distribution channels and early
      adopters</li>\n<li>Creative approaches to marketing, including affiliates and
      marketplaces</li>\n<li>Balancing engineering efforts with customer and business
      needs</li>\n<li>Practical advice for navigating the early stages of a startup</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p><a href=\"https://www.castmagic.io/\" rel=\"nofollow\">https://www.castmagic.io/</a><br>\n<a
      href=\"https://pragprog.com/titles/jaerlang2/programming-erlang-2nd-edition/\"
      rel=\"nofollow\">https://pragprog.com/titles/jaerlang2/programming-erlang-2nd-edition/</a><br>\n<a
      href=\"https://www.blockchain.com/\" rel=\"nofollow\">https://www.blockchain.com/</a><br>\n<a
      href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://hexdocs.pm/live_svelte/readme.html\"
      rel=\"nofollow\">https://hexdocs.pm/live_svelte/readme.html</a><br>\n<a href=\"https://github.com/woutdp/live_svelte\"
      rel=\"nofollow\">https://github.com/woutdp/live_svelte</a><br>\n<a href=\"https://prosemirror.net/\"
      rel=\"nofollow\">https://prosemirror.net/</a><br>\n<a href=\"https://tiptap.dev/\"
      rel=\"nofollow\">https://tiptap.dev/</a><br>\n<a href=\"https://docs.yjs.dev/api/y.doc\"
      rel=\"nofollow\">https://docs.yjs.dev/api/y.doc</a><br>\n<a href=\"https://hexdocs.pm/polymorphic_embed/readme.html\"
      rel=\"nofollow\">https://hexdocs.pm/polymorphic_embed/readme.html</a><br>\n<a
      href=\"https://github.com/elixir-nx/nx\" rel=\"nofollow\">https://github.com/elixir-nx/nx</a><br>\n<a
      href=\"https://github.com/elixir-nx/tokenizers\" rel=\"nofollow\">https://github.com/elixir-nx/tokenizers</a><br>\n<a
      href=\"https://github.com/thmsmlr/instructor_ex\" rel=\"nofollow\">https://github.com/thmsmlr/instructor_ex</a><br>\n<a
      href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\n<a
      href=\"https://www.anthropic.com/\" rel=\"nofollow\">https://www.anthropic.com/</a><br>\n<a
      href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a><br>\n<a
      href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a><br>\n<a
      href=\"https://ollama.com/\" rel=\"nofollow\">https://ollama.com/</a><br>\n<a
      href=\"https://x.com/j_tormey\" rel=\"nofollow\">https://x.com/j_tormey</a></p><p>Special
      Guest: Justin Tormey.</p>\n      "
  contentEncoded: "\n        <p>Justin Tormey, co-founder of Castmagic, joins the
    Elixir Wizards to discuss building an AI-powered content creation app. Castmagic
    repurposes audio and video into social media posts, blog articles, newsletters,
    and more. The tech stack leverages OpenAI and Anthropic LLMs with Elixir as the
    coordination layer and Phoenix LiveView powering the front end.</p>\n\n<p>Justin
    dives into the technical details of Castmagic, including the integration of JavaScript
    libraries like ProseMirror and TipTap through LiveSvelte, as well as enabling
    real-time collaboration with CRDTs and YDoc. He shares the benefits and challenges
    of using Elixir for rapid development, as well as the trade-offs between custom
    code and off-the-shelf solutions.</p>\n\n<p>The conversation also covers Justin’s
    entrepreneurial journey, highlighting the advantages of bootstrapping over venture
    capital, the importance of acquiring early customers, and creative marketing strategies
    like affiliate programs and software marketplaces.</p>\n\n<p>Whether you&#39;re
    an Elixirist exploring machine learning or an aspiring tech founder, tune in to
    learn more about AI with Elixir, navigating startup challenges, and turning ideas
    into impactful software.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>Building
    Castmagic to generate content from audio and video for creators</li>\n<li>Using
    AI services like OpenAI and Anthropic for transcription and workflows</li>\n<li>Elixir
    as the coordination layer for complex processes</li>\n<li>Rapid UI development
    with Phoenix LiveView</li>\n<li>Integrating rich text editing libraries through
    LiveSvelte</li>\n<li>Enabling collaborative editing with CRDTs and YDoc</li>\n<li>Balancing
    offline functionality with cloud-based AI tools</li>\n<li>Challenges of working
    with external AI services</li>\n<li>Exploring the future of multimodal AI in product
    development</li>\n<li>Bootstrapping vs. venture capital: benefits and challenges</li>\n<li>Strategies
    for finding distribution channels and early adopters</li>\n<li>Creative approaches
    to marketing, including affiliates and marketplaces</li>\n<li>Balancing engineering
    efforts with customer and business needs</li>\n<li>Practical advice for navigating
    the early stages of a startup</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
    href=\"https://www.castmagic.io/\" rel=\"nofollow\">https://www.castmagic.io/</a><br>\n<a
    href=\"https://pragprog.com/titles/jaerlang2/programming-erlang-2nd-edition/\"
    rel=\"nofollow\">https://pragprog.com/titles/jaerlang2/programming-erlang-2nd-edition/</a><br>\n<a
    href=\"https://www.blockchain.com/\" rel=\"nofollow\">https://www.blockchain.com/</a><br>\n<a
    href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://hexdocs.pm/live_svelte/readme.html\"
    rel=\"nofollow\">https://hexdocs.pm/live_svelte/readme.html</a><br>\n<a href=\"https://github.com/woutdp/live_svelte\"
    rel=\"nofollow\">https://github.com/woutdp/live_svelte</a><br>\n<a href=\"https://prosemirror.net/\"
    rel=\"nofollow\">https://prosemirror.net/</a><br>\n<a href=\"https://tiptap.dev/\"
    rel=\"nofollow\">https://tiptap.dev/</a><br>\n<a href=\"https://docs.yjs.dev/api/y.doc\"
    rel=\"nofollow\">https://docs.yjs.dev/api/y.doc</a><br>\n<a href=\"https://hexdocs.pm/polymorphic_embed/readme.html\"
    rel=\"nofollow\">https://hexdocs.pm/polymorphic_embed/readme.html</a><br>\n<a
    href=\"https://github.com/elixir-nx/nx\" rel=\"nofollow\">https://github.com/elixir-nx/nx</a><br>\n<a
    href=\"https://github.com/elixir-nx/tokenizers\" rel=\"nofollow\">https://github.com/elixir-nx/tokenizers</a><br>\n<a
    href=\"https://github.com/thmsmlr/instructor_ex\" rel=\"nofollow\">https://github.com/thmsmlr/instructor_ex</a><br>\n<a
    href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\n<a
    href=\"https://www.anthropic.com/\" rel=\"nofollow\">https://www.anthropic.com/</a><br>\n<a
    href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a><br>\n<a
    href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a><br>\n<a
    href=\"https://ollama.com/\" rel=\"nofollow\">https://ollama.com/</a><br>\n<a
    href=\"https://x.com/j_tormey\" rel=\"nofollow\">https://x.com/j_tormey</a></p><p>Special
    Guest: Justin Tormey.</p>\n      "
- title: Creating the Standd AI-Native Due Diligence Platform with Stephen Solka
  slug: s13-e06-standd-ai-native-due-diligence
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e06-standd-ai-native-due-diligence
  guid: 5a07a78d-3d46-44d2-8350-cd8f0a8139f8
  pubDate: Thu, 21 Nov 2024 06:30:00 -0500
  pubDateFriendly: November 21, 2024
  description: |
    Stephen Solka, CTO and co-founder of Standd.io, joins Elixir Wizards Owen and Charles to share the journey of building an AI-native deal intelligence and due diligence platform. Designed to streamline document analysis and text generation for venture capital firms, Standd.io leverages large language models and AI tools to address key customer pain points in document workflows.
    Stephen explains how Elixir and Phoenix LiveView enabled rapid UI iteration and seamless integration between the front-end and back-end.
    The conversation also explores the human side of startup life. Stephen reflects on balancing tech debt with customer demands, the value of accelerators in building networks and securing funding, and the challenges of pricing in early-stage startups. He emphasizes the importance of validating ideas with potential customers and learning from the hurdles of growing a business.
    Tune in for insights on leveraging AI in Elixir, solving real-world problems, and navigating the journey from concept to company.
    Topics discussed in this episode:
    The journey from self-taught programmer to CTO
    The perks of Phoenix LiveView for rapid UI development
    Integrating front-end and back-end technologies
    AI tools for code generation
    How early adopters balance functionality with product polish
    Validating ideas and understanding customer needs
    The impact of accelerators on networking and fundraising
    Approaches to managing pricing strategies for startups
    Balancing technical debt with feature development
    The role of telemetry and error reporting in product development
    Creating collaborative and supportive tech communities
    Educating users on AI’s capabilities and limitations
    The broader implications of AI tools across industries
    Links Mentioned
    Contact Stephen & Julie at Standd: founders@standd.io
    https://www.standd.io/
    https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns
    https://www.thriftbooks.com/w/code-completesteve-mcconnell/248753/item/15057346/
    https://aws.amazon.com/sagemaker/
    https://www.anthropic.com/
    https://getoban.pro/
    https://kubernetes.io/
    https://www.apollographql.com/
    https://aws.amazon.com/startups/accelerators
    https://accelerate.techstars.com/
    https://aider.chat/
    https://github.com/Aider-AI/aider
    https://neovim.io/
    https://ui.shadcn.com/
    https://tailwindui.com/
    https://www.ycombinator.com/
    https://www.thriftbooks.com/w/close-to-the-machine-technophilia-and-its-discontentsellen-ullman/392556
     Special Guest: Stephen Solka.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Qfx0M4Z1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5a07a78d-3d46-44d2-8350-cd8f0a8139f8.mp3
    length: '94818656'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: 'Stephen Solka, CTO and co-founder of Standd.io, joins Elixir Wizards
      Owen and Charles to share the journey of building an AI-native deal intelligence
      and due diligence platform. '
    duration: '48:44'
    explicit: 'no'
    keywords: machine learning, ML, elixir, phoenix liveview, due diligence, entrepreneurship,
      startups, generative AI, predictive modeling, recommendation systems, search,
      natural language processing, software engineering, programming languages, AI,
      artificial intelligence, large language model, LLM, ChatGPT, OpenAI, tech trends,
      technology, neural networks, neural data, behavioral data, chatbots, model deployment,
      data processing, natural language generation, NLG, data mining, algorithms,
      predictive analytics, future trends, AI PoC, proof of concept, automation, recommendation
      systems
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5a07a78d-3d46-44d2-8350-cd8f0a8139f8/cover.jpg?v=1
    summary: "\n        <p>Stephen Solka, CTO and co-founder of Standd.io, joins Elixir
      Wizards Owen and Charles to share the journey of building an AI-native deal
      intelligence and due diligence platform. Designed to streamline document analysis
      and text generation for venture capital firms, Standd.io leverages large language
      models and AI tools to address key customer pain points in document workflows.</p>\n\n<p>Stephen
      explains how Elixir and Phoenix LiveView enabled rapid UI iteration and seamless
      integration between the front-end and back-end.</p>\n\n<p>The conversation also
      explores the human side of startup life. Stephen reflects on balancing tech
      debt with customer demands, the value of accelerators in building networks and
      securing funding, and the challenges of pricing in early-stage startups. He
      emphasizes the importance of validating ideas with potential customers and learning
      from the hurdles of growing a business.</p>\n\n<p>Tune in for insights on leveraging
      AI in Elixir, solving real-world problems, and navigating the journey from concept
      to company.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>The
      journey from self-taught programmer to CTO</li>\n<li>The perks of Phoenix LiveView
      for rapid UI development</li>\n<li>Integrating front-end and back-end technologies</li>\n<li>AI
      tools for code generation</li>\n<li>How early adopters balance functionality
      with product polish</li>\n<li>Validating ideas and understanding customer needs</li>\n<li>The
      impact of accelerators on networking and fundraising</li>\n<li>Approaches to
      managing pricing strategies for startups</li>\n<li>Balancing technical debt
      with feature development</li>\n<li>The role of telemetry and error reporting
      in product development</li>\n<li>Creating collaborative and supportive tech
      communities</li>\n<li>Educating users on AI’s capabilities and limitations</li>\n<li>The
      broader implications of AI tools across industries</li>\n</ul>\n\n<h3>Links
      Mentioned</h3>\n\n<p>Contact Stephen &amp; Julie at Standd: <a href=\"mailto:founders@standd.io\"
      rel=\"nofollow\">founders@standd.io</a><br>\n<a href=\"https://www.standd.io/\"
      rel=\"nofollow\">https://www.standd.io/</a><br>\n<a href=\"https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns\"
      rel=\"nofollow\">https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns</a><br>\n<a
      href=\"https://www.thriftbooks.com/w/code-complete_steve-mcconnell/248753/item/15057346/\"
      rel=\"nofollow\">https://www.thriftbooks.com/w/code-complete_steve-mcconnell/248753/item/15057346/</a><br>\n<a
      href=\"https://aws.amazon.com/sagemaker/\" rel=\"nofollow\">https://aws.amazon.com/sagemaker/</a><br>\n<a
      href=\"https://www.anthropic.com/\" rel=\"nofollow\">https://www.anthropic.com/</a><br>\n<a
      href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a><br>\n<a
      href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\n<a
      href=\"https://www.apollographql.com/\" rel=\"nofollow\">https://www.apollographql.com/</a><br>\n<a
      href=\"https://aws.amazon.com/startups/accelerators\" rel=\"nofollow\">https://aws.amazon.com/startups/accelerators</a><br>\n<a
      href=\"https://accelerate.techstars.com/\" rel=\"nofollow\">https://accelerate.techstars.com/</a><br>\n<a
      href=\"https://aider.chat/\" rel=\"nofollow\">https://aider.chat/</a><br>\n<a
      href=\"https://github.com/Aider-AI/aider\" rel=\"nofollow\">https://github.com/Aider-AI/aider</a><br>\n<a
      href=\"https://neovim.io/\" rel=\"nofollow\">https://neovim.io/</a><br>\n<a
      href=\"https://ui.shadcn.com/\" rel=\"nofollow\">https://ui.shadcn.com/</a><br>\n<a
      href=\"https://tailwindui.com/\" rel=\"nofollow\">https://tailwindui.com/</a><br>\n<a
      href=\"https://www.ycombinator.com/\" rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n<a
      href=\"https://www.thriftbooks.com/w/close-to-the-machine-technophilia-and-its-discontents_ellen-ullman/392556\"
      rel=\"nofollow\">https://www.thriftbooks.com/w/close-to-the-machine-technophilia-and-its-discontents_ellen-ullman/392556</a></p><p>Special
      Guest: Stephen Solka.</p>\n      "
  contentEncoded: "\n        <p>Stephen Solka, CTO and co-founder of Standd.io, joins
    Elixir Wizards Owen and Charles to share the journey of building an AI-native
    deal intelligence and due diligence platform. Designed to streamline document
    analysis and text generation for venture capital firms, Standd.io leverages large
    language models and AI tools to address key customer pain points in document workflows.</p>\n\n<p>Stephen
    explains how Elixir and Phoenix LiveView enabled rapid UI iteration and seamless
    integration between the front-end and back-end.</p>\n\n<p>The conversation also
    explores the human side of startup life. Stephen reflects on balancing tech debt
    with customer demands, the value of accelerators in building networks and securing
    funding, and the challenges of pricing in early-stage startups. He emphasizes
    the importance of validating ideas with potential customers and learning from
    the hurdles of growing a business.</p>\n\n<p>Tune in for insights on leveraging
    AI in Elixir, solving real-world problems, and navigating the journey from concept
    to company.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>The
    journey from self-taught programmer to CTO</li>\n<li>The perks of Phoenix LiveView
    for rapid UI development</li>\n<li>Integrating front-end and back-end technologies</li>\n<li>AI
    tools for code generation</li>\n<li>How early adopters balance functionality with
    product polish</li>\n<li>Validating ideas and understanding customer needs</li>\n<li>The
    impact of accelerators on networking and fundraising</li>\n<li>Approaches to managing
    pricing strategies for startups</li>\n<li>Balancing technical debt with feature
    development</li>\n<li>The role of telemetry and error reporting in product development</li>\n<li>Creating
    collaborative and supportive tech communities</li>\n<li>Educating users on AI’s
    capabilities and limitations</li>\n<li>The broader implications of AI tools across
    industries</li>\n</ul>\n\n<h3>Links Mentioned</h3>\n\n<p>Contact Stephen &amp;
    Julie at Standd: <a href=\"mailto:founders@standd.io\" rel=\"nofollow\">founders@standd.io</a><br>\n<a
    href=\"https://www.standd.io/\" rel=\"nofollow\">https://www.standd.io/</a><br>\n<a
    href=\"https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns\"
    rel=\"nofollow\">https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns</a><br>\n<a
    href=\"https://www.thriftbooks.com/w/code-complete_steve-mcconnell/248753/item/15057346/\"
    rel=\"nofollow\">https://www.thriftbooks.com/w/code-complete_steve-mcconnell/248753/item/15057346/</a><br>\n<a
    href=\"https://aws.amazon.com/sagemaker/\" rel=\"nofollow\">https://aws.amazon.com/sagemaker/</a><br>\n<a
    href=\"https://www.anthropic.com/\" rel=\"nofollow\">https://www.anthropic.com/</a><br>\n<a
    href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a><br>\n<a
    href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\n<a
    href=\"https://www.apollographql.com/\" rel=\"nofollow\">https://www.apollographql.com/</a><br>\n<a
    href=\"https://aws.amazon.com/startups/accelerators\" rel=\"nofollow\">https://aws.amazon.com/startups/accelerators</a><br>\n<a
    href=\"https://accelerate.techstars.com/\" rel=\"nofollow\">https://accelerate.techstars.com/</a><br>\n<a
    href=\"https://aider.chat/\" rel=\"nofollow\">https://aider.chat/</a><br>\n<a
    href=\"https://github.com/Aider-AI/aider\" rel=\"nofollow\">https://github.com/Aider-AI/aider</a><br>\n<a
    href=\"https://neovim.io/\" rel=\"nofollow\">https://neovim.io/</a><br>\n<a href=\"https://ui.shadcn.com/\"
    rel=\"nofollow\">https://ui.shadcn.com/</a><br>\n<a href=\"https://tailwindui.com/\"
    rel=\"nofollow\">https://tailwindui.com/</a><br>\n<a href=\"https://www.ycombinator.com/\"
    rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n<a href=\"https://www.thriftbooks.com/w/close-to-the-machine-technophilia-and-its-discontents_ellen-ullman/392556\"
    rel=\"nofollow\">https://www.thriftbooks.com/w/close-to-the-machine-technophilia-and-its-discontents_ellen-ullman/392556</a></p><p>Special
    Guest: Stephen Solka.</p>\n      "
- title: Creating the WebAuthn Components Library for Phoenix LiveView Apps with Owen
    Bickford
  slug: s13-e05-webauthn-components-phoenix-liveview
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e05-webauthn-components-phoenix-liveview
  guid: fcc73e6e-2092-4a59-b47b-52f4a489bed4
  pubDate: Thu, 14 Nov 2024 06:30:00 -0500
  pubDateFriendly: November 14, 2024
  description: "Today on Elixir Wizards, Owen Bickford, fellow Wizard and creator
    of the WebauthnComponents library, joins us to talk about building passwordless
    authentication for Phoenix LiveView applications. Owen walks us through the evolution
    of authentication—touching on everything from plain text passwords to multi-factor
    setups—and explains the security flaws and user experience issues each method
    presents. He describes passkeys, a solution based on the WebAuthn API, which improves
    security and ease of use.\nThe conversation covers cross-device support for passkeys,
    the role of password managers in keeping credentials synced, and ideas for enhancing
    WebauthnComponents, like supporting multiple passkeys per account. Owen invites
    listeners to contribute to the library’s development on GitHub and emphasizes
    the role passkeys play in improving app security and user experience.\nTopics
    discussed in this episode:\nPasskeys and the shift toward passwordless authentication\nWebAuthn
    API and its role in secure login systems\nCreating the WebauthnComponents library
    for Phoenix LiveView\nHistory of authentication from basic passwords to multi-factor
    approaches\nSecurity gaps and user experience challenges with traditional methods\nAsymmetric
    cryptography’s impact on secure logins\nHardware-based credential storage and
    generation with Trusted Platform Modules\nStructure and components of the WebAuthn
    library: dependencies, LiveViews, and Ecto schemas\nLive components for real-time
    server-browser interactions\nPasskeys as a primary or secondary authentication
    method\nKey business considerations when choosing authentication methods\nCross-device
    support for passkeys and credential syncing\nStrategies for passkey recovery if
    devices are lost\nEnsuring secure access in unattended environments\nElixir’s
    ecosystem advantages for building authentication systems\nSimplifying JavaScript
    complexity within Elixir projects\nFuture-proofing WebAuthn Components for seamless
    updates\nUsing Igniter to enhance customization and refactoring\nDeveloper-friendly
    tools for secure authentication\nInviting community contributions on GitHub and
    the Elixir forum\nPlans for telemetry and performance tracking\nWhy adopting passkeys
    is a win for app security and user experience\nLinks mentioned:\nhttps://github.com/liveshowy/webauthncomponents\nhttps://en.wikipedia.org/wiki/Salt(cryptography)\nhttps://en.wikipedia.org/wiki/Rainbowtable\nhttps://en.wikipedia.org/wiki/Multi-factorauthentication\nhttps://oauth.net/2/\nhttps://developer.mozilla.org/en-US/docs/Web/API/WebAuthenticationAPI\nhttps://www.w3.org/TR/webauthn-3/
    \nhttps://www.microsoft.com/en-us/windows/tips/windows-hello\nhttps://trustedcomputinggroup.org/resource/trusted-platform-module-tpm-summary/\nhttps://hexdocs.pm/phoenix/mixphxgenauth.html\nhttps://en.wikipedia.org/wiki/Public-keycryptography\nSSH
    Protocol (Secure Shell) https://en.wikipedia.org/wiki/SecureShell \nhttps://www.yubico.com/products/yubikey-5-overview/\nhttps://fidoalliance.org/how-fido-works/\nhttps://1password.com/\nhttps://keepassxc.org/\nhttps://hexdocs.pm/ectoulid/Ecto.ULID.html\nhttps://en.wikipedia.org/wiki/Universallyuniqueidentifier\nhttps://hexdocs.pm/ecto/Ecto.Schema.html\nhttps://hexdocs.pm/sourceror/\nhttps://github.com/ash-project/igniter\nForum
    thread: \nhttps://elixirforum.com/t/webauthnlivecomponent-passwordless-auth-for-liveview-apps/49941
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Jf3kvBuA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/fcc73e6e-2092-4a59-b47b-52f4a489bed4.mp3
    length: '83976684'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Owen Bickford, fellow Wizard and creator of
      the WebauthnComponents library, joins us to talk about building passwordless
      authentication for Phoenix LiveView applications.
    duration: '57:32'
    explicit: 'no'
    keywords: Elixir, phoenix, liveview, elixir programming language, web development,
      software, app design, passkeys, authentication, passwordless authentication,
      auth0, webauthn, software engineering, code, backend development, cyber security,
      data security, cryptography, multi factor identification, OAuth, session management
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/fcc73e6e-2092-4a59-b47b-52f4a489bed4/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Owen Bickford, fellow Wizard and
      creator of the WebauthnComponents library, joins us to talk about building passwordless
      authentication for Phoenix LiveView applications. Owen walks us through the
      evolution of authentication—touching on everything from plain text passwords
      to multi-factor setups—and explains the security flaws and user experience issues
      each method presents. He describes passkeys, a solution based on the WebAuthn
      API, which improves security and ease of use.</p>\n\n<p>The conversation covers
      cross-device support for passkeys, the role of password managers in keeping
      credentials synced, and ideas for enhancing WebauthnComponents, like supporting
      multiple passkeys per account. Owen invites listeners to contribute to the library’s
      development on GitHub and emphasizes the role passkeys play in improving app
      security and user experience.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>Passkeys
      and the shift toward passwordless authentication</li>\n<li>WebAuthn API and
      its role in secure login systems</li>\n<li>Creating the WebauthnComponents library
      for Phoenix LiveView</li>\n<li>History of authentication from basic passwords
      to multi-factor approaches</li>\n<li>Security gaps and user experience challenges
      with traditional methods</li>\n<li>Asymmetric cryptography’s impact on secure
      logins</li>\n<li>Hardware-based credential storage and generation with Trusted
      Platform Modules</li>\n<li>Structure and components of the WebAuthn library:
      dependencies, LiveViews, and Ecto schemas</li>\n<li>Live components for real-time
      server-browser interactions</li>\n<li>Passkeys as a primary or secondary authentication
      method</li>\n<li>Key business considerations when choosing authentication methods</li>\n<li>Cross-device
      support for passkeys and credential syncing</li>\n<li>Strategies for passkey
      recovery if devices are lost</li>\n<li>Ensuring secure access in unattended
      environments</li>\n<li>Elixir’s ecosystem advantages for building authentication
      systems</li>\n<li>Simplifying JavaScript complexity within Elixir projects</li>\n<li>Future-proofing
      WebAuthn Components for seamless updates</li>\n<li>Using Igniter to enhance
      customization and refactoring</li>\n<li>Developer-friendly tools for secure
      authentication</li>\n<li>Inviting community contributions on GitHub and the
      Elixir forum</li>\n<li>Plans for telemetry and performance tracking</li>\n<li>Why
      adopting passkeys is a win for app security and user experience</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p><a href=\"https://github.com/liveshowy/webauthn_components\"
      rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Salt_(cryptography)</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Rainbow_table\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Rainbow_table</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Multi-factor_authentication\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Multi-factor_authentication</a><br>\n<a
      href=\"https://oauth.net/2/\" rel=\"nofollow\">https://oauth.net/2/</a><br>\n<a
      href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API\"
      rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</a><br>\n<a
      href=\"https://www.w3.org/TR/webauthn-3/\" rel=\"nofollow\">https://www.w3.org/TR/webauthn-3/</a>
      <br>\n<a href=\"https://www.microsoft.com/en-us/windows/tips/windows-hello\"
      rel=\"nofollow\">https://www.microsoft.com/en-us/windows/tips/windows-hello</a><br>\n<a
      href=\"https://trustedcomputinggroup.org/resource/trusted-platform-module-tpm-summary/\"
      rel=\"nofollow\">https://trustedcomputinggroup.org/resource/trusted-platform-module-tpm-summary/</a><br>\n<a
      href=\"https://hexdocs.pm/phoenix/mix_phx_gen_auth.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/mix_phx_gen_auth.html</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Public-key_cryptography\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Public-key_cryptography</a><br>\nSSH
      Protocol (Secure Shell) <a href=\"https://en.wikipedia.org/wiki/Secure_Shell\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Secure_Shell</a> <br>\n<a href=\"https://www.yubico.com/products/yubikey-5-overview/\"
      rel=\"nofollow\">https://www.yubico.com/products/yubikey-5-overview/</a><br>\n<a
      href=\"https://fidoalliance.org/how-fido-works/\" rel=\"nofollow\">https://fidoalliance.org/how-fido-works/</a><br>\n<a
      href=\"https://1password.com/\" rel=\"nofollow\">https://1password.com/</a><br>\n<a
      href=\"https://keepassxc.org/\" rel=\"nofollow\">https://keepassxc.org/</a><br>\n<a
      href=\"https://hexdocs.pm/ecto_ulid/Ecto.ULID.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_ulid/Ecto.ULID.html</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Universally_unique_identifier</a><br>\n<a
      href=\"https://hexdocs.pm/ecto/Ecto.Schema.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.Schema.html</a><br>\n<a
      href=\"https://hexdocs.pm/sourceror/\" rel=\"nofollow\">https://hexdocs.pm/sourceror/</a><br>\n<a
      href=\"https://github.com/ash-project/igniter\" rel=\"nofollow\">https://github.com/ash-project/igniter</a><br>\nForum
      thread: <br>\n<a href=\"https://elixirforum.com/t/webauthnlivecomponent-passwordless-auth-for-liveview-apps/49941\"
      rel=\"nofollow\">https://elixirforum.com/t/webauthnlivecomponent-passwordless-auth-for-liveview-apps/49941</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Owen Bickford, fellow Wizard
    and creator of the WebauthnComponents library, joins us to talk about building
    passwordless authentication for Phoenix LiveView applications. Owen walks us through
    the evolution of authentication—touching on everything from plain text passwords
    to multi-factor setups—and explains the security flaws and user experience issues
    each method presents. He describes passkeys, a solution based on the WebAuthn
    API, which improves security and ease of use.</p>\n\n<p>The conversation covers
    cross-device support for passkeys, the role of password managers in keeping credentials
    synced, and ideas for enhancing WebauthnComponents, like supporting multiple passkeys
    per account. Owen invites listeners to contribute to the library’s development
    on GitHub and emphasizes the role passkeys play in improving app security and
    user experience.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>Passkeys
    and the shift toward passwordless authentication</li>\n<li>WebAuthn API and its
    role in secure login systems</li>\n<li>Creating the WebauthnComponents library
    for Phoenix LiveView</li>\n<li>History of authentication from basic passwords
    to multi-factor approaches</li>\n<li>Security gaps and user experience challenges
    with traditional methods</li>\n<li>Asymmetric cryptography’s impact on secure
    logins</li>\n<li>Hardware-based credential storage and generation with Trusted
    Platform Modules</li>\n<li>Structure and components of the WebAuthn library: dependencies,
    LiveViews, and Ecto schemas</li>\n<li>Live components for real-time server-browser
    interactions</li>\n<li>Passkeys as a primary or secondary authentication method</li>\n<li>Key
    business considerations when choosing authentication methods</li>\n<li>Cross-device
    support for passkeys and credential syncing</li>\n<li>Strategies for passkey recovery
    if devices are lost</li>\n<li>Ensuring secure access in unattended environments</li>\n<li>Elixir’s
    ecosystem advantages for building authentication systems</li>\n<li>Simplifying
    JavaScript complexity within Elixir projects</li>\n<li>Future-proofing WebAuthn
    Components for seamless updates</li>\n<li>Using Igniter to enhance customization
    and refactoring</li>\n<li>Developer-friendly tools for secure authentication</li>\n<li>Inviting
    community contributions on GitHub and the Elixir forum</li>\n<li>Plans for telemetry
    and performance tracking</li>\n<li>Why adopting passkeys is a win for app security
    and user experience</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://github.com/liveshowy/webauthn_components\"
    rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Salt_(cryptography)</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Rainbow_table\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Rainbow_table</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Multi-factor_authentication\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Multi-factor_authentication</a><br>\n<a
    href=\"https://oauth.net/2/\" rel=\"nofollow\">https://oauth.net/2/</a><br>\n<a
    href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API\"
    rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API</a><br>\n<a
    href=\"https://www.w3.org/TR/webauthn-3/\" rel=\"nofollow\">https://www.w3.org/TR/webauthn-3/</a>
    <br>\n<a href=\"https://www.microsoft.com/en-us/windows/tips/windows-hello\" rel=\"nofollow\">https://www.microsoft.com/en-us/windows/tips/windows-hello</a><br>\n<a
    href=\"https://trustedcomputinggroup.org/resource/trusted-platform-module-tpm-summary/\"
    rel=\"nofollow\">https://trustedcomputinggroup.org/resource/trusted-platform-module-tpm-summary/</a><br>\n<a
    href=\"https://hexdocs.pm/phoenix/mix_phx_gen_auth.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/mix_phx_gen_auth.html</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Public-key_cryptography\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Public-key_cryptography</a><br>\nSSH
    Protocol (Secure Shell) <a href=\"https://en.wikipedia.org/wiki/Secure_Shell\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Secure_Shell</a> <br>\n<a href=\"https://www.yubico.com/products/yubikey-5-overview/\"
    rel=\"nofollow\">https://www.yubico.com/products/yubikey-5-overview/</a><br>\n<a
    href=\"https://fidoalliance.org/how-fido-works/\" rel=\"nofollow\">https://fidoalliance.org/how-fido-works/</a><br>\n<a
    href=\"https://1password.com/\" rel=\"nofollow\">https://1password.com/</a><br>\n<a
    href=\"https://keepassxc.org/\" rel=\"nofollow\">https://keepassxc.org/</a><br>\n<a
    href=\"https://hexdocs.pm/ecto_ulid/Ecto.ULID.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_ulid/Ecto.ULID.html</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Universally_unique_identifier</a><br>\n<a
    href=\"https://hexdocs.pm/ecto/Ecto.Schema.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.Schema.html</a><br>\n<a
    href=\"https://hexdocs.pm/sourceror/\" rel=\"nofollow\">https://hexdocs.pm/sourceror/</a><br>\n<a
    href=\"https://github.com/ash-project/igniter\" rel=\"nofollow\">https://github.com/ash-project/igniter</a><br>\nForum
    thread: <br>\n<a href=\"https://elixirforum.com/t/webauthnlivecomponent-passwordless-auth-for-liveview-apps/49941\"
    rel=\"nofollow\">https://elixirforum.com/t/webauthnlivecomponent-passwordless-auth-for-liveview-apps/49941</a></p>\n
    \     "
- title: Creating a Terrestrial Telescope using Nerves & LiveView with Lucas Sifoni
  slug: s13-e04-terrestrial-telescope-nerves-liveview
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e04-terrestrial-telescope-nerves-liveview
  guid: 9a9a82c5-f173-4ad7-91c7-b6dfd6adfa0a
  pubDate: Thu, 07 Nov 2024 06:15:00 -0500
  pubDateFriendly: November  7, 2024
  description: |
    Today on Elixir Wizards, indie developer Lucas Sifoni shares his experience prototyping a remote-controlled terrestrial telescope using Elixir, Nerves, Rust, and various hardware components.
    Lucas explains the basic components of a telescope, the challenges he faced during the development process, and the benefits of using Elixir and Nerves for hardware projects. Lucas emphasizes the importance of simulating hardware components and testing assumptions before working with physical devices, as well as the value of literate programming and executable blog posts for documenting and sharing the process.
    Lucas encourages listeners to explore Nerves and build their own hardware projects. He also gives a shout-out to the Nerves core team for their incredible work.
    Topics discussed in this episode:
    Challenges in optimizing wiring and PCB design for the prototype
    Benefits of Elixir and Nerves for hardware projects
    Communicating with Arduinos using serial connections and pattern matching
    Leveraging binary pattern matching and construction in Elixir for hardware
    Balancing educational value and real-world usability
    Learning CID software and parametric design for 3D printing components
    Growing interest in Nerves and hardware projects within the Elixir community
    Simulating hardware components and testing assumptions before physical implementation
    Literate programming and executable blog posts for documenting hardware projects
    Using Elixir's interoperability with Rust for performance-critical tasks
    Elixir's low fragmentation and high-quality libraries for various domains
    Potential for using Livebook in hardware projects, with some limitations
    Encouraging listeners to explore Nerves and build their own hardware projects
    Links mentioned
    https://lucassifoni.info/
    https://www.rust-lang.org/
    https://go.dev/
    https://lisp-lang.org/
    https://ubuntu.com/
    https://hexdocs.pm/iex/IEx.html
    https://nerves-project.org/
    https://lucassifoni.info/blog/prototyping-elixir-telescope-code-beam/
    https://github.com/Lucassifoni/oiseaux
    https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
    https://www.raspberrypi.com/
    https://mangopi.org/
    https://store.arduino.cc/products/arduino-nano
    https://elixir-circuits.github.io/
    https://www.erlang.org/doc/apps/runtimetools/scheduler.html
    Binary pattern matching in Elixir with PNG parsing example https://zohaib.me/binary-pattern-matching-in-elixir/
    Lucas’ Code Beam Talk: https://www.youtube.com/watch?v=q7bleFzA11c
    https://github.com/membraneframework-labs
    https://github.com/talklittle/ffmpex
    https://studio.blender.org/training/3d-printing/
    https://www.autodesk.com/products/fusion-360/personal
    https://en.wikipedia.org/wiki/Parametricdesign
    https://www.exem.fr/
    https://www.kikk.be/exhibitions/collectif-lab212-nicolas-guichard-beatrice-lartigue/
    https://livebook.dev/
    https://github.com/elixir-nx/bumblebee
    https://github.com/rusterlium/rustlerhttps://www.youtube.com/watch?v=q7bleFzA11c Special Guest: Lucas Sifoni.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LhCaH77P
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9a9a82c5-f173-4ad7-91c7-b6dfd6adfa0a.mp3
    length: '72860530'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Lucas Sifoni, an indie developer from southwest
      France, shares his experience prototyping a remote-controlled terrestrial telescope
      using Elixir, Nerves, Rust, and various hardware components.
    duration: '49:56'
    explicit: 'no'
    keywords: embedded systems development, Elixir programming, C language, rustlang,
      Nerves framework, firmware projects, programming language comparison, embedded
      ecosystems, embedded software engineering, cross-language exchange, software
      engineering, embedded tooling, embedded programming, operating systems, bare
      metal programming, firmware, JNI, Java Native Interface, C++, firmware toolbox,
      Elixir for firmware, testing firmware, software debugging, programming workflows,
      Elixir features, hot code reloading, Java programming, programming frameworks,
      tech trends, emerging tools in software, functional programming, technical writing,
      writing test, software industry, engineering careers, technology, technical
      skills
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9a9a82c5-f173-4ad7-91c7-b6dfd6adfa0a/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, indie developer Lucas Sifoni shares
      his experience prototyping a remote-controlled terrestrial telescope using Elixir,
      Nerves, Rust, and various hardware components.</p>\n\n<p>Lucas explains the
      basic components of a telescope, the challenges he faced during the development
      process, and the benefits of using Elixir and Nerves for hardware projects.
      Lucas emphasizes the importance of simulating hardware components and testing
      assumptions before working with physical devices, as well as the value of literate
      programming and executable blog posts for documenting and sharing the process.</p>\n\n<p>Lucas
      encourages listeners to explore Nerves and build their own hardware projects.
      He also gives a shout-out to the Nerves core team for their incredible work.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Challenges in optimizing wiring
      and PCB design for the prototype</li>\n<li>Benefits of Elixir and Nerves for
      hardware projects</li>\n<li>Communicating with Arduinos using serial connections
      and pattern matching</li>\n<li>Leveraging binary pattern matching and construction
      in Elixir for hardware</li>\n<li>Balancing educational value and real-world
      usability</li>\n<li>Learning CID software and parametric design for 3D printing
      components</li>\n<li>Growing interest in Nerves and hardware projects within
      the Elixir community</li>\n<li>Simulating hardware components and testing assumptions
      before physical implementation</li>\n<li>Literate programming and executable
      blog posts for documenting hardware projects</li>\n<li>Using Elixir&#39;s interoperability
      with Rust for performance-critical tasks</li>\n<li>Elixir&#39;s low fragmentation
      and high-quality libraries for various domains</li>\n<li>Potential for using
      Livebook in hardware projects, with some limitations</li>\n<li>Encouraging listeners
      to explore Nerves and build their own hardware projects</li>\n</ul>\n\n<h3>Links
      mentioned</h3>\n\n<p><a href=\"https://lucassifoni.info/\" rel=\"nofollow\">https://lucassifoni.info/</a><br>\n<a
      href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\n<a
      href=\"https://go.dev/\" rel=\"nofollow\">https://go.dev/</a><br>\n<a href=\"https://lisp-lang.org/\"
      rel=\"nofollow\">https://lisp-lang.org/</a><br>\n<a href=\"https://ubuntu.com/\"
      rel=\"nofollow\">https://ubuntu.com/</a><br>\n<a href=\"https://hexdocs.pm/iex/IEx.html\"
      rel=\"nofollow\">https://hexdocs.pm/iex/IEx.html</a><br>\n<a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a><br>\n<a href=\"https://lucassifoni.info/blog/prototyping-elixir-telescope-code-beam/\"
      rel=\"nofollow\">https://lucassifoni.info/blog/prototyping-elixir-telescope-code-beam/</a><br>\n<a
      href=\"https://github.com/Lucassifoni/oiseaux\" rel=\"nofollow\">https://github.com/Lucassifoni/oiseaux</a><br>\n<a
      href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\n<a
      href=\"https://www.raspberrypi.com/\" rel=\"nofollow\">https://www.raspberrypi.com/</a><br>\n<a
      href=\"https://mangopi.org/\" rel=\"nofollow\">https://mangopi.org/</a><br>\n<a
      href=\"https://store.arduino.cc/products/arduino-nano\" rel=\"nofollow\">https://store.arduino.cc/products/arduino-nano</a><br>\n<a
      href=\"https://elixir-circuits.github.io/\" rel=\"nofollow\">https://elixir-circuits.github.io/</a><br>\n<a
      href=\"https://www.erlang.org/doc/apps/runtime_tools/scheduler.html\" rel=\"nofollow\">https://www.erlang.org/doc/apps/runtime_tools/scheduler.html</a><br>\nBinary
      pattern matching in Elixir with PNG parsing example <a href=\"https://zohaib.me/binary-pattern-matching-in-elixir/\"
      rel=\"nofollow\">https://zohaib.me/binary-pattern-matching-in-elixir/</a><br>\nLucas’
      Code Beam Talk: <a href=\"https://www.youtube.com/watch?v=q7bleFzA11c\" rel=\"nofollow\">https://www.youtube.com/watch?v=q7bleFzA11c</a><br>\n<a
      href=\"https://github.com/membraneframework-labs\" rel=\"nofollow\">https://github.com/membraneframework-labs</a><br>\n<a
      href=\"https://github.com/talklittle/ffmpex\" rel=\"nofollow\">https://github.com/talklittle/ffmpex</a><br>\n<a
      href=\"https://studio.blender.org/training/3d-printing/\" rel=\"nofollow\">https://studio.blender.org/training/3d-printing/</a><br>\n<a
      href=\"https://www.autodesk.com/products/fusion-360/personal\" rel=\"nofollow\">https://www.autodesk.com/products/fusion-360/personal</a><br>\n<a
      href=\"https://en.wikipedia.org/wiki/Parametric_design\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Parametric_design</a><br>\n<a
      href=\"https://www.exem.fr/\" rel=\"nofollow\">https://www.exem.fr/</a><br>\n<a
      href=\"https://www.kikk.be/exhibitions/collectif-lab212-nicolas-guichard-beatrice-lartigue/\"
      rel=\"nofollow\">https://www.kikk.be/exhibitions/collectif-lab212-nicolas-guichard-beatrice-lartigue/</a><br>\n<a
      href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\n<a
      href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\n<a
      href=\"https://github.com/rusterlium/rustlerhttps://www.youtube.com/watch?v=q7bleFzA11c\"
      rel=\"nofollow\">https://github.com/rusterlium/rustlerhttps://www.youtube.com/watch?v=q7bleFzA11c</a></p><p>Special
      Guest: Lucas Sifoni.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, indie developer Lucas Sifoni
    shares his experience prototyping a remote-controlled terrestrial telescope using
    Elixir, Nerves, Rust, and various hardware components.</p>\n\n<p>Lucas explains
    the basic components of a telescope, the challenges he faced during the development
    process, and the benefits of using Elixir and Nerves for hardware projects. Lucas
    emphasizes the importance of simulating hardware components and testing assumptions
    before working with physical devices, as well as the value of literate programming
    and executable blog posts for documenting and sharing the process.</p>\n\n<p>Lucas
    encourages listeners to explore Nerves and build their own hardware projects.
    He also gives a shout-out to the Nerves core team for their incredible work.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Challenges in optimizing wiring and
    PCB design for the prototype</li>\n<li>Benefits of Elixir and Nerves for hardware
    projects</li>\n<li>Communicating with Arduinos using serial connections and pattern
    matching</li>\n<li>Leveraging binary pattern matching and construction in Elixir
    for hardware</li>\n<li>Balancing educational value and real-world usability</li>\n<li>Learning
    CID software and parametric design for 3D printing components</li>\n<li>Growing
    interest in Nerves and hardware projects within the Elixir community</li>\n<li>Simulating
    hardware components and testing assumptions before physical implementation</li>\n<li>Literate
    programming and executable blog posts for documenting hardware projects</li>\n<li>Using
    Elixir&#39;s interoperability with Rust for performance-critical tasks</li>\n<li>Elixir&#39;s
    low fragmentation and high-quality libraries for various domains</li>\n<li>Potential
    for using Livebook in hardware projects, with some limitations</li>\n<li>Encouraging
    listeners to explore Nerves and build their own hardware projects</li>\n</ul>\n\n<h3>Links
    mentioned</h3>\n\n<p><a href=\"https://lucassifoni.info/\" rel=\"nofollow\">https://lucassifoni.info/</a><br>\n<a
    href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\n<a
    href=\"https://go.dev/\" rel=\"nofollow\">https://go.dev/</a><br>\n<a href=\"https://lisp-lang.org/\"
    rel=\"nofollow\">https://lisp-lang.org/</a><br>\n<a href=\"https://ubuntu.com/\"
    rel=\"nofollow\">https://ubuntu.com/</a><br>\n<a href=\"https://hexdocs.pm/iex/IEx.html\"
    rel=\"nofollow\">https://hexdocs.pm/iex/IEx.html</a><br>\n<a href=\"https://nerves-project.org/\"
    rel=\"nofollow\">https://nerves-project.org/</a><br>\n<a href=\"https://lucassifoni.info/blog/prototyping-elixir-telescope-code-beam/\"
    rel=\"nofollow\">https://lucassifoni.info/blog/prototyping-elixir-telescope-code-beam/</a><br>\n<a
    href=\"https://github.com/Lucassifoni/oiseaux\" rel=\"nofollow\">https://github.com/Lucassifoni/oiseaux</a><br>\n<a
    href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\n<a
    href=\"https://www.raspberrypi.com/\" rel=\"nofollow\">https://www.raspberrypi.com/</a><br>\n<a
    href=\"https://mangopi.org/\" rel=\"nofollow\">https://mangopi.org/</a><br>\n<a
    href=\"https://store.arduino.cc/products/arduino-nano\" rel=\"nofollow\">https://store.arduino.cc/products/arduino-nano</a><br>\n<a
    href=\"https://elixir-circuits.github.io/\" rel=\"nofollow\">https://elixir-circuits.github.io/</a><br>\n<a
    href=\"https://www.erlang.org/doc/apps/runtime_tools/scheduler.html\" rel=\"nofollow\">https://www.erlang.org/doc/apps/runtime_tools/scheduler.html</a><br>\nBinary
    pattern matching in Elixir with PNG parsing example <a href=\"https://zohaib.me/binary-pattern-matching-in-elixir/\"
    rel=\"nofollow\">https://zohaib.me/binary-pattern-matching-in-elixir/</a><br>\nLucas’
    Code Beam Talk: <a href=\"https://www.youtube.com/watch?v=q7bleFzA11c\" rel=\"nofollow\">https://www.youtube.com/watch?v=q7bleFzA11c</a><br>\n<a
    href=\"https://github.com/membraneframework-labs\" rel=\"nofollow\">https://github.com/membraneframework-labs</a><br>\n<a
    href=\"https://github.com/talklittle/ffmpex\" rel=\"nofollow\">https://github.com/talklittle/ffmpex</a><br>\n<a
    href=\"https://studio.blender.org/training/3d-printing/\" rel=\"nofollow\">https://studio.blender.org/training/3d-printing/</a><br>\n<a
    href=\"https://www.autodesk.com/products/fusion-360/personal\" rel=\"nofollow\">https://www.autodesk.com/products/fusion-360/personal</a><br>\n<a
    href=\"https://en.wikipedia.org/wiki/Parametric_design\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Parametric_design</a><br>\n<a
    href=\"https://www.exem.fr/\" rel=\"nofollow\">https://www.exem.fr/</a><br>\n<a
    href=\"https://www.kikk.be/exhibitions/collectif-lab212-nicolas-guichard-beatrice-lartigue/\"
    rel=\"nofollow\">https://www.kikk.be/exhibitions/collectif-lab212-nicolas-guichard-beatrice-lartigue/</a><br>\n<a
    href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\n<a
    href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\n<a
    href=\"https://github.com/rusterlium/rustlerhttps://www.youtube.com/watch?v=q7bleFzA11c\"
    rel=\"nofollow\">https://github.com/rusterlium/rustlerhttps://www.youtube.com/watch?v=q7bleFzA11c</a></p><p>Special
    Guest: Lucas Sifoni.</p>\n      "
- title: Creating a Local-First Offline-Enabled LiveView PWA with Tony Dang
  slug: s13-e03-local-first-liveview-svelte-pwa
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e03-local-first-liveview-svelte-pwa
  guid: d9fc7e4d-0d1a-44d1-8183-0ee2048030a6
  pubDate: Thu, 31 Oct 2024 06:00:00 -0400
  pubDateFriendly: October 31, 2024
  description: "Today in the Creator’s Lab, Tony Dang joins Elixir Wizards Sundi Myint
    and Owen Bickford to break down his journey of creating a local-first, offline-ready
    to-do app using Phoenix LiveView, Svelte, and CRDTs (Conflict-free Replicated
    Data Types).\nTony explains why offline functionality matters and how this feature
    can transform various apps. He shares insights on different libraries, algorithms,
    and techniques for building local-first experiences and highlights the advantages
    of Elixir and Phoenix LiveView.\nTony also shares his go-to tools, like Inertia.js
    for connecting Phoenix backends with JavaScript frontends, and favorite Elixir
    packages like Oban, Joken, and Hammer, offering a toolkit for anyone building
    powerful, adaptable applications.\nTopics discussed in this episode:\nTony Dang's
    background from mechanical engineer to web developer\nBuilding an offline-enabled
    to-do app with Phoenix LiveView and Svelte\nCRDTs: Conflict-free Replicated Data
    Types for merging changes offline\nHow to make a LiveView app work offline\nSending
    full state updates vs. incremental updates for performance optimization\nInspiring
    others through open-source projects and community contributions\nLearning vanilla
    Phoenix and Channels to understand LiveView better\nHandling stale CSRF tokens
    when reconnecting to a LiveView app offline\nExploring service workers and browser
    APIs for managing offline connectivity\nBalancing the use of JavaScript and Elixir
    in web development\nFostering a supportive and inspiring Elixir community\nLinks
    mentioned:\nWorking in Elevators: How to build an offline-enabled, real-time todo
    app (https://www.youtube.com/watch?v=PX9-lq0LL9Q) w/ LiveView, Svelte, & Yjs\nTony’s
    Twitter: https://x.com/tonydangblog\nhttps://liveview-svelte-pwa.fly.dev/\nhttps://github.com/tonydangblog/liveview-svelte-pwa\nCRDT:
    https://en.wikipedia.org/wiki/Conflict-freereplicateddatatype \nPWA: https://en.wikipedia.org/wiki/Progressivewebapp
    \nhttps://github.com/josevalim/sync\nhttps://github.com/sveltejs/svelte \nhttps://github.com/woutdp/livesvelte
    \nhttps://github.com/yjs/yjs \nhttps://github.com/satoren/yex \nhttps://github.com/y-crdt/y-crdt
    \nhttps://linear.app/\nhttps://github.com/automerge/automerge \nhttps://hexdocs.pm/phoenix/1.4.0-rc.1/presence.html
    \nVaxine, the Rich CRDT Database for ElixirPhoenix Apps (https://www.youtube.com/watch?v=n2c5eWIfziY)
    | James Arthur | Code BEAM America 2022\nhttps://github.com/electric-sql/vaxine
    \nHybrid Logical Clocks https://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html
    \nhttps://en.wikipedia.org/wiki/256(number)\nCSRF Tokens in LiveView https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#getconnectparams/1
    \nhttps://hexdocs.pm/phoenix/channels.html \nAuthentication with Passkeys (https://www.youtube.com/playlist?list=PL8lFmBcH3vX-JNIgxW3THUy7REthSRFEI)
    Talk by Tony\nhttps://www.meetup.com/dc-elixir/\nhttps://github.com/rails/rails
    \nhttps://github.com/facebook/react-native \nhttps://github.com/vuejs \nhttps://github.com/laravel/laravel
    \nhttps://hexdocs.pm/phoenixliveview/js-interop.html \nhttps://github.com/inertiajs
    \nhttps://github.com/inertiajs/inertia-phoenix \nhttps://savvycal.com/ \nhttps://github.com/wojtekmach/req\nhttps://github.com/oban-bg/oban
    \nhttps://github.com/joken-elixir/joken \nhttps://github.com/ExHammer/hammer Special
    Guest: Tony Dang.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zYBQYO9c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d9fc7e4d-0d1a-44d1-8183-0ee2048030a6.mp3
    length: '70403871'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: Today in the Creator’s Lab, Tony Dang joins Elixir Wizards Sundi Myint
      and Owen Bickford to break down his journey of creating a local-first, offline-ready
      to-do app using Phoenix LiveView, Svelte, and CRDTs (Conflict-free Replicated
      Data Types).
    duration: '48:18'
    explicit: 'no'
    keywords: elixir, phoenix, liveview, yjs, PWAs, web applications, web dev, web
      development, software development, software engineering, offline apps, coding,
      svelte, sveltekit, javascript, programming, CRDT, local first app, offline enabled
      apps, code, erlang, rust, app design, programming languages, elixir language,
      elixir wizards, functional programming
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d9fc7e4d-0d1a-44d1-8183-0ee2048030a6/cover.jpg?v=1
    summary: "\n        <p>Today in the Creator’s Lab, Tony Dang joins Elixir Wizards
      Sundi Myint and Owen Bickford to break down his journey of creating a local-first,
      offline-ready to-do app using Phoenix LiveView, Svelte, and CRDTs (Conflict-free
      Replicated Data Types).</p>\n\n<p>Tony explains why offline functionality matters
      and how this feature can transform various apps. He shares insights on different
      libraries, algorithms, and techniques for building local-first experiences and
      highlights the advantages of Elixir and Phoenix LiveView.</p>\n\n<p>Tony also
      shares his go-to tools, like Inertia.js for connecting Phoenix backends with
      JavaScript frontends, and favorite Elixir packages like Oban, Joken, and Hammer,
      offering a toolkit for anyone building powerful, adaptable applications.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Tony Dang&#39;s background from
      mechanical engineer to web developer</li>\n<li>Building an offline-enabled to-do
      app with Phoenix LiveView and Svelte</li>\n<li>CRDTs: Conflict-free Replicated
      Data Types for merging changes offline</li>\n<li>How to make a LiveView app
      work offline</li>\n<li>Sending full state updates vs. incremental updates for
      performance optimization</li>\n<li>Inspiring others through open-source projects
      and community contributions</li>\n<li>Learning vanilla Phoenix and Channels
      to understand LiveView better</li>\n<li>Handling stale CSRF tokens when reconnecting
      to a LiveView app offline</li>\n<li>Exploring service workers and browser APIs
      for managing offline connectivity</li>\n<li>Balancing the use of JavaScript
      and Elixir in web development</li>\n<li>Fostering a supportive and inspiring
      Elixir community</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://www.youtube.com/watch?v=PX9-lq0LL9Q\"
      rel=\"nofollow\">Working in Elevators: How to build an offline-enabled, real-time
      todo app</a> w/ LiveView, Svelte, &amp; Yjs<br>\nTony’s Twitter: <a href=\"https://x.com/tonydangblog\"
      rel=\"nofollow\">https://x.com/tonydangblog</a><br>\n<a href=\"https://liveview-svelte-pwa.fly.dev/\"
      rel=\"nofollow\">https://liveview-svelte-pwa.fly.dev/</a><br>\n<a href=\"https://github.com/tonydangblog/liveview-svelte-pwa\"
      rel=\"nofollow\">https://github.com/tonydangblog/liveview-svelte-pwa</a><br>\nCRDT:
      <a href=\"https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type</a>
      <br>\nPWA: <a href=\"https://en.wikipedia.org/wiki/Progressive_web_app\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Progressive_web_app</a>
      <br>\n<a href=\"https://github.com/josevalim/sync\" rel=\"nofollow\">https://github.com/josevalim/sync</a><br>\n<a
      href=\"https://github.com/sveltejs/svelte\" rel=\"nofollow\">https://github.com/sveltejs/svelte</a>
      <br>\n<a href=\"https://github.com/woutdp/live_svelte\" rel=\"nofollow\">https://github.com/woutdp/live_svelte</a>
      <br>\n<a href=\"https://github.com/yjs/yjs\" rel=\"nofollow\">https://github.com/yjs/yjs</a>
      <br>\n<a href=\"https://github.com/satoren/y_ex\" rel=\"nofollow\">https://github.com/satoren/y_ex</a>
      <br>\n<a href=\"https://github.com/y-crdt/y-crdt\" rel=\"nofollow\">https://github.com/y-crdt/y-crdt</a>
      <br>\n<a href=\"https://linear.app/\" rel=\"nofollow\">https://linear.app/</a><br>\n<a
      href=\"https://github.com/automerge/automerge\" rel=\"nofollow\">https://github.com/automerge/automerge</a>
      <br>\n<a href=\"https://hexdocs.pm/phoenix/1.4.0-rc.1/presence.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/1.4.0-rc.1/presence.html</a>
      <br>\n<a href=\"https://www.youtube.com/watch?v=n2c5eWIfziY\" rel=\"nofollow\">Vaxine,
      the Rich CRDT Database for ElixirPhoenix Apps</a> | James Arthur | Code BEAM
      America 2022<br>\n<a href=\"https://github.com/electric-sql/vaxine\" rel=\"nofollow\">https://github.com/electric-sql/vaxine</a>
      <br>\nHybrid Logical Clocks <a href=\"https://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html\"
      rel=\"nofollow\">https://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html</a>
      <br>\n<a href=\"https://en.wikipedia.org/wiki/256_(number)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/256_(number)</a><br>\nCSRF
      Tokens in LiveView <a href=\"https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#getconnectparams/1\"
      rel=\"nofollow\">https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#getconnectparams/1</a>
      <br>\n<a href=\"https://hexdocs.pm/phoenix/channels.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/channels.html</a>
      <br>\n<a href=\"https://www.youtube.com/playlist?list=PL8lFmBcH3vX-JNIgxW3THUy7REthSRFEI\"
      rel=\"nofollow\">Authentication with Passkeys</a> Talk by Tony<br>\n<a href=\"https://www.meetup.com/dc-elixir/\"
      rel=\"nofollow\">https://www.meetup.com/dc-elixir/</a><br>\n<a href=\"https://github.com/rails/rails\"
      rel=\"nofollow\">https://github.com/rails/rails</a> <br>\n<a href=\"https://github.com/facebook/react-native\"
      rel=\"nofollow\">https://github.com/facebook/react-native</a> <br>\n<a href=\"https://github.com/vuejs\"
      rel=\"nofollow\">https://github.com/vuejs</a> <br>\n<a href=\"https://github.com/laravel/laravel\"
      rel=\"nofollow\">https://github.com/laravel/laravel</a> <br>\n<a href=\"https://hexdocs.pm/phoenixliveview/js-interop.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenixliveview/js-interop.html</a> <br>\n<a
      href=\"https://github.com/inertiajs\" rel=\"nofollow\">https://github.com/inertiajs</a>
      <br>\n<a href=\"https://github.com/inertiajs/inertia-phoenix\" rel=\"nofollow\">https://github.com/inertiajs/inertia-phoenix</a>
      <br>\n<a href=\"https://savvycal.com/\" rel=\"nofollow\">https://savvycal.com/</a>
      <br>\n<a href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a><br>\n<a
      href=\"https://github.com/oban-bg/oban\" rel=\"nofollow\">https://github.com/oban-bg/oban</a>
      <br>\n<a href=\"https://github.com/joken-elixir/joken\" rel=\"nofollow\">https://github.com/joken-elixir/joken</a>
      <br>\n<a href=\"https://github.com/ExHammer/hammer\" rel=\"nofollow\">https://github.com/ExHammer/hammer</a></p><p>Special
      Guest: Tony Dang.</p>\n      "
  contentEncoded: "\n        <p>Today in the Creator’s Lab, Tony Dang joins Elixir
    Wizards Sundi Myint and Owen Bickford to break down his journey of creating a
    local-first, offline-ready to-do app using Phoenix LiveView, Svelte, and CRDTs
    (Conflict-free Replicated Data Types).</p>\n\n<p>Tony explains why offline functionality
    matters and how this feature can transform various apps. He shares insights on
    different libraries, algorithms, and techniques for building local-first experiences
    and highlights the advantages of Elixir and Phoenix LiveView.</p>\n\n<p>Tony also
    shares his go-to tools, like Inertia.js for connecting Phoenix backends with JavaScript
    frontends, and favorite Elixir packages like Oban, Joken, and Hammer, offering
    a toolkit for anyone building powerful, adaptable applications.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Tony Dang&#39;s background from mechanical
    engineer to web developer</li>\n<li>Building an offline-enabled to-do app with
    Phoenix LiveView and Svelte</li>\n<li>CRDTs: Conflict-free Replicated Data Types
    for merging changes offline</li>\n<li>How to make a LiveView app work offline</li>\n<li>Sending
    full state updates vs. incremental updates for performance optimization</li>\n<li>Inspiring
    others through open-source projects and community contributions</li>\n<li>Learning
    vanilla Phoenix and Channels to understand LiveView better</li>\n<li>Handling
    stale CSRF tokens when reconnecting to a LiveView app offline</li>\n<li>Exploring
    service workers and browser APIs for managing offline connectivity</li>\n<li>Balancing
    the use of JavaScript and Elixir in web development</li>\n<li>Fostering a supportive
    and inspiring Elixir community</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
    href=\"https://www.youtube.com/watch?v=PX9-lq0LL9Q\" rel=\"nofollow\">Working
    in Elevators: How to build an offline-enabled, real-time todo app</a> w/ LiveView,
    Svelte, &amp; Yjs<br>\nTony’s Twitter: <a href=\"https://x.com/tonydangblog\"
    rel=\"nofollow\">https://x.com/tonydangblog</a><br>\n<a href=\"https://liveview-svelte-pwa.fly.dev/\"
    rel=\"nofollow\">https://liveview-svelte-pwa.fly.dev/</a><br>\n<a href=\"https://github.com/tonydangblog/liveview-svelte-pwa\"
    rel=\"nofollow\">https://github.com/tonydangblog/liveview-svelte-pwa</a><br>\nCRDT:
    <a href=\"https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type</a>
    <br>\nPWA: <a href=\"https://en.wikipedia.org/wiki/Progressive_web_app\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Progressive_web_app</a>
    <br>\n<a href=\"https://github.com/josevalim/sync\" rel=\"nofollow\">https://github.com/josevalim/sync</a><br>\n<a
    href=\"https://github.com/sveltejs/svelte\" rel=\"nofollow\">https://github.com/sveltejs/svelte</a>
    <br>\n<a href=\"https://github.com/woutdp/live_svelte\" rel=\"nofollow\">https://github.com/woutdp/live_svelte</a>
    <br>\n<a href=\"https://github.com/yjs/yjs\" rel=\"nofollow\">https://github.com/yjs/yjs</a>
    <br>\n<a href=\"https://github.com/satoren/y_ex\" rel=\"nofollow\">https://github.com/satoren/y_ex</a>
    <br>\n<a href=\"https://github.com/y-crdt/y-crdt\" rel=\"nofollow\">https://github.com/y-crdt/y-crdt</a>
    <br>\n<a href=\"https://linear.app/\" rel=\"nofollow\">https://linear.app/</a><br>\n<a
    href=\"https://github.com/automerge/automerge\" rel=\"nofollow\">https://github.com/automerge/automerge</a>
    <br>\n<a href=\"https://hexdocs.pm/phoenix/1.4.0-rc.1/presence.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/1.4.0-rc.1/presence.html</a>
    <br>\n<a href=\"https://www.youtube.com/watch?v=n2c5eWIfziY\" rel=\"nofollow\">Vaxine,
    the Rich CRDT Database for ElixirPhoenix Apps</a> | James Arthur | Code BEAM America
    2022<br>\n<a href=\"https://github.com/electric-sql/vaxine\" rel=\"nofollow\">https://github.com/electric-sql/vaxine</a>
    <br>\nHybrid Logical Clocks <a href=\"https://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html\"
    rel=\"nofollow\">https://muratbuffalo.blogspot.com/2014/07/hybrid-logical-clocks.html</a>
    <br>\n<a href=\"https://en.wikipedia.org/wiki/256_(number)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/256_(number)</a><br>\nCSRF
    Tokens in LiveView <a href=\"https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#getconnectparams/1\"
    rel=\"nofollow\">https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#getconnectparams/1</a>
    <br>\n<a href=\"https://hexdocs.pm/phoenix/channels.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/channels.html</a>
    <br>\n<a href=\"https://www.youtube.com/playlist?list=PL8lFmBcH3vX-JNIgxW3THUy7REthSRFEI\"
    rel=\"nofollow\">Authentication with Passkeys</a> Talk by Tony<br>\n<a href=\"https://www.meetup.com/dc-elixir/\"
    rel=\"nofollow\">https://www.meetup.com/dc-elixir/</a><br>\n<a href=\"https://github.com/rails/rails\"
    rel=\"nofollow\">https://github.com/rails/rails</a> <br>\n<a href=\"https://github.com/facebook/react-native\"
    rel=\"nofollow\">https://github.com/facebook/react-native</a> <br>\n<a href=\"https://github.com/vuejs\"
    rel=\"nofollow\">https://github.com/vuejs</a> <br>\n<a href=\"https://github.com/laravel/laravel\"
    rel=\"nofollow\">https://github.com/laravel/laravel</a> <br>\n<a href=\"https://hexdocs.pm/phoenixliveview/js-interop.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenixliveview/js-interop.html</a> <br>\n<a
    href=\"https://github.com/inertiajs\" rel=\"nofollow\">https://github.com/inertiajs</a>
    <br>\n<a href=\"https://github.com/inertiajs/inertia-phoenix\" rel=\"nofollow\">https://github.com/inertiajs/inertia-phoenix</a>
    <br>\n<a href=\"https://savvycal.com/\" rel=\"nofollow\">https://savvycal.com/</a>
    <br>\n<a href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a><br>\n<a
    href=\"https://github.com/oban-bg/oban\" rel=\"nofollow\">https://github.com/oban-bg/oban</a>
    <br>\n<a href=\"https://github.com/joken-elixir/joken\" rel=\"nofollow\">https://github.com/joken-elixir/joken</a>
    <br>\n<a href=\"https://github.com/ExHammer/hammer\" rel=\"nofollow\">https://github.com/ExHammer/hammer</a></p><p>Special
    Guest: Tony Dang.</p>\n      "
- title: 'Creating VintageCell: Nerves, PCBs, and GenStateMachine with Bryan Green'
  slug: s13-e02-vintagecell-nerves-bryan-green
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e02-vintagecell-nerves-bryan-green
  guid: 51406e56-b785-416b-a0f9-71bcfd4154a6
  pubDate: Thu, 24 Oct 2024 06:00:00 -0400
  pubDateFriendly: October 24, 2024
  description: "Today on Elixir Wizards, Bryan Green shares how he transformed a vintage
    1930s rotary phone into a fully functional cell phone using Elixir, Nerves, and
    a mix of hardware components.\nBryan shares the highs and lows of his project,
    from decoding rotary dial clicks to troubleshooting hardware issues with LED outputs.
    He explains why Nerves was the perfect fit for this project, offering SSH access,
    over-the-air updates, and remote debugging. You’ll also hear how Elixir’s concurrency
    model helped him manage hardware inputs and outputs efficiently using GenStateMachine
    and Genservers.\nElixir and Nerves really shine when modeling real-world systems.
    Bryan dives into how he used a finite state machine to track the phone’s states
    and handled inputs from the rotary dial and hook switch via GPIO.\nFor hardware
    enthusiasts, Bryan’s advice is to embrace this “golden age” of DIY electronics.
    Whether you're experienced with embedded systems or just curious on where to start,
    Bryan's VintageCell can inspire you to tinker with a hardware engineering project.\nKey
    topics discussed in this episode:\nAdvantages of functional programming and immutability
    in Elixir\nBuilding hardware projects using Adafruit components\nWhy Nerves was
    the best choice for the VintageCell project\nInterpreting rotary dial clicks using
    GPIO and circuits.gpio\nTroubleshooting hardware issues with LED diagnostics\nChallenges
    in optimizing wiring and PCB design\nBenefits of Nerves: SSH access, OTA updates,
    and remote debugging\nModeling real-world systems with Elixir and Nerves\nImplementing
    a finite state machine with GenStateMachine\nManaging input with Genservers for
    rotary dial and hook switch\nLeveraging community resources like Discord, Elixir
    Slack, and forums\nPractical advice for keeping hardware projects on track\nPotential
    applications from SMS servers to home automation\nLinks mentioned:\nVintage Cellphone:
    Bridging the Past and Future with Elixir (https://www.youtube.com/watch?v=U4hetzVpjmo)\nSeven
    Languages in Seven Weeks https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/
    \nSeven More Languages https://pragprog.com/titles/7lang/seven-more-languages-in-seven-weeks/
    \nNode.js https://github.com/nodejs \nhttps://nerves-project.org/ \nhttps://www.arduino.cc/
    \nAdafruit Circuit Playground https://www.adafruit.com/category/965 \nAdafruit
    3D Printed Star Trek Communicator https://learn.adafruit.com/3d-printed-star-trek-communicator
    \nAdafruit FONA 3G Cellular + GPS Breakout https://learn.adafruit.com/adafruit-fona-3g-cellular-gps-breakout/overview
    \nhttps://github.com/elixir-circuits/circuitsgpio \nNerves SSH https://hex.pm/packages/nervesssh
    \nOTA (over-the-air) Updates with NervesHub https://www.nerves-hub.org/ \nhttps://github.com/kicad
    \nWaveshare 4G Hat for Raspberry Pi https://www.waveshare.com/sim7600e-h-4g-hat.htm
    \nhttps://hexdocs.pm/genstatemachine/GenStateMachine.html \nhttps://hexdocs.pm/elixir/GenServer.html
    \nhttps://www.sparkfun.com/ \nhttps://www.digikey.com/ \nUSB-C Gadget Mode with
    Nerves https://github.com/nerves-project/nervessystemrpi4/issues/18\nhttps://livebook.dev/
    \nhttps://codestorm.me/ \nhttps://github.com/codestorm1/vintage_cell/  Special
    Guest: Bryan Green.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Pm8_fKL9
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/51406e56-b785-416b-a0f9-71bcfd4154a6.mp3
    length: '42848010'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: Bryan Green shares how he transformed a vintage 1930s rotary phone into
      a fully functional cell phone using Elixir, Nerves, GenStateMachine, and a mix
      of hardware components.
    duration: '28:58'
    explicit: 'no'
    keywords: elixir, nerves, elixir programming language, hardware engineering, software
      engineering, circuit playground, adafruit, raspberry pi, genservers, genstatemachine,
      arduino, open source, electronics, electronic engineering, microcontroller,
      GPIO, general purpose input output, Embedded systems, Functional programming,
      IoT, Internet of Things, Firmware development, Prototyping, Elixirlang, Concurrency,
      Real-time systems, Maker community, PCB design, Digital signal processing (DSP),
      Peripheral interface, Serial communication, UART, Universal Asynchronous Receiver-Transmitter
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/51406e56-b785-416b-a0f9-71bcfd4154a6/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Bryan Green shares how he transformed
      a vintage 1930s rotary phone into a fully functional cell phone using Elixir,
      Nerves, and a mix of hardware components.</p>\n\n<p>Bryan shares the highs and
      lows of his project, from decoding rotary dial clicks to troubleshooting hardware
      issues with LED outputs. He explains why Nerves was the perfect fit for this
      project, offering SSH access, over-the-air updates, and remote debugging. You’ll
      also hear how Elixir’s concurrency model helped him manage hardware inputs and
      outputs efficiently using GenStateMachine and Genservers.</p>\n\n<p>Elixir and
      Nerves really shine when modeling real-world systems. Bryan dives into how he
      used a finite state machine to track the phone’s states and handled inputs from
      the rotary dial and hook switch via GPIO.</p>\n\n<p>For hardware enthusiasts,
      Bryan’s advice is to embrace this “golden age” of DIY electronics. Whether you&#39;re
      experienced with embedded systems or just curious on where to start, Bryan&#39;s
      VintageCell can inspire you to tinker with a hardware engineering project.</p>\n\n<h3>Key
      topics discussed in this episode:</h3>\n\n<ul>\n<li>Advantages of functional
      programming and immutability in Elixir</li>\n<li>Building hardware projects
      using Adafruit components</li>\n<li>Why Nerves was the best choice for the VintageCell
      project</li>\n<li>Interpreting rotary dial clicks using GPIO and circuits.gpio</li>\n<li>Troubleshooting
      hardware issues with LED diagnostics</li>\n<li>Challenges in optimizing wiring
      and PCB design</li>\n<li>Benefits of Nerves: SSH access, OTA updates, and remote
      debugging</li>\n<li>Modeling real-world systems with Elixir and Nerves</li>\n<li>Implementing
      a finite state machine with GenStateMachine</li>\n<li>Managing input with Genservers
      for rotary dial and hook switch</li>\n<li>Leveraging community resources like
      Discord, Elixir Slack, and forums</li>\n<li>Practical advice for keeping hardware
      projects on track</li>\n<li>Potential applications from SMS servers to home
      automation</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://www.youtube.com/watch?v=U4hetzVpjmo\"
      rel=\"nofollow\">Vintage Cellphone: Bridging the Past and Future with Elixir</a><br>\nSeven
      Languages in Seven Weeks <a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
      rel=\"nofollow\">https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/</a>
      <br>\nSeven More Languages <a href=\"https://pragprog.com/titles/7lang/seven-more-languages-in-seven-weeks/\"
      rel=\"nofollow\">https://pragprog.com/titles/7lang/seven-more-languages-in-seven-weeks/</a>
      <br>\nNode.js <a href=\"https://github.com/nodejs\" rel=\"nofollow\">https://github.com/nodejs</a>
      <br>\n<a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a>
      <br>\n<a href=\"https://www.arduino.cc/\" rel=\"nofollow\">https://www.arduino.cc/</a>
      <br>\nAdafruit Circuit Playground <a href=\"https://www.adafruit.com/category/965\"
      rel=\"nofollow\">https://www.adafruit.com/category/965</a> <br>\nAdafruit 3D
      Printed Star Trek Communicator <a href=\"https://learn.adafruit.com/3d-printed-star-trek-communicator\"
      rel=\"nofollow\">https://learn.adafruit.com/3d-printed-star-trek-communicator</a>
      <br>\nAdafruit FONA 3G Cellular + GPS Breakout <a href=\"https://learn.adafruit.com/adafruit-fona-3g-cellular-gps-breakout/overview\"
      rel=\"nofollow\">https://learn.adafruit.com/adafruit-fona-3g-cellular-gps-breakout/overview</a>
      <br>\n<a href=\"https://github.com/elixir-circuits/circuits_gpio\" rel=\"nofollow\">https://github.com/elixir-circuits/circuits_gpio</a>
      <br>\nNerves SSH <a href=\"https://hex.pm/packages/nerves_ssh\" rel=\"nofollow\">https://hex.pm/packages/nerves_ssh</a>
      <br>\nOTA (over-the-air) Updates with NervesHub <a href=\"https://www.nerves-hub.org/\"
      rel=\"nofollow\">https://www.nerves-hub.org/</a> <br>\n<a href=\"https://github.com/kicad\"
      rel=\"nofollow\">https://github.com/kicad</a> <br>\nWaveshare 4G Hat for Raspberry
      Pi <a href=\"https://www.waveshare.com/sim7600e-h-4g-hat.htm\" rel=\"nofollow\">https://www.waveshare.com/sim7600e-h-4g-hat.htm</a>
      <br>\n<a href=\"https://hexdocs.pm/gen_state_machine/GenStateMachine.html\"
      rel=\"nofollow\">https://hexdocs.pm/gen_state_machine/GenStateMachine.html</a>
      <br>\n<a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/GenServer.html</a>
      <br>\n<a href=\"https://www.sparkfun.com/\" rel=\"nofollow\">https://www.sparkfun.com/</a>
      <br>\n<a href=\"https://www.digikey.com/\" rel=\"nofollow\">https://www.digikey.com/</a>
      <br>\nUSB-C Gadget Mode with Nerves <a href=\"https://github.com/nerves-project/nerves_system_rpi4/issues/18\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves_system_rpi4/issues/18</a><br>\n<a
      href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a> <br>\n<a
      href=\"https://codestorm.me/\" rel=\"nofollow\">https://codestorm.me/</a> <br>\n<a
      href=\"https://github.com/codestorm1/vintage_cell/\" rel=\"nofollow\">https://github.com/codestorm1/vintage_cell/</a>
      </p><p>Special Guest: Bryan Green.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Bryan Green shares how he
    transformed a vintage 1930s rotary phone into a fully functional cell phone using
    Elixir, Nerves, and a mix of hardware components.</p>\n\n<p>Bryan shares the highs
    and lows of his project, from decoding rotary dial clicks to troubleshooting hardware
    issues with LED outputs. He explains why Nerves was the perfect fit for this project,
    offering SSH access, over-the-air updates, and remote debugging. You’ll also hear
    how Elixir’s concurrency model helped him manage hardware inputs and outputs efficiently
    using GenStateMachine and Genservers.</p>\n\n<p>Elixir and Nerves really shine
    when modeling real-world systems. Bryan dives into how he used a finite state
    machine to track the phone’s states and handled inputs from the rotary dial and
    hook switch via GPIO.</p>\n\n<p>For hardware enthusiasts, Bryan’s advice is to
    embrace this “golden age” of DIY electronics. Whether you&#39;re experienced with
    embedded systems or just curious on where to start, Bryan&#39;s VintageCell can
    inspire you to tinker with a hardware engineering project.</p>\n\n<h3>Key topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Advantages of functional programming
    and immutability in Elixir</li>\n<li>Building hardware projects using Adafruit
    components</li>\n<li>Why Nerves was the best choice for the VintageCell project</li>\n<li>Interpreting
    rotary dial clicks using GPIO and circuits.gpio</li>\n<li>Troubleshooting hardware
    issues with LED diagnostics</li>\n<li>Challenges in optimizing wiring and PCB
    design</li>\n<li>Benefits of Nerves: SSH access, OTA updates, and remote debugging</li>\n<li>Modeling
    real-world systems with Elixir and Nerves</li>\n<li>Implementing a finite state
    machine with GenStateMachine</li>\n<li>Managing input with Genservers for rotary
    dial and hook switch</li>\n<li>Leveraging community resources like Discord, Elixir
    Slack, and forums</li>\n<li>Practical advice for keeping hardware projects on
    track</li>\n<li>Potential applications from SMS servers to home automation</li>\n</ul>\n\n<h3>Links
    mentioned:</h3>\n\n<p><a href=\"https://www.youtube.com/watch?v=U4hetzVpjmo\"
    rel=\"nofollow\">Vintage Cellphone: Bridging the Past and Future with Elixir</a><br>\nSeven
    Languages in Seven Weeks <a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
    rel=\"nofollow\">https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/</a>
    <br>\nSeven More Languages <a href=\"https://pragprog.com/titles/7lang/seven-more-languages-in-seven-weeks/\"
    rel=\"nofollow\">https://pragprog.com/titles/7lang/seven-more-languages-in-seven-weeks/</a>
    <br>\nNode.js <a href=\"https://github.com/nodejs\" rel=\"nofollow\">https://github.com/nodejs</a>
    <br>\n<a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a>
    <br>\n<a href=\"https://www.arduino.cc/\" rel=\"nofollow\">https://www.arduino.cc/</a>
    <br>\nAdafruit Circuit Playground <a href=\"https://www.adafruit.com/category/965\"
    rel=\"nofollow\">https://www.adafruit.com/category/965</a> <br>\nAdafruit 3D Printed
    Star Trek Communicator <a href=\"https://learn.adafruit.com/3d-printed-star-trek-communicator\"
    rel=\"nofollow\">https://learn.adafruit.com/3d-printed-star-trek-communicator</a>
    <br>\nAdafruit FONA 3G Cellular + GPS Breakout <a href=\"https://learn.adafruit.com/adafruit-fona-3g-cellular-gps-breakout/overview\"
    rel=\"nofollow\">https://learn.adafruit.com/adafruit-fona-3g-cellular-gps-breakout/overview</a>
    <br>\n<a href=\"https://github.com/elixir-circuits/circuits_gpio\" rel=\"nofollow\">https://github.com/elixir-circuits/circuits_gpio</a>
    <br>\nNerves SSH <a href=\"https://hex.pm/packages/nerves_ssh\" rel=\"nofollow\">https://hex.pm/packages/nerves_ssh</a>
    <br>\nOTA (over-the-air) Updates with NervesHub <a href=\"https://www.nerves-hub.org/\"
    rel=\"nofollow\">https://www.nerves-hub.org/</a> <br>\n<a href=\"https://github.com/kicad\"
    rel=\"nofollow\">https://github.com/kicad</a> <br>\nWaveshare 4G Hat for Raspberry
    Pi <a href=\"https://www.waveshare.com/sim7600e-h-4g-hat.htm\" rel=\"nofollow\">https://www.waveshare.com/sim7600e-h-4g-hat.htm</a>
    <br>\n<a href=\"https://hexdocs.pm/gen_state_machine/GenStateMachine.html\" rel=\"nofollow\">https://hexdocs.pm/gen_state_machine/GenStateMachine.html</a>
    <br>\n<a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/GenServer.html</a>
    <br>\n<a href=\"https://www.sparkfun.com/\" rel=\"nofollow\">https://www.sparkfun.com/</a>
    <br>\n<a href=\"https://www.digikey.com/\" rel=\"nofollow\">https://www.digikey.com/</a>
    <br>\nUSB-C Gadget Mode with Nerves <a href=\"https://github.com/nerves-project/nerves_system_rpi4/issues/18\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves_system_rpi4/issues/18</a><br>\n<a
    href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a> <br>\n<a
    href=\"https://codestorm.me/\" rel=\"nofollow\">https://codestorm.me/</a> <br>\n<a
    href=\"https://github.com/codestorm1/vintage_cell/\" rel=\"nofollow\">https://github.com/codestorm1/vintage_cell/</a>
    </p><p>Special Guest: Bryan Green.</p>\n      "
- title: Creating the Igniter Code Generation Framework with Zach Daniel
  slug: s13-e01-igniter-code-generation-zach-daniel
  link: https://smartlogic.io/podcast/elixir-wizards/s13-e01-igniter-code-generation-zach-daniel
  guid: 1690d1d5-3359-4ede-8932-46c4bb244eef
  pubDate: Thu, 17 Oct 2024 06:00:00 -0400
  pubDateFriendly: October 17, 2024
  description: |
    To kick off Elixir Wizards Season 13, The Creator's Lab, we're joined by Zach Daniel, the creator of Igniter and the Ash framework. Zach joins hosts Owen Bickford and Charles Suggs to discuss the mechanics and aspirations of his latest brainchild, Igniter—a code generation and project patching framework designed to revolutionize the Elixir development experience.
    Igniter isn’t just about generating code; it’s about generating smarter code. By leveraging tools like Sourcerer and Rewrite, Igniter allows developers to modify source code and batch updates by directly interacting with Elixir's AST instead of regex patching. This approach streamlines new project setup and package installations and enhances overall workflow.
    They also discuss the strategic implications of Igniter for the broader Elixir community. Zach hopes Igniter will foster a more interconnected and efficient ecosystem that attracts new developers to Elixir and caters to the evolving needs of seasoned Elixir engineers.
    Topics discussed in this episode:
    Advanced package installation and code generation improve the developer experience
    Scripting and staging techniques streamline project updates
    Innovative methods for smoother installation processes in Elixir packages
    High-level tools apply direct patches to source code
    Progressive feature additions simplify the  mix phx.new experience
    Chaining installers and composing tasks for more efficient project setup
    Continuous improvement in developer experiences to boost Elixir adoption
    Encourage listeners to collaborate by sharing code generation patterns
    Introduction of a new mix task aimed at removing the "unless" keyword in preparation for Elixir 1.18
    You can learn more in the upcoming book "Building Web Applications with Ash Framework" by Zach and Rebecca
    Links mentioned:
    https://smartlogic.io/
    https://alembic.com.au/blog/igniter-rethinking-code-generation-with-project-patching
    https://hexdocs.pm/igniter/readme.html
    https://github.com/ash-project/igniter
    https://www.zachdaniel.dev/p/serialization-is-the-secret
    https://www.zachdaniel.dev/p/welcome-to-my-substack
    https://ash-hq.org/
    https://hexdocs.pm/sourceror/readme.html
    https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community/
    https://github.com/hrzndhrn/rewrite
    https://github.com/zachdaniel
    https://github.com/liveshowy/webauthn_components
    https://hexdocs.pm/elixir/Regex.html
    https://github.com/msaraiva/vscode-surface
    https://github.com/swoosh/swoosh
    https://github.com/erlef/oidcc
    https://alembic.com.au/
    https://www.zachdaniel.dev/
     Special Guest: Zach Daniel.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+s8PyjjlO
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1690d1d5-3359-4ede-8932-46c4bb244eef.mp3
    length: '77113638'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '13'
    author: SmartLogic LLC
    subtitle: To kick off Elixir Wizards Season 13, The Creator's Lab, we're joined
      by Zach Daniel, the creator of Igniter and the Ash framework. Zach joins hosts
      Owen Bickford and Charles Suggs to discuss the mechanics and aspirations of
      his latest brainchild, Igniter—a code generation and project patching framework
      designed to revolutionize the Elixir development experience.
    duration: '52:55'
    explicit: 'no'
    keywords: Elixir, Phoenix, LiveView, Ash Framework, Igniter, Automation, Code
      Generation, Code Patching, Dependency Management, programming, software development,
      app development, backend development, programming paradigms, functional programming,
      Erlang, package management, deployment, software engineering, web application
      development, tech innovation, Elixir libraries, project automation, developer
      tools, mix tasks, Elixir ecosystem, system architecture, cloud deployment, Elixir
      for enterprise, scalable systems, concurrency, OTP, BEAM VM, distributed systems,
      Elixir modules, project configuration, code refactoring, source code, scripting,
      DevOps, continuous integration, continuous deployment, CI/CD pipelines, API
      development, web services, open-source software, code maintenance, software
      lifecycle, tech stack, debugging, performance optimization, server-side rendering,
      version control, git, GitHub, code collaboration, Elixir community, open-source
      contributions, software tutorials, tech webinars, programming blogs, tech podcasts,
      software patterns, architectural design, clean code, tech meetups, agile development,
      SCRUM, tech conferences, software documentation, software testing, unit tests,
      integration testing, system testing, test-driven development, Elixir performance,
      Phoenix framework features, real-time applications, security in software, software
      compliance, software best practices, code reviews, refactoring techniques, software
      scalability, load balancing, fault tolerance, state management, process supervision,
      tech leadership, Elixir training, Elixir workshops, code camps, developer advocacy,
      coding standards, software project management, tech project planning
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1690d1d5-3359-4ede-8932-46c4bb244eef/cover.jpg?v=1
    summary: "\n        <p>To kick off Elixir Wizards Season 13, The Creator&#39;s
      Lab, we&#39;re joined by Zach Daniel, the creator of Igniter and the Ash framework.
      Zach joins hosts Owen Bickford and Charles Suggs to discuss the mechanics and
      aspirations of his latest brainchild, Igniter—a code generation and project
      patching framework designed to revolutionize the Elixir development experience.</p>\n\n<p>Igniter
      isn’t just about generating code; it’s about generating smarter code. By leveraging
      tools like Sourcerer and Rewrite, Igniter allows developers to modify source
      code and batch updates by directly interacting with Elixir&#39;s AST instead
      of regex patching. This approach streamlines new project setup and package installations
      and enhances overall workflow.</p>\n\n<p>They also discuss the strategic implications
      of Igniter for the broader Elixir community. Zach hopes Igniter will foster
      a more interconnected and efficient ecosystem that attracts new developers to
      Elixir and caters to the evolving needs of seasoned Elixir engineers.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Advanced package installation and
      code generation improve the developer experience</li>\n<li>Scripting and staging
      techniques streamline project updates</li>\n<li>Innovative methods for smoother
      installation processes in Elixir packages</li>\n<li>High-level tools apply direct
      patches to source code</li>\n<li>Progressive feature additions simplify the
      \ mix phx.new experience</li>\n<li>Chaining installers and composing tasks for
      more efficient project setup</li>\n<li>Continuous improvement in developer experiences
      to boost Elixir adoption</li>\n<li>Encourage listeners to collaborate by sharing
      code generation patterns</li>\n<li>Introduction of a new mix task aimed at removing
      the &quot;unless&quot; keyword in preparation for Elixir 1.18</li>\n<li>You
      can learn more in the upcoming book &quot;Building Web Applications with Ash
      Framework&quot; by Zach and Rebecca</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
      href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\n<a
      href=\"https://alembic.com.au/blog/igniter-rethinking-code-generation-with-project-patching\"
      rel=\"nofollow\">https://alembic.com.au/blog/igniter-rethinking-code-generation-with-project-patching</a><br>\n<a
      href=\"https://hexdocs.pm/igniter/readme.html\" rel=\"nofollow\">https://hexdocs.pm/igniter/readme.html</a><br>\n<a
      href=\"https://github.com/ash-project/igniter\" rel=\"nofollow\">https://github.com/ash-project/igniter</a><br>\n<a
      href=\"https://www.zachdaniel.dev/p/serialization-is-the-secret\" rel=\"nofollow\">https://www.zachdaniel.dev/p/serialization-is-the-secret</a><br>\n<a
      href=\"https://www.zachdaniel.dev/p/welcome-to-my-substack\" rel=\"nofollow\">https://www.zachdaniel.dev/p/welcome-to-my-substack</a><br>\n<a
      href=\"https://ash-hq.org/\" rel=\"nofollow\">https://ash-hq.org/</a><br>\n<a
      href=\"https://hexdocs.pm/sourceror/readme.html\" rel=\"nofollow\">https://hexdocs.pm/sourceror/readme.html</a><br>\n<a
      href=\"https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community/</a><br>\n<a
      href=\"https://github.com/hrzndhrn/rewrite\" rel=\"nofollow\">https://github.com/hrzndhrn/rewrite</a><br>\n<a
      href=\"https://github.com/zachdaniel\" rel=\"nofollow\">https://github.com/zachdaniel</a><br>\n<a
      href=\"https://github.com/liveshowy/webauthn_components\" rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\n<a
      href=\"https://hexdocs.pm/elixir/Regex.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Regex.html</a><br>\n<a
      href=\"https://github.com/msaraiva/vscode-surface\" rel=\"nofollow\">https://github.com/msaraiva/vscode-surface</a><br>\n<a
      href=\"https://github.com/swoosh/swoosh\" rel=\"nofollow\">https://github.com/swoosh/swoosh</a><br>\n<a
      href=\"https://github.com/erlef/oidcc\" rel=\"nofollow\">https://github.com/erlef/oidcc</a><br>\n<a
      href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\n<a
      href=\"https://www.zachdaniel.dev/\" rel=\"nofollow\">https://www.zachdaniel.dev/</a></p><p>Special
      Guest: Zach Daniel.</p>\n      "
  contentEncoded: "\n        <p>To kick off Elixir Wizards Season 13, The Creator&#39;s
    Lab, we&#39;re joined by Zach Daniel, the creator of Igniter and the Ash framework.
    Zach joins hosts Owen Bickford and Charles Suggs to discuss the mechanics and
    aspirations of his latest brainchild, Igniter—a code generation and project patching
    framework designed to revolutionize the Elixir development experience.</p>\n\n<p>Igniter
    isn’t just about generating code; it’s about generating smarter code. By leveraging
    tools like Sourcerer and Rewrite, Igniter allows developers to modify source code
    and batch updates by directly interacting with Elixir&#39;s AST instead of regex
    patching. This approach streamlines new project setup and package installations
    and enhances overall workflow.</p>\n\n<p>They also discuss the strategic implications
    of Igniter for the broader Elixir community. Zach hopes Igniter will foster a
    more interconnected and efficient ecosystem that attracts new developers to Elixir
    and caters to the evolving needs of seasoned Elixir engineers.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Advanced package installation and
    code generation improve the developer experience</li>\n<li>Scripting and staging
    techniques streamline project updates</li>\n<li>Innovative methods for smoother
    installation processes in Elixir packages</li>\n<li>High-level tools apply direct
    patches to source code</li>\n<li>Progressive feature additions simplify the  mix
    phx.new experience</li>\n<li>Chaining installers and composing tasks for more
    efficient project setup</li>\n<li>Continuous improvement in developer experiences
    to boost Elixir adoption</li>\n<li>Encourage listeners to collaborate by sharing
    code generation patterns</li>\n<li>Introduction of a new mix task aimed at removing
    the &quot;unless&quot; keyword in preparation for Elixir 1.18</li>\n<li>You can
    learn more in the upcoming book &quot;Building Web Applications with Ash Framework&quot;
    by Zach and Rebecca</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\n<a href=\"https://alembic.com.au/blog/igniter-rethinking-code-generation-with-project-patching\"
    rel=\"nofollow\">https://alembic.com.au/blog/igniter-rethinking-code-generation-with-project-patching</a><br>\n<a
    href=\"https://hexdocs.pm/igniter/readme.html\" rel=\"nofollow\">https://hexdocs.pm/igniter/readme.html</a><br>\n<a
    href=\"https://github.com/ash-project/igniter\" rel=\"nofollow\">https://github.com/ash-project/igniter</a><br>\n<a
    href=\"https://www.zachdaniel.dev/p/serialization-is-the-secret\" rel=\"nofollow\">https://www.zachdaniel.dev/p/serialization-is-the-secret</a><br>\n<a
    href=\"https://www.zachdaniel.dev/p/welcome-to-my-substack\" rel=\"nofollow\">https://www.zachdaniel.dev/p/welcome-to-my-substack</a><br>\n<a
    href=\"https://ash-hq.org/\" rel=\"nofollow\">https://ash-hq.org/</a><br>\n<a
    href=\"https://hexdocs.pm/sourceror/readme.html\" rel=\"nofollow\">https://hexdocs.pm/sourceror/readme.html</a><br>\n<a
    href=\"https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community/</a><br>\n<a
    href=\"https://github.com/hrzndhrn/rewrite\" rel=\"nofollow\">https://github.com/hrzndhrn/rewrite</a><br>\n<a
    href=\"https://github.com/zachdaniel\" rel=\"nofollow\">https://github.com/zachdaniel</a><br>\n<a
    href=\"https://github.com/liveshowy/webauthn_components\" rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\n<a
    href=\"https://hexdocs.pm/elixir/Regex.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Regex.html</a><br>\n<a
    href=\"https://github.com/msaraiva/vscode-surface\" rel=\"nofollow\">https://github.com/msaraiva/vscode-surface</a><br>\n<a
    href=\"https://github.com/swoosh/swoosh\" rel=\"nofollow\">https://github.com/swoosh/swoosh</a><br>\n<a
    href=\"https://github.com/erlef/oidcc\" rel=\"nofollow\">https://github.com/erlef/oidcc</a><br>\n<a
    href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\n<a
    href=\"https://www.zachdaniel.dev/\" rel=\"nofollow\">https://www.zachdaniel.dev/</a></p><p>Special
    Guest: Zach Daniel.</p>\n      "
- title: Elixir Wizards X Thinking Elixir ElixirConf 2024 Hype-isode
  slug: elixirconf2024-hype-isode
  link: https://smartlogic.io/podcast/elixir-wizards/elixirconf2024-hype-isode
  guid: e949c9e7-2cd1-4f95-87bd-102312007081
  pubDate: Tue, 23 Jul 2024 06:00:00 -0400
  pubDateFriendly: July 23, 2024
  description: |
    The Elixir Wizards and Thinking Elixir podcasts join forces to bring you a special hype-isode for ElixirConf 2024 in Orlando, Florida. Hosts Owen, Sundi, David, and Mark discuss their favorite moments from past conferences and offer a sneak peek into what this year's event has in store.
    From insightful training classes to thought-provoking talks on topics like LiveView, data processing, Nerves, and machine learning—there's something for every Elixirist and Elixir-curious software developer. In this episode, we share tips on making the most of the conference, whether you're there to network, learn, or just soak in the community vibes.
    Want to attend ElixirConf in Orlando from August 27th-30th, 2024? Use code ELIXIRPODCAST at checkout to get a $50 discount on your tickets here: https://ti.to/elixirconf/2024
    Key topics discussed in this episode:
    Favorite moments and experiences from previous ElixirConf events
    How to network and make the most of your conference attendance
    Training classes and talks we're looking forward to this year
    Keynotes from prominent Elixir community figures
    Chris McCord's keynote: TBD (Could it be a LiveView 1.0 announcement?!)
    Benefits of attending ElixirConf: learning, networking, community immersion
    Virtual attendance options for those unable to attend in person
    Early bird ticket prices and special discount code "ELIXIRPODCAST" for $50 off
    Why you should step out of your comfort zone and engage with others
    Passion and energy of Elixir community members at ElixirConf
    Mentorship opportunities: connect with experienced Elixir developers
    Exploring Orlando attractions during ElixirConf 2024 downtime
    An invitation to join us at ElixirConf 2024 and immerse yourself in the Elixir community
    Links mentioned:
    https://2024.elixirconf.com/
    https://hexdocs.pm/ecto/Ecto.html
    https://fly.io/
    https://brainlid.org/
    https://github.com/brainlid/
    https://www.meetup.com/austin-elixir/
    https://grox.io/
    https://hexdocs.pm/phoenixliveview/Phoenix.Component.html
    https://opentelemetry.io/docs/languages/erlang/
    https://ash-hq.org/
    https://alembic.com.au/
    Functional IoT with Elixir and Nerves - Justin Schneck | Craft 2019 (https://www.youtube.com/watch?v=mrpQHZcy3CI)
    https://docs.nerves-hub.org/
    https://nerves-project.org/
    https://getoban.pro/
    https://hexdocs.pm/broadway/Broadway.html
    https://developer.farm.bot/v15/docs/farmbot-os.html
    Leaving Everything Behind For Elixir (https://www.youtube.com/watch?v=u2WciH6rAFg) - Theo’s video
    Phoenix LiveView Is Making Me Reconsider React...  (https://youtu.be/aOk67eT3fpg?si=MTxtIv-xmuJZYbup)- Theo’s other video
    Podcast: Thinking Elixir 206: BeamOps - DevOps on the BEAM (https://podcast.thinkingelixir.com/206) Special Guests: David Bernheisel and Mark Ericksen.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+yfEE73SF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e949c9e7-2cd1-4f95-87bd-102312007081.mp3
    length: '87463464'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: The Elixir Wizards and Thinking Elixir podcasts join forces to bring
      you a special hype-isode for ElixirConf 2024 in Orlando, Florida. Hosts Owen,
      Sundi, David, and Mark discuss their favorite moments from past conferences
      and offer a sneak peek into what this year's event has in store.
    duration: '59:50'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e949c9e7-2cd1-4f95-87bd-102312007081/cover.jpg?v=1
    summary: "\n        <p>The Elixir Wizards and Thinking Elixir podcasts join forces
      to bring you a special hype-isode for ElixirConf 2024 in Orlando, Florida. Hosts
      Owen, Sundi, David, and Mark discuss their favorite moments from past conferences
      and offer a sneak peek into what this year&#39;s event has in store.</p>\n\n<p>From
      insightful training classes to thought-provoking talks on topics like LiveView,
      data processing, Nerves, and machine learning—there&#39;s something for every
      Elixirist and Elixir-curious software developer. In this episode, we share tips
      on making the most of the conference, whether you&#39;re there to network, learn,
      or just soak in the community vibes.</p>\n\n<p>Want to attend ElixirConf in
      Orlando from August 27th-30th, 2024? Use code ELIXIRPODCAST at checkout to get
      a $50 discount on your tickets here: <a href=\"https://ti.to/elixirconf/2024\"
      rel=\"nofollow\">https://ti.to/elixirconf/2024</a></p>\n\n<h3>Key topics discussed
      in this episode:</h3>\n\n<ul>\n<li>Favorite moments and experiences from previous
      ElixirConf events</li>\n<li>How to network and make the most of your conference
      attendance</li>\n<li>Training classes and talks we&#39;re looking forward to
      this year</li>\n<li>Keynotes from prominent Elixir community figures</li>\n<li>Chris
      McCord&#39;s keynote: TBD (Could it be a LiveView 1.0 announcement?!)</li>\n<li>Benefits
      of attending ElixirConf: learning, networking, community immersion</li>\n<li>Virtual
      attendance options for those unable to attend in person</li>\n<li>Early bird
      ticket prices and special discount code &quot;ELIXIRPODCAST&quot; for $50 off</li>\n<li>Why
      you should step out of your comfort zone and engage with others</li>\n<li>Passion
      and energy of Elixir community members at ElixirConf</li>\n<li>Mentorship opportunities:
      connect with experienced Elixir developers</li>\n<li>Exploring Orlando attractions
      during ElixirConf 2024 downtime</li>\n<li>An invitation to join us at ElixirConf
      2024 and immerse yourself in the Elixir community</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
      href=\"https://2024.elixirconf.com/\" rel=\"nofollow\">https://2024.elixirconf.com/</a><br>\n<a
      href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\n<a
      href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://brainlid.org/\"
      rel=\"nofollow\">https://brainlid.org/</a><br>\n<a href=\"https://github.com/brainlid/\"
      rel=\"nofollow\">https://github.com/brainlid/</a><br>\n<a href=\"https://www.meetup.com/austin-elixir/\"
      rel=\"nofollow\">https://www.meetup.com/austin-elixir/</a><br>\n<a href=\"https://grox.io/\"
      rel=\"nofollow\">https://grox.io/</a><br>\n<a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.Component.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.Component.html</a><br>\n<a
      href=\"https://opentelemetry.io/docs/languages/erlang/\" rel=\"nofollow\">https://opentelemetry.io/docs/languages/erlang/</a><br>\n<a
      href=\"https://ash-hq.org/\" rel=\"nofollow\">https://ash-hq.org/</a><br>\n<a
      href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\n<a
      href=\"https://www.youtube.com/watch?v=mrpQHZcy3CI\" rel=\"nofollow\">Functional
      IoT with Elixir and Nerves - Justin Schneck | Craft 2019</a><br>\n<a href=\"https://docs.nerves-hub.org/\"
      rel=\"nofollow\">https://docs.nerves-hub.org/</a><br>\n<a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a><br>\n<a href=\"https://getoban.pro/\"
      rel=\"nofollow\">https://getoban.pro/</a><br>\n<a href=\"https://hexdocs.pm/broadway/Broadway.html\"
      rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a><br>\n<a href=\"https://developer.farm.bot/v15/docs/farmbot-os.html\"
      rel=\"nofollow\">https://developer.farm.bot/v15/docs/farmbot-os.html</a><br>\n<a
      href=\"https://www.youtube.com/watch?v=u2WciH6rAFg\" rel=\"nofollow\">Leaving
      Everything Behind For Elixir</a> - Theo’s video<br>\n<a href=\"https://youtu.be/aOk67eT3fpg?si=MTxtIv-xmuJZYbup\"
      rel=\"nofollow\">Phoenix LiveView Is Making Me Reconsider React... </a>- Theo’s
      other video<br>\n<a href=\"https://podcast.thinkingelixir.com/206\" rel=\"nofollow\">Podcast:
      Thinking Elixir 206: BeamOps - DevOps on the BEAM</a></p><p>Special Guests:
      David Bernheisel and Mark Ericksen.</p>\n      "
  contentEncoded: "\n        <p>The Elixir Wizards and Thinking Elixir podcasts join
    forces to bring you a special hype-isode for ElixirConf 2024 in Orlando, Florida.
    Hosts Owen, Sundi, David, and Mark discuss their favorite moments from past conferences
    and offer a sneak peek into what this year&#39;s event has in store.</p>\n\n<p>From
    insightful training classes to thought-provoking talks on topics like LiveView,
    data processing, Nerves, and machine learning—there&#39;s something for every
    Elixirist and Elixir-curious software developer. In this episode, we share tips
    on making the most of the conference, whether you&#39;re there to network, learn,
    or just soak in the community vibes.</p>\n\n<p>Want to attend ElixirConf in Orlando
    from August 27th-30th, 2024? Use code ELIXIRPODCAST at checkout to get a $50 discount
    on your tickets here: <a href=\"https://ti.to/elixirconf/2024\" rel=\"nofollow\">https://ti.to/elixirconf/2024</a></p>\n\n<h3>Key
    topics discussed in this episode:</h3>\n\n<ul>\n<li>Favorite moments and experiences
    from previous ElixirConf events</li>\n<li>How to network and make the most of
    your conference attendance</li>\n<li>Training classes and talks we&#39;re looking
    forward to this year</li>\n<li>Keynotes from prominent Elixir community figures</li>\n<li>Chris
    McCord&#39;s keynote: TBD (Could it be a LiveView 1.0 announcement?!)</li>\n<li>Benefits
    of attending ElixirConf: learning, networking, community immersion</li>\n<li>Virtual
    attendance options for those unable to attend in person</li>\n<li>Early bird ticket
    prices and special discount code &quot;ELIXIRPODCAST&quot; for $50 off</li>\n<li>Why
    you should step out of your comfort zone and engage with others</li>\n<li>Passion
    and energy of Elixir community members at ElixirConf</li>\n<li>Mentorship opportunities:
    connect with experienced Elixir developers</li>\n<li>Exploring Orlando attractions
    during ElixirConf 2024 downtime</li>\n<li>An invitation to join us at ElixirConf
    2024 and immerse yourself in the Elixir community</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a
    href=\"https://2024.elixirconf.com/\" rel=\"nofollow\">https://2024.elixirconf.com/</a><br>\n<a
    href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\n<a
    href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://brainlid.org/\"
    rel=\"nofollow\">https://brainlid.org/</a><br>\n<a href=\"https://github.com/brainlid/\"
    rel=\"nofollow\">https://github.com/brainlid/</a><br>\n<a href=\"https://www.meetup.com/austin-elixir/\"
    rel=\"nofollow\">https://www.meetup.com/austin-elixir/</a><br>\n<a href=\"https://grox.io/\"
    rel=\"nofollow\">https://grox.io/</a><br>\n<a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.Component.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.Component.html</a><br>\n<a
    href=\"https://opentelemetry.io/docs/languages/erlang/\" rel=\"nofollow\">https://opentelemetry.io/docs/languages/erlang/</a><br>\n<a
    href=\"https://ash-hq.org/\" rel=\"nofollow\">https://ash-hq.org/</a><br>\n<a
    href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\n<a
    href=\"https://www.youtube.com/watch?v=mrpQHZcy3CI\" rel=\"nofollow\">Functional
    IoT with Elixir and Nerves - Justin Schneck | Craft 2019</a><br>\n<a href=\"https://docs.nerves-hub.org/\"
    rel=\"nofollow\">https://docs.nerves-hub.org/</a><br>\n<a href=\"https://nerves-project.org/\"
    rel=\"nofollow\">https://nerves-project.org/</a><br>\n<a href=\"https://getoban.pro/\"
    rel=\"nofollow\">https://getoban.pro/</a><br>\n<a href=\"https://hexdocs.pm/broadway/Broadway.html\"
    rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a><br>\n<a href=\"https://developer.farm.bot/v15/docs/farmbot-os.html\"
    rel=\"nofollow\">https://developer.farm.bot/v15/docs/farmbot-os.html</a><br>\n<a
    href=\"https://www.youtube.com/watch?v=u2WciH6rAFg\" rel=\"nofollow\">Leaving
    Everything Behind For Elixir</a> - Theo’s video<br>\n<a href=\"https://youtu.be/aOk67eT3fpg?si=MTxtIv-xmuJZYbup\"
    rel=\"nofollow\">Phoenix LiveView Is Making Me Reconsider React... </a>- Theo’s
    other video<br>\n<a href=\"https://podcast.thinkingelixir.com/206\" rel=\"nofollow\">Podcast:
    Thinking Elixir 206: BeamOps - DevOps on the BEAM</a></p><p>Special Guests: David
    Bernheisel and Mark Ericksen.</p>\n      "
- title: '"The Past is Your Teacher" with Alicia Brindisi and Bri LaVorgna'
  slug: s12-e11-retrospectives-agile-software
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e11-retrospectives-agile-software
  guid: 648f4aa3-63db-4b39-882b-b1f6c0353a43
  pubDate: Thu, 30 May 2024 06:15:00 -0400
  pubDateFriendly: May 30, 2024
  description: "It’s the season finale of Elixir Wizards Office Hours! SmartLogic’s
    Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna join host Dan
    to delve into the agile ceremony of retrospectives. They explore the vital role
    of retrospectives in Agile project management and unveil practical strategies
    for enhancing their effectiveness.\nAlicia and Bri break down the elements of
    a successful retrospective. They cover everything from meticulous preparation
    to facilitation techniques, and how to choose the best format for fostering open
    dialogue and actionable results. Learn how to navigate common obstacles and guide
    discussions toward productive, solution-focused outcomes.\nThroughout the episode,
    they emphasize the transformative potential of retrospectives within the Agile
    framework, portraying them not just as a procedural activity, but as a catalyst
    for continuous team growth and project success.\nKey topics discussed in this
    episode:\nMastering the full potential of retrospectives in Agile environments\nBest
    practices for effective preparation and facilitation\nChoosing the right format
    to suit your team's dynamics\nStrategies for overcoming typical challenges during
    retrospectives\nTechniques for addressing and resolving interpersonal conflicts
    constructively\nThe critical importance of valuing each team member’s perspective\nPractical
    advice on applying insights from retrospectives to enact organizational changes\nTailoring
    and refining retrospectives to meet your team’s unique requirements\nLinks mentioned:\nSmartLogic
    https://smartlogic.io/ \nSmartLogic LinkedIn https://www.linkedin.com/company/smartlogic-io\nContact
    Bri Bri@smartlogic.io \nRetrium Retrospectives for Scrum & Agile Teams https://www.retrium.com/\n4Ls
    Retrospective Template https://www.retrium.com/retrospective-techniques/4ls \nStart
    Stop Continue Retrospective https://www.retrium.com/retrospective-techniques/start-stop-continue
    \nSailboat Retrospective https://www.retrium.com/retrospective-techniques/sailboat\nStarfish
    Retrospective https://www.retrium.com/retrospective-techniques/starfish \nClickUp
    Project Management Platform https://clickup.com/teams/project-management \nAsana
    Task Manager http://www.asana.com \nJira Project Management Tool https://www.atlassian.com/software/jira \n
    Special Guests: Alicia Brindisi and Bri LaVorgna.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+TjRnagos
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/648f4aa3-63db-4b39-882b-b1f6c0353a43.mp3
    length: '64514569'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: It’s the season finale of Elixir Wizards Office Hours! SmartLogic’s
      Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna join host Dan
      to delve into the agile ceremony of retrospectives. They explore the vital role
      of retrospectives in Agile project management and unveil practical strategies
      for enhancing their effectiveness.
    duration: '32:56'
    explicit: 'no'
    keywords: software engineering, software developer, web development, app design,
      agile software development, elixir language, elixirlang, programming podcast,
      elixir podcast, elixir wizards, agile methodology, agile, agile project management,
      agile scrum, agile model in software engineering, agile development, agile manifesto,
      sprint planning, sprint planning in agile, retrospectives, retrospectives for
      remote teams, retrospectives agile, sprint retrospectives, elixir programming
      language, scrum, software development, software testing, software architecture,
      software design, software maintenance, software deployment, software lifecycle
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/648f4aa3-63db-4b39-882b-b1f6c0353a43/cover.jpg?v=1
    summary: "\n        <p>It’s the season finale of Elixir Wizards Office Hours!
      SmartLogic’s Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna
      join host Dan to delve into the agile ceremony of retrospectives. They explore
      the vital role of retrospectives in Agile project management and unveil practical
      strategies for enhancing their effectiveness.</p>\n\n<p>Alicia and Bri break
      down the elements of a successful retrospective. They cover everything from
      meticulous preparation to facilitation techniques, and how to choose the best
      format for fostering open dialogue and actionable results. Learn how to navigate
      common obstacles and guide discussions toward productive, solution-focused outcomes.</p>\n\n<p>Throughout
      the episode, they emphasize the transformative potential of retrospectives within
      the Agile framework, portraying them not just as a procedural activity, but
      as a catalyst for continuous team growth and project success.</p>\n\n<h3>Key
      topics discussed in this episode:</h3>\n\n<ul>\n<li>Mastering the full potential
      of retrospectives in Agile environments</li>\n<li>Best practices for effective
      preparation and facilitation</li>\n<li>Choosing the right format to suit your
      team&#39;s dynamics</li>\n<li>Strategies for overcoming typical challenges during
      retrospectives</li>\n<li>Techniques for addressing and resolving interpersonal
      conflicts constructively</li>\n<li>The critical importance of valuing each team
      member’s perspective</li>\n<li>Practical advice on applying insights from retrospectives
      to enact organizational changes</li>\n<li>Tailoring and refining retrospectives
      to meet your team’s unique requirements</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>SmartLogic
      <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic LinkedIn <a href=\"https://www.linkedin.com/company/smartlogic-io\"
      rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io</a><br>\nContact
      Bri <a href=\"mailto:Bri@smartlogic.io\" rel=\"nofollow\">Bri@smartlogic.io</a>
      <br>\nRetrium Retrospectives for Scrum &amp; Agile Teams <a href=\"https://www.retrium.com/\"
      rel=\"nofollow\">https://www.retrium.com/</a><br>\n4Ls Retrospective Template
      <a href=\"https://www.retrium.com/retrospective-techniques/4ls\" rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/4ls</a>
      <br>\nStart Stop Continue Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/start-stop-continue\"
      rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/start-stop-continue</a>
      <br>\nSailboat Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/sailboat\"
      rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/sailboat</a><br>\nStarfish
      Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/starfish\"
      rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/starfish</a>
      <br>\nClickUp Project Management Platform <a href=\"https://clickup.com/teams/project-management\"
      rel=\"nofollow\">https://clickup.com/teams/project-management</a> <br>\nAsana
      Task Manager <a href=\"http://www.asana.com\" rel=\"nofollow\">http://www.asana.com</a>
      <br>\nJira Project Management Tool <a href=\"https://www.atlassian.com/software/jira%C2%A0\"
      rel=\"nofollow\">https://www.atlassian.com/software/jira </a></p><p>Special
      Guests: Alicia Brindisi and Bri LaVorgna.</p>\n      "
  contentEncoded: "\n        <p>It’s the season finale of Elixir Wizards Office Hours!
    SmartLogic’s Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna join
    host Dan to delve into the agile ceremony of retrospectives. They explore the
    vital role of retrospectives in Agile project management and unveil practical
    strategies for enhancing their effectiveness.</p>\n\n<p>Alicia and Bri break down
    the elements of a successful retrospective. They cover everything from meticulous
    preparation to facilitation techniques, and how to choose the best format for
    fostering open dialogue and actionable results. Learn how to navigate common obstacles
    and guide discussions toward productive, solution-focused outcomes.</p>\n\n<p>Throughout
    the episode, they emphasize the transformative potential of retrospectives within
    the Agile framework, portraying them not just as a procedural activity, but as
    a catalyst for continuous team growth and project success.</p>\n\n<h3>Key topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Mastering the full potential of retrospectives
    in Agile environments</li>\n<li>Best practices for effective preparation and facilitation</li>\n<li>Choosing
    the right format to suit your team&#39;s dynamics</li>\n<li>Strategies for overcoming
    typical challenges during retrospectives</li>\n<li>Techniques for addressing and
    resolving interpersonal conflicts constructively</li>\n<li>The critical importance
    of valuing each team member’s perspective</li>\n<li>Practical advice on applying
    insights from retrospectives to enact organizational changes</li>\n<li>Tailoring
    and refining retrospectives to meet your team’s unique requirements</li>\n</ul>\n\n<h3>Links
    mentioned:</h3>\n\n<p>SmartLogic <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSmartLogic LinkedIn <a href=\"https://www.linkedin.com/company/smartlogic-io\"
    rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io</a><br>\nContact
    Bri <a href=\"mailto:Bri@smartlogic.io\" rel=\"nofollow\">Bri@smartlogic.io</a>
    <br>\nRetrium Retrospectives for Scrum &amp; Agile Teams <a href=\"https://www.retrium.com/\"
    rel=\"nofollow\">https://www.retrium.com/</a><br>\n4Ls Retrospective Template
    <a href=\"https://www.retrium.com/retrospective-techniques/4ls\" rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/4ls</a>
    <br>\nStart Stop Continue Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/start-stop-continue\"
    rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/start-stop-continue</a>
    <br>\nSailboat Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/sailboat\"
    rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/sailboat</a><br>\nStarfish
    Retrospective <a href=\"https://www.retrium.com/retrospective-techniques/starfish\"
    rel=\"nofollow\">https://www.retrium.com/retrospective-techniques/starfish</a>
    <br>\nClickUp Project Management Platform <a href=\"https://clickup.com/teams/project-management\"
    rel=\"nofollow\">https://clickup.com/teams/project-management</a> <br>\nAsana
    Task Manager <a href=\"http://www.asana.com\" rel=\"nofollow\">http://www.asana.com</a>
    <br>\nJira Project Management Tool <a href=\"https://www.atlassian.com/software/jira%C2%A0\"
    rel=\"nofollow\">https://www.atlassian.com/software/jira </a></p><p>Special Guests:
    Alicia Brindisi and Bri LaVorgna.</p>\n      "
- title: '"So You''ve Been Hired" with Emma Whamond and Micaela Cunha'
  slug: s12-e10-joining-a-software-development-team
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e10-joining-a-software-development-team
  guid: 59b94bdf-b422-4c9c-8960-6f6e6606ccd2
  pubDate: Thu, 23 May 2024 06:15:00 -0400
  pubDateFriendly: May 23, 2024
  description: "In Office Hours Episode 10, SmartLogic’s newest developers, Emma Whamond
    and Micaela Cunha, join Elixir Wizard Owen Bickford to discuss their onboarding
    experiences, joining a new engineering team, and navigating an unfamiliar codebase.
    They share tips and challenges on learning new programming languages like Ruby
    and Elixir while ramping up for active client projects. Emma and Micaela emphasize
    the value of starting with tests and seeking guidance from teammates when diving
    into unfamiliar projects.\nOur guests provide valuable guidance for anyone navigating
    the transition into a new software development team, highlighting the importance
    of collaboration, continuous learning, and community support in the tech industry.\nKey
    topics discussed in this episode:\nWhat to expect when joining a new engineering
    team\nNavigating existing codebases as a new hire in Elixir and Ruby\nApplying
    previous work experience to software development\nThe importance of tests and
    team communication in unfamiliar projects\nLearning Ruby as a C++ and JavaScript
    developer\nDifferences between dynamic and static typing\nBuilding team camaraderie
    and intentionality in remote work environments\nThe steep learning curve of the
    onboarding process, including documentation, codebases, and client meetings\nRelying
    on teammates for guidance and overcoming the fear of asking too many questions\nUpdating
    documentation within project repositories\nLearning team dynamics and identifying
    domain experts for targeted assistance\nDomain-specific knowledge: being a senior
    developer in one language vs. another\nBuilding friendships and connections within
    local tech communities\nThe welcoming and supportive nature of the tech industry
    for newcomers\nLinks mentioned:\nElixir Programming Language https://elixir-lang.org/
    \nRuby on Rails https://www.ruby-lang.org/en/ \nRuby Koans - Learn Ruby language,
    syntax, structure https://www.rubykoans.com/ \nElixir Language Learning Exercises
    (Elixir Koans) https://github.com/elixirkoans/elixir-koans\nThe PETAL Stack in
    Elixir https://thinkingelixir.com/petal-stack-in-elixir/\nAlpine JS Lightweight
    JavaScript Framework https://alpinejs.dev/ \nPhoenix LiveView https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
    \nWebAuthn Components passwordless authentication to LiveView applications \nhttps://github.com/liveshowy/webauthn_components\nGleam
    functional language for building type-safe, scalable systems https://gleam.run/\nThe
    Future of Types in Elixir with José Valim, Guillaume Duboc, and Giuseppe Castagna
    https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir/\nGit-Blame
    https://git-scm.com/docs/git-blame\nnix store https://nixos.org/manual/nix/stable/command-ref/nix-store\nCode
    and Coffee https://codeandcoffee.org/ Special Guests: Emma Whamond and Micaela
    Cunha.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+c1spo9qb
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/59b94bdf-b422-4c9c-8960-6f6e6606ccd2.mp3
    length: '89769707'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Office Hours Episode 10, SmartLogic’s newest developers, Emma Whamond
      and Micaela Cunha, join Elixir Wizard Owen Bickford to discuss their onboarding
      experiences, joining a new engineering team, and navigating an unfamiliar codebase.
    duration: '46:06'
    explicit: 'no'
    keywords: web development, web apps, app development, elixir programming language,
      ruby programming language, rubylang, elixirlang, gleam language, code, software
      engineer, coding, developer, software developer, programming, software development,
      programmer, learn to code, software jobs, entry level software developer, entry
      level software engineer, entry level tech jobs, junior developer, junior developer
      jobs, software careers, web development, tech jobs, IT jobs, computer science,
      software engineering, software programming, coding bootcamp, software engineering
      jobs, tech careers, tech industry, tech roles, full stack developer, frontend
      developer, backend developer, DevOps
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/59b94bdf-b422-4c9c-8960-6f6e6606ccd2/cover.jpg?v=1
    summary: "\n        <p>In Office Hours Episode 10, SmartLogic’s newest developers,
      Emma Whamond and Micaela Cunha, join Elixir Wizard Owen Bickford to discuss
      their onboarding experiences, joining a new engineering team, and navigating
      an unfamiliar codebase. They share tips and challenges on learning new programming
      languages like Ruby and Elixir while ramping up for active client projects.
      Emma and Micaela emphasize the value of starting with tests and seeking guidance
      from teammates when diving into unfamiliar projects.</p>\n\n<p>Our guests provide
      valuable guidance for anyone navigating the transition into a new software development
      team, highlighting the importance of collaboration, continuous learning, and
      community support in the tech industry.</p>\n\n<h3>Key topics discussed in this
      episode:</h3>\n\n<p>What to expect when joining a new engineering team<br>\nNavigating
      existing codebases as a new hire in Elixir and Ruby<br>\nApplying previous work
      experience to software development<br>\nThe importance of tests and team communication
      in unfamiliar projects<br>\nLearning Ruby as a C++ and JavaScript developer<br>\nDifferences
      between dynamic and static typing<br>\nBuilding team camaraderie and intentionality
      in remote work environments<br>\nThe steep learning curve of the onboarding
      process, including documentation, codebases, and client meetings<br>\nRelying
      on teammates for guidance and overcoming the fear of asking too many questions<br>\nUpdating
      documentation within project repositories<br>\nLearning team dynamics and identifying
      domain experts for targeted assistance<br>\nDomain-specific knowledge: being
      a senior developer in one language vs. another<br>\nBuilding friendships and
      connections within local tech communities<br>\nThe welcoming and supportive
      nature of the tech industry for newcomers</p>\n\n<h3>Links mentioned:</h3>\n\n<p>Elixir
      Programming Language <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a>
      <br>\nRuby on Rails <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a>
      <br>\nRuby Koans - Learn Ruby language, syntax, structure <a href=\"https://www.rubykoans.com/\"
      rel=\"nofollow\">https://www.rubykoans.com/</a> <br>\nElixir Language Learning
      Exercises (Elixir Koans) <a href=\"https://github.com/elixirkoans/elixir-koans\"
      rel=\"nofollow\">https://github.com/elixirkoans/elixir-koans</a><br>\nThe PETAL
      Stack in Elixir <a href=\"https://thinkingelixir.com/petal-stack-in-elixir/\"
      rel=\"nofollow\">https://thinkingelixir.com/petal-stack-in-elixir/</a><br>\nAlpine
      JS Lightweight JavaScript Framework <a href=\"https://alpinejs.dev/\" rel=\"nofollow\">https://alpinejs.dev/</a>
      <br>\nPhoenix LiveView <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a>
      <br>\nWebAuthn Components passwordless authentication to LiveView applications
      <br>\n<a href=\"https://github.com/liveshowy/webauthn_components\" rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\nGleam
      functional language for building type-safe, scalable systems <a href=\"https://gleam.run/\"
      rel=\"nofollow\">https://gleam.run/</a><br>\nThe Future of Types in Elixir with
      José Valim, Guillaume Duboc, and Giuseppe Castagna <a href=\"https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir/</a><br>\nGit-Blame
      <a href=\"https://git-scm.com/docs/git-blame\" rel=\"nofollow\">https://git-scm.com/docs/git-blame</a><br>\nnix
      store <a href=\"https://nixos.org/manual/nix/stable/command-ref/nix-store\"
      rel=\"nofollow\">https://nixos.org/manual/nix/stable/command-ref/nix-store</a><br>\nCode
      and Coffee <a href=\"https://codeandcoffee.org/\" rel=\"nofollow\">https://codeandcoffee.org/</a></p><p>Special
      Guests: Emma Whamond and Micaela Cunha.</p>\n      "
  contentEncoded: "\n        <p>In Office Hours Episode 10, SmartLogic’s newest developers,
    Emma Whamond and Micaela Cunha, join Elixir Wizard Owen Bickford to discuss their
    onboarding experiences, joining a new engineering team, and navigating an unfamiliar
    codebase. They share tips and challenges on learning new programming languages
    like Ruby and Elixir while ramping up for active client projects. Emma and Micaela
    emphasize the value of starting with tests and seeking guidance from teammates
    when diving into unfamiliar projects.</p>\n\n<p>Our guests provide valuable guidance
    for anyone navigating the transition into a new software development team, highlighting
    the importance of collaboration, continuous learning, and community support in
    the tech industry.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<p>What
    to expect when joining a new engineering team<br>\nNavigating existing codebases
    as a new hire in Elixir and Ruby<br>\nApplying previous work experience to software
    development<br>\nThe importance of tests and team communication in unfamiliar
    projects<br>\nLearning Ruby as a C++ and JavaScript developer<br>\nDifferences
    between dynamic and static typing<br>\nBuilding team camaraderie and intentionality
    in remote work environments<br>\nThe steep learning curve of the onboarding process,
    including documentation, codebases, and client meetings<br>\nRelying on teammates
    for guidance and overcoming the fear of asking too many questions<br>\nUpdating
    documentation within project repositories<br>\nLearning team dynamics and identifying
    domain experts for targeted assistance<br>\nDomain-specific knowledge: being a
    senior developer in one language vs. another<br>\nBuilding friendships and connections
    within local tech communities<br>\nThe welcoming and supportive nature of the
    tech industry for newcomers</p>\n\n<h3>Links mentioned:</h3>\n\n<p>Elixir Programming
    Language <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a>
    <br>\nRuby on Rails <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a>
    <br>\nRuby Koans - Learn Ruby language, syntax, structure <a href=\"https://www.rubykoans.com/\"
    rel=\"nofollow\">https://www.rubykoans.com/</a> <br>\nElixir Language Learning
    Exercises (Elixir Koans) <a href=\"https://github.com/elixirkoans/elixir-koans\"
    rel=\"nofollow\">https://github.com/elixirkoans/elixir-koans</a><br>\nThe PETAL
    Stack in Elixir <a href=\"https://thinkingelixir.com/petal-stack-in-elixir/\"
    rel=\"nofollow\">https://thinkingelixir.com/petal-stack-in-elixir/</a><br>\nAlpine
    JS Lightweight JavaScript Framework <a href=\"https://alpinejs.dev/\" rel=\"nofollow\">https://alpinejs.dev/</a>
    <br>\nPhoenix LiveView <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a>
    <br>\nWebAuthn Components passwordless authentication to LiveView applications
    <br>\n<a href=\"https://github.com/liveshowy/webauthn_components\" rel=\"nofollow\">https://github.com/liveshowy/webauthn_components</a><br>\nGleam
    functional language for building type-safe, scalable systems <a href=\"https://gleam.run/\"
    rel=\"nofollow\">https://gleam.run/</a><br>\nThe Future of Types in Elixir with
    José Valim, Guillaume Duboc, and Giuseppe Castagna <a href=\"https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir/</a><br>\nGit-Blame
    <a href=\"https://git-scm.com/docs/git-blame\" rel=\"nofollow\">https://git-scm.com/docs/git-blame</a><br>\nnix
    store <a href=\"https://nixos.org/manual/nix/stable/command-ref/nix-store\" rel=\"nofollow\">https://nixos.org/manual/nix/stable/command-ref/nix-store</a><br>\nCode
    and Coffee <a href=\"https://codeandcoffee.org/\" rel=\"nofollow\">https://codeandcoffee.org/</a></p><p>Special
    Guests: Emma Whamond and Micaela Cunha.</p>\n      "
- title: '"From Inspiration to Execution" with Camber Griffin'
  slug: s12-e09-backlog-grooming-task-management
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e09-backlog-grooming-task-management
  guid: 2a125320-7cac-4121-a6f8-1084685ba231
  pubDate: Thu, 16 May 2024 06:15:00 -0400
  pubDateFriendly: May 16, 2024
  description: "In Episode 9 of Elixir Wizards Office Hours, we dive into task writing
    and backlog grooming, transforming ideas from the discovery phase into actionable
    tickets. Join SmartLogic Developer Camber Griffin and hosts Dan Ivovich and Owen
    Bickford as they explore the intricacies of task writing, ticket grooming, estimation,
    and backlog management in the software development lifecycle.\nThey emphasize
    crafting clear, detailed tickets that act as comprehensive guides for development
    teams. A well-written ticket does more than outline what needs to be built—it
    facilitates collaboration by including entry points, linking to essential documentation,
    defining acceptance criteria, detailing QA steps, and identifying potential risks
    and future hurdles.\nKey topics discussed in this episode:\nCrafting actionable
    development tickets from inspiration\nAchieving the optimal level of detail in
    tickets\nTailoring ticket content for developers, QA, and stakeholders\nStandardizing
    ticket format with templates\nStructurally breaking down tasks into manageable
    sections\nEnsuring flexibility in implementation while maintaining clear specifications\nProactively
    discussing architectural and design approaches\nIncorporating related documentation
    within tickets\nClarifying acceptance criteria and QA procedures\nAccurately estimating
    task effort and complexity\nCollaboratively grooming tasks with cross-functional
    teams\nAdjusting tickets to evolving requirements\nStrategically planning for
    uncertainties and out-of-scope concerns\nManaging and versioning ongoing documentation\nKeeping
    the backlog clean, prioritized, and relevant\nMapping dependencies among interconnected
    tasks\nLinks mentioned:\nJira Work Management https://www.atlassian.com/software/jira
    \nClickUp Project Management Platform https://clickup.com/teams/project-management
    \nGitHub Projects https://docs.github.com/en/issues/planning-and-tracking-with-projects\nZube
    Agile Project Management https://zube.io/ \nPivotal Tracker Agile Project Management
    Tool https://www.pivotaltracker.com/ \nTrak Portfolio Management System https://pd-trak.com/
    \nClearCase Software Configuration Mgmt www.ibm.com/products/devops-code-clearcase\nOban
    Job Processing in Elixir https://github.com/sorentwo/oban Special Guest: Camber
    Griffin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ayJxFgFF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2a125320-7cac-4121-a6f8-1084685ba231.mp3
    length: '87557222'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Episode 9 of Elixir Wizards Office Hours, we dive into task writing
      and backlog grooming, transforming ideas from the discovery phase into actionable
      tickets. Join SmartLogic Developer Camber Griffin and hosts Dan Ivovich and
      Owen Bickford as they explore the intricacies of task writing, ticket grooming,
      estimation, and backlog management in the software development lifecycle.
    duration: '45:03'
    explicit: 'no'
    keywords: software development, web development, agile, agile methodology, scrum,
      kanban, backlog grooming, sprint planning, task writing, ticket grooming, software
      engineering, project management, development lifecycle, agile practices, task
      management, ticket estimation, backlog management, software project management,
      software lifecycle, developer collaboration, development tasks, QA steps, acceptance
      criteria, documentation in development, cross-functional teams, iterative development,
      agile project management, team collaboration, development tickets, software
      processes, agile sprint, software tasks, software project planning, task breakdown,
      agile estimation, sprint execution, development planning, software project execution,
      task estimation, software tickets, agile backlog, agile development, software
      team collaboration, task crafting, backlog prioritization, agile teams, software
      documentation, agile workflow, software QA, development risk management, agile
      iteration, agile team management, software versioning, development dependencies,
      agile frameworks, agile tools, software project coordination, iterative workflow,
      agile software development, software planning, development process management,
      agile software practices, software development process, agile coordination,
      agile execution, development lifecycle management, software agile methodologies,
      software engineering practices, agile ticket management, task prioritization,
      agile grooming, agile task writing, software project tasks, software development
      coordination, agile project tasks, agile project workflows, development team
      management, software development collaboration, agile project estimation, development
      team practices, agile sprint management, agile project tools, agile development
      processes, software development planning, agile lifecycle, agile team practices,
      development project management, agile project collaboration, software development
      estimation, software task writing, agile project prioritization, agile development
      management, software project workflow, agile project coordination, software
      project lifecycle, agile task management, software development tasks, agile
      planning, development workflow, agile project lifecycle, agile project execution,
      software agile processes, agile backlog management, agile project execution,
      agile team coordination, software project iteration, agile project estimation,
      software team collaboration, agile development lifecycle, agile project management
      tools, agile project practices, software task management, software backlog grooming,
      agile project execution, software task estimation, agile backlog grooming, agile
      project collaboration, software project estimation, agile development coordination,
      software development project management, agile project iteration, software task
      coordination, agile project workflow, software project tasks, agile development
      coordination, software development practices, agile project development, software
      development methodologies, agile project lifecycle management, software task
      prioritization, agile project management practices, agile software development
      lifecycle, software project estimation, agile development tools, software agile
      development, agile project planning tools, software development project lifecycle,
      agile project planning practices, agile software management, software task breakdown,
      agile project planning tools, agile development practices, software project
      estimation tools, agile team practices, software development project planning,
      agile project management methodologies, software project management tools, agile
      project coordination tools, software development project execution, agile development
      project management, software project management tools, agile project coordination
      practices, agile development project tools, software development project coordination,
      agile project execution tools, agile project estimation practices, software
      development task management, agile project estimation tools, software project
      management tools, agile project coordination methodologies, agile development
      task management, software project planning tools, agile project coordination
      practices, agile project management tools, agile development management tools,
      agile project estimation practices, software development project tools, agile
      project management methodologies, agile project management practices, software
      development project management, agile project planning tools, agile project
      estimation methodologies, agile project coordination tools, software development
      project management tools, agile project management practices, agile project
      estimation tools, agile project planning methodologies, software development
      project tools, agile project coordination practices, agile development project
      management tools, agile project management methodologies, software development
      project estimation tools, agile project planning practices, agile project coordination
      methodologies, software development project management tools
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2a125320-7cac-4121-a6f8-1084685ba231/cover.jpg?v=1
    summary: "\n        <p>In Episode 9 of Elixir Wizards Office Hours, we dive into
      task writing and backlog grooming, transforming ideas from the discovery phase
      into actionable tickets. Join SmartLogic Developer Camber Griffin and hosts
      Dan Ivovich and Owen Bickford as they explore the intricacies of task writing,
      ticket grooming, estimation, and backlog management in the software development
      lifecycle.</p>\n\n<p>They emphasize crafting clear, detailed tickets that act
      as comprehensive guides for development teams. A well-written ticket does more
      than outline what needs to be built—it facilitates collaboration by including
      entry points, linking to essential documentation, defining acceptance criteria,
      detailing QA steps, and identifying potential risks and future hurdles.</p>\n\n<h3>Key
      topics discussed in this episode:</h3>\n\n<ul>\n<li>Crafting actionable development
      tickets from inspiration</li>\n<li>Achieving the optimal level of detail in
      tickets</li>\n<li>Tailoring ticket content for developers, QA, and stakeholders</li>\n<li>Standardizing
      ticket format with templates</li>\n<li>Structurally breaking down tasks into
      manageable sections</li>\n<li>Ensuring flexibility in implementation while maintaining
      clear specifications</li>\n<li>Proactively discussing architectural and design
      approaches</li>\n<li>Incorporating related documentation within tickets</li>\n<li>Clarifying
      acceptance criteria and QA procedures</li>\n<li>Accurately estimating task effort
      and complexity</li>\n<li>Collaboratively grooming tasks with cross-functional
      teams</li>\n<li>Adjusting tickets to evolving requirements</li>\n<li>Strategically
      planning for uncertainties and out-of-scope concerns</li>\n<li>Managing and
      versioning ongoing documentation</li>\n<li>Keeping the backlog clean, prioritized,
      and relevant</li>\n<li>Mapping dependencies among interconnected tasks</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p>Jira Work Management <a href=\"https://www.atlassian.com/software/jira\"
      rel=\"nofollow\">https://www.atlassian.com/software/jira</a> <br>\nClickUp Project
      Management Platform <a href=\"https://clickup.com/teams/project-management\"
      rel=\"nofollow\">https://clickup.com/teams/project-management</a> <br>\nGitHub
      Projects <a href=\"https://docs.github.com/en/issues/planning-and-tracking-with-projects\"
      rel=\"nofollow\">https://docs.github.com/en/issues/planning-and-tracking-with-projects</a><br>\nZube
      Agile Project Management <a href=\"https://zube.io/\" rel=\"nofollow\">https://zube.io/</a>
      <br>\nPivotal Tracker Agile Project Management Tool <a href=\"https://www.pivotaltracker.com/\"
      rel=\"nofollow\">https://www.pivotaltracker.com/</a> <br>\nTrak Portfolio Management
      System <a href=\"https://pd-trak.com/\" rel=\"nofollow\">https://pd-trak.com/</a>
      <br>\nClearCase Software Configuration Mgmt <a href=\"http://www.ibm.com/products/devops-code-clearcase\"
      rel=\"nofollow\">www.ibm.com/products/devops-code-clearcase</a><br>\nOban Job
      Processing in Elixir <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a></p><p>Special
      Guest: Camber Griffin.</p>\n      "
  contentEncoded: "\n        <p>In Episode 9 of Elixir Wizards Office Hours, we dive
    into task writing and backlog grooming, transforming ideas from the discovery
    phase into actionable tickets. Join SmartLogic Developer Camber Griffin and hosts
    Dan Ivovich and Owen Bickford as they explore the intricacies of task writing,
    ticket grooming, estimation, and backlog management in the software development
    lifecycle.</p>\n\n<p>They emphasize crafting clear, detailed tickets that act
    as comprehensive guides for development teams. A well-written ticket does more
    than outline what needs to be built—it facilitates collaboration by including
    entry points, linking to essential documentation, defining acceptance criteria,
    detailing QA steps, and identifying potential risks and future hurdles.</p>\n\n<h3>Key
    topics discussed in this episode:</h3>\n\n<ul>\n<li>Crafting actionable development
    tickets from inspiration</li>\n<li>Achieving the optimal level of detail in tickets</li>\n<li>Tailoring
    ticket content for developers, QA, and stakeholders</li>\n<li>Standardizing ticket
    format with templates</li>\n<li>Structurally breaking down tasks into manageable
    sections</li>\n<li>Ensuring flexibility in implementation while maintaining clear
    specifications</li>\n<li>Proactively discussing architectural and design approaches</li>\n<li>Incorporating
    related documentation within tickets</li>\n<li>Clarifying acceptance criteria
    and QA procedures</li>\n<li>Accurately estimating task effort and complexity</li>\n<li>Collaboratively
    grooming tasks with cross-functional teams</li>\n<li>Adjusting tickets to evolving
    requirements</li>\n<li>Strategically planning for uncertainties and out-of-scope
    concerns</li>\n<li>Managing and versioning ongoing documentation</li>\n<li>Keeping
    the backlog clean, prioritized, and relevant</li>\n<li>Mapping dependencies among
    interconnected tasks</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Jira Work
    Management <a href=\"https://www.atlassian.com/software/jira\" rel=\"nofollow\">https://www.atlassian.com/software/jira</a>
    <br>\nClickUp Project Management Platform <a href=\"https://clickup.com/teams/project-management\"
    rel=\"nofollow\">https://clickup.com/teams/project-management</a> <br>\nGitHub
    Projects <a href=\"https://docs.github.com/en/issues/planning-and-tracking-with-projects\"
    rel=\"nofollow\">https://docs.github.com/en/issues/planning-and-tracking-with-projects</a><br>\nZube
    Agile Project Management <a href=\"https://zube.io/\" rel=\"nofollow\">https://zube.io/</a>
    <br>\nPivotal Tracker Agile Project Management Tool <a href=\"https://www.pivotaltracker.com/\"
    rel=\"nofollow\">https://www.pivotaltracker.com/</a> <br>\nTrak Portfolio Management
    System <a href=\"https://pd-trak.com/\" rel=\"nofollow\">https://pd-trak.com/</a>
    <br>\nClearCase Software Configuration Mgmt <a href=\"http://www.ibm.com/products/devops-code-clearcase\"
    rel=\"nofollow\">www.ibm.com/products/devops-code-clearcase</a><br>\nOban Job
    Processing in Elixir <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a></p><p>Special
    Guest: Camber Griffin.</p>\n      "
- title: '"DevOps: From Code to Cloud" with Dan Ivovich'
  slug: s12-e08-devops-from-code-to-cloud
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e08-devops-from-code-to-cloud
  guid: 731a954e-747f-42b4-970a-abf92832411f
  pubDate: Thu, 09 May 2024 06:15:00 -0400
  pubDateFriendly: May  9, 2024
  description: "In Elixir Wizards Office Hours Episode 8, hosts Sundi Myint and Owen
    Bickford lead an engaging Q&A session with co-host Dan Ivovich, diving deep into
    the nuances of DevOps. Drawing from his extensive experience, Dan navigates topics
    from the early days before Docker to managing diverse polyglot environments and
    optimizing observability.\nThis episode offers insights for developers of all
    levels looking to sharpen their DevOps skills. Explore the realms of Docker, containerization,
    DevOps workflows, and the deployment intricacies of Elixir applications. \nKey
    topics discussed in this episode:\nUnderstanding DevOps and starting points for
    beginners\nBest practices for deploying applications to the cloud\nUsing Docker
    for containerization\nManaging multiple programming environments with microservices\nStrategies
    for geographic distribution and ensuring redundancy\nLocalization considerations
    involving latency and device specs\nUsing Prometheus and OpenTelemetry for observability\nAdjusting
    scaling based on application metrics\nApproaching failure scenarios, including
    database migrations and managing dependencies\nTackling challenges in monitoring
    setups and alert configurations\nImplementing incremental, zero-downtime deployment
    strategies\nThe intricacies of hot code upgrades and effective state management\nRecommended
    learning paths, including Linux and CI/CD workflows\nTools for visualizing system
    health and monitoring\nIdentifying actionable metrics and setting effective alerts\nLinks
    mentioned:\nAnsible open source IT automation engine https://www.ansible.com/
    \nWikimedia engine https://doc.wikimedia.org/ \nDrupal content management software
    https://www.drupal.org/ \nCapistrano remote server automation and deployment https://capistranorb.com/
    \nDocker  https://www.docker.com/ \nCircle CI CI/CD Tool https://circleci.com/
    \nDNS Cluster https://hex.pm/packages/dnscluster\nElixirConf 2023 Chris McCord
    Phoenix Field Notes https://youtu.be/Ckgl9KO4E4M\nNerves https://nerves-project.org/
    \nOban job processing in Elixir https://getoban.pro/ \nSidekiq background jobs
    for Ruby https://sidekiq.org/ \nPrometheus https://prometheus.io/ \nPromEx https://hexdocs.pm/promex/PromEx.html
    \nGitHub Actions - Setup BEAM: https://github.com/erlef/setup-beam\nJenkins open
    source automation server https://www.jenkins.io/ \nDataDog Cloud Monitoring https://www.datadoghq.com/ 
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+D_-SPHCg
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/731a954e-747f-42b4-970a-abf92832411f.mp3
    length: '85297203'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Elixir Wizards Office Hours Episode 8, hosts Sundi Myint and Owen
      Bickford lead an engaging Q&A session with co-host Dan Ivovich, diving deep
      into the nuances of DevOps. Drawing from his extensive experience, Dan navigates
      topics from the early days before Docker to managing diverse polyglot environments
      and optimizing observability.
    duration: '43:43'
    explicit: 'no'
    keywords: Elixir Programming Language, Web Development, Software Engineering,
      DevOps, Deployment, Docker, Containerization, Cloud Computing, Continuous Integration,
      Continuous Deployment, CI/CD, Microservices, Software Deployment, Application
      Scaling, Observability, Monitoring, Cloud Services, Server Management, Software
      Architecture, Code Management, Version Control, Git, GitHub, Infrastructure
      as Code, System Administration, Load Balancing, High Availability, Network Security,
      API Development, Testing Automation, Performance Tuning, Configuration Management,
      Linux Administration, Cloud Platforms, AWS, Azure, Google Cloud, Kubernetes,
      Agile Development, Scrum, Agile Methodologies, Software Development Life Cycle,
      Programming Best Practices, Backend Development, Full Stack Development, Frontend
      Development, User Interface Design, User Experience, UX/UI Design, Data Security,
      Privacy Compliance, Tech Startups, Enterprise Software, Software Solutions,
      Technical Support, Tech Innovations, Virtualization, Data Management, Database
      Administration, SQL, NoSQL, Programming Languages, Functional Programming, Scripting,
      Automation Scripts, Code Optimization, Secure Coding Practices
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/731a954e-747f-42b4-970a-abf92832411f/cover.jpg?v=1
    summary: "\n        <p>In Elixir Wizards Office Hours Episode 8, hosts Sundi Myint
      and Owen Bickford lead an engaging Q&amp;A session with co-host Dan Ivovich,
      diving deep into the nuances of DevOps. Drawing from his extensive experience,
      Dan navigates topics from the early days before Docker to managing diverse polyglot
      environments and optimizing observability.</p>\n\n<p>This episode offers insights
      for developers of all levels looking to sharpen their DevOps skills. Explore
      the realms of Docker, containerization, DevOps workflows, and the deployment
      intricacies of Elixir applications. </p>\n\n<h3>Key topics discussed in this
      episode:</h3>\n\n<ul>\n<li>Understanding DevOps and starting points for beginners</li>\n<li>Best
      practices for deploying applications to the cloud</li>\n<li>Using Docker for
      containerization</li>\n<li>Managing multiple programming environments with microservices</li>\n<li>Strategies
      for geographic distribution and ensuring redundancy</li>\n<li>Localization considerations
      involving latency and device specs</li>\n<li>Using Prometheus and OpenTelemetry
      for observability</li>\n<li>Adjusting scaling based on application metrics</li>\n<li>Approaching
      failure scenarios, including database migrations and managing dependencies</li>\n<li>Tackling
      challenges in monitoring setups and alert configurations</li>\n<li>Implementing
      incremental, zero-downtime deployment strategies</li>\n<li>The intricacies of
      hot code upgrades and effective state management</li>\n<li>Recommended learning
      paths, including Linux and CI/CD workflows</li>\n<li>Tools for visualizing system
      health and monitoring</li>\n<li>Identifying actionable metrics and setting effective
      alerts</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Ansible open source IT
      automation engine <a href=\"https://www.ansible.com/\" rel=\"nofollow\">https://www.ansible.com/</a>
      <br>\nWikimedia engine <a href=\"https://doc.wikimedia.org/\" rel=\"nofollow\">https://doc.wikimedia.org/</a>
      <br>\nDrupal content management software <a href=\"https://www.drupal.org/\"
      rel=\"nofollow\">https://www.drupal.org/</a> <br>\nCapistrano remote server
      automation and deployment <a href=\"https://capistranorb.com/\" rel=\"nofollow\">https://capistranorb.com/</a>
      <br>\nDocker  <a href=\"https://www.docker.com/\" rel=\"nofollow\">https://www.docker.com/</a>
      <br>\nCircle CI CI/CD Tool <a href=\"https://circleci.com/\" rel=\"nofollow\">https://circleci.com/</a>
      <br>\nDNS Cluster <a href=\"https://hex.pm/packages/dns_cluster\" rel=\"nofollow\">https://hex.pm/packages/dns_cluster</a><br>\nElixirConf
      2023 Chris McCord Phoenix Field Notes <a href=\"https://youtu.be/Ckgl9KO4E4M\"
      rel=\"nofollow\">https://youtu.be/Ckgl9KO4E4M</a><br>\nNerves <a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a> <br>\nOban job processing in
      Elixir <a href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a>
      <br>\nSidekiq background jobs for Ruby <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a>
      <br>\nPrometheus <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a>
      <br>\nPromEx <a href=\"https://hexdocs.pm/prom_ex/PromEx.html\" rel=\"nofollow\">https://hexdocs.pm/prom_ex/PromEx.html</a>
      <br>\nGitHub Actions - Setup BEAM: <a href=\"https://github.com/erlef/setup-beam\"
      rel=\"nofollow\">https://github.com/erlef/setup-beam</a><br>\nJenkins open source
      automation server <a href=\"https://www.jenkins.io/\" rel=\"nofollow\">https://www.jenkins.io/</a>
      <br>\nDataDog Cloud Monitoring <a href=\"https://www.datadoghq.com/%C2%A0\"
      rel=\"nofollow\">https://www.datadoghq.com/ </a></p>\n      "
  contentEncoded: "\n        <p>In Elixir Wizards Office Hours Episode 8, hosts Sundi
    Myint and Owen Bickford lead an engaging Q&amp;A session with co-host Dan Ivovich,
    diving deep into the nuances of DevOps. Drawing from his extensive experience,
    Dan navigates topics from the early days before Docker to managing diverse polyglot
    environments and optimizing observability.</p>\n\n<p>This episode offers insights
    for developers of all levels looking to sharpen their DevOps skills. Explore the
    realms of Docker, containerization, DevOps workflows, and the deployment intricacies
    of Elixir applications. </p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>Understanding
    DevOps and starting points for beginners</li>\n<li>Best practices for deploying
    applications to the cloud</li>\n<li>Using Docker for containerization</li>\n<li>Managing
    multiple programming environments with microservices</li>\n<li>Strategies for
    geographic distribution and ensuring redundancy</li>\n<li>Localization considerations
    involving latency and device specs</li>\n<li>Using Prometheus and OpenTelemetry
    for observability</li>\n<li>Adjusting scaling based on application metrics</li>\n<li>Approaching
    failure scenarios, including database migrations and managing dependencies</li>\n<li>Tackling
    challenges in monitoring setups and alert configurations</li>\n<li>Implementing
    incremental, zero-downtime deployment strategies</li>\n<li>The intricacies of
    hot code upgrades and effective state management</li>\n<li>Recommended learning
    paths, including Linux and CI/CD workflows</li>\n<li>Tools for visualizing system
    health and monitoring</li>\n<li>Identifying actionable metrics and setting effective
    alerts</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Ansible open source IT automation
    engine <a href=\"https://www.ansible.com/\" rel=\"nofollow\">https://www.ansible.com/</a>
    <br>\nWikimedia engine <a href=\"https://doc.wikimedia.org/\" rel=\"nofollow\">https://doc.wikimedia.org/</a>
    <br>\nDrupal content management software <a href=\"https://www.drupal.org/\" rel=\"nofollow\">https://www.drupal.org/</a>
    <br>\nCapistrano remote server automation and deployment <a href=\"https://capistranorb.com/\"
    rel=\"nofollow\">https://capistranorb.com/</a> <br>\nDocker  <a href=\"https://www.docker.com/\"
    rel=\"nofollow\">https://www.docker.com/</a> <br>\nCircle CI CI/CD Tool <a href=\"https://circleci.com/\"
    rel=\"nofollow\">https://circleci.com/</a> <br>\nDNS Cluster <a href=\"https://hex.pm/packages/dns_cluster\"
    rel=\"nofollow\">https://hex.pm/packages/dns_cluster</a><br>\nElixirConf 2023
    Chris McCord Phoenix Field Notes <a href=\"https://youtu.be/Ckgl9KO4E4M\" rel=\"nofollow\">https://youtu.be/Ckgl9KO4E4M</a><br>\nNerves
    <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a>
    <br>\nOban job processing in Elixir <a href=\"https://getoban.pro/\" rel=\"nofollow\">https://getoban.pro/</a>
    <br>\nSidekiq background jobs for Ruby <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a>
    <br>\nPrometheus <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a>
    <br>\nPromEx <a href=\"https://hexdocs.pm/prom_ex/PromEx.html\" rel=\"nofollow\">https://hexdocs.pm/prom_ex/PromEx.html</a>
    <br>\nGitHub Actions - Setup BEAM: <a href=\"https://github.com/erlef/setup-beam\"
    rel=\"nofollow\">https://github.com/erlef/setup-beam</a><br>\nJenkins open source
    automation server <a href=\"https://www.jenkins.io/\" rel=\"nofollow\">https://www.jenkins.io/</a>
    <br>\nDataDog Cloud Monitoring <a href=\"https://www.datadoghq.com/%C2%A0\" rel=\"nofollow\">https://www.datadoghq.com/ </a></p>\n
    \     "
- title: '"Printing is Ugly" with Joel Meador and Charles Suggs'
  slug: s12-e07-web-to-pdf-printing-solutions
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e07-web-to-pdf-printing-solutions
  guid: 866cd912-54c7-431a-a337-26586888dab5
  pubDate: Thu, 02 May 2024 06:15:00 -0400
  pubDateFriendly: May  2, 2024
  description: "In Episode 7 of Elixir Wizards Office Hours, SmartLogic Engineers
    Joel Meador and Charles Suggs join host Owen Bickford to tackle the often tricky
    task of adding print functionality to web applications. They discuss their recent
    experiences with browser-based printing and the hurdles of cross-browser compatibility,
    consistent styling, and dynamic content generation, such as headers and footers.\nThe
    trio delves into the limitations of current printing capabilities in browsers,
    the potential of server-side PDF generation, and the necessity of juggling separate
    templates for web and print. They also consider accessibility for printed content
    and the demands of delivering high-fidelity, pixel-perfect prints.\nThroughout
    the episode, Joel, Charles, and Owen offer up practical advice for developers
    grappling with similar issues, emphasizing the need for thorough research, proactive
    problem-solving, and the exploration of both in-browser and external PDF generation
    solutions.\nKey topics discussed in this episode:\nReal-world experiences with
    software project printing\nNavigating the limitations of browser-based printing\nEnsuring
    cross-browser compatibility and consistent layout\nGenerating dynamic content
    for print versions\nExploring server-side PDF generation and its advantages\nBalancing
    design consistency across web and print formats\nAddressing accessibility in printed
    outputs\nOvercoming the unique challenges of high-accuracy printing requirements\nPractical
    tips for researching and implementing printing solutions\nHandling complex data
    presentations like tables in print\nEvaluating the pros and cons of different
    printing APIs\nUnderstanding the distinction between web viewing and printing
    needs\nInnovating with mixed content in PDF generation\nLearning from past printing
    challenges and planning for future improvements\nLinks mentioned:\nCSS3 https://css3.com/
    \nWeasyPrint https://github.com/Kozea/WeasyPrint\nWebKit https://webkit.org/ \nPdf.js
    https://github.com/mozilla/pdf.js\nYesLogic Prince 15 https://www.princexml.com/\nPrintXML
    https://gist.github.com/craiga/2934093 \nPDF/A https://en.wikipedia.org/wiki/PDF/A\nThe
    PDF/A Family of Archiving Standards https://www.pdflib.com/pdf-knowledge-base/pdfa/the-pdfa-standards/\nPDF/X
    https://en.wikipedia.org/wiki/PDF/X\nMicrosoft Encarta https://en.wikipedia.org/wiki/Encarta
    Special Guests: Charles Suggs and Joel Meador.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+YqfwvagE
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/866cd912-54c7-431a-a337-26586888dab5.mp3
    length: '91609662'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Episode 7 of Elixir Wizards Office Hours, SmartLogic Engineers Joel
      Meador and Charles Suggs join host Owen Bickford to tackle the often tricky
      task of adding print functionality to web applications. They discuss their recent
      experiences with browser-based printing and the hurdles of cross-browser compatibility,
      consistent styling, and dynamic content generation, such as headers and footers.
    duration: '47:03'
    explicit: 'no'
    keywords: software engineering, elixir programming language, programming, programmer
      podcast, web development, web app printing, browser printing, cross-browser
      compatibility, CSS for print, server-side PDF generation, print functionality
      in web apps, dynamic content printing, high-fidelity printing, pixel-perfect
      outputs, PDF generation, web to PDF conversion, CSS print styles, JavaScript
      for printing, accessibility standards in printing, print layout design, custom
      print solutions, web application development, PDF print solutions, automated
      printing tools, digital content printing, responsive design for print, print
      API, HTML to PDF, print media CSS, web printing challenges, printing in Elixir,
      document generation, software project management, tech podcast, development
      challenges, modern web technologies
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/866cd912-54c7-431a-a337-26586888dab5/cover.jpg?v=1
    summary: "\n        <p>In Episode 7 of Elixir Wizards Office Hours, SmartLogic
      Engineers Joel Meador and Charles Suggs join host Owen Bickford to tackle the
      often tricky task of adding print functionality to web applications. They discuss
      their recent experiences with browser-based printing and the hurdles of cross-browser
      compatibility, consistent styling, and dynamic content generation, such as headers
      and footers.</p>\n\n<p>The trio delves into the limitations of current printing
      capabilities in browsers, the potential of server-side PDF generation, and the
      necessity of juggling separate templates for web and print. They also consider
      accessibility for printed content and the demands of delivering high-fidelity,
      pixel-perfect prints.</p>\n\n<p>Throughout the episode, Joel, Charles, and Owen
      offer up practical advice for developers grappling with similar issues, emphasizing
      the need for thorough research, proactive problem-solving, and the exploration
      of both in-browser and external PDF generation solutions.</p>\n\n<h3>Key topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Real-world experiences with software
      project printing</li>\n<li>Navigating the limitations of browser-based printing</li>\n<li>Ensuring
      cross-browser compatibility and consistent layout</li>\n<li>Generating dynamic
      content for print versions</li>\n<li>Exploring server-side PDF generation and
      its advantages</li>\n<li>Balancing design consistency across web and print formats</li>\n<li>Addressing
      accessibility in printed outputs</li>\n<li>Overcoming the unique challenges
      of high-accuracy printing requirements</li>\n<li>Practical tips for researching
      and implementing printing solutions</li>\n<li>Handling complex data presentations
      like tables in print</li>\n<li>Evaluating the pros and cons of different printing
      APIs</li>\n<li>Understanding the distinction between web viewing and printing
      needs</li>\n<li>Innovating with mixed content in PDF generation</li>\n<li>Learning
      from past printing challenges and planning for future improvements</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p>CSS3 <a href=\"https://css3.com/\" rel=\"nofollow\">https://css3.com/</a>
      <br>\nWeasyPrint <a href=\"https://github.com/Kozea/WeasyPrint\" rel=\"nofollow\">https://github.com/Kozea/WeasyPrint</a><br>\nWebKit
      <a href=\"https://webkit.org/\" rel=\"nofollow\">https://webkit.org/</a> <br>\nPdf.js
      <a href=\"https://github.com/mozilla/pdf.js\" rel=\"nofollow\">https://github.com/mozilla/pdf.js</a><br>\nYesLogic
      Prince 15 <a href=\"https://www.princexml.com/\" rel=\"nofollow\">https://www.princexml.com/</a><br>\nPrintXML
      <a href=\"https://gist.github.com/craiga/2934093\" rel=\"nofollow\">https://gist.github.com/craiga/2934093</a>
      <br>\nPDF/A <a href=\"https://en.wikipedia.org/wiki/PDF/A\" rel=\"nofollow\">https://en.wikipedia.org/wiki/PDF/A</a><br>\nThe
      PDF/A Family of Archiving Standards <a href=\"https://www.pdflib.com/pdf-knowledge-base/pdfa/the-pdfa-standards/\"
      rel=\"nofollow\">https://www.pdflib.com/pdf-knowledge-base/pdfa/the-pdfa-standards/</a><br>\nPDF/X
      <a href=\"https://en.wikipedia.org/wiki/PDF/X\" rel=\"nofollow\">https://en.wikipedia.org/wiki/PDF/X</a><br>\nMicrosoft
      Encarta <a href=\"https://en.wikipedia.org/wiki/Encarta\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Encarta</a></p><p>Special
      Guests: Charles Suggs and Joel Meador.</p>\n      "
  contentEncoded: "\n        <p>In Episode 7 of Elixir Wizards Office Hours, SmartLogic
    Engineers Joel Meador and Charles Suggs join host Owen Bickford to tackle the
    often tricky task of adding print functionality to web applications. They discuss
    their recent experiences with browser-based printing and the hurdles of cross-browser
    compatibility, consistent styling, and dynamic content generation, such as headers
    and footers.</p>\n\n<p>The trio delves into the limitations of current printing
    capabilities in browsers, the potential of server-side PDF generation, and the
    necessity of juggling separate templates for web and print. They also consider
    accessibility for printed content and the demands of delivering high-fidelity,
    pixel-perfect prints.</p>\n\n<p>Throughout the episode, Joel, Charles, and Owen
    offer up practical advice for developers grappling with similar issues, emphasizing
    the need for thorough research, proactive problem-solving, and the exploration
    of both in-browser and external PDF generation solutions.</p>\n\n<h3>Key topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Real-world experiences with software
    project printing</li>\n<li>Navigating the limitations of browser-based printing</li>\n<li>Ensuring
    cross-browser compatibility and consistent layout</li>\n<li>Generating dynamic
    content for print versions</li>\n<li>Exploring server-side PDF generation and
    its advantages</li>\n<li>Balancing design consistency across web and print formats</li>\n<li>Addressing
    accessibility in printed outputs</li>\n<li>Overcoming the unique challenges of
    high-accuracy printing requirements</li>\n<li>Practical tips for researching and
    implementing printing solutions</li>\n<li>Handling complex data presentations
    like tables in print</li>\n<li>Evaluating the pros and cons of different printing
    APIs</li>\n<li>Understanding the distinction between web viewing and printing
    needs</li>\n<li>Innovating with mixed content in PDF generation</li>\n<li>Learning
    from past printing challenges and planning for future improvements</li>\n</ul>\n\n<h3>Links
    mentioned:</h3>\n\n<p>CSS3 <a href=\"https://css3.com/\" rel=\"nofollow\">https://css3.com/</a>
    <br>\nWeasyPrint <a href=\"https://github.com/Kozea/WeasyPrint\" rel=\"nofollow\">https://github.com/Kozea/WeasyPrint</a><br>\nWebKit
    <a href=\"https://webkit.org/\" rel=\"nofollow\">https://webkit.org/</a> <br>\nPdf.js
    <a href=\"https://github.com/mozilla/pdf.js\" rel=\"nofollow\">https://github.com/mozilla/pdf.js</a><br>\nYesLogic
    Prince 15 <a href=\"https://www.princexml.com/\" rel=\"nofollow\">https://www.princexml.com/</a><br>\nPrintXML
    <a href=\"https://gist.github.com/craiga/2934093\" rel=\"nofollow\">https://gist.github.com/craiga/2934093</a>
    <br>\nPDF/A <a href=\"https://en.wikipedia.org/wiki/PDF/A\" rel=\"nofollow\">https://en.wikipedia.org/wiki/PDF/A</a><br>\nThe
    PDF/A Family of Archiving Standards <a href=\"https://www.pdflib.com/pdf-knowledge-base/pdfa/the-pdfa-standards/\"
    rel=\"nofollow\">https://www.pdflib.com/pdf-knowledge-base/pdfa/the-pdfa-standards/</a><br>\nPDF/X
    <a href=\"https://en.wikipedia.org/wiki/PDF/X\" rel=\"nofollow\">https://en.wikipedia.org/wiki/PDF/X</a><br>\nMicrosoft
    Encarta <a href=\"https://en.wikipedia.org/wiki/Encarta\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Encarta</a></p><p>Special
    Guests: Charles Suggs and Joel Meador.</p>\n      "
- title: '"Keeping it Fresh" with Bilal Hankins and Anna Dorigo'
  slug: s12-e06-ruby-rails-legacy-app-maintenance
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e06-ruby-rails-legacy-app-maintenance
  guid: 3235b5a1-f01f-4364-b9c4-408406c0fb08
  pubDate: Thu, 25 Apr 2024 06:00:00 -0400
  pubDateFriendly: April 25, 2024
  description: "In Office Hours Episode 6, SmartLogic Developers Anna Dorigo and Bilal
    Hankins join Elixir Wizards Sundi and Dan to discuss their experiences maintaining
    a decade-old Ruby on Rails codebase.\nThey delve into the critical importance
    of deeply understanding the codebase, keeping dependencies current, and adapting
    to the original application's evolving priorities and design choices.\nThe conversation
    spans a range of topics, including accessibility, testing, monitoring, and the
    challenges of deploying database migrations in production environments. The guests
    share effective strategies for sustaining and enhancing older codebases, such
    as employing automated tools, performing code audits, and adhering to clean coding
    principles.\nKey topics discussed in this episode:\nGrasping the legacy codebase
    and its historical context\nOvercoming accessibility issues in older applications\nSafe
    dependency management and upgrades\nThe effects of application scaling on database
    performance\nThe critical role of comprehensive test suites in legacy systems\nUsing
    tools like Sentry for error tracking and performance monitoring\nThe benefits
    of automated security and dependency scans\nJuggling client needs with budget
    constraints\nLocal simulation techniques for large datasets\nThe value of iterative
    code reviews and maintaining clean code\nUtilizing git history for contextual
    understanding\nOnboarding strategies for legacy projects\nRemoving obsolete code
    and avoiding \"magic numbers\"\nImportance of descriptive naming for better code
    clarity\nLeveraging a rich repository of example code for learning and reference\nProactive
    code audits to anticipate issues\nManaging pull request sizes for smoother reviews\nCommunicating
    effectively about upgrades and potential impacts\nStrategies for handling large
    databases efficiently\nEnsuring thorough test coverage\nKeeping open lines of
    communication with clients regarding ongoing maintenance\nLinks mentioned:\nCOBOL
    programming language https://developer.ibm.com/languages/cobol/ \nRuby on Rails
    https://rubyonrails.org/ \nARIA Rules (Accessible Rich Internet Applications)
    https://www.w3.org/TR/using-aria/ \nShawn Vo on Elixir as a Competitive Advantage
    https://smartlogic.io/podcast/elixir-wizards/s5e5-vo/\nBundler Audit Ruby Gem
    https://rubygems.org/gems/bundler-audit/\nSentry application monitoring and error
    tracking software  https://sentry.io/ \nDependabot Github automated dependency
    updates \nMix hex.audit https://hexdocs.pm/hex/Mx.Tasks.Hex.Audit.html \nGit Blame
    https://git-scm.com/docs/git-blame \nCow hoof trimming videos - The Hoof GP on
    YouTube (TW graphic imagery) Special Guests: Anna Dorigo and Bilal Hankins.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+hZfZVnD5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3235b5a1-f01f-4364-b9c4-408406c0fb08.mp3
    length: '70351321'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Office Hours Episode 6, SmartLogic Developers Anna Dorigo and Bilal
      Hankins join Elixir Wizards Sundi and Dan to discuss their experiences maintaining
      a decade-old Ruby on Rails codebase. The conversation spans a range of topics,
      including accessibility, testing, monitoring, and the challenges of deploying
      database migrations in production environments
    duration: '36:00'
    explicit: 'no'
    keywords: programming, software development, Ruby on Rails, RubyLang, app maintenance,
      software engineering, legacy systems, web development, application development,
      technology updates, code refactoring, testing, software testing, automated testing,
      system upgrades, dependency management, database management, performance optimization,
      source code, version control, git, software lifecycle, project management, agile
      methodology, scrum, DevOps, continuous integration, continuous deployment, CI/CD,
      error tracking, issue tracking, software tools, coding standards, best practices,
      code reviews, code audits, clean coding, scalability, software architecture,
      system architecture, tech trends, open source, backend development, frontend
      development, full stack development, user experience, UX design, accessibility,
      security updates, patch management, migration strategies, data migration, deployment
      strategies, production environment, server management, cloud computing, infrastructure
      management, software platforms, programming languages, developer community,
      codebase analysis, maintenance strategy, software updates, tech innovations,
      industry standards, engineering practices, technical debt, legacy code, software
      modernization, application lifecycle, debugging, troubleshooting, software solutions,
      tech podcasts, professional development, tech education
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3235b5a1-f01f-4364-b9c4-408406c0fb08/cover.jpg?v=1
    summary: "\n        <p>In Office Hours Episode 6, SmartLogic Developers Anna Dorigo
      and Bilal Hankins join Elixir Wizards Sundi and Dan to discuss their experiences
      maintaining a decade-old Ruby on Rails codebase.</p>\n\n<p>They delve into the
      critical importance of deeply understanding the codebase, keeping dependencies
      current, and adapting to the original application&#39;s evolving priorities
      and design choices.</p>\n\n<p>The conversation spans a range of topics, including
      accessibility, testing, monitoring, and the challenges of deploying database
      migrations in production environments. The guests share effective strategies
      for sustaining and enhancing older codebases, such as employing automated tools,
      performing code audits, and adhering to clean coding principles.</p>\n\n<h3>Key
      topics discussed in this episode:</h3>\n\n<ul>\n<li>Grasping the legacy codebase
      and its historical context</li>\n<li>Overcoming accessibility issues in older
      applications</li>\n<li>Safe dependency management and upgrades</li>\n<li>The
      effects of application scaling on database performance</li>\n<li>The critical
      role of comprehensive test suites in legacy systems</li>\n<li>Using tools like
      Sentry for error tracking and performance monitoring</li>\n<li>The benefits
      of automated security and dependency scans</li>\n<li>Juggling client needs with
      budget constraints</li>\n<li>Local simulation techniques for large datasets</li>\n<li>The
      value of iterative code reviews and maintaining clean code</li>\n<li>Utilizing
      git history for contextual understanding</li>\n<li>Onboarding strategies for
      legacy projects</li>\n<li>Removing obsolete code and avoiding &quot;magic numbers&quot;</li>\n<li>Importance
      of descriptive naming for better code clarity</li>\n<li>Leveraging a rich repository
      of example code for learning and reference</li>\n<li>Proactive code audits to
      anticipate issues</li>\n<li>Managing pull request sizes for smoother reviews</li>\n<li>Communicating
      effectively about upgrades and potential impacts</li>\n<li>Strategies for handling
      large databases efficiently</li>\n<li>Ensuring thorough test coverage</li>\n<li>Keeping
      open lines of communication with clients regarding ongoing maintenance</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p>COBOL programming language <a href=\"https://developer.ibm.com/languages/cobol/\"
      rel=\"nofollow\">https://developer.ibm.com/languages/cobol/</a> <br>\nRuby on
      Rails <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a>
      <br>\nARIA Rules (Accessible Rich Internet Applications) <a href=\"https://www.w3.org/TR/using-aria/\"
      rel=\"nofollow\">https://www.w3.org/TR/using-aria/</a> <br>\nShawn Vo on Elixir
      as a Competitive Advantage <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e5-vo/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e5-vo/</a><br>\nBundler
      Audit Ruby Gem <a href=\"https://rubygems.org/gems/bundler-audit/\" rel=\"nofollow\">https://rubygems.org/gems/bundler-audit/</a><br>\nSentry
      application monitoring and error tracking software  <a href=\"https://sentry.io/\"
      rel=\"nofollow\">https://sentry.io/</a> <br>\nDependabot Github automated dependency
      updates <br>\nMix hex.audit <a href=\"https://hexdocs.pm/hex/Mx.Tasks.Hex.Audit.html\"
      rel=\"nofollow\">https://hexdocs.pm/hex/Mx.Tasks.Hex.Audit.html</a> <br>\nGit
      Blame <a href=\"https://git-scm.com/docs/git-blame\" rel=\"nofollow\">https://git-scm.com/docs/git-blame</a>
      <br>\nCow hoof trimming videos - The Hoof GP on YouTube (TW graphic imagery)</p><p>Special
      Guests: Anna Dorigo and Bilal Hankins.</p>\n      "
  contentEncoded: "\n        <p>In Office Hours Episode 6, SmartLogic Developers Anna
    Dorigo and Bilal Hankins join Elixir Wizards Sundi and Dan to discuss their experiences
    maintaining a decade-old Ruby on Rails codebase.</p>\n\n<p>They delve into the
    critical importance of deeply understanding the codebase, keeping dependencies
    current, and adapting to the original application&#39;s evolving priorities and
    design choices.</p>\n\n<p>The conversation spans a range of topics, including
    accessibility, testing, monitoring, and the challenges of deploying database migrations
    in production environments. The guests share effective strategies for sustaining
    and enhancing older codebases, such as employing automated tools, performing code
    audits, and adhering to clean coding principles.</p>\n\n<h3>Key topics discussed
    in this episode:</h3>\n\n<ul>\n<li>Grasping the legacy codebase and its historical
    context</li>\n<li>Overcoming accessibility issues in older applications</li>\n<li>Safe
    dependency management and upgrades</li>\n<li>The effects of application scaling
    on database performance</li>\n<li>The critical role of comprehensive test suites
    in legacy systems</li>\n<li>Using tools like Sentry for error tracking and performance
    monitoring</li>\n<li>The benefits of automated security and dependency scans</li>\n<li>Juggling
    client needs with budget constraints</li>\n<li>Local simulation techniques for
    large datasets</li>\n<li>The value of iterative code reviews and maintaining clean
    code</li>\n<li>Utilizing git history for contextual understanding</li>\n<li>Onboarding
    strategies for legacy projects</li>\n<li>Removing obsolete code and avoiding &quot;magic
    numbers&quot;</li>\n<li>Importance of descriptive naming for better code clarity</li>\n<li>Leveraging
    a rich repository of example code for learning and reference</li>\n<li>Proactive
    code audits to anticipate issues</li>\n<li>Managing pull request sizes for smoother
    reviews</li>\n<li>Communicating effectively about upgrades and potential impacts</li>\n<li>Strategies
    for handling large databases efficiently</li>\n<li>Ensuring thorough test coverage</li>\n<li>Keeping
    open lines of communication with clients regarding ongoing maintenance</li>\n</ul>\n\n<h3>Links
    mentioned:</h3>\n\n<p>COBOL programming language <a href=\"https://developer.ibm.com/languages/cobol/\"
    rel=\"nofollow\">https://developer.ibm.com/languages/cobol/</a> <br>\nRuby on
    Rails <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a>
    <br>\nARIA Rules (Accessible Rich Internet Applications) <a href=\"https://www.w3.org/TR/using-aria/\"
    rel=\"nofollow\">https://www.w3.org/TR/using-aria/</a> <br>\nShawn Vo on Elixir
    as a Competitive Advantage <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e5-vo/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e5-vo/</a><br>\nBundler
    Audit Ruby Gem <a href=\"https://rubygems.org/gems/bundler-audit/\" rel=\"nofollow\">https://rubygems.org/gems/bundler-audit/</a><br>\nSentry
    application monitoring and error tracking software  <a href=\"https://sentry.io/\"
    rel=\"nofollow\">https://sentry.io/</a> <br>\nDependabot Github automated dependency
    updates <br>\nMix hex.audit <a href=\"https://hexdocs.pm/hex/Mx.Tasks.Hex.Audit.html\"
    rel=\"nofollow\">https://hexdocs.pm/hex/Mx.Tasks.Hex.Audit.html</a> <br>\nGit
    Blame <a href=\"https://git-scm.com/docs/git-blame\" rel=\"nofollow\">https://git-scm.com/docs/git-blame</a>
    <br>\nCow hoof trimming videos - The Hoof GP on YouTube (TW graphic imagery)</p><p>Special
    Guests: Anna Dorigo and Bilal Hankins.</p>\n      "
- title: '"Saga of a Gnarly Report" with Owen and Dan'
  slug: s12-e05-saga-of-a-gnarly-report
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e05-saga-of-a-gnarly-report
  guid: f0d1daa0-bc06-4daf-b6c9-c37a12357821
  pubDate: Thu, 18 Apr 2024 07:00:00 -0400
  pubDateFriendly: April 18, 2024
  description: "In today's episode, Elixir Wizards Owen and Dan delve into the complexities
    of building advanced reporting features within software applications. They share
    personal insights and challenges encountered while developing reporting solutions
    for user-generated data, leveraging both Elixir/Phoenix and Ruby on Rails.\nThe
    discussion zeroes in on crucial data modeling and architectural decisions that
    enhance reporting efficiency and flexibility. Owen and Dan explore tactics like
    materialized views, event sourcing, and database triggers to optimize data handling
    while being mindful of UX elements like progress indicators and background job
    management.\nThey share insights on leveraging the Elixir/Beam ecosystem’s strengths—like
    concurrency and streamlined deployment—to tackle common reporting, caching, and
    integration challenges. The episode highlights the impact of reporting features
    across all aspects of a software application’s design and architecture.\nKey topics
    discussed in this episode:\nReporting on assessment data, survey results, and
    user metrics\nDifferences between reporting and performance/error monitoring\nImplementing
    reporting in Elixir/Phoenix vs. Ruby on Rails\nDisplaying reports in web, printable,
    PDF, SVG, and CSV formats\nChallenges of generating PDFs for large data sets\nStreaming
    CSV data directly to the client\nHandling long-running report generation tasks\nProviding
    progress indicators and user notifications\nStrategies for canceling or abandoning
    incomplete reports\nTradeoffs of pre-calculating report data vs. real-time generation\nMaterializing
    views and denormalizing data for reporting\nExploring event sourcing patterns
    for reporting needs\nUsing database triggers and stored procedures for reporting\nBalancing
    data structure optimization for reports vs. day-to-day usage\nCaching report data
    for faster retrieval and rendering\nCharting and visualization integration in
    reporting systems\nLinks mentioned:\nPrometheus monitoring system & time series
    database https://prometheus.io/ \nThinking Elixir \"FLAME with Chris McCord\"
    https://podcast.thinkingelixir.com/181\nPhoenix LiveView Uploads https://hexdocs.pm/phoenix/fileuploads.html\nhttps://hexdocs.pm/phoenixlive_view/Phoenix.LiveView.UploadWriter.html
    \nPostgrex PostgreSQL driver for Elixir https://hexdocs.pm/postgrex/Postgrex.html
    \nEcto https://hexdocs.pm/ecto/Ecto.html \nHeroku cloud application platform 
    https://www.heroku.com/ \nElixir Wizards S9E12 Marcelo Dominguez on Command and
    Query Responsibility Segregation https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs/\nCommanded
    Elixir CQRS/ES applications https://github.com/commanded/commanded\nTailwind CSS
    Framework https://github.com/tailwindlabs\nMemcached https://memcached.org/\nRedis
    https://redis.io/\nOban https://hexdocs.pm/oban/Oban.html\nETS https://hexdocs.pm/ets/ETS.html\nCapistrano
    remote server automation and deployment tool https://capistranorb.com/ \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gRrFRMaV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f0d1daa0-bc06-4daf-b6c9-c37a12357821.mp3
    length: '97997538'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: Elixir Wizards Owen and Dan delve into the complexities of building
      advanced reporting features within software applications. They share personal
      insights and challenges encountered while developing reporting solutions for
      user-generated data, leveraging both Elixir/Phoenix and Ruby on Rails.
    duration: '50:21'
    explicit: 'no'
    keywords: software development, web development, programming languages, software
      engineering, data reporting, app development, user experience, Ruby on Rails,
      Elixir programming, Phoenix framework, application design, system architecture,
      API development, real-time applications, open-source software, software design
      principles, user interface design, project management, tech industry trends,
      agile methodology, database management, SQL, NoSQL, cloud computing, frontend
      development, backend development, full-stack development, JavaScript, Python,
      HTML, CSS, data visualization, machine learning, artificial intelligence, software
      testing, continuous integration, deployment strategies, version control, Git,
      GitHub, DevOps, security best practices, network architecture, data science,
      data analysis, big data, software documentation, coding best practices, code
      refactoring, system scalability, performance optimization, server-side scripting,
      client-side scripting, responsive design, mobile app development, cross-platform
      development, tech startups, tech news, digital transformation, IT management,
      tech conferences, programming tutorials, coding challenges, software career
      development
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f0d1daa0-bc06-4daf-b6c9-c37a12357821/cover.jpg?v=1
    summary: "\n        <p>In today&#39;s episode, Elixir Wizards Owen and Dan delve
      into the complexities of building advanced reporting features within software
      applications. They share personal insights and challenges encountered while
      developing reporting solutions for user-generated data, leveraging both Elixir/Phoenix
      and Ruby on Rails.</p>\n\n<p>The discussion zeroes in on crucial data modeling
      and architectural decisions that enhance reporting efficiency and flexibility.
      Owen and Dan explore tactics like materialized views, event sourcing, and database
      triggers to optimize data handling while being mindful of UX elements like progress
      indicators and background job management.</p>\n\n<p>They share insights on leveraging
      the Elixir/Beam ecosystem’s strengths—like concurrency and streamlined deployment—to
      tackle common reporting, caching, and integration challenges. The episode highlights
      the impact of reporting features across all aspects of a software application’s
      design and architecture.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>Reporting
      on assessment data, survey results, and user metrics</li>\n<li>Differences between
      reporting and performance/error monitoring</li>\n<li>Implementing reporting
      in Elixir/Phoenix vs. Ruby on Rails</li>\n<li>Displaying reports in web, printable,
      PDF, SVG, and CSV formats</li>\n<li>Challenges of generating PDFs for large
      data sets</li>\n<li>Streaming CSV data directly to the client</li>\n<li>Handling
      long-running report generation tasks</li>\n<li>Providing progress indicators
      and user notifications</li>\n<li>Strategies for canceling or abandoning incomplete
      reports</li>\n<li>Tradeoffs of pre-calculating report data vs. real-time generation</li>\n<li>Materializing
      views and denormalizing data for reporting</li>\n<li>Exploring event sourcing
      patterns for reporting needs</li>\n<li>Using database triggers and stored procedures
      for reporting</li>\n<li>Balancing data structure optimization for reports vs.
      day-to-day usage</li>\n<li>Caching report data for faster retrieval and rendering</li>\n<li>Charting
      and visualization integration in reporting systems</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p>Prometheus monitoring system &amp; time series database
      <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a>
      <br>\nThinking Elixir &quot;FLAME with Chris McCord&quot; <a href=\"https://podcast.thinkingelixir.com/181\"
      rel=\"nofollow\">https://podcast.thinkingelixir.com/181</a><br>\nPhoenix LiveView
      Uploads <a href=\"https://hexdocs.pm/phoenix/file_uploads.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/file_uploads.html</a><br>\n<a
      href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.UploadWriter.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.UploadWriter.html</a>
      <br>\nPostgrex PostgreSQL driver for Elixir <a href=\"https://hexdocs.pm/postgrex/Postgrex.html\"
      rel=\"nofollow\">https://hexdocs.pm/postgrex/Postgrex.html</a> <br>\nEcto <a
      href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a>
      <br>\nHeroku cloud application platform  <a href=\"https://www.heroku.com/\"
      rel=\"nofollow\">https://www.heroku.com/</a> <br>\nElixir Wizards S9E12 Marcelo
      Dominguez on Command and Query Responsibility Segregation <a href=\"https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs/</a><br>\nCommanded
      Elixir CQRS/ES applications <a href=\"https://github.com/commanded/commanded\"
      rel=\"nofollow\">https://github.com/commanded/commanded</a><br>\nTailwind CSS
      Framework <a href=\"https://github.com/tailwindlabs\" rel=\"nofollow\">https://github.com/tailwindlabs</a><br>\nMemcached
      <a href=\"https://memcached.org/\" rel=\"nofollow\">https://memcached.org/</a><br>\nRedis
      <a href=\"https://redis.io/\" rel=\"nofollow\">https://redis.io/</a><br>\nOban
      <a href=\"https://hexdocs.pm/oban/Oban.html\" rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a><br>\nETS
      <a href=\"https://hexdocs.pm/ets/ETS.html\" rel=\"nofollow\">https://hexdocs.pm/ets/ETS.html</a><br>\nCapistrano
      remote server automation and deployment tool <a href=\"https://capistranorb.com/\"
      rel=\"nofollow\">https://capistranorb.com/</a></p>\n      "
  contentEncoded: "\n        <p>In today&#39;s episode, Elixir Wizards Owen and Dan
    delve into the complexities of building advanced reporting features within software
    applications. They share personal insights and challenges encountered while developing
    reporting solutions for user-generated data, leveraging both Elixir/Phoenix and
    Ruby on Rails.</p>\n\n<p>The discussion zeroes in on crucial data modeling and
    architectural decisions that enhance reporting efficiency and flexibility. Owen
    and Dan explore tactics like materialized views, event sourcing, and database
    triggers to optimize data handling while being mindful of UX elements like progress
    indicators and background job management.</p>\n\n<p>They share insights on leveraging
    the Elixir/Beam ecosystem’s strengths—like concurrency and streamlined deployment—to
    tackle common reporting, caching, and integration challenges. The episode highlights
    the impact of reporting features across all aspects of a software application’s
    design and architecture.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>Reporting
    on assessment data, survey results, and user metrics</li>\n<li>Differences between
    reporting and performance/error monitoring</li>\n<li>Implementing reporting in
    Elixir/Phoenix vs. Ruby on Rails</li>\n<li>Displaying reports in web, printable,
    PDF, SVG, and CSV formats</li>\n<li>Challenges of generating PDFs for large data
    sets</li>\n<li>Streaming CSV data directly to the client</li>\n<li>Handling long-running
    report generation tasks</li>\n<li>Providing progress indicators and user notifications</li>\n<li>Strategies
    for canceling or abandoning incomplete reports</li>\n<li>Tradeoffs of pre-calculating
    report data vs. real-time generation</li>\n<li>Materializing views and denormalizing
    data for reporting</li>\n<li>Exploring event sourcing patterns for reporting needs</li>\n<li>Using
    database triggers and stored procedures for reporting</li>\n<li>Balancing data
    structure optimization for reports vs. day-to-day usage</li>\n<li>Caching report
    data for faster retrieval and rendering</li>\n<li>Charting and visualization integration
    in reporting systems</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Prometheus
    monitoring system &amp; time series database <a href=\"https://prometheus.io/\"
    rel=\"nofollow\">https://prometheus.io/</a> <br>\nThinking Elixir &quot;FLAME
    with Chris McCord&quot; <a href=\"https://podcast.thinkingelixir.com/181\" rel=\"nofollow\">https://podcast.thinkingelixir.com/181</a><br>\nPhoenix
    LiveView Uploads <a href=\"https://hexdocs.pm/phoenix/file_uploads.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/file_uploads.html</a><br>\n<a
    href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.UploadWriter.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.UploadWriter.html</a>
    <br>\nPostgrex PostgreSQL driver for Elixir <a href=\"https://hexdocs.pm/postgrex/Postgrex.html\"
    rel=\"nofollow\">https://hexdocs.pm/postgrex/Postgrex.html</a> <br>\nEcto <a href=\"https://hexdocs.pm/ecto/Ecto.html\"
    rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a> <br>\nHeroku cloud application
    platform  <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a>
    <br>\nElixir Wizards S9E12 Marcelo Dominguez on Command and Query Responsibility
    Segregation <a href=\"https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs/</a><br>\nCommanded
    Elixir CQRS/ES applications <a href=\"https://github.com/commanded/commanded\"
    rel=\"nofollow\">https://github.com/commanded/commanded</a><br>\nTailwind CSS
    Framework <a href=\"https://github.com/tailwindlabs\" rel=\"nofollow\">https://github.com/tailwindlabs</a><br>\nMemcached
    <a href=\"https://memcached.org/\" rel=\"nofollow\">https://memcached.org/</a><br>\nRedis
    <a href=\"https://redis.io/\" rel=\"nofollow\">https://redis.io/</a><br>\nOban
    <a href=\"https://hexdocs.pm/oban/Oban.html\" rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a><br>\nETS
    <a href=\"https://hexdocs.pm/ets/ETS.html\" rel=\"nofollow\">https://hexdocs.pm/ets/ETS.html</a><br>\nCapistrano
    remote server automation and deployment tool <a href=\"https://capistranorb.com/\"
    rel=\"nofollow\">https://capistranorb.com/</a></p>\n      "
- title: '"Whose Tailwind is it Anyway?" with Ava Slivkoff'
  slug: s12-e04-software-design-development-collab
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e04-software-design-development-collab
  guid: b6ac3502-4549-4104-92fd-f11de5c49acf
  pubDate: Thu, 11 Apr 2024 08:30:00 -0400
  pubDateFriendly: April 11, 2024
  description: "In Elixir Wizards Office Hours Episode 4, SmartLogic Product Designer
    Ava Slivkoff joins hosts Sundi Myint and Owen Bickford to discuss the product
    designer's role in software development. Ava shares her experience navigating
    client expectations, software design principles, and technical constraints.\nThey
    explore the integration of design and development workflows and how designers
    and engineers can collaborate to meet a project's specific needs. The conversation
    emphasizes the value of cross-functional teams and the synergy that can arise
    when all team members work in harmony to bring a product to life.\nKey concepts
    discussed in the episode:\nThe broad scope of the designer role in web app development\nThe
    value of an MVP in the iterative software design process\nChallenges of aligning
    client expectations with design best practices\nPros and cons of leveraging pre-built
    Tailwind CSS styled components \nTrends and evolution in web design aesthetics
    and patterns\nLeveraging open-source design systems like Tailwind UI\nBalancing
    technical constraints with design aspirations\nCommunication and trust-building
    between designers and engineers\nWorkflows for design handoffs and feedback loops\nImportance
    of user flows and mapping the product experience\nChallenges around the implementation
    of complex UI elements\nBenefits of regular design review meetings and syncs\nFostering
    empathy and collaboration across disciplines\nLinks mentioned\nFigma Dev Mode
    https://www.figma.com/dev-mode/ \nTailwind CSS utility-first CSS framework https://tailwindcss.com/
    \nTailwind UI https://tailwindui.com/ \nhttps://devinai.ai/\n Special Guest: Ava
    Slivkoff.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vWg_VBh8
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b6ac3502-4549-4104-92fd-f11de5c49acf.mp3
    length: '93948591'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Elixir Wizards Office Hours Episode 4, SmartLogic Product Designer
      Ava Slivkoff joins hosts Sundi Myint and Owen Bickford to discuss the product
      designer's role in software development. They explore the integration of design
      and development workflows and how designers and engineers can work together
      to meet a project's specific needs.
    duration: '48:17'
    explicit: 'no'
    keywords: elixir programming language, software design, software design principles,
      web app development, figma dev mode, figma web design, app design, software
      product design, design philosophy, web design, uxui, web development, front
      end, front end development, tailwind css, tailwind ui, software development,
      styled components, user experience design, responsive design, mobile app development,
      user interface design, product development strategies, agile software development,
      cross-functional teams, design thinking, coding best practices, continuous integration,
      deployment strategies, project management in software development, design systems
      implementation, tech stack selection, API design and development, cloud computing
      basics, version control systems, collaboration tools for teams, digital product
      strategy, programming methodologies, open source software, tech industry trends,
      developer tools and resources, accessibility in web design, security best practices
      in development
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b6ac3502-4549-4104-92fd-f11de5c49acf/cover.jpg?v=1
    summary: "\n        <p>In Elixir Wizards Office Hours Episode 4, SmartLogic Product
      Designer Ava Slivkoff joins hosts Sundi Myint and Owen Bickford to discuss the
      product designer&#39;s role in software development. Ava shares her experience
      navigating client expectations, software design principles, and technical constraints.</p>\n\n<p>They
      explore the integration of design and development workflows and how designers
      and engineers can collaborate to meet a project&#39;s specific needs. The conversation
      emphasizes the value of cross-functional teams and the synergy that can arise
      when all team members work in harmony to bring a product to life.</p>\n\n<h3>Key
      concepts discussed in the episode:</h3>\n\n<ul>\n<li>The broad scope of the
      designer role in web app development</li>\n<li>The value of an MVP in the iterative
      software design process</li>\n<li>Challenges of aligning client expectations
      with design best practices</li>\n<li>Pros and cons of leveraging pre-built Tailwind
      CSS styled components </li>\n<li>Trends and evolution in web design aesthetics
      and patterns</li>\n<li>Leveraging open-source design systems like Tailwind UI</li>\n<li>Balancing
      technical constraints with design aspirations</li>\n<li>Communication and trust-building
      between designers and engineers</li>\n<li>Workflows for design handoffs and
      feedback loops</li>\n<li>Importance of user flows and mapping the product experience</li>\n<li>Challenges
      around the implementation of complex UI elements</li>\n<li>Benefits of regular
      design review meetings and syncs</li>\n<li>Fostering empathy and collaboration
      across disciplines</li>\n</ul>\n\n<h3>Links mentioned</h3>\n\n<p>Figma Dev Mode
      <a href=\"https://www.figma.com/dev-mode/\" rel=\"nofollow\">https://www.figma.com/dev-mode/</a>
      <br>\nTailwind CSS utility-first CSS framework <a href=\"https://tailwindcss.com/\"
      rel=\"nofollow\">https://tailwindcss.com/</a> <br>\nTailwind UI <a href=\"https://tailwindui.com/\"
      rel=\"nofollow\">https://tailwindui.com/</a> <br>\n<a href=\"https://devinai.ai/\"
      rel=\"nofollow\">https://devinai.ai/</a></p><p>Special Guest: Ava Slivkoff.</p>\n
      \     "
  contentEncoded: "\n        <p>In Elixir Wizards Office Hours Episode 4, SmartLogic
    Product Designer Ava Slivkoff joins hosts Sundi Myint and Owen Bickford to discuss
    the product designer&#39;s role in software development. Ava shares her experience
    navigating client expectations, software design principles, and technical constraints.</p>\n\n<p>They
    explore the integration of design and development workflows and how designers
    and engineers can collaborate to meet a project&#39;s specific needs. The conversation
    emphasizes the value of cross-functional teams and the synergy that can arise
    when all team members work in harmony to bring a product to life.</p>\n\n<h3>Key
    concepts discussed in the episode:</h3>\n\n<ul>\n<li>The broad scope of the designer
    role in web app development</li>\n<li>The value of an MVP in the iterative software
    design process</li>\n<li>Challenges of aligning client expectations with design
    best practices</li>\n<li>Pros and cons of leveraging pre-built Tailwind CSS styled
    components </li>\n<li>Trends and evolution in web design aesthetics and patterns</li>\n<li>Leveraging
    open-source design systems like Tailwind UI</li>\n<li>Balancing technical constraints
    with design aspirations</li>\n<li>Communication and trust-building between designers
    and engineers</li>\n<li>Workflows for design handoffs and feedback loops</li>\n<li>Importance
    of user flows and mapping the product experience</li>\n<li>Challenges around the
    implementation of complex UI elements</li>\n<li>Benefits of regular design review
    meetings and syncs</li>\n<li>Fostering empathy and collaboration across disciplines</li>\n</ul>\n\n<h3>Links
    mentioned</h3>\n\n<p>Figma Dev Mode <a href=\"https://www.figma.com/dev-mode/\"
    rel=\"nofollow\">https://www.figma.com/dev-mode/</a> <br>\nTailwind CSS utility-first
    CSS framework <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">https://tailwindcss.com/</a>
    <br>\nTailwind UI <a href=\"https://tailwindui.com/\" rel=\"nofollow\">https://tailwindui.com/</a>
    <br>\n<a href=\"https://devinai.ai/\" rel=\"nofollow\">https://devinai.ai/</a></p><p>Special
    Guest: Ava Slivkoff.</p>\n      "
- title: '"You''ve Got a Job to Do" with Joel Meador'
  slug: s12-e03-background-jobs-web-development
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e03-background-jobs-web-development
  guid: 43524988-7fb9-47c0-b4be-39d5b1df4432
  pubDate: Thu, 04 Apr 2024 07:00:00 -0400
  pubDateFriendly: April  4, 2024
  description: "Today on Elixir Wizards Office Hours, SmartLogic Engineer Joel Meador
    joins Dan Ivovich to discuss all things background jobs.\nThe behind-the-scenes
    heroes of app performance and scalability, background jobs take center stage as
    we dissect their role in optimizing user experience and managing heavy-lifting
    tasks away from the main application flow. From syncing with external systems
    to processing large datasets, background jobs are pivotal to successful application
    management.\nDan and Joel share their perspectives on monitoring, debugging, and
    securing background jobs, emphasizing the need for a strategic approach to these
    hidden workflows.\nKey topics discussed in this episode:\nThe vital role of background
    jobs in app performance\nOptimizing user experience through background processing\nCommon
    pitfalls: resource starvation and latency issues\nStrategies for effective monitoring
    and debugging of task runners and job schedulers\nData integrity and system security
    in open source software\nBackground job tools like Oban, Sidekiq, Resque, Cron
    jobs, Redis pub sub\nCPU utilization and processing speed\nBest practices for
    implementing background jobs\nKeeping jobs small, focused, and well-monitored\nNavigating
    job uniqueness, locking, and deployment orchestration\nLeveraging asynctask for
    asynchronous operations\nThe art of continuous improvement in background job management\nLinks
    mentioned in this episode:\nhttps://redis.io/ \nOban job processing library https://hexdocs.pm/oban/Oban.html
    \nResque Ruby library for background jobs https://github.com/resque \nSidekiq
    background processing for Ruby https://github.com/sidekiq \nDelayed Job priority
    queue system https://github.com/collectiveidea/delayed_job \nRabbitMQ messaging
    and streaming broker https://www.rabbitmq.com/ \nMnesia distributed telecommunications
    DBMS https://www.erlang.org/doc/man/mnesia.html\nTask for Elixir https://hexdocs.pm/elixir/1.12/Task.html\nETS
    in-memory store for Elixir and Erlang objects https://hexdocs.pm/ets/ETS.html\nCron
    - https://en.wikipedia.org/wiki/Cron \nDonate to Miami Indians of Indiana https://www.miamiindians.org/take-action\nJoel
    Meador on Tumblr https://joelmeador.tumblr.com/ Special Guest: Joel Meador.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+PlOPV-tT
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/43524988-7fb9-47c0-b4be-39d5b1df4432.mp3
    length: '65395086'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: 'Today on Elixir Wizards Office Hours, SmartLogic Engineer Joel Meador
      joins Dan Ivovich to discuss all things background jobs. '
    duration: '44:26'
    explicit: 'no'
    keywords: software development, web development, programming, elixir programming
      language, ruby on rails, background jobs, background processes, task automation,
      app performance, scalability, system architecture, code optimization, performance
      tuning, server management, DevOps, continuous integration, continuous deployment,
      agile methodologies, open source software, middleware, job queue, redis queue,
      redis pub sub, sidekiq, cron job, monitoring tools, debugging techniques, security
      practices, API development, microservices architecture, cloud computing, AWS,
      Azure, Google Cloud, database management, SQL, NoSQL, PostgreSQL, MySQL, caching
      strategies, performance metrics, CPU utilization, network latency, responsive
      web design, frontend development, JavaScript, React, Vue.js, Angular, backend
      development, Node.js, PHP, Laravel, Django, functional programming, object-oriented
      programming, version control, Git, GitHub, software testing, unit testing, TDD,
      BDD, software deployment, Jenkins, Ansible, Terraform, machine learning in web
      development, data analysis, cybersecurity, encryption, authentication, privacy
      laws, GDPR, coding best practices, refactoring, software patterns, design patterns,
      high availability, fault tolerance, API gateways, event-driven architecture,
      tech trends, future of web development, tech interviews, developer conferences,
      programming languages, framework comparisons, software project management, digital
      transformation, cloud-native applications, software philosophies, tech education,
      tech communities online, collaboration in tech teams
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/43524988-7fb9-47c0-b4be-39d5b1df4432/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards Office Hours, SmartLogic Engineer
      Joel Meador joins Dan Ivovich to discuss all things background jobs.</p>\n\n<p>The
      behind-the-scenes heroes of app performance and scalability, background jobs
      take center stage as we dissect their role in optimizing user experience and
      managing heavy-lifting tasks away from the main application flow. From syncing
      with external systems to processing large datasets, background jobs are pivotal
      to successful application management.</p>\n\n<p>Dan and Joel share their perspectives
      on monitoring, debugging, and securing background jobs, emphasizing the need
      for a strategic approach to these hidden workflows.</p>\n\n<h3>Key topics discussed
      in this episode:</h3>\n\n<ul>\n<li>The vital role of background jobs in app
      performance</li>\n<li>Optimizing user experience through background processing</li>\n<li>Common
      pitfalls: resource starvation and latency issues</li>\n<li>Strategies for effective
      monitoring and debugging of task runners and job schedulers</li>\n<li>Data integrity
      and system security in open source software</li>\n<li>Background job tools like
      Oban, Sidekiq, Resque, Cron jobs, Redis pub sub</li>\n<li>CPU utilization and
      processing speed</li>\n<li>Best practices for implementing background jobs</li>\n<li>Keeping
      jobs small, focused, and well-monitored</li>\n<li>Navigating job uniqueness,
      locking, and deployment orchestration</li>\n<li>Leveraging asynctask for asynchronous
      operations</li>\n<li>The art of continuous improvement in background job management</li>\n</ul>\n\n<h3>Links
      mentioned in this episode:</h3>\n\n<p><a href=\"https://redis.io/\" rel=\"nofollow\">https://redis.io/</a>
      <br>\nOban job processing library <a href=\"https://hexdocs.pm/oban/Oban.html\"
      rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a> <br>\nResque Ruby library
      for background jobs <a href=\"https://github.com/resque\" rel=\"nofollow\">https://github.com/resque</a>
      <br>\nSidekiq background processing for Ruby <a href=\"https://github.com/sidekiq\"
      rel=\"nofollow\">https://github.com/sidekiq</a> <br>\nDelayed Job priority queue
      system <a href=\"https://github.com/collectiveidea/delayed_job\" rel=\"nofollow\">https://github.com/collectiveidea/delayed_job</a>
      <br>\nRabbitMQ messaging and streaming broker <a href=\"https://www.rabbitmq.com/\"
      rel=\"nofollow\">https://www.rabbitmq.com/</a> <br>\nMnesia distributed telecommunications
      DBMS <a href=\"https://www.erlang.org/doc/man/mnesia.html\" rel=\"nofollow\">https://www.erlang.org/doc/man/mnesia.html</a><br>\nTask
      for Elixir <a href=\"https://hexdocs.pm/elixir/1.12/Task.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/1.12/Task.html</a><br>\nETS
      in-memory store for Elixir and Erlang objects <a href=\"https://hexdocs.pm/ets/ETS.html\"
      rel=\"nofollow\">https://hexdocs.pm/ets/ETS.html</a><br>\nCron - <a href=\"https://en.wikipedia.org/wiki/Cron\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Cron</a> <br>\nDonate to Miami
      Indians of Indiana <a href=\"https://www.miamiindians.org/take-action\" rel=\"nofollow\">https://www.miamiindians.org/take-action</a><br>\nJoel
      Meador on Tumblr <a href=\"https://joelmeador.tumblr.com/\" rel=\"nofollow\">https://joelmeador.tumblr.com/</a></p><p>Special
      Guest: Joel Meador.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards Office Hours, SmartLogic Engineer
    Joel Meador joins Dan Ivovich to discuss all things background jobs.</p>\n\n<p>The
    behind-the-scenes heroes of app performance and scalability, background jobs take
    center stage as we dissect their role in optimizing user experience and managing
    heavy-lifting tasks away from the main application flow. From syncing with external
    systems to processing large datasets, background jobs are pivotal to successful
    application management.</p>\n\n<p>Dan and Joel share their perspectives on monitoring,
    debugging, and securing background jobs, emphasizing the need for a strategic
    approach to these hidden workflows.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>The
    vital role of background jobs in app performance</li>\n<li>Optimizing user experience
    through background processing</li>\n<li>Common pitfalls: resource starvation and
    latency issues</li>\n<li>Strategies for effective monitoring and debugging of
    task runners and job schedulers</li>\n<li>Data integrity and system security in
    open source software</li>\n<li>Background job tools like Oban, Sidekiq, Resque,
    Cron jobs, Redis pub sub</li>\n<li>CPU utilization and processing speed</li>\n<li>Best
    practices for implementing background jobs</li>\n<li>Keeping jobs small, focused,
    and well-monitored</li>\n<li>Navigating job uniqueness, locking, and deployment
    orchestration</li>\n<li>Leveraging asynctask for asynchronous operations</li>\n<li>The
    art of continuous improvement in background job management</li>\n</ul>\n\n<h3>Links
    mentioned in this episode:</h3>\n\n<p><a href=\"https://redis.io/\" rel=\"nofollow\">https://redis.io/</a>
    <br>\nOban job processing library <a href=\"https://hexdocs.pm/oban/Oban.html\"
    rel=\"nofollow\">https://hexdocs.pm/oban/Oban.html</a> <br>\nResque Ruby library
    for background jobs <a href=\"https://github.com/resque\" rel=\"nofollow\">https://github.com/resque</a>
    <br>\nSidekiq background processing for Ruby <a href=\"https://github.com/sidekiq\"
    rel=\"nofollow\">https://github.com/sidekiq</a> <br>\nDelayed Job priority queue
    system <a href=\"https://github.com/collectiveidea/delayed_job\" rel=\"nofollow\">https://github.com/collectiveidea/delayed_job</a>
    <br>\nRabbitMQ messaging and streaming broker <a href=\"https://www.rabbitmq.com/\"
    rel=\"nofollow\">https://www.rabbitmq.com/</a> <br>\nMnesia distributed telecommunications
    DBMS <a href=\"https://www.erlang.org/doc/man/mnesia.html\" rel=\"nofollow\">https://www.erlang.org/doc/man/mnesia.html</a><br>\nTask
    for Elixir <a href=\"https://hexdocs.pm/elixir/1.12/Task.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/1.12/Task.html</a><br>\nETS
    in-memory store for Elixir and Erlang objects <a href=\"https://hexdocs.pm/ets/ETS.html\"
    rel=\"nofollow\">https://hexdocs.pm/ets/ETS.html</a><br>\nCron - <a href=\"https://en.wikipedia.org/wiki/Cron\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Cron</a> <br>\nDonate to Miami
    Indians of Indiana <a href=\"https://www.miamiindians.org/take-action\" rel=\"nofollow\">https://www.miamiindians.org/take-action</a><br>\nJoel
    Meador on Tumblr <a href=\"https://joelmeador.tumblr.com/\" rel=\"nofollow\">https://joelmeador.tumblr.com/</a></p><p>Special
    Guest: Joel Meador.</p>\n      "
- title: '"Discovery Discoveries" with Alicia Brindisi and Bri LaVorgna'
  slug: s12-e02-discovery-phase-agile-software-development
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e02-discovery-phase-agile-software-development
  guid: b9a950af-a55c-4a4f-9bad-da2623fee154
  pubDate: Thu, 28 Mar 2024 07:00:00 -0400
  pubDateFriendly: March 28, 2024
  description: |
    In Elixir Wizards Office Hours Episode 2, "Discovery Discoveries," SmartLogic's Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna join Elixir Wizards Sundi Myint and Owen Bickford on an exploratory journey through the discovery phase of the software development lifecycle.
    This episode highlights how collaboration and communication transform the client-project team dynamic into a customized expedition. The goal of discovery is to reveal clear business goals, understand the end user, pinpoint key project objectives, and meticulously document the path forward in a Product Requirements Document (PRD).
    The discussion emphasizes the importance of fostering transparency, trust, and open communication. Through a mutual exchange of ideas, we are able to create the most tailored, efficient solutions that meet the client's current goals and their vision for the future.
    Key topics discussed in this episode:
    Mastering the art of tailored, collaborative discovery
    Navigating business landscapes and user experiences with empathy
    Sculpting project objectives and architectural blueprints
    Continuously capturing discoveries and refining documentation
    Striking the perfect balance between flexibility and structured processes
    Steering clear of scope creep while managing expectations
    Tapping into collective wisdom for ongoing discovery
    Building and sustaining a foundation of trust and transparency
    Links mentioned in this episode:
    https://smartlogic.io/
    Follow SmartLogic on social media: https://twitter.com/smartlogic
    Contact Bri: bri@smartlogic.io
    What is a PRD? https://en.wikipedia.org/wiki/Productrequirementsdocument Special Guests: Alicia Brindisi and Bri LaVorgna.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+BGvAbzmf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b9a950af-a55c-4a4f-9bad-da2623fee154.mp3
    length: '63639036'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: In Elixir Wizards Office Hours Episode 2, "Discovery Discoveries," SmartLogic's
      Project Manager Alicia Brindisi and VP of Delivery Bri LaVorgna join Elixir
      Wizards Sundi Myint and Owen Bickford on an exploratory journey through the
      discovery phase of the software development lifecycle.
    duration: '43:26'
    explicit: 'no'
    keywords: agile project management, agile software development, software development
      lifecycle, discovery phase, software engineering, web development, programming,
      software engineer, elixir programming language, project management methodologies,
      SCRUM, Kanban, lean software development, continuous integration, continuous
      deployment, DevOps, test-driven development, behavior-driven development, pair
      programming, code review practices, functional programming, Phoenix framework,
      Ruby on Rails, JavaScript, React, Vue.js, software architecture, microservices
      architecture, RESTful APIs, GraphQL, containerization, Docker, Kubernetes, cloud
      computing services, AWS, Azure, Google Cloud Platform, CI/CD pipelines, software
      testing, unit testing, integration testing, system testing, user acceptance
      testing, performance testing, security testing, automation testing tools, Selenium,
      Jenkins, Git, version control, GitHub, GitLab, Bitbucket, coding standards,
      clean code, software design patterns, object-oriented programming, MVP development,
      product management, user experience design, user interface design, UX/UI design,
      prototyping tools, Sketch, Adobe XD, Figma, database design, SQL, NoSQL, PostgreSQL,
      MongoDB, Redis, Elasticsearch, data structures, algorithms, problem solving,
      machine learning, artificial intelligence, data analysis, big data, Hadoop,
      Spark, IoT development, mobile app development, Android development, iOS development,
      Flutter, React Native, SaaS development, B2B software, B2C software, startup
      technology strategy, digital transformation, IT project management, IT strategy,
      business analysis, requirement analysis, stakeholder management, risk management,
      quality assurance, product lifecycle management, Agile coaching, SCRUM Master,
      product owner, technology consulting, open source development, API design, system
      integration, legacy system modernization, technical debt management, scalability,
      high availability, load balancing, fault tolerance, distributed systems, concurrency,
      Erlang, OTP, functional programming concepts, metaprogramming, concurrent programming,
      real-time systems, blockchain development, smart contracts, cryptocurrency,
      fintech software development, healthtech software development, edtech software
      development, tech startups, innovation management, strategic planning in IT,
      customer relationship management (CRM) software, enterprise resource planning
      (ERP) systems, supply chain management software, business intelligence, analytics
      tools, data visualization, cybersecurity, encryption, data privacy, GDPR compliance,
      software regulatory compliance, industry-specific software solutions, IT service
      management, ITIL, service-oriented architecture (SOA)
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b9a950af-a55c-4a4f-9bad-da2623fee154/cover.jpg?v=1
    summary: "\n        <p>In Elixir Wizards Office Hours Episode 2, &quot;Discovery
      Discoveries,&quot; SmartLogic&#39;s Project Manager Alicia Brindisi and VP of
      Delivery Bri LaVorgna join Elixir Wizards Sundi Myint and Owen Bickford on an
      exploratory journey through the discovery phase of the software development
      lifecycle.</p>\n\n<p>This episode highlights how collaboration and communication
      transform the client-project team dynamic into a customized expedition. The
      goal of discovery is to reveal clear business goals, understand the end user,
      pinpoint key project objectives, and meticulously document the path forward
      in a Product Requirements Document (PRD).</p>\n\n<p>The discussion emphasizes
      the importance of fostering transparency, trust, and open communication. Through
      a mutual exchange of ideas, we are able to create the most tailored, efficient
      solutions that meet the client&#39;s current goals and their vision for the
      future.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>Mastering
      the art of tailored, collaborative discovery</li>\n<li>Navigating business landscapes
      and user experiences with empathy</li>\n<li>Sculpting project objectives and
      architectural blueprints</li>\n<li>Continuously capturing discoveries and refining
      documentation</li>\n<li>Striking the perfect balance between flexibility and
      structured processes</li>\n<li>Steering clear of scope creep while managing
      expectations</li>\n<li>Tapping into collective wisdom for ongoing discovery</li>\n<li>Building
      and sustaining a foundation of trust and transparency</li>\n</ul>\n\n<h3>Links
      mentioned in this episode:</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nFollow
      SmartLogic on social media: <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nContact
      Bri: <a href=\"mailto:bri@smartlogic.io\" rel=\"nofollow\">bri@smartlogic.io</a><br>\nWhat
      is a PRD? <a href=\"https://en.wikipedia.org/wiki/Product_requirements_document\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Product_requirements_document</a></p><p>Special
      Guests: Alicia Brindisi and Bri LaVorgna.</p>\n      "
  contentEncoded: "\n        <p>In Elixir Wizards Office Hours Episode 2, &quot;Discovery
    Discoveries,&quot; SmartLogic&#39;s Project Manager Alicia Brindisi and VP of
    Delivery Bri LaVorgna join Elixir Wizards Sundi Myint and Owen Bickford on an
    exploratory journey through the discovery phase of the software development lifecycle.</p>\n\n<p>This
    episode highlights how collaboration and communication transform the client-project
    team dynamic into a customized expedition. The goal of discovery is to reveal
    clear business goals, understand the end user, pinpoint key project objectives,
    and meticulously document the path forward in a Product Requirements Document
    (PRD).</p>\n\n<p>The discussion emphasizes the importance of fostering transparency,
    trust, and open communication. Through a mutual exchange of ideas, we are able
    to create the most tailored, efficient solutions that meet the client&#39;s current
    goals and their vision for the future.</p>\n\n<h3>Key topics discussed in this
    episode:</h3>\n\n<ul>\n<li>Mastering the art of tailored, collaborative discovery</li>\n<li>Navigating
    business landscapes and user experiences with empathy</li>\n<li>Sculpting project
    objectives and architectural blueprints</li>\n<li>Continuously capturing discoveries
    and refining documentation</li>\n<li>Striking the perfect balance between flexibility
    and structured processes</li>\n<li>Steering clear of scope creep while managing
    expectations</li>\n<li>Tapping into collective wisdom for ongoing discovery</li>\n<li>Building
    and sustaining a foundation of trust and transparency</li>\n</ul>\n\n<h3>Links
    mentioned in this episode:</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nFollow
    SmartLogic on social media: <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nContact
    Bri: <a href=\"mailto:bri@smartlogic.io\" rel=\"nofollow\">bri@smartlogic.io</a><br>\nWhat
    is a PRD? <a href=\"https://en.wikipedia.org/wiki/Product_requirements_document\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Product_requirements_document</a></p><p>Special
    Guests: Alicia Brindisi and Bri LaVorgna.</p>\n      "
- title: '"Testing 1, 2, 3" with Joel Meador and Charles Suggs'
  slug: s12-e01-software-testing
  link: https://smartlogic.io/podcast/elixir-wizards/s12-e01-software-testing
  guid: 4753d6e4-fa7b-44f9-9a65-1eb707407b23
  pubDate: Thu, 21 Mar 2024 07:00:00 -0400
  pubDateFriendly: March 21, 2024
  description: "The Elixir Wizards Podcast is back with Season 12 Office Hours, where
    we talk with the internal SmartLogic team about the stages of the software development
    lifecycle. For the season premiere, \"Testing 1, 2, 3,\" Joel Meador and Charles
    Suggs join us to discuss the nuances of software testing.\nIn this episode, we
    discuss everything from testing philosophies to test driven development (TDD),
    integration, and end-user testing. Our guests share real-world experiences that
    highlight the benefits of thorough testing, challenges like test maintenance,
    and problem-solving for complex production environments.\nKey topics discussed
    in this episode:\nHow to find a balance that's cost-effective and practical while
    testing\nBalancing test coverage and development speed\nThe importance of clear
    test plans and goals\nSo many tests: Unit testing, integration testing, acceptance
    testing, penetration testing, automated vs. manual testing\nAgile vs. Waterfall
    methodologies\nWriting readable and maintainable tests\nTesting edge cases and
    unexpected scenarios\nTesting as a form of documentation and communication\nAdvice
    for developers looking to improve testing practices\nContinuous integration and
    deployment\nLinks mentioned:\nhttps://smartlogic.io/ \nWatch this episode on YouTube!
    youtu.be/unx5AIvSdc\nBob Martin “Clean Code” videos - “Uncle Bob”: http://cleancoder.com/\nJUnit
    5 Testing for Java and the JVM https://junit.org/junit5/ \nExUnit Testing for
    Elixir https://hexdocs.pm/exunit/ExUnit.html \nCode-Level Testing of Smalltalk
    Applications https://www.cs.ubc.ca/~murphy/stworkshop/28-7.html\nAgile Manifesto
    https://agilemanifesto.org/ \nOld Man Yells at Cloud https://i.kym-cdn.com/entries/icons/original/000/019/304/old.jpg\nTDD:
    Test Driven Development https://www.agilealliance.org/glossary/tdd/\nPerl Programming
    Language https://www.perl.org/\nProtractor Test Framework for Angular and AngularJS
    protractortest.org/#/ \nWaterfall Project Management https://business.adobe.com/blog/basics/waterfall
    \nCodeSync Leveling up at Bleacher Report A cautionary tale - PETER HASTIE\nhttps://www.youtube.com/watch?v=P4SzZCwB8B4\nMix
    ecto.dump https://hexdocs.pm/ectosql/Mix.Tasks.Ecto.Dump.html\nApache JMeter Load
    Testing in Java https://jmeter.apache.org/\nPentest Tools Collection - Penetration
    Testing https://github.com/arch3rPro/PentestTools\nThe Road to 2 Million Websocket
    Connections in Phoenix https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections\nDonate
    to Miami Indians of Indiana https://www.miamiindians.org/take-action\nJoel Meador
    on Tumblr https://joelmeador.tumblr.com/ Special Guests: Charles Suggs and Joel
    Meador.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vUOuyqs5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4753d6e4-fa7b-44f9-9a65-1eb707407b23.mp3
    length: '66983343'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '12'
    author: SmartLogic LLC
    subtitle: The Elixir Wizards Podcast is back with Season 12 Office Hours, where
      we talk with the internal SmartLogic team about the stages of the software development
      lifecycle. For the season premiere, "Testing 1, 2, 3," Joel Meador and Charles
      Suggs join us to discuss the nuances of software testing.
    duration: '45:40'
    explicit: 'no'
    keywords: software development, agile methodology, test driven development, TDD,
      software testing, unit testing, code testing, integration testing, cybersecurity,
      acceptance testing, penetration testing, automated testing, manual testing,
      software quality assurance, QA testing, continuous integration, CI/CD, continuous
      deployment, development speed, test coverage, testing strategies, clear test
      plans, test goals, readability in tests, maintainable tests, testing edge cases,
      unexpected scenario testing, testing as documentation, developer testing advice,
      testing practices, development methodologies, waterfall vs agile, software lifecycle,
      programming best practices, quality control in software, DevOps practices, debugging
      techniques, software engineering, efficient testing, software reliability, performance
      testing, load testing, stress testing, regression testing, smoke testing, sandbox
      testing, production environment testing, test automation tools, testing frameworks,
      code review, pair programming, refactoring, clean code, software design patterns,
      behavior-driven development, BDD, functional testing, system testing, end-to-end
      testing, software development process, coding standards, software project management,
      software team collaboration, version control, git, GitHub, code deployment,
      deployment strategies, bug tracking, issue resolution, software maintenance,
      software updates, technical debt, code optimization, programming languages,
      Elixir programming, Phoenix framework, BEAM virtual machine, Erlang, software
      architecture, API testing, RESTful services testing, microservices testing,
      scalability testing, database testing, data integrity testing, user experience
      testing, usability testing, accessibility testing, software compliance, security
      testing, encryption testing, vulnerability scanning, ethical hacking, risk management
      in software, software audit, code quality metrics, software development tools
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4753d6e4-fa7b-44f9-9a65-1eb707407b23/cover.jpg?v=1
    summary: "\n        <p>The Elixir Wizards Podcast is back with Season 12 Office
      Hours, where we talk with the internal SmartLogic team about the stages of the
      software development lifecycle. For the season premiere, &quot;Testing 1, 2,
      3,&quot; Joel Meador and Charles Suggs join us to discuss the nuances of software
      testing.</p>\n\n<p>In this episode, we discuss everything from testing philosophies
      to test driven development (TDD), integration, and end-user testing. Our guests
      share real-world experiences that highlight the benefits of thorough testing,
      challenges like test maintenance, and problem-solving for complex production
      environments.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>How
      to find a balance that&#39;s cost-effective and practical while testing</li>\n<li>Balancing
      test coverage and development speed</li>\n<li>The importance of clear test plans
      and goals</li>\n<li>So many tests: Unit testing, integration testing, acceptance
      testing, penetration testing, automated vs. manual testing</li>\n<li>Agile vs.
      Waterfall methodologies</li>\n<li>Writing readable and maintainable tests</li>\n<li>Testing
      edge cases and unexpected scenarios</li>\n<li>Testing as a form of documentation
      and communication</li>\n<li>Advice for developers looking to improve testing
      practices</li>\n<li>Continuous integration and deployment</li>\n</ul>\n\n<h3>Links
      mentioned:</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nWatch this episode on YouTube! youtu.be/u_nx5AIvSdc<br>\nBob Martin “Clean
      Code” videos - “Uncle Bob”: <a href=\"http://cleancoder.com/\" rel=\"nofollow\">http://cleancoder.com/</a><br>\nJUnit
      5 Testing for Java and the JVM <a href=\"https://junit.org/junit5/\" rel=\"nofollow\">https://junit.org/junit5/</a>
      <br>\nExUnit Testing for Elixir <a href=\"https://hexdocs.pm/ex_unit/ExUnit.html\"
      rel=\"nofollow\">https://hexdocs.pm/ex_unit/ExUnit.html</a> <br>\nCode-Level
      Testing of Smalltalk Applications <a href=\"https://www.cs.ubc.ca/%7Emurphy/st_workshop/28-7.html\"
      rel=\"nofollow\">https://www.cs.ubc.ca/~murphy/st_workshop/28-7.html</a><br>\nAgile
      Manifesto <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a>
      <br>\nOld Man Yells at Cloud <a href=\"https://i.kym-cdn.com/entries/icons/original/000/019/304/old.jpg\"
      rel=\"nofollow\">https://i.kym-cdn.com/entries/icons/original/000/019/304/old.jpg</a><br>\nTDD:
      Test Driven Development <a href=\"https://www.agilealliance.org/glossary/tdd/\"
      rel=\"nofollow\">https://www.agilealliance.org/glossary/tdd/</a><br>\nPerl Programming
      Language <a href=\"https://www.perl.org/\" rel=\"nofollow\">https://www.perl.org/</a><br>\nProtractor
      Test Framework for Angular and AngularJS protractortest.org/#/ <br>\nWaterfall
      Project Management <a href=\"https://business.adobe.com/blog/basics/waterfall\"
      rel=\"nofollow\">https://business.adobe.com/blog/basics/waterfall</a> <br>\nCodeSync
      Leveling up at Bleacher Report A cautionary tale - PETER HASTIE<br>\n<a href=\"https://www.youtube.com/watch?v=P4SzZCwB8B4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=P4SzZCwB8B4</a><br>\nMix ecto.dump
      <a href=\"https://hexdocs.pm/ecto_sql/Mix.Tasks.Ecto.Dump.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Mix.Tasks.Ecto.Dump.html</a><br>\nApache
      JMeter Load Testing in Java <a href=\"https://jmeter.apache.org/\" rel=\"nofollow\">https://jmeter.apache.org/</a><br>\nPentest
      Tools Collection - Penetration Testing <a href=\"https://github.com/arch3rPro/PentestTools\"
      rel=\"nofollow\">https://github.com/arch3rPro/PentestTools</a><br>\nThe Road
      to 2 Million Websocket Connections in Phoenix <a href=\"https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
      rel=\"nofollow\">https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nDonate
      to Miami Indians of Indiana <a href=\"https://www.miamiindians.org/take-action\"
      rel=\"nofollow\">https://www.miamiindians.org/take-action</a><br>\nJoel Meador
      on Tumblr <a href=\"https://joelmeador.tumblr.com/\" rel=\"nofollow\">https://joelmeador.tumblr.com/</a></p><p>Special
      Guests: Charles Suggs and Joel Meador.</p>\n      "
  contentEncoded: "\n        <p>The Elixir Wizards Podcast is back with Season 12
    Office Hours, where we talk with the internal SmartLogic team about the stages
    of the software development lifecycle. For the season premiere, &quot;Testing
    1, 2, 3,&quot; Joel Meador and Charles Suggs join us to discuss the nuances of
    software testing.</p>\n\n<p>In this episode, we discuss everything from testing
    philosophies to test driven development (TDD), integration, and end-user testing.
    Our guests share real-world experiences that highlight the benefits of thorough
    testing, challenges like test maintenance, and problem-solving for complex production
    environments.</p>\n\n<h3>Key topics discussed in this episode:</h3>\n\n<ul>\n<li>How
    to find a balance that&#39;s cost-effective and practical while testing</li>\n<li>Balancing
    test coverage and development speed</li>\n<li>The importance of clear test plans
    and goals</li>\n<li>So many tests: Unit testing, integration testing, acceptance
    testing, penetration testing, automated vs. manual testing</li>\n<li>Agile vs.
    Waterfall methodologies</li>\n<li>Writing readable and maintainable tests</li>\n<li>Testing
    edge cases and unexpected scenarios</li>\n<li>Testing as a form of documentation
    and communication</li>\n<li>Advice for developers looking to improve testing practices</li>\n<li>Continuous
    integration and deployment</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p><a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nWatch this episode on YouTube!
    youtu.be/u_nx5AIvSdc<br>\nBob Martin “Clean Code” videos - “Uncle Bob”: <a href=\"http://cleancoder.com/\"
    rel=\"nofollow\">http://cleancoder.com/</a><br>\nJUnit 5 Testing for Java and
    the JVM <a href=\"https://junit.org/junit5/\" rel=\"nofollow\">https://junit.org/junit5/</a>
    <br>\nExUnit Testing for Elixir <a href=\"https://hexdocs.pm/ex_unit/ExUnit.html\"
    rel=\"nofollow\">https://hexdocs.pm/ex_unit/ExUnit.html</a> <br>\nCode-Level Testing
    of Smalltalk Applications <a href=\"https://www.cs.ubc.ca/%7Emurphy/st_workshop/28-7.html\"
    rel=\"nofollow\">https://www.cs.ubc.ca/~murphy/st_workshop/28-7.html</a><br>\nAgile
    Manifesto <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a>
    <br>\nOld Man Yells at Cloud <a href=\"https://i.kym-cdn.com/entries/icons/original/000/019/304/old.jpg\"
    rel=\"nofollow\">https://i.kym-cdn.com/entries/icons/original/000/019/304/old.jpg</a><br>\nTDD:
    Test Driven Development <a href=\"https://www.agilealliance.org/glossary/tdd/\"
    rel=\"nofollow\">https://www.agilealliance.org/glossary/tdd/</a><br>\nPerl Programming
    Language <a href=\"https://www.perl.org/\" rel=\"nofollow\">https://www.perl.org/</a><br>\nProtractor
    Test Framework for Angular and AngularJS protractortest.org/#/ <br>\nWaterfall
    Project Management <a href=\"https://business.adobe.com/blog/basics/waterfall\"
    rel=\"nofollow\">https://business.adobe.com/blog/basics/waterfall</a> <br>\nCodeSync
    Leveling up at Bleacher Report A cautionary tale - PETER HASTIE<br>\n<a href=\"https://www.youtube.com/watch?v=P4SzZCwB8B4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=P4SzZCwB8B4</a><br>\nMix ecto.dump
    <a href=\"https://hexdocs.pm/ecto_sql/Mix.Tasks.Ecto.Dump.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Mix.Tasks.Ecto.Dump.html</a><br>\nApache
    JMeter Load Testing in Java <a href=\"https://jmeter.apache.org/\" rel=\"nofollow\">https://jmeter.apache.org/</a><br>\nPentest
    Tools Collection - Penetration Testing <a href=\"https://github.com/arch3rPro/PentestTools\"
    rel=\"nofollow\">https://github.com/arch3rPro/PentestTools</a><br>\nThe Road to
    2 Million Websocket Connections in Phoenix <a href=\"https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
    rel=\"nofollow\">https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nDonate
    to Miami Indians of Indiana <a href=\"https://www.miamiindians.org/take-action\"
    rel=\"nofollow\">https://www.miamiindians.org/take-action</a><br>\nJoel Meador
    on Tumblr <a href=\"https://joelmeador.tumblr.com/\" rel=\"nofollow\">https://joelmeador.tumblr.com/</a></p><p>Special
    Guests: Charles Suggs and Joel Meador.</p>\n      "
- title: 'Creating a Language: Elixir vs. Roc with José Valim and Richard Feldman
    (Elixir Wizards X Software Unscripted Podcast)'
  slug: s11-e13-software-unscripted-jose-valim-richard-feldman-elixir-roc
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e13-software-unscripted-jose-valim-richard-feldman-elixir-roc
  guid: a8bd6fba-4d5a-4246-9da0-e55e89b80601
  pubDate: Thu, 11 Jan 2024 07:00:00 -0500
  pubDateFriendly: January 11, 2024
  description: "For the final episode of Elixir Wizards’ Season 11 “Branching Out
    from Elixir,” we’re featuring a recent discussion from the Software Unscripted
    podcast. In this conversation, José Valim, creator of Elixir, interviews Richard
    Feldman, creator of Roc. They compare notes on the process and considerations
    for creating a language.\nThis episode covers the origins of creating a language,
    its influences, and how goals shape the tradeoffs in programming language design.
    José and Richard share anecdotes from their experiences guiding the evolution
    of Elixir and Roc. The discussion provides an insightful look at the experimentation
    and learning involved in crafting new languages.\nTopics discussed in this episode\nWhat
    inspires the creation of a new programming language\nGoals and use cases for a
    programming language\nInfluences from Elm, Rust, Haskell, Go, OCaml, and more\nTradeoffs
    involved in expressiveness of type systems\nOpportunistic mutation for performance
    gains in a functional language\nMinimum version selection for dependency resolution\nBuild
    time considerations with type checking and monomorphization\nDesign experiments
    and rolling back features that don’t work out\nHistory from the first simple interpreter
    to today's real programming language\nDesign considerations around package management
    and versioning\nParticipation in Advent of Code to gain new users and feedback\nProviding
    performance optimization tools to users in the future\nTradeoffs involved in picking
    integer types and arithmetic\nComparing floats and equality checks on dictionaries\nUsing
    abilities to customize equality for custom types\nEnsuring availability of multiple
    package versions for incremental upgrades\nTreating major version bumps as separate
    artifacts\nRoc's focus on single-threaded performance\nLinks mentioned in this
    episode\nSoftware Unscripted Podcast https://feeds.resonaterecordings.com/software-unscripted\nRoc
    Programming Language https://www.roc-lang.org/\nRoc Lang on Github https://github.com/roc-lang/roc\nElm
    Programming Language https://elm-lang.org/\nElm in Action by Richard Feldman https://www.manning.com/books/elm-in-action\nRichard
    Feldman on Github https://github.com/rtfeldman\nLua Programming Language https://www.lua.org/\nVimscript
    Guide https://google.github.io/styleguide/vimscriptfull.xml\nOCaml Programming
    Language https://ocaml.org/\nAdvent of Code https://adventofcode.com/\nRoc Language
    on Twitter https://twitter.com/roclang \nRichard Feldman on Twitter https://twitter.com/rtfeldman\nRoc
    Zulip Chat https://roc.zulipchat.com\nClojure Programming Language https://clojure.org/\nTalk:
    Persistent Data Structures and Managed References by Rich Hickey https://www.youtube.com/watch?v=toD45DtVCFM\nKoka
    Programming Language https://koka-lang.github.io/koka/doc/index.html\nFlix Programming
    Language https://flix.dev/\nClojure Transients https://clojure.org/reference/transients\nHaskell
    Software Transactional Memory https://wiki.haskell.org/Softwaretransactional_memory\nRust
    Traits https://doc.rust-lang.org/book/ch10-02-traits.html\nCoffeeScript https://coffeescript.org/\nCargo
    Package Management https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\nVersioning
    in Golang https://research.swtch.com/vgo-principles Special Guests: José Valim
    and Richard Feldman.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KrxDxHU5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a8bd6fba-4d5a-4246-9da0-e55e89b80601.mp3
    length: '100113079'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: For the final episode of Elixir Wizards’ Season 11 “Branching Out from
      Elixir,” we’re featuring a recent discussion from the Software Unscripted podcast.
      In this conversation, José Valim, creator of Elixir, interviews Richard Feldman,
      creator of Roc. They compare notes on the process and considerations for creating
      a language.
    duration: '1:09:04'
    explicit: 'no'
    keywords: Elixir programming language, Roc programming language, Functional programming,
      Software development, Software engineering, Web design, Type systems, Programming
      language theory, Compiler design, Language syntax, Programming paradigms, Developer
      tools, Coding best practices, Language runtime, Elm language, Rust language,
      Haskell language, Go language, OCaml language, Type inference, Immutable data
      structures, Concurrency models, Performance optimization, Code maintainability,
      Developer podcasts, Tech talks, Software design, System architecture, Open-source
      development, Programming language community, Code refactoring, Software patterns,
      Dependency management, Build systems, Continuous integration, Code versioning,
      Software repositories, Package ecosystems, Advent of Code challenges, Code performance
      tools, Integer arithmetic, Floating-point arithmetic, Equality checks, Dictionary
      data structures, Custom types, Incremental upgrades, Versioning strategy, Semantic
      versioning, Major releases, Software iteration, Single-threaded performance,
      Multithreading, Software innovation, Tech education, Coding interviews, Software
      trends, Developer discussions, Code experiments, Programming history, Language
      evolution, Tech community, Programming insights, Developer experiences, Code
      tutorials, Programming education, Software development lifecycle, Programming
      language design, Tech interviews
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a8bd6fba-4d5a-4246-9da0-e55e89b80601/cover.jpg?v=1
    summary: "\n        <p>For the final episode of Elixir Wizards’ Season 11 “Branching
      Out from Elixir,” we’re featuring a recent discussion from the Software Unscripted
      podcast. In this conversation, José Valim, creator of Elixir, interviews Richard
      Feldman, creator of Roc. They compare notes on the process and considerations
      for creating a language.</p>\n\n<p>This episode covers the origins of creating
      a language, its influences, and how goals shape the tradeoffs in programming
      language design. José and Richard share anecdotes from their experiences guiding
      the evolution of Elixir and Roc. The discussion provides an insightful look
      at the experimentation and learning involved in crafting new languages.</p>\n\n<h3>Topics
      discussed in this episode</h3>\n\n<ul>\n<li>What inspires the creation of a
      new programming language</li>\n<li>Goals and use cases for a programming language</li>\n<li>Influences
      from Elm, Rust, Haskell, Go, OCaml, and more</li>\n<li>Tradeoffs involved in
      expressiveness of type systems</li>\n<li>Opportunistic mutation for performance
      gains in a functional language</li>\n<li>Minimum version selection for dependency
      resolution</li>\n<li>Build time considerations with type checking and monomorphization</li>\n<li>Design
      experiments and rolling back features that don’t work out</li>\n<li>History
      from the first simple interpreter to today&#39;s real programming language</li>\n<li>Design
      considerations around package management and versioning</li>\n<li>Participation
      in Advent of Code to gain new users and feedback</li>\n<li>Providing performance
      optimization tools to users in the future</li>\n<li>Tradeoffs involved in picking
      integer types and arithmetic</li>\n<li>Comparing floats and equality checks
      on dictionaries</li>\n<li>Using abilities to customize equality for custom types</li>\n<li>Ensuring
      availability of multiple package versions for incremental upgrades</li>\n<li>Treating
      major version bumps as separate artifacts</li>\n<li>Roc&#39;s focus on single-threaded
      performance</li>\n</ul>\n\n<h3>Links mentioned in this episode</h3>\n\n<p>Software
      Unscripted Podcast <a href=\"https://feeds.resonaterecordings.com/software-unscripted\"
      rel=\"nofollow\">https://feeds.resonaterecordings.com/software-unscripted</a><br>\nRoc
      Programming Language <a href=\"https://www.roc-lang.org/\" rel=\"nofollow\">https://www.roc-lang.org/</a><br>\nRoc
      Lang on Github <a href=\"https://github.com/roc-lang/roc\" rel=\"nofollow\">https://github.com/roc-lang/roc</a><br>\nElm
      Programming Language <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nElm
      in Action by Richard Feldman <a href=\"https://www.manning.com/books/elm-in-action\"
      rel=\"nofollow\">https://www.manning.com/books/elm-in-action</a><br>\nRichard
      Feldman on Github <a href=\"https://github.com/rtfeldman\" rel=\"nofollow\">https://github.com/rtfeldman</a><br>\nLua
      Programming Language <a href=\"https://www.lua.org/\" rel=\"nofollow\">https://www.lua.org/</a><br>\nVimscript
      Guide <a href=\"https://google.github.io/styleguide/vimscriptfull.xml\" rel=\"nofollow\">https://google.github.io/styleguide/vimscriptfull.xml</a><br>\nOCaml
      Programming Language <a href=\"https://ocaml.org/\" rel=\"nofollow\">https://ocaml.org/</a><br>\nAdvent
      of Code <a href=\"https://adventofcode.com/\" rel=\"nofollow\">https://adventofcode.com/</a><br>\nRoc
      Language on Twitter <a href=\"https://twitter.com/roc_lang\" rel=\"nofollow\">https://twitter.com/roc_lang</a>
      <br>\nRichard Feldman on Twitter <a href=\"https://twitter.com/rtfeldman\" rel=\"nofollow\">https://twitter.com/rtfeldman</a><br>\nRoc
      Zulip Chat <a href=\"https://roc.zulipchat.com\" rel=\"nofollow\">https://roc.zulipchat.com</a><br>\nClojure
      Programming Language <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nTalk:
      Persistent Data Structures and Managed References by Rich Hickey <a href=\"https://www.youtube.com/watch?v=toD45DtVCFM\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=toD45DtVCFM</a><br>\nKoka Programming
      Language <a href=\"https://koka-lang.github.io/koka/doc/index.html\" rel=\"nofollow\">https://koka-lang.github.io/koka/doc/index.html</a><br>\nFlix
      Programming Language <a href=\"https://flix.dev/\" rel=\"nofollow\">https://flix.dev/</a><br>\nClojure
      Transients <a href=\"https://clojure.org/reference/transients\" rel=\"nofollow\">https://clojure.org/reference/transients</a><br>\nHaskell
      Software Transactional Memory <a href=\"https://wiki.haskell.org/Software_transactional_memory\"
      rel=\"nofollow\">https://wiki.haskell.org/Software_transactional_memory</a><br>\nRust
      Traits <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow\">https://doc.rust-lang.org/book/ch10-02-traits.html</a><br>\nCoffeeScript
      <a href=\"https://coffeescript.org/\" rel=\"nofollow\">https://coffeescript.org/</a><br>\nCargo
      Package Management <a href=\"https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\"
      rel=\"nofollow\">https://doc.rust-lang.org/book/ch01-03-hello-cargo.html</a><br>\nVersioning
      in Golang <a href=\"https://research.swtch.com/vgo-principles\" rel=\"nofollow\">https://research.swtch.com/vgo-principles</a></p><p>Special
      Guests: José Valim and Richard Feldman.</p>\n      "
  contentEncoded: "\n        <p>For the final episode of Elixir Wizards’ Season 11
    “Branching Out from Elixir,” we’re featuring a recent discussion from the Software
    Unscripted podcast. In this conversation, José Valim, creator of Elixir, interviews
    Richard Feldman, creator of Roc. They compare notes on the process and considerations
    for creating a language.</p>\n\n<p>This episode covers the origins of creating
    a language, its influences, and how goals shape the tradeoffs in programming language
    design. José and Richard share anecdotes from their experiences guiding the evolution
    of Elixir and Roc. The discussion provides an insightful look at the experimentation
    and learning involved in crafting new languages.</p>\n\n<h3>Topics discussed in
    this episode</h3>\n\n<ul>\n<li>What inspires the creation of a new programming
    language</li>\n<li>Goals and use cases for a programming language</li>\n<li>Influences
    from Elm, Rust, Haskell, Go, OCaml, and more</li>\n<li>Tradeoffs involved in expressiveness
    of type systems</li>\n<li>Opportunistic mutation for performance gains in a functional
    language</li>\n<li>Minimum version selection for dependency resolution</li>\n<li>Build
    time considerations with type checking and monomorphization</li>\n<li>Design experiments
    and rolling back features that don’t work out</li>\n<li>History from the first
    simple interpreter to today&#39;s real programming language</li>\n<li>Design considerations
    around package management and versioning</li>\n<li>Participation in Advent of
    Code to gain new users and feedback</li>\n<li>Providing performance optimization
    tools to users in the future</li>\n<li>Tradeoffs involved in picking integer types
    and arithmetic</li>\n<li>Comparing floats and equality checks on dictionaries</li>\n<li>Using
    abilities to customize equality for custom types</li>\n<li>Ensuring availability
    of multiple package versions for incremental upgrades</li>\n<li>Treating major
    version bumps as separate artifacts</li>\n<li>Roc&#39;s focus on single-threaded
    performance</li>\n</ul>\n\n<h3>Links mentioned in this episode</h3>\n\n<p>Software
    Unscripted Podcast <a href=\"https://feeds.resonaterecordings.com/software-unscripted\"
    rel=\"nofollow\">https://feeds.resonaterecordings.com/software-unscripted</a><br>\nRoc
    Programming Language <a href=\"https://www.roc-lang.org/\" rel=\"nofollow\">https://www.roc-lang.org/</a><br>\nRoc
    Lang on Github <a href=\"https://github.com/roc-lang/roc\" rel=\"nofollow\">https://github.com/roc-lang/roc</a><br>\nElm
    Programming Language <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nElm
    in Action by Richard Feldman <a href=\"https://www.manning.com/books/elm-in-action\"
    rel=\"nofollow\">https://www.manning.com/books/elm-in-action</a><br>\nRichard
    Feldman on Github <a href=\"https://github.com/rtfeldman\" rel=\"nofollow\">https://github.com/rtfeldman</a><br>\nLua
    Programming Language <a href=\"https://www.lua.org/\" rel=\"nofollow\">https://www.lua.org/</a><br>\nVimscript
    Guide <a href=\"https://google.github.io/styleguide/vimscriptfull.xml\" rel=\"nofollow\">https://google.github.io/styleguide/vimscriptfull.xml</a><br>\nOCaml
    Programming Language <a href=\"https://ocaml.org/\" rel=\"nofollow\">https://ocaml.org/</a><br>\nAdvent
    of Code <a href=\"https://adventofcode.com/\" rel=\"nofollow\">https://adventofcode.com/</a><br>\nRoc
    Language on Twitter <a href=\"https://twitter.com/roc_lang\" rel=\"nofollow\">https://twitter.com/roc_lang</a>
    <br>\nRichard Feldman on Twitter <a href=\"https://twitter.com/rtfeldman\" rel=\"nofollow\">https://twitter.com/rtfeldman</a><br>\nRoc
    Zulip Chat <a href=\"https://roc.zulipchat.com\" rel=\"nofollow\">https://roc.zulipchat.com</a><br>\nClojure
    Programming Language <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nTalk:
    Persistent Data Structures and Managed References by Rich Hickey <a href=\"https://www.youtube.com/watch?v=toD45DtVCFM\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=toD45DtVCFM</a><br>\nKoka Programming
    Language <a href=\"https://koka-lang.github.io/koka/doc/index.html\" rel=\"nofollow\">https://koka-lang.github.io/koka/doc/index.html</a><br>\nFlix
    Programming Language <a href=\"https://flix.dev/\" rel=\"nofollow\">https://flix.dev/</a><br>\nClojure
    Transients <a href=\"https://clojure.org/reference/transients\" rel=\"nofollow\">https://clojure.org/reference/transients</a><br>\nHaskell
    Software Transactional Memory <a href=\"https://wiki.haskell.org/Software_transactional_memory\"
    rel=\"nofollow\">https://wiki.haskell.org/Software_transactional_memory</a><br>\nRust
    Traits <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow\">https://doc.rust-lang.org/book/ch10-02-traits.html</a><br>\nCoffeeScript
    <a href=\"https://coffeescript.org/\" rel=\"nofollow\">https://coffeescript.org/</a><br>\nCargo
    Package Management <a href=\"https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\"
    rel=\"nofollow\">https://doc.rust-lang.org/book/ch01-03-hello-cargo.html</a><br>\nVersioning
    in Golang <a href=\"https://research.swtch.com/vgo-principles\" rel=\"nofollow\">https://research.swtch.com/vgo-principles</a></p><p>Special
    Guests: José Valim and Richard Feldman.</p>\n      "
- title: Package Management in Elixir vs. JavaScript with Wojtek Mach & Amal Hussein
  slug: s11-e12-package-management-elixir-javascript
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e12-package-management-elixir-javascript
  guid: c96dad62-e720-45c1-b3ee-66dd59f8c451
  pubDate: Thu, 04 Jan 2024 07:00:00 -0500
  pubDateFriendly: January  4, 2024
  description: "Today on Elixir Wizards, Wojtek Mach of HexPM and Amal Hussein, engineering
    leader and former NPM team member, join Owen Bickford to compare notes on package
    management in Elixir vs. JavaScript. This lively conversation covers everything
    from best practices for dependency management to API design, SemVer (semantic
    versioning), and the dark ages of web development before package managers existed.\nThe
    guests debate philosophical differences between the JavaScript and Elixir communities.
    They highlight the JavaScript ecosystem's maturity and identify potential areas
    of improvement, contrasted against Elixir’s emphasis on minimal dependencies.
    Both guests encourage engineers to publish packages, even small ones, as a learning
    opportunity.\nTopics discussed in this episode:\nLeveraging community packages
    rather than reinventing the wheel\nVetting packages carefully before adopting
    them as dependencies\nEvaluating security, performance, and bundle size when assessing
    packages\nManaging transitive dependencies pulled in by packages\nWhy semantic
    versioning is difficult to consistently enforce\nDesigning APIs with extensibility
    and backward compatibility in mind\nUsing tools like deprecations to avoid breaking
    changes in new releases\nJavaScript’s preference for code reuse over minimization\nThe
    Elixir community’s minimal dependencies and avoidance of tech debt\nChallenges
    in early package management, such as global dependency\nLearning from tools like
    Ruby Gems and Bundler to improve experience\nHow log files provide visibility
    into dependency management actions\nHow lock files pin dependency versions for
    consistency\nPublishing packages democratizes access and provides learning opportunities\nLinting
    to enforce standards and prevent certain bugs\nPrimitive-focused packages provide
    flexibility over highly opinionated ones\nSuggestions for improving documentation
    and guides\nBenefits of collaboration between programming language communities\nLinks
    mentioned in this episode:\nNode.js https://github.com/nodejs \nnpm JavaScript
    Package Manager  https://github.com/npm \nJS Party Podcast https://changelog.com/jsparty
    \nDashbit https://dashbit.co/ \nHexPM Package Manager for Erlang https://hex.pm/
    \nHTTP Client for Elixir https://github.com/wojtekmach/req \nEcto Database-Wrapper
    for Elixir https://github.com/elixir-ecto (Not an ORM)\nXState Actor-Based State
    Management for JavaScript https://xstate.js.org/docs/ \nSupply Chain Protection
    for JavaScript, Python, and Go  https://socket.dev/ \nMixAudit https://github.com/mirego/mixaudit
    \nNimbleTOTP Library for 2FA https://hexdocs.pm/nimbletotp/NimbleTOTP.html \nMicrosoft
    Azure https://github.com/Azure \nPatch Package https://www.npmjs.com/package/patch-package
    \nRuby Bundler to manage Gem dependencies https://github.com/rubygems/bundler
    \nnpm-shrinkwrap https://docs.npmjs.com/cli/v10/commands/npm-shrinkwrap \nSemVer
    Semantic Versioner for NPM https://www.npmjs.com/package/semver\nSpec-ulation
    Keynote - Rich Hickey https://www.youtube.com/watch?v=oyLBGkS5ICk \nAmal’s favorite
    Linter https://eslint.org/ \nElixir Mint Functional HTTP Client for Elixir https://github.com/elixir-mint
    \nTailwind Open Source CSS Framework https://tailwindcss.com/ \nWebauthnComponents
    https://hex.pm/packages/webauthn_components Special Guests: Amal Hussein and Wojtek
    Mach.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XZQRalCh
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c96dad62-e720-45c1-b3ee-66dd59f8c451.mp3
    length: '104645050'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: 'Wojtek Mach of HexPM and Amal Hussein, engineering leader and former
      NPM team member, join Owen Bickford to compare notes on package management in
      Elixir vs. JavaScript. '
    duration: '54:06'
    explicit: 'no'
    keywords: software development, tech news, elixir programming language, JavaScript,
      web development, programming languages, software engineering, tech podcasts,
      coding, web application development, functional programming, object-oriented
      programming, software design, API development, software versioning, SemVer,
      package management, dependency management, tech discussions, coding best practices,
      software frameworks, Elixir vs JavaScript, Phoenix framework, software architecture,
      tech community, programming paradigms, code quality, software scalability, tech
      trends, developer tools, coding tutorials, web technologies, software ecosystems,
      open source development, coding standards, software maintenance, tech education,
      programming concepts, tech innovation, software solutions, backend development,
      frontend development, full stack development, computer science, tech industry,
      software methodologies, programming techniques, tech insights, coding principles,
      software platforms, tech analysis, programming languages comparison, tech expertise,
      coding practices, software strategies, tech learning, programming challenges,
      tech updates, coding skills, software trends, tech knowledge, tech development,
      programming education, software discussions, tech advice, coding experiences,
      software insights, tech exploration, programming tips, tech research, coding
      knowledge, software industry, tech conversations, programming trends, tech information,
      coding trends, software updates, tech guidance, programming insights, tech strategies,
      coding techniques, software tips, tech expertise sharing, programming best practices,
      tech skills, coding strategies, software exploration, tech learning resources,
      programming experiences, tech community discussions
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c96dad62-e720-45c1-b3ee-66dd59f8c451/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Wojtek Mach of HexPM and Amal
      Hussein, engineering leader and former NPM team member, join Owen Bickford to
      compare notes on package management in Elixir vs. JavaScript. This lively conversation
      covers everything from best practices for dependency management to API design,
      SemVer (semantic versioning), and the dark ages of web development before package
      managers existed.</p>\n\n<p>The guests debate philosophical differences between
      the JavaScript and Elixir communities. They highlight the JavaScript ecosystem&#39;s
      maturity and identify potential areas of improvement, contrasted against Elixir’s
      emphasis on minimal dependencies. Both guests encourage engineers to publish
      packages, even small ones, as a learning opportunity.</p>\n\n<h3>Topics discussed
      in this episode:</h3>\n\n<ul>\n<li>Leveraging community packages rather than
      reinventing the wheel</li>\n<li>Vetting packages carefully before adopting them
      as dependencies</li>\n<li>Evaluating security, performance, and bundle size
      when assessing packages</li>\n<li>Managing transitive dependencies pulled in
      by packages</li>\n<li>Why semantic versioning is difficult to consistently enforce</li>\n<li>Designing
      APIs with extensibility and backward compatibility in mind</li>\n<li>Using tools
      like deprecations to avoid breaking changes in new releases</li>\n<li>JavaScript’s
      preference for code reuse over minimization</li>\n<li>The Elixir community’s
      minimal dependencies and avoidance of tech debt</li>\n<li>Challenges in early
      package management, such as global dependency</li>\n<li>Learning from tools
      like Ruby Gems and Bundler to improve experience</li>\n<li>How log files provide
      visibility into dependency management actions</li>\n<li>How lock files pin dependency
      versions for consistency</li>\n<li>Publishing packages democratizes access and
      provides learning opportunities</li>\n<li>Linting to enforce standards and prevent
      certain bugs</li>\n<li>Primitive-focused packages provide flexibility over highly
      opinionated ones</li>\n<li>Suggestions for improving documentation and guides</li>\n<li>Benefits
      of collaboration between programming language communities</li>\n</ul>\n\n<h3>Links
      mentioned in this episode:</h3>\n\n<p>Node.js <a href=\"https://github.com/nodejs\"
      rel=\"nofollow\">https://github.com/nodejs</a> <br>\nnpm JavaScript Package
      Manager  <a href=\"https://github.com/npm\" rel=\"nofollow\">https://github.com/npm</a>
      <br>\nJS Party Podcast <a href=\"https://changelog.com/jsparty\" rel=\"nofollow\">https://changelog.com/jsparty</a>
      <br>\nDashbit <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a>
      <br>\nHexPM Package Manager for Erlang <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a>
      <br>\nHTTP Client for Elixir <a href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a>
      <br>\nEcto Database-Wrapper for Elixir <a href=\"https://github.com/elixir-ecto\"
      rel=\"nofollow\">https://github.com/elixir-ecto</a> (Not an ORM)<br>\nXState
      Actor-Based State Management for JavaScript <a href=\"https://xstate.js.org/docs/\"
      rel=\"nofollow\">https://xstate.js.org/docs/</a> <br>\nSupply Chain Protection
      for JavaScript, Python, and Go  <a href=\"https://socket.dev/\" rel=\"nofollow\">https://socket.dev/</a>
      <br>\nMixAudit <a href=\"https://github.com/mirego/mix_audit\" rel=\"nofollow\">https://github.com/mirego/mix_audit</a>
      <br>\nNimbleTOTP Library for 2FA <a href=\"https://hexdocs.pm/nimble_totp/NimbleTOTP.html\"
      rel=\"nofollow\">https://hexdocs.pm/nimble_totp/NimbleTOTP.html</a> <br>\nMicrosoft
      Azure <a href=\"https://github.com/Azure\" rel=\"nofollow\">https://github.com/Azure</a>
      <br>\nPatch Package <a href=\"https://www.npmjs.com/package/patch-package\"
      rel=\"nofollow\">https://www.npmjs.com/package/patch-package</a> <br>\nRuby
      Bundler to manage Gem dependencies <a href=\"https://github.com/rubygems/bundler\"
      rel=\"nofollow\">https://github.com/rubygems/bundler</a> <br>\nnpm-shrinkwrap
      <a href=\"https://docs.npmjs.com/cli/v10/commands/npm-shrinkwrap\" rel=\"nofollow\">https://docs.npmjs.com/cli/v10/commands/npm-shrinkwrap</a>
      <br>\nSemVer Semantic Versioner for NPM <a href=\"https://www.npmjs.com/package/semver\"
      rel=\"nofollow\">https://www.npmjs.com/package/semver</a><br>\nSpec-ulation
      Keynote - Rich Hickey <a href=\"https://www.youtube.com/watch?v=oyLBGkS5ICk\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=oyLBGkS5ICk</a> <br>\nAmal’s
      favorite Linter <a href=\"https://eslint.org/\" rel=\"nofollow\">https://eslint.org/</a>
      <br>\nElixir Mint Functional HTTP Client for Elixir <a href=\"https://github.com/elixir-mint\"
      rel=\"nofollow\">https://github.com/elixir-mint</a> <br>\nTailwind Open Source
      CSS Framework <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">https://tailwindcss.com/</a>
      <br>\nWebauthnComponents <a href=\"https://hex.pm/packages/webauthn_components\"
      rel=\"nofollow\">https://hex.pm/packages/webauthn_components</a></p><p>Special
      Guests: Amal Hussein and Wojtek Mach.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Wojtek Mach of HexPM and
    Amal Hussein, engineering leader and former NPM team member, join Owen Bickford
    to compare notes on package management in Elixir vs. JavaScript. This lively conversation
    covers everything from best practices for dependency management to API design,
    SemVer (semantic versioning), and the dark ages of web development before package
    managers existed.</p>\n\n<p>The guests debate philosophical differences between
    the JavaScript and Elixir communities. They highlight the JavaScript ecosystem&#39;s
    maturity and identify potential areas of improvement, contrasted against Elixir’s
    emphasis on minimal dependencies. Both guests encourage engineers to publish packages,
    even small ones, as a learning opportunity.</p>\n\n<h3>Topics discussed in this
    episode:</h3>\n\n<ul>\n<li>Leveraging community packages rather than reinventing
    the wheel</li>\n<li>Vetting packages carefully before adopting them as dependencies</li>\n<li>Evaluating
    security, performance, and bundle size when assessing packages</li>\n<li>Managing
    transitive dependencies pulled in by packages</li>\n<li>Why semantic versioning
    is difficult to consistently enforce</li>\n<li>Designing APIs with extensibility
    and backward compatibility in mind</li>\n<li>Using tools like deprecations to
    avoid breaking changes in new releases</li>\n<li>JavaScript’s preference for code
    reuse over minimization</li>\n<li>The Elixir community’s minimal dependencies
    and avoidance of tech debt</li>\n<li>Challenges in early package management, such
    as global dependency</li>\n<li>Learning from tools like Ruby Gems and Bundler
    to improve experience</li>\n<li>How log files provide visibility into dependency
    management actions</li>\n<li>How lock files pin dependency versions for consistency</li>\n<li>Publishing
    packages democratizes access and provides learning opportunities</li>\n<li>Linting
    to enforce standards and prevent certain bugs</li>\n<li>Primitive-focused packages
    provide flexibility over highly opinionated ones</li>\n<li>Suggestions for improving
    documentation and guides</li>\n<li>Benefits of collaboration between programming
    language communities</li>\n</ul>\n\n<h3>Links mentioned in this episode:</h3>\n\n<p>Node.js
    <a href=\"https://github.com/nodejs\" rel=\"nofollow\">https://github.com/nodejs</a>
    <br>\nnpm JavaScript Package Manager  <a href=\"https://github.com/npm\" rel=\"nofollow\">https://github.com/npm</a>
    <br>\nJS Party Podcast <a href=\"https://changelog.com/jsparty\" rel=\"nofollow\">https://changelog.com/jsparty</a>
    <br>\nDashbit <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a>
    <br>\nHexPM Package Manager for Erlang <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a>
    <br>\nHTTP Client for Elixir <a href=\"https://github.com/wojtekmach/req\" rel=\"nofollow\">https://github.com/wojtekmach/req</a>
    <br>\nEcto Database-Wrapper for Elixir <a href=\"https://github.com/elixir-ecto\"
    rel=\"nofollow\">https://github.com/elixir-ecto</a> (Not an ORM)<br>\nXState Actor-Based
    State Management for JavaScript <a href=\"https://xstate.js.org/docs/\" rel=\"nofollow\">https://xstate.js.org/docs/</a>
    <br>\nSupply Chain Protection for JavaScript, Python, and Go  <a href=\"https://socket.dev/\"
    rel=\"nofollow\">https://socket.dev/</a> <br>\nMixAudit <a href=\"https://github.com/mirego/mix_audit\"
    rel=\"nofollow\">https://github.com/mirego/mix_audit</a> <br>\nNimbleTOTP Library
    for 2FA <a href=\"https://hexdocs.pm/nimble_totp/NimbleTOTP.html\" rel=\"nofollow\">https://hexdocs.pm/nimble_totp/NimbleTOTP.html</a>
    <br>\nMicrosoft Azure <a href=\"https://github.com/Azure\" rel=\"nofollow\">https://github.com/Azure</a>
    <br>\nPatch Package <a href=\"https://www.npmjs.com/package/patch-package\" rel=\"nofollow\">https://www.npmjs.com/package/patch-package</a>
    <br>\nRuby Bundler to manage Gem dependencies <a href=\"https://github.com/rubygems/bundler\"
    rel=\"nofollow\">https://github.com/rubygems/bundler</a> <br>\nnpm-shrinkwrap
    <a href=\"https://docs.npmjs.com/cli/v10/commands/npm-shrinkwrap\" rel=\"nofollow\">https://docs.npmjs.com/cli/v10/commands/npm-shrinkwrap</a>
    <br>\nSemVer Semantic Versioner for NPM <a href=\"https://www.npmjs.com/package/semver\"
    rel=\"nofollow\">https://www.npmjs.com/package/semver</a><br>\nSpec-ulation Keynote
    - Rich Hickey <a href=\"https://www.youtube.com/watch?v=oyLBGkS5ICk\" rel=\"nofollow\">https://www.youtube.com/watch?v=oyLBGkS5ICk</a>
    <br>\nAmal’s favorite Linter <a href=\"https://eslint.org/\" rel=\"nofollow\">https://eslint.org/</a>
    <br>\nElixir Mint Functional HTTP Client for Elixir <a href=\"https://github.com/elixir-mint\"
    rel=\"nofollow\">https://github.com/elixir-mint</a> <br>\nTailwind Open Source
    CSS Framework <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">https://tailwindcss.com/</a>
    <br>\nWebauthnComponents <a href=\"https://hex.pm/packages/webauthn_components\"
    rel=\"nofollow\">https://hex.pm/packages/webauthn_components</a></p><p>Special
    Guests: Amal Hussein and Wojtek Mach.</p>\n      "
- title: Communities in Tech with Camille Clayton & Scott Tolinski
  slug: s11-e11-communities-in-tech
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e11-communities-in-tech
  guid: 89defd26-c2d3-49b5-8fb0-fe0c03c7e38a
  pubDate: Thu, 28 Dec 2023 07:00:00 -0500
  pubDateFriendly: December 28, 2023
  description: |
    Today on Elixir Wizards, Camille Clayton, Director of Women Who Code DC, and Scott Tolinski, Co-Host of the Syntax Podcast and Creator of Level Up Tutorials, join hosts Sundi Myint and Owen Bickford to discuss tech community spaces online and IRL.
    They lay out the blueprint and best practices for fostering an inclusive environment where newcomers feel comfortable and welcome to join the discussion – whether it’s an online forum, YouTube comment sections, social media platform, local meetup, or conference.
    Topics discussed in this episode:
    Leaving a space open so newcomers feel empowered to join
    Celebrating small wins to maintain excitement and build confidence
    Why consistency is key to building a community with longevity
    Creating and enforcing a code of conduct to define expectations
    Finding respectful resolutions for addressing issues or complaints
    The importance of amplifying underrepresented voices in tech
    Creating content for all skill levels and adapting to a wider audience
    How remote meetups broaden the possibilities for attendance and connection
    Finding the right fit for mentorship
    Delegation to strengthen community members’ sense of ownership
    Navigating the new normal of local, in-person gatherings post-pandemic
    Links mentioned in this episode:
    https://www.womenwhocode.com/network/dc
    https://syntax.fm/
    https://levelup.video/
    https://devopsdays.org/
    https://github.com/sveltejs
    https://github.com/womenwhocodedc
    https://twitter.com/womenwhocode
    https://www.remoteworkcalc.com/
    https://twitter.com/WomenWhoCodeDC
    https://www.meetup.com/dc-elixir/ Special Guests: Camille Clayton and Scott Tolinski.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bmLzYppY
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/89defd26-c2d3-49b5-8fb0-fe0c03c7e38a.mp3
    length: '93832055'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Camille Clayton, Director of Women Who Code
      DC, and Scott Tolinski, Co-Host of the Syntax Podcast and Creator of Level Up
      Tutorials, join hosts Sundi Myint and Owen Bickford to discuss tech community
      spaces online and IRL.
    duration: '48:19'
    explicit: 'no'
    keywords: Software development, Elixir programming, web development, JavaScript,
      Java, PHP, Women Who Code, Women in STEM, beginner coding tutorials, online
      tech communities, tech meetups, diversity in tech, inclusion in tech, tech conferences,
      community building, tech leadership, mentorship in technology, Kubernetes, tech
      networking, DevOps, Syntax Podcast, Level Up Tutorials, inclusive environments
      in tech, fostering inclusive spaces, tech forums, tech YouTube channels, tech
      social media, tech professional development, open-source, resource sharing,
      community management, women-led organizations, programming languages, functional
      programming, coding standards, web apps, DEI, DEI in the tech sector, rebuilding
      community, post-pandemic community engagement, third places, community planning,
      community-driven solutions
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/89defd26-c2d3-49b5-8fb0-fe0c03c7e38a/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Camille Clayton, Director of Women
      Who Code DC, and Scott Tolinski, Co-Host of the Syntax Podcast and Creator of
      Level Up Tutorials, join hosts Sundi Myint and Owen Bickford to discuss tech
      community spaces online and IRL.</p>\n\n<p>They lay out the blueprint and best
      practices for fostering an inclusive environment where newcomers feel comfortable
      and welcome to join the discussion – whether it’s an online forum, YouTube comment
      sections, social media platform, local meetup, or conference.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>Leaving a space open so newcomers
      feel empowered to join</li>\n<li>Celebrating small wins to maintain excitement
      and build confidence</li>\n<li>Why consistency is key to building a community
      with longevity</li>\n<li>Creating and enforcing a code of conduct to define
      expectations</li>\n<li>Finding respectful resolutions for addressing issues
      or complaints</li>\n<li>The importance of amplifying underrepresented voices
      in tech</li>\n<li>Creating content for all skill levels and adapting to a wider
      audience</li>\n<li>How remote meetups broaden the possibilities for attendance
      and connection</li>\n<li>Finding the right fit for mentorship</li>\n<li>Delegation
      to strengthen community members’ sense of ownership</li>\n<li>Navigating the
      new normal of local, in-person gatherings post-pandemic</li>\n</ul>\n\n<h3>Links
      mentioned in this episode:</h3>\n\n<p><a href=\"https://www.womenwhocode.com/network/dc\"
      rel=\"nofollow\">https://www.womenwhocode.com/network/dc</a><br>\n<a href=\"https://syntax.fm/\"
      rel=\"nofollow\">https://syntax.fm/</a><br>\n<a href=\"https://levelup.video/\"
      rel=\"nofollow\">https://levelup.video/</a><br>\n<a href=\"https://devopsdays.org/\"
      rel=\"nofollow\">https://devopsdays.org/</a><br>\n<a href=\"https://github.com/sveltejs\"
      rel=\"nofollow\">https://github.com/sveltejs</a><br>\n<a href=\"https://github.com/womenwhocodedc\"
      rel=\"nofollow\">https://github.com/womenwhocodedc</a><br>\n<a href=\"https://twitter.com/womenwhocode\"
      rel=\"nofollow\">https://twitter.com/womenwhocode</a><br>\n<a href=\"https://www.remoteworkcalc.com/\"
      rel=\"nofollow\">https://www.remoteworkcalc.com/</a><br>\n<a href=\"https://twitter.com/WomenWhoCodeDC\"
      rel=\"nofollow\">https://twitter.com/WomenWhoCodeDC</a><br>\n<a href=\"https://www.meetup.com/dc-elixir/\"
      rel=\"nofollow\">https://www.meetup.com/dc-elixir/</a></p><p>Special Guests:
      Camille Clayton and Scott Tolinski.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Camille Clayton, Director
    of Women Who Code DC, and Scott Tolinski, Co-Host of the Syntax Podcast and Creator
    of Level Up Tutorials, join hosts Sundi Myint and Owen Bickford to discuss tech
    community spaces online and IRL.</p>\n\n<p>They lay out the blueprint and best
    practices for fostering an inclusive environment where newcomers feel comfortable
    and welcome to join the discussion – whether it’s an online forum, YouTube comment
    sections, social media platform, local meetup, or conference.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>Leaving a space open so newcomers
    feel empowered to join</li>\n<li>Celebrating small wins to maintain excitement
    and build confidence</li>\n<li>Why consistency is key to building a community
    with longevity</li>\n<li>Creating and enforcing a code of conduct to define expectations</li>\n<li>Finding
    respectful resolutions for addressing issues or complaints</li>\n<li>The importance
    of amplifying underrepresented voices in tech</li>\n<li>Creating content for all
    skill levels and adapting to a wider audience</li>\n<li>How remote meetups broaden
    the possibilities for attendance and connection</li>\n<li>Finding the right fit
    for mentorship</li>\n<li>Delegation to strengthen community members’ sense of
    ownership</li>\n<li>Navigating the new normal of local, in-person gatherings post-pandemic</li>\n</ul>\n\n<h3>Links
    mentioned in this episode:</h3>\n\n<p><a href=\"https://www.womenwhocode.com/network/dc\"
    rel=\"nofollow\">https://www.womenwhocode.com/network/dc</a><br>\n<a href=\"https://syntax.fm/\"
    rel=\"nofollow\">https://syntax.fm/</a><br>\n<a href=\"https://levelup.video/\"
    rel=\"nofollow\">https://levelup.video/</a><br>\n<a href=\"https://devopsdays.org/\"
    rel=\"nofollow\">https://devopsdays.org/</a><br>\n<a href=\"https://github.com/sveltejs\"
    rel=\"nofollow\">https://github.com/sveltejs</a><br>\n<a href=\"https://github.com/womenwhocodedc\"
    rel=\"nofollow\">https://github.com/womenwhocodedc</a><br>\n<a href=\"https://twitter.com/womenwhocode\"
    rel=\"nofollow\">https://twitter.com/womenwhocode</a><br>\n<a href=\"https://www.remoteworkcalc.com/\"
    rel=\"nofollow\">https://www.remoteworkcalc.com/</a><br>\n<a href=\"https://twitter.com/WomenWhoCodeDC\"
    rel=\"nofollow\">https://twitter.com/WomenWhoCodeDC</a><br>\n<a href=\"https://www.meetup.com/dc-elixir/\"
    rel=\"nofollow\">https://www.meetup.com/dc-elixir/</a></p><p>Special Guests: Camille
    Clayton and Scott Tolinski.</p>\n      "
- title: Actor Model and Concurrent Processing in Elixir vs. Clojure and Ruby with
    Xiang Ji & Nathan Hessler
  slug: s11-e10-actor-model-concurrency-elixir-ruby-clojure
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e10-actor-model-concurrency-elixir-ruby-clojure
  guid: a017c45b-4f07-4c00-b4ed-f7c4bf616af2
  pubDate: Thu, 21 Dec 2023 07:00:00 -0500
  pubDateFriendly: December 21, 2023
  description: "In this episode of Elixir Wizards, Xiang Ji and Nathan Hessler join
    hosts Sundi Myint and Owen Bickford to compare actor model implementation in Elixir,
    Ruby, and Clojure. \nIn Elixir, the actor model is core to how the BEAM VM works,
    with lightweight processes communicating asynchronously via message passing. GenServers
    provide a common abstraction for building actors, handling messages, and maintaining
    internal state. In Ruby, the actor model is represented through Ractors, which
    currently map to OS threads. \nThey discuss what we can learn by comparing models,
    understanding tradeoffs between VMs, languages, and concurrency primitives, and
    how this knowledge can help us choose the best tools for a project.\nTopics discussed
    in this episode:\nDifference between actor model and shared memory concurrency\nIsolation
    of actor state and communication via message passing\nBEAM VM design for high
    concurrency via lightweight processes\nGenServers as common abstraction for building
    stateful actors\nGenServer callbacks for message handling and state updates\nAgents
    as similar process abstraction to GenServers\nShared state utilities like ETS
    for inter-process communication\nGlobal Interpreter Lock in older Ruby VMs\nRactors
    as initial actor implementation in Ruby mapping to threads\nPlanned improvements
    to Ruby concurrency in 3.3\nAkka implementation of actor model on JVM using thread
    scheduling\nLimitations of shared memory concurrency on JVM\nProject Loom bringing
    lightweight processes to JVM\nBuilding GenServer behavior in Ruby using metaprogramming\nCSP
    model of communication using channels in Clojure\nDifferences between BEAM scheduler
    and thread-based VMs\nComparing Elixir to academic languages like Haskell\nRemote
    and theScore are hiring!\nLinks mentioned in this episode:\ntheScore is hiring!
    https://www.thescore.com/\nRemote is also hiring! https://remote.com/\nComparing
    the Actor Model and CSP with Elixir and Clojure (https://xiangji.me/2023/12/18/comparing-the-actor-model-and-csp-with-elixir-and-clojure/)
    Blog Post by Xiang Ji\nComparing the Actor model & CSP concurrency with Elixir
    & Clojure (https://www.youtube.com/watch?v=lIQCQKPRNCI) Xiang Ji at ElixirConf
    EU 2022\nClojure Programming Language https://clojure.org/ \nAkka https://akka.io/
    \nGo Programming Language https://github.com/golang/go \nProto Actor for Golang
    https://proto.actor/ \nRabbitMQ Open-Source Message Broker Software  https://github.com/rabbitmq
    \nJVM Project Loom https://github.com/openjdk/loom \nRactor for Ruby  https://docs.ruby-lang.org/en/master/ractor_md.html\nSeven
    Concurrency Models in Seven Weeks: When Threads Unravel  (https://pragprog.com/titles/pb7con/seven-concurrency-models-in-seven-weeks/)by
    Paul Butcher\nSeven Languages in Seven Weeks (https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/)
    by Bruce A. Tate\nGenServer https://hexdocs.pm/elixir/1.12/GenServer.html\nets
    https://www.erlang.org/doc/man/ets.html \nElixir in Action (https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/)
    by Saša Jurić\nRedis https://github.com/redis/redis \nDesigning for Scalability
    with Erlang/OTP (https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/)
    by Francesco Cesarini & Steve Vinoski\nDiscord Blog: Using Rust to Scale Elixir
    for 11 Million Concurrent Users (https://discord.com/blog/using-rust-to-scale-elixir-for-11-million-concurrent-users)\nXiang's
    website https://xiangji.me/ \nFeeling Good: The New Mood Therapy (https://www.thriftbooks.com/w/feeling-good-the-new-mood-therapy-by-david-d-burns/250046/?resultid=7691fb71-d8f9-4435-a7a3-db3441d2272b#edition=2377541&idiq=3913925)
    by David D. Burns Special Guests: Nathan Hessler and Xiang Ji.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ohqohjyI
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a017c45b-4f07-4c00-b4ed-f7c4bf616af2.mp3
    length: '92974479'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: 'In this episode of Elixir Wizards, Xiang Ji and Nathan Hessler join
      hosts Sundi Myint and Owen Bickford to compare actor model implementation, concurrent
      processing, and GenServers in Elixir, Ruby, and Clojure. '
    duration: '47:57'
    explicit: 'no'
    keywords: Elixir, Ruby, Clojure, Erlang, JVM, Ruby on Rails, programming language,
      software engineering, computer science, technology trends, programming community,
      software podcasts, tech podcasts, coding, programming frameworks, system design,
      tech industry, software development, tech education, programming education,
      developer community, coding practices, software best practices, tech innovation,
      programming innovation, tech solutions, software solutions, tech strategies,
      programming strategies, tech analysis, software analysis, tech development,
      programming development, tech expertise, software expertise, tech knowledge,
      programming knowledge, tech learning, programming learning, tech skills, software
      skills, tech tips, programming tips, tech updates, software updates, tech advice,
      programming advice, tech experience, software experience, tech exploration,
      programming exploration, tech ideas, software ideas, tech information, programming
      information, tech news, software news, tech opinions, programming opinions,
      tech perspectives, software perspectives, tech resources, programming resources,
      tech skills development, software skills development, tech studies, programming
      studies, tech techniques, programming techniques, tech theories, programming
      theories, tech thoughts, software thoughts, tech tools, programming tools, tech
      training, programming training, tech trends, software trends, tech tutorials,
      programming tutorials, tech wisdom, software wisdom, tech workshops, programming
      workshops, open-source software, web development, application development, software
      architecture, concurrency models, virtual machines, functional programming,
      object-oriented programming, procedural programming, software lifecycle, agile
      methodologies, software testing, software deployment, cloud computing, distributed
      systems, microservices, API development, data structures, algorithms, software
      optimization, software security, database management, user interface design,
      user experience design, DevOps, machine learning, artificial intelligence, data
      science, big data, internet of things, blockchain technology, quantum computing,
      augmented reality, virtual reality, mobile development, game development, software
      compliance, software standards, tech entrepreneurship, tech startups, tech leadership,
      tech mentorship, tech diversity, tech inclusion, remote work, digital transformation,
      tech sustainability, tech ethics, tech policy, tech regulation.
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a017c45b-4f07-4c00-b4ed-f7c4bf616af2/cover.jpg?v=1
    summary: "\n        <p>In this episode of Elixir Wizards, Xiang Ji and Nathan
      Hessler join hosts Sundi Myint and Owen Bickford to compare actor model implementation
      in Elixir, Ruby, and Clojure. </p>\n\n<p>In Elixir, the actor model is core
      to how the BEAM VM works, with lightweight processes communicating asynchronously
      via message passing. GenServers provide a common abstraction for building actors,
      handling messages, and maintaining internal state. In Ruby, the actor model
      is represented through Ractors, which currently map to OS threads. </p>\n\n<p>They
      discuss what we can learn by comparing models, understanding tradeoffs between
      VMs, languages, and concurrency primitives, and how this knowledge can help
      us choose the best tools for a project.</p>\n\n<h3>Topics discussed in this
      episode:</h3>\n\n<ul>\n<li>Difference between actor model and shared memory
      concurrency</li>\n<li>Isolation of actor state and communication via message
      passing</li>\n<li>BEAM VM design for high concurrency via lightweight processes</li>\n<li>GenServers
      as common abstraction for building stateful actors</li>\n<li>GenServer callbacks
      for message handling and state updates</li>\n<li>Agents as similar process abstraction
      to GenServers</li>\n<li>Shared state utilities like ETS for inter-process communication</li>\n<li>Global
      Interpreter Lock in older Ruby VMs</li>\n<li>Ractors as initial actor implementation
      in Ruby mapping to threads</li>\n<li>Planned improvements to Ruby concurrency
      in 3.3</li>\n<li>Akka implementation of actor model on JVM using thread scheduling</li>\n<li>Limitations
      of shared memory concurrency on JVM</li>\n<li>Project Loom bringing lightweight
      processes to JVM</li>\n<li>Building GenServer behavior in Ruby using metaprogramming</li>\n<li>CSP
      model of communication using channels in Clojure</li>\n<li>Differences between
      BEAM scheduler and thread-based VMs</li>\n<li>Comparing Elixir to academic languages
      like Haskell</li>\n<li>Remote and theScore are hiring!</li>\n</ul>\n\n<h3>Links
      mentioned in this episode:</h3>\n\n<p>theScore is hiring! <a href=\"https://www.thescore.com/\"
      rel=\"nofollow\">https://www.thescore.com/</a><br>\nRemote is also hiring! <a
      href=\"https://remote.com/\" rel=\"nofollow\">https://remote.com/</a><br>\n<a
      href=\"https://xiangji.me/2023/12/18/comparing-the-actor-model-and-csp-with-elixir-and-clojure/\"
      rel=\"nofollow\">Comparing the Actor Model and CSP with Elixir and Clojure</a>
      Blog Post by Xiang Ji<br>\n<a href=\"https://www.youtube.com/watch?v=lIQCQKPRNCI\"
      rel=\"nofollow\">Comparing the Actor model &amp; CSP concurrency with Elixir
      &amp; Clojure</a> Xiang Ji at ElixirConf EU 2022<br>\nClojure Programming Language
      <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a> <br>\nAkka
      <a href=\"https://akka.io/\" rel=\"nofollow\">https://akka.io/</a> <br>\nGo
      Programming Language <a href=\"https://github.com/golang/go\" rel=\"nofollow\">https://github.com/golang/go</a>
      <br>\nProto Actor for Golang <a href=\"https://proto.actor/\" rel=\"nofollow\">https://proto.actor/</a>
      <br>\nRabbitMQ Open-Source Message Broker Software  <a href=\"https://github.com/rabbitmq\"
      rel=\"nofollow\">https://github.com/rabbitmq</a> <br>\nJVM Project Loom <a href=\"https://github.com/openjdk/loom\"
      rel=\"nofollow\">https://github.com/openjdk/loom</a> <br>\nRactor for Ruby 
      <a href=\"https://docs.ruby-lang.org/en/master/ractor_md.html\" rel=\"nofollow\">https://docs.ruby-lang.org/en/master/ractor_md.html</a><br>\n<a
      href=\"https://pragprog.com/titles/pb7con/seven-concurrency-models-in-seven-weeks/\"
      rel=\"nofollow\">Seven Concurrency Models in Seven Weeks: When Threads Unravel
      </a>by Paul Butcher<br>\n<a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
      rel=\"nofollow\">Seven Languages in Seven Weeks</a> by Bruce A. Tate<br>\nGenServer
      <a href=\"https://hexdocs.pm/elixir/1.12/GenServer.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/1.12/GenServer.html</a><br>\nets
      <a href=\"https://www.erlang.org/doc/man/ets.html\" rel=\"nofollow\">https://www.erlang.org/doc/man/ets.html</a>
      <br>\n<a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
      rel=\"nofollow\">Elixir in Action</a> by Saša Jurić<br>\nRedis <a href=\"https://github.com/redis/redis\"
      rel=\"nofollow\">https://github.com/redis/redis</a> <br>\n<a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
      rel=\"nofollow\">Designing for Scalability with Erlang/OTP</a> by Francesco
      Cesarini &amp; Steve Vinoski<br>\nDiscord Blog: <a href=\"https://discord.com/blog/using-rust-to-scale-elixir-for-11-million-concurrent-users\"
      rel=\"nofollow\">Using Rust to Scale Elixir for 11 Million Concurrent Users</a><br>\nXiang&#39;s
      website <a href=\"https://xiangji.me/\" rel=\"nofollow\">https://xiangji.me/</a>
      <br>\n<a href=\"https://www.thriftbooks.com/w/feeling-good-the-new-mood-therapy-by-david-d-burns/250046/?resultid=7691fb71-d8f9-4435-a7a3-db3441d2272b#edition=2377541&idiq=3913925\"
      rel=\"nofollow\">Feeling Good: The New Mood Therapy</a> by David D. Burns</p><p>Special
      Guests: Nathan Hessler and Xiang Ji.</p>\n      "
  contentEncoded: "\n        <p>In this episode of Elixir Wizards, Xiang Ji and Nathan
    Hessler join hosts Sundi Myint and Owen Bickford to compare actor model implementation
    in Elixir, Ruby, and Clojure. </p>\n\n<p>In Elixir, the actor model is core to
    how the BEAM VM works, with lightweight processes communicating asynchronously
    via message passing. GenServers provide a common abstraction for building actors,
    handling messages, and maintaining internal state. In Ruby, the actor model is
    represented through Ractors, which currently map to OS threads. </p>\n\n<p>They
    discuss what we can learn by comparing models, understanding tradeoffs between
    VMs, languages, and concurrency primitives, and how this knowledge can help us
    choose the best tools for a project.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>Difference
    between actor model and shared memory concurrency</li>\n<li>Isolation of actor
    state and communication via message passing</li>\n<li>BEAM VM design for high
    concurrency via lightweight processes</li>\n<li>GenServers as common abstraction
    for building stateful actors</li>\n<li>GenServer callbacks for message handling
    and state updates</li>\n<li>Agents as similar process abstraction to GenServers</li>\n<li>Shared
    state utilities like ETS for inter-process communication</li>\n<li>Global Interpreter
    Lock in older Ruby VMs</li>\n<li>Ractors as initial actor implementation in Ruby
    mapping to threads</li>\n<li>Planned improvements to Ruby concurrency in 3.3</li>\n<li>Akka
    implementation of actor model on JVM using thread scheduling</li>\n<li>Limitations
    of shared memory concurrency on JVM</li>\n<li>Project Loom bringing lightweight
    processes to JVM</li>\n<li>Building GenServer behavior in Ruby using metaprogramming</li>\n<li>CSP
    model of communication using channels in Clojure</li>\n<li>Differences between
    BEAM scheduler and thread-based VMs</li>\n<li>Comparing Elixir to academic languages
    like Haskell</li>\n<li>Remote and theScore are hiring!</li>\n</ul>\n\n<h3>Links
    mentioned in this episode:</h3>\n\n<p>theScore is hiring! <a href=\"https://www.thescore.com/\"
    rel=\"nofollow\">https://www.thescore.com/</a><br>\nRemote is also hiring! <a
    href=\"https://remote.com/\" rel=\"nofollow\">https://remote.com/</a><br>\n<a
    href=\"https://xiangji.me/2023/12/18/comparing-the-actor-model-and-csp-with-elixir-and-clojure/\"
    rel=\"nofollow\">Comparing the Actor Model and CSP with Elixir and Clojure</a>
    Blog Post by Xiang Ji<br>\n<a href=\"https://www.youtube.com/watch?v=lIQCQKPRNCI\"
    rel=\"nofollow\">Comparing the Actor model &amp; CSP concurrency with Elixir &amp;
    Clojure</a> Xiang Ji at ElixirConf EU 2022<br>\nClojure Programming Language <a
    href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a> <br>\nAkka
    <a href=\"https://akka.io/\" rel=\"nofollow\">https://akka.io/</a> <br>\nGo Programming
    Language <a href=\"https://github.com/golang/go\" rel=\"nofollow\">https://github.com/golang/go</a>
    <br>\nProto Actor for Golang <a href=\"https://proto.actor/\" rel=\"nofollow\">https://proto.actor/</a>
    <br>\nRabbitMQ Open-Source Message Broker Software  <a href=\"https://github.com/rabbitmq\"
    rel=\"nofollow\">https://github.com/rabbitmq</a> <br>\nJVM Project Loom <a href=\"https://github.com/openjdk/loom\"
    rel=\"nofollow\">https://github.com/openjdk/loom</a> <br>\nRactor for Ruby  <a
    href=\"https://docs.ruby-lang.org/en/master/ractor_md.html\" rel=\"nofollow\">https://docs.ruby-lang.org/en/master/ractor_md.html</a><br>\n<a
    href=\"https://pragprog.com/titles/pb7con/seven-concurrency-models-in-seven-weeks/\"
    rel=\"nofollow\">Seven Concurrency Models in Seven Weeks: When Threads Unravel
    </a>by Paul Butcher<br>\n<a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
    rel=\"nofollow\">Seven Languages in Seven Weeks</a> by Bruce A. Tate<br>\nGenServer
    <a href=\"https://hexdocs.pm/elixir/1.12/GenServer.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/1.12/GenServer.html</a><br>\nets
    <a href=\"https://www.erlang.org/doc/man/ets.html\" rel=\"nofollow\">https://www.erlang.org/doc/man/ets.html</a>
    <br>\n<a href=\"https://pragprog.com/titles/btlang/seven-languages-in-seven-weeks/\"
    rel=\"nofollow\">Elixir in Action</a> by Saša Jurić<br>\nRedis <a href=\"https://github.com/redis/redis\"
    rel=\"nofollow\">https://github.com/redis/redis</a> <br>\n<a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
    rel=\"nofollow\">Designing for Scalability with Erlang/OTP</a> by Francesco Cesarini
    &amp; Steve Vinoski<br>\nDiscord Blog: <a href=\"https://discord.com/blog/using-rust-to-scale-elixir-for-11-million-concurrent-users\"
    rel=\"nofollow\">Using Rust to Scale Elixir for 11 Million Concurrent Users</a><br>\nXiang&#39;s
    website <a href=\"https://xiangji.me/\" rel=\"nofollow\">https://xiangji.me/</a>
    <br>\n<a href=\"https://www.thriftbooks.com/w/feeling-good-the-new-mood-therapy-by-david-d-burns/250046/?resultid=7691fb71-d8f9-4435-a7a3-db3441d2272b#edition=2377541&idiq=3913925\"
    rel=\"nofollow\">Feeling Good: The New Mood Therapy</a> by David D. Burns</p><p>Special
    Guests: Nathan Hessler and Xiang Ji.</p>\n      "
- title: Static Code Analysis in Elixir vs. Ruby with René Föhring & Marc-André Lafortune
  slug: s11-e09-static-code-analyzer-elixir-credo-ruby-rubocop
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e09-static-code-analyzer-elixir-credo-ruby-rubocop
  guid: 20be544f-afde-4f0a-9219-d89869ae1cda
  pubDate: Thu, 14 Dec 2023 07:00:00 -0500
  pubDateFriendly: December 14, 2023
  description: "In this episode of Elixir Wizards, hosts Owen and Dan are joined by
    René Föhring, creator of Credo for Elixir, and Marc-André LaFortune, head maintainer
    of the RuboCop AST library for Ruby. They compare static code analysis in Ruby
    versus Elixir. \nThe conversation explores the intricacies and challenges inherent
    in static code analysis across object-oriented and functional programming paradigms,
    highlighting the unique characteristics of both Ruby and Elixir. Key topics of
    discussion include the ways these tools can enhance coding styles and empower
    developers, the delicate balance between providing guidance and enforcing rules,
    and the evolving future of code analysis in these languages.\nTopics discussed
    in this episode:\nThe differences and applications between static and dynamic
    analysis\nHow Credo aims to offer flexible and educational guidance for Elixir
    developers\nThe complexities of method identification in Ruby and its impact on
    static analysis\nChallenges posed by macros and dynamic code modification during
    compilation in Elixir\nReducing false positives in code analysis tools to minimize
    developer frustration\nPromoting uniform coding practices through analysis tools\nThe
    significance of using analysis tools with clear, specific objectives\nHow coding
    standards can refine and improve coding styles over time\nBuilding analysis tools
    and checks through an understanding of Abstract Syntax Trees (ASTs)\nPotential
    advancements in the analysis of Phoenix templates and HTML in Elixir\nContrasting
    approaches to managing code and comments in Elixir and Ruby ASTs\nThe fine line
    between providing helpful guidance and imposing stylistic preferences\nHeuristics
    in static analysis highlight inconsistencies without mandating style\nThe potential
    for more straightforward pattern matching in ASTs with future updates\nThe importance
    of a gradual implementation of tool updates to maintain backward compatibility\nCreating
    tools that support and empower developers, rather than hinder them\nHow static
    analysis contributes to cleaner, more maintainable codebases\nPotential future
    developments in the field of static code analysis\nPractical applications of using
    linters like Credo and RuboCop in software development\nLinks mentioned in this
    episode:\nCredo https://github.com/rrrene/credo\nhttps://hexdocs.pm/credo/overview.html\nDogma:
    A code style linter for Elixir https://github.com/lpil/dogma \nhttps://github.com/rubocop/rubocop
    \nRuboCop's AST extensions and NodePattern functionality https://github.com/rubocop/rubocop-ast
    \nhttps://github.com/whitequark/parser\nhttps://hex.pm/packages?search=credo&sort=recentdownloads\nhttps://github.com/doorgan/sourceror\nhttps://github.com/rrrene/credo/blob/master/lib/credo/check/readability/largenumbers.ex
    Special Guests: Marc-André Lafortune and René Föhring.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+02RabiBs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/20be544f-afde-4f0a-9219-d89869ae1cda.mp3
    length: '89275713'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: 'In this episode of Elixir Wizards, hosts Owen and Dan are joined by
      René Föhring, creator of Credo for Elixir, and Marc-André LaFortune, head maintainer
      of the RuboCop AST library for Ruby. They compare static code analysis in Ruby
      versus Elixir. '
    duration: '46:02'
    explicit: 'no'
    keywords: static code analysis, Ruby programming, Elixir programming, object-oriented
      programming, functional programming, software development, coding styles, developer
      tools, programming paradigms, Ruby vs Elixir, code analysis tools, programming
      languages, software engineering, code quality, source code analysis, dynamic
      analysis, method identification, code modification, coding practices, analysis
      tools, coding standards, Abstract Syntax Trees, AST, Phoenix templates, HTML
      analysis, heuristics in programming, pattern matching, tool updates, maintainable
      codebases, static analysis development, linters, Credo linter, RuboCop linter,
      software development trends, programming best practices, code analysis techniques,
      code management, programming heuristics, programming tools, codebase improvement,
      future of code analysis, practical linter applications, Elixir language, Ruby
      language, developer resources, programming insights, tech podcasts, software
      podcasts, programming discussions, coding debates, developer community, tech
      community, programming education, software development education, Elixir community,
      Ruby community, coding efficiency, programming efficiency, code analysis benefits,
      tech podcast, developer podcast, Elixir podcast, Ruby podcast, programming talk,
      coding talk, tech talk, developer talk, Elixir talk, Ruby talk, programming
      tips, coding tips, tech tips, developer tips, Elixir tips, Ruby tips
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/20be544f-afde-4f0a-9219-d89869ae1cda/cover.jpg?v=1
    summary: "\n        <p>In this episode of Elixir Wizards, hosts Owen and Dan are
      joined by René Föhring, creator of Credo for Elixir, and Marc-André LaFortune,
      head maintainer of the RuboCop AST library for Ruby. They compare static code
      analysis in Ruby versus Elixir. </p>\n\n<p>The conversation explores the intricacies
      and challenges inherent in static code analysis across object-oriented and functional
      programming paradigms, highlighting the unique characteristics of both Ruby
      and Elixir. Key topics of discussion include the ways these tools can enhance
      coding styles and empower developers, the delicate balance between providing
      guidance and enforcing rules, and the evolving future of code analysis in these
      languages.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>The
      differences and applications between static and dynamic analysis</li>\n<li>How
      Credo aims to offer flexible and educational guidance for Elixir developers</li>\n<li>The
      complexities of method identification in Ruby and its impact on static analysis</li>\n<li>Challenges
      posed by macros and dynamic code modification during compilation in Elixir</li>\n<li>Reducing
      false positives in code analysis tools to minimize developer frustration</li>\n<li>Promoting
      uniform coding practices through analysis tools</li>\n<li>The significance of
      using analysis tools with clear, specific objectives</li>\n<li>How coding standards
      can refine and improve coding styles over time</li>\n<li>Building analysis tools
      and checks through an understanding of Abstract Syntax Trees (ASTs)</li>\n<li>Potential
      advancements in the analysis of Phoenix templates and HTML in Elixir</li>\n<li>Contrasting
      approaches to managing code and comments in Elixir and Ruby ASTs</li>\n<li>The
      fine line between providing helpful guidance and imposing stylistic preferences</li>\n<li>Heuristics
      in static analysis highlight inconsistencies without mandating style</li>\n<li>The
      potential for more straightforward pattern matching in ASTs with future updates</li>\n<li>The
      importance of a gradual implementation of tool updates to maintain backward
      compatibility</li>\n<li>Creating tools that support and empower developers,
      rather than hinder them</li>\n<li>How static analysis contributes to cleaner,
      more maintainable codebases</li>\n<li>Potential future developments in the field
      of static code analysis</li>\n<li>Practical applications of using linters like
      Credo and RuboCop in software development</li>\n</ul>\n\n<h3>Links mentioned
      in this episode:</h3>\n\n<p>Credo <a href=\"https://github.com/rrrene/credo\"
      rel=\"nofollow\">https://github.com/rrrene/credo</a><br>\n<a href=\"https://hexdocs.pm/credo/overview.html\"
      rel=\"nofollow\">https://hexdocs.pm/credo/overview.html</a><br>\nDogma: A code
      style linter for Elixir <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a>
      <br>\n<a href=\"https://github.com/rubocop/rubocop\" rel=\"nofollow\">https://github.com/rubocop/rubocop</a>
      <br>\nRuboCop&#39;s AST extensions and NodePattern functionality <a href=\"https://github.com/rubocop/rubocop-ast\"
      rel=\"nofollow\">https://github.com/rubocop/rubocop-ast</a> <br>\n<a href=\"https://github.com/whitequark/parser\"
      rel=\"nofollow\">https://github.com/whitequark/parser</a><br>\n<a href=\"https://hex.pm/packages?search=credo&sort=recent_downloads\"
      rel=\"nofollow\">https://hex.pm/packages?search=credo&amp;sort=recent_downloads</a><br>\n<a
      href=\"https://github.com/doorgan/sourceror\" rel=\"nofollow\">https://github.com/doorgan/sourceror</a><br>\n<a
      href=\"https://github.com/rrrene/credo/blob/master/lib/credo/check/readability/large_numbers.ex\"
      rel=\"nofollow\">https://github.com/rrrene/credo/blob/master/lib/credo/check/readability/large_numbers.ex</a></p><p>Special
      Guests: Marc-André Lafortune and René Föhring.</p>\n      "
  contentEncoded: "\n        <p>In this episode of Elixir Wizards, hosts Owen and
    Dan are joined by René Föhring, creator of Credo for Elixir, and Marc-André LaFortune,
    head maintainer of the RuboCop AST library for Ruby. They compare static code
    analysis in Ruby versus Elixir. </p>\n\n<p>The conversation explores the intricacies
    and challenges inherent in static code analysis across object-oriented and functional
    programming paradigms, highlighting the unique characteristics of both Ruby and
    Elixir. Key topics of discussion include the ways these tools can enhance coding
    styles and empower developers, the delicate balance between providing guidance
    and enforcing rules, and the evolving future of code analysis in these languages.</p>\n\n<h3>Topics
    discussed in this episode:</h3>\n\n<ul>\n<li>The differences and applications
    between static and dynamic analysis</li>\n<li>How Credo aims to offer flexible
    and educational guidance for Elixir developers</li>\n<li>The complexities of method
    identification in Ruby and its impact on static analysis</li>\n<li>Challenges
    posed by macros and dynamic code modification during compilation in Elixir</li>\n<li>Reducing
    false positives in code analysis tools to minimize developer frustration</li>\n<li>Promoting
    uniform coding practices through analysis tools</li>\n<li>The significance of
    using analysis tools with clear, specific objectives</li>\n<li>How coding standards
    can refine and improve coding styles over time</li>\n<li>Building analysis tools
    and checks through an understanding of Abstract Syntax Trees (ASTs)</li>\n<li>Potential
    advancements in the analysis of Phoenix templates and HTML in Elixir</li>\n<li>Contrasting
    approaches to managing code and comments in Elixir and Ruby ASTs</li>\n<li>The
    fine line between providing helpful guidance and imposing stylistic preferences</li>\n<li>Heuristics
    in static analysis highlight inconsistencies without mandating style</li>\n<li>The
    potential for more straightforward pattern matching in ASTs with future updates</li>\n<li>The
    importance of a gradual implementation of tool updates to maintain backward compatibility</li>\n<li>Creating
    tools that support and empower developers, rather than hinder them</li>\n<li>How
    static analysis contributes to cleaner, more maintainable codebases</li>\n<li>Potential
    future developments in the field of static code analysis</li>\n<li>Practical applications
    of using linters like Credo and RuboCop in software development</li>\n</ul>\n\n<h3>Links
    mentioned in this episode:</h3>\n\n<p>Credo <a href=\"https://github.com/rrrene/credo\"
    rel=\"nofollow\">https://github.com/rrrene/credo</a><br>\n<a href=\"https://hexdocs.pm/credo/overview.html\"
    rel=\"nofollow\">https://hexdocs.pm/credo/overview.html</a><br>\nDogma: A code
    style linter for Elixir <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a>
    <br>\n<a href=\"https://github.com/rubocop/rubocop\" rel=\"nofollow\">https://github.com/rubocop/rubocop</a>
    <br>\nRuboCop&#39;s AST extensions and NodePattern functionality <a href=\"https://github.com/rubocop/rubocop-ast\"
    rel=\"nofollow\">https://github.com/rubocop/rubocop-ast</a> <br>\n<a href=\"https://github.com/whitequark/parser\"
    rel=\"nofollow\">https://github.com/whitequark/parser</a><br>\n<a href=\"https://hex.pm/packages?search=credo&sort=recent_downloads\"
    rel=\"nofollow\">https://hex.pm/packages?search=credo&amp;sort=recent_downloads</a><br>\n<a
    href=\"https://github.com/doorgan/sourceror\" rel=\"nofollow\">https://github.com/doorgan/sourceror</a><br>\n<a
    href=\"https://github.com/rrrene/credo/blob/master/lib/credo/check/readability/large_numbers.ex\"
    rel=\"nofollow\">https://github.com/rrrene/credo/blob/master/lib/credo/check/readability/large_numbers.ex</a></p><p>Special
    Guests: Marc-André Lafortune and René Föhring.</p>\n      "
- title: 'Web Development Frameworks: Elixir and Phoenix vs. Ruby on Rails with Owen
    Bickford & Dan Ivovich'
  slug: s11-e08-web-development-frameworks-elixir-phoenix-ruby-rails
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e08-web-development-frameworks-elixir-phoenix-ruby-rails
  guid: 9a040776-e4b5-46a1-bedb-c2aaaa7fa246
  pubDate: Thu, 07 Dec 2023 07:00:00 -0500
  pubDateFriendly: December  7, 2023
  description: "On today’s episode, Elixir Wizards Owen Bickford and Dan Ivovich compare
    notes on building web applications with Elixir and the Phoenix Framework versus
    Ruby on Rails. They discuss the history of both frameworks, key differences in
    architecture and approach, and deciding which programming language to use when
    starting a project.\nBoth Phoenix and Rails are robust frameworks that enable
    developers to build high-quality web apps—Phoenix leverages functional programming
    in Elixir and Erlang’s networking for real-time communication. Rails follows object-oriented
    principles and has a vast ecosystem of plug-ins. For data-heavy CRUD apps, Phoenix's
    immutable data pipelines provide some advantages. \nDevelopers can build great
    web apps with either Phoenix or Rails. Phoenix may have a slight edge for new
    projects based on its functional approach, built-in real-time features like LiveView,
    and ability to scale efficiently. But, choosing the right tech stack depends heavily
    on the app's specific requirements and the team's existing skills.\nTopics discussed
    in this episode:\nHistory and evolution of Phoenix Framework and Ruby on Rails\nDefault
    project structure and code organization preferences in each framework\nComparing
    object-oriented vs functional programming paradigms\nCRUD app development and
    interaction with databases\nLive reloading capabilities in Phoenix LiveView vs
    Rails Turbolinks\nLeveraging WebSockets for real-time UI updates\nTesting frameworks
    like RSpec, Cucumber, Wallaby, and Capybara \nDependency management and size of
    standard libraries\nScalability and distribution across nodes\nReadability and
    approachability of object-oriented code\nImmutability and data pipelines in functional
    programming\nTypes, specs, and static analysis with Dialyzer\nMonkey patching
    in Ruby vs extensible core language in Elixir\nFactors to consider when choosing
    between frameworks\nExperience training new developers on Phoenix and Rails\nCommunity
    influences on coding styles\nReal-world project examples and refactoring approaches\nDeployment
    and dev ops differences\nPopularity and adoption curves of both frameworks\nOngoing
    research into improving Phoenix and Rails\nLinks Mentioned in this Episode:\nSmartLogic.io
    (https://smartlogic.io/)\nDan’s LinkedIn (https://www.linkedin.com/in/divovich/)\nOwen’s
    LinkedIn (https://www.linkedin.com/in/owen-bickford-8b6b1523a/)\nRuby https://www.ruby-lang.org/en/
    \nRails https://rubyonrails.org/\nSams Teach Yourself Ruby in 21 Days  (https://www.overdrive.com/media/56304/sams-teach-yourself-ruby-in-21-days)\nLearn
    Ruby in 7 Days (https://www.thriftbooks.com/w/learn-ruby-in-7-days---color-print---ruby-tutorial-for-guaranteed-quick-learning-ruby-guide-with-many-practical-examples-this-ruby-programming-book--to-build-real-life-software-projects/18539364/#edition=19727339&idiq=25678249)\nBuild
    Your Own Ruby on Rails Web Applications (https://www.thriftbooks.com/w/build-your-own-ruby-on-rails-web-applications_patrick-lenz/725256/item/2315989/?utm_source=google&utm_medium=cpc&utm_campaign=low_vol_backlist_standard_shopping_customer_acquisition&utm_adgroup=&utm_term=&utm_content=593118743925&gad_source=1&gclid=CjwKCAiA1MCrBhAoEiwAC2d64aQyFawuU3znN0VFgGyjR0I-0vrXlseIvht0QPOqx4DjKjdpgjCMZhoC6PcQAvD_BwE#idiq=2315989&edition=3380836)\nDjango
    https://github.com/django \nSidekiq https://github.com/sidekiq \nKafka https://kafka.apache.org/\nPhoenix
    Framework https://www.phoenixframework.org/\nPhoenix LiveView https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html#content
    \nFlask https://flask.palletsprojects.com/en/3.0.x/ \nWebSockets API https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API
    \nWebSocket connection for Phoenix https://github.com/phoenixframework/websock\nMorph
    Dom https://github.com/patrick-steele-idem/morphdom \nTurbolinks https://github.com/turbolinks\nEcto
    https://github.com/elixir-ecto\nCapybara Testing Framework https://teamcapybara.github.io/capybara/\nWallaby
    Testing Framework https://wallabyjs.com/\nCucumber Testing Framework https://cucumber.io/\nRSpec
    https://rspec.info/ \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+uVVYKXc_
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9a040776-e4b5-46a1-bedb-c2aaaa7fa246.mp3
    length: '80841965'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: On today’s episode, Elixir Wizards Owen Bickford and Dan Ivovich compare
      notes on building web applications with Elixir and the Phoenix Framework versus
      Ruby on Rails. They discuss the history of both frameworks, key differences
      in architecture and approach, and deciding which programming language to use
      when starting a project.
    duration: '41:41'
    explicit: 'no'
    keywords: software engineering, programming, web development, web frameworks,
      functional programming, object oriented programming, phoenix framework, elixir,
      ruby on rails, erlang, live reloading, real time communication, websockets,
      testing frameworks, unit testing, integration testing, test driven development,
      exunit, rspec, code organization, mvc pattern, rest apis, crud apps, database
      interactions, ecto, active record, data pipelines, immutable data, state management,
      front end development, back end development, full stack development, dependency
      management, standard libraries, scalability, distributed systems, multiprocessing,
      developer productivity, programming languages, static types, monkey patching,
      code readability, code maintainability, devops, deployment, web application
      architecture, choosing tech stacks, training developers, coding best practices,
      refactoring code, open source communities, framework maturity, language adoption,
      web trends, software research, linkedin, tech podcasts, developer podcasts,
      programming podcasts, software engineering podcasts, web development podcasts,
      computer science, information technology, saas, paas, iaas, software consulting,
      custom software, mobile apps, cross platform apps, web apps, react, flutter,
      startups, mvp, prototypes, frameworks, libraries, bootcamps, computer programming,
      coding, hackers, developers, engineers, builders, makers, technologists, compilers,
      scripts, automation, algorithms, data structures, design patterns, clean code,
      technical debt, code quality, code review, pull requests, github, git, version
      control, ci/cd, sdlc, agile, scrum, user stories, ui, ux
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9a040776-e4b5-46a1-bedb-c2aaaa7fa246/cover.jpg?v=1
    summary: "\n        <p>On today’s episode, Elixir Wizards Owen Bickford and Dan
      Ivovich compare notes on building web applications with Elixir and the Phoenix
      Framework versus Ruby on Rails. They discuss the history of both frameworks,
      key differences in architecture and approach, and deciding which programming
      language to use when starting a project.</p>\n\n<p>Both Phoenix and Rails are
      robust frameworks that enable developers to build high-quality web apps—Phoenix
      leverages functional programming in Elixir and Erlang’s networking for real-time
      communication. Rails follows object-oriented principles and has a vast ecosystem
      of plug-ins. For data-heavy CRUD apps, Phoenix&#39;s immutable data pipelines
      provide some advantages. </p>\n\n<p>Developers can build great web apps with
      either Phoenix or Rails. Phoenix may have a slight edge for new projects based
      on its functional approach, built-in real-time features like LiveView, and ability
      to scale efficiently. But, choosing the right tech stack depends heavily on
      the app&#39;s specific requirements and the team&#39;s existing skills.</p>\n\n<h3>Topics
      discussed in this episode:</h3>\n\n<ul>\n<li>History and evolution of Phoenix
      Framework and Ruby on Rails</li>\n<li>Default project structure and code organization
      preferences in each framework</li>\n<li>Comparing object-oriented vs functional
      programming paradigms</li>\n<li>CRUD app development and interaction with databases</li>\n<li>Live
      reloading capabilities in Phoenix LiveView vs Rails Turbolinks</li>\n<li>Leveraging
      WebSockets for real-time UI updates</li>\n<li>Testing frameworks like RSpec,
      Cucumber, Wallaby, and Capybara </li>\n<li>Dependency management and size of
      standard libraries</li>\n<li>Scalability and distribution across nodes</li>\n<li>Readability
      and approachability of object-oriented code</li>\n<li>Immutability and data
      pipelines in functional programming</li>\n<li>Types, specs, and static analysis
      with Dialyzer</li>\n<li>Monkey patching in Ruby vs extensible core language
      in Elixir</li>\n<li>Factors to consider when choosing between frameworks</li>\n<li>Experience
      training new developers on Phoenix and Rails</li>\n<li>Community influences
      on coding styles</li>\n<li>Real-world project examples and refactoring approaches</li>\n<li>Deployment
      and dev ops differences</li>\n<li>Popularity and adoption curves of both frameworks</li>\n<li>Ongoing
      research into improving Phoenix and Rails</li>\n</ul>\n\n<h3>Links Mentioned
      in this Episode:</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">SmartLogic.io</a><br>\n<a
      href=\"https://www.linkedin.com/in/divovich/\" rel=\"nofollow\">Dan’s LinkedIn</a><br>\n<a
      href=\"https://www.linkedin.com/in/owen-bickford-8b6b1523a/\" rel=\"nofollow\">Owen’s
      LinkedIn</a><br>\nRuby <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a>
      <br>\nRails <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\n<a
      href=\"https://www.overdrive.com/media/56304/sams-teach-yourself-ruby-in-21-days\"
      rel=\"nofollow\">Sams Teach Yourself Ruby in 21 Days </a><br>\n<a href=\"https://www.thriftbooks.com/w/learn-ruby-in-7-days---color-print---ruby-tutorial-for-guaranteed-quick-learning-ruby-guide-with-many-practical-examples-this-ruby-programming-book--to-build-real-life-software-projects/18539364/#edition=19727339&idiq=25678249\"
      rel=\"nofollow\">Learn Ruby in 7 Days</a><br>\n<a href=\"https://www.thriftbooks.com/w/build-your-own-ruby-on-rails-web-applications_patrick-lenz/725256/item/2315989/?utm_source=google&utm_medium=cpc&utm_campaign=low_vol_backlist_standard_shopping_customer_acquisition&utm_adgroup=&utm_term=&utm_content=593118743925&gad_source=1&gclid=CjwKCAiA1MCrBhAoEiwAC2d64aQyFawuU3znN0VFgGyjR0I-0vrXlseIvht0QPOqx4DjKjdpgjCMZhoC6PcQAvD_BwE#idiq=2315989&edition=3380836\"
      rel=\"nofollow\">Build Your Own Ruby on Rails Web Applications</a><br>\nDjango
      <a href=\"https://github.com/django\" rel=\"nofollow\">https://github.com/django</a>
      <br>\nSidekiq <a href=\"https://github.com/sidekiq\" rel=\"nofollow\">https://github.com/sidekiq</a>
      <br>\nKafka <a href=\"https://kafka.apache.org/\" rel=\"nofollow\">https://kafka.apache.org/</a><br>\nPhoenix
      Framework <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nPhoenix
      LiveView <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#content\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#content</a>
      <br>\nFlask <a href=\"https://flask.palletsprojects.com/en/3.0.x/\" rel=\"nofollow\">https://flask.palletsprojects.com/en/3.0.x/</a>
      <br>\nWebSockets API <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\"
      rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API</a>
      <br>\nWebSocket connection for Phoenix <a href=\"https://github.com/phoenixframework/websock\"
      rel=\"nofollow\">https://github.com/phoenixframework/websock</a><br>\nMorph
      Dom <a href=\"https://github.com/patrick-steele-idem/morphdom\" rel=\"nofollow\">https://github.com/patrick-steele-idem/morphdom</a>
      <br>\nTurbolinks <a href=\"https://github.com/turbolinks\" rel=\"nofollow\">https://github.com/turbolinks</a><br>\nEcto
      <a href=\"https://github.com/elixir-ecto\" rel=\"nofollow\">https://github.com/elixir-ecto</a><br>\nCapybara
      Testing Framework <a href=\"https://teamcapybara.github.io/capybara/\" rel=\"nofollow\">https://teamcapybara.github.io/capybara/</a><br>\nWallaby
      Testing Framework <a href=\"https://wallabyjs.com/\" rel=\"nofollow\">https://wallabyjs.com/</a><br>\nCucumber
      Testing Framework <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nRSpec
      <a href=\"https://rspec.info/\" rel=\"nofollow\">https://rspec.info/</a></p>\n
      \     "
  contentEncoded: "\n        <p>On today’s episode, Elixir Wizards Owen Bickford and
    Dan Ivovich compare notes on building web applications with Elixir and the Phoenix
    Framework versus Ruby on Rails. They discuss the history of both frameworks, key
    differences in architecture and approach, and deciding which programming language
    to use when starting a project.</p>\n\n<p>Both Phoenix and Rails are robust frameworks
    that enable developers to build high-quality web apps—Phoenix leverages functional
    programming in Elixir and Erlang’s networking for real-time communication. Rails
    follows object-oriented principles and has a vast ecosystem of plug-ins. For data-heavy
    CRUD apps, Phoenix&#39;s immutable data pipelines provide some advantages. </p>\n\n<p>Developers
    can build great web apps with either Phoenix or Rails. Phoenix may have a slight
    edge for new projects based on its functional approach, built-in real-time features
    like LiveView, and ability to scale efficiently. But, choosing the right tech
    stack depends heavily on the app&#39;s specific requirements and the team&#39;s
    existing skills.</p>\n\n<h3>Topics discussed in this episode:</h3>\n\n<ul>\n<li>History
    and evolution of Phoenix Framework and Ruby on Rails</li>\n<li>Default project
    structure and code organization preferences in each framework</li>\n<li>Comparing
    object-oriented vs functional programming paradigms</li>\n<li>CRUD app development
    and interaction with databases</li>\n<li>Live reloading capabilities in Phoenix
    LiveView vs Rails Turbolinks</li>\n<li>Leveraging WebSockets for real-time UI
    updates</li>\n<li>Testing frameworks like RSpec, Cucumber, Wallaby, and Capybara
    </li>\n<li>Dependency management and size of standard libraries</li>\n<li>Scalability
    and distribution across nodes</li>\n<li>Readability and approachability of object-oriented
    code</li>\n<li>Immutability and data pipelines in functional programming</li>\n<li>Types,
    specs, and static analysis with Dialyzer</li>\n<li>Monkey patching in Ruby vs
    extensible core language in Elixir</li>\n<li>Factors to consider when choosing
    between frameworks</li>\n<li>Experience training new developers on Phoenix and
    Rails</li>\n<li>Community influences on coding styles</li>\n<li>Real-world project
    examples and refactoring approaches</li>\n<li>Deployment and dev ops differences</li>\n<li>Popularity
    and adoption curves of both frameworks</li>\n<li>Ongoing research into improving
    Phoenix and Rails</li>\n</ul>\n\n<h3>Links Mentioned in this Episode:</h3>\n\n<p><a
    href=\"https://smartlogic.io/\" rel=\"nofollow\">SmartLogic.io</a><br>\n<a href=\"https://www.linkedin.com/in/divovich/\"
    rel=\"nofollow\">Dan’s LinkedIn</a><br>\n<a href=\"https://www.linkedin.com/in/owen-bickford-8b6b1523a/\"
    rel=\"nofollow\">Owen’s LinkedIn</a><br>\nRuby <a href=\"https://www.ruby-lang.org/en/\"
    rel=\"nofollow\">https://www.ruby-lang.org/en/</a> <br>\nRails <a href=\"https://rubyonrails.org/\"
    rel=\"nofollow\">https://rubyonrails.org/</a><br>\n<a href=\"https://www.overdrive.com/media/56304/sams-teach-yourself-ruby-in-21-days\"
    rel=\"nofollow\">Sams Teach Yourself Ruby in 21 Days </a><br>\n<a href=\"https://www.thriftbooks.com/w/learn-ruby-in-7-days---color-print---ruby-tutorial-for-guaranteed-quick-learning-ruby-guide-with-many-practical-examples-this-ruby-programming-book--to-build-real-life-software-projects/18539364/#edition=19727339&idiq=25678249\"
    rel=\"nofollow\">Learn Ruby in 7 Days</a><br>\n<a href=\"https://www.thriftbooks.com/w/build-your-own-ruby-on-rails-web-applications_patrick-lenz/725256/item/2315989/?utm_source=google&utm_medium=cpc&utm_campaign=low_vol_backlist_standard_shopping_customer_acquisition&utm_adgroup=&utm_term=&utm_content=593118743925&gad_source=1&gclid=CjwKCAiA1MCrBhAoEiwAC2d64aQyFawuU3znN0VFgGyjR0I-0vrXlseIvht0QPOqx4DjKjdpgjCMZhoC6PcQAvD_BwE#idiq=2315989&edition=3380836\"
    rel=\"nofollow\">Build Your Own Ruby on Rails Web Applications</a><br>\nDjango
    <a href=\"https://github.com/django\" rel=\"nofollow\">https://github.com/django</a>
    <br>\nSidekiq <a href=\"https://github.com/sidekiq\" rel=\"nofollow\">https://github.com/sidekiq</a>
    <br>\nKafka <a href=\"https://kafka.apache.org/\" rel=\"nofollow\">https://kafka.apache.org/</a><br>\nPhoenix
    Framework <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nPhoenix
    LiveView <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#content\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#content</a>
    <br>\nFlask <a href=\"https://flask.palletsprojects.com/en/3.0.x/\" rel=\"nofollow\">https://flask.palletsprojects.com/en/3.0.x/</a>
    <br>\nWebSockets API <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\"
    rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API</a>
    <br>\nWebSocket connection for Phoenix <a href=\"https://github.com/phoenixframework/websock\"
    rel=\"nofollow\">https://github.com/phoenixframework/websock</a><br>\nMorph Dom
    <a href=\"https://github.com/patrick-steele-idem/morphdom\" rel=\"nofollow\">https://github.com/patrick-steele-idem/morphdom</a>
    <br>\nTurbolinks <a href=\"https://github.com/turbolinks\" rel=\"nofollow\">https://github.com/turbolinks</a><br>\nEcto
    <a href=\"https://github.com/elixir-ecto\" rel=\"nofollow\">https://github.com/elixir-ecto</a><br>\nCapybara
    Testing Framework <a href=\"https://teamcapybara.github.io/capybara/\" rel=\"nofollow\">https://teamcapybara.github.io/capybara/</a><br>\nWallaby
    Testing Framework <a href=\"https://wallabyjs.com/\" rel=\"nofollow\">https://wallabyjs.com/</a><br>\nCucumber
    Testing Framework <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nRSpec
    <a href=\"https://rspec.info/\" rel=\"nofollow\">https://rspec.info/</a></p>\n
    \     "
- title: Garbage Collection in Erlang vs JVM/Akka with Manuel Rubio & Dan Plyukhin
  slug: s11-e07-gc-erlang-akka-scala-java
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e07-gc-erlang-akka-scala-java
  guid: 6b4f5ae2-100c-4660-a780-5c2b1fb1cd32
  pubDate: Thu, 30 Nov 2023 07:00:00 -0500
  pubDateFriendly: November 30, 2023
  description: "Today on Elixir Wizards, Manuel Rubio, author of Erlang/OTP: A Concurrent
    World and Dan Plyukhin, creator of the UIGC Actor Garbage Collector for Akka,
    join host Dan Ivovich to compare notes on garbage collection in actor models.
    \nThe discussion digs into the similarities and differences of actor-based garbage
    collection in Erlang and Akka and introduces Dan's research on how to perform
    garbage collection in a distributed actor system.\nTopics discussed:\nAkka is
    akin to Erlang actors for the JVM using Scala, with similar principles like supervision
    trees, messages, and clustering\nErlang uses generational garbage collection and
    periodically copies live data to the old heap for long-lived elements\nActor GC
    aims to determine when an actor's memory can be reclaimed automatically rather
    than manually killing actors\nDistributed actor GC is more challenging than object
    GC due to the distributed nature and relationships between actors across nodes\nChallenges
    include reasoning about failures like dropped messages and crashed nodes\nGC balance
    requires optimization of resource release and CPU load management\nImmutability
    helps Erlang GC, but copying data for messages impacts performance\nResearch into
    distributed actor GC is still ongoing, with opportunities for improvement\nFault
    tolerance in Erlang relies on user implementation rather than low-level guarantees\nAsynchronous
    messages in Erlang/Elixir mean references may become invalid which is similar
    to the distributed GC approaches in Dan's research\nIdempotent messaging is recommended
    to handle possible duplicates from failures\nHelp your local researcher! Researchers
    encourage communication from practitioners on challenges and use cases\nLinks
    mentioned:\nErlang/OTP Volume 1: A Concurrent World by Manuel Rubio https://altenwald.com/en/book/en-erlang-i \nScala
    https://www.scala-lang.org/ \nAkka Framework https://github.com/akka \nJVM (Java
    Virtual Machine) https://www.java.com/en/download/ \nThe BEAM VM https://www.erlang.org/blog/a-brief-beam-primer/\nHadoop
    Framework https://hadoop.apache.org/  \nPony Programming Language https://www.ponylang.io/ \nSLSA
    Programming Language https://wcl.cs.rpi.edu/salsa/#:~:text=SALSA%20\nPaxos Algorithm
    https://en.wikipedia.org/wiki/Paxos(computerscience) \nRaft library for maintaining
    a replicated state machine https://github.com/etcd-io/raft \nDan's Website https://dplyukhin.github.io/ \nDan
    Plyukhin on Twitter: https://twitter.com/dplyukhin \nDan Plyukhin’s YouTube channel:
    https://m.youtube.com/@dplyukhin\nUIGC on GitHub https://github.com/dplyukhin/UIGC \nManuel's
    Website https://altenwald.com/ \nManuel Rubio on Twitter: https://twitter.com/MRonErlang
    Special Guests: Dan Plyukhin and Manuel Rubio.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+OTXkceuV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6b4f5ae2-100c-4660-a780-5c2b1fb1cd32.mp3
    length: '85767343'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: 'Today on Elixir Wizards, Manuel Rubio, author of Erlang/OTP: A Concurrent
      World and Dan Plyukhin, creator of the UIGC Actor Garbage Collector for Akka,
      join host Dan Ivovich to compare notes on garbage collection in actor models. '
    duration: '44:08'
    explicit: 'no'
    keywords: Elixir programming language, Java, Scala programming language, actor
      models, tech innovation, tech research, Erlang/OTP, Akka framework, garbage
      collection, JVM, distributed systems, software engineering, programming podcasts,
      tech podcasts, Manuel Rubio, Dan Plyukhin, Dan Ivovich, Elixir Wizards, concurrent
      programming, system design, software architecture, fault tolerance, generational
      garbage collection, actor garbage collector, UIGC, Erlang actors, JVM performance,
      CPU load management, resource optimization, Erlang GC, Akka GC, distributed
      actor systems, tech discussions, programming languages, software development,
      coding, computer science, technology trends, tech education, developer resources,
      tech community, programming best practices, software optimization, high-performance
      computing, scalability, system reliability, message-passing concurrency, supervision
      trees, Erlang clustering, Akka clustering, tech interviews, tech insights, programming
      experts, tech thought leaders, software lifecycle, coding challenges, tech solutions,
      programming techniques, tech analysis, software industry, tech enthusiasts,
      developer podcasts, tech knowledge, programming concepts, tech exploration,
      software trends, coding tips, tech debates, programming strategies, tech breakthroughs,
      software methodologies, coding innovations, tech advancements, programming frameworks,
      tech discussions, developer insights, tech learning, programming tutorials,
      software solutions, tech expertise, coding discussions, programming challenges,
      tech discoveries, software updates, coding breakthroughs, tech evolution, programming
      advancements, software engineering podcasts, tech gurus, developer trends, programming
      news, tech updates, coding experts, software best practices, tech strategies,
      programming innovations, tech research topics, software development trends,
      coding strategies, tech industry insights, programming developments, tech pioneers,
      software engineering trends, coding research, tech methodologies, programming
      breakthroughs, tech industry trends
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6b4f5ae2-100c-4660-a780-5c2b1fb1cd32/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Manuel Rubio, author of Erlang/OTP:
      A Concurrent World and Dan Plyukhin, creator of the UIGC Actor Garbage Collector
      for Akka, join host Dan Ivovich to compare notes on garbage collection in actor
      models. </p>\n\n<p>The discussion digs into the similarities and differences
      of actor-based garbage collection in Erlang and Akka and introduces Dan&#39;s
      research on how to perform garbage collection in a distributed actor system.</p>\n\n<h3>Topics
      discussed:</h3>\n\n<ul>\n<li>Akka is akin to Erlang actors for the JVM using
      Scala, with similar principles like supervision trees, messages, and clustering</li>\n<li>Erlang
      uses generational garbage collection and periodically copies live data to the
      old heap for long-lived elements</li>\n<li>Actor GC aims to determine when an
      actor&#39;s memory can be reclaimed automatically rather than manually killing
      actors</li>\n<li>Distributed actor GC is more challenging than object GC due
      to the distributed nature and relationships between actors across nodes</li>\n<li>Challenges
      include reasoning about failures like dropped messages and crashed nodes</li>\n<li>GC
      balance requires optimization of resource release and CPU load management</li>\n<li>Immutability
      helps Erlang GC, but copying data for messages impacts performance</li>\n<li>Research
      into distributed actor GC is still ongoing, with opportunities for improvement</li>\n<li>Fault
      tolerance in Erlang relies on user implementation rather than low-level guarantees</li>\n<li>Asynchronous
      messages in Erlang/Elixir mean references may become invalid which is similar
      to the distributed GC approaches in Dan&#39;s research</li>\n<li>Idempotent
      messaging is recommended to handle possible duplicates from failures</li>\n<li>Help
      your local researcher! Researchers encourage communication from practitioners
      on challenges and use cases</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Erlang/OTP
      Volume 1: A Concurrent World by Manuel Rubio <a href=\"https://altenwald.com/en/book/en-erlang-i%C2%A0\"
      rel=\"nofollow\">https://altenwald.com/en/book/en-erlang-i </a><br>\nScala <a
      href=\"https://www.scala-lang.org/%C2%A0\" rel=\"nofollow\">https://www.scala-lang.org/ </a><br>\nAkka
      Framework <a href=\"https://github.com/akka%C2%A0\" rel=\"nofollow\">https://github.com/akka </a><br>\nJVM
      (Java Virtual Machine) <a href=\"https://www.java.com/en/download/%C2%A0\" rel=\"nofollow\">https://www.java.com/en/download/ </a><br>\nThe
      BEAM VM <a href=\"https://www.erlang.org/blog/a-brief-beam-primer/\" rel=\"nofollow\">https://www.erlang.org/blog/a-brief-beam-primer/</a><br>\nHadoop
      Framework <a href=\"https://hadoop.apache.org/%C2%A0%C2%A0\" rel=\"nofollow\">https://hadoop.apache.org/  </a><br>\nPony
      Programming Language <a href=\"https://www.ponylang.io/%C2%A0\" rel=\"nofollow\">https://www.ponylang.io/ </a><br>\nSLSA
      Programming Language <a href=\"https://wcl.cs.rpi.edu/salsa/#:%7E:text=SALSA%20\"
      rel=\"nofollow\">https://wcl.cs.rpi.edu/salsa/#:~:text=SALSA%20</a><br>\nPaxos
      Algorithm <a href=\"https://en.wikipedia.org/wiki/Paxos_(computer_science)%C2%A0\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Paxos_(computer_science) </a><br>\nRaft
      library for maintaining a replicated state machine <a href=\"https://github.com/etcd-io/raft%C2%A0\"
      rel=\"nofollow\">https://github.com/etcd-io/raft </a><br>\nDan&#39;s Website
      <a href=\"https://dplyukhin.github.io/%C2%A0\" rel=\"nofollow\">https://dplyukhin.github.io/ </a><br>\nDan
      Plyukhin on Twitter: <a href=\"https://twitter.com/dplyukhin%C2%A0\" rel=\"nofollow\">https://twitter.com/dplyukhin </a><br>\nDan
      Plyukhin’s YouTube channel: <a href=\"https://m.youtube.com/@dplyukhin\" rel=\"nofollow\">https://m.youtube.com/@dplyukhin</a><br>\nUIGC
      on GitHub <a href=\"https://github.com/dplyukhin/UIGC%C2%A0\" rel=\"nofollow\">https://github.com/dplyukhin/UIGC </a><br>\nManuel&#39;s
      Website <a href=\"https://altenwald.com/%C2%A0\" rel=\"nofollow\">https://altenwald.com/ </a><br>\nManuel
      Rubio on Twitter: <a href=\"https://twitter.com/MRonErlang\" rel=\"nofollow\">https://twitter.com/MRonErlang</a></p><p>Special
      Guests: Dan Plyukhin and Manuel Rubio.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Manuel Rubio, author of Erlang/OTP:
    A Concurrent World and Dan Plyukhin, creator of the UIGC Actor Garbage Collector
    for Akka, join host Dan Ivovich to compare notes on garbage collection in actor
    models. </p>\n\n<p>The discussion digs into the similarities and differences of
    actor-based garbage collection in Erlang and Akka and introduces Dan&#39;s research
    on how to perform garbage collection in a distributed actor system.</p>\n\n<h3>Topics
    discussed:</h3>\n\n<ul>\n<li>Akka is akin to Erlang actors for the JVM using Scala,
    with similar principles like supervision trees, messages, and clustering</li>\n<li>Erlang
    uses generational garbage collection and periodically copies live data to the
    old heap for long-lived elements</li>\n<li>Actor GC aims to determine when an
    actor&#39;s memory can be reclaimed automatically rather than manually killing
    actors</li>\n<li>Distributed actor GC is more challenging than object GC due to
    the distributed nature and relationships between actors across nodes</li>\n<li>Challenges
    include reasoning about failures like dropped messages and crashed nodes</li>\n<li>GC
    balance requires optimization of resource release and CPU load management</li>\n<li>Immutability
    helps Erlang GC, but copying data for messages impacts performance</li>\n<li>Research
    into distributed actor GC is still ongoing, with opportunities for improvement</li>\n<li>Fault
    tolerance in Erlang relies on user implementation rather than low-level guarantees</li>\n<li>Asynchronous
    messages in Erlang/Elixir mean references may become invalid which is similar
    to the distributed GC approaches in Dan&#39;s research</li>\n<li>Idempotent messaging
    is recommended to handle possible duplicates from failures</li>\n<li>Help your
    local researcher! Researchers encourage communication from practitioners on challenges
    and use cases</li>\n</ul>\n\n<h3>Links mentioned:</h3>\n\n<p>Erlang/OTP Volume
    1: A Concurrent World by Manuel Rubio <a href=\"https://altenwald.com/en/book/en-erlang-i%C2%A0\"
    rel=\"nofollow\">https://altenwald.com/en/book/en-erlang-i </a><br>\nScala <a
    href=\"https://www.scala-lang.org/%C2%A0\" rel=\"nofollow\">https://www.scala-lang.org/ </a><br>\nAkka
    Framework <a href=\"https://github.com/akka%C2%A0\" rel=\"nofollow\">https://github.com/akka </a><br>\nJVM
    (Java Virtual Machine) <a href=\"https://www.java.com/en/download/%C2%A0\" rel=\"nofollow\">https://www.java.com/en/download/ </a><br>\nThe
    BEAM VM <a href=\"https://www.erlang.org/blog/a-brief-beam-primer/\" rel=\"nofollow\">https://www.erlang.org/blog/a-brief-beam-primer/</a><br>\nHadoop
    Framework <a href=\"https://hadoop.apache.org/%C2%A0%C2%A0\" rel=\"nofollow\">https://hadoop.apache.org/  </a><br>\nPony
    Programming Language <a href=\"https://www.ponylang.io/%C2%A0\" rel=\"nofollow\">https://www.ponylang.io/ </a><br>\nSLSA
    Programming Language <a href=\"https://wcl.cs.rpi.edu/salsa/#:%7E:text=SALSA%20\"
    rel=\"nofollow\">https://wcl.cs.rpi.edu/salsa/#:~:text=SALSA%20</a><br>\nPaxos
    Algorithm <a href=\"https://en.wikipedia.org/wiki/Paxos_(computer_science)%C2%A0\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Paxos_(computer_science) </a><br>\nRaft
    library for maintaining a replicated state machine <a href=\"https://github.com/etcd-io/raft%C2%A0\"
    rel=\"nofollow\">https://github.com/etcd-io/raft </a><br>\nDan&#39;s Website <a
    href=\"https://dplyukhin.github.io/%C2%A0\" rel=\"nofollow\">https://dplyukhin.github.io/ </a><br>\nDan
    Plyukhin on Twitter: <a href=\"https://twitter.com/dplyukhin%C2%A0\" rel=\"nofollow\">https://twitter.com/dplyukhin </a><br>\nDan
    Plyukhin’s YouTube channel: <a href=\"https://m.youtube.com/@dplyukhin\" rel=\"nofollow\">https://m.youtube.com/@dplyukhin</a><br>\nUIGC
    on GitHub <a href=\"https://github.com/dplyukhin/UIGC%C2%A0\" rel=\"nofollow\">https://github.com/dplyukhin/UIGC </a><br>\nManuel&#39;s
    Website <a href=\"https://altenwald.com/%C2%A0\" rel=\"nofollow\">https://altenwald.com/ </a><br>\nManuel
    Rubio on Twitter: <a href=\"https://twitter.com/MRonErlang\" rel=\"nofollow\">https://twitter.com/MRonErlang</a></p><p>Special
    Guests: Dan Plyukhin and Manuel Rubio.</p>\n      "
- title: Machine Learning in Elixir vs. Python, SQL, and Matlab with Katelynn Burns
    & Alexis Carpenter
  slug: s11-e06-machine-learning-elixir-python-sql-matlab
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e06-machine-learning-elixir-python-sql-matlab
  guid: 31baa548-33e5-414d-9cdf-3290b74cc440
  pubDate: Thu, 23 Nov 2023 07:00:00 -0500
  pubDateFriendly: November 23, 2023
  description: |
    In this episode of Elixir Wizards, Katelynn Burns, software engineer at LaunchScout, and Alexis Carpenter, senior data scientist at cars.com, join Host Dan Ivovich to discuss machine learning with Elixir, Python, SQL, and MATLAB. They compare notes on available tools, preprocessing, working with pre-trained models, and training models for specific jobs.
    The discussion inspires collaboration and learning across communities while revealing the foundational aspects of ML, such as understanding data and asking the right questions to solve problems effectively.
    Topics discussed:
    Using pre-trained models in Bumblebee for Elixir projects
    Training models using Python and SQL
    The importance of data preprocessing before building models
    Popular tools used for machine learning in different languages
    Getting started with ML by picking a personal project topic of interest
    Resources for ML aspirants, such as online courses, tutorials, and books
    The potential for Elixir to train more customized models in the future
    Similarities between ML approaches in different languages
    Collaboration opportunities across programming communities
    Choosing the right ML approach for the problem you're trying to solve
    Productionalizing models like fine-tuned LLM's
    The need for hands-on practice for learning ML skills
    Continued maturation of tools like Bumblebee in Elixir
    Katelynn's upcoming CodeBeam talk on advanced motion tracking
    Links mentioned in this episode
    https://launchscout.com/
    https://www.cars.com/
    Genetic Algorithms in Elixir (https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/) by Sean Moriarity
    Machine Learning in Elixir (https://pragprog.com/titles/smelixir/machine-learning-in-elixir/) by Sean Moriarity
    https://github.com/elixir-nx/bumblebee
    https://github.com/huggingface
    https://www.docker.com/products/docker-hub/
    Programming with MATLAB (https://www.mathworks.com/products/matlab/programming-with-matlab.html)
    https://elixirforum.com/
    https://pypi.org/project/pyspark/ 
    Machine Learning Course (https://online.stanford.edu/courses/cs229-machine-learning) from Stanford School of Engineering
    Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow (https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/) by Aurélien Géron
    Data Science for Business (https://data-science-for-biz.com/) by Foster Provost & Tom Fawcett
    https://medium.com/@carscomtech 
    https://github.com/k-burns 
    Code Beam America (https://codebeamamerica.com/) March, 2024
     Special Guests: Alexis Carpenter and Katelynn Burns.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+WreuOH5n
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/31baa548-33e5-414d-9cdf-3290b74cc440.mp3
    length: '60783982'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: In this episode of Elixir Wizards, Katelynn Burns, software engineer
      at LaunchScout, and Alexis Carpenter, senior data scientist at cars.com, join
      Host Dan Ivovich to discuss machine learning with Elixir, Python, SQL, and MATLAB.
    duration: '31:19'
    explicit: 'no'
    keywords: machine learning, ML, elixir, python, sql, matlab, pre-trained models,
      hugging face, bumblebee, nlp, computer vision, data science, analytics, predictive
      modeling, recommendation systems, search, natural language processing, software
      engineering, motion tracking, programming languages, AI, artificial intelligence,
      large language model, LLM, ChatGPT, OpenAI, tech trends, technology, neural
      networks, neural data, behavioral data, chatbots, model deployment, data processing,
      open source, scikit-learn, real-time modeling, batch modeling, data science,
      GPT, natural language processing, reinforcement learning, natural language generation,
      NLG, data mining, algorithms, predictive analytics, future trends, AI PoC, proof
      of concept, automation, recommendation systems, generative AI
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/31baa548-33e5-414d-9cdf-3290b74cc440/cover.jpg?v=1
    summary: "\n        <p>In this episode of Elixir Wizards, Katelynn Burns, software
      engineer at LaunchScout, and Alexis Carpenter, senior data scientist at cars.com,
      join Host Dan Ivovich to discuss machine learning with Elixir, Python, SQL,
      and MATLAB. They compare notes on available tools, preprocessing, working with
      pre-trained models, and training models for specific jobs.</p>\n\n<p>The discussion
      inspires collaboration and learning across communities while revealing the foundational
      aspects of ML, such as understanding data and asking the right questions to
      solve problems effectively.</p>\n\n<h3>Topics discussed:</h3>\n\n<ul>\n<li>Using
      pre-trained models in Bumblebee for Elixir projects</li>\n<li>Training models
      using Python and SQL</li>\n<li>The importance of data preprocessing before building
      models</li>\n<li>Popular tools used for machine learning in different languages</li>\n<li>Getting
      started with ML by picking a personal project topic of interest</li>\n<li>Resources
      for ML aspirants, such as online courses, tutorials, and books</li>\n<li>The
      potential for Elixir to train more customized models in the future</li>\n<li>Similarities
      between ML approaches in different languages</li>\n<li>Collaboration opportunities
      across programming communities</li>\n<li>Choosing the right ML approach for
      the problem you&#39;re trying to solve</li>\n<li>Productionalizing models like
      fine-tuned LLM&#39;s</li>\n<li>The need for hands-on practice for learning ML
      skills</li>\n<li>Continued maturation of tools like Bumblebee in Elixir</li>\n<li>Katelynn&#39;s
      upcoming CodeBeam talk on advanced motion tracking</li>\n</ul>\n\n<h3>Links
      mentioned in this episode</h3>\n\n<p><a href=\"https://launchscout.com/\" rel=\"nofollow\">https://launchscout.com/</a><br>\n<a
      href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\n<a
      href=\"https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/\"
      rel=\"nofollow\">Genetic Algorithms in Elixir</a> by Sean Moriarity<br>\n<a
      href=\"https://pragprog.com/titles/smelixir/machine-learning-in-elixir/\" rel=\"nofollow\">Machine
      Learning in Elixir</a> by Sean Moriarity<br>\n<a href=\"https://github.com/elixir-nx/bumblebee\"
      rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\n<a href=\"https://github.com/huggingface\"
      rel=\"nofollow\">https://github.com/huggingface</a><br>\n<a href=\"https://www.docker.com/products/docker-hub/\"
      rel=\"nofollow\">https://www.docker.com/products/docker-hub/</a><br>\n<a href=\"https://www.mathworks.com/products/matlab/programming-with-matlab.html\"
      rel=\"nofollow\">Programming with MATLAB</a><br>\n<a href=\"https://elixirforum.com/\"
      rel=\"nofollow\">https://elixirforum.com/</a><br>\n<a href=\"https://pypi.org/project/pyspark/%C2%A0\"
      rel=\"nofollow\">https://pypi.org/project/pyspark/ </a><br>\n<a href=\"https://online.stanford.edu/courses/cs229-machine-learning\"
      rel=\"nofollow\">Machine Learning Course</a> from Stanford School of Engineering<br>\n<a
      href=\"https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/\"
      rel=\"nofollow\">Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow</a>
      by Aurélien Géron<br>\n<a href=\"https://data-science-for-biz.com/\" rel=\"nofollow\">Data
      Science for Business</a> by Foster Provost &amp; Tom Fawcett<br>\n<a href=\"https://medium.com/@carscomtech%C2%A0\"
      rel=\"nofollow\">https://medium.com/@carscomtech </a><br>\n<a href=\"https://github.com/k-burns%C2%A0\"
      rel=\"nofollow\">https://github.com/k-burns </a><br>\n<a href=\"https://codebeamamerica.com/\"
      rel=\"nofollow\">Code Beam America</a> March, 2024</p><p>Special Guests: Alexis
      Carpenter and Katelynn Burns.</p>\n      "
  contentEncoded: "\n        <p>In this episode of Elixir Wizards, Katelynn Burns,
    software engineer at LaunchScout, and Alexis Carpenter, senior data scientist
    at cars.com, join Host Dan Ivovich to discuss machine learning with Elixir, Python,
    SQL, and MATLAB. They compare notes on available tools, preprocessing, working
    with pre-trained models, and training models for specific jobs.</p>\n\n<p>The
    discussion inspires collaboration and learning across communities while revealing
    the foundational aspects of ML, such as understanding data and asking the right
    questions to solve problems effectively.</p>\n\n<h3>Topics discussed:</h3>\n\n<ul>\n<li>Using
    pre-trained models in Bumblebee for Elixir projects</li>\n<li>Training models
    using Python and SQL</li>\n<li>The importance of data preprocessing before building
    models</li>\n<li>Popular tools used for machine learning in different languages</li>\n<li>Getting
    started with ML by picking a personal project topic of interest</li>\n<li>Resources
    for ML aspirants, such as online courses, tutorials, and books</li>\n<li>The potential
    for Elixir to train more customized models in the future</li>\n<li>Similarities
    between ML approaches in different languages</li>\n<li>Collaboration opportunities
    across programming communities</li>\n<li>Choosing the right ML approach for the
    problem you&#39;re trying to solve</li>\n<li>Productionalizing models like fine-tuned
    LLM&#39;s</li>\n<li>The need for hands-on practice for learning ML skills</li>\n<li>Continued
    maturation of tools like Bumblebee in Elixir</li>\n<li>Katelynn&#39;s upcoming
    CodeBeam talk on advanced motion tracking</li>\n</ul>\n\n<h3>Links mentioned in
    this episode</h3>\n\n<p><a href=\"https://launchscout.com/\" rel=\"nofollow\">https://launchscout.com/</a><br>\n<a
    href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\n<a
    href=\"https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/\"
    rel=\"nofollow\">Genetic Algorithms in Elixir</a> by Sean Moriarity<br>\n<a href=\"https://pragprog.com/titles/smelixir/machine-learning-in-elixir/\"
    rel=\"nofollow\">Machine Learning in Elixir</a> by Sean Moriarity<br>\n<a href=\"https://github.com/elixir-nx/bumblebee\"
    rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\n<a href=\"https://github.com/huggingface\"
    rel=\"nofollow\">https://github.com/huggingface</a><br>\n<a href=\"https://www.docker.com/products/docker-hub/\"
    rel=\"nofollow\">https://www.docker.com/products/docker-hub/</a><br>\n<a href=\"https://www.mathworks.com/products/matlab/programming-with-matlab.html\"
    rel=\"nofollow\">Programming with MATLAB</a><br>\n<a href=\"https://elixirforum.com/\"
    rel=\"nofollow\">https://elixirforum.com/</a><br>\n<a href=\"https://pypi.org/project/pyspark/%C2%A0\"
    rel=\"nofollow\">https://pypi.org/project/pyspark/ </a><br>\n<a href=\"https://online.stanford.edu/courses/cs229-machine-learning\"
    rel=\"nofollow\">Machine Learning Course</a> from Stanford School of Engineering<br>\n<a
    href=\"https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/\"
    rel=\"nofollow\">Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow</a>
    by Aurélien Géron<br>\n<a href=\"https://data-science-for-biz.com/\" rel=\"nofollow\">Data
    Science for Business</a> by Foster Provost &amp; Tom Fawcett<br>\n<a href=\"https://medium.com/@carscomtech%C2%A0\"
    rel=\"nofollow\">https://medium.com/@carscomtech </a><br>\n<a href=\"https://github.com/k-burns%C2%A0\"
    rel=\"nofollow\">https://github.com/k-burns </a><br>\n<a href=\"https://codebeamamerica.com/\"
    rel=\"nofollow\">Code Beam America</a> March, 2024</p><p>Special Guests: Alexis
    Carpenter and Katelynn Burns.</p>\n      "
- title: Embedded Systems in Elixir vs. C, C++, and Java with Connor Rigby & Taylor
    Barto
  slug: s11-e05-embedded-systems-nerves-elixir-c-java
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e05-embedded-systems-nerves-elixir-c-java
  guid: 0514b4ca-f510-4f2b-8239-d10a45a3c8f4
  pubDate: Thu, 16 Nov 2023 07:00:00 -0500
  pubDateFriendly: November 16, 2023
  description: "This week on Elixir Wizards, Connor Rigby, Software Engineer at SmartRent,
    and Taylor Barto, Lead Embedded Software Engineer at Eaton, join Sundi Myint to
    compare notes on embedded systems development with Elixir, C, C++, and Java. They
    discuss using Elixir and the Nerves framework for firmware projects versus more
    traditional choices like C. The guests ask one another questions and gain valuable
    insights into challenges, tooling, resources, and more across different embedded
    ecosystems.\nIn this episode, the guests expand their perspectives and demystify
    the concept of embedded systems for engineers outside the field. This cross-language
    exchange of ideas and experiences inspires continued learning and collaboration
    between embedded software engineers using different programming languages.\nTopics
    Discussed:\nDefining \"true embedded\": using an operating system vs. bare metal
    programming\nBenefits and drawbacks of Elixir, C, C++, and Java for firmware\nMany
    embedded systems today use Java as the programming language via Java Native Interface
    (JNI) to interface with C/C++ code\nHow Elixir expands the toolbox available for
    firmware projects\nTesting, tooling, workflows, and debugging across languages\nElixir/Nerves
    features like hot code reloading and testing vs. Java alternatives\nLearning curves
    for new languages and frameworks\nIndustry trends around established vs emerging
    tools\nApplying functional programming principles like immutability in new domains\nScaling
    firmware updates across large connected networks\nContinued maturation of Nerves
    may bring Elixir into consideration for roles where Java is commonly used today\nHardening
    systems for reliability in safety-critical uses\nDebugging differences between
    web development and embedded\nHiring considerations for niche languages\nAdditional
    skills needed for embedded engineers, such as technical writing, reading schematics,
    and writing test instructions\nResources and recommendations for getting started
    with embedded systems\nLinks Mentioned:\nNerves: https://github.com/nerves-project/nerves
    \nhttps://nerves-project.org/ \nAtomVM: https://github.com/atomvm/AtomVM \nGRiSP:
    https://github.com/grisp\nRISC-V: https://github.com/ultraembedded/riscv \nhttps://smartrent.com/\nhttps://www.eaton.com/us/en-us.html\nZig
    Programming Language: https://github.com/ziglang\nDocker: https://github.com/docker\nBuild
    a Weather Station with Elixir and Nerves (https://pragprog.com/titles/passweather/build-a-weather-station-with-elixir-and-nerves/)
    by Alexander Koutmos, Bruce A. Tate, Frank Hunleth\nBuild a Binary Clock with
    Elixir and Nerves (https://pragprog.com/titles/thnerves/build-a-binary-clock-with-elixir-and-nerves/)
    by Frank Hunleth and Bruce A. Tate\nhttp://esp32.net/\nhttps://www.nordicsemi.com/
    Special Guests: Connor Rigby and Taylor Barto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qzI9yfiR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0514b4ca-f510-4f2b-8239-d10a45a3c8f4.mp3
    length: '89993267'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: Connor Rigby, Software Engineer at SmartRent, and Taylor Barto, Lead
      Embedded Software Engineer at Eaton, join Sundi to compare notes on embedded
      systems development with Elixir, C, C++, and Java. The guests ask one another
      questions to gain valuable insights into challenges, tooling, resources, and
      more across different embedded ecosystems.
    duration: '46:30'
    explicit: 'no'
    keywords: embedded systems development, Elixir programming, C language, C++ programming,
      Java development, Nerves framework, firmware projects, programming language
      comparison, embedded ecosystems, embedded software engineering, cross-language
      exchange, software engineering, embedded tooling, embedded programming, operating
      systems, bare metal programming, firmware, JNI, Java Native Interface, C++,
      firmware toolbox, Elixir for firmware, testing firmware, software debugging,
      programming workflows, Elixir features, hot code reloading, Java programming,
      programming frameworks, tech trends, emerging tools in software, functional
      programming, technical writing, writing test, software industry, engineering
      careers, technology, technical skills
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0514b4ca-f510-4f2b-8239-d10a45a3c8f4/cover.jpg?v=1
    summary: "\n        <p>This week on Elixir Wizards, Connor Rigby, Software Engineer
      at SmartRent, and Taylor Barto, Lead Embedded Software Engineer at Eaton, join
      Sundi Myint to compare notes on embedded systems development with Elixir, C,
      C++, and Java. They discuss using Elixir and the Nerves framework for firmware
      projects versus more traditional choices like C. The guests ask one another
      questions and gain valuable insights into challenges, tooling, resources, and
      more across different embedded ecosystems.</p>\n\n<p>In this episode, the guests
      expand their perspectives and demystify the concept of embedded systems for
      engineers outside the field. This cross-language exchange of ideas and experiences
      inspires continued learning and collaboration between embedded software engineers
      using different programming languages.</p>\n\n<h3>Topics Discussed:</h3>\n\n<ul>\n<li>Defining
      &quot;true embedded&quot;: using an operating system vs. bare metal programming</li>\n<li>Benefits
      and drawbacks of Elixir, C, C++, and Java for firmware</li>\n<li>Many embedded
      systems today use Java as the programming language via Java Native Interface
      (JNI) to interface with C/C++ code</li>\n<li>How Elixir expands the toolbox
      available for firmware projects</li>\n<li>Testing, tooling, workflows, and debugging
      across languages</li>\n<li>Elixir/Nerves features like hot code reloading and
      testing vs. Java alternatives</li>\n<li>Learning curves for new languages and
      frameworks</li>\n<li>Industry trends around established vs emerging tools</li>\n<li>Applying
      functional programming principles like immutability in new domains</li>\n<li>Scaling
      firmware updates across large connected networks</li>\n<li>Continued maturation
      of Nerves may bring Elixir into consideration for roles where Java is commonly
      used today</li>\n<li>Hardening systems for reliability in safety-critical uses</li>\n<li>Debugging
      differences between web development and embedded</li>\n<li>Hiring considerations
      for niche languages</li>\n<li>Additional skills needed for embedded engineers,
      such as technical writing, reading schematics, and writing test instructions</li>\n<li>Resources
      and recommendations for getting started with embedded systems</li>\n</ul>\n\n<h3>Links
      Mentioned:</h3>\n\n<p>Nerves: <a href=\"https://github.com/nerves-project/nerves\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves</a> <br>\n<a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a> <br>\nAtomVM: <a href=\"https://github.com/atomvm/AtomVM\"
      rel=\"nofollow\">https://github.com/atomvm/AtomVM</a> <br>\nGRiSP: <a href=\"https://github.com/grisp\"
      rel=\"nofollow\">https://github.com/grisp</a><br>\nRISC-V: <a href=\"https://github.com/ultraembedded/riscv\"
      rel=\"nofollow\">https://github.com/ultraembedded/riscv</a> <br>\n<a href=\"https://smartrent.com/\"
      rel=\"nofollow\">https://smartrent.com/</a><br>\n<a href=\"https://www.eaton.com/us/en-us.html\"
      rel=\"nofollow\">https://www.eaton.com/us/en-us.html</a><br>\nZig Programming
      Language: <a href=\"https://github.com/ziglang\" rel=\"nofollow\">https://github.com/ziglang</a><br>\nDocker:
      <a href=\"https://github.com/docker\" rel=\"nofollow\">https://github.com/docker</a><br>\n<a
      href=\"https://pragprog.com/titles/passweather/build-a-weather-station-with-elixir-and-nerves/\"
      rel=\"nofollow\">Build a Weather Station with Elixir and Nerves</a> by Alexander
      Koutmos, Bruce A. Tate, Frank Hunleth<br>\n<a href=\"https://pragprog.com/titles/thnerves/build-a-binary-clock-with-elixir-and-nerves/\"
      rel=\"nofollow\">Build a Binary Clock with Elixir and Nerves</a> by Frank Hunleth
      and Bruce A. Tate<br>\n<a href=\"http://esp32.net/\" rel=\"nofollow\">http://esp32.net/</a><br>\n<a
      href=\"https://www.nordicsemi.com/\" rel=\"nofollow\">https://www.nordicsemi.com/</a></p><p>Special
      Guests: Connor Rigby and Taylor Barto.</p>\n      "
  contentEncoded: "\n        <p>This week on Elixir Wizards, Connor Rigby, Software
    Engineer at SmartRent, and Taylor Barto, Lead Embedded Software Engineer at Eaton,
    join Sundi Myint to compare notes on embedded systems development with Elixir,
    C, C++, and Java. They discuss using Elixir and the Nerves framework for firmware
    projects versus more traditional choices like C. The guests ask one another questions
    and gain valuable insights into challenges, tooling, resources, and more across
    different embedded ecosystems.</p>\n\n<p>In this episode, the guests expand their
    perspectives and demystify the concept of embedded systems for engineers outside
    the field. This cross-language exchange of ideas and experiences inspires continued
    learning and collaboration between embedded software engineers using different
    programming languages.</p>\n\n<h3>Topics Discussed:</h3>\n\n<ul>\n<li>Defining
    &quot;true embedded&quot;: using an operating system vs. bare metal programming</li>\n<li>Benefits
    and drawbacks of Elixir, C, C++, and Java for firmware</li>\n<li>Many embedded
    systems today use Java as the programming language via Java Native Interface (JNI)
    to interface with C/C++ code</li>\n<li>How Elixir expands the toolbox available
    for firmware projects</li>\n<li>Testing, tooling, workflows, and debugging across
    languages</li>\n<li>Elixir/Nerves features like hot code reloading and testing
    vs. Java alternatives</li>\n<li>Learning curves for new languages and frameworks</li>\n<li>Industry
    trends around established vs emerging tools</li>\n<li>Applying functional programming
    principles like immutability in new domains</li>\n<li>Scaling firmware updates
    across large connected networks</li>\n<li>Continued maturation of Nerves may bring
    Elixir into consideration for roles where Java is commonly used today</li>\n<li>Hardening
    systems for reliability in safety-critical uses</li>\n<li>Debugging differences
    between web development and embedded</li>\n<li>Hiring considerations for niche
    languages</li>\n<li>Additional skills needed for embedded engineers, such as technical
    writing, reading schematics, and writing test instructions</li>\n<li>Resources
    and recommendations for getting started with embedded systems</li>\n</ul>\n\n<h3>Links
    Mentioned:</h3>\n\n<p>Nerves: <a href=\"https://github.com/nerves-project/nerves\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves</a> <br>\n<a href=\"https://nerves-project.org/\"
    rel=\"nofollow\">https://nerves-project.org/</a> <br>\nAtomVM: <a href=\"https://github.com/atomvm/AtomVM\"
    rel=\"nofollow\">https://github.com/atomvm/AtomVM</a> <br>\nGRiSP: <a href=\"https://github.com/grisp\"
    rel=\"nofollow\">https://github.com/grisp</a><br>\nRISC-V: <a href=\"https://github.com/ultraembedded/riscv\"
    rel=\"nofollow\">https://github.com/ultraembedded/riscv</a> <br>\n<a href=\"https://smartrent.com/\"
    rel=\"nofollow\">https://smartrent.com/</a><br>\n<a href=\"https://www.eaton.com/us/en-us.html\"
    rel=\"nofollow\">https://www.eaton.com/us/en-us.html</a><br>\nZig Programming
    Language: <a href=\"https://github.com/ziglang\" rel=\"nofollow\">https://github.com/ziglang</a><br>\nDocker:
    <a href=\"https://github.com/docker\" rel=\"nofollow\">https://github.com/docker</a><br>\n<a
    href=\"https://pragprog.com/titles/passweather/build-a-weather-station-with-elixir-and-nerves/\"
    rel=\"nofollow\">Build a Weather Station with Elixir and Nerves</a> by Alexander
    Koutmos, Bruce A. Tate, Frank Hunleth<br>\n<a href=\"https://pragprog.com/titles/thnerves/build-a-binary-clock-with-elixir-and-nerves/\"
    rel=\"nofollow\">Build a Binary Clock with Elixir and Nerves</a> by Frank Hunleth
    and Bruce A. Tate<br>\n<a href=\"http://esp32.net/\" rel=\"nofollow\">http://esp32.net/</a><br>\n<a
    href=\"https://www.nordicsemi.com/\" rel=\"nofollow\">https://www.nordicsemi.com/</a></p><p>Special
    Guests: Connor Rigby and Taylor Barto.</p>\n      "
- title: ECS / Game Development with Elixir vs. Python, JavaScript, React with Dorian
    Iacobescu & Daniel Luu
  slug: s11-e04-ecs-game-dev-elixir-python-react
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e04-ecs-game-dev-elixir-python-react
  guid: e7b0c0a5-8be2-4fee-8001-9f2c26d2340e
  pubDate: Thu, 09 Nov 2023 07:00:00 -0500
  pubDateFriendly: November  9, 2023
  description: "In Episode 4, the Elixir Wizards are joined by Dorian Iacobescu, author
    of the ECSpanse ECS library for Elixir, and Daniel Luu, founder and CEO of the
    game development studio AKREW. The guests compare notes on backend game development
    using ECS, the Entity Component System approach.\nAkrew is currently building
    the multiplayer game Galactic Getaway using the Photon Unity networking framework,
    which employs ECS. They discuss challenges like collections of component types
    and persistence beyond runtime, building games for various platforms like MacOS,
    and handling inventory storage in a backend database.\nGame development is complex
    and has many technical hurdles, but open communication across different programming
    communities and game development approaches can foster collaboration, innovation,
    and continued learning.\nTopics Discussed in this Episode\nDorian explains the
    ECSpanse ECS library and component-based architecture\nDorian took inspiration
    for ECSpanse from the Rust library Bevy ECS and its component-based API\nThe guests
    discuss popular game development platforms and languages, including C#, JavaScript,
    and Godot\nOwen and Daniel translate ECS concepts to familiar database and backend
    terminology for devs without game-specific experience\nECSpanse uses many tools
    from the Elixir Erlang toolbox, including GenServers, ETS tables, tasks, queries,
    and Phoenix LiveView\nECS challenges representing inventory collections that broke
    typical ECS singleton patterns\nAKREW is developing Galactic Getaway using the
    Photon Unity framework\nRelationships between parent and child entities in ECSpanse\nPersistence,
    serialization, and replay features to save game state\nOptimizing assets and code
    for performance on various devices\nLinks Mentioned\nhttps://en.wikipedia.org/wiki/Entitycomponentsystem\nhttps://iacobson.medium.com/elixir-for-fun-ecspanse-2852a7993ecd\nhttps://hexdocs.pm/ecspanse/Ecspanse.html
    \nhttps://bevyengine.org/learn/book/getting-started/ecs/\nhttps://www.photonengine.com/quantum\nAdd
    Galactic Getaway to your Steam Wishlist: https://store.steampowered.com/app/2012390/GalacticGetaway/
    \nhttps://godotengine.org/\nhttps://unity.com/\nhttps://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscriptbasics.html\nhttps://www.tiktok.com/@galacticgetaway\nhttps://docs.rs/bevyecs/latest/bevyecs/
    \ Special Guests: Daniel Luu and Dorian Iacobescu.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ZjqCo3ql
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e7b0c0a5-8be2-4fee-8001-9f2c26d2340e.mp3
    length: '79890541'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: In Episode 4, the Elixir Wizards are joined by Dorian Iacobescu, author
      of the ECSpanse ECS library for Elixir, and Daniel Luu, founder and CEO of the
      game development studio Akrew. The guests compare notes on backend game development
      using ECS, the Entity Component System approach.
    duration: '41:08'
    explicit: 'no'
    keywords: elixir, elixir programming language, phoenix liveview, ECS library open
      source games, component based game development, entity component systems, ECS
      architecture, ECS game development, backend development, multiplayer games,
      game frameworks, Photon Unity game engine, game networking, component architectures,
      code optimization, JavaScript, C#, Rust, Godot, GDScript, MOBA games, real time
      strategy games, game developer, gaming
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e7b0c0a5-8be2-4fee-8001-9f2c26d2340e/cover.jpg?v=2
    summary: "\n        <p>In Episode 4, the Elixir Wizards are joined by Dorian Iacobescu,
      author of the ECSpanse ECS library for Elixir, and Daniel Luu, founder and CEO
      of the game development studio AKREW. The guests compare notes on backend game
      development using ECS, the Entity Component System approach.</p>\n\n<p>Akrew
      is currently building the multiplayer game Galactic Getaway using the Photon
      Unity networking framework, which employs ECS. They discuss challenges like
      collections of component types and persistence beyond runtime, building games
      for various platforms like MacOS, and handling inventory storage in a backend
      database.</p>\n\n<p>Game development is complex and has many technical hurdles,
      but open communication across different programming communities and game development
      approaches can foster collaboration, innovation, and continued learning.</p>\n\n<h3>Topics
      Discussed in this Episode</h3>\n\n<ul>\n<li>Dorian explains the ECSpanse ECS
      library and component-based architecture</li>\n<li>Dorian took inspiration for
      ECSpanse from the Rust library Bevy ECS and its component-based API</li>\n<li>The
      guests discuss popular game development platforms and languages, including C#,
      JavaScript, and Godot</li>\n<li>Owen and Daniel translate ECS concepts to familiar
      database and backend terminology for devs without game-specific experience</li>\n<li>ECSpanse
      uses many tools from the Elixir Erlang toolbox, including GenServers, ETS tables,
      tasks, queries, and Phoenix LiveView</li>\n<li>ECS challenges representing inventory
      collections that broke typical ECS singleton patterns</li>\n<li>AKREW is developing
      Galactic Getaway using the Photon Unity framework</li>\n<li>Relationships between
      parent and child entities in ECSpanse</li>\n<li>Persistence, serialization,
      and replay features to save game state</li>\n<li>Optimizing assets and code
      for performance on various devices</li>\n</ul>\n\n<h3>Links Mentioned</h3>\n\n<p><a
      href=\"https://en.wikipedia.org/wiki/Entity_component_system\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Entity_component_system</a><br>\n<a
      href=\"https://iacobson.medium.com/elixir-for-fun-ecspanse-2852a7993ecd\" rel=\"nofollow\">https://iacobson.medium.com/elixir-for-fun-ecspanse-2852a7993ecd</a><br>\n<a
      href=\"https://hexdocs.pm/ecspanse/Ecspanse.html\" rel=\"nofollow\">https://hexdocs.pm/ecspanse/Ecspanse.html</a>
      <br>\n<a href=\"https://bevyengine.org/learn/book/getting-started/ecs/\" rel=\"nofollow\">https://bevyengine.org/learn/book/getting-started/ecs/</a><br>\n<a
      href=\"https://www.photonengine.com/quantum\" rel=\"nofollow\">https://www.photonengine.com/quantum</a><br>\nAdd
      Galactic Getaway to your Steam Wishlist: <a href=\"https://store.steampowered.com/app/2012390/Galactic_Getaway/\"
      rel=\"nofollow\">https://store.steampowered.com/app/2012390/Galactic_Getaway/</a>
      <br>\n<a href=\"https://godotengine.org/\" rel=\"nofollow\">https://godotengine.org/</a><br>\n<a
      href=\"https://unity.com/\" rel=\"nofollow\">https://unity.com/</a><br>\n<a
      href=\"https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html\"
      rel=\"nofollow\">https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html</a><br>\n<a
      href=\"https://www.tiktok.com/@galacticgetaway\" rel=\"nofollow\">https://www.tiktok.com/@galacticgetaway</a><br>\n<a
      href=\"https://docs.rs/bevy_ecs/latest/bevy_ecs/\" rel=\"nofollow\">https://docs.rs/bevy_ecs/latest/bevy_ecs/</a>
      </p><p>Special Guests: Daniel Luu and Dorian Iacobescu.</p>\n      "
  contentEncoded: "\n        <p>In Episode 4, the Elixir Wizards are joined by Dorian
    Iacobescu, author of the ECSpanse ECS library for Elixir, and Daniel Luu, founder
    and CEO of the game development studio AKREW. The guests compare notes on backend
    game development using ECS, the Entity Component System approach.</p>\n\n<p>Akrew
    is currently building the multiplayer game Galactic Getaway using the Photon Unity
    networking framework, which employs ECS. They discuss challenges like collections
    of component types and persistence beyond runtime, building games for various
    platforms like MacOS, and handling inventory storage in a backend database.</p>\n\n<p>Game
    development is complex and has many technical hurdles, but open communication
    across different programming communities and game development approaches can foster
    collaboration, innovation, and continued learning.</p>\n\n<h3>Topics Discussed
    in this Episode</h3>\n\n<ul>\n<li>Dorian explains the ECSpanse ECS library and
    component-based architecture</li>\n<li>Dorian took inspiration for ECSpanse from
    the Rust library Bevy ECS and its component-based API</li>\n<li>The guests discuss
    popular game development platforms and languages, including C#, JavaScript, and
    Godot</li>\n<li>Owen and Daniel translate ECS concepts to familiar database and
    backend terminology for devs without game-specific experience</li>\n<li>ECSpanse
    uses many tools from the Elixir Erlang toolbox, including GenServers, ETS tables,
    tasks, queries, and Phoenix LiveView</li>\n<li>ECS challenges representing inventory
    collections that broke typical ECS singleton patterns</li>\n<li>AKREW is developing
    Galactic Getaway using the Photon Unity framework</li>\n<li>Relationships between
    parent and child entities in ECSpanse</li>\n<li>Persistence, serialization, and
    replay features to save game state</li>\n<li>Optimizing assets and code for performance
    on various devices</li>\n</ul>\n\n<h3>Links Mentioned</h3>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Entity_component_system\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Entity_component_system</a><br>\n<a
    href=\"https://iacobson.medium.com/elixir-for-fun-ecspanse-2852a7993ecd\" rel=\"nofollow\">https://iacobson.medium.com/elixir-for-fun-ecspanse-2852a7993ecd</a><br>\n<a
    href=\"https://hexdocs.pm/ecspanse/Ecspanse.html\" rel=\"nofollow\">https://hexdocs.pm/ecspanse/Ecspanse.html</a>
    <br>\n<a href=\"https://bevyengine.org/learn/book/getting-started/ecs/\" rel=\"nofollow\">https://bevyengine.org/learn/book/getting-started/ecs/</a><br>\n<a
    href=\"https://www.photonengine.com/quantum\" rel=\"nofollow\">https://www.photonengine.com/quantum</a><br>\nAdd
    Galactic Getaway to your Steam Wishlist: <a href=\"https://store.steampowered.com/app/2012390/Galactic_Getaway/\"
    rel=\"nofollow\">https://store.steampowered.com/app/2012390/Galactic_Getaway/</a>
    <br>\n<a href=\"https://godotengine.org/\" rel=\"nofollow\">https://godotengine.org/</a><br>\n<a
    href=\"https://unity.com/\" rel=\"nofollow\">https://unity.com/</a><br>\n<a href=\"https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html\"
    rel=\"nofollow\">https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html</a><br>\n<a
    href=\"https://www.tiktok.com/@galacticgetaway\" rel=\"nofollow\">https://www.tiktok.com/@galacticgetaway</a><br>\n<a
    href=\"https://docs.rs/bevy_ecs/latest/bevy_ecs/\" rel=\"nofollow\">https://docs.rs/bevy_ecs/latest/bevy_ecs/</a>
    </p><p>Special Guests: Daniel Luu and Dorian Iacobescu.</p>\n      "
- title: 'Learning a Language: Elixir vs. JavaScript with Yohana Tesfazgi & Wes Bos'
  slug: s11-e03-learning-a-language-elixir-javascript
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e03-learning-a-language-elixir-javascript
  guid: fd070ca3-8e25-4103-bb6f-b9d7d33bb58e
  pubDate: Thu, 02 Nov 2023 07:00:00 -0400
  pubDateFriendly: November  2, 2023
  description: "This week, the Elixir Wizards are joined by Yohana Tesfazgi and Wes
    Bos to compare notes on the experience of learning Elixir vs. JavaScript as your
    first programming language. Yohana recently completed an Elixir apprenticeship,
    and Wes Bos is a renowned JavaScript educator with popular courses for beginner
    software developers.\nThey discuss a variety of media and resources and how people
    with different learning styles benefit from video courses, articles, or more hands-on
    projects. They also discuss the current atmosphere for those looking to transition
    into an engineering career and how to stick out among the crowd when new to the
    scene. \nTopics Discussed in this Episode\nPros and cons of learning Elixir as
    your first programming language\nMaterials and resources for beginners to JavaScript
    and Elixir\nProjects and methods for learning Elixir with no prior knowledge\nRecommendations
    for sharpening and showcasing skills\nHow to become a standout candidate for potential
    employers\nSoft skills like communication translate well from other careers to
    programming work\nLearning subsequent languages becomes more intuitive once you
    learn your first\nHow to decide which library to use for a project\nHow to build
    an online presence and why it’s important\nOpen-source contributions are a way
    to learn from the community\nShip early and often, just deploying a default Phoenix
    app teaches deployment skills\nAttend local meetups and conferences for mentoring
    and potential job opportunities\nLinks Mentioned\nhttps://syntax.fm/\nhttps://fly.io/\nhttps://elixirschool.com/en\nSyntax.fm:
    Supper Club × How To Get Your First Dev Job With Stuart Bloxham (https://syntax.fm/show/667/supper-club-how-to-get-your-first-dev-job-with-stuart-bloxham)\nQuinnwilton.com
    (https://quinnwilton.com/)\nhttps://github.com/pallets/flask\nhttps://wesbos.com/courses\nhttps://beginnerjavascript.com/\nFree
    course: https://javascript30.com/\nhttps://pragmaticstudio.com/\nhttps://elixircasts.io/\nhttps://grox.io/\nLiveView
    Mastery YouTube Channel (https://www.youtube.com/channel/UC7T19hPLqQ-Od3Rb3T2OX1g)\nContact
    Yohana: yytesfazgi@gmail.com\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+15r-9lp6
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/fd070ca3-8e25-4103-bb6f-b9d7d33bb58e.mp3
    length: '81866995'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: In this episode, the Elixir Wizards are joined by Yohana Tesfazgi, a
      recent Elixir apprentice, and Wes Bos, a leading JavaScript educator. They discuss
      the experience of learning Elixir vs. JavaScript as a first programming language,
      comparing experiences and insights for new developers.
    duration: '42:14'
    explicit: 'no'
    keywords: Elixir programming language, JavaScript, Learning JavaScript, Learn
      to code, Elixir community, developer, programming, software developers, Nerves
      framework, Phoenix LiveView, dynamic languages, typescript, ruby, rails, coding
      apprenticeships, functional programming, Wes Bos courses, online coding education,
      beginner coders, career transition, programming languages comparison, code bootcamps,
      online presence for developers, web development, full-stack development, frontend
      development, backend development, software engineering, open-source projects,
      coding best practices, code repositories, GitHub, version control, developer
      tools, IDEs, software frameworks, web frameworks, coding tutorials, code documentation,
      programming podcasts, Elixir Wizards, coding challenges, algorithm practices,
      software design patterns, devops, continuous integration, deployment strategies,
      cloud services, API development, database management, coding mentors, software
      architecture, object-oriented programming, functional programming paradigms,
      concurrency models, real-time applications, user interface development, user
      experience design, coding standards, software testing, test-driven development,
      agile methodologies, scrum practices, coding sprints, debugging techniques,
      performance optimization, scalability, software maintenance, developer collaboration,
      code reviews, software licenses, application security, ethical hacking, software
      quality assurance, mobile app development, responsive design, web accessibility,
      serverless architectures, containerization, Docker, Kubernetes, microservices,
      GraphQL, RESTful APIs, JSON, XML, code refactoring, coding languages evolution,
      developer communities, tech conferences, hackathons, coding workshops, developer
      job market, career advancement in software, software consultant, freelance development,
      remote work for developers, tech industry trends, coding certifications, lifelong
      learning in tech, developer portfolios, tech startups, tech entrepreneurship,
      software product management, API integrations, third-party libraries, software
      dependencies, code modularity, software project management, data structures,
      algorithm design, computational thinking, tech leadership, innovation in coding,
      AI in software development, machine learning frameworks, deep learning, neural
      networks, augmented reality development, virtual reality coding, IoT development,
      edge computing, coding ethics, diversity in tech, women in coding, underrepresented
      groups in tech, code inclusivity, open-source contributions, coding for social
      good, tech philanthropy, sustainable coding practices, green tech, digital transformation
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/fd070ca3-8e25-4103-bb6f-b9d7d33bb58e/cover.jpg?v=5
    summary: "\n        <p>This week, the Elixir Wizards are joined by Yohana Tesfazgi
      and Wes Bos to compare notes on the experience of learning Elixir vs. JavaScript
      as your first programming language. Yohana recently completed an Elixir apprenticeship,
      and Wes Bos is a renowned JavaScript educator with popular courses for beginner
      software developers.</p>\n\n<p>They discuss a variety of media and resources
      and how people with different learning styles benefit from video courses, articles,
      or more hands-on projects. They also discuss the current atmosphere for those
      looking to transition into an engineering career and how to stick out among
      the crowd when new to the scene. </p>\n\n<h3>Topics Discussed in this Episode</h3>\n\n<ul>\n<li>Pros
      and cons of learning Elixir as your first programming language</li>\n<li>Materials
      and resources for beginners to JavaScript and Elixir</li>\n<li>Projects and
      methods for learning Elixir with no prior knowledge</li>\n<li>Recommendations
      for sharpening and showcasing skills</li>\n<li>How to become a standout candidate
      for potential employers</li>\n<li>Soft skills like communication translate well
      from other careers to programming work</li>\n<li>Learning subsequent languages
      becomes more intuitive once you learn your first</li>\n<li>How to decide which
      library to use for a project</li>\n<li>How to build an online presence and why
      it’s important</li>\n<li>Open-source contributions are a way to learn from the
      community</li>\n<li>Ship early and often, just deploying a default Phoenix app
      teaches deployment skills</li>\n<li>Attend local meetups and conferences for
      mentoring and potential job opportunities</li>\n</ul>\n\n<h3>Links Mentioned</h3>\n\n<p><a
      href=\"https://syntax.fm/\" rel=\"nofollow\">https://syntax.fm/</a><br>\n<a
      href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://elixirschool.com/en\"
      rel=\"nofollow\">https://elixirschool.com/en</a><br>\n<a href=\"https://syntax.fm/show/667/supper-club-how-to-get-your-first-dev-job-with-stuart-bloxham\"
      rel=\"nofollow\">Syntax.fm: Supper Club × How To Get Your First Dev Job With
      Stuart Bloxham</a><br>\n<a href=\"https://quinnwilton.com/\" rel=\"nofollow\">Quinnwilton.com</a><br>\n<a
      href=\"https://github.com/pallets/flask\" rel=\"nofollow\">https://github.com/pallets/flask</a><br>\n<a
      href=\"https://wesbos.com/courses\" rel=\"nofollow\">https://wesbos.com/courses</a><br>\n<a
      href=\"https://beginnerjavascript.com/\" rel=\"nofollow\">https://beginnerjavascript.com/</a><br>\nFree
      course: <a href=\"https://javascript30.com/\" rel=\"nofollow\">https://javascript30.com/</a><br>\n<a
      href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\n<a
      href=\"https://elixircasts.io/\" rel=\"nofollow\">https://elixircasts.io/</a><br>\n<a
      href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\n<a href=\"https://www.youtube.com/channel/UC7T19hPLqQ-Od3Rb3T2OX1g\"
      rel=\"nofollow\">LiveView Mastery YouTube Channel</a><br>\nContact Yohana: <a
      href=\"mailto:yytesfazgi@gmail.com\" rel=\"nofollow\">yytesfazgi@gmail.com</a></p>\n
      \     "
  contentEncoded: "\n        <p>This week, the Elixir Wizards are joined by Yohana
    Tesfazgi and Wes Bos to compare notes on the experience of learning Elixir vs.
    JavaScript as your first programming language. Yohana recently completed an Elixir
    apprenticeship, and Wes Bos is a renowned JavaScript educator with popular courses
    for beginner software developers.</p>\n\n<p>They discuss a variety of media and
    resources and how people with different learning styles benefit from video courses,
    articles, or more hands-on projects. They also discuss the current atmosphere
    for those looking to transition into an engineering career and how to stick out
    among the crowd when new to the scene. </p>\n\n<h3>Topics Discussed in this Episode</h3>\n\n<ul>\n<li>Pros
    and cons of learning Elixir as your first programming language</li>\n<li>Materials
    and resources for beginners to JavaScript and Elixir</li>\n<li>Projects and methods
    for learning Elixir with no prior knowledge</li>\n<li>Recommendations for sharpening
    and showcasing skills</li>\n<li>How to become a standout candidate for potential
    employers</li>\n<li>Soft skills like communication translate well from other careers
    to programming work</li>\n<li>Learning subsequent languages becomes more intuitive
    once you learn your first</li>\n<li>How to decide which library to use for a project</li>\n<li>How
    to build an online presence and why it’s important</li>\n<li>Open-source contributions
    are a way to learn from the community</li>\n<li>Ship early and often, just deploying
    a default Phoenix app teaches deployment skills</li>\n<li>Attend local meetups
    and conferences for mentoring and potential job opportunities</li>\n</ul>\n\n<h3>Links
    Mentioned</h3>\n\n<p><a href=\"https://syntax.fm/\" rel=\"nofollow\">https://syntax.fm/</a><br>\n<a
    href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a href=\"https://elixirschool.com/en\"
    rel=\"nofollow\">https://elixirschool.com/en</a><br>\n<a href=\"https://syntax.fm/show/667/supper-club-how-to-get-your-first-dev-job-with-stuart-bloxham\"
    rel=\"nofollow\">Syntax.fm: Supper Club × How To Get Your First Dev Job With Stuart
    Bloxham</a><br>\n<a href=\"https://quinnwilton.com/\" rel=\"nofollow\">Quinnwilton.com</a><br>\n<a
    href=\"https://github.com/pallets/flask\" rel=\"nofollow\">https://github.com/pallets/flask</a><br>\n<a
    href=\"https://wesbos.com/courses\" rel=\"nofollow\">https://wesbos.com/courses</a><br>\n<a
    href=\"https://beginnerjavascript.com/\" rel=\"nofollow\">https://beginnerjavascript.com/</a><br>\nFree
    course: <a href=\"https://javascript30.com/\" rel=\"nofollow\">https://javascript30.com/</a><br>\n<a
    href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\n<a
    href=\"https://elixircasts.io/\" rel=\"nofollow\">https://elixircasts.io/</a><br>\n<a
    href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\n<a href=\"https://www.youtube.com/channel/UC7T19hPLqQ-Od3Rb3T2OX1g\"
    rel=\"nofollow\">LiveView Mastery YouTube Channel</a><br>\nContact Yohana: <a
    href=\"mailto:yytesfazgi@gmail.com\" rel=\"nofollow\">yytesfazgi@gmail.com</a></p>\n
    \     "
- title: HTTP Requests in Elixir vs. JavaScript with Yordis Prieto & Stephen Chudleigh
  slug: s11-e02-http-requests-elixir-javascript
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e02-http-requests-elixir-javascript
  guid: 737a8ab1-50ff-4583-a522-5fb800630190
  pubDate: Thu, 26 Oct 2023 07:00:00 -0400
  pubDateFriendly: October 26, 2023
  description: "In today’s episode, Sundi and Owen are joined by Yordis Prieto and
    Stephen Chudleigh to compare notes on HTTP requests in Elixir vs. Ruby, JavaScript,
    Go, and Rust. They cover common pain points when working with APIs, best practices,
    and lessons that can be learned from other programming languages.\nYordis maintains
    Elixir's popular Tesla HTTP client library and shares insights from building APIs
    and maintaining open-source projects. Stephen has experience with Rails and JavaScript,
    and now works primarily in Elixir. They offer perspectives on testing HTTP requests
    and working with different libraries.\nWhile Elixir has matured, there is room
    for improvement - especially around richer struct parsing from HTTP responses.
    The discussion highlights ongoing efforts to improve the developer experience
    for HTTP clients in Elixir and other ecosystems. \nTopics Discussed in this Episode\nHTTP
    is a protocol - but each language has different implementation methods\nTesla
    represents requests as middleware that can be modified before sending\nTesting
    HTTP requests can be a challenge due to dependence on outside systems\nGraphQL,
    OpenAPI, and JSON API provide clear request/response formats\nElixir could improve
    richer parsing from HTTP into structs\nFocus on contribution ergonomics lowers
    barriers for new participants\nMaintainers emphasize making contributions easy
    via templates and clear documentation\nAPIs drive adoption of standards for client/server
    contracts\nThey discuss GraphQL, JSON API, OpenAPI schemas, and other standards
    that provide clear request/response formats\nTypeScript brings types to APIs and
    helps to validate responses\nYordis notes that Go and Rust make requests simple
    via tags for mapping JSON to structs\nLanguage collaboration shares strengths
    from different ecosystems and inspires new libraries and tools for improving the
    programming experience\nLinks Mentioned\nElixir-Tesla Library: https://github.com/elixir-tesla/tesla\nYordis
    on Github: https://github.com/yordis\nYordis on Twitter: https://twitter.com/alchemist_ubi\nYordis
    on LinkedIn: https://www.linkedin.com/in/yordisprieto/\nYordis on YouTube: https://www.youtube.com/@alchemistubi\nStephen
    on Twitter: https://twitter.com/stepchud \nStephen's projects on consciousness:
    https://harmonicdevelopment.us\nOwen suggests: Http.cat\nHTTParty: https://github.com/jnunemaker/httparty\nGuardian
    Library: https://github.com/ueberauth/guardian\nAxios: https://axios-http.com/\nStraw
    Hat Fetcher: https://github.com/straw-hat-team/nodejs-monorepo/tree/master/packages/%40straw-hat/fetcher\nElixir
    Tesla Wiki: https://github.com/elixir-tesla/tesla/wiki\nHTTPoison: https://github.com/edgurgel/httpoison\nTesla
    Testing: https://hexdocs.pm/tesla/readme.html#testing\nTesla Mock: https://hexdocs.pm/tesla/Tesla.Mock.html\nFinch:
    https://hex.pm/packages/finch\nMojito: https://github.com/appcues/mojito\nErlang
    Libraries and Frameworks Working Group: https://github.com/erlef/libs-and-frameworks/
    and https://erlef.org/wg/libs-and-frameworks\n Special Guests: Stephen Chudleigh
    and Yordis Prieto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+IG633dii
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/737a8ab1-50ff-4583-a522-5fb800630190.mp3
    length: '97605763'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: In today’s episode, Sundi and Owen are joined by Yordis Prieto and Stephen
      Chudleigh to compare notes on HTTP requests in Elixir vs. Ruby, JavaScript,
      Go, and Rust. They cover common pain points when working with APIs, best practices,
      and lessons that can be learned from other programming languages.
    duration: '50:29'
    explicit: 'no'
    keywords: " Elixir, Phoenix, LiveView, Tailwind CSS, React, JavaScript, Axios,
      HTTP requests, web app development, web dev, Rails, programming, software dev,
      development, app development, C sharp, data processing, software development,
      computer science, engineering, algorithms, data structures, databases, distributed
      systems, cloud computing, APIs, microservices, web development, full stack development,
      front end development, back end development, mobile development,UX design, testing,
      QA, object oriented programming, functional programming, Erlang,Ruby, Node.js,
      React, TypeScript, Go, Rust, opensource, contributing, collaboration, maintenance"
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/737a8ab1-50ff-4583-a522-5fb800630190/cover.jpg?v=1
    summary: "\n        <p>In today’s episode, Sundi and Owen are joined by Yordis
      Prieto and Stephen Chudleigh to compare notes on HTTP requests in Elixir vs.
      Ruby, JavaScript, Go, and Rust. They cover common pain points when working with
      APIs, best practices, and lessons that can be learned from other programming
      languages.</p>\n\n<p>Yordis maintains Elixir&#39;s popular Tesla HTTP client
      library and shares insights from building APIs and maintaining open-source projects.
      Stephen has experience with Rails and JavaScript, and now works primarily in
      Elixir. They offer perspectives on testing HTTP requests and working with different
      libraries.</p>\n\n<p>While Elixir has matured, there is room for improvement
      - especially around richer struct parsing from HTTP responses. The discussion
      highlights ongoing efforts to improve the developer experience for HTTP clients
      in Elixir and other ecosystems. </p>\n\n<h3>Topics Discussed in this Episode</h3>\n\n<ul>\n<li>HTTP
      is a protocol - but each language has different implementation methods</li>\n<li>Tesla
      represents requests as middleware that can be modified before sending</li>\n<li>Testing
      HTTP requests can be a challenge due to dependence on outside systems</li>\n<li>GraphQL,
      OpenAPI, and JSON API provide clear request/response formats</li>\n<li>Elixir
      could improve richer parsing from HTTP into structs</li>\n<li>Focus on contribution
      ergonomics lowers barriers for new participants</li>\n<li>Maintainers emphasize
      making contributions easy via templates and clear documentation</li>\n<li>APIs
      drive adoption of standards for client/server contracts</li>\n<li>They discuss
      GraphQL, JSON API, OpenAPI schemas, and other standards that provide clear request/response
      formats</li>\n<li>TypeScript brings types to APIs and helps to validate responses</li>\n<li>Yordis
      notes that Go and Rust make requests simple via tags for mapping JSON to structs</li>\n<li>Language
      collaboration shares strengths from different ecosystems and inspires new libraries
      and tools for improving the programming experience</li>\n</ul>\n\n<h3>Links
      Mentioned</h3>\n\n<p>Elixir-Tesla Library: <a href=\"https://github.com/elixir-tesla/tesla\"
      rel=\"nofollow\">https://github.com/elixir-tesla/tesla</a><br>\nYordis on Github:
      <a href=\"https://github.com/yordis\" rel=\"nofollow\">https://github.com/yordis</a><br>\nYordis
      on Twitter: <a href=\"https://twitter.com/alchemist_ubi\" rel=\"nofollow\">https://twitter.com/alchemist_ubi</a><br>\nYordis
      on LinkedIn: <a href=\"https://www.linkedin.com/in/yordisprieto/\" rel=\"nofollow\">https://www.linkedin.com/in/yordisprieto/</a><br>\nYordis
      on YouTube: <a href=\"https://www.youtube.com/@alchemistubi\" rel=\"nofollow\">https://www.youtube.com/@alchemistubi</a><br>\nStephen
      on Twitter: <a href=\"https://twitter.com/stepchud\" rel=\"nofollow\">https://twitter.com/stepchud</a>
      <br>\nStephen&#39;s projects on consciousness: <a href=\"https://harmonicdevelopment.us\"
      rel=\"nofollow\">https://harmonicdevelopment.us</a><br>\nOwen suggests: Http.cat<br>\nHTTParty:
      <a href=\"https://github.com/jnunemaker/httparty\" rel=\"nofollow\">https://github.com/jnunemaker/httparty</a><br>\nGuardian
      Library: <a href=\"https://github.com/ueberauth/guardian\" rel=\"nofollow\">https://github.com/ueberauth/guardian</a><br>\nAxios:
      <a href=\"https://axios-http.com/\" rel=\"nofollow\">https://axios-http.com/</a><br>\nStraw
      Hat Fetcher: <a href=\"https://github.com/straw-hat-team/nodejs-monorepo/tree/master/packages/%40straw-hat/fetcher\"
      rel=\"nofollow\">https://github.com/straw-hat-team/nodejs-monorepo/tree/master/packages/%40straw-hat/fetcher</a><br>\nElixir
      Tesla Wiki: <a href=\"https://github.com/elixir-tesla/tesla/wiki\" rel=\"nofollow\">https://github.com/elixir-tesla/tesla/wiki</a><br>\nHTTPoison:
      <a href=\"https://github.com/edgurgel/httpoison\" rel=\"nofollow\">https://github.com/edgurgel/httpoison</a><br>\nTesla
      Testing: <a href=\"https://hexdocs.pm/tesla/readme.html#testing\" rel=\"nofollow\">https://hexdocs.pm/tesla/readme.html#testing</a><br>\nTesla
      Mock: <a href=\"https://hexdocs.pm/tesla/Tesla.Mock.html\" rel=\"nofollow\">https://hexdocs.pm/tesla/Tesla.Mock.html</a><br>\nFinch:
      <a href=\"https://hex.pm/packages/finch\" rel=\"nofollow\">https://hex.pm/packages/finch</a><br>\nMojito:
      <a href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a><br>\nErlang
      Libraries and Frameworks Working Group: <a href=\"https://github.com/erlef/libs-and-frameworks/\"
      rel=\"nofollow\">https://github.com/erlef/libs-and-frameworks/</a> and <a href=\"https://erlef.org/wg/libs-and-frameworks\"
      rel=\"nofollow\">https://erlef.org/wg/libs-and-frameworks</a></p><p>Special
      Guests: Stephen Chudleigh and Yordis Prieto.</p>\n      "
  contentEncoded: "\n        <p>In today’s episode, Sundi and Owen are joined by Yordis
    Prieto and Stephen Chudleigh to compare notes on HTTP requests in Elixir vs. Ruby,
    JavaScript, Go, and Rust. They cover common pain points when working with APIs,
    best practices, and lessons that can be learned from other programming languages.</p>\n\n<p>Yordis
    maintains Elixir&#39;s popular Tesla HTTP client library and shares insights from
    building APIs and maintaining open-source projects. Stephen has experience with
    Rails and JavaScript, and now works primarily in Elixir. They offer perspectives
    on testing HTTP requests and working with different libraries.</p>\n\n<p>While
    Elixir has matured, there is room for improvement - especially around richer struct
    parsing from HTTP responses. The discussion highlights ongoing efforts to improve
    the developer experience for HTTP clients in Elixir and other ecosystems. </p>\n\n<h3>Topics
    Discussed in this Episode</h3>\n\n<ul>\n<li>HTTP is a protocol - but each language
    has different implementation methods</li>\n<li>Tesla represents requests as middleware
    that can be modified before sending</li>\n<li>Testing HTTP requests can be a challenge
    due to dependence on outside systems</li>\n<li>GraphQL, OpenAPI, and JSON API
    provide clear request/response formats</li>\n<li>Elixir could improve richer parsing
    from HTTP into structs</li>\n<li>Focus on contribution ergonomics lowers barriers
    for new participants</li>\n<li>Maintainers emphasize making contributions easy
    via templates and clear documentation</li>\n<li>APIs drive adoption of standards
    for client/server contracts</li>\n<li>They discuss GraphQL, JSON API, OpenAPI
    schemas, and other standards that provide clear request/response formats</li>\n<li>TypeScript
    brings types to APIs and helps to validate responses</li>\n<li>Yordis notes that
    Go and Rust make requests simple via tags for mapping JSON to structs</li>\n<li>Language
    collaboration shares strengths from different ecosystems and inspires new libraries
    and tools for improving the programming experience</li>\n</ul>\n\n<h3>Links Mentioned</h3>\n\n<p>Elixir-Tesla
    Library: <a href=\"https://github.com/elixir-tesla/tesla\" rel=\"nofollow\">https://github.com/elixir-tesla/tesla</a><br>\nYordis
    on Github: <a href=\"https://github.com/yordis\" rel=\"nofollow\">https://github.com/yordis</a><br>\nYordis
    on Twitter: <a href=\"https://twitter.com/alchemist_ubi\" rel=\"nofollow\">https://twitter.com/alchemist_ubi</a><br>\nYordis
    on LinkedIn: <a href=\"https://www.linkedin.com/in/yordisprieto/\" rel=\"nofollow\">https://www.linkedin.com/in/yordisprieto/</a><br>\nYordis
    on YouTube: <a href=\"https://www.youtube.com/@alchemistubi\" rel=\"nofollow\">https://www.youtube.com/@alchemistubi</a><br>\nStephen
    on Twitter: <a href=\"https://twitter.com/stepchud\" rel=\"nofollow\">https://twitter.com/stepchud</a>
    <br>\nStephen&#39;s projects on consciousness: <a href=\"https://harmonicdevelopment.us\"
    rel=\"nofollow\">https://harmonicdevelopment.us</a><br>\nOwen suggests: Http.cat<br>\nHTTParty:
    <a href=\"https://github.com/jnunemaker/httparty\" rel=\"nofollow\">https://github.com/jnunemaker/httparty</a><br>\nGuardian
    Library: <a href=\"https://github.com/ueberauth/guardian\" rel=\"nofollow\">https://github.com/ueberauth/guardian</a><br>\nAxios:
    <a href=\"https://axios-http.com/\" rel=\"nofollow\">https://axios-http.com/</a><br>\nStraw
    Hat Fetcher: <a href=\"https://github.com/straw-hat-team/nodejs-monorepo/tree/master/packages/%40straw-hat/fetcher\"
    rel=\"nofollow\">https://github.com/straw-hat-team/nodejs-monorepo/tree/master/packages/%40straw-hat/fetcher</a><br>\nElixir
    Tesla Wiki: <a href=\"https://github.com/elixir-tesla/tesla/wiki\" rel=\"nofollow\">https://github.com/elixir-tesla/tesla/wiki</a><br>\nHTTPoison:
    <a href=\"https://github.com/edgurgel/httpoison\" rel=\"nofollow\">https://github.com/edgurgel/httpoison</a><br>\nTesla
    Testing: <a href=\"https://hexdocs.pm/tesla/readme.html#testing\" rel=\"nofollow\">https://hexdocs.pm/tesla/readme.html#testing</a><br>\nTesla
    Mock: <a href=\"https://hexdocs.pm/tesla/Tesla.Mock.html\" rel=\"nofollow\">https://hexdocs.pm/tesla/Tesla.Mock.html</a><br>\nFinch:
    <a href=\"https://hex.pm/packages/finch\" rel=\"nofollow\">https://hex.pm/packages/finch</a><br>\nMojito:
    <a href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a><br>\nErlang
    Libraries and Frameworks Working Group: <a href=\"https://github.com/erlef/libs-and-frameworks/\"
    rel=\"nofollow\">https://github.com/erlef/libs-and-frameworks/</a> and <a href=\"https://erlef.org/wg/libs-and-frameworks\"
    rel=\"nofollow\">https://erlef.org/wg/libs-and-frameworks</a></p><p>Special Guests:
    Stephen Chudleigh and Yordis Prieto.</p>\n      "
- title: 'Season 11 Kickoff: The Hosts Discuss Branching Out from Elixir to Compare
    Notes'
  slug: s11-e01-all-hosts-branching-out-from-elixir
  link: https://smartlogic.io/podcast/elixir-wizards/s11-e01-all-hosts-branching-out-from-elixir
  guid: 19574ee8-cc0e-41f2-8175-e681913b5962
  pubDate: Thu, 19 Oct 2023 07:00:00 -0400
  pubDateFriendly: October 19, 2023
  description: "Hosts Dan Ivovich, Owen Bickford, and Sundi Myint kick off the 11th
    season of the Elixir Wizards podcast. This season’s theme is “Branching Out from
    Elixir,” which expands the conversation to compare notes with experts from other
    communities; they discuss their experiences with other languages like JavaScript,
    PHP, Python, Ruby, C#, Go, and Dart before and after learning Elixir.\nThis season's
    conversations will illuminate how problems are solved in different languages vs.
    Elixir; upcoming episode topics teased include education, data processing, deployment
    strategies, and garbage collection; the hosts express excitement for conversations
    analyzing similarities and differences between communities.\nTopics Discussed
    in this Episode\nSeason 11 branches out from Elixir to compare notes with other
    programming communities\nSundi, Owen, and Dan introduce the season theme and their
    interest in exploring these conversations\nThe hosts compare their experiences
    with PHP, JavaScript, Python, Ruby, C#, Go, Dart and Elixir\nThe Wizards compare
    and contrast differences in their personal experience building similar things
    with different languages\nDan dreams in Ruby and uses it for quick prototypes\nComparing
    problem-solving approaches across languages will reframe perspectives\nUpcoming
    episodes explore  data processing workflows, machine learning, and game development\nPop
    Quiz: Who's that Pokémon... or language, or framework?\nLinks Mentioned\nhttps://smartlogic.io/\nhttps://codepen.io/\nhttps://i.redd.it/0lg7979qtr511.jpg
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+O293e4PU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/19574ee8-cc0e-41f2-8175-e681913b5962.mp3
    length: '63168426'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '11'
    author: SmartLogic LLC
    subtitle: The Elixir Wizards podcast kicks off the 11th season, “Branching Out
      from Elixir,” to compare notes with other programming communities. The hosts
      discuss their programming language experience, goals for the season, and topics
      they’re excited to learn more about.
    duration: '32:21'
    explicit: 'no'
    keywords: 'Elixir, Phoenix, LiveView, Tailwind CSS, React, Vue, JavaScript, PHP,
      Python, Ruby, C#, .NET, Go, Dart, Rails, programming, software dev, development,
      app development, C sharp, data processing, ETL, React, Angular, jQuery, Flask,
      Redis, Sidekiq, RabbitMQ, Celery, MQTT, Nix, deployment, Kubernetes, Ansible,
      Terraform, Vault, Repeatable workflows, skill improvement, product ownership,
      technical product management, bootcamps, comparison, Advent of Code, discovery
      workshops, event storming, wireframes, mockups, clickable prototypes, development,
      CI, pipelines, code quality, security checks, testing, reviews, QA, releases,
      DevOps, back end development, programming paradigms, MVC, routing, handling
      events, models, views, controllers, release planning, communication, client
      satisfaction, career map, hiring process, documentation, user research, model,
      UML diagrams, UX design, integration, estimates, budgets, timelines, system
      architecture, hosting configuration, server capacity, development environments,
      cross functional collaboration, skill sharing '
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/19574ee8-cc0e-41f2-8175-e681913b5962/cover.jpg?v=1
    summary: "\n        <p>Hosts Dan Ivovich, Owen Bickford, and Sundi Myint kick
      off the 11th season of the Elixir Wizards podcast. This season’s theme is “Branching
      Out from Elixir,” which expands the conversation to compare notes with experts
      from other communities; they discuss their experiences with other languages
      like JavaScript, PHP, Python, Ruby, C#, Go, and Dart before and after learning
      Elixir.</p>\n\n<p>This season&#39;s conversations will illuminate how problems
      are solved in different languages vs. Elixir; upcoming episode topics teased
      include education, data processing, deployment strategies, and garbage collection;
      the hosts express excitement for conversations analyzing similarities and differences
      between communities.</p>\n\n<h3>Topics Discussed in this Episode</h3>\n\n<ul>\n<li>Season
      11 branches out from Elixir to compare notes with other programming communities</li>\n<li>Sundi,
      Owen, and Dan introduce the season theme and their interest in exploring these
      conversations</li>\n<li>The hosts compare their experiences with PHP, JavaScript,
      Python, Ruby, C#, Go, Dart and Elixir</li>\n<li>The Wizards compare and contrast
      differences in their personal experience building similar things with different
      languages</li>\n<li>Dan dreams in Ruby and uses it for quick prototypes</li>\n<li>Comparing
      problem-solving approaches across languages will reframe perspectives</li>\n<li>Upcoming
      episodes explore  data processing workflows, machine learning, and game development</li>\n<li>Pop
      Quiz: Who&#39;s that Pokémon... or language, or framework?</li>\n</ul>\n\n<h3>Links
      Mentioned</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\n<a
      href=\"https://codepen.io/\" rel=\"nofollow\">https://codepen.io/</a><br>\n<a
      href=\"https://i.redd.it/0lg7979qtr511.jpg\" rel=\"nofollow\">https://i.redd.it/0lg7979qtr511.jpg</a></p>\n
      \     "
  contentEncoded: "\n        <p>Hosts Dan Ivovich, Owen Bickford, and Sundi Myint
    kick off the 11th season of the Elixir Wizards podcast. This season’s theme is
    “Branching Out from Elixir,” which expands the conversation to compare notes with
    experts from other communities; they discuss their experiences with other languages
    like JavaScript, PHP, Python, Ruby, C#, Go, and Dart before and after learning
    Elixir.</p>\n\n<p>This season&#39;s conversations will illuminate how problems
    are solved in different languages vs. Elixir; upcoming episode topics teased include
    education, data processing, deployment strategies, and garbage collection; the
    hosts express excitement for conversations analyzing similarities and differences
    between communities.</p>\n\n<h3>Topics Discussed in this Episode</h3>\n\n<ul>\n<li>Season
    11 branches out from Elixir to compare notes with other programming communities</li>\n<li>Sundi,
    Owen, and Dan introduce the season theme and their interest in exploring these
    conversations</li>\n<li>The hosts compare their experiences with PHP, JavaScript,
    Python, Ruby, C#, Go, Dart and Elixir</li>\n<li>The Wizards compare and contrast
    differences in their personal experience building similar things with different
    languages</li>\n<li>Dan dreams in Ruby and uses it for quick prototypes</li>\n<li>Comparing
    problem-solving approaches across languages will reframe perspectives</li>\n<li>Upcoming
    episodes explore  data processing workflows, machine learning, and game development</li>\n<li>Pop
    Quiz: Who&#39;s that Pokémon... or language, or framework?</li>\n</ul>\n\n<h3>Links
    Mentioned</h3>\n\n<p><a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\n<a
    href=\"https://codepen.io/\" rel=\"nofollow\">https://codepen.io/</a><br>\n<a
    href=\"https://i.redd.it/0lg7979qtr511.jpg\" rel=\"nofollow\">https://i.redd.it/0lg7979qtr511.jpg</a></p>\n
    \     "
- title: José Valim, Guillaume Duboc, and Giuseppe Castagna on the Future of Types
    in Elixir
  slug: s10-e12-jose-guillaume-giuseppe-types-elixir
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e12-jose-guillaume-giuseppe-types-elixir
  guid: b8c28e5d-c4a3-43f9-b170-badce96360de
  pubDate: Thu, 08 Jun 2023 06:00:00 -0400
  pubDateFriendly: June  8, 2023
  description: "It’s the Season 10 finale of the Elixir Wizards podcast! José Valim,
    Guillaume Duboc, and Giuseppe Castagna join Wizards Owen Bickford and Dan Ivovich
    to dive into the prospect of types in the Elixir programming language! They break
    down their research on set-theoretical typing and highlight their goal of creating
    a type system that supports as many Elixir idioms as possible while balancing
    simplicity and pragmatism.\nJosé, Guillaume, and Giuseppe talk about what initially
    sparked this project, the challenges in bringing types to Elixir, and the benefits
    that the Elixir community can expect from this exciting work. Guillaume's formalization
    and Giuseppe's \"cutting-edge research\" balance José's pragmatism and \"Guardian
    of Orthodoxy\" role. Decades of theory meet the needs of a living language, with
    open challenges like multi-process typing ahead. They come together with a shared
    joy of problem-solving that will accelerate Elixir's continued growth.\nKey Topics
    Discussed in this Episode:\nAdding type safety to Elixir through set theoretical
    typing\nHow the team chose a type system that supports as many Elixir idioms as
    possible \nBalancing simplicity and pragmatism in type system design\nAddressing
    challenges like typing maps, pattern matching, and guards\nThe tradeoffs between
    Dialyzer and making types part of the core language\nAdvantages of typing for
    catching bugs, documentation, and tooling\nThe differences between typing in the
    Gleam programming language vs. Elixir\nThe possibility of type inference in a
    set-theoretic type system\nThe history and development of set-theoretic types
    over 20 years\nGradual typing techniques for integrating typed and untyped code\nHow
    José and Giuseppe initially connected through research papers\nUsing types as
    a form of \"mechanized documentation\"\nThe risks and tradeoffs of choosing syntax
    \nCheers to another decade of Elixir! \nA big thanks to this season’s guests and
    all the listeners!\nLinks and Resources Mentioned in this Episode:\nBringing Types
    to Elixir | Guillaume Duboc & Giuseppe Castagna | ElixirConf EU 2023 (https://youtu.be/gJJH7a2J9O8)\nKeynote:
    Celebrating the 10 Years of Elixir | José Valim | ElixirConf EU 2022 (https://youtu.be/Jf5Hsa1KOc8)\nOCaml
    industrial-strength functional programming https://ocaml.org/\nℂDuce: a language
    for transformation of XML documents http://www.cduce.org/\nBallerina coding language
    https://ballerina.io/\nLuau coding language https://luau-lang.org/\nGleam type
    language https://gleam.run/\n\"The Design Principles of the Elixir Type System\"
    (https://www.irif.fr/_media/users/gduboc/elixir-types.pdf) by G. Castagna, G.
    Duboc, and J. Valim\n\"A Gradual Type System for Elixir\" (https://dlnext.acm.org/doi/abs/10.1145/3427081.3427084)
    by M. Cassola, A. Talagorria, A. Pardo, and M. Viera\n\"Programming with union,
    intersection, and negation types\" (https://www.irif.fr/~gc/papers/set-theoretic-types-2022.pdf),
    by Giuseppe Castagna\n\"Covariance and Contravariance: a fresh look at an old
    issue (a primer in advanced type systems for learning functional programmers)\"
    (https://www.irif.fr/~gc/papers/covcon-again.pdf) by Giuseppe Castagna\n\"A reckless
    introduction to Hindley-Milner type inference\" (https://www.lesswrong.com/posts/vTS8K4NBSi9iyCrPo/a-reckless-introduction-to-hindley-milner-type-inference)
    Special Guests: Giuseppe Castagna, Guillaume Duboc, and José Valim.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+1q21wOk7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b8c28e5d-c4a3-43f9-b170-badce96360de.mp3
    length: '94223313'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: It’s the Season 10 finale of Elixir Wizards! José Valim, Guillaume Duboc,
      and Giuseppe Castagna join Wizards Owen Bickford and Dan Ivovich to dive into
      the prospect of types in the Elixir programming language! They break down their
      research on set-theoretical typing and highlight their goal of creating a type
      system that supports as many Elixir idioms as possible.
    duration: '48:32'
    explicit: 'no'
    keywords: Programming languages, functional programming, computer science, type
      systems, gradual typing, type safety, formal verification, set theory, logic,
      mathematics, SAT types, type theory, subtyping, records, map data structures,
      pattern matching, polymorphism, syntax design, academic research, PhD work,
      semantic subtyping, Hindley-Milner type system, type inference, algorithms,
      concurrency, parallelism, actor model, runtime errors, type checking, compilation,
      documentation, static analysis, tooling, Visual Studio Code, auto-completion,
      type annotations, debugging, Dialyxir, programming semantics, Erlang, Elixir,
      Gleam, live coding, performance optimization, compilers, casting, coercion,
      computational linguistics, lattice theory, transitive closure, first order logic,
      higher order logic, formal proofs, lambda calculus, set expressions, functions,
      relations, equations, axioms, theorems, corollaries, binary operations, multisets,
      type errors, programming paradigms, orthogonality, philosophy, methodology,
      type systems design, empirical studies, experimental design, thought experiments,
      epistemology, epistemic logic, soft typing, determinism, non-determinism, probability,
      intuitionistic logic, logic programming, programming language history
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b8c28e5d-c4a3-43f9-b170-badce96360de/cover.jpg?v=1
    summary: "\n        <p>It’s the Season 10 finale of the Elixir Wizards podcast!
      José Valim, Guillaume Duboc, and Giuseppe Castagna join Wizards Owen Bickford
      and Dan Ivovich to dive into the prospect of types in the Elixir programming
      language! They break down their research on set-theoretical typing and highlight
      their goal of creating a type system that supports as many Elixir idioms as
      possible while balancing simplicity and pragmatism.</p>\n\n<p>José, Guillaume,
      and Giuseppe talk about what initially sparked this project, the challenges
      in bringing types to Elixir, and the benefits that the Elixir community can
      expect from this exciting work. Guillaume&#39;s formalization and Giuseppe&#39;s
      &quot;cutting-edge research&quot; balance José&#39;s pragmatism and &quot;Guardian
      of Orthodoxy&quot; role. Decades of theory meet the needs of a living language,
      with open challenges like multi-process typing ahead. They come together with
      a shared joy of problem-solving that will accelerate Elixir&#39;s continued
      growth.</p>\n\n<h3>Key Topics Discussed in this Episode:</h3>\n\n<ul>\n<li>Adding
      type safety to Elixir through set theoretical typing</li>\n<li>How the team
      chose a type system that supports as many Elixir idioms as possible </li>\n<li>Balancing
      simplicity and pragmatism in type system design</li>\n<li>Addressing challenges
      like typing maps, pattern matching, and guards</li>\n<li>The tradeoffs between
      Dialyzer and making types part of the core language</li>\n<li>Advantages of
      typing for catching bugs, documentation, and tooling</li>\n<li>The differences
      between typing in the Gleam programming language vs. Elixir</li>\n<li>The possibility
      of type inference in a set-theoretic type system</li>\n<li>The history and development
      of set-theoretic types over 20 years</li>\n<li>Gradual typing techniques for
      integrating typed and untyped code</li>\n<li>How José and Giuseppe initially
      connected through research papers</li>\n<li>Using types as a form of &quot;mechanized
      documentation&quot;</li>\n<li>The risks and tradeoffs of choosing syntax </li>\n<li>Cheers
      to another decade of Elixir! </li>\n<li>A big thanks to this season’s guests
      and all the listeners!</li>\n</ul>\n\n<h3>Links and Resources Mentioned in this
      Episode:</h3>\n\n<p><a href=\"https://youtu.be/gJJH7a2J9O8\" rel=\"nofollow\">Bringing
      Types to Elixir | Guillaume Duboc &amp; Giuseppe Castagna | ElixirConf EU 2023</a><br>\n<a
      href=\"https://youtu.be/Jf5Hsa1KOc8\" rel=\"nofollow\">Keynote: Celebrating
      the 10 Years of Elixir | José Valim | ElixirConf EU 2022</a><br>\nOCaml industrial-strength
      functional programming <a href=\"https://ocaml.org/\" rel=\"nofollow\">https://ocaml.org/</a><br>\nℂDuce:
      a language for transformation of XML documents <a href=\"http://www.cduce.org/\"
      rel=\"nofollow\">http://www.cduce.org/</a><br>\nBallerina coding language <a
      href=\"https://ballerina.io/\" rel=\"nofollow\">https://ballerina.io/</a><br>\nLuau
      coding language <a href=\"https://luau-lang.org/\" rel=\"nofollow\">https://luau-lang.org/</a><br>\nGleam
      type language <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\n<a
      href=\"https://www.irif.fr/_media/users/gduboc/elixir-types.pdf\" rel=\"nofollow\">&quot;The
      Design Principles of the Elixir Type System&quot;</a> by G. Castagna, G. Duboc,
      and J. Valim<br>\n<a href=\"https://dlnext.acm.org/doi/abs/10.1145/3427081.3427084\"
      rel=\"nofollow\">&quot;A Gradual Type System for Elixir&quot;</a> by M. Cassola,
      A. Talagorria, A. Pardo, and M. Viera<br>\n<a href=\"https://www.irif.fr/%7Egc/papers/set-theoretic-types-2022.pdf\"
      rel=\"nofollow\">&quot;Programming with union, intersection, and negation types&quot;</a>,
      by Giuseppe Castagna<br>\n<a href=\"https://www.irif.fr/%7Egc/papers/covcon-again.pdf\"
      rel=\"nofollow\">&quot;Covariance and Contravariance: a fresh look at an old
      issue (a primer in advanced type systems for learning functional programmers)&quot;</a>
      by Giuseppe Castagna<br>\n<a href=\"https://www.lesswrong.com/posts/vTS8K4NBSi9iyCrPo/a-reckless-introduction-to-hindley-milner-type-inference\"
      rel=\"nofollow\">&quot;A reckless introduction to Hindley-Milner type inference&quot;</a></p><p>Special
      Guests: Giuseppe Castagna, Guillaume Duboc, and José Valim.</p>\n      "
  contentEncoded: "\n        <p>It’s the Season 10 finale of the Elixir Wizards podcast!
    José Valim, Guillaume Duboc, and Giuseppe Castagna join Wizards Owen Bickford
    and Dan Ivovich to dive into the prospect of types in the Elixir programming language!
    They break down their research on set-theoretical typing and highlight their goal
    of creating a type system that supports as many Elixir idioms as possible while
    balancing simplicity and pragmatism.</p>\n\n<p>José, Guillaume, and Giuseppe talk
    about what initially sparked this project, the challenges in bringing types to
    Elixir, and the benefits that the Elixir community can expect from this exciting
    work. Guillaume&#39;s formalization and Giuseppe&#39;s &quot;cutting-edge research&quot;
    balance José&#39;s pragmatism and &quot;Guardian of Orthodoxy&quot; role. Decades
    of theory meet the needs of a living language, with open challenges like multi-process
    typing ahead. They come together with a shared joy of problem-solving that will
    accelerate Elixir&#39;s continued growth.</p>\n\n<h3>Key Topics Discussed in this
    Episode:</h3>\n\n<ul>\n<li>Adding type safety to Elixir through set theoretical
    typing</li>\n<li>How the team chose a type system that supports as many Elixir
    idioms as possible </li>\n<li>Balancing simplicity and pragmatism in type system
    design</li>\n<li>Addressing challenges like typing maps, pattern matching, and
    guards</li>\n<li>The tradeoffs between Dialyzer and making types part of the core
    language</li>\n<li>Advantages of typing for catching bugs, documentation, and
    tooling</li>\n<li>The differences between typing in the Gleam programming language
    vs. Elixir</li>\n<li>The possibility of type inference in a set-theoretic type
    system</li>\n<li>The history and development of set-theoretic types over 20 years</li>\n<li>Gradual
    typing techniques for integrating typed and untyped code</li>\n<li>How José and
    Giuseppe initially connected through research papers</li>\n<li>Using types as
    a form of &quot;mechanized documentation&quot;</li>\n<li>The risks and tradeoffs
    of choosing syntax </li>\n<li>Cheers to another decade of Elixir! </li>\n<li>A
    big thanks to this season’s guests and all the listeners!</li>\n</ul>\n\n<h3>Links
    and Resources Mentioned in this Episode:</h3>\n\n<p><a href=\"https://youtu.be/gJJH7a2J9O8\"
    rel=\"nofollow\">Bringing Types to Elixir | Guillaume Duboc &amp; Giuseppe Castagna
    | ElixirConf EU 2023</a><br>\n<a href=\"https://youtu.be/Jf5Hsa1KOc8\" rel=\"nofollow\">Keynote:
    Celebrating the 10 Years of Elixir | José Valim | ElixirConf EU 2022</a><br>\nOCaml
    industrial-strength functional programming <a href=\"https://ocaml.org/\" rel=\"nofollow\">https://ocaml.org/</a><br>\nℂDuce:
    a language for transformation of XML documents <a href=\"http://www.cduce.org/\"
    rel=\"nofollow\">http://www.cduce.org/</a><br>\nBallerina coding language <a href=\"https://ballerina.io/\"
    rel=\"nofollow\">https://ballerina.io/</a><br>\nLuau coding language <a href=\"https://luau-lang.org/\"
    rel=\"nofollow\">https://luau-lang.org/</a><br>\nGleam type language <a href=\"https://gleam.run/\"
    rel=\"nofollow\">https://gleam.run/</a><br>\n<a href=\"https://www.irif.fr/_media/users/gduboc/elixir-types.pdf\"
    rel=\"nofollow\">&quot;The Design Principles of the Elixir Type System&quot;</a>
    by G. Castagna, G. Duboc, and J. Valim<br>\n<a href=\"https://dlnext.acm.org/doi/abs/10.1145/3427081.3427084\"
    rel=\"nofollow\">&quot;A Gradual Type System for Elixir&quot;</a> by M. Cassola,
    A. Talagorria, A. Pardo, and M. Viera<br>\n<a href=\"https://www.irif.fr/%7Egc/papers/set-theoretic-types-2022.pdf\"
    rel=\"nofollow\">&quot;Programming with union, intersection, and negation types&quot;</a>,
    by Giuseppe Castagna<br>\n<a href=\"https://www.irif.fr/%7Egc/papers/covcon-again.pdf\"
    rel=\"nofollow\">&quot;Covariance and Contravariance: a fresh look at an old issue
    (a primer in advanced type systems for learning functional programmers)&quot;</a>
    by Giuseppe Castagna<br>\n<a href=\"https://www.lesswrong.com/posts/vTS8K4NBSi9iyCrPo/a-reckless-introduction-to-hindley-milner-type-inference\"
    rel=\"nofollow\">&quot;A reckless introduction to Hindley-Milner type inference&quot;</a></p><p>Special
    Guests: Giuseppe Castagna, Guillaume Duboc, and José Valim.</p>\n      "
- title: Chris McCord and Jason Stiebs on the Future of Phoenix
  slug: s10-e11-chris-jason-future-phoenix-elixir
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e11-chris-jason-future-phoenix-elixir
  guid: f620debe-bde4-46bf-85fb-1032bd63b48d
  pubDate: Thu, 01 Jun 2023 06:00:00 -0400
  pubDateFriendly: June  1, 2023
  description: "Phoenix core team members Chris McCord and Jason Stiebs join Elixir
    Wizards Sundi Myint and Owen Bickford the growth of Phoenix and LiveView, the
    latest updates, and what they're excited to see in the future. They express excitement
    for the possibilities of machine learning, AI, and distributed systems and how
    these emerging technologies will enhance the user experience of Elixir and LiveView
    applications in the next decade.\nKey Topics Discussed in this Episode:\nHow community
    contributions and feedback help improve Phoenix LiveView\nThe addition of function
    components, declarative assigns, HEEx, and streams\nWhy Ecto changesets should
    be used as \"fire and forget\" data structures\nExcitement about machine learning
    and AI with libraries like NX\nThe possibility of distributed systems and actors
    in the future\nVerifying and solving issues in the Phoenix and LiveView issue
    trackers\nWhy marketing plays a part in the adoption and mindshare of Phoenix\nHow
    streams provide a primitive for arbitrarily large dynamic lists\nElixir VM's ability
    to scale to millions of connections \nA creative use of form inputs for associations
    with dynamic children\nLinks Mentioned in this Episode:\nFly Site https://fly.io/\nKeynote:
    The Road To LiveView 1.0 by Chris McCord | ElixirConf EU 2023 (https://youtu.be/FADQAnq0RpA)\nKeynote:
    I Was Wrong About LiveView by Jason Stiebs | ElixirConf 2022 (https://youtu.be/INgpJ3eIKZY)\nPhoenix
    Site https://www.phoenixframework.org/\nPhoenix Github https://github.com/phoenixframework\nTwo-Story,
    10-Room Purple Martin House (https://suncatcherstudio.com/uploads/birds/birdhouses/purple-martin-house-plans/images-large/purple-martin-birdhouse-plans-labeled.png)\nBlog:
    The Road to 2 Million Websocket Connections in Phoenix (https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections)\nRaxx
    Elixir Webserver Interface https://hexdocs.pm/raxx/0.4.1/readme.html\nLivebook
    Site https://livebook.dev/\nSundi’s 6’x 6’ Phoenix painting (https://twitter.com/sundikhin/status/1663930854928728064)\nSurface
    on Hex https://hex.pm/packages/surface\nAxon Deep Learning Framework https://hexdocs.pm/axon/Axon.html\nNx
    Numerical Elixir https://hexdocs.pm/nx/intro-to-nx.html\nPhoenix PubSub https://hexdocs.pm/phoenix_pubsub/Phoenix.PubSub.html\nJason
    Stiebs on Twitter https://twitter.com/peregrine\nJason Stiebs on Mastodon https://merveilles.town/@peregrine
    Special Guests: Chris McCord and Jason Stiebs.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+cXMgoEpS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f620debe-bde4-46bf-85fb-1032bd63b48d.mp3
    length: '84957241'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: Phoenix core team members Chris McCord and Jason Stiebs join the Elixir
      Wizards to discuss the growth of Phoenix and LiveView, the latest updates, and
      what they're excited to see in the future.
    duration: '58:12'
    explicit: 'no'
    keywords: phoenix framework, liveview, elixir, machine learning, artificial intelligence,
      distributed systems, ecto, forms, dynamic forms, checkboxes, javascript frameworks,
      live coding, realtime web, web development, web applications, full stack development,
      software development, software engineering, programming podcasts, programming
      languages, computer science, databases, database optimization, databases software,
      database management, tech podcast, tech news, tech innovations, venture capital,
      startups, scalable architecture, cloud computing, serverless computing, microservices,
      rest apis, event driven architecture, business intelligence, agile development,
      devops podcast, pair programming, test automation, kanban, lean software development,
      programming, coding, coders, developers, full stack developers, backend developers,
      frontend developers, front end development, ui development, ux design, creative
      coders, tech professionals, tech community, developer tools, git, github, nlp,
      nn, ml, deep learning, data science, data engineers, data analysts, computer
      engineers, ICT, ICT professionals, system architects, technical architects,
      IT professionals, sysadmins, sysadmin tools, appsec, cybersecurity, cryptography,
      information security, infosec, security engineers, hackers, hacking, penetration
      testing, DevSecOps
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f620debe-bde4-46bf-85fb-1032bd63b48d/cover.jpg?v=1
    summary: "\n        <p>Phoenix core team members Chris McCord and Jason Stiebs
      join Elixir Wizards Sundi Myint and Owen Bickford the growth of Phoenix and
      LiveView, the latest updates, and what they&#39;re excited to see in the future.
      They express excitement for the possibilities of machine learning, AI, and distributed
      systems and how these emerging technologies will enhance the user experience
      of Elixir and LiveView applications in the next decade.</p>\n\n<p>Key Topics
      Discussed in this Episode:</p>\n\n<ul>\n<li>How community contributions and
      feedback help improve Phoenix LiveView</li>\n<li>The addition of function components,
      declarative assigns, HEEx, and streams</li>\n<li>Why Ecto changesets should
      be used as &quot;fire and forget&quot; data structures</li>\n<li>Excitement
      about machine learning and AI with libraries like NX</li>\n<li>The possibility
      of distributed systems and actors in the future</li>\n<li>Verifying and solving
      issues in the Phoenix and LiveView issue trackers</li>\n<li>Why marketing plays
      a part in the adoption and mindshare of Phoenix</li>\n<li>How streams provide
      a primitive for arbitrarily large dynamic lists</li>\n<li>Elixir VM&#39;s ability
      to scale to millions of connections </li>\n<li>A creative use of form inputs
      for associations with dynamic children</li>\n</ul>\n\n<p>Links Mentioned in
      this Episode:</p>\n\n<p>Fly Site <a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a
      href=\"https://youtu.be/FADQAnq0RpA\" rel=\"nofollow\">Keynote: The Road To
      LiveView 1.0 by Chris McCord | ElixirConf EU 2023</a><br>\n<a href=\"https://youtu.be/INgpJ3eIKZY\"
      rel=\"nofollow\">Keynote: I Was Wrong About LiveView by Jason Stiebs | ElixirConf
      2022</a><br>\nPhoenix Site <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nPhoenix
      Github <a href=\"https://github.com/phoenixframework\" rel=\"nofollow\">https://github.com/phoenixframework</a><br>\n<a
      href=\"https://suncatcherstudio.com/uploads/birds/birdhouses/purple-martin-house-plans/images-large/purple-martin-birdhouse-plans-labeled.png\"
      rel=\"nofollow\">Two-Story, 10-Room Purple Martin House</a><br>\n<a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
      rel=\"nofollow\">Blog: The Road to 2 Million Websocket Connections in Phoenix</a><br>\nRaxx
      Elixir Webserver Interface <a href=\"https://hexdocs.pm/raxx/0.4.1/readme.html\"
      rel=\"nofollow\">https://hexdocs.pm/raxx/0.4.1/readme.html</a><br>\nLivebook
      Site <a href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\n<a
      href=\"https://twitter.com/sundikhin/status/1663930854928728064\" rel=\"nofollow\">Sundi’s
      6’x 6’ Phoenix painting</a><br>\nSurface on Hex <a href=\"https://hex.pm/packages/surface\"
      rel=\"nofollow\">https://hex.pm/packages/surface</a><br>\nAxon Deep Learning
      Framework <a href=\"https://hexdocs.pm/axon/Axon.html\" rel=\"nofollow\">https://hexdocs.pm/axon/Axon.html</a><br>\nNx
      Numerical Elixir <a href=\"https://hexdocs.pm/nx/intro-to-nx.html\" rel=\"nofollow\">https://hexdocs.pm/nx/intro-to-nx.html</a><br>\nPhoenix
      PubSub <a href=\"https://hexdocs.pm/phoenix_pubsub/Phoenix.PubSub.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_pubsub/Phoenix.PubSub.html</a><br>\nJason
      Stiebs on Twitter <a href=\"https://twitter.com/peregrine\" rel=\"nofollow\">https://twitter.com/peregrine</a><br>\nJason
      Stiebs on Mastodon <a href=\"https://merveilles.town/@peregrine\" rel=\"nofollow\">https://merveilles.town/@peregrine</a></p><p>Special
      Guests: Chris McCord and Jason Stiebs.</p>\n      "
  contentEncoded: "\n        <p>Phoenix core team members Chris McCord and Jason Stiebs
    join Elixir Wizards Sundi Myint and Owen Bickford the growth of Phoenix and LiveView,
    the latest updates, and what they&#39;re excited to see in the future. They express
    excitement for the possibilities of machine learning, AI, and distributed systems
    and how these emerging technologies will enhance the user experience of Elixir
    and LiveView applications in the next decade.</p>\n\n<p>Key Topics Discussed in
    this Episode:</p>\n\n<ul>\n<li>How community contributions and feedback help improve
    Phoenix LiveView</li>\n<li>The addition of function components, declarative assigns,
    HEEx, and streams</li>\n<li>Why Ecto changesets should be used as &quot;fire and
    forget&quot; data structures</li>\n<li>Excitement about machine learning and AI
    with libraries like NX</li>\n<li>The possibility of distributed systems and actors
    in the future</li>\n<li>Verifying and solving issues in the Phoenix and LiveView
    issue trackers</li>\n<li>Why marketing plays a part in the adoption and mindshare
    of Phoenix</li>\n<li>How streams provide a primitive for arbitrarily large dynamic
    lists</li>\n<li>Elixir VM&#39;s ability to scale to millions of connections </li>\n<li>A
    creative use of form inputs for associations with dynamic children</li>\n</ul>\n\n<p>Links
    Mentioned in this Episode:</p>\n\n<p>Fly Site <a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\n<a
    href=\"https://youtu.be/FADQAnq0RpA\" rel=\"nofollow\">Keynote: The Road To LiveView
    1.0 by Chris McCord | ElixirConf EU 2023</a><br>\n<a href=\"https://youtu.be/INgpJ3eIKZY\"
    rel=\"nofollow\">Keynote: I Was Wrong About LiveView by Jason Stiebs | ElixirConf
    2022</a><br>\nPhoenix Site <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nPhoenix
    Github <a href=\"https://github.com/phoenixframework\" rel=\"nofollow\">https://github.com/phoenixframework</a><br>\n<a
    href=\"https://suncatcherstudio.com/uploads/birds/birdhouses/purple-martin-house-plans/images-large/purple-martin-birdhouse-plans-labeled.png\"
    rel=\"nofollow\">Two-Story, 10-Room Purple Martin House</a><br>\n<a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
    rel=\"nofollow\">Blog: The Road to 2 Million Websocket Connections in Phoenix</a><br>\nRaxx
    Elixir Webserver Interface <a href=\"https://hexdocs.pm/raxx/0.4.1/readme.html\"
    rel=\"nofollow\">https://hexdocs.pm/raxx/0.4.1/readme.html</a><br>\nLivebook Site
    <a href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\n<a
    href=\"https://twitter.com/sundikhin/status/1663930854928728064\" rel=\"nofollow\">Sundi’s
    6’x 6’ Phoenix painting</a><br>\nSurface on Hex <a href=\"https://hex.pm/packages/surface\"
    rel=\"nofollow\">https://hex.pm/packages/surface</a><br>\nAxon Deep Learning Framework
    <a href=\"https://hexdocs.pm/axon/Axon.html\" rel=\"nofollow\">https://hexdocs.pm/axon/Axon.html</a><br>\nNx
    Numerical Elixir <a href=\"https://hexdocs.pm/nx/intro-to-nx.html\" rel=\"nofollow\">https://hexdocs.pm/nx/intro-to-nx.html</a><br>\nPhoenix
    PubSub <a href=\"https://hexdocs.pm/phoenix_pubsub/Phoenix.PubSub.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_pubsub/Phoenix.PubSub.html</a><br>\nJason
    Stiebs on Twitter <a href=\"https://twitter.com/peregrine\" rel=\"nofollow\">https://twitter.com/peregrine</a><br>\nJason
    Stiebs on Mastodon <a href=\"https://merveilles.town/@peregrine\" rel=\"nofollow\">https://merveilles.town/@peregrine</a></p><p>Special
    Guests: Chris McCord and Jason Stiebs.</p>\n      "
- title: Sean Moriarity on the Future of Machine Learning with Elixir
  slug: s10-e10-sean-moriarity-machine-learning-elixir
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e10-sean-moriarity-machine-learning-elixir
  guid: 0b2c38e9-0176-4c77-8bb8-74ccfdc0a606
  pubDate: Thu, 25 May 2023 06:00:00 -0400
  pubDateFriendly: May 25, 2023
  description: |
    Sean Moriarity, author of Genetic Algorithms in Elixir and creator of the Axon Library, joins Elixir Wizards Sundi Myint and Bilal Hankins to discuss Elixir’s role in the future of machine learning and AI. He explains the difference between artificial intelligence, chat models, machine learning, deep learning systems, and neural networks.
    Large language models have great potential for code generation, education tools, streamlining workflow, and more. Deployment, development experience, and real-time processing make Elixir an ideal programming language for creating and improving machine learning tools.
    Key Topics Discussed in this Episode:
    The difference between machine learning and artificial intelligence
    How Axon builds on top of the Nx library for deep learning in Elixir
    Why logic cannot fully define characteristics that identify golden retrievers
    How Google Translate uses machine learning with a unified language model
    The difficulties in translating concepts with no direct counterpart between languages
    Data cleaning and labeling challenges
    How Sean's interest in sports betting led to exploring machine learning
    Why Sean's NBA betting model recommended betting $0 to maximize profit
    Getting started with machine learning and Elixir projects
    Attention mechanisms in neural networks
    Bias and exceptions in machine translation models
    How hummus preference was used to determine Sundi's Hogwarts house
    Sean's work on a LiveView interface for ChatGPT
    Why Elixir's deployment story, development experience, and real-time processing are good fits for machine learning applications
    Links Mentioned:
    Genetic Algorithms in Elixir by Sean Moriarity: https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/
    Axon Deep Learning in Elixir: https://seanmoriarity.com/2021/04/08/axon-deep-learning-in-elixir/
    Nx Axon: https://github.com/elixir-nx/axon
    Sean’s Twitter: https://twitter.com/seanmoriarity
    Weston the Golden’s IG: https://www.instagram.com/westonthegolden/
    Sean’s Github: https://github.com/seanmor5
    Bumblebee: https://github.com/elixir-nx/bumblebee
    Sal Khan’s TedTalk about AI in Education: https://www.ted.com/talks/salkhanhowaicouldsavenotdestroyeducation/c
    Publicly Available Datasets/Intro to Machine Learning: https://www.kaggle.com/
    Use code WIZARD for $100 off your ticket to Empex NYC in Brooklyn, NY on June 9, 2023 https://ti.to/empex-ny/empex-nyc-2023
     Special Guest: Sean Moriarity.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+wan2MMjK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0b2c38e9-0176-4c77-8bb8-74ccfdc0a606.mp3
    length: '92090226'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: Sean Moriarity, author of Genetic Algorithms in Elixir and creator of
      the Axon Library, joins Elixir Wizards Sundi Myint and Bilal Hankins to discuss
      Elixir’s role in the future of machine learning and AI. He explains the difference
      between artificial intelligence, chat models, machine learning, deep learning
      systems, and neural networks.
    duration: '47:18'
    explicit: 'no'
    keywords: Elixir Wizards Podcast, Elixir Programming Language, Machine learning,
      AI, Elixir, Sean Moriarity interview, Genetic Algorithms, artificial intelligence,
      Neural networks explained, chat models, Deep learning, ML applications, bots,
      cyber security, Unified language models, translation, Data cleaning and labeling,
      Attention mechanisms in neural networks, Bias in machine learning models, Phoenix
      LiveView,ChatGPT, app deployment, Real-time processing, AI development, Elixir
      coding for machine learning, Advanced ML techniques, Elixir community, Innovations
      in tech, Elixir and deep learning frameworks, AI research, AI advancements,
      natural language processing
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0b2c38e9-0176-4c77-8bb8-74ccfdc0a606/cover.jpg?v=1
    summary: "\n        <p>Sean Moriarity, author of Genetic Algorithms in Elixir
      and creator of the Axon Library, joins Elixir Wizards Sundi Myint and Bilal
      Hankins to discuss Elixir’s role in the future of machine learning and AI. He
      explains the difference between artificial intelligence, chat models, machine
      learning, deep learning systems, and neural networks.</p>\n\n<p>Large language
      models have great potential for code generation, education tools, streamlining
      workflow, and more. Deployment, development experience, and real-time processing
      make Elixir an ideal programming language for creating and improving machine
      learning tools.</p>\n\n<p>Key Topics Discussed in this Episode:</p>\n\n<ul>\n<li>The
      difference between machine learning and artificial intelligence</li>\n<li>How
      Axon builds on top of the Nx library for deep learning in Elixir</li>\n<li>Why
      logic cannot fully define characteristics that identify golden retrievers</li>\n<li>How
      Google Translate uses machine learning with a unified language model</li>\n<li>The
      difficulties in translating concepts with no direct counterpart between languages</li>\n<li>Data
      cleaning and labeling challenges</li>\n<li>How Sean&#39;s interest in sports
      betting led to exploring machine learning</li>\n<li>Why Sean&#39;s NBA betting
      model recommended betting $0 to maximize profit</li>\n<li>Getting started with
      machine learning and Elixir projects</li>\n<li>Attention mechanisms in neural
      networks</li>\n<li>Bias and exceptions in machine translation models</li>\n<li>How
      hummus preference was used to determine Sundi&#39;s Hogwarts house</li>\n<li>Sean&#39;s
      work on a LiveView interface for ChatGPT</li>\n<li>Why Elixir&#39;s deployment
      story, development experience, and real-time processing are good fits for machine
      learning applications</li>\n</ul>\n\n<p>Links Mentioned:</p>\n\n<p>Genetic Algorithms
      in Elixir by Sean Moriarity: <a href=\"https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/\"
      rel=\"nofollow\">https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/</a><br>\nAxon
      Deep Learning in Elixir: <a href=\"https://seanmoriarity.com/2021/04/08/axon-deep-learning-in-elixir/\"
      rel=\"nofollow\">https://seanmoriarity.com/2021/04/08/axon-deep-learning-in-elixir/</a><br>\nNx
      Axon: <a href=\"https://github.com/elixir-nx/axon\" rel=\"nofollow\">https://github.com/elixir-nx/axon</a><br>\nSean’s
      Twitter: <a href=\"https://twitter.com/sean_moriarity\" rel=\"nofollow\">https://twitter.com/sean_moriarity</a><br>\nWeston
      the Golden’s IG: <a href=\"https://www.instagram.com/westonthegolden_/\" rel=\"nofollow\">https://www.instagram.com/westonthegolden_/</a><br>\nSean’s
      Github: <a href=\"https://github.com/seanmor5\" rel=\"nofollow\">https://github.com/seanmor5</a><br>\nBumblebee:
      <a href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\nSal
      Khan’s TedTalk about AI in Education: <a href=\"https://www.ted.com/talks/sal_khan_how_ai_could_save_not_destroy_education/c\"
      rel=\"nofollow\">https://www.ted.com/talks/sal_khan_how_ai_could_save_not_destroy_education/c</a><br>\nPublicly
      Available Datasets/Intro to Machine Learning: <a href=\"https://www.kaggle.com/\"
      rel=\"nofollow\">https://www.kaggle.com/</a><br>\nUse code <strong>WIZARD</strong>
      for $100 off your ticket to Empex NYC in Brooklyn, NY on June 9, 2023 <a href=\"https://ti.to/empex-ny/empex-nyc-2023\"
      rel=\"nofollow\">https://ti.to/empex-ny/empex-nyc-2023</a></p><p>Special Guest:
      Sean Moriarity.</p>\n      "
  contentEncoded: "\n        <p>Sean Moriarity, author of Genetic Algorithms in Elixir
    and creator of the Axon Library, joins Elixir Wizards Sundi Myint and Bilal Hankins
    to discuss Elixir’s role in the future of machine learning and AI. He explains
    the difference between artificial intelligence, chat models, machine learning,
    deep learning systems, and neural networks.</p>\n\n<p>Large language models have
    great potential for code generation, education tools, streamlining workflow, and
    more. Deployment, development experience, and real-time processing make Elixir
    an ideal programming language for creating and improving machine learning tools.</p>\n\n<p>Key
    Topics Discussed in this Episode:</p>\n\n<ul>\n<li>The difference between machine
    learning and artificial intelligence</li>\n<li>How Axon builds on top of the Nx
    library for deep learning in Elixir</li>\n<li>Why logic cannot fully define characteristics
    that identify golden retrievers</li>\n<li>How Google Translate uses machine learning
    with a unified language model</li>\n<li>The difficulties in translating concepts
    with no direct counterpart between languages</li>\n<li>Data cleaning and labeling
    challenges</li>\n<li>How Sean&#39;s interest in sports betting led to exploring
    machine learning</li>\n<li>Why Sean&#39;s NBA betting model recommended betting
    $0 to maximize profit</li>\n<li>Getting started with machine learning and Elixir
    projects</li>\n<li>Attention mechanisms in neural networks</li>\n<li>Bias and
    exceptions in machine translation models</li>\n<li>How hummus preference was used
    to determine Sundi&#39;s Hogwarts house</li>\n<li>Sean&#39;s work on a LiveView
    interface for ChatGPT</li>\n<li>Why Elixir&#39;s deployment story, development
    experience, and real-time processing are good fits for machine learning applications</li>\n</ul>\n\n<p>Links
    Mentioned:</p>\n\n<p>Genetic Algorithms in Elixir by Sean Moriarity: <a href=\"https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/\"
    rel=\"nofollow\">https://pragprog.com/titles/smgaelixir/genetic-algorithms-in-elixir/</a><br>\nAxon
    Deep Learning in Elixir: <a href=\"https://seanmoriarity.com/2021/04/08/axon-deep-learning-in-elixir/\"
    rel=\"nofollow\">https://seanmoriarity.com/2021/04/08/axon-deep-learning-in-elixir/</a><br>\nNx
    Axon: <a href=\"https://github.com/elixir-nx/axon\" rel=\"nofollow\">https://github.com/elixir-nx/axon</a><br>\nSean’s
    Twitter: <a href=\"https://twitter.com/sean_moriarity\" rel=\"nofollow\">https://twitter.com/sean_moriarity</a><br>\nWeston
    the Golden’s IG: <a href=\"https://www.instagram.com/westonthegolden_/\" rel=\"nofollow\">https://www.instagram.com/westonthegolden_/</a><br>\nSean’s
    Github: <a href=\"https://github.com/seanmor5\" rel=\"nofollow\">https://github.com/seanmor5</a><br>\nBumblebee:
    <a href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a><br>\nSal
    Khan’s TedTalk about AI in Education: <a href=\"https://www.ted.com/talks/sal_khan_how_ai_could_save_not_destroy_education/c\"
    rel=\"nofollow\">https://www.ted.com/talks/sal_khan_how_ai_could_save_not_destroy_education/c</a><br>\nPublicly
    Available Datasets/Intro to Machine Learning: <a href=\"https://www.kaggle.com/\"
    rel=\"nofollow\">https://www.kaggle.com/</a><br>\nUse code <strong>WIZARD</strong>
    for $100 off your ticket to Empex NYC in Brooklyn, NY on June 9, 2023 <a href=\"https://ti.to/empex-ny/empex-nyc-2023\"
    rel=\"nofollow\">https://ti.to/empex-ny/empex-nyc-2023</a></p><p>Special Guest:
    Sean Moriarity.</p>\n      "
- title: Hugo Baraúna & Lucas San Roman on the Future of the Elixir Community
  slug: s10-e09-hugo-lucas-future-of-elixir-community
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e09-hugo-lucas-future-of-elixir-community
  guid: 6dc7a90d-891e-44ae-81b5-3768ea56ebe8
  pubDate: Thu, 18 May 2023 06:00:00 -0400
  pubDateFriendly: May 18, 2023
  description: |
    In this episode of the Elixir Wizards podcast, hosts Sundi Myint and Owen Bickford are joined by Hugo Baraúna, founder at Elixir Radar, and Lucas San Roman, senior software engineer at Felt. We dive into the future of the Elixir community, how we stay connected, and the remarkable culture that has developed over the past decade.
    Key highlights in this episode:
    The Elixir community's warm and inviting atmosphere
    Commitment to long-term stability and innovation in the Elixir community
    How projects like Nerves, Phoenix LiveView, and Livebook expand Elixir's capabilities
    Global connections and support among Elixirists via Slack and Discord
    The Elixir Radar newsletter provides up-to-date Elixir news and community developments
    Getting “nerd sniped” by the community
    Hugo Baraúna's motivation behind Elixir Radar and its impact on the tech industry
    Networking opportunities and relationship-building within the community
    Lucas San Roman's commitment to giving back with the Sourcerer Library
    Plans for more advanced collaboration in Livebook with the new Teams feature
    The potential introduction of a type system in Elixir
    Links mentioned in this episode:
    Elixir Radar: https://elixir-radar.com/
    Felt: https://felt.com/
    Ruby Weekly: https://rubyweekly.com/
    The Elixir Discord Server: https://discord.com/invite/elixir
    Code Fragment: https://hexdocs.pm/elixir/Code.Fragment.html
    The Sourcerer Library: https://github.com/doorgan/sourceror
    Livebook: https://livebook.dev/
    Lucas’ Blog: https://dorgan.ar/
    Hugo’s Twitter: https://twitter.com/hugobarauna
    Elixir Radar on Twitter: https://twitter.com/elixirradar
    Livebook on Twitter: https://twitter.com/livebookdev
    Lucas’ Twitter https://twitter.com/dorgan
    Guillaume Duboc Bringing Types to Elixir at ElixirConf EU 2023 (https://www.youtube.com/watch?v=gJJH7a2J9O8)
    Lucas on GitHub: https://github.com/doorgan
    Rooster Fighter on Easter Island (https://preview.redd.it/7v4aqvvtcwk61.jpg?width=960&crop=smart&auto=webp&v=enabled&s=a6ec117965d192f4f32a68ace90388424d15ba29)
    Rooster Fighter at Iguazu Falls in Argentina (https://i.kym-cdn.com/photos/images/newsfeed/002/038/658/2c4)
    Use code WIZARD for $100 off your ticket to Empex NYC (https://ti.to/empex-ny/empex-nyc-2023) in Brooklyn, NY on June 9, 2023
     Special Guests: Hugo Baraúna and Lucas San Roman.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9lnUI7QF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6dc7a90d-891e-44ae-81b5-3768ea56ebe8.mp3
    length: '98840711'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In this episode of the Elixir Wizards podcast, hosts Sundi Myint and
      Owen Bickford are joined by Hugo Baraúna, founder at Elixir Radar, and Lucas
      San Roman, senior software engineer at Felt. We dive into the future of the
      Elixir community, how we stay connected, and the remarkable culture that has
      developed over the past decade.
    duration: '50:48'
    explicit: 'no'
    keywords: Elixir programming language, Elixir community, developer, programming,
      software developers, Nerves framework, Phoenix LiveView, Livebook, tech, Hugo
      Barauna, Lucas San Roman, code analysis, dynamic types, type systems, static
      types, jobs in tech, dynamic languages, documentation, IT, cyber security, web
      development, AI landscape, ML, machine learning, tech trends, ruby, rails, CSS,
      c++, javascript
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6dc7a90d-891e-44ae-81b5-3768ea56ebe8/cover.jpg?v=1
    summary: "\n        <p>In this episode of the Elixir Wizards podcast, hosts Sundi
      Myint and Owen Bickford are joined by Hugo Baraúna, founder at Elixir Radar,
      and Lucas San Roman, senior software engineer at Felt. We dive into the future
      of the Elixir community, how we stay connected, and the remarkable culture that
      has developed over the past decade.</p>\n\n<p>Key highlights in this episode:</p>\n\n<ul>\n<li>The
      Elixir community&#39;s warm and inviting atmosphere</li>\n<li>Commitment to
      long-term stability and innovation in the Elixir community</li>\n<li>How projects
      like Nerves, Phoenix LiveView, and Livebook expand Elixir&#39;s capabilities</li>\n<li>Global
      connections and support among Elixirists via Slack and Discord</li>\n<li>The
      Elixir Radar newsletter provides up-to-date Elixir news and community developments</li>\n<li>Getting
      “nerd sniped” by the community</li>\n<li>Hugo Baraúna&#39;s motivation behind
      Elixir Radar and its impact on the tech industry</li>\n<li>Networking opportunities
      and relationship-building within the community</li>\n<li>Lucas San Roman&#39;s
      commitment to giving back with the Sourcerer Library</li>\n<li>Plans for more
      advanced collaboration in Livebook with the new Teams feature</li>\n<li>The
      potential introduction of a type system in Elixir</li>\n</ul>\n\n<p>Links mentioned
      in this episode:</p>\n\n<p>Elixir Radar: <a href=\"https://elixir-radar.com/\"
      rel=\"nofollow\">https://elixir-radar.com/</a><br>\nFelt: <a href=\"https://felt.com/\"
      rel=\"nofollow\">https://felt.com/</a><br>\nRuby Weekly: <a href=\"https://rubyweekly.com/\"
      rel=\"nofollow\">https://rubyweekly.com/</a><br>\nThe Elixir Discord Server:
      <a href=\"https://discord.com/invite/elixir\" rel=\"nofollow\">https://discord.com/invite/elixir</a><br>\nCode
      Fragment: <a href=\"https://hexdocs.pm/elixir/Code.Fragment.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Code.Fragment.html</a><br>\nThe
      Sourcerer Library: <a href=\"https://github.com/doorgan/sourceror\" rel=\"nofollow\">https://github.com/doorgan/sourceror</a><br>\nLivebook:
      <a href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\nLucas’
      Blog: <a href=\"https://dorgan.ar/\" rel=\"nofollow\">https://dorgan.ar/</a><br>\nHugo’s
      Twitter: <a href=\"https://twitter.com/hugobarauna\" rel=\"nofollow\">https://twitter.com/hugobarauna</a><br>\nElixir
      Radar on Twitter: <a href=\"https://twitter.com/elixir_radar\" rel=\"nofollow\">https://twitter.com/elixir_radar</a><br>\nLivebook
      on Twitter: <a href=\"https://twitter.com/livebookdev\" rel=\"nofollow\">https://twitter.com/livebookdev</a><br>\nLucas’
      Twitter <a href=\"https://twitter.com/dorgan_\" rel=\"nofollow\">https://twitter.com/dorgan_</a><br>\nGuillaume
      Duboc <a href=\"https://www.youtube.com/watch?v=gJJH7a2J9O8\" rel=\"nofollow\">Bringing
      Types to Elixir at ElixirConf EU 2023</a><br>\nLucas on GitHub: <a href=\"https://github.com/doorgan\"
      rel=\"nofollow\">https://github.com/doorgan</a><br>\n<a href=\"https://preview.redd.it/7v4aqvvtcwk61.jpg?width=960&crop=smart&auto=webp&v=enabled&s=a6ec117965d192f4f32a68ace90388424d15ba29\"
      rel=\"nofollow\">Rooster Fighter on Easter Island</a><br>\n<a href=\"https://i.kym-cdn.com/photos/images/newsfeed/002/038/658/2c4\"
      rel=\"nofollow\">Rooster Fighter at Iguazu Falls in Argentina</a></p>\n\n<p>Use
      code <strong>WIZARD</strong> for $100 off your <a href=\"https://ti.to/empex-ny/empex-nyc-2023\"
      rel=\"nofollow\">ticket to Empex NYC</a> in Brooklyn, NY on June 9, 2023</p><p>Special
      Guests: Hugo Baraúna and Lucas San Roman.</p>\n      "
  contentEncoded: "\n        <p>In this episode of the Elixir Wizards podcast, hosts
    Sundi Myint and Owen Bickford are joined by Hugo Baraúna, founder at Elixir Radar,
    and Lucas San Roman, senior software engineer at Felt. We dive into the future
    of the Elixir community, how we stay connected, and the remarkable culture that
    has developed over the past decade.</p>\n\n<p>Key highlights in this episode:</p>\n\n<ul>\n<li>The
    Elixir community&#39;s warm and inviting atmosphere</li>\n<li>Commitment to long-term
    stability and innovation in the Elixir community</li>\n<li>How projects like Nerves,
    Phoenix LiveView, and Livebook expand Elixir&#39;s capabilities</li>\n<li>Global
    connections and support among Elixirists via Slack and Discord</li>\n<li>The Elixir
    Radar newsletter provides up-to-date Elixir news and community developments</li>\n<li>Getting
    “nerd sniped” by the community</li>\n<li>Hugo Baraúna&#39;s motivation behind
    Elixir Radar and its impact on the tech industry</li>\n<li>Networking opportunities
    and relationship-building within the community</li>\n<li>Lucas San Roman&#39;s
    commitment to giving back with the Sourcerer Library</li>\n<li>Plans for more
    advanced collaboration in Livebook with the new Teams feature</li>\n<li>The potential
    introduction of a type system in Elixir</li>\n</ul>\n\n<p>Links mentioned in this
    episode:</p>\n\n<p>Elixir Radar: <a href=\"https://elixir-radar.com/\" rel=\"nofollow\">https://elixir-radar.com/</a><br>\nFelt:
    <a href=\"https://felt.com/\" rel=\"nofollow\">https://felt.com/</a><br>\nRuby
    Weekly: <a href=\"https://rubyweekly.com/\" rel=\"nofollow\">https://rubyweekly.com/</a><br>\nThe
    Elixir Discord Server: <a href=\"https://discord.com/invite/elixir\" rel=\"nofollow\">https://discord.com/invite/elixir</a><br>\nCode
    Fragment: <a href=\"https://hexdocs.pm/elixir/Code.Fragment.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Code.Fragment.html</a><br>\nThe
    Sourcerer Library: <a href=\"https://github.com/doorgan/sourceror\" rel=\"nofollow\">https://github.com/doorgan/sourceror</a><br>\nLivebook:
    <a href=\"https://livebook.dev/\" rel=\"nofollow\">https://livebook.dev/</a><br>\nLucas’
    Blog: <a href=\"https://dorgan.ar/\" rel=\"nofollow\">https://dorgan.ar/</a><br>\nHugo’s
    Twitter: <a href=\"https://twitter.com/hugobarauna\" rel=\"nofollow\">https://twitter.com/hugobarauna</a><br>\nElixir
    Radar on Twitter: <a href=\"https://twitter.com/elixir_radar\" rel=\"nofollow\">https://twitter.com/elixir_radar</a><br>\nLivebook
    on Twitter: <a href=\"https://twitter.com/livebookdev\" rel=\"nofollow\">https://twitter.com/livebookdev</a><br>\nLucas’
    Twitter <a href=\"https://twitter.com/dorgan_\" rel=\"nofollow\">https://twitter.com/dorgan_</a><br>\nGuillaume
    Duboc <a href=\"https://www.youtube.com/watch?v=gJJH7a2J9O8\" rel=\"nofollow\">Bringing
    Types to Elixir at ElixirConf EU 2023</a><br>\nLucas on GitHub: <a href=\"https://github.com/doorgan\"
    rel=\"nofollow\">https://github.com/doorgan</a><br>\n<a href=\"https://preview.redd.it/7v4aqvvtcwk61.jpg?width=960&crop=smart&auto=webp&v=enabled&s=a6ec117965d192f4f32a68ace90388424d15ba29\"
    rel=\"nofollow\">Rooster Fighter on Easter Island</a><br>\n<a href=\"https://i.kym-cdn.com/photos/images/newsfeed/002/038/658/2c4\"
    rel=\"nofollow\">Rooster Fighter at Iguazu Falls in Argentina</a></p>\n\n<p>Use
    code <strong>WIZARD</strong> for $100 off your <a href=\"https://ti.to/empex-ny/empex-nyc-2023\"
    rel=\"nofollow\">ticket to Empex NYC</a> in Brooklyn, NY on June 9, 2023</p><p>Special
    Guests: Hugo Baraúna and Lucas San Roman.</p>\n      "
- title: " José Valim on the Future of the Elixir Ecosystem"
  slug: s10-e08-jose-valim-future-elixir-ecosystem
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e08-jose-valim-future-elixir-ecosystem
  guid: e0010c09-5980-4cb8-bed4-a94a45ce0549
  pubDate: Thu, 11 May 2023 06:00:00 -0400
  pubDateFriendly: May 11, 2023
  description: |
    Today on Elixir Wizards, José Valim, creator of the Elixir programming language, joins hosts Sundi Myint and Owen Bickford to discuss the future of Elixir, upcoming features, changes to the language and ecosystem, and the potential for a type system.
    José discusses how Elixir’s extensibility allows the ecosystem to grow with new tools and libraries, all while requiring few languages to the core language.
    Key Takeaways:
    The origin of the famous rainbow heart combo
    José’s hands-off approach to planning the ecosystem which allows community contribution without reliance on the core team
    The success and growth of the Elixir community
    Lessons learned in the first ten years of the language
    The evolution of Elixir's documentation and the role of Livebook in creating more interactive and engaging learning experiences
    The potential for Elixir Nx to make numerical computation, machine learning, and data science more accessible to Elixir developers
    Potential implementation of a gradual type system and the importance of backwards compatibility
    The role of the Elixir community in shaping the language's development and ecosystem, including the importance of open-source contributions
    Whether we’ll see Elixir 2.0 in the next decade
    Links mentioned in this episode:
    Josė Valim Keynote ElixirConf EU Bringing Elixir to Life (https://www.youtube.com/watch?v=xItzdrzY1Dc)
    Dashbit - https://dashbit.co/
    Elixir programming language: https://elixir-lang.org/
    ElixirConf: https://elixirconf.com/
    ElixirForum: https://elixirforum.com/
    Elixir's Logger library: https://hexdocs.pm/logger/Logger.html
    José's Twitter: https://twitter.com/josevalim
    ElixirLS (Elixir Language Server) https://github.com/elixir-lsp/elixir-ls
    Mermaid Charts in Livebook - https://news.livebook.dev/date/2022/1
    IEx - https://hexdocs.pm/iex/1.14/IEx.html
    Numerical Elixir - Nx: https://hexdocs.pm/nx/getting-started.html
    Nerves: https://hexdocs.pm/nerves/getting-started.html
    Membrane: https://hexdocs.pm/membrane/getting-started.html
    Dialyxir: https://hexdocs.pm/dialyxir/readme.html
    LiveBook: https://hexdocs.pm/livebook/getting-started.html
    Bumblebee: https://github.com/elixir-nx/bumblebee
     Special Guest: José Valim.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+8QYd3PWe
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e0010c09-5980-4cb8-bed4-a94a45ce0549.mp3
    length: '85400484'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, José Valim, creator of the Elixir programming
      language, joins hosts Sundi Myint and Owen Bickford to discuss the future of
      Elixir, upcoming features, changes to the language and ecosystem, and the potential
      for a type system.
    duration: '43:57'
    explicit: 'no'
    keywords: José Valim, Elixir, programming, software development, software engineering,
      functional programming, concurrency, actor model, Erlang VM, Phoenix framework,
      Ecto, GraphQL, types, type systems, Phoenix LiveView, LiveBook, Nx, Numerical
      Elixir, GPU programming, Nerves, embedded systems, Membrane, machine learning,
      artificial intelligence, AI, open source, decentralization, extensibility, scalability,
      maintainability, code quality, continuous learning, Empex, SmartLogic, APIs,
      cloud computing, microservices, web development, front-end development, back-end
      development, full-stack development, serverless, debugging, testing, refactoring,
      design patterns, software architecture, software design, software deployment
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e0010c09-5980-4cb8-bed4-a94a45ce0549/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, José Valim, creator of the Elixir
      programming language, joins hosts Sundi Myint and Owen Bickford to discuss the
      future of Elixir, upcoming features, changes to the language and ecosystem,
      and the potential for a type system.</p>\n\n<p>José discusses how Elixir’s extensibility
      allows the ecosystem to grow with new tools and libraries, all while requiring
      few languages to the core language.</p>\n\n<p>Key Takeaways:</p>\n\n<ul>\n<li>The
      origin of the famous rainbow heart combo</li>\n<li>José’s hands-off approach
      to planning the ecosystem which allows community contribution without reliance
      on the core team</li>\n<li>The success and growth of the Elixir community</li>\n<li>Lessons
      learned in the first ten years of the language</li>\n<li>The evolution of Elixir&#39;s
      documentation and the role of Livebook in creating more interactive and engaging
      learning experiences</li>\n<li>The potential for Elixir Nx to make numerical
      computation, machine learning, and data science more accessible to Elixir developers</li>\n<li>Potential
      implementation of a gradual type system and the importance of backwards compatibility</li>\n<li>The
      role of the Elixir community in shaping the language&#39;s development and ecosystem,
      including the importance of open-source contributions</li>\n<li>Whether we’ll
      see Elixir 2.0 in the next decade</li>\n</ul>\n\n<p>Links mentioned in this
      episode:</p>\n\n<p>Josė Valim Keynote ElixirConf EU <a href=\"https://www.youtube.com/watch?v=xItzdrzY1Dc\"
      rel=\"nofollow\">Bringing Elixir to Life</a><br>\nDashbit - <a href=\"https://dashbit.co/\"
      rel=\"nofollow\">https://dashbit.co/</a><br>\nElixir programming language: <a
      href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nElixirConf:
      <a href=\"https://elixirconf.com/\" rel=\"nofollow\">https://elixirconf.com/</a><br>\nElixirForum:
      <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir&#39;s
      Logger library: <a href=\"https://hexdocs.pm/logger/Logger.html\" rel=\"nofollow\">https://hexdocs.pm/logger/Logger.html</a><br>\nJosé&#39;s
      Twitter: <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nElixirLS
      (Elixir Language Server) <a href=\"https://github.com/elixir-lsp/elixir-ls\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nMermaid Charts
      in Livebook - <a href=\"https://news.livebook.dev/date/2022/1\" rel=\"nofollow\">https://news.livebook.dev/date/2022/1</a><br>\nIEx
      - <a href=\"https://hexdocs.pm/iex/1.14/IEx.html\" rel=\"nofollow\">https://hexdocs.pm/iex/1.14/IEx.html</a><br>\nNumerical
      Elixir - Nx: <a href=\"https://hexdocs.pm/nx/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nx/getting-started.html</a><br>\nNerves:
      <a href=\"https://hexdocs.pm/nerves/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nerves/getting-started.html</a><br>\nMembrane:
      <a href=\"https://hexdocs.pm/membrane/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/membrane/getting-started.html</a><br>\nDialyxir:
      <a href=\"https://hexdocs.pm/dialyxir/readme.html\" rel=\"nofollow\">https://hexdocs.pm/dialyxir/readme.html</a><br>\nLiveBook:
      <a href=\"https://hexdocs.pm/livebook/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/livebook/getting-started.html</a><br>\nBumblebee:
      <a href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a></p><p>Special
      Guest: José Valim.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, José Valim, creator of the
    Elixir programming language, joins hosts Sundi Myint and Owen Bickford to discuss
    the future of Elixir, upcoming features, changes to the language and ecosystem,
    and the potential for a type system.</p>\n\n<p>José discusses how Elixir’s extensibility
    allows the ecosystem to grow with new tools and libraries, all while requiring
    few languages to the core language.</p>\n\n<p>Key Takeaways:</p>\n\n<ul>\n<li>The
    origin of the famous rainbow heart combo</li>\n<li>José’s hands-off approach to
    planning the ecosystem which allows community contribution without reliance on
    the core team</li>\n<li>The success and growth of the Elixir community</li>\n<li>Lessons
    learned in the first ten years of the language</li>\n<li>The evolution of Elixir&#39;s
    documentation and the role of Livebook in creating more interactive and engaging
    learning experiences</li>\n<li>The potential for Elixir Nx to make numerical computation,
    machine learning, and data science more accessible to Elixir developers</li>\n<li>Potential
    implementation of a gradual type system and the importance of backwards compatibility</li>\n<li>The
    role of the Elixir community in shaping the language&#39;s development and ecosystem,
    including the importance of open-source contributions</li>\n<li>Whether we’ll
    see Elixir 2.0 in the next decade</li>\n</ul>\n\n<p>Links mentioned in this episode:</p>\n\n<p>Josė
    Valim Keynote ElixirConf EU <a href=\"https://www.youtube.com/watch?v=xItzdrzY1Dc\"
    rel=\"nofollow\">Bringing Elixir to Life</a><br>\nDashbit - <a href=\"https://dashbit.co/\"
    rel=\"nofollow\">https://dashbit.co/</a><br>\nElixir programming language: <a
    href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nElixirConf:
    <a href=\"https://elixirconf.com/\" rel=\"nofollow\">https://elixirconf.com/</a><br>\nElixirForum:
    <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir&#39;s
    Logger library: <a href=\"https://hexdocs.pm/logger/Logger.html\" rel=\"nofollow\">https://hexdocs.pm/logger/Logger.html</a><br>\nJosé&#39;s
    Twitter: <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nElixirLS
    (Elixir Language Server) <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nMermaid
    Charts in Livebook - <a href=\"https://news.livebook.dev/date/2022/1\" rel=\"nofollow\">https://news.livebook.dev/date/2022/1</a><br>\nIEx
    - <a href=\"https://hexdocs.pm/iex/1.14/IEx.html\" rel=\"nofollow\">https://hexdocs.pm/iex/1.14/IEx.html</a><br>\nNumerical
    Elixir - Nx: <a href=\"https://hexdocs.pm/nx/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nx/getting-started.html</a><br>\nNerves:
    <a href=\"https://hexdocs.pm/nerves/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nerves/getting-started.html</a><br>\nMembrane:
    <a href=\"https://hexdocs.pm/membrane/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/membrane/getting-started.html</a><br>\nDialyxir:
    <a href=\"https://hexdocs.pm/dialyxir/readme.html\" rel=\"nofollow\">https://hexdocs.pm/dialyxir/readme.html</a><br>\nLiveBook:
    <a href=\"https://hexdocs.pm/livebook/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/livebook/getting-started.html</a><br>\nBumblebee:
    <a href=\"https://github.com/elixir-nx/bumblebee\" rel=\"nofollow\">https://github.com/elixir-nx/bumblebee</a></p><p>Special
    Guest: José Valim.</p>\n      "
- title: Saša Jurić on The Future of Training & Education in Elixir
  slug: s10-e07-sasa-juric-elixir-training-education
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e07-sasa-juric-elixir-training-education
  guid: 017fd895-8f38-4011-8b7b-2536c356587e
  pubDate: Thu, 04 May 2023 06:00:00 -0400
  pubDateFriendly: May  4, 2023
  description: |
    Today on Elixir Wizards, Sundi Myint and Owen Bickford are joined by Saša Jurić, distinguished developer, mentor, and author of Elixir in Action. They discuss the future of training and education in Elixir, challenges faced by new Elixir developers, Phoenix generators, peer mentorship, the emergence of types, and when it’s time to close the umbrella.
    Key Takeaways:
    The functional programming paradigm, the actor model, and concurrency
    Adapting to the Elixir syntax and tooling
    The role of community, mentorship, and continuous learning in Elixir education
    The pros and cons of Phoenix generators for Elixir development
    Customizing templates in the Phoenix priv directory to better suit individual needs
    The importance of understanding and adapting generated code for maintainability and proper abstractions
    Importance of having a clear separation between core and interface
    Adapting to different opinions and preferences within a development team
    Refactoring and restructuring code to improve quality and reduce complexity
    Static typing for better documentation and the limitations of dynamic code
    Umbrella apps vs. mix configuration and how to avoid complexity
    Links Mentioned in this Episode:
    Enter to win a copy of Elixir in Action: https://smr.tl/2023bookgiveaway
    Elixir in Action by Saša Jurić https://www.manning.com/books/elixir-in-action
    35% discount code for book on manning.com: podexwizards20
    Saša’s Website/Blog TheErlangelist.com (https://www.theerlangelist.com/)
    Towards Maintainable Elixir - Saša Jurić's Medium Blog Article Series (https://medium.com/very-big-things/towards-maintainable-elixir-the-core-and-the-interface-c267f0da43)
    Boundary (https://hex.pm/packages/boundary): Managing cross-module dependencies in Elixir projects
    Site Encrypt (https://hex.pm/packages/site_encrypt): Integrated Certification via Let's Encrypt for Elixir-powered sites
    Authentication Generator in Phoenix: https://hexdocs.pm/phoenix/mixphxgen_auth.html
    Ecto query generator for Elixir https://hexdocs.pm/ecto/Ecto.html
    GraphQL: Query language for APIs https://graphql.org/
    Dialyxir: https://hexdocs.pm/dialyxir/readme.html
    Nx (Numerical Elixir) GitHub Repository: https://github.com/elixir-nx/nx
    ElixirLS (Elixir Language Server) GitHub Repository: https://github.com/elixir-lsp/elixir-ls Special Guest: Saša Jurić.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+eg7mM4bH
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/017fd895-8f38-4011-8b7b-2536c356587e.mp3
    length: '89496627'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Sundi Myint and Owen Bickford are joined by
      Saša Jurić, distinguished developer, mentor, and author of Elixir in Action.
      They discuss the future of training and education in Elixir, challenges faced
      by new Elixir developers, Phoenix generators, peer mentorship, the emergence
      of types, and when it’s time to close the umbrella.
    duration: '46:27'
    explicit: 'no'
    keywords: Elixir, programming, software development, education, training, mentorship,
      functional programming, actor model, concurrency, Phoenix generators, Ecto,
      GraphQL, Dialyzer, Nx, ElixirLS, types, maintainability, abstractions, code
      quality, complexity, community, peer learning, continuous improvement, refactoring,
      software architecture, mix configuration, umbrella apps, software engineering,
      Saša Jurić, Elixir in Action, SmartLogic, Erlang, Erlang VM, software design
      patterns, distributed systems, tech industry, software tools, open-source, web
      development, mobile development, back-end development, front-end development,
      software craftsmanship, programming languages, Python, Ruby, Java, JavaScript,
      Go, Rust
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/017fd895-8f38-4011-8b7b-2536c356587e/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Sundi Myint and Owen Bickford
      are joined by Saša Jurić, distinguished developer, mentor, and author of Elixir
      in Action. They discuss the future of training and education in Elixir, challenges
      faced by new Elixir developers, Phoenix generators, peer mentorship, the emergence
      of types, and when it’s time to close the umbrella.</p>\n\n<p><strong>Key Takeaways:</strong></p>\n\n<ul>\n<li>The
      functional programming paradigm, the actor model, and concurrency</li>\n<li>Adapting
      to the Elixir syntax and tooling</li>\n<li>The role of community, mentorship,
      and continuous learning in Elixir education</li>\n<li>The pros and cons of Phoenix
      generators for Elixir development</li>\n<li>Customizing templates in the Phoenix
      priv directory to better suit individual needs</li>\n<li>The importance of understanding
      and adapting generated code for maintainability and proper abstractions</li>\n<li>Importance
      of having a clear separation between core and interface</li>\n<li>Adapting to
      different opinions and preferences within a development team</li>\n<li>Refactoring
      and restructuring code to improve quality and reduce complexity</li>\n<li>Static
      typing for better documentation and the limitations of dynamic code</li>\n<li>Umbrella
      apps vs. mix configuration and how to avoid complexity</li>\n</ul>\n\n<p>Links
      Mentioned in this Episode:</p>\n\n<p>Enter to win a copy of Elixir in Action:
      <a href=\"https://smr.tl/2023bookgiveaway\" rel=\"nofollow\">https://smr.tl/2023bookgiveaway</a></p>\n\n<p>Elixir
      in Action by Saša Jurić <a href=\"https://www.manning.com/books/elixir-in-action\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action</a><br>\n35%
      discount code for book on manning.com: <strong>podexwizards20</strong></p>\n\n<p>Saša’s
      Website/Blog <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">TheErlangelist.com</a><br>\nTowards
      Maintainable Elixir - <a href=\"https://medium.com/very-big-things/towards-maintainable-elixir-the-core-and-the-interface-c267f0da43\"
      rel=\"nofollow\">Saša Jurić&#39;s Medium Blog Article Series</a><br>\n<a href=\"https://hex.pm/packages/boundary\"
      rel=\"nofollow\">Boundary</a>: Managing cross-module dependencies in Elixir
      projects<br>\n<a href=\"https://hex.pm/packages/site_encrypt\" rel=\"nofollow\">Site
      Encrypt</a>: Integrated Certification via Let&#39;s Encrypt for Elixir-powered
      sites</p>\n\n<p>Authentication Generator in Phoenix: <a href=\"https://hexdocs.pm/phoenix/mix_phx_gen_auth.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix/mix_phx_gen_auth.html</a><br>\nEcto
      query generator for Elixir <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nGraphQL:
      Query language for APIs <a href=\"https://graphql.org/\" rel=\"nofollow\">https://graphql.org/</a><br>\nDialyxir:
      <a href=\"https://hexdocs.pm/dialyxir/readme.html\" rel=\"nofollow\">https://hexdocs.pm/dialyxir/readme.html</a><br>\nNx
      (Numerical Elixir) GitHub Repository: <a href=\"https://github.com/elixir-nx/nx\"
      rel=\"nofollow\">https://github.com/elixir-nx/nx</a><br>\nElixirLS (Elixir Language
      Server) GitHub Repository: <a href=\"https://github.com/elixir-lsp/elixir-ls\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a></p><p>Special Guest:
      Saša Jurić.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Sundi Myint and Owen Bickford
    are joined by Saša Jurić, distinguished developer, mentor, and author of Elixir
    in Action. They discuss the future of training and education in Elixir, challenges
    faced by new Elixir developers, Phoenix generators, peer mentorship, the emergence
    of types, and when it’s time to close the umbrella.</p>\n\n<p><strong>Key Takeaways:</strong></p>\n\n<ul>\n<li>The
    functional programming paradigm, the actor model, and concurrency</li>\n<li>Adapting
    to the Elixir syntax and tooling</li>\n<li>The role of community, mentorship,
    and continuous learning in Elixir education</li>\n<li>The pros and cons of Phoenix
    generators for Elixir development</li>\n<li>Customizing templates in the Phoenix
    priv directory to better suit individual needs</li>\n<li>The importance of understanding
    and adapting generated code for maintainability and proper abstractions</li>\n<li>Importance
    of having a clear separation between core and interface</li>\n<li>Adapting to
    different opinions and preferences within a development team</li>\n<li>Refactoring
    and restructuring code to improve quality and reduce complexity</li>\n<li>Static
    typing for better documentation and the limitations of dynamic code</li>\n<li>Umbrella
    apps vs. mix configuration and how to avoid complexity</li>\n</ul>\n\n<p>Links
    Mentioned in this Episode:</p>\n\n<p>Enter to win a copy of Elixir in Action:
    <a href=\"https://smr.tl/2023bookgiveaway\" rel=\"nofollow\">https://smr.tl/2023bookgiveaway</a></p>\n\n<p>Elixir
    in Action by Saša Jurić <a href=\"https://www.manning.com/books/elixir-in-action\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action</a><br>\n35% discount
    code for book on manning.com: <strong>podexwizards20</strong></p>\n\n<p>Saša’s
    Website/Blog <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">TheErlangelist.com</a><br>\nTowards
    Maintainable Elixir - <a href=\"https://medium.com/very-big-things/towards-maintainable-elixir-the-core-and-the-interface-c267f0da43\"
    rel=\"nofollow\">Saša Jurić&#39;s Medium Blog Article Series</a><br>\n<a href=\"https://hex.pm/packages/boundary\"
    rel=\"nofollow\">Boundary</a>: Managing cross-module dependencies in Elixir projects<br>\n<a
    href=\"https://hex.pm/packages/site_encrypt\" rel=\"nofollow\">Site Encrypt</a>:
    Integrated Certification via Let&#39;s Encrypt for Elixir-powered sites</p>\n\n<p>Authentication
    Generator in Phoenix: <a href=\"https://hexdocs.pm/phoenix/mix_phx_gen_auth.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix/mix_phx_gen_auth.html</a><br>\nEcto
    query generator for Elixir <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nGraphQL:
    Query language for APIs <a href=\"https://graphql.org/\" rel=\"nofollow\">https://graphql.org/</a><br>\nDialyxir:
    <a href=\"https://hexdocs.pm/dialyxir/readme.html\" rel=\"nofollow\">https://hexdocs.pm/dialyxir/readme.html</a><br>\nNx
    (Numerical Elixir) GitHub Repository: <a href=\"https://github.com/elixir-nx/nx\"
    rel=\"nofollow\">https://github.com/elixir-nx/nx</a><br>\nElixirLS (Elixir Language
    Server) GitHub Repository: <a href=\"https://github.com/elixir-lsp/elixir-ls\"
    rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a></p><p>Special Guest:
    Saša Jurić.</p>\n      "
- title: Mat Trudel on the Future of Phoenix and Web Transports
  slug: s10-e06-elixir-phoenix-web-transports
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e06-elixir-phoenix-web-transports
  guid: aa3897eb-9b40-4bb9-8032-a729117e50aa
  pubDate: Thu, 27 Apr 2023 07:15:00 -0400
  pubDateFriendly: April 27, 2023
  description: "In this episode of Elixir Wizards, Owen and Dan talk to Mat Trudel,
    Phoenix contributor and creator of the Bandit Web Server, about the future of
    Phoenix, web transports, and HTTP/3. Mat explains the challenges and benefits
    of implementing HTTP/3 support in Phoenix. \nMat provides in-depth insights into
    the evolution of web protocols and encourages developers to continue pushing the
    boundaries of web development and to contribute to the growth of the open-source
    community.\nMain topics discussed in this episode:\nThe evolution of web protocols
    and how HTTP/3 is changing the landscape\nThe challenges and benefits of implementing
    HTTP/3 support in Phoenix\nHow a home AC project revealed a gap in web server
    testing tools and inspired Bandit\nhow web transports like Cowboy and Ranch are
    used to build scalable web servers\nWebSock for multiplexing data over a single
    WebSocket connection\nMat’s philosophy on naming projects and his passion for
    malapropisms\nThe Bandit project and how it can help developers better understand
    web protocols\nAutobahn, a testing suite for WebSocket protocol specification
    conformance\nThe importance of community involvement in open-source projects\nEncouragement
    for more people to use Bandit and report bugs\nLinks Mentioned:\nSmartLogic is
    Hiring: https://smartlogic.io/about/jobs\nPagerDuty: https://www.pagerduty.com\nPhoenix
    Framework: https://www.phoenixframework.org/\nCowboy: https://ninenines.eu/docs/en/cowboy/2.9/guide/introduction/\nRanch:
    https://github.com/ninenines/ranch\nBandit - https://hexdocs.pm/bandit/Bandit.html\nAutobahn:
    https://github.com/crossbario/autobahn-testsuite\nHTTP Cats: https://http.cat/\nMat
    Trudel at Empex 2022 A Funny Thing Happened On The Way To The Phoenix  (https://www.youtube.com/watch?v=FtZBTUvRt0g)\nThousand
    Island - https://hexdocs.pm/thousand_island/ThousandIsland.html\n Special Guest:
    Mat Trudel.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ltUauluF
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/aa3897eb-9b40-4bb9-8032-a729117e50aa.mp3
    length: '93385056'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In today's episode of Elixir Wizards, Owen and Dan dive deep into the
      world of web protocols and transports with Mat Trudel, a Phoenix contributor
      and the creator of the Bandit Web Server. They explore the challenges and benefits
      of implementing HTTP/3 support in Phoenix, the importance of community involvement
      in open-source projects, and the future of web transports.
    duration: '48:05'
    explicit: 'no'
    keywords: Elixir Wizards podcast, Phoenix Framework, web protocols, HTTP/3, web
      transports, Cowboy, Ranch, Bandit, Audubon, WebSocket, software development,
      Malapropisms, Multiplexing, Mat Trudel, open-source projects, community involvement,
      testing, bug reports, programming languages, Elixir, functional programming,
      coding, software engineering, web development, technology, podcasts for developers,
      programming podcasts
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/aa3897eb-9b40-4bb9-8032-a729117e50aa/cover.jpg?v=1
    summary: "\n        <p>In this episode of Elixir Wizards, Owen and Dan talk to
      Mat Trudel, Phoenix contributor and creator of the Bandit Web Server, about
      the future of Phoenix, web transports, and HTTP/3. Mat explains the challenges
      and benefits of implementing HTTP/3 support in Phoenix. </p>\n\n<p>Mat provides
      in-depth insights into the evolution of web protocols and encourages developers
      to continue pushing the boundaries of web development and to contribute to the
      growth of the open-source community.</p>\n\n<p>Main topics discussed in this
      episode:</p>\n\n<ul>\n<li>The evolution of web protocols and how HTTP/3 is changing
      the landscape</li>\n<li>The challenges and benefits of implementing HTTP/3 support
      in Phoenix</li>\n<li>How a home AC project revealed a gap in web server testing
      tools and inspired Bandit</li>\n<li>how web transports like Cowboy and Ranch
      are used to build scalable web servers</li>\n<li>WebSock for multiplexing data
      over a single WebSocket connection</li>\n<li>Mat’s philosophy on naming projects
      and his passion for malapropisms</li>\n<li>The Bandit project and how it can
      help developers better understand web protocols</li>\n<li>Autobahn, a testing
      suite for WebSocket protocol specification conformance</li>\n<li>The importance
      of community involvement in open-source projects</li>\n<li>Encouragement for
      more people to use Bandit and report bugs</li>\n</ul>\n\n<p>Links Mentioned:</p>\n\n<p>SmartLogic
      is Hiring: <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a><br>\nPagerDuty:
      <a href=\"https://www.pagerduty.com\" rel=\"nofollow\">https://www.pagerduty.com</a><br>\nPhoenix
      Framework: <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nCowboy:
      <a href=\"https://ninenines.eu/docs/en/cowboy/2.9/guide/introduction/\" rel=\"nofollow\">https://ninenines.eu/docs/en/cowboy/2.9/guide/introduction/</a><br>\nRanch:
      <a href=\"https://github.com/ninenines/ranch\" rel=\"nofollow\">https://github.com/ninenines/ranch</a><br>\nBandit
      - <a href=\"https://hexdocs.pm/bandit/Bandit.html\" rel=\"nofollow\">https://hexdocs.pm/bandit/Bandit.html</a><br>\nAutobahn:
      <a href=\"https://github.com/crossbario/autobahn-testsuite\" rel=\"nofollow\">https://github.com/crossbario/autobahn-testsuite</a><br>\nHTTP
      Cats: <a href=\"https://http.cat/\" rel=\"nofollow\">https://http.cat/</a><br>\nMat
      Trudel at Empex 2022 <a href=\"https://www.youtube.com/watch?v=FtZBTUvRt0g\"
      rel=\"nofollow\">A Funny Thing Happened On The Way To The Phoenix </a><br>\nThousand
      Island - <a href=\"https://hexdocs.pm/thousand_island/ThousandIsland.html\"
      rel=\"nofollow\">https://hexdocs.pm/thousand_island/ThousandIsland.html</a></p><p>Special
      Guest: Mat Trudel.</p>\n      "
  contentEncoded: "\n        <p>In this episode of Elixir Wizards, Owen and Dan talk
    to Mat Trudel, Phoenix contributor and creator of the Bandit Web Server, about
    the future of Phoenix, web transports, and HTTP/3. Mat explains the challenges
    and benefits of implementing HTTP/3 support in Phoenix. </p>\n\n<p>Mat provides
    in-depth insights into the evolution of web protocols and encourages developers
    to continue pushing the boundaries of web development and to contribute to the
    growth of the open-source community.</p>\n\n<p>Main topics discussed in this episode:</p>\n\n<ul>\n<li>The
    evolution of web protocols and how HTTP/3 is changing the landscape</li>\n<li>The
    challenges and benefits of implementing HTTP/3 support in Phoenix</li>\n<li>How
    a home AC project revealed a gap in web server testing tools and inspired Bandit</li>\n<li>how
    web transports like Cowboy and Ranch are used to build scalable web servers</li>\n<li>WebSock
    for multiplexing data over a single WebSocket connection</li>\n<li>Mat’s philosophy
    on naming projects and his passion for malapropisms</li>\n<li>The Bandit project
    and how it can help developers better understand web protocols</li>\n<li>Autobahn,
    a testing suite for WebSocket protocol specification conformance</li>\n<li>The
    importance of community involvement in open-source projects</li>\n<li>Encouragement
    for more people to use Bandit and report bugs</li>\n</ul>\n\n<p>Links Mentioned:</p>\n\n<p>SmartLogic
    is Hiring: <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a><br>\nPagerDuty:
    <a href=\"https://www.pagerduty.com\" rel=\"nofollow\">https://www.pagerduty.com</a><br>\nPhoenix
    Framework: <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nCowboy:
    <a href=\"https://ninenines.eu/docs/en/cowboy/2.9/guide/introduction/\" rel=\"nofollow\">https://ninenines.eu/docs/en/cowboy/2.9/guide/introduction/</a><br>\nRanch:
    <a href=\"https://github.com/ninenines/ranch\" rel=\"nofollow\">https://github.com/ninenines/ranch</a><br>\nBandit
    - <a href=\"https://hexdocs.pm/bandit/Bandit.html\" rel=\"nofollow\">https://hexdocs.pm/bandit/Bandit.html</a><br>\nAutobahn:
    <a href=\"https://github.com/crossbario/autobahn-testsuite\" rel=\"nofollow\">https://github.com/crossbario/autobahn-testsuite</a><br>\nHTTP
    Cats: <a href=\"https://http.cat/\" rel=\"nofollow\">https://http.cat/</a><br>\nMat
    Trudel at Empex 2022 <a href=\"https://www.youtube.com/watch?v=FtZBTUvRt0g\" rel=\"nofollow\">A
    Funny Thing Happened On The Way To The Phoenix </a><br>\nThousand Island - <a
    href=\"https://hexdocs.pm/thousand_island/ThousandIsland.html\" rel=\"nofollow\">https://hexdocs.pm/thousand_island/ThousandIsland.html</a></p><p>Special
    Guest: Mat Trudel.</p>\n      "
- title: Mike Waud and Tony Winn on the Future of Elixir on the Grid
  slug: s10-e05-elixir-on-the-grid
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e05-elixir-on-the-grid
  guid: bcde1ada-7d2e-4164-8af2-410b851839c3
  pubDate: Thu, 20 Apr 2023 06:00:00 -0400
  pubDateFriendly: April 20, 2023
  description: |
    Elixir Wizards Owen Bickford and Dan Ivovich are joined by Mike Waud, Senior Software Engineer at SparkMeter, and Tony Winn, Lead Software Architect at Generac, to discuss the future of the BEAM in the electric grid, how their companies use Elixir, and the challenges they face in implementing cutting-edge technologies in an environment with a mix of old and new systems.
    Both guests have backgrounds in various programming languages before turning to Elixir for its functional programming capabilities, concurrency, and reliability. Elixir's portability allows it to be used in various environments, from cloud-based systems to more conservative organizations that prefer running software off the cloud.
    Key topics discussed in this episode:
    • Technology sophistication varies across different regions and industries
    •     BEAM's reliability, concurrency, and scaling in electric grid systems
    • Using Elixir for caching, telemetry, and managing traffic spikes
    • Elixir fits well for devices due to its fault tolerance and supervision trees
    • Observability with telemetry hooks for understanding system performance
    • Traffic patterns in the grid space are often dictated by weather and human activity, requiring efficient handling
    • The balance between using Elixir/BEAM and other tools depending on use case
    • Using Elixir tools like Broadway to work with event queues and Nebulex for distributed caching
    • The future of the electric grid and its evolution over the next 10 years, including a shift towards more distributed energy generation
    • Global lessons about grid management, solar penetration, regulations, and energy storage
    • Prioritizing data in IoT systems and processing data at the edge of the network
    • Gratitude for open-source contributors in the Elixir community
    Links in this episode:
    SparkMeter: https://www.sparkmeter.io/
    Generac: https://www.generac.com/
    SmartLogic - https://smartlogic.io/jobs
    Gary Bernhardt's talk on functional core and imperative shell: https://www.destroyallsoftware.com/talks/boundaries
    Joe Armstrong's Erlang book: https://pragprog.com/titles/jaerlang/programming-erlang/
    The Nerves podcast and documentation: https://nerves-project.org/
     Special Guests: Mike Waud and Tony Winn.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+hy78QO5d
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bcde1ada-7d2e-4164-8af2-410b851839c3.mp3
    length: '83149844'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: Join Elixir Wizards Owen Bickford and Dan Ivovich as they host Mike
      Waud, Senior Software Engineer at SparkMeter, and Tony Winn, Lead Software Architect
      at Generac, to discuss the future of the BEAM in the electric grid. They discuss
      how their companies use Elixir and the challenges they face in implementing
      cutting-edge technologies in an environment with a mix of old and new systems.
    duration: '42:41'
    explicit: 'no'
    keywords: Elixir programming language, BEAM virtual machine, Erlang, functional
      programming, pattern matching, recursion, immutability, GenServer, concurrency,
      parallelism, OTP framework, Phoenix framework, Ecto, LiveView, supervision trees,
      fault tolerance, hot code swapping, real-time systems, metaprogramming, macros,
      mix tasks, umbrella applications, binary pattern matching, processes, message
      passing, asynchronous communication, state management, dialyzer, type specifications,
      code formatter, testing frameworks, ExUnit, property-based testing, continuous
      integration, deployment strategies, release management, code refactoring, hex
      package manager, caching, telemetry, traffic management, hybrid systems, Elixir/BEAM
      use cases
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bcde1ada-7d2e-4164-8af2-410b851839c3/cover.jpg?v=1
    summary: "\n        <p>Elixir Wizards Owen Bickford and Dan Ivovich are joined
      by Mike Waud, Senior Software Engineer at SparkMeter, and Tony Winn, Lead Software
      Architect at Generac, to discuss the future of the BEAM in the electric grid,
      how their companies use Elixir, and the challenges they face in implementing
      cutting-edge technologies in an environment with a mix of old and new systems.</p>\n\n<p>Both
      guests have backgrounds in various programming languages before turning to Elixir
      for its functional programming capabilities, concurrency, and reliability. Elixir&#39;s
      portability allows it to be used in various environments, from cloud-based systems
      to more conservative organizations that prefer running software off the cloud.</p>\n\n<p>Key
      topics discussed in this episode:</p>\n\n<p>• Technology sophistication varies
      across different regions and industries<br>\n•     BEAM&#39;s reliability, concurrency,
      and scaling in electric grid systems<br>\n• Using Elixir for caching, telemetry,
      and managing traffic spikes<br>\n• Elixir fits well for devices due to its fault
      tolerance and supervision trees<br>\n• Observability with telemetry hooks for
      understanding system performance<br>\n• Traffic patterns in the grid space are
      often dictated by weather and human activity, requiring efficient handling<br>\n•
      The balance between using Elixir/BEAM and other tools depending on use case<br>\n•
      Using Elixir tools like Broadway to work with event queues and Nebulex for distributed
      caching<br>\n• The future of the electric grid and its evolution over the next
      10 years, including a shift towards more distributed energy generation<br>\n•
      Global lessons about grid management, solar penetration, regulations, and energy
      storage<br>\n• Prioritizing data in IoT systems and processing data at the edge
      of the network<br>\n• Gratitude for open-source contributors in the Elixir community</p>\n\n<p>Links
      in this episode:</p>\n\n<p>SparkMeter: <a href=\"https://www.sparkmeter.io/\"
      rel=\"nofollow\">https://www.sparkmeter.io/</a><br>\nGenerac: <a href=\"https://www.generac.com/\"
      rel=\"nofollow\">https://www.generac.com/</a><br>\nSmartLogic - <a href=\"https://smartlogic.io/jobs\"
      rel=\"nofollow\">https://smartlogic.io/jobs</a><br>\nGary Bernhardt&#39;s talk
      on functional core and imperative shell: <a href=\"https://www.destroyallsoftware.com/talks/boundaries\"
      rel=\"nofollow\">https://www.destroyallsoftware.com/talks/boundaries</a><br>\nJoe
      Armstrong&#39;s Erlang book: <a href=\"https://pragprog.com/titles/jaerlang/programming-erlang/\"
      rel=\"nofollow\">https://pragprog.com/titles/jaerlang/programming-erlang/</a><br>\nThe
      Nerves podcast and documentation: <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a></p><p>Special
      Guests: Mike Waud and Tony Winn.</p>\n      "
  contentEncoded: "\n        <p>Elixir Wizards Owen Bickford and Dan Ivovich are joined
    by Mike Waud, Senior Software Engineer at SparkMeter, and Tony Winn, Lead Software
    Architect at Generac, to discuss the future of the BEAM in the electric grid,
    how their companies use Elixir, and the challenges they face in implementing cutting-edge
    technologies in an environment with a mix of old and new systems.</p>\n\n<p>Both
    guests have backgrounds in various programming languages before turning to Elixir
    for its functional programming capabilities, concurrency, and reliability. Elixir&#39;s
    portability allows it to be used in various environments, from cloud-based systems
    to more conservative organizations that prefer running software off the cloud.</p>\n\n<p>Key
    topics discussed in this episode:</p>\n\n<p>• Technology sophistication varies
    across different regions and industries<br>\n•     BEAM&#39;s reliability, concurrency,
    and scaling in electric grid systems<br>\n• Using Elixir for caching, telemetry,
    and managing traffic spikes<br>\n• Elixir fits well for devices due to its fault
    tolerance and supervision trees<br>\n• Observability with telemetry hooks for
    understanding system performance<br>\n• Traffic patterns in the grid space are
    often dictated by weather and human activity, requiring efficient handling<br>\n•
    The balance between using Elixir/BEAM and other tools depending on use case<br>\n•
    Using Elixir tools like Broadway to work with event queues and Nebulex for distributed
    caching<br>\n• The future of the electric grid and its evolution over the next
    10 years, including a shift towards more distributed energy generation<br>\n•
    Global lessons about grid management, solar penetration, regulations, and energy
    storage<br>\n• Prioritizing data in IoT systems and processing data at the edge
    of the network<br>\n• Gratitude for open-source contributors in the Elixir community</p>\n\n<p>Links
    in this episode:</p>\n\n<p>SparkMeter: <a href=\"https://www.sparkmeter.io/\"
    rel=\"nofollow\">https://www.sparkmeter.io/</a><br>\nGenerac: <a href=\"https://www.generac.com/\"
    rel=\"nofollow\">https://www.generac.com/</a><br>\nSmartLogic - <a href=\"https://smartlogic.io/jobs\"
    rel=\"nofollow\">https://smartlogic.io/jobs</a><br>\nGary Bernhardt&#39;s talk
    on functional core and imperative shell: <a href=\"https://www.destroyallsoftware.com/talks/boundaries\"
    rel=\"nofollow\">https://www.destroyallsoftware.com/talks/boundaries</a><br>\nJoe
    Armstrong&#39;s Erlang book: <a href=\"https://pragprog.com/titles/jaerlang/programming-erlang/\"
    rel=\"nofollow\">https://pragprog.com/titles/jaerlang/programming-erlang/</a><br>\nThe
    Nerves podcast and documentation: <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a></p><p>Special
    Guests: Mike Waud and Tony Winn.</p>\n      "
- title: Sophie DeBenedetto on the Future of Elixir and LiveView
  slug: s10-e04-future-of-elixir-liveview
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e04-future-of-elixir-liveview
  guid: bf04def4-b734-479b-9898-3a7f3f333d95
  pubDate: Thu, 13 Apr 2023 06:00:00 -0400
  pubDateFriendly: April 13, 2023
  description: "In today's episode, Sophie DeBenedetto emphasizes the importance of
    the Elixir community's commitment to education, documentation, and tools like
    liveBook, fostering an environment where people with varying skill levels can
    learn and contribute. The discussion highlights LiveView's capabilities and the
    role it plays in the future of Elixir, encouraging members to share knowledge
    and excitement for these tools through various channels. \nSophie invites listeners
    to attend and submit their talks for the upcoming Empex conference, which aims
    to showcase the best in Elixir and LiveView technologies. Additionally, the group
    shares light-hearted moments, reminding everyone to contribute to all types of
    documentation and promoting an inclusive atmosphere.\nKey topics discussed in
    this episode:\n•     Updates on the latest release of the Programming Phoenix
    LiveView book\n•     The importance of community connection in Elixir conferences\n•
    \    The future of documentation in the Elixir ecosystem\n•     The Elixir community's
    commitment to education and documentation\n•     LiveBook as a valuable tool for
    learning and experimenting\n•     Encouraging contributions across experience
    levels and skill sets\n•     Importance of sharing knowledge through liveBooks,
    blog posts, and conference talks\n•     Core Components in Phoenix LiveView, and
    modal implementation\n•     Creating a custom component library for internal use\n•
    \    Reflecting on a Phoenix LiveView Project Experience\n•     Ease of using
    Tailwind CSS and its benefits in web development\n•     Advantages of LiveView
    in reducing complexity and speeding up project development\n•     LiveView's potential
    to handle large datasets using Streams\n•     The role of Elixir developers in
    the rapidly evolving AI landscape\nLinks in this episode:\nSophie DeBenedetto
    – https://www.linkedin.com/in/sophiedebenedetto\nProgramming Phoenix LiveView
    Book – https://pragprog.com/titles/liveview/programming-phoenix-liveview\nEmpex
    NYC - https://www.empex.co/new-york\nSmartLogic - https://smartlogic.io/jobs\nPhoenix
    LiveView documentation: https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nLive
    sessions and hooks: https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.Router.html#livesession/1\nLiveView:
    https://hexdocs.pm/phoenixlive_view/Phoenix.LiveView.html\nTailwind CSS: https://tailwindcss.com/\nReuse
    Markup With Function Components and Slots (https://fly.io/phoenix-files/function-components/)
    \nLiveView Card Components With Bootstrap (https://fly.io/phoenix-files/liveview-bootstrap-card/)
    \nBuilding a Chat App With LiveView Streams  (https://fly.io/phoenix-files/building-a-chat-app-with-liveview-streams/)\n
    \ Special Guest: Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+NMn0albh
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bf04def4-b734-479b-9898-3a7f3f333d95.mp3
    length: '98812297'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In today's episode of Elixir Wizards, Sophie DeBenedetto, Staff Software
      Engineer at GitHub, joins hosts Sundi Myint and Owen Bickford to discuss the
      future of Elixir and LiveView. Sophie emphasizes the importance of the Elixir
      community's commitment to education, documentation, and tools like liveBook,
      fostering an environment where people with varying skill levels can learn and
      contribute.
    duration: '51:08'
    explicit: 'no'
    keywords: Elixir, LiveView, Sophie DeBenedetto, documentation, liveBook, machine
      learning, Empex conference, Ruby on Rails, real-time applications, Elixir Wizards,
      SmartLogic, Elixir community, knowledge sharing, collaboration, inclusivity,
      accessibility, web development, Phoenix framework, web applications, software
      development, tech landscape, Flutter, mobile app development, React, Rails,
      custom software applications, programming languages, functional programming,
      Elixir resources, programming, software engineering, web development, artificial
      intelligence, big data, cloud computing, cybersecurity, data analytics, data
      science, deep learning, DevOps, digital transformation, front-end development,
      back-end development, full-stack development, Internet of Things (IoT), microservices,
      natural language processing, neural networks, open-source software, responsive
      web design, RESTful APIs, serverless architecture, software architecture, software
      testing, tech industry, technology trends, user experience (UX), user interface
      (UI), version control, virtual reality, web services, web frameworks, agile
      development, continuous integration, continuous deployment, containerization,
      data privacy, data storage, distributed systems, edge computing, innovation,
      network security, quantum computing, robotics, SaaS, technology education, virtualization,
      web performance
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bf04def4-b734-479b-9898-3a7f3f333d95/cover.jpg?v=1
    summary: "\n        <p>In today&#39;s episode, Sophie DeBenedetto emphasizes the
      importance of the Elixir community&#39;s commitment to education, documentation,
      and tools like liveBook, fostering an environment where people with varying
      skill levels can learn and contribute. The discussion highlights LiveView&#39;s
      capabilities and the role it plays in the future of Elixir, encouraging members
      to share knowledge and excitement for these tools through various channels.
      </p>\n\n<p>Sophie invites listeners to attend and submit their talks for the
      upcoming Empex conference, which aims to showcase the best in Elixir and LiveView
      technologies. Additionally, the group shares light-hearted moments, reminding
      everyone to contribute to all types of documentation and promoting an inclusive
      atmosphere.</p>\n\n<p>Key topics discussed in this episode:</p>\n\n<p>•     Updates
      on the latest release of the Programming Phoenix LiveView book<br>\n•     The
      importance of community connection in Elixir conferences<br>\n•     The future
      of documentation in the Elixir ecosystem<br>\n•     The Elixir community&#39;s
      commitment to education and documentation<br>\n•     LiveBook as a valuable
      tool for learning and experimenting<br>\n•     Encouraging contributions across
      experience levels and skill sets<br>\n•     Importance of sharing knowledge
      through liveBooks, blog posts, and conference talks<br>\n•     Core Components
      in Phoenix LiveView, and modal implementation<br>\n•     Creating a custom component
      library for internal use<br>\n•     Reflecting on a Phoenix LiveView Project
      Experience<br>\n•     Ease of using Tailwind CSS and its benefits in web development<br>\n•
      \    Advantages of LiveView in reducing complexity and speeding up project development<br>\n•
      \    LiveView&#39;s potential to handle large datasets using Streams<br>\n•
      \    The role of Elixir developers in the rapidly evolving AI landscape</p>\n\n<p>Links
      in this episode:</p>\n\n<p>Sophie DeBenedetto – <a href=\"https://www.linkedin.com/in/sophiedebenedetto\"
      rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto</a><br>\nProgramming
      Phoenix LiveView Book – <a href=\"https://pragprog.com/titles/liveview/programming-phoenix-liveview\"
      rel=\"nofollow\">https://pragprog.com/titles/liveview/programming-phoenix-liveview</a><br>\nEmpex
      NYC - <a href=\"https://www.empex.co/new-york\" rel=\"nofollow\">https://www.empex.co/new-york</a><br>\nSmartLogic
      - <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a><br>\nPhoenix
      LiveView documentation: <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLive
      sessions and hooks: <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.Router.html#live_session/1\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.Router.html#live_session/1</a><br>\nLiveView:
      <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nTailwind
      CSS: <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">https://tailwindcss.com/</a><br>\n<a
      href=\"https://fly.io/phoenix-files/function-components/\" rel=\"nofollow\">Reuse
      Markup With Function Components and Slots</a> <br>\n<a href=\"https://fly.io/phoenix-files/liveview-bootstrap-card/\"
      rel=\"nofollow\">LiveView Card Components With Bootstrap</a> <br>\n<a href=\"https://fly.io/phoenix-files/building-a-chat-app-with-liveview-streams/\"
      rel=\"nofollow\">Building a Chat App With LiveView Streams </a></p><p>Special
      Guest: Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>In today&#39;s episode, Sophie DeBenedetto emphasizes
    the importance of the Elixir community&#39;s commitment to education, documentation,
    and tools like liveBook, fostering an environment where people with varying skill
    levels can learn and contribute. The discussion highlights LiveView&#39;s capabilities
    and the role it plays in the future of Elixir, encouraging members to share knowledge
    and excitement for these tools through various channels. </p>\n\n<p>Sophie invites
    listeners to attend and submit their talks for the upcoming Empex conference,
    which aims to showcase the best in Elixir and LiveView technologies. Additionally,
    the group shares light-hearted moments, reminding everyone to contribute to all
    types of documentation and promoting an inclusive atmosphere.</p>\n\n<p>Key topics
    discussed in this episode:</p>\n\n<p>•     Updates on the latest release of the
    Programming Phoenix LiveView book<br>\n•     The importance of community connection
    in Elixir conferences<br>\n•     The future of documentation in the Elixir ecosystem<br>\n•
    \    The Elixir community&#39;s commitment to education and documentation<br>\n•
    \    LiveBook as a valuable tool for learning and experimenting<br>\n•     Encouraging
    contributions across experience levels and skill sets<br>\n•     Importance of
    sharing knowledge through liveBooks, blog posts, and conference talks<br>\n•     Core
    Components in Phoenix LiveView, and modal implementation<br>\n•     Creating a
    custom component library for internal use<br>\n•     Reflecting on a Phoenix LiveView
    Project Experience<br>\n•     Ease of using Tailwind CSS and its benefits in web
    development<br>\n•     Advantages of LiveView in reducing complexity and speeding
    up project development<br>\n•     LiveView&#39;s potential to handle large datasets
    using Streams<br>\n•     The role of Elixir developers in the rapidly evolving
    AI landscape</p>\n\n<p>Links in this episode:</p>\n\n<p>Sophie DeBenedetto – <a
    href=\"https://www.linkedin.com/in/sophiedebenedetto\" rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto</a><br>\nProgramming
    Phoenix LiveView Book – <a href=\"https://pragprog.com/titles/liveview/programming-phoenix-liveview\"
    rel=\"nofollow\">https://pragprog.com/titles/liveview/programming-phoenix-liveview</a><br>\nEmpex
    NYC - <a href=\"https://www.empex.co/new-york\" rel=\"nofollow\">https://www.empex.co/new-york</a><br>\nSmartLogic
    - <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a><br>\nPhoenix
    LiveView documentation: <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLive
    sessions and hooks: <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.Router.html#live_session/1\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.Router.html#live_session/1</a><br>\nLiveView:
    <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nTailwind
    CSS: <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">https://tailwindcss.com/</a><br>\n<a
    href=\"https://fly.io/phoenix-files/function-components/\" rel=\"nofollow\">Reuse
    Markup With Function Components and Slots</a> <br>\n<a href=\"https://fly.io/phoenix-files/liveview-bootstrap-card/\"
    rel=\"nofollow\">LiveView Card Components With Bootstrap</a> <br>\n<a href=\"https://fly.io/phoenix-files/building-a-chat-app-with-liveview-streams/\"
    rel=\"nofollow\">Building a Chat App With LiveView Streams </a></p><p>Special
    Guest: Sophie DeBenedetto.</p>\n      "
- title: Michael Lubas on the Future of Elixir Security
  slug: s10-e03-future-of-elixir-security
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e03-future-of-elixir-security
  guid: feece022-6cfe-4474-be5e-792edccec817
  pubDate: Thu, 06 Apr 2023 06:00:00 -0400
  pubDateFriendly: April  6, 2023
  description: "In today's episode of Elixir Wizards, Michael Lubas, founder of Paraxial.io,
    joins hosts Owen Bickford and Bilal Hankins to discuss security in the Elixir
    and Phoenix ecosystem. Lubas shares his insights on the most common security risks
    developers face, recent threats, and how Elixir developers can prepare for the
    future.\nCommon security risks, including SQL injection and cross-site scripting,
    and how to mitigate these threats\nThe importance of rate limiting and bot detection
    to prevent spam SMS messages\nContinuous security testing to maintain a secure
    application and avoid breaches\nTools and resources available in the Elixir and
    Phoenix ecosystem to enhance security\nThe Guardian library for authentication
    and authorization\nTake a drink every time someone says \"bot\"\nThe difference
    between \"bots\" and AI language models\nThe potential for evolving authentication,
    such as Passkeys over WebSocket\nHow Elixir compares to other languages due to
    its immutability and the ability to trace user input\nPotion Shop, a vulnerable
    Phoenix application designed to test security\nTalking Tom, Sneaker Bots, and
    teenage hackers!\nThe importance of security awareness and early planning in application
    development\nThe impact of open-source software on application security \nHow
    to address vulnerabilities in third-party libraries\nConducting security audits
    and implementing security measures\nLinks in this episode:\nMichael Lubas\nEmail
    - michael@paraxial.io\nLinkedIn - https://www.linkedin.com/in/michaellubas/\nParaxial.io
    - https://paraxial.io/\nBlog/Mailing List - https://paraxial.io/blog/index\nPotion
    Shop - https://paraxial.io/blog/potion-shop\nElixir/Phoenix Security Live Coding:
    Preventing SQL Injection in Ecto\nTwitter - https://twitter.com/paraxialio\nLinkedIn
    - https://www.linkedin.com/company/paraxial-io/\nGenServer Social - https://genserver.social/paraxial\nYouTube
    - https://www.youtube.com/@paraxial5874\nGriffin Byatt on Sobelow: ElixirConf
    2017 - Plugging the Security Holes in Your Phoenix Application (https://www.youtube.com/watch?v=w3lKmFsmlvQ)\nErlang
    Ecosystem Foundation: Security Working Group - https://erlef.org/wg/security\nArticle
    by Bram - Client-Side Enforcement of LiveView Security (https://blog.voltone.net/post/31)\n
    Special Guest: Michael Lubas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ddkk9jJS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/feece022-6cfe-4474-be5e-792edccec817.mp3
    length: '78620681'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In today's episode of Elixir Wizards, Michael Lubas, founder of Paraxial.io,
      joins hosts Owen Bickford and Bilal Hankins to discuss security in the Elixir
      and Phoenix ecosystem. Lubas shares his insights on the most common security
      risks developers face, recent threats, and how Elixir developers can prepare
      for the future.
    duration: '40:30'
    explicit: 'no'
    keywords: Elixir Wizards, Elixir programming, Phoenix framework, Web application
      security, Cybersecurity, Secure coding practices, ElixirConf, Michael Lubas,
      Paraxial.io, Functional programming, Distributed systems, Fault tolerance, Scalability,
      OTP Supervision Trees, HTTP/2, SSL/TLS, JWT, Two-factor authentication, CSRF,
      SQL injection, Rate limiting, Bot detection, API security, Man-in-the-middle
      attacks, OWASP Top Ten, Cross-site scripting, Cross-site request forgery, Vulnerability
      scanning, Penetration testing, Hacking, DDoS protection, Risk assessment, Threat
      modeling, Network security, Container security, DevSecOps, Continuous integration,
      Static code analysis, Threat intelligence, Malware analysis, Reverse engineering,
      Cloud security, Microservices, Service-oriented architecture, RESTful web services,
      GraphQL, JSON Web Tokens, Encryption, Hashing, Symmetric encryption, Public
      key cryptography, Key management, Digital signatures, Certificate authorities,
      Secure file transfer, GDPR compliance
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/feece022-6cfe-4474-be5e-792edccec817/cover.jpg?v=1
    summary: "\n        <p>In today&#39;s episode of Elixir Wizards, Michael Lubas,
      founder of Paraxial.io, joins hosts Owen Bickford and Bilal Hankins to discuss
      security in the Elixir and Phoenix ecosystem. Lubas shares his insights on the
      most common security risks developers face, recent threats, and how Elixir developers
      can prepare for the future.</p>\n\n<ul>\n<li>Common security risks, including
      SQL injection and cross-site scripting, and how to mitigate these threats</li>\n<li>The
      importance of rate limiting and bot detection to prevent spam SMS messages</li>\n<li>Continuous
      security testing to maintain a secure application and avoid breaches</li>\n<li>Tools
      and resources available in the Elixir and Phoenix ecosystem to enhance security</li>\n<li>The
      Guardian library for authentication and authorization</li>\n<li>Take a drink
      every time someone says &quot;bot&quot;</li>\n<li>The difference between &quot;bots&quot;
      and AI language models</li>\n<li>The potential for evolving authentication,
      such as Passkeys over WebSocket</li>\n<li>How Elixir compares to other languages
      due to its immutability and the ability to trace user input</li>\n<li>Potion
      Shop, a vulnerable Phoenix application designed to test security</li>\n<li>Talking
      Tom, Sneaker Bots, and teenage hackers!</li>\n<li>The importance of security
      awareness and early planning in application development</li>\n<li>The impact
      of open-source software on application security </li>\n<li>How to address vulnerabilities
      in third-party libraries</li>\n<li>Conducting security audits and implementing
      security measures</li>\n</ul>\n\n<p>Links in this episode:</p>\n\n<p>Michael
      Lubas<br>\nEmail - <a href=\"mailto:michael@paraxial.io\" rel=\"nofollow\">michael@paraxial.io</a><br>\nLinkedIn
      - <a href=\"https://www.linkedin.com/in/michaellubas/\" rel=\"nofollow\">https://www.linkedin.com/in/michaellubas/</a></p>\n\n<p>Paraxial.io
      - <a href=\"https://paraxial.io/\" rel=\"nofollow\">https://paraxial.io/</a><br>\nBlog/Mailing
      List - <a href=\"https://paraxial.io/blog/index\" rel=\"nofollow\">https://paraxial.io/blog/index</a><br>\nPotion
      Shop - <a href=\"https://paraxial.io/blog/potion-shop\" rel=\"nofollow\">https://paraxial.io/blog/potion-shop</a><br>\nElixir/Phoenix
      Security Live Coding: Preventing SQL Injection in Ecto</p>\n\n<p>Twitter - <a
      href=\"https://twitter.com/paraxialio\" rel=\"nofollow\">https://twitter.com/paraxialio</a><br>\nLinkedIn
      - <a href=\"https://www.linkedin.com/company/paraxial-io/\" rel=\"nofollow\">https://www.linkedin.com/company/paraxial-io/</a><br>\nGenServer
      Social - <a href=\"https://genserver.social/paraxial\" rel=\"nofollow\">https://genserver.social/paraxial</a><br>\nYouTube
      - <a href=\"https://www.youtube.com/@paraxial5874\" rel=\"nofollow\">https://www.youtube.com/@paraxial5874</a></p>\n\n<p>Griffin
      Byatt on Sobelow: <a href=\"https://www.youtube.com/watch?v=w3lKmFsmlvQ\" rel=\"nofollow\">ElixirConf
      2017 - Plugging the Security Holes in Your Phoenix Application</a><br>\nErlang
      Ecosystem Foundation: Security Working Group - <a href=\"https://erlef.org/wg/security\"
      rel=\"nofollow\">https://erlef.org/wg/security</a><br>\nArticle by Bram - <a
      href=\"https://blog.voltone.net/post/31\" rel=\"nofollow\">Client-Side Enforcement
      of LiveView Security</a></p><p>Special Guest: Michael Lubas.</p>\n      "
  contentEncoded: "\n        <p>In today&#39;s episode of Elixir Wizards, Michael
    Lubas, founder of Paraxial.io, joins hosts Owen Bickford and Bilal Hankins to
    discuss security in the Elixir and Phoenix ecosystem. Lubas shares his insights
    on the most common security risks developers face, recent threats, and how Elixir
    developers can prepare for the future.</p>\n\n<ul>\n<li>Common security risks,
    including SQL injection and cross-site scripting, and how to mitigate these threats</li>\n<li>The
    importance of rate limiting and bot detection to prevent spam SMS messages</li>\n<li>Continuous
    security testing to maintain a secure application and avoid breaches</li>\n<li>Tools
    and resources available in the Elixir and Phoenix ecosystem to enhance security</li>\n<li>The
    Guardian library for authentication and authorization</li>\n<li>Take a drink every
    time someone says &quot;bot&quot;</li>\n<li>The difference between &quot;bots&quot;
    and AI language models</li>\n<li>The potential for evolving authentication, such
    as Passkeys over WebSocket</li>\n<li>How Elixir compares to other languages due
    to its immutability and the ability to trace user input</li>\n<li>Potion Shop,
    a vulnerable Phoenix application designed to test security</li>\n<li>Talking Tom,
    Sneaker Bots, and teenage hackers!</li>\n<li>The importance of security awareness
    and early planning in application development</li>\n<li>The impact of open-source
    software on application security </li>\n<li>How to address vulnerabilities in
    third-party libraries</li>\n<li>Conducting security audits and implementing security
    measures</li>\n</ul>\n\n<p>Links in this episode:</p>\n\n<p>Michael Lubas<br>\nEmail
    - <a href=\"mailto:michael@paraxial.io\" rel=\"nofollow\">michael@paraxial.io</a><br>\nLinkedIn
    - <a href=\"https://www.linkedin.com/in/michaellubas/\" rel=\"nofollow\">https://www.linkedin.com/in/michaellubas/</a></p>\n\n<p>Paraxial.io
    - <a href=\"https://paraxial.io/\" rel=\"nofollow\">https://paraxial.io/</a><br>\nBlog/Mailing
    List - <a href=\"https://paraxial.io/blog/index\" rel=\"nofollow\">https://paraxial.io/blog/index</a><br>\nPotion
    Shop - <a href=\"https://paraxial.io/blog/potion-shop\" rel=\"nofollow\">https://paraxial.io/blog/potion-shop</a><br>\nElixir/Phoenix
    Security Live Coding: Preventing SQL Injection in Ecto</p>\n\n<p>Twitter - <a
    href=\"https://twitter.com/paraxialio\" rel=\"nofollow\">https://twitter.com/paraxialio</a><br>\nLinkedIn
    - <a href=\"https://www.linkedin.com/company/paraxial-io/\" rel=\"nofollow\">https://www.linkedin.com/company/paraxial-io/</a><br>\nGenServer
    Social - <a href=\"https://genserver.social/paraxial\" rel=\"nofollow\">https://genserver.social/paraxial</a><br>\nYouTube
    - <a href=\"https://www.youtube.com/@paraxial5874\" rel=\"nofollow\">https://www.youtube.com/@paraxial5874</a></p>\n\n<p>Griffin
    Byatt on Sobelow: <a href=\"https://www.youtube.com/watch?v=w3lKmFsmlvQ\" rel=\"nofollow\">ElixirConf
    2017 - Plugging the Security Holes in Your Phoenix Application</a><br>\nErlang
    Ecosystem Foundation: Security Working Group - <a href=\"https://erlef.org/wg/security\"
    rel=\"nofollow\">https://erlef.org/wg/security</a><br>\nArticle by Bram - <a href=\"https://blog.voltone.net/post/31\"
    rel=\"nofollow\">Client-Side Enforcement of LiveView Security</a></p><p>Special
    Guest: Michael Lubas.</p>\n      "
- title: Cory O'Daniel and the Future of DevOps in Elixir Programming
  slug: s10-e02-future-of-devops-in-elixir-programming
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e02-future-of-devops-in-elixir-programming
  guid: b2461569-e232-4b79-824b-6deb5fef2d4f
  pubDate: Thu, 30 Mar 2023 06:00:00 -0400
  pubDateFriendly: March 30, 2023
  description: |
    In this episode of Elixir Wizards, Cory O'Daniel, CEO of Massdriver, talks with Sundi and Owen about the role of DevOps in the future of Elixir programming. They discuss the advantages of using Elixir for cloud infrastructure and the challenges of securing cloud systems. They elaborate on their hopes for the future, including processes and automation to streamline operations so programmers can spend more time doing what they love … writing software!
    Major topics of discussion in the episode:
    Cory’s ideal ratio of hot sauce to honey (recommended for chicken)
    Why this episode was renamed “how Cory almost killed his dad."
    The history of deployment with Elixir and Erlang
    The benefits of using Kubernetes to deploy Elixir applications
    The future of Elixir DevOps and Massdriver's role in solving related problems
    Benefits of reducing the operational burden for developers
    Whether Elixir is a good fit for Kubernetes
    How DevOps has changed over the last 10 years.
    The confusion about what DevOps actually means
    The idea of "engineers doing everything" is not sustainable
    A future where engineers don't need to know much about DevOps, and can focus on writing code
    Minimizing the operational burden for developers
    Monolithic application vs. microservices
    Why Massdriver does not use Webhooks to update configurations
    Security, access to source code, and potential source leaks
    The idea of multi-cloud, site-wide outage, and cloud agnosticism
    Hybrid cloud vs true multi-cloud
    Standardizing methods of packaging and deploying applications in the future
    Links mentioned in this episode:
    SmartLogic — https://smartlogic.io/
    SmartLogic Twitter — https://twitter.com/smartlogic
    Massdriver — https://www.massdriver.cloud/
    State of Production Survey (with Sweet Raffle Prizes) — https://blog.massdriver.cloud/surveys/state-of-production-2023/
    $5000 Massdriver Credit — https://www.massdriver.cloud/partners/elixir-wizards
    Elephant in the Cloud Blog Post — https://startups.microsoft.com/blog/elephant-in-the-cloud/
    RIAK — https://github.com/basho/riak
    Otel — https://hexdocs.pm/
    Terraform — https://hexdocs.pm/terraform/Terraform.html
    DigitalOcean — https://www.digitalocean.com/
    Heroku — https://www.heroku.com/
    Linode — https://www.linode.com/
    Docker — https://www.docker.com/
    Kubernetes — https://kubernetes.io/
    Webhooks — https://hexdocs.pm/elixirplaid/webhooks.html
    GitOps — https://hexdocs.pm/gitops/readme.html
    Helm — https://helm.sh/docs/
     Special Guest: Cory O'Daniel.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+1i7BVvy1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b2461569-e232-4b79-824b-6deb5fef2d4f.mp3
    length: '89559410'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In this episode of Elixir Wizards, Cory O'Daniel, CEO of Massdriver,
      talks with Sundi and Owen about the role of DevOps in the future of Elixir programming.
      They discuss the advantages of using Elixir for cloud infrastructure and the
      challenges of securing cloud systems. They elaborate on their hopes for the
      future, including processes and automation to streamline operations so programmers
      can spend more time doing what they love … writing software!
    duration: '45:45'
    explicit: 'no'
    keywords: DevOps, Elixir programming, Cloud infrastructure, Software security,
      Kubernetes, Massdriver, Operational burden, Monolithic applications, Microservices,
      Multi-cloud, Hybrid cloud, Phoenix framework ,Containerization, Credential leaks,
      Cloud agnosticism, Webhooks, Software deployment
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b2461569-e232-4b79-824b-6deb5fef2d4f/cover.jpg?v=1
    summary: "\n        <p>In this episode of Elixir Wizards, Cory O&#39;Daniel, CEO
      of Massdriver, talks with Sundi and Owen about the role of DevOps in the future
      of Elixir programming. They discuss the advantages of using Elixir for cloud
      infrastructure and the challenges of securing cloud systems. They elaborate
      on their hopes for the future, including processes and automation to streamline
      operations so programmers can spend more time doing what they love … writing
      software!</p>\n\n<p>Major topics of discussion in the episode:</p>\n\n<ul>\n<li>Cory’s
      ideal ratio of hot sauce to honey (recommended for chicken)</li>\n<li>Why this
      episode was renamed “how Cory almost killed his dad.&quot;</li>\n<li>The history
      of deployment with Elixir and Erlang</li>\n<li>The benefits of using Kubernetes
      to deploy Elixir applications</li>\n<li>The future of Elixir DevOps and Massdriver&#39;s
      role in solving related problems</li>\n<li>Benefits of reducing the operational
      burden for developers</li>\n<li>Whether Elixir is a good fit for Kubernetes</li>\n<li>How
      DevOps has changed over the last 10 years.</li>\n<li>The confusion about what
      DevOps actually means</li>\n<li>The idea of &quot;engineers doing everything&quot;
      is not sustainable</li>\n<li>A future where engineers don&#39;t need to know
      much about DevOps, and can focus on writing code</li>\n<li>Minimizing the operational
      burden for developers</li>\n<li>Monolithic application vs. microservices</li>\n<li>Why
      Massdriver does not use Webhooks to update configurations</li>\n<li>Security,
      access to source code, and potential source leaks</li>\n<li>The idea of multi-cloud,
      site-wide outage, and cloud agnosticism</li>\n<li>Hybrid cloud vs true multi-cloud</li>\n<li>Standardizing
      methods of packaging and deploying applications in the future</li>\n</ul>\n\n<p>Links
      mentioned in this episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\"
      rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nMassdriver — <a href=\"https://www.massdriver.cloud/\"
      rel=\"nofollow\">https://www.massdriver.cloud/</a><br>\nState of Production
      Survey (with Sweet Raffle Prizes) — <a href=\"https://blog.massdriver.cloud/surveys/state-of-production-2023/\"
      rel=\"nofollow\">https://blog.massdriver.cloud/surveys/state-of-production-2023/</a><br>\n$5000
      Massdriver Credit — <a href=\"https://www.massdriver.cloud/partners/elixir-wizards\"
      rel=\"nofollow\">https://www.massdriver.cloud/partners/elixir-wizards</a><br>\n<em>Elephant
      in the Cloud</em> Blog Post — <a href=\"https://startups.microsoft.com/blog/elephant-in-the-cloud/\"
      rel=\"nofollow\">https://startups.microsoft.com/blog/elephant-in-the-cloud/</a><br>\nRIAK
      — <a href=\"https://github.com/basho/riak\" rel=\"nofollow\">https://github.com/basho/riak</a><br>\nOtel
      — <a href=\"https://hexdocs.pm/\" rel=\"nofollow\">https://hexdocs.pm/</a><br>\nTerraform
      — <a href=\"https://hexdocs.pm/terraform/Terraform.html\" rel=\"nofollow\">https://hexdocs.pm/terraform/Terraform.html</a><br>\nDigitalOcean
      — <a href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a><br>\nHeroku
      — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nLinode
      — <a href=\"https://www.linode.com/\" rel=\"nofollow\">https://www.linode.com/</a><br>\nDocker
      — <a href=\"https://www.docker.com/\" rel=\"nofollow\">https://www.docker.com/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nWebhooks
      — <a href=\"https://hexdocs.pm/elixir_plaid/webhooks.html\" rel=\"nofollow\">https://hexdocs.pm/elixir_plaid/webhooks.html</a><br>\nGitOps
      — <a href=\"https://hexdocs.pm/git_ops/readme.html\" rel=\"nofollow\">https://hexdocs.pm/git_ops/readme.html</a><br>\nHelm
      — <a href=\"https://helm.sh/docs/\" rel=\"nofollow\">https://helm.sh/docs/</a></p><p>Special
      Guest: Cory O&#39;Daniel.</p>\n      "
  contentEncoded: "\n        <p>In this episode of Elixir Wizards, Cory O&#39;Daniel,
    CEO of Massdriver, talks with Sundi and Owen about the role of DevOps in the future
    of Elixir programming. They discuss the advantages of using Elixir for cloud infrastructure
    and the challenges of securing cloud systems. They elaborate on their hopes for
    the future, including processes and automation to streamline operations so programmers
    can spend more time doing what they love … writing software!</p>\n\n<p>Major topics
    of discussion in the episode:</p>\n\n<ul>\n<li>Cory’s ideal ratio of hot sauce
    to honey (recommended for chicken)</li>\n<li>Why this episode was renamed “how
    Cory almost killed his dad.&quot;</li>\n<li>The history of deployment with Elixir
    and Erlang</li>\n<li>The benefits of using Kubernetes to deploy Elixir applications</li>\n<li>The
    future of Elixir DevOps and Massdriver&#39;s role in solving related problems</li>\n<li>Benefits
    of reducing the operational burden for developers</li>\n<li>Whether Elixir is
    a good fit for Kubernetes</li>\n<li>How DevOps has changed over the last 10 years.</li>\n<li>The
    confusion about what DevOps actually means</li>\n<li>The idea of &quot;engineers
    doing everything&quot; is not sustainable</li>\n<li>A future where engineers don&#39;t
    need to know much about DevOps, and can focus on writing code</li>\n<li>Minimizing
    the operational burden for developers</li>\n<li>Monolithic application vs. microservices</li>\n<li>Why
    Massdriver does not use Webhooks to update configurations</li>\n<li>Security,
    access to source code, and potential source leaks</li>\n<li>The idea of multi-cloud,
    site-wide outage, and cloud agnosticism</li>\n<li>Hybrid cloud vs true multi-cloud</li>\n<li>Standardizing
    methods of packaging and deploying applications in the future</li>\n</ul>\n\n<p>Links
    mentioned in this episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\"
    rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nMassdriver — <a href=\"https://www.massdriver.cloud/\"
    rel=\"nofollow\">https://www.massdriver.cloud/</a><br>\nState of Production Survey
    (with Sweet Raffle Prizes) — <a href=\"https://blog.massdriver.cloud/surveys/state-of-production-2023/\"
    rel=\"nofollow\">https://blog.massdriver.cloud/surveys/state-of-production-2023/</a><br>\n$5000
    Massdriver Credit — <a href=\"https://www.massdriver.cloud/partners/elixir-wizards\"
    rel=\"nofollow\">https://www.massdriver.cloud/partners/elixir-wizards</a><br>\n<em>Elephant
    in the Cloud</em> Blog Post — <a href=\"https://startups.microsoft.com/blog/elephant-in-the-cloud/\"
    rel=\"nofollow\">https://startups.microsoft.com/blog/elephant-in-the-cloud/</a><br>\nRIAK
    — <a href=\"https://github.com/basho/riak\" rel=\"nofollow\">https://github.com/basho/riak</a><br>\nOtel
    — <a href=\"https://hexdocs.pm/\" rel=\"nofollow\">https://hexdocs.pm/</a><br>\nTerraform
    — <a href=\"https://hexdocs.pm/terraform/Terraform.html\" rel=\"nofollow\">https://hexdocs.pm/terraform/Terraform.html</a><br>\nDigitalOcean
    — <a href=\"https://www.digitalocean.com/\" rel=\"nofollow\">https://www.digitalocean.com/</a><br>\nHeroku
    — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nLinode
    — <a href=\"https://www.linode.com/\" rel=\"nofollow\">https://www.linode.com/</a><br>\nDocker
    — <a href=\"https://www.docker.com/\" rel=\"nofollow\">https://www.docker.com/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nWebhooks
    — <a href=\"https://hexdocs.pm/elixir_plaid/webhooks.html\" rel=\"nofollow\">https://hexdocs.pm/elixir_plaid/webhooks.html</a><br>\nGitOps
    — <a href=\"https://hexdocs.pm/git_ops/readme.html\" rel=\"nofollow\">https://hexdocs.pm/git_ops/readme.html</a><br>\nHelm
    — <a href=\"https://helm.sh/docs/\" rel=\"nofollow\">https://helm.sh/docs/</a></p><p>Special
    Guest: Cory O&#39;Daniel.</p>\n      "
- title: 'Season 10 Kickoff: The Hosts Discuss The Future of Elixir'
  slug: s10-e01-future-of-elixir
  link: https://smartlogic.io/podcast/elixir-wizards/s10-e01-future-of-elixir
  guid: 546e0dce-c0b7-4461-bc1a-c33f0ee5adf8
  pubDate: Thu, 23 Mar 2023 06:00:00 -0400
  pubDateFriendly: March 23, 2023
  description: "It’s the season 10 premiere of the Elixir Wizards podcast! Sundi Myint,
    Owen Bickford, and Dan Ivovich kick off the season with a spirited conversation
    about what they hope to see in the future of the Elixir programming language,
    experiences that inform their predictions, and excitement for this season’s lineup
    of guests.\nThey touch on how Elixir has evolved in the previous ten years and
    how the range of use cases has expanded beyond web development.\nThe hosts introduce
    the season 10 theme: The Next Ten Years of Elixir\nDan explains his initial hesitation
    and how he was ultimately won over by the language\nOwen talks about functional
    programming and why Elixir piqued his interest\nSundi compares Elixir to other
    languages she’s worked with and why she thinks it’s more intuitive and readable\nSundi
    talks about her recent experience using Flutter for mobile application development\nThe
    hosts express excitement about the various ways Elixir is currently being used
    and its potential for growth\nThe Wizards express interest in hearing from guests
    this season to gain more perspective\nThey discuss Phoenix, LiveView, documentation,
    Flutter, Dart, and resources available to the Elixir community, and the benefits
    of being fluent in different programming languages\nOwen suggests that Elixir
    and Phoenix are optimal for projects with limited resources and leaner teams\nThey
    highlight the importance of building resource-efficient apps that work well on
    low-powered devices\nDan expresses his desire to embrace types more but acknowledges
    that a first-party typing system is unlikely\nThe speakers discuss how Elixir
    has made complex tasks more accessible through features like LiveView, Phoenix
    Presence, WebSockets, Pub/Sub, Nerves, and ML libraries\nThey express excitement
    about the possibilities for the future of Elixir\nLinks mentioned in this episode:\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic\nAxon
    – https://hexdocs.pm/axon/Axon.html\nBumblebee – https://hex.pm/packages/bumblebee\nHEEx
    – https://hexdocs.pm/phoenixliveview/assigns-eex.html\nPhoenix LiveView – https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nNumerical
    Elixir – https://hexdocs.pm/nx/intro-to-nx.html\nHugging Face – https://huggingface.co/docs\nFlutter
    – https://docs.flutter.dev/\nDart – https://dart.dev/\nBroadway – https://hexdocs.pm/broadway/Broadway.html\nPhoenix
    Presence – https://hexdocs.pm/phoenix/Phoenix.Presence.html\nNerves – https://hexdocs.pm/nerves/getting-started.html\nWebSocket
    – https://hexdocs.pm/web_socket/readme.html \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5Va0etaG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/546e0dce-c0b7-4461-bc1a-c33f0ee5adf8.mp3
    length: '80641983'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '10'
    author: SmartLogic LLC
    subtitle: In the Season 10 premiere of Elixir Wizards, the hosts discuss the potential
      for the future of the Elixir Programming language, experiences that inform their
      predictions, and excitement for this season’s lineup of guests. They touch on
      how Elixir has evolved in the previous ten years and how the range of use cases
      has expanded beyond web development.
    duration: '41:48'
    explicit: 'no'
    keywords: elixir programming language, phoenix framework, elixir wizards podcast,
      SmartLogic, programming, software engineering, coding, app development, software
      development, backend development, functional programming languages, type systems,
      machine learning, artificial intelligence, cloud computing, developer tools,
      web development, tech trends, tech interviews, developer resources, programming
      news, programming education, tech news, full-stack development, LiveView, data
      processing, coding best practices, dart programming language, Elixir programming
      community, developer experience, distributed systems
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/546e0dce-c0b7-4461-bc1a-c33f0ee5adf8/cover.jpg?v=1
    summary: "\n        <p>It’s the season 10 premiere of the Elixir Wizards podcast!
      Sundi Myint, Owen Bickford, and Dan Ivovich kick off the season with a spirited
      conversation about what they hope to see in the future of the Elixir programming
      language, experiences that inform their predictions, and excitement for this
      season’s lineup of guests.</p>\n\n<p>They touch on how Elixir has evolved in
      the previous ten years and how the range of use cases has expanded beyond web
      development.</p>\n\n<ul>\n<li>The hosts introduce the season 10 theme: The Next
      Ten Years of Elixir</li>\n<li>Dan explains his initial hesitation and how he
      was ultimately won over by the language</li>\n<li>Owen talks about functional
      programming and why Elixir piqued his interest</li>\n<li>Sundi compares Elixir
      to other languages she’s worked with and why she thinks it’s more intuitive
      and readable</li>\n<li>Sundi talks about her recent experience using Flutter
      for mobile application development</li>\n<li>The hosts express excitement about
      the various ways Elixir is currently being used and its potential for growth</li>\n<li>The
      Wizards express interest in hearing from guests this season to gain more perspective</li>\n<li>They
      discuss Phoenix, LiveView, documentation, Flutter, Dart, and resources available
      to the Elixir community, and the benefits of being fluent in different programming
      languages</li>\n<li>Owen suggests that Elixir and Phoenix are optimal for projects
      with limited resources and leaner teams</li>\n<li>They highlight the importance
      of building resource-efficient apps that work well on low-powered devices</li>\n<li>Dan
      expresses his desire to embrace types more but acknowledges that a first-party
      typing system is unlikely</li>\n<li>The speakers discuss how Elixir has made
      complex tasks more accessible through features like LiveView, Phoenix Presence,
      WebSockets, Pub/Sub, Nerves, and ML libraries</li>\n<li>They express excitement
      about the possibilities for the future of Elixir</li>\n</ul>\n\n<p>Links mentioned
      in this episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nAxon
      – <a href=\"https://hexdocs.pm/axon/Axon.html\" rel=\"nofollow\">https://hexdocs.pm/axon/Axon.html</a><br>\nBumblebee
      – <a href=\"https://hex.pm/packages/bumblebee\" rel=\"nofollow\">https://hex.pm/packages/bumblebee</a><br>\nHEEx
      – <a href=\"https://hexdocs.pm/phoenix_live_view/assigns-eex.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/assigns-eex.html</a><br>\nPhoenix
      LiveView – <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nNumerical
      Elixir – <a href=\"https://hexdocs.pm/nx/intro-to-nx.html\" rel=\"nofollow\">https://hexdocs.pm/nx/intro-to-nx.html</a><br>\nHugging
      Face – <a href=\"https://huggingface.co/docs\" rel=\"nofollow\">https://huggingface.co/docs</a><br>\nFlutter
      – <a href=\"https://docs.flutter.dev/\" rel=\"nofollow\">https://docs.flutter.dev/</a><br>\nDart
      – <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nBroadway
      – <a href=\"https://hexdocs.pm/broadway/Broadway.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a><br>\nPhoenix
      Presence – <a href=\"https://hexdocs.pm/phoenix/Phoenix.Presence.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/Phoenix.Presence.html</a><br>\nNerves
      – <a href=\"https://hexdocs.pm/nerves/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nerves/getting-started.html</a><br>\nWebSocket
      – <a href=\"https://hexdocs.pm/web_socket/readme.html\" rel=\"nofollow\">https://hexdocs.pm/web_socket/readme.html</a></p>\n
      \     "
  contentEncoded: "\n        <p>It’s the season 10 premiere of the Elixir Wizards
    podcast! Sundi Myint, Owen Bickford, and Dan Ivovich kick off the season with
    a spirited conversation about what they hope to see in the future of the Elixir
    programming language, experiences that inform their predictions, and excitement
    for this season’s lineup of guests.</p>\n\n<p>They touch on how Elixir has evolved
    in the previous ten years and how the range of use cases has expanded beyond web
    development.</p>\n\n<ul>\n<li>The hosts introduce the season 10 theme: The Next
    Ten Years of Elixir</li>\n<li>Dan explains his initial hesitation and how he was
    ultimately won over by the language</li>\n<li>Owen talks about functional programming
    and why Elixir piqued his interest</li>\n<li>Sundi compares Elixir to other languages
    she’s worked with and why she thinks it’s more intuitive and readable</li>\n<li>Sundi
    talks about her recent experience using Flutter for mobile application development</li>\n<li>The
    hosts express excitement about the various ways Elixir is currently being used
    and its potential for growth</li>\n<li>The Wizards express interest in hearing
    from guests this season to gain more perspective</li>\n<li>They discuss Phoenix,
    LiveView, documentation, Flutter, Dart, and resources available to the Elixir
    community, and the benefits of being fluent in different programming languages</li>\n<li>Owen
    suggests that Elixir and Phoenix are optimal for projects with limited resources
    and leaner teams</li>\n<li>They highlight the importance of building resource-efficient
    apps that work well on low-powered devices</li>\n<li>Dan expresses his desire
    to embrace types more but acknowledges that a first-party typing system is unlikely</li>\n<li>The
    speakers discuss how Elixir has made complex tasks more accessible through features
    like LiveView, Phoenix Presence, WebSockets, Pub/Sub, Nerves, and ML libraries</li>\n<li>They
    express excitement about the possibilities for the future of Elixir</li>\n</ul>\n\n<p>Links
    mentioned in this episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\"
    rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nAxon – <a href=\"https://hexdocs.pm/axon/Axon.html\"
    rel=\"nofollow\">https://hexdocs.pm/axon/Axon.html</a><br>\nBumblebee – <a href=\"https://hex.pm/packages/bumblebee\"
    rel=\"nofollow\">https://hex.pm/packages/bumblebee</a><br>\nHEEx – <a href=\"https://hexdocs.pm/phoenix_live_view/assigns-eex.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/assigns-eex.html</a><br>\nPhoenix
    LiveView – <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nNumerical
    Elixir – <a href=\"https://hexdocs.pm/nx/intro-to-nx.html\" rel=\"nofollow\">https://hexdocs.pm/nx/intro-to-nx.html</a><br>\nHugging
    Face – <a href=\"https://huggingface.co/docs\" rel=\"nofollow\">https://huggingface.co/docs</a><br>\nFlutter
    – <a href=\"https://docs.flutter.dev/\" rel=\"nofollow\">https://docs.flutter.dev/</a><br>\nDart
    – <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nBroadway
    – <a href=\"https://hexdocs.pm/broadway/Broadway.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/Broadway.html</a><br>\nPhoenix
    Presence – <a href=\"https://hexdocs.pm/phoenix/Phoenix.Presence.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/Phoenix.Presence.html</a><br>\nNerves
    – <a href=\"https://hexdocs.pm/nerves/getting-started.html\" rel=\"nofollow\">https://hexdocs.pm/nerves/getting-started.html</a><br>\nWebSocket
    – <a href=\"https://hexdocs.pm/web_socket/readme.html\" rel=\"nofollow\">https://hexdocs.pm/web_socket/readme.html</a></p>\n
    \     "
- title: 'That''s a Wrap: Season 9 Finale with Sundi, Bilal, Owen & Dan! '
  slug: s9-e13-all-hosts-season-finale
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e13-all-hosts-season-finale
  guid: 8de056ea-154a-46d4-8586-6e2497fc11b2
  pubDate: Thu, 29 Dec 2022 06:00:00 -0500
  pubDateFriendly: December 29, 2022
  description: "Elixir Wizards Season 9 is coming to an end! In the season finale,
    hosts Sundi, Bilal, Owen, and Dan reflect on the guests and highlights that made
    this season unforgettable. We thank you for joining us as we parsed the particulars
    and can't wait to reconnect next season for more insightful conversations!\n*Please
    remember to take our LISTENER SURVEY (https://smr.tl/survey2022) so we can come
    back bigger and better for Season 10 –  Coming in early 2023!! *\nSmartLogic —
    https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+rtzsmSl8
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8de056ea-154a-46d4-8586-6e2497fc11b2.mp3
    length: '88854003'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Elixir Wizards Season 9 is coming to an end! In the season finale, hosts
      Sundi, Bilal, Owen, and Dan reflect on the guests and highlights that made this
      season unforgettable. We thank you for joining us as we parsed the particulars
      and can't wait to reconnect next season for more insightful conversations!
    duration: '36:53'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8de056ea-154a-46d4-8586-6e2497fc11b2/cover.jpg?v=1
    summary: "\n        <p>Elixir Wizards Season 9 is coming to an end! In the season
      finale, hosts Sundi, Bilal, Owen, and Dan reflect on the guests and highlights
      that made this season unforgettable. We thank you for joining us as we parsed
      the particulars and can&#39;t wait to reconnect next season for more insightful
      conversations!</p>\n\n<p>*<em>Please remember to take our <a href=\"https://smr.tl/survey2022\"
      rel=\"nofollow\">LISTENER SURVEY</a> so we can come back bigger and better for
      Season 10 –  Coming in early 2023!! *</em></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\"
      rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n      "
  contentEncoded: "\n        <p>Elixir Wizards Season 9 is coming to an end! In the
    season finale, hosts Sundi, Bilal, Owen, and Dan reflect on the guests and highlights
    that made this season unforgettable. We thank you for joining us as we parsed
    the particulars and can&#39;t wait to reconnect next season for more insightful
    conversations!</p>\n\n<p>*<em>Please remember to take our <a href=\"https://smr.tl/survey2022\"
    rel=\"nofollow\">LISTENER SURVEY</a> so we can come back bigger and better for
    Season 10 –  Coming in early 2023!! *</em></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\"
    rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n      "
- title: Marcelo Dominguez on Command and Query Responsibility Segregation
  slug: s9-e12-marcelo-dominguez-cqrs
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e12-marcelo-dominguez-cqrs
  guid: da15e490-7f1b-4c7c-88c0-3df0330bcd36
  pubDate: Thu, 22 Dec 2022 06:00:00 -0500
  pubDateFriendly: December 22, 2022
  description: "Today on Elixir Wizards, Marcelo Dominguez, co-founder at Mimiquate,
    joins us to parse the particulars of command query responsibility segregation
    (CQRS). Mimiquate is a specialized team of developers providing solutions for
    their clients with Elixir, Ruby on Rails, and Ember. Tune in to learn the benefits
    and potential applications of CQRS.\n*Please remember to take our LISTENER SURVEY
    (https://smr.tl/survey2022) so we can come back bigger and better for Season 10
    –  Coming in early 2023!! *\nThe Wizards catch up with Marcelo and hear about
    ElixirConf Uruguay and Advent of Code 2022\nMarcelo and the hosts run through
    their experience with CQRS and event sourcing\nThe definition of CQRS\nWhat is
    the elevator pitch for CQRS\nMarcelo distinguishes between database writes and
    reads\nWhat are some limitations of the CRUD pattern\nHow to know whether your
    application will benefit from the CQRS pattern\nWhat tools are in the Elixir ecosystem
    for implementing CQRS\nHow to quickly recover from outages within a mature CQRS
    application\nHow multi-node distribution impact CQRS architecture\nLinks Mentioned
    in Today’s Episode:\nEventsourcing and CQRS in Elixir (https://www.youtube.com/watch?v=NTzP_5CHqKk)
    \nCQRS Pattern (Microsoft) (https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs)\nCommanded
    (Hex Docs) (https://hexdocs.pm/commanded/Commanded.html)\nAdvent of Code (https://adventofcode.com/)\nMarcelo’s
    Advent of Code Gist for Day 1 (https://gist.github.com/marpo60/bcf7dd45003adfe01b5581d03157a5de)\nMarcelo
    Dominguez on LinkedIn — https://uy.linkedin.com/in/marpo60\nMarcelo Dominguez
    on Twitter — https://twitter.com/marpo60\nMarcelo Dominguez on GitHub –  https://github.com/marpo60\nMimiquate
    –  https://www.mimiquate.com/\nSmartLogic — https://smartlogic.io/\nSmartLogic
    Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+RYH5po13
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/da15e490-7f1b-4c7c-88c0-3df0330bcd36.mp3
    length: '84881218'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Marcelo Dominguez, co-founder at Mimiquate,
      joins us to parse the particulars of command query responsibility segregation
      (CQRS). Mimiquate is a specialized team of developers providing solutions for
      their clients with Elixir, Ruby on Rails, and Ember. Tune in to learn the benefits
      and potential applications of CQRS.
    duration: '44:12'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/da15e490-7f1b-4c7c-88c0-3df0330bcd36/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Marcelo Dominguez, co-founder
      at Mimiquate, joins us to parse the particulars of command query responsibility
      segregation (CQRS). Mimiquate is a specialized team of developers providing
      solutions for their clients with Elixir, Ruby on Rails, and Ember. Tune in to
      learn the benefits and potential applications of CQRS.</p>\n\n<p>*<em>Please
      remember to take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER
      SURVEY</a> so we can come back bigger and better for Season 10 –  Coming in
      early 2023!! *</em></p>\n\n<ul>\n<li>The Wizards catch up with Marcelo and hear
      about ElixirConf Uruguay and Advent of Code 2022</li>\n<li>Marcelo and the hosts
      run through their experience with CQRS and event sourcing</li>\n<li>The definition
      of CQRS</li>\n<li>What is the elevator pitch for CQRS</li>\n<li>Marcelo distinguishes
      between database writes and reads</li>\n<li>What are some limitations of the
      CRUD pattern</li>\n<li>How to know whether your application will benefit from
      the CQRS pattern</li>\n<li>What tools are in the Elixir ecosystem for implementing
      CQRS</li>\n<li>How to quickly recover from outages within a mature CQRS application</li>\n<li>How
      multi-node distribution impact CQRS architecture</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:<br>\n<a href=\"https://www.youtube.com/watch?v=NTzP_5CHqKk\"
      rel=\"nofollow\">Eventsourcing and CQRS in Elixir</a> <br>\n<a href=\"https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs\"
      rel=\"nofollow\">CQRS Pattern (Microsoft)</a><br>\n<a href=\"https://hexdocs.pm/commanded/Commanded.html\"
      rel=\"nofollow\">Commanded (Hex Docs)</a><br>\n<a href=\"https://adventofcode.com/\"
      rel=\"nofollow\">Advent of Code</a><br>\n<a href=\"https://gist.github.com/marpo60/bcf7dd45003adfe01b5581d03157a5de\"
      rel=\"nofollow\">Marcelo’s Advent of Code Gist for Day 1</a></p>\n\n<p>Marcelo
      Dominguez on LinkedIn — <a href=\"https://uy.linkedin.com/in/marpo60\" rel=\"nofollow\">https://uy.linkedin.com/in/marpo60</a><br>\nMarcelo
      Dominguez on Twitter — <a href=\"https://twitter.com/marpo60\" rel=\"nofollow\">https://twitter.com/marpo60</a><br>\nMarcelo
      Dominguez on GitHub –  <a href=\"https://github.com/marpo60\" rel=\"nofollow\">https://github.com/marpo60</a><br>\nMimiquate
      –  <a href=\"https://www.mimiquate.com/\" rel=\"nofollow\">https://www.mimiquate.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Marcelo Dominguez, co-founder
    at Mimiquate, joins us to parse the particulars of command query responsibility
    segregation (CQRS). Mimiquate is a specialized team of developers providing solutions
    for their clients with Elixir, Ruby on Rails, and Ember. Tune in to learn the
    benefits and potential applications of CQRS.</p>\n\n<p>*<em>Please remember to
    take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER SURVEY</a>
    so we can come back bigger and better for Season 10 –  Coming in early 2023!!
    *</em></p>\n\n<ul>\n<li>The Wizards catch up with Marcelo and hear about ElixirConf
    Uruguay and Advent of Code 2022</li>\n<li>Marcelo and the hosts run through their
    experience with CQRS and event sourcing</li>\n<li>The definition of CQRS</li>\n<li>What
    is the elevator pitch for CQRS</li>\n<li>Marcelo distinguishes between database
    writes and reads</li>\n<li>What are some limitations of the CRUD pattern</li>\n<li>How
    to know whether your application will benefit from the CQRS pattern</li>\n<li>What
    tools are in the Elixir ecosystem for implementing CQRS</li>\n<li>How to quickly
    recover from outages within a mature CQRS application</li>\n<li>How multi-node
    distribution impact CQRS architecture</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:<br>\n<a href=\"https://www.youtube.com/watch?v=NTzP_5CHqKk\" rel=\"nofollow\">Eventsourcing
    and CQRS in Elixir</a> <br>\n<a href=\"https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs\"
    rel=\"nofollow\">CQRS Pattern (Microsoft)</a><br>\n<a href=\"https://hexdocs.pm/commanded/Commanded.html\"
    rel=\"nofollow\">Commanded (Hex Docs)</a><br>\n<a href=\"https://adventofcode.com/\"
    rel=\"nofollow\">Advent of Code</a><br>\n<a href=\"https://gist.github.com/marpo60/bcf7dd45003adfe01b5581d03157a5de\"
    rel=\"nofollow\">Marcelo’s Advent of Code Gist for Day 1</a></p>\n\n<p>Marcelo
    Dominguez on LinkedIn — <a href=\"https://uy.linkedin.com/in/marpo60\" rel=\"nofollow\">https://uy.linkedin.com/in/marpo60</a><br>\nMarcelo
    Dominguez on Twitter — <a href=\"https://twitter.com/marpo60\" rel=\"nofollow\">https://twitter.com/marpo60</a><br>\nMarcelo
    Dominguez on GitHub –  <a href=\"https://github.com/marpo60\" rel=\"nofollow\">https://github.com/marpo60</a><br>\nMimiquate
    –  <a href=\"https://www.mimiquate.com/\" rel=\"nofollow\">https://www.mimiquate.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: 'Chris Miller on Crafting a Programming Language '
  slug: s9-e11-chris-miller-programming-language
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e11-chris-miller-programming-language
  guid: 769dc10d-4331-48fa-82b4-d13557898c60
  pubDate: Thu, 15 Dec 2022 06:00:00 -0500
  pubDateFriendly: December 15, 2022
  description: "Today on Elixir Wizards, Chris Miller, software engineer at Corvus
    Insurance, joins us again for an in-depth discussion on the different approaches
    to programming. We dive into the conception and origin of new languages and how
    they evolve to solve new problems over time.\n*Please remember to take our LISTENER
    SURVEY (https://smr.tl/survey2022) so we can come back bigger and better for Season
    10 –  Coming in early 2023!! *\nKey Points From This Episode:\nThe hosts catch
    up with Chris and learn a bit about Corvus Insurance \nWhat excites Chris about
    programming language and new ways of thinking\nChris' fascination with all different
    types of languages from Chinese to Greek to C++\nWe get a refresher on the concept
    of Domain Specific Language\nWhat DSL is being used for certains problems in the
    domain at Corvus Insurance \nWhy a coder should care about the crafting of a programming
    language \nWe discuss why all coders don't only write assembly code \nChris breaks
    down how he has attempted to write his own programming language \nWe learn some
    inside tips on how stay within the abstract boundary when building a domain \nHow
    Chris' experience with multiple coding languages has influenced his work in Elixir\nWhat
    the advantage of knowing multiple languages is \nLinks Mentioned in Today’s Episode:\nCorvus
    Insurance on Twitter — https://twitter.com/CorvusInsurance\nCorvus Insurance --
    https://www.corvusinsurance.com/\nSmartLogic — https://smartlogic.io/\nSmartLogic
    Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+kKtocYfA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/769dc10d-4331-48fa-82b4-d13557898c60.mp3
    length: '82410453'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, Chris Miller, software engineer at Corvus Insurance,
      joins us again for an in-depth discussion on the different approaches to programming.
      We dive into the conception and origin of new languages and how they evolve
      to solve new problems over time.
    duration: '42:55'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/769dc10d-4331-48fa-82b4-d13557898c60/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, Chris Miller, software engineer
      at Corvus Insurance, joins us again for an in-depth discussion on the different
      approaches to programming. We dive into the conception and origin of new languages
      and how they evolve to solve new problems over time.</p>\n\n<p>*<em>Please remember
      to take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER
      SURVEY</a> so we can come back bigger and better for Season 10 –  Coming in
      early 2023!! *</em></p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
      hosts catch up with Chris and learn a bit about Corvus Insurance </li>\n<li>What
      excites Chris about programming language and new ways of thinking</li>\n<li>Chris&#39;
      fascination with all different types of languages from Chinese to Greek to C++</li>\n<li>We
      get a refresher on the concept of Domain Specific Language</li>\n<li>What DSL
      is being used for certains problems in the domain at Corvus Insurance </li>\n<li>Why
      a coder should care about the crafting of a programming language </li>\n<li>We
      discuss why all coders don&#39;t only write assembly code </li>\n<li>Chris breaks
      down how he has attempted to write his own programming language </li>\n<li>We
      learn some inside tips on how stay within the abstract boundary when building
      a domain </li>\n<li>How Chris&#39; experience with multiple coding languages
      has influenced his work in Elixir</li>\n<li>What the advantage of knowing multiple
      languages is </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Corvus
      Insurance on Twitter — <a href=\"https://twitter.com/CorvusInsurance\" rel=\"nofollow\">https://twitter.com/CorvusInsurance</a><br>\nCorvus
      Insurance -- <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards, Chris Miller, software engineer
    at Corvus Insurance, joins us again for an in-depth discussion on the different
    approaches to programming. We dive into the conception and origin of new languages
    and how they evolve to solve new problems over time.</p>\n\n<p>*<em>Please remember
    to take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER SURVEY</a>
    so we can come back bigger and better for Season 10 –  Coming in early 2023!!
    *</em></p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The hosts catch
    up with Chris and learn a bit about Corvus Insurance </li>\n<li>What excites Chris
    about programming language and new ways of thinking</li>\n<li>Chris&#39; fascination
    with all different types of languages from Chinese to Greek to C++</li>\n<li>We
    get a refresher on the concept of Domain Specific Language</li>\n<li>What DSL
    is being used for certains problems in the domain at Corvus Insurance </li>\n<li>Why
    a coder should care about the crafting of a programming language </li>\n<li>We
    discuss why all coders don&#39;t only write assembly code </li>\n<li>Chris breaks
    down how he has attempted to write his own programming language </li>\n<li>We
    learn some inside tips on how stay within the abstract boundary when building
    a domain </li>\n<li>How Chris&#39; experience with multiple coding languages has
    influenced his work in Elixir</li>\n<li>What the advantage of knowing multiple
    languages is </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Corvus
    Insurance on Twitter — <a href=\"https://twitter.com/CorvusInsurance\" rel=\"nofollow\">https://twitter.com/CorvusInsurance</a><br>\nCorvus
    Insurance -- <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: 'Frank Hunleth and Joe Martin on the Particulars of Nerves '
  slug: s9-e10-frank-and-joe-particulars-of-nerves
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e10-frank-and-joe-particulars-of-nerves
  guid: 2cef246c-6c5d-4013-9498-a354800d3d4f
  pubDate: Thu, 08 Dec 2022 06:00:00 -0500
  pubDateFriendly: December  8, 2022
  description: "Today on Elixir Wizards, we speak with two great minds in the Elixir
    community: Frank Hunleth from SmartRent and Joe Martin from Company Six. Join
    us to parse the particulars of Nerves, from production and terminology, to stacks,
    customization, and how they function.\n*Please remember to take our LISTENER SURVEY
    (https://smr.tl/survey2022) so we can come back bigger and better for Season 10
    –  Coming in early 2023!! *\nKey Points From This Episode:\nHow both Frank & Joe
    became interested in Elixir \nWe learn what nerves is currently being used for
    in production\nHow Nerves is being utilized within farming and energy companies
    \nWhat the elevator pitch for nerves would be \nHow well nerves play with pre-existing
    embedded projects in other languages, especially when having to coexist within
    a system\nHow much can a user customize nerves \nWhat is Buildroot and the functions
    that it serves \nFrank explains how there are two worlds: elixir world & nerves
    systems\nJoe and Frank let us know what they are most excited about in the near
    future of nerves and Elixir \nLinks Mentioned in Today’s Episode:\nLISTENER SURVEY
    – https://smr.tl/survey2022\nNerves Livebook – https://github.com/livebook-dev/nerves_livebook\nFrank
    Hunleth on LinkedIn — https://www.linkedin.com/in/fhunleth/\nFrank Hunleth on
    Twitter — https://twitter.com/fhunleth\nFrank Hunleth on GitHub -- https://github.com/fhunleth\nJoe
    Martin on LinkedIn — https://www.linkedin.com/in/joseph-martin-265861b2/\nJoe
    Martin on GitHub – http://github.com/josephmartin09\nSmartRent -- https://smartrent.com/\nCompany
    Six – https://www.co6.com/\nSmartLogic — https://smartlogic.io/\nSmartLogic Twitter
    — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qFDzTM4y
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2cef246c-6c5d-4013-9498-a354800d3d4f.mp3
    length: '86837623'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: 'Today on Elixir Wizards, we speak with two great minds in the Elixir
      community: Frank Hunleth from SmartRent and Joe Martin from Company Six. Join
      us to parse the particulars of Nerves, from production and terminology, to stacks,
      customization, and how they function.'
    duration: '45:13'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2cef246c-6c5d-4013-9498-a354800d3d4f/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, we speak with two great minds
      in the Elixir community: Frank Hunleth from SmartRent and Joe Martin from Company
      Six. Join us to parse the particulars of Nerves, from production and terminology,
      to stacks, customization, and how they function.</p>\n\n<p>*<em>Please remember
      to take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER
      SURVEY</a> so we can come back bigger and better for Season 10 –  Coming in
      early 2023!! *</em></p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>How
      both Frank &amp; Joe became interested in Elixir </li>\n<li>We learn what nerves
      is currently being used for in production</li>\n<li>How Nerves is being utilized
      within farming and energy companies </li>\n<li>What the elevator pitch for nerves
      would be </li>\n<li>How well nerves play with pre-existing embedded projects
      in other languages, especially when having to coexist within a system</li>\n<li>How
      much can a user customize nerves </li>\n<li>What is Buildroot and the functions
      that it serves </li>\n<li>Frank explains how there are two worlds: elixir world
      &amp; nerves systems</li>\n<li>Joe and Frank let us know what they are most
      excited about in the near future of nerves and Elixir </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>LISTENER SURVEY – <a href=\"https://smr.tl/survey2022\"
      rel=\"nofollow\">https://smr.tl/survey2022</a><br>\nNerves Livebook – <a href=\"https://github.com/livebook-dev/nerves_livebook\"
      rel=\"nofollow\">https://github.com/livebook-dev/nerves_livebook</a><br>\nFrank
      Hunleth on LinkedIn — <a href=\"https://www.linkedin.com/in/fhunleth/\" rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nFrank
      Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nFrank
      Hunleth on GitHub -- <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nJoe
      Martin on LinkedIn — <a href=\"https://www.linkedin.com/in/joseph-martin-265861b2/\"
      rel=\"nofollow\">https://www.linkedin.com/in/joseph-martin-265861b2/</a><br>\nJoe
      Martin on GitHub – <a href=\"http://github.com/josephmartin09\" rel=\"nofollow\">http://github.com/josephmartin09</a><br>\nSmartRent
      -- <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nCompany
      Six – <a href=\"https://www.co6.com/\" rel=\"nofollow\">https://www.co6.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards, we speak with two great minds
    in the Elixir community: Frank Hunleth from SmartRent and Joe Martin from Company
    Six. Join us to parse the particulars of Nerves, from production and terminology,
    to stacks, customization, and how they function.</p>\n\n<p>*<em>Please remember
    to take our <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">LISTENER SURVEY</a>
    so we can come back bigger and better for Season 10 –  Coming in early 2023!!
    *</em></p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>How both Frank
    &amp; Joe became interested in Elixir </li>\n<li>We learn what nerves is currently
    being used for in production</li>\n<li>How Nerves is being utilized within farming
    and energy companies </li>\n<li>What the elevator pitch for nerves would be </li>\n<li>How
    well nerves play with pre-existing embedded projects in other languages, especially
    when having to coexist within a system</li>\n<li>How much can a user customize
    nerves </li>\n<li>What is Buildroot and the functions that it serves </li>\n<li>Frank
    explains how there are two worlds: elixir world &amp; nerves systems</li>\n<li>Joe
    and Frank let us know what they are most excited about in the near future of nerves
    and Elixir </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>LISTENER
    SURVEY – <a href=\"https://smr.tl/survey2022\" rel=\"nofollow\">https://smr.tl/survey2022</a><br>\nNerves
    Livebook – <a href=\"https://github.com/livebook-dev/nerves_livebook\" rel=\"nofollow\">https://github.com/livebook-dev/nerves_livebook</a><br>\nFrank
    Hunleth on LinkedIn — <a href=\"https://www.linkedin.com/in/fhunleth/\" rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nFrank
    Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nFrank
    Hunleth on GitHub -- <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nJoe
    Martin on LinkedIn — <a href=\"https://www.linkedin.com/in/joseph-martin-265861b2/\"
    rel=\"nofollow\">https://www.linkedin.com/in/joseph-martin-265861b2/</a><br>\nJoe
    Martin on GitHub – <a href=\"http://github.com/josephmartin09\" rel=\"nofollow\">http://github.com/josephmartin09</a><br>\nSmartRent
    -- <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nCompany
    Six – <a href=\"https://www.co6.com/\" rel=\"nofollow\">https://www.co6.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: Jenny Bramble on Testing and Collaboration at Papa
  slug: s9-e9-jennybramble-testingandcollaboration
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e9-jennybramble-testingandcollaboration
  guid: 0b19bc79-2b52-45b0-8058-7e260d2dccf6
  pubDate: Thu, 01 Dec 2022 06:00:00 -0500
  pubDateFriendly: December  1, 2022
  description: "Today on Elixir Wizards, we chat with Jenny Bramble. Jenny is the
    Director of Quality Engineering at Papa, a platform that connects older adults
    and low-income families with companionship and a helping hand with daily tasks.
    Tune in to learn more about Jenny's experience with testing and team collaboration
    at Papa.\nKey Points From This Episode:\nJenny tells us about her journey to learning
    Elixir (for 8 years now!)\nWe learn about the 24 talks that Jenny has done as
    a keynote speaker\nThe breakdown of her talk this year at Elixir Conf on upgrades\nHow
    Jenny got in to writing tests after going to college for computer science\nWhat
    goes into developer handoff and how that varies depending on the company and team
    \nThe connection and importance between customer service and empathy \nWhat it's
    like to work in Quality Engineering and Testing at Papa\nWhat is testing?\nShe
    provides helpful tips of things that tend to be caught up by QA during code reviews\nJenny
    has a course on management for Test Automation coming out in 2023!\nLinks Mentioned
    in Today’s Episode:\nJenny Bramble on LinkedIn — https://www.linkedin.com/in/jennybramble/\nJenny
    Bramble on Twitter — https://twitter.com/jennydoesthings\nJenny Bramble on GitHub
    -- https://github.com/jennydoesthings\nPapa -- https://www.papa.com/\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+udbr5d9M
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0b19bc79-2b52-45b0-8058-7e260d2dccf6.mp3
    length: '90264692'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards, we chat with Jenny Bramble. Jenny is the Director
      of Quality Engineering at Papa, a platform that connects older adults and low-income
      families with companionship and a helping hand with daily tasks. Tune in to
      learn more about Jenny's experience with testing and team collaboration at Papa.
    duration: '46:15'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0b19bc79-2b52-45b0-8058-7e260d2dccf6/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards, we chat with Jenny Bramble. Jenny
      is the Director of Quality Engineering at Papa, a platform that connects older
      adults and low-income families with companionship and a helping hand with daily
      tasks. Tune in to learn more about Jenny&#39;s experience with testing and team
      collaboration at Papa.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Jenny
      tells us about her journey to learning Elixir (for 8 years now!)</li>\n<li>We
      learn about the 24 talks that Jenny has done as a keynote speaker</li>\n<li>The
      breakdown of her talk this year at Elixir Conf on upgrades</li>\n<li>How Jenny
      got in to writing tests after going to college for computer science</li>\n<li>What
      goes into developer handoff and how that varies depending on the company and
      team </li>\n<li>The connection and importance between customer service and empathy
      </li>\n<li>What it&#39;s like to work in Quality Engineering and Testing at
      Papa</li>\n<li>What is testing?</li>\n<li>She provides helpful tips of things
      that tend to be caught up by QA during code reviews</li>\n<li>Jenny has a course
      on management for Test Automation coming out in 2023!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Jenny Bramble on LinkedIn — <a href=\"https://www.linkedin.com/in/jennybramble/\"
      rel=\"nofollow\">https://www.linkedin.com/in/jennybramble/</a><br>\nJenny Bramble
      on Twitter — <a href=\"https://twitter.com/jennydoesthings\" rel=\"nofollow\">https://twitter.com/jennydoesthings</a><br>\nJenny
      Bramble on GitHub -- <a href=\"https://github.com/jennydoesthings\" rel=\"nofollow\">https://github.com/jennydoesthings</a><br>\nPapa
      -- <a href=\"https://www.papa.com/\" rel=\"nofollow\">https://www.papa.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards, we chat with Jenny Bramble.
    Jenny is the Director of Quality Engineering at Papa, a platform that connects
    older adults and low-income families with companionship and a helping hand with
    daily tasks. Tune in to learn more about Jenny&#39;s experience with testing and
    team collaboration at Papa.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Jenny
    tells us about her journey to learning Elixir (for 8 years now!)</li>\n<li>We
    learn about the 24 talks that Jenny has done as a keynote speaker</li>\n<li>The
    breakdown of her talk this year at Elixir Conf on upgrades</li>\n<li>How Jenny
    got in to writing tests after going to college for computer science</li>\n<li>What
    goes into developer handoff and how that varies depending on the company and team
    </li>\n<li>The connection and importance between customer service and empathy
    </li>\n<li>What it&#39;s like to work in Quality Engineering and Testing at Papa</li>\n<li>What
    is testing?</li>\n<li>She provides helpful tips of things that tend to be caught
    up by QA during code reviews</li>\n<li>Jenny has a course on management for Test
    Automation coming out in 2023!</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Jenny
    Bramble on LinkedIn — <a href=\"https://www.linkedin.com/in/jennybramble/\" rel=\"nofollow\">https://www.linkedin.com/in/jennybramble/</a><br>\nJenny
    Bramble on Twitter — <a href=\"https://twitter.com/jennydoesthings\" rel=\"nofollow\">https://twitter.com/jennydoesthings</a><br>\nJenny
    Bramble on GitHub -- <a href=\"https://github.com/jennydoesthings\" rel=\"nofollow\">https://github.com/jennydoesthings</a><br>\nPapa
    -- <a href=\"https://www.papa.com/\" rel=\"nofollow\">https://www.papa.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: Harper Atlas on Tailwind From the Perspective of a Designer
  slug: s9-e8-harperatlas-tailwind
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e8-harperatlas-tailwind
  guid: bb20eaa3-2671-4816-ad05-5d363853df54
  pubDate: Thu, 17 Nov 2022 06:00:00 -0500
  pubDateFriendly: November 17, 2022
  description: "We are excited to have SmartLogic's own Harper Atlas as our guest
    on Elixir Wizards today! Harper, a product designer at SmartLogic (and cat lady
    at home), joins us on this episode to parse the particulars of the Tailwind framework
    from a designer's perspective. Join us to gain insights from our first non-engineer
    guest in this spirited conversation with Harper!\nKey Points From This Episode:\nWe
    learn about Harper’s journey into the UX field\nHarper breaks down her day-to-day
    life as a product designer at SmartLogic\nWhat the difference between FigMa and
    FigJam is\nThe good & bad sides of Tailwind\nWhat goes into developer handoff
    and how that varies depending on the company and team \nThe importance of finding
    common language and bridging the gap between developer island and design island
    within a developer handoff \nThe features that Harper doesn’t like about Tailwind\nHow
    Tailwind has started to feel like the Baader-Meinhof Phenomenon\nHarper gives
    developers some advice on how to be more helpful to designers while working in
    a Tailwind space  \nLinks Mentioned in Today’s Episode:\nHarper Atlas on LinkedIn
    — https://www.linkedin.com/in/harper-atlas\nHarper Atlas on Twitter — https://twitter.com/harperatlas\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+d4uKUlwA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bb20eaa3-2671-4816-ad05-5d363853df54.mp3
    length: '95767292'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: We are excited to have SmartLogic's own Harper Atlas as our guest on
      Elixir Wizards today! Harper, a product designer at SmartLogic (and cat lady
      at home), joins us on this episode to parse the particulars of the Tailwind
      framework from a designer's perspective. Join us to gain insights from our first
      non-engineer guest in this spirited conversation with Harper!
    duration: '39:54'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bb20eaa3-2671-4816-ad05-5d363853df54/cover.jpg?v=1
    summary: "\n        <p>We are excited to have SmartLogic&#39;s own Harper Atlas
      as our guest on Elixir Wizards today! Harper, a product designer at SmartLogic
      (and cat lady at home), joins us on this episode to parse the particulars of
      the Tailwind framework from a designer&#39;s perspective. Join us to gain insights
      from our first non-engineer guest in this spirited conversation with Harper!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>We learn about Harper’s journey into
      the UX field</li>\n<li>Harper breaks down her day-to-day life as a product designer
      at SmartLogic</li>\n<li>What the difference between FigMa and FigJam is</li>\n<li>The
      good &amp; bad sides of Tailwind</li>\n<li>What goes into developer handoff
      and how that varies depending on the company and team </li>\n<li>The importance
      of finding common language and bridging the gap between developer island and
      design island within a developer handoff </li>\n<li>The features that Harper
      doesn’t like about Tailwind</li>\n<li>How Tailwind has started to feel like
      the Baader-Meinhof Phenomenon</li>\n<li>Harper gives developers some advice
      on how to be more helpful to designers while working in a Tailwind space<br></li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Harper Atlas on LinkedIn — <a href=\"https://www.linkedin.com/in/harper-atlas\"
      rel=\"nofollow\">https://www.linkedin.com/in/harper-atlas</a><br>\nHarper Atlas
      on Twitter — <a href=\"https://twitter.com/harperatlas\" rel=\"nofollow\">https://twitter.com/harperatlas</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>We are excited to have SmartLogic&#39;s own Harper
    Atlas as our guest on Elixir Wizards today! Harper, a product designer at SmartLogic
    (and cat lady at home), joins us on this episode to parse the particulars of the
    Tailwind framework from a designer&#39;s perspective. Join us to gain insights
    from our first non-engineer guest in this spirited conversation with Harper!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>We learn about Harper’s journey into
    the UX field</li>\n<li>Harper breaks down her day-to-day life as a product designer
    at SmartLogic</li>\n<li>What the difference between FigMa and FigJam is</li>\n<li>The
    good &amp; bad sides of Tailwind</li>\n<li>What goes into developer handoff and
    how that varies depending on the company and team </li>\n<li>The importance of
    finding common language and bridging the gap between developer island and design
    island within a developer handoff </li>\n<li>The features that Harper doesn’t
    like about Tailwind</li>\n<li>How Tailwind has started to feel like the Baader-Meinhof
    Phenomenon</li>\n<li>Harper gives developers some advice on how to be more helpful
    to designers while working in a Tailwind space<br></li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Harper Atlas on LinkedIn — <a href=\"https://www.linkedin.com/in/harper-atlas\"
    rel=\"nofollow\">https://www.linkedin.com/in/harper-atlas</a><br>\nHarper Atlas
    on Twitter — <a href=\"https://twitter.com/harperatlas\" rel=\"nofollow\">https://twitter.com/harperatlas</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: Theo Harris on Onboarding into Elixir at Alembic
  slug: s9-e7-theoharris-onboardingelixir
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e7-theoharris-onboardingelixir
  guid: 1b74aef7-a4e8-4b40-adbb-3e77c553a62f
  pubDate: Thu, 10 Nov 2022 06:00:00 -0500
  pubDateFriendly: November 10, 2022
  description: "Today on the show we’re excited to have Theo Harris here to discuss
    Onboarding Into Elixir. Theo is a technical consultant working for Alembic in
    Sydney, Australia. He is currently working on a project utilizing Elixir and Phoenix
    LiveView. Tune in today to learn more about Onboarding Into Elixir, from our guest
    Theo Harris!\nKey Points From This Episode:\nA brief breakdown of today’s topic
    and introduction to our special guest, Theo Harris\nTheo lets us in on his current
    hot tech take\nWe discuss accessibility tips and tricks \nTheo gives us the run
    down on Alembic and what they do at their company\nWe find out whether or not
    Theo has a pet dinosaur \nWe learn of the technical challenges that Theo has faced
    as an Elixir Engineer\nThe breakdown of the onboarding process at Alembic \nTheo
    gives advice to beginners on how to learn Elixir/Phoenix\nLinks Mentioned in Today’s
    Episode:\nTheo Harris on Twitter — https://twitter.com/dino_coder\nTheo Harris
    \ on GitHub — https://github.com/Theosaurus-Rexv\nTheo Harris  on LinkedIn — https://www.linkedin.com/in/theo-harris-coder/\nAlembic
    — https://alembic.com.au/\nSmartLogic — https://smartlogic.io/\nSmartLogic Twitter
    — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+CKb2FC9P
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b74aef7-a4e8-4b40-adbb-3e77c553a62f.mp3
    length: '95805248'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today on the show we’re excited to have Theo Harris here to discuss
      Onboarding Into Elixir. Theo is a technical consultant working for Alembic in
      Sydney, Australia. He is currently working on a project utilizing Elixir and
      Phoenix LiveView. Tune in today to learn more about Onboarding Into Elixir,
      from our guest Theo Harris!
    duration: '39:55'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b74aef7-a4e8-4b40-adbb-3e77c553a62f/cover.jpg?v=1
    summary: "\n        <p>Today on the show we’re excited to have Theo Harris here
      to discuss Onboarding Into Elixir. Theo is a technical consultant working for
      Alembic in Sydney, Australia. He is currently working on a project utilizing
      Elixir and Phoenix LiveView. Tune in today to learn more about Onboarding Into
      Elixir, from our guest Theo Harris!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A
      brief breakdown of today’s topic and introduction to our special guest, Theo
      Harris</li>\n<li>Theo lets us in on his current hot tech take</li>\n<li>We discuss
      accessibility tips and tricks </li>\n<li>Theo gives us the run down on Alembic
      and what they do at their company</li>\n<li>We find out whether or not Theo
      has a pet dinosaur </li>\n<li>We learn of the technical challenges that Theo
      has faced as an Elixir Engineer</li>\n<li>The breakdown of the onboarding process
      at Alembic </li>\n<li>Theo gives advice to beginners on how to learn Elixir/Phoenix</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Theo Harris on Twitter — <a href=\"https://twitter.com/dino_coder\"
      rel=\"nofollow\">https://twitter.com/dino_coder</a><br>\nTheo Harris  on GitHub
      — <a href=\"https://github.com/Theosaurus-Rexv\" rel=\"nofollow\">https://github.com/Theosaurus-Rexv</a><br>\nTheo
      Harris  on LinkedIn — <a href=\"https://www.linkedin.com/in/theo-harris-coder/\"
      rel=\"nofollow\">https://www.linkedin.com/in/theo-harris-coder/</a><br>\nAlembic
      — <a href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today on the show we’re excited to have Theo Harris
    here to discuss Onboarding Into Elixir. Theo is a technical consultant working
    for Alembic in Sydney, Australia. He is currently working on a project utilizing
    Elixir and Phoenix LiveView. Tune in today to learn more about Onboarding Into
    Elixir, from our guest Theo Harris!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A
    brief breakdown of today’s topic and introduction to our special guest, Theo Harris</li>\n<li>Theo
    lets us in on his current hot tech take</li>\n<li>We discuss accessibility tips
    and tricks </li>\n<li>Theo gives us the run down on Alembic and what they do at
    their company</li>\n<li>We find out whether or not Theo has a pet dinosaur </li>\n<li>We
    learn of the technical challenges that Theo has faced as an Elixir Engineer</li>\n<li>The
    breakdown of the onboarding process at Alembic </li>\n<li>Theo gives advice to
    beginners on how to learn Elixir/Phoenix</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Theo Harris on Twitter — <a href=\"https://twitter.com/dino_coder\"
    rel=\"nofollow\">https://twitter.com/dino_coder</a><br>\nTheo Harris  on GitHub
    — <a href=\"https://github.com/Theosaurus-Rexv\" rel=\"nofollow\">https://github.com/Theosaurus-Rexv</a><br>\nTheo
    Harris  on LinkedIn — <a href=\"https://www.linkedin.com/in/theo-harris-coder/\"
    rel=\"nofollow\">https://www.linkedin.com/in/theo-harris-coder/</a><br>\nAlembic
    — <a href=\"https://alembic.com.au/\" rel=\"nofollow\">https://alembic.com.au/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: 'Ashley Smith & Kenneth Moy from Bowery Farming on Oban '
  slug: s9-e6-ashleysmithkennethmoy-oban
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e6-ashleysmithkennethmoy-oban
  guid: 07d35fb9-b998-43a0-9f96-795341ff425d
  pubDate: Thu, 03 Nov 2022 06:00:00 -0400
  pubDateFriendly: November  3, 2022
  description: "On today’s episode of Elixir Wizards, Ashley Smith and Kenneth Moy
    from Bowery Farming join us to dive into the particulars of Oban. Ashley has been
    working as a software engineer for 3 years with full-stack experience working
    mainly on web applications and now works in elixir at Bowery Farming. Kenneth
    is a software engineer at Bowery Farming with 3 years of elixir experience. Tune
    in today to learn more about Oban from today’s special guests, Ashley & Kenneth!
    \nKey Points From This Episode:\nA brief breakdown of today’s topic and introduction
    to our special guests, Ashley & Kenneth\nWe get the inside scoop of what happens
    behind the scenes at Bowery Farms and how they use elixir \nWhat is Oban and how
    does it compare to other languages \nWhy one would use Oban rather than something
    like Broadway \nHow Oban is useful at Bowery Farms \nAshley & Kenneth explain
    why they are not “over” Ecto.Multi just yet \nWe hear about their working experience
    at Bowery, some days are remote, some days are at the office, and some days are
    at the farm where they get to see their work come to life\nLinks Mentioned in
    Today’s Episode:\nAshley Smith on GitHub — https://github.com/asmith1\nAshley
    Smith on LinkedIn — https://www.linkedin.com/in/ashley-smith-951802126/\nKenneth
    Moy on Twitter — https://mobile.twitter.com/chehitskenniexd\nKenneth Moy on GitHub
    — https://github.com/chehitskenniexd\nKenneth Moy on LinkedIn — https://www.linkedin.com/in/kenneth-moy/\nBowery
    Farms — https://boweryfarming.com\nSmartLogic — https://smartlogic.io/\nSmartLogic
    Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+3qaRU_Mv
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/07d35fb9-b998-43a0-9f96-795341ff425d.mp3
    length: '75489810'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: 'On today’s episode of Elixir Wizards, Ashley Smith and Kenneth Moy
      from Bowery Farming join us to dive into the particulars of Oban. Ashley has
      been working as a software engineer for 3 years with full-stack experience working
      mainly on web applications and now works in elixir at Bowery Farming. Kenneth
      is a software engineer at Bowery Farming with 3 years of elixir experience.
      Tune in today to learn more about Oban from today’s special guests, Ashley &
      Kenneth! '
    duration: '38:30'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/07d35fb9-b998-43a0-9f96-795341ff425d/cover.jpg?v=1
    summary: "\n        <p>On today’s episode of Elixir Wizards, Ashley Smith and
      Kenneth Moy from Bowery Farming join us to dive into the particulars of Oban.
      Ashley has been working as a software engineer for 3 years with full-stack experience
      working mainly on web applications and now works in elixir at Bowery Farming.
      Kenneth is a software engineer at Bowery Farming with 3 years of elixir experience.
      Tune in today to learn more about Oban from today’s special guests, Ashley &amp;
      Kenneth! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown
      of today’s topic and introduction to our special guests, Ashley &amp; Kenneth</li>\n<li>We
      get the inside scoop of what happens behind the scenes at Bowery Farms and how
      they use elixir </li>\n<li>What is Oban and how does it compare to other languages
      </li>\n<li>Why one would use Oban rather than something like Broadway </li>\n<li>How
      Oban is useful at Bowery Farms </li>\n<li>Ashley &amp; Kenneth explain why they
      are not “over” Ecto.Multi just yet </li>\n<li>We hear about their working experience
      at Bowery, some days are remote, some days are at the office, and some days
      are at the farm where they get to see their work come to life</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Ashley Smith on GitHub — <a href=\"https://github.com/asmith1\"
      rel=\"nofollow\">https://github.com/asmith1</a><br>\nAshley Smith on LinkedIn
      — <a href=\"https://www.linkedin.com/in/ashley-smith-951802126/\" rel=\"nofollow\">https://www.linkedin.com/in/ashley-smith-951802126/</a><br>\nKenneth
      Moy on Twitter — <a href=\"https://mobile.twitter.com/chehitskenniexd\" rel=\"nofollow\">https://mobile.twitter.com/chehitskenniexd</a><br>\nKenneth
      Moy on GitHub — <a href=\"https://github.com/chehitskenniexd\" rel=\"nofollow\">https://github.com/chehitskenniexd</a><br>\nKenneth
      Moy on LinkedIn — <a href=\"https://www.linkedin.com/in/kenneth-moy/\" rel=\"nofollow\">https://www.linkedin.com/in/kenneth-moy/</a><br>\nBowery
      Farms — <a href=\"https://boweryfarming.com\" rel=\"nofollow\">https://boweryfarming.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>On today’s episode of Elixir Wizards, Ashley Smith
    and Kenneth Moy from Bowery Farming join us to dive into the particulars of Oban.
    Ashley has been working as a software engineer for 3 years with full-stack experience
    working mainly on web applications and now works in elixir at Bowery Farming.
    Kenneth is a software engineer at Bowery Farming with 3 years of elixir experience.
    Tune in today to learn more about Oban from today’s special guests, Ashley &amp;
    Kenneth! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown
    of today’s topic and introduction to our special guests, Ashley &amp; Kenneth</li>\n<li>We
    get the inside scoop of what happens behind the scenes at Bowery Farms and how
    they use elixir </li>\n<li>What is Oban and how does it compare to other languages
    </li>\n<li>Why one would use Oban rather than something like Broadway </li>\n<li>How
    Oban is useful at Bowery Farms </li>\n<li>Ashley &amp; Kenneth explain why they
    are not “over” Ecto.Multi just yet </li>\n<li>We hear about their working experience
    at Bowery, some days are remote, some days are at the office, and some days are
    at the farm where they get to see their work come to life</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Ashley Smith on GitHub — <a href=\"https://github.com/asmith1\"
    rel=\"nofollow\">https://github.com/asmith1</a><br>\nAshley Smith on LinkedIn
    — <a href=\"https://www.linkedin.com/in/ashley-smith-951802126/\" rel=\"nofollow\">https://www.linkedin.com/in/ashley-smith-951802126/</a><br>\nKenneth
    Moy on Twitter — <a href=\"https://mobile.twitter.com/chehitskenniexd\" rel=\"nofollow\">https://mobile.twitter.com/chehitskenniexd</a><br>\nKenneth
    Moy on GitHub — <a href=\"https://github.com/chehitskenniexd\" rel=\"nofollow\">https://github.com/chehitskenniexd</a><br>\nKenneth
    Moy on LinkedIn — <a href=\"https://www.linkedin.com/in/kenneth-moy/\" rel=\"nofollow\">https://www.linkedin.com/in/kenneth-moy/</a><br>\nBowery
    Farms — <a href=\"https://boweryfarming.com\" rel=\"nofollow\">https://boweryfarming.com</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: 'Jason Stiebs on LiveView at RokkinCat '
  slug: s9-e5-jasonstiebs-liveview
  link: https://smartlogic.io/podcast/elixir-wizards/s9-e5-jasonstiebs-liveview
  guid: df8784d1-9e54-4a79-926d-7be4c95db35a
  pubDate: Thu, 27 Oct 2022 06:00:00 -0400
  pubDateFriendly: October 27, 2022
  description: "Today we welcome Jason Stiebs to the podcast to talk about all things
    LiveView and how he was originally wrong about LiveView in the beginning. Jason
    is the founder at Rokkincat, and a core contributor to Phoenix. Jason loves finding
    solutions to complex problems and mentoring young engineers. Tune in today to
    learn more about LiveView from today’s special guest, Jason Stiebs!\nKey Points
    From This Episode:\nA brief breakdown of today’s topic and introduction to our
    special guest, Jason Stiebs\nA summary of Jason’s talk at ElixirConf on why he
    initially was wrong about LiveView \nHow Jason became a Phoenix core team member
    \nWhat is stopping LiveView from being 1.0 \nIs there something that would make
    LiveView ‘complete’\nHow to decide to use LiveView over an SPA framework\nDo you
    know if there are any folks out there putting together tooling for LiveView? Thinking
    like Chrome devtools, performance monitoring, etc. What tools can we use to compare
    our LiveView performance to non LV performance?\nWhat Jason's thoughts about a
    time traveling feature for LiveView like what React / Redux has \nWhat some featuresare
    from other frameworks that Jason would like to see in LiveView one day\nHow often
    Jason sees mixed LV and non LV projects \nWe hear about what's next in terms of
    features for functional components\nLinks Mentioned in Today’s Episode:\nJason
    Stiebs on Twitter — https://twitter.com/peregrine\nJason Stiebs on GitHub — https://github.com/jeregrine\nJason
    Stiebs on LinkedIn — https://www.linkedin.com/in/jasonstiebs/\nJason Stiebs Email
    Address – jason@rokkincat.com\nRokkinCat — https://rokkincat.com/\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ntw_CqJ1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/df8784d1-9e54-4a79-926d-7be4c95db35a.mp3
    length: '71851156'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today we welcome Jason Stiebs to the podcast to talk about all things
      LiveView and how he was originally wrong about LiveView in the beginning. Jason
      is the founder at Rokkincat, and a core contributor to Phoenix. Jason loves
      finding solutions to complex problems and mentoring young engineers. Tune in
      today to learn more about LiveView from today’s special guest, Jason Stiebs!
    duration: '49:53'
    explicit: 'no'
    keywords: elixir, liveview
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/df8784d1-9e54-4a79-926d-7be4c95db35a/cover.jpg?v=1
    summary: "\n        <p>Today we welcome Jason Stiebs to the podcast to talk about
      all things LiveView and how he was originally wrong about LiveView in the beginning.
      Jason is the founder at Rokkincat, and a core contributor to Phoenix. Jason
      loves finding solutions to complex problems and mentoring young engineers. Tune
      in today to learn more about LiveView from today’s special guest, Jason Stiebs!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
      and introduction to our special guest, Jason Stiebs</li>\n<li>A summary of Jason’s
      talk at ElixirConf on why he initially was wrong about LiveView </li>\n<li>How
      Jason became a Phoenix core team member </li>\n<li>What is stopping LiveView
      from being 1.0 </li>\n<li>Is there something that would make LiveView ‘complete’</li>\n<li>How
      to decide to use LiveView over an SPA framework</li>\n<li>Do you know if there
      are any folks out there putting together tooling for LiveView? Thinking like
      Chrome devtools, performance monitoring, etc. What tools can we use to compare
      our LiveView performance to non LV performance?</li>\n<li>What Jason&#39;s thoughts
      about a time traveling feature for LiveView like what React / Redux has </li>\n<li>What
      some featuresare from other frameworks that Jason would like to see in LiveView
      one day</li>\n<li>How often Jason sees mixed LV and non LV projects </li>\n<li>We
      hear about what&#39;s next in terms of features for functional components</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Jason Stiebs on Twitter — <a href=\"https://twitter.com/peregrine\"
      rel=\"nofollow\">https://twitter.com/peregrine</a><br>\nJason Stiebs on GitHub
      — <a href=\"https://github.com/jeregrine\" rel=\"nofollow\">https://github.com/jeregrine</a><br>\nJason
      Stiebs on LinkedIn — <a href=\"https://www.linkedin.com/in/jasonstiebs/\" rel=\"nofollow\">https://www.linkedin.com/in/jasonstiebs/</a><br>\nJason
      Stiebs Email Address – <a href=\"mailto:jason@rokkincat.com\" rel=\"nofollow\">jason@rokkincat.com</a><br>\nRokkinCat
      — <a href=\"https://rokkincat.com/\" rel=\"nofollow\">https://rokkincat.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
      \     "
  contentEncoded: "\n        <p>Today we welcome Jason Stiebs to the podcast to talk
    about all things LiveView and how he was originally wrong about LiveView in the
    beginning. Jason is the founder at Rokkincat, and a core contributor to Phoenix.
    Jason loves finding solutions to complex problems and mentoring young engineers.
    Tune in today to learn more about LiveView from today’s special guest, Jason Stiebs!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
    and introduction to our special guest, Jason Stiebs</li>\n<li>A summary of Jason’s
    talk at ElixirConf on why he initially was wrong about LiveView </li>\n<li>How
    Jason became a Phoenix core team member </li>\n<li>What is stopping LiveView from
    being 1.0 </li>\n<li>Is there something that would make LiveView ‘complete’</li>\n<li>How
    to decide to use LiveView over an SPA framework</li>\n<li>Do you know if there
    are any folks out there putting together tooling for LiveView? Thinking like Chrome
    devtools, performance monitoring, etc. What tools can we use to compare our LiveView
    performance to non LV performance?</li>\n<li>What Jason&#39;s thoughts about a
    time traveling feature for LiveView like what React / Redux has </li>\n<li>What
    some featuresare from other frameworks that Jason would like to see in LiveView
    one day</li>\n<li>How often Jason sees mixed LV and non LV projects </li>\n<li>We
    hear about what&#39;s next in terms of features for functional components</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Jason Stiebs on Twitter — <a href=\"https://twitter.com/peregrine\"
    rel=\"nofollow\">https://twitter.com/peregrine</a><br>\nJason Stiebs on GitHub
    — <a href=\"https://github.com/jeregrine\" rel=\"nofollow\">https://github.com/jeregrine</a><br>\nJason
    Stiebs on LinkedIn — <a href=\"https://www.linkedin.com/in/jasonstiebs/\" rel=\"nofollow\">https://www.linkedin.com/in/jasonstiebs/</a><br>\nJason
    Stiebs Email Address – <a href=\"mailto:jason@rokkincat.com\" rel=\"nofollow\">jason@rokkincat.com</a><br>\nRokkinCat
    — <a href=\"https://rokkincat.com/\" rel=\"nofollow\">https://rokkincat.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p>\n
    \     "
- title: 'Mark & David from Thinking Elixir on Ecto Queries '
  slug: s9e4-markdavid-thinkingelixir
  link: https://smartlogic.io/podcast/elixir-wizards/s9e4-markdavid-thinkingelixir
  guid: 72e9b778-4fdb-4320-a56b-c16be252cae8
  pubDate: Thu, 20 Oct 2022 06:00:00 -0400
  pubDateFriendly: October 20, 2022
  description: "This week the Thinking Elixir Podcast is taking over Elixir Wizards!
    Mark & David from Thinking Elixir are here today to parse the particulars of Ecto
    Queries! Mark Ericksen is an Elixir Specialist at Fly.io and host of Thinking
    Elixir. David Bernheisel is a Senior Software Engineer at Bitfo and host of Thinking
    Elixir. Tune in today to learn more about Ecto Queries from today’s special guests,
    Mark Ericksen and David Bernheisel! \nKey Points From This Episode:\nA brief breakdown
    of today’s topic and introduction to our special guests, Mark & David \n The hosts
    catch up with Mark & David and learn about David’s new book Ecto In Production\n
    Dave Lucia is mentioned once again, can we go one episode without talking about
    him?\n Find out how long David & Mark have been working in databases\nWe get the
    breakdown of what an Ecto Query is \nThere is a discussion around schema migrations
    vs data migrations and how to avoid common pain points \n Learn what resources
    are available for learning Ecto \nWe find out what the pin operator is and when
    it is used\nWhat an extensive query is and how to optimize queries\nWe learn about
    fun edge cases that we’ve bumped into while working with Ecto \nThe ins and outs
    of Ecto dump and Ecto load \n”Ecto is a whole wide world of information. You think
    you know a lot and then you realize you don't. Nope, I'm almost just as dumb as
    I was five years ago about SQL and Ecto. Nope, it evolves. It gets deep.” - Mark
    Ericksen\nLinks Mentioned in Today’s Episode:\n Mark Ericksen on Twitter — https://twitter.com/brainlid\n
    Mark Ericksen on LinkedIn — https://www.linkedin.com/in/mark-ericksen-66397417/\n
    David Bernheisel on Twitter – https://twitter.com/bernheisel\n David Bernheisel
    on GitHub – https://github.com/dbernheisel\n David Bernheisel on LinkedIn – https://www.linkedin.com/in/bernheisel/
    \n Thinking Elixir Podcast https://podcast.thinkingelixir.com/\n SmartLogic —
    https://smartlogic.io/\n SmartLogic Twitter — https://twitter.com/smartlogic\n
    Use The Index, Luke! https://use-the-index-luke.com/\n Postgresql Tutorial https://www.postgresqltutorial.com/\n
    Postgresql subqueries\nhttps://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s\nhttps://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php\nFly
    Blog: Safe Ecto Migrations https://fly.io/phoenix-files/safe-ecto-migrations/\nCrunchy
    Data Developer Tutorials https://www.crunchydata.com/developers/tutorials\nCrunchy
    Data Postgres Tips https://www.crunchydata.com/postgres-tips\nEcto in Production
    https://www.ectoinproduction.com/\nSQL Join Illustration https://commons.wikimedia.org/wiki/File:SQLJoins.svg\nSQL
    Join Illustration https://i.stack.imgur.com/UI25E.jpg\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+lLleNGUL
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/72e9b778-4fdb-4320-a56b-c16be252cae8.mp3
    length: '45014753'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: The Thinking Elixir Podcast has taken over Elixir Wizards! Join us today
      for a fun and interesting episode with Mark Ericksen and David Bernheisel from
      the Thinking Elixir Podcast as we parse the particulars of Ecto Queries!
    duration: '53:35'
    explicit: 'no'
    keywords: elixir, ecto, query
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/72e9b778-4fdb-4320-a56b-c16be252cae8/cover.jpg?v=1
    summary: "\n        <p>This week the Thinking Elixir Podcast is taking over Elixir
      Wizards! Mark &amp; David from Thinking Elixir are here today to parse the particulars
      of Ecto Queries! Mark Ericksen is an Elixir Specialist at Fly.io and host of
      Thinking Elixir. David Bernheisel is a Senior Software Engineer at Bitfo and
      host of Thinking Elixir. Tune in today to learn more about Ecto Queries from
      today’s special guests, Mark Ericksen and David Bernheisel! </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic and introduction
      to our special guests, Mark &amp; David </li>\n<li> The hosts catch up with
      Mark &amp; David and learn about David’s new book Ecto In Production</li>\n<li>
      Dave Lucia is mentioned once again, can we go one episode without talking about
      him?</li>\n<li> Find out how long David &amp; Mark have been working in databases</li>\n<li>We
      get the breakdown of what an Ecto Query is </li>\n<li>There is a discussion
      around schema migrations vs data migrations and how to avoid common pain points
      </li>\n<li> Learn what resources are available for learning Ecto </li>\n<li>We
      find out what the pin operator is and when it is used</li>\n<li>What an extensive
      query is and how to optimize queries</li>\n<li>We learn about fun edge cases
      that we’ve bumped into while working with Ecto </li>\n<li>The ins and outs of
      Ecto dump and Ecto load </li>\n</ul>\n\n<p><em>”Ecto is a whole wide world of
      information. You think you know a lot and then you realize you don&#39;t. Nope,
      I&#39;m almost just as dumb as I was five years ago about SQL and Ecto. Nope,
      it evolves. It gets deep.”</em> - Mark Ericksen</p>\n\n<p>Links Mentioned in
      Today’s Episode:</p>\n\n<p>Mark Ericksen on Twitter — <a href=\"https://twitter.com/brainlid\"
      rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n Mark Ericksen on LinkedIn
      — <a href=\"https://www.linkedin.com/in/mark-ericksen-66397417/\" rel=\"nofollow\">https://www.linkedin.com/in/mark-ericksen-66397417/</a><br>\n
      David Bernheisel on Twitter – <a href=\"https://twitter.com/bernheisel\" rel=\"nofollow\">https://twitter.com/bernheisel</a><br>\n
      David Bernheisel on GitHub – <a href=\"https://github.com/dbernheisel\" rel=\"nofollow\">https://github.com/dbernheisel</a><br>\n
      David Bernheisel on LinkedIn – <a href=\"https://www.linkedin.com/in/bernheisel/\"
      rel=\"nofollow\">https://www.linkedin.com/in/bernheisel/</a> <br>\n Thinking
      Elixir Podcast <a href=\"https://podcast.thinkingelixir.com/\" rel=\"nofollow\">https://podcast.thinkingelixir.com/</a><br>\n
      SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\n
      SmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\n
      Use The Index, Luke! <a href=\"https://use-the-index-luke.com/\" rel=\"nofollow\">https://use-the-index-luke.com/</a><br>\n
      Postgresql Tutorial <a href=\"https://www.postgresqltutorial.com/\" rel=\"nofollow\">https://www.postgresqltutorial.com/</a><br>\n
      Postgresql subqueries<br>\n<a href=\"https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s\"
      rel=\"nofollow\">https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s</a><br>\n<a
      href=\"https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php\"
      rel=\"nofollow\">https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php</a><br>\nFly
      Blog: Safe Ecto Migrations <a href=\"https://fly.io/phoenix-files/safe-ecto-migrations/\"
      rel=\"nofollow\">https://fly.io/phoenix-files/safe-ecto-migrations/</a><br>\nCrunchy
      Data Developer Tutorials <a href=\"https://www.crunchydata.com/developers/tutorials\"
      rel=\"nofollow\">https://www.crunchydata.com/developers/tutorials</a><br>\nCrunchy
      Data Postgres Tips <a href=\"https://www.crunchydata.com/postgres-tips\" rel=\"nofollow\">https://www.crunchydata.com/postgres-tips</a><br>\nEcto
      in Production <a href=\"https://www.ectoinproduction.com/\" rel=\"nofollow\">https://www.ectoinproduction.com/</a><br>\nSQL
      Join Illustration <a href=\"https://commons.wikimedia.org/wiki/File:SQLJoins.svg\"
      rel=\"nofollow\">https://commons.wikimedia.org/wiki/File:SQLJoins.svg</a><br>\nSQL
      Join Illustration <a href=\"https://i.stack.imgur.com/UI25E.jpg\" rel=\"nofollow\">https://i.stack.imgur.com/UI25E.jpg</a></p>\n
      \     "
  contentEncoded: "\n        <p>This week the Thinking Elixir Podcast is taking over
    Elixir Wizards! Mark &amp; David from Thinking Elixir are here today to parse
    the particulars of Ecto Queries! Mark Ericksen is an Elixir Specialist at Fly.io
    and host of Thinking Elixir. David Bernheisel is a Senior Software Engineer at
    Bitfo and host of Thinking Elixir. Tune in today to learn more about Ecto Queries
    from today’s special guests, Mark Ericksen and David Bernheisel! </p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
    and introduction to our special guests, Mark &amp; David </li>\n<li> The hosts
    catch up with Mark &amp; David and learn about David’s new book Ecto In Production</li>\n<li>
    Dave Lucia is mentioned once again, can we go one episode without talking about
    him?</li>\n<li> Find out how long David &amp; Mark have been working in databases</li>\n<li>We
    get the breakdown of what an Ecto Query is </li>\n<li>There is a discussion around
    schema migrations vs data migrations and how to avoid common pain points </li>\n<li>
    Learn what resources are available for learning Ecto </li>\n<li>We find out what
    the pin operator is and when it is used</li>\n<li>What an extensive query is and
    how to optimize queries</li>\n<li>We learn about fun edge cases that we’ve bumped
    into while working with Ecto </li>\n<li>The ins and outs of Ecto dump and Ecto
    load </li>\n</ul>\n\n<p><em>”Ecto is a whole wide world of information. You think
    you know a lot and then you realize you don&#39;t. Nope, I&#39;m almost just as
    dumb as I was five years ago about SQL and Ecto. Nope, it evolves. It gets deep.”</em>
    - Mark Ericksen</p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Mark Ericksen
    on Twitter — <a href=\"https://twitter.com/brainlid\" rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n
    Mark Ericksen on LinkedIn — <a href=\"https://www.linkedin.com/in/mark-ericksen-66397417/\"
    rel=\"nofollow\">https://www.linkedin.com/in/mark-ericksen-66397417/</a><br>\n
    David Bernheisel on Twitter – <a href=\"https://twitter.com/bernheisel\" rel=\"nofollow\">https://twitter.com/bernheisel</a><br>\n
    David Bernheisel on GitHub – <a href=\"https://github.com/dbernheisel\" rel=\"nofollow\">https://github.com/dbernheisel</a><br>\n
    David Bernheisel on LinkedIn – <a href=\"https://www.linkedin.com/in/bernheisel/\"
    rel=\"nofollow\">https://www.linkedin.com/in/bernheisel/</a> <br>\n Thinking Elixir
    Podcast <a href=\"https://podcast.thinkingelixir.com/\" rel=\"nofollow\">https://podcast.thinkingelixir.com/</a><br>\n
    SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\n
    SmartLogic Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\n
    Use The Index, Luke! <a href=\"https://use-the-index-luke.com/\" rel=\"nofollow\">https://use-the-index-luke.com/</a><br>\n
    Postgresql Tutorial <a href=\"https://www.postgresqltutorial.com/\" rel=\"nofollow\">https://www.postgresqltutorial.com/</a><br>\n
    Postgresql subqueries<br>\n<a href=\"https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s\"
    rel=\"nofollow\">https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s</a><br>\n<a
    href=\"https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php\"
    rel=\"nofollow\">https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php</a><br>\nFly
    Blog: Safe Ecto Migrations <a href=\"https://fly.io/phoenix-files/safe-ecto-migrations/\"
    rel=\"nofollow\">https://fly.io/phoenix-files/safe-ecto-migrations/</a><br>\nCrunchy
    Data Developer Tutorials <a href=\"https://www.crunchydata.com/developers/tutorials\"
    rel=\"nofollow\">https://www.crunchydata.com/developers/tutorials</a><br>\nCrunchy
    Data Postgres Tips <a href=\"https://www.crunchydata.com/postgres-tips\" rel=\"nofollow\">https://www.crunchydata.com/postgres-tips</a><br>\nEcto
    in Production <a href=\"https://www.ectoinproduction.com/\" rel=\"nofollow\">https://www.ectoinproduction.com/</a><br>\nSQL
    Join Illustration <a href=\"https://commons.wikimedia.org/wiki/File:SQLJoins.svg\"
    rel=\"nofollow\">https://commons.wikimedia.org/wiki/File:SQLJoins.svg</a><br>\nSQL
    Join Illustration <a href=\"https://i.stack.imgur.com/UI25E.jpg\" rel=\"nofollow\">https://i.stack.imgur.com/UI25E.jpg</a></p>\n
    \     "
- title: 'Tyler Young on Geo Mapping at Felt '
  slug: s9e3-tyleryoung-felt
  link: https://smartlogic.io/podcast/elixir-wizards/s9e3-tyleryoung-felt
  guid: 457bc018-a109-4457-b7bd-693ebd2ef38e
  pubDate: Thu, 13 Oct 2022 06:00:00 -0400
  pubDateFriendly: October 13, 2022
  description: "Today on Elixir Wizards we are joined by Tyler Young to explore the
    particulars of Geo Mapping, the process of turning data into maps. Tyler is a
    Senior Software Developer at Felt, the world’s first collaborative mapping tool
    built for anyone to make a beautiful map in minutes. Tune in today to learn more
    about Geo Mapping from today’s special guest, Tyler Young!\nKey Points From This
    Episode:\nA brief breakdown of today’s topic and introduction to our special guest,
    Tyler Young\nWe discover Tyler’s background and how he started working in Elixir,
    as well as how he got into the map business because of his love for Elixir \nWe
    learn about GIS and its history as a system/standard/protocol, and how someone
    can study GIS \nFind out how mapping is helpful in more ways than just for directions,
    including climate changes, vacation planning, and more\nTyler breaks down the
    common technologies and toolkits for programming with maps \nThe specific tools
    that Felt is using to ingest map data and build the interactive maps \nWhat common
    problems arise when developing with maps\nTyler teaches the Elixir Wizards about
    his tried and true way of decision making with “The McDonald’s option” \n_\n**Links
    Mentioned in Today’s Episode:\nTyler Young on Twitter — https://twitter.com/TylerAYoung\nTyler
    Young on GitHub — https://github.com/s3cur3\nTyler Young on LinkedIn — https://www.linkedin.com/in/tyler-young-dev/\nFelt
    — https://felt.com/about\nSmartLogic — https://smartlogic.io/\nSmartLogic Twitter
    — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+373p2LD-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/457bc018-a109-4457-b7bd-693ebd2ef38e.mp3
    length: '31075529'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards we are joined by Tyler Young to explore the
      particulars of Geo Mapping, the process of turning data into maps. Tyler is
      a Senior Software Developer at Felt, the world’s first collaborative mapping
      tool built for anyone to make a beautiful map in minutes. Tune in today to learn
      more about Geo Mapping from today’s special guest, Tyler Young!
    duration: '36:59'
    explicit: 'no'
    keywords: elixir, geo mapping, tech, felt
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/457bc018-a109-4457-b7bd-693ebd2ef38e/cover.jpg?v=1
    summary: "\n        <p>Today on Elixir Wizards we are joined by Tyler Young to
      explore the particulars of Geo Mapping, the process of turning data into maps.
      Tyler is a Senior Software Developer at Felt, the world’s first collaborative
      mapping tool built for anyone to make a beautiful map in minutes. Tune in today
      to learn more about Geo Mapping from today’s special guest, Tyler Young!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
      and introduction to our special guest, Tyler Young</li>\n<li>We discover Tyler’s
      background and how he started working in Elixir, as well as how he got into
      the map business because of his love for Elixir </li>\n<li>We learn about GIS
      and its history as a system/standard/protocol, and how someone can study GIS
      </li>\n<li>Find out how mapping is helpful in more ways than just for directions,
      including climate changes, vacation planning, and more</li>\n<li>Tyler breaks
      down the common technologies and toolkits for programming with maps </li>\n<li>The
      specific tools that Felt is using to ingest map data and build the interactive
      maps </li>\n<li>What common problems arise when developing with maps</li>\n<li><p>Tyler
      teaches the Elixir Wizards about his tried and true way of decision making with
      “The McDonald’s option” <br>\n_<br>\n**Links Mentioned in Today’s Episode:</p></li>\n<li><p>Tyler
      Young on Twitter — <a href=\"https://twitter.com/TylerAYoung\" rel=\"nofollow\">https://twitter.com/TylerAYoung</a></p></li>\n<li><p>Tyler
      Young on GitHub — <a href=\"https://github.com/s3cur3\" rel=\"nofollow\">https://github.com/s3cur3</a></p></li>\n<li><p>Tyler
      Young on LinkedIn — <a href=\"https://www.linkedin.com/in/tyler-young-dev/\"
      rel=\"nofollow\">https://www.linkedin.com/in/tyler-young-dev/</a></p></li>\n<li><p>Felt
      — <a href=\"https://felt.com/about\" rel=\"nofollow\">https://felt.com/about</a></p></li>\n<li><p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></p></li>\n<li><p>SmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p></li>\n</ul>\n
      \     "
  contentEncoded: "\n        <p>Today on Elixir Wizards we are joined by Tyler Young
    to explore the particulars of Geo Mapping, the process of turning data into maps.
    Tyler is a Senior Software Developer at Felt, the world’s first collaborative
    mapping tool built for anyone to make a beautiful map in minutes. Tune in today
    to learn more about Geo Mapping from today’s special guest, Tyler Young!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
    and introduction to our special guest, Tyler Young</li>\n<li>We discover Tyler’s
    background and how he started working in Elixir, as well as how he got into the
    map business because of his love for Elixir </li>\n<li>We learn about GIS and
    its history as a system/standard/protocol, and how someone can study GIS </li>\n<li>Find
    out how mapping is helpful in more ways than just for directions, including climate
    changes, vacation planning, and more</li>\n<li>Tyler breaks down the common technologies
    and toolkits for programming with maps </li>\n<li>The specific tools that Felt
    is using to ingest map data and build the interactive maps </li>\n<li>What common
    problems arise when developing with maps</li>\n<li><p>Tyler teaches the Elixir
    Wizards about his tried and true way of decision making with “The McDonald’s option”
    <br>\n_<br>\n**Links Mentioned in Today’s Episode:</p></li>\n<li><p>Tyler Young
    on Twitter — <a href=\"https://twitter.com/TylerAYoung\" rel=\"nofollow\">https://twitter.com/TylerAYoung</a></p></li>\n<li><p>Tyler
    Young on GitHub — <a href=\"https://github.com/s3cur3\" rel=\"nofollow\">https://github.com/s3cur3</a></p></li>\n<li><p>Tyler
    Young on LinkedIn — <a href=\"https://www.linkedin.com/in/tyler-young-dev/\" rel=\"nofollow\">https://www.linkedin.com/in/tyler-young-dev/</a></p></li>\n<li><p>Felt
    — <a href=\"https://felt.com/about\" rel=\"nofollow\">https://felt.com/about</a></p></li>\n<li><p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></p></li>\n<li><p>SmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></p></li>\n</ul>\n
    \     "
- title: Kate Rezentes on GenServers at Simplebet
  slug: s9e2-kate-rezentes-simplebet
  link: https://smartlogic.io/podcast/elixir-wizards/s9e2-kate-rezentes-simplebet
  guid: 7bcfea5b-42f1-4dc9-9384-3b37f432a636
  pubDate: Thu, 06 Oct 2022 06:00:00 -0400
  pubDateFriendly: October  6, 2022
  description: "Season 9 is in full swing and we are so excited to welcome Kate Rezentes
    today to dive into the particulars of GenServers. Kate is a Junior Software Developer
    at Simplebet, a B2B product development company using machine learning and real-time
    technology to make every moment of every sporting event a betting opportunity.
    Tune in today to learn more from today’s special guest, Kate Rezentes!\nKey Points
    From This Episode:\n A brief breakdown of today’s topic and introduction to our
    special guest, Kate Rezentes \n We learn about Kate’s background and her long
    history with programming\nWe discuss how many conferences she’s attended and why
    ElixirConf has been her favorite (thus far)\n Find out how Kate landed a job while
    attending ElixirConf\n How GenServers as a subject came to be\nWe get an inside
    look at Kate’s working experience at Simplebet and her experience as a Junior
    Engineer in the industry so far \nWhat cases in particular cause the need for
    a GenServer\nWe discuss where GenServers would be appropriate to use and why\nThe
    ins and outs of ‘handle calls’ and ‘callbacks’\nThe process of testing a GenServer
    and data storage_\n**Links Mentioned in Today’s Episode:*\nKate Rezentes on Twitter
    — https://twitter.com/rezkate\nKate Rezentes on GitHub — https://github.com/KateRezentes\nKate
    Rezentes on LinkedIn — https://www.linkedin.com/in/kfrezent/\nSimplebet — https://simplebet.io/\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Twitter — https://twitter.com/smartlogic\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+TZBECxVc
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7bcfea5b-42f1-4dc9-9384-3b37f432a636.mp3
    length: '46206464'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: Season 9 is in full swing and we are so excited to welcome Kate Rezentes
      today to dive into the particulars of GenServers. Kate is a Junior Software
      Developer at Simplebet, a B2B product development company using machine learning
      and real-time technology to make every moment of every sporting event a betting
      opportunity. Tune in today to learn more from today’s special guest, Kate Rezentes!
    duration: '48:07'
    explicit: 'no'
    keywords: simplebet, genservers, elixir, smartlogic
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7bcfea5b-42f1-4dc9-9384-3b37f432a636/cover.jpg?v=1
    summary: "\n        <p>Season 9 is in full swing and we are so excited to welcome
      Kate Rezentes today to dive into the particulars of GenServers. Kate is a Junior
      Software Developer at Simplebet, a B2B product development company using machine
      learning and real-time technology to make every moment of every sporting event
      a betting opportunity. Tune in today to learn more from today’s special guest,
      Kate Rezentes!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li> A brief
      breakdown of today’s topic and introduction to our special guest, Kate Rezentes
      </li>\n<li> We learn about Kate’s background and her long history with programming</li>\n<li>We
      discuss how many conferences she’s attended and why ElixirConf has been her
      favorite (thus far)</li>\n<li> Find out how Kate landed a job while attending
      ElixirConf</li>\n<li> How GenServers as a subject came to be</li>\n<li>We get
      an inside look at Kate’s working experience at Simplebet and her experience
      as a Junior Engineer in the industry so far </li>\n<li>What cases in particular
      cause the need for a GenServer</li>\n<li>We discuss where GenServers would be
      appropriate to use and why</li>\n<li>The ins and outs of ‘handle calls’ and
      ‘callbacks’</li>\n<li>The process of testing a GenServer and data storage_</li>\n</ul>\n\n<p><em>**Links
      Mentioned in Today’s Episode:</em>*</p>\n\n<ul>\n<li>Kate Rezentes on Twitter
      — <a href=\"https://twitter.com/rezkate\" rel=\"nofollow\">https://twitter.com/rezkate</a></li>\n<li>Kate
      Rezentes on GitHub — <a href=\"https://github.com/KateRezentes\" rel=\"nofollow\">https://github.com/KateRezentes</a></li>\n<li>Kate
      Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/kfrezent/\" rel=\"nofollow\">https://www.linkedin.com/in/kfrezent/</a></li>\n<li>Simplebet
      — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a></li>\n<li>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></li>\n<li>SmartLogic
      Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></li>\n</ul>\n
      \     "
  contentEncoded: "\n        <p>Season 9 is in full swing and we are so excited to
    welcome Kate Rezentes today to dive into the particulars of GenServers. Kate is
    a Junior Software Developer at Simplebet, a B2B product development company using
    machine learning and real-time technology to make every moment of every sporting
    event a betting opportunity. Tune in today to learn more from today’s special
    guest, Kate Rezentes!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>
    A brief breakdown of today’s topic and introduction to our special guest, Kate
    Rezentes </li>\n<li> We learn about Kate’s background and her long history with
    programming</li>\n<li>We discuss how many conferences she’s attended and why ElixirConf
    has been her favorite (thus far)</li>\n<li> Find out how Kate landed a job while
    attending ElixirConf</li>\n<li> How GenServers as a subject came to be</li>\n<li>We
    get an inside look at Kate’s working experience at Simplebet and her experience
    as a Junior Engineer in the industry so far </li>\n<li>What cases in particular
    cause the need for a GenServer</li>\n<li>We discuss where GenServers would be
    appropriate to use and why</li>\n<li>The ins and outs of ‘handle calls’ and ‘callbacks’</li>\n<li>The
    process of testing a GenServer and data storage_</li>\n</ul>\n\n<p><em>**Links
    Mentioned in Today’s Episode:</em>*</p>\n\n<ul>\n<li>Kate Rezentes on Twitter
    — <a href=\"https://twitter.com/rezkate\" rel=\"nofollow\">https://twitter.com/rezkate</a></li>\n<li>Kate
    Rezentes on GitHub — <a href=\"https://github.com/KateRezentes\" rel=\"nofollow\">https://github.com/KateRezentes</a></li>\n<li>Kate
    Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/kfrezent/\" rel=\"nofollow\">https://www.linkedin.com/in/kfrezent/</a></li>\n<li>Simplebet
    — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a></li>\n<li>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></li>\n<li>SmartLogic
    Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a></li>\n</ul>\n
    \     "
- title: Dave Lucia on Observability at Bitfo
  slug: s9e1-dave-lucia-bitfo
  link: https://smartlogic.io/podcast/elixir-wizards/s9e1-dave-lucia-bitfo
  guid: ccdb0e5d-3009-44db-9573-d5a5a12696eb
  pubDate: Thu, 29 Sep 2022 03:00:00 -0400
  pubDateFriendly: September 29, 2022
  description: |
    Welcome to our first episode of Season 9 Elixir Wizards, Parsing the Particulars. A show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency media company building educational content for people who are interested in cryptocurrency. Dave is active in the Elixir community and in the past has spoken at Code BEAM SF, ElixirConf, RabbitMQ Summit, and has written several blog posts which can be found at davelucia.com. In today’s episode we find out more about Dave’s professional background and dive into the particulars of observability. Tune in today to learn more from today’s special guest, Dave Lucia!
    Key Points From This Episode:
    A brief breakdown of today’s topic and introduction to our special guest, Dave Lucia
    We find out about Bitfo and what services they offer
    We discuss Dave’s blog post on observability
    Find out how Dave wrote the blog post because he saw a gap at his company
    How Sundi proofread Dave’s blog post and realized her lack of knowledge on observability
    The most common mistake teams or engineers make when it comes to observability
    We peel back the layers on what telemetry is
    What the difference between telemetry and OpenTelemetry is
    How to choose which tool is right when it comes to better observability
    *The breakdown of the uses for observability telemetry
    *When and why would we use OpenTelemtry vs basic observability
    *What languages Dave started in before he was working in Elixir
    *How Elixir lends better for observability
    *Where to start if you want to implement basic observability for someone who has no experience with it
    *Dave answers the question, “can you go too far with observability?”
    *We discuss Livebook and what exciting things it will bring for the future
    *Most importantly, Dave explains why pineapples are important to him
    **Links Mentioned in Today’s Episode:
    Dave’s blog post on Observability: https://davelucia.com/blog/observing-elixir-with-lightstep
    Dave Lucia on Twitter — https://twitter.com/davydog187
    Dave Lucia on GitHub — https://github.com/davydog187
    Dave Lucia on LinkedIn — https://www.linkedin.com/in/david-lucia-a395441b/
    Bitfo — https://www.bitfo.com/
    SmartLogic — https://smartlogic.io/
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+87YV43bE
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ccdb0e5d-3009-44db-9573-d5a5a12696eb.mp3
    length: '74289426'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: ''
    duration: '51:35'
    explicit: 'no'
    keywords: bitfo, crypto, elixir, observability
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/ccdb0e5d-3009-44db-9573-d5a5a12696eb/cover.jpg?v=1
    summary: "\n        <p>Welcome to our first episode of Season 9 Elixir Wizards,
      Parsing the Particulars. A show focused on conversations with software developers
      from around the world on the Elixir language and other modern web technologies.
      Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency
      media company building educational content for people who are interested in
      cryptocurrency. Dave is active in the Elixir community and in the past has spoken
      at Code BEAM SF, ElixirConf, RabbitMQ Summit, and has written several blog posts
      which can be found at davelucia.com. In today’s episode we find out more about
      Dave’s professional background and dive into the particulars of observability.
      Tune in today to learn more from today’s special guest, Dave Lucia!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic
      and introduction to our special guest, Dave Lucia</li>\n<li>We find out about
      Bitfo and what services they offer</li>\n<li>We discuss Dave’s blog post on
      observability</li>\n<li>Find out how Dave wrote the blog post because he saw
      a gap at his company</li>\n<li>How Sundi proofread Dave’s blog post and realized
      her lack of knowledge on observability</li>\n<li>The most common mistake teams
      or engineers make when it comes to observability</li>\n<li>We peel back the
      layers on what telemetry is</li>\n<li>What the difference between telemetry
      and OpenTelemetry is</li>\n<li>How to choose which tool is right when it comes
      to better observability\n*The breakdown of the uses for observability telemetry\n*When
      and why would we use OpenTelemtry vs basic observability\n*What languages Dave
      started in before he was working in Elixir\n*How Elixir lends better for observability\n*Where
      to start if you want to implement basic observability for someone who has no
      experience with it\n*Dave answers the question, “can you go too far with observability?”\n*We
      discuss Livebook and what exciting things it will bring for the future\n*Most
      importantly, Dave explains why pineapples are important to him</li>\n</ul>\n\n<p>**Links
      Mentioned in Today’s Episode:</p>\n\n<ul>\n<li>Dave’s blog post on Observability:
      <a href=\"https://davelucia.com/blog/observing-elixir-with-lightstep\" rel=\"nofollow\">https://davelucia.com/blog/observing-elixir-with-lightstep</a></li>\n<li>Dave
      Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a></li>\n<li>Dave
      Lucia on GitHub — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a></li>\n<li>Dave
      Lucia on LinkedIn — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b/\"
      rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b/</a></li>\n<li>Bitfo
      — <a href=\"https://www.bitfo.com/\" rel=\"nofollow\">https://www.bitfo.com/</a></li>\n<li>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></li>\n</ul><p>Links:</p><ul><li><a
      href=\"https://open.spotify.com/episode/3RmFXCjuVIsT1DqzqSZgAv?si=1c5d7a3171164223\"
      title=\"Spotify\" rel=\"nofollow\">Spotify</a></li></ul>\n      "
  contentEncoded: "\n        <p>Welcome to our first episode of Season 9 Elixir Wizards,
    Parsing the Particulars. A show focused on conversations with software developers
    from around the world on the Elixir language and other modern web technologies.
    Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency
    media company building educational content for people who are interested in cryptocurrency.
    Dave is active in the Elixir community and in the past has spoken at Code BEAM
    SF, ElixirConf, RabbitMQ Summit, and has written several blog posts which can
    be found at davelucia.com. In today’s episode we find out more about Dave’s professional
    background and dive into the particulars of observability. Tune in today to learn
    more from today’s special guest, Dave Lucia!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A
    brief breakdown of today’s topic and introduction to our special guest, Dave Lucia</li>\n<li>We
    find out about Bitfo and what services they offer</li>\n<li>We discuss Dave’s
    blog post on observability</li>\n<li>Find out how Dave wrote the blog post because
    he saw a gap at his company</li>\n<li>How Sundi proofread Dave’s blog post and
    realized her lack of knowledge on observability</li>\n<li>The most common mistake
    teams or engineers make when it comes to observability</li>\n<li>We peel back
    the layers on what telemetry is</li>\n<li>What the difference between telemetry
    and OpenTelemetry is</li>\n<li>How to choose which tool is right when it comes
    to better observability\n*The breakdown of the uses for observability telemetry\n*When
    and why would we use OpenTelemtry vs basic observability\n*What languages Dave
    started in before he was working in Elixir\n*How Elixir lends better for observability\n*Where
    to start if you want to implement basic observability for someone who has no experience
    with it\n*Dave answers the question, “can you go too far with observability?”\n*We
    discuss Livebook and what exciting things it will bring for the future\n*Most
    importantly, Dave explains why pineapples are important to him</li>\n</ul>\n\n<p>**Links
    Mentioned in Today’s Episode:</p>\n\n<ul>\n<li>Dave’s blog post on Observability:
    <a href=\"https://davelucia.com/blog/observing-elixir-with-lightstep\" rel=\"nofollow\">https://davelucia.com/blog/observing-elixir-with-lightstep</a></li>\n<li>Dave
    Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a></li>\n<li>Dave
    Lucia on GitHub — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a></li>\n<li>Dave
    Lucia on LinkedIn — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b/\"
    rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b/</a></li>\n<li>Bitfo
    — <a href=\"https://www.bitfo.com/\" rel=\"nofollow\">https://www.bitfo.com/</a></li>\n<li>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a></li>\n</ul><p>Links:</p><ul><li><a
    href=\"https://open.spotify.com/episode/3RmFXCjuVIsT1DqzqSZgAv?si=1c5d7a3171164223\"
    title=\"Spotify\" rel=\"nofollow\">Spotify</a></li></ul>\n      "
- title: We're baaaack! Season 9 Teaser
  slug: teasers9
  link: https://smartlogic.io/podcast/elixir-wizards/teasers9
  guid: e16cbd56-185c-4abf-a193-52a629580bc7
  pubDate: Thu, 22 Sep 2022 00:00:00 -0400
  pubDateFriendly: September 22, 2022
  description: "Hey everyone, Season 9 of Elixir Wizards is back! This season's theme
    is Parsing the Particulars, where we dive into particular subjects with our guests.
    Your returning hosts this season are Sundi, Owen and Dan! And we are excited to
    announce that we have a new host joining the show - Bilal Hankins! Bilal is a
    Software Developer at SmartLogic and is super excited to join us this season.
    \nSome of this season's guests include Dave Lucia, CTO at Bitfo, Tyler Young,
    Senior Software Developer at Felt, and Kate Rezentes, Junior Developer at SimpleBet.
    Can't wait to see you there!\nSmartLogic — https://smartlogic.io/ \nSmartLogic
    on Twitter — https://twitter.com/smartlogic\nSmartLogic on LinkedIn — https://www.linkedin.com/company/smartlogic-io/\nSmartLogic
    on Facebook — https://www.facebook.com/smartlogic/\nBilal Hankins on LinkedIn
    — https://www.linkedin.com/in/hankins-bilal/\nSundi Myint on LinkedIn — https://www.linkedin.com/in/sundimyint/\nOwen
    Bickford on LinkedIn — https://www.linkedin.com/in/owen-bickford-8b6b1523a/\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+TDzrU9qw
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e16cbd56-185c-4abf-a193-52a629580bc7.mp3
    length: '2694692'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '9'
    author: SmartLogic LLC
    subtitle: 'Elixir Wizards is back and better than ever! Get pumped for this season
      with your hosts Sundi, Owen and introducing Bilal! '
    duration: '1:07'
    explicit: 'no'
    keywords: 'elixir, tech, code '
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e16cbd56-185c-4abf-a193-52a629580bc7/cover.jpg?v=1
    summary: "\n        <p>Hey everyone, Season 9 of Elixir Wizards is back! This
      season&#39;s theme is Parsing the Particulars, where we dive into particular
      subjects with our guests. Your returning hosts this season are Sundi, Owen and
      Dan! And we are excited to announce that we have a new host joining the show
      - Bilal Hankins! Bilal is a Software Developer at SmartLogic and is super excited
      to join us this season. </p>\n\n<p>Some of this season&#39;s guests include
      Dave Lucia, CTO at Bitfo, Tyler Young, Senior Software Developer at Felt, and
      Kate Rezentes, Junior Developer at SimpleBet. Can&#39;t wait to see you there!</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic on Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic
      on LinkedIn — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
      on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nBilal
      Hankins on LinkedIn — <a href=\"https://www.linkedin.com/in/hankins-bilal/\"
      rel=\"nofollow\">https://www.linkedin.com/in/hankins-bilal/</a><br>\nSundi Myint
      on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a><br>\nOwen
      Bickford on LinkedIn — <a href=\"https://www.linkedin.com/in/owen-bickford-8b6b1523a/\"
      rel=\"nofollow\">https://www.linkedin.com/in/owen-bickford-8b6b1523a/</a></p>\n
      \     "
  contentEncoded: "\n        <p>Hey everyone, Season 9 of Elixir Wizards is back!
    This season&#39;s theme is Parsing the Particulars, where we dive into particular
    subjects with our guests. Your returning hosts this season are Sundi, Owen and
    Dan! And we are excited to announce that we have a new host joining the show -
    Bilal Hankins! Bilal is a Software Developer at SmartLogic and is super excited
    to join us this season. </p>\n\n<p>Some of this season&#39;s guests include Dave
    Lucia, CTO at Bitfo, Tyler Young, Senior Software Developer at Felt, and Kate
    Rezentes, Junior Developer at SimpleBet. Can&#39;t wait to see you there!</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSmartLogic on Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic
    on LinkedIn — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
    on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nBilal
    Hankins on LinkedIn — <a href=\"https://www.linkedin.com/in/hankins-bilal/\" rel=\"nofollow\">https://www.linkedin.com/in/hankins-bilal/</a><br>\nSundi
    Myint on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a><br>\nOwen
    Bickford on LinkedIn — <a href=\"https://www.linkedin.com/in/owen-bickford-8b6b1523a/\"
    rel=\"nofollow\">https://www.linkedin.com/in/owen-bickford-8b6b1523a/</a></p>\n
    \     "
- title: Looking back on Season 8 with Sundi, Owen & Dan
  slug: s8e12-finale
  link: https://smartlogic.io/podcast/elixir-wizards/s8e12-finale
  guid: 2cd157b4-8fcd-4025-9d56-76a10fb61903
  pubDate: Wed, 29 Jun 2022 06:00:00 -0400
  pubDateFriendly: June 29, 2022
  description: "It’s the season finale show! Can you believe it? Join us this week
    as Sundi, Owen, and Dan take a look back at this season of Elixir Wizards! You’ll
    hear their discussion about favorite moments over the season and learn about this
    season’s theme and its origin, and what they learned throughout the season. Enjoy
    and we hope to see you back for Season 9! \nKey Points From This Episode:\nReflection
    on the guests experiences with all different types of language\nHow the team landed
    on the theme of Elixir in a Polyglot Environment\nHaving expectation of guests
    vs how the conversation turned out\nThe discovery that environment influences
    the strength of the code that is being written\nWe dig deeper into the flexibility
    of all of these companies\nHow the hosts enjoyed the dream language combination
    answers from guests\nWe hear about the teams experience with their first in-person
    recording \nHearing about guests personal experiences and projects vs just their
    at-work experience\nWe find out what birds do when they’re excited in a tree\nFlutter
    as a solution for building mobile applications \nThe hosts likes, dislikes, experience
    with Flutter and the difference it brings to the table\nWe reflect on a guest
    applying gamification\nThe hosts discuss the guests range of experience, from
    a year to decades in the field, and how many different perspectives were shown
    with different backgrounds\nA recurring theme of the guests: structuring teams
    to fit the needs of the company - recurring theme\nHearing about products and
    projects guests are working on\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nSmartLogic on Twitter — https://twitter.com/smartlogic\nSmartLogic
    on LinkedIn — https://www.linkedin.com/company/smartlogic-io/\nSmartLogic on Facebook
    — https://www.facebook.com/smartlogic/\nDan Ivovich on LinkedIn — https://www.linkedin.com/in/divovich/\nSundi
    Myint on LinkedIn — https://www.linkedin.com/in/sundimyint/\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+C7zaBKdC
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2cd157b4-8fcd-4025-9d56-76a10fb61903.mp3
    length: '33913780'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: ''
    duration: '38:23'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2cd157b4-8fcd-4025-9d56-76a10fb61903/cover.jpg?v=1
    summary: "\n        <p>It’s the season finale show! Can you believe it? Join us
      this week as Sundi, Owen, and Dan take a look back at this season of Elixir
      Wizards! You’ll hear their discussion about favorite moments over the season
      and learn about this season’s theme and its origin, and what they learned throughout
      the season. Enjoy and we hope to see you back for Season 9! </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<p>Reflection on the guests experiences with all different
      types of language<br>\nHow the team landed on the theme of Elixir in a Polyglot
      Environment<br>\nHaving expectation of guests vs how the conversation turned
      out<br>\nThe discovery that environment influences the strength of the code
      that is being written<br>\nWe dig deeper into the flexibility of all of these
      companies<br>\nHow the hosts enjoyed the dream language combination answers
      from guests<br>\nWe hear about the teams experience with their first in-person
      recording <br>\nHearing about guests personal experiences and projects vs just
      their at-work experience<br>\nWe find out what birds do when they’re excited
      in a tree<br>\nFlutter as a solution for building mobile applications <br>\nThe
      hosts likes, dislikes, experience with Flutter and the difference it brings
      to the table<br>\nWe reflect on a guest applying gamification<br>\nThe hosts
      discuss the guests range of experience, from a year to decades in the field,
      and how many different perspectives were shown with different backgrounds<br>\nA
      recurring theme of the guests: structuring teams to fit the needs of the company
      - recurring theme<br>\nHearing about products and projects guests are working
      on</p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic on Twitter — <a
      href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic
      on LinkedIn — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
      on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nDan
      Ivovich on LinkedIn — <a href=\"https://www.linkedin.com/in/divovich/\" rel=\"nofollow\">https://www.linkedin.com/in/divovich/</a><br>\nSundi
      Myint on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a></p>\n
      \     "
  contentEncoded: "\n        <p>It’s the season finale show! Can you believe it? Join
    us this week as Sundi, Owen, and Dan take a look back at this season of Elixir
    Wizards! You’ll hear their discussion about favorite moments over the season and
    learn about this season’s theme and its origin, and what they learned throughout
    the season. Enjoy and we hope to see you back for Season 9! </p>\n\n<p>Key Points
    From This Episode:</p>\n\n<p>Reflection on the guests experiences with all different
    types of language<br>\nHow the team landed on the theme of Elixir in a Polyglot
    Environment<br>\nHaving expectation of guests vs how the conversation turned out<br>\nThe
    discovery that environment influences the strength of the code that is being written<br>\nWe
    dig deeper into the flexibility of all of these companies<br>\nHow the hosts enjoyed
    the dream language combination answers from guests<br>\nWe hear about the teams
    experience with their first in-person recording <br>\nHearing about guests personal
    experiences and projects vs just their at-work experience<br>\nWe find out what
    birds do when they’re excited in a tree<br>\nFlutter as a solution for building
    mobile applications <br>\nThe hosts likes, dislikes, experience with Flutter and
    the difference it brings to the table<br>\nWe reflect on a guest applying gamification<br>\nThe
    hosts discuss the guests range of experience, from a year to decades in the field,
    and how many different perspectives were shown with different backgrounds<br>\nA
    recurring theme of the guests: structuring teams to fit the needs of the company
    - recurring theme<br>\nHearing about products and projects guests are working
    on</p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic on Twitter — <a href=\"https://twitter.com/smartlogic\"
    rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic on LinkedIn
    — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
    on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nDan
    Ivovich on LinkedIn — <a href=\"https://www.linkedin.com/in/divovich/\" rel=\"nofollow\">https://www.linkedin.com/in/divovich/</a><br>\nSundi
    Myint on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a></p>\n
    \     "
- title: Nathan Retta on Engineering in Android at DoorDash
  slug: s8e11-retta
  link: https://smartlogic.io/podcast/elixir-wizards/s8e11-retta
  guid: 3d022fd3-b8f1-41da-97ac-8e9b5784bfa3
  pubDate: Thu, 23 Jun 2022 06:00:00 -0400
  pubDateFriendly: June 23, 2022
  description: "This week on Elixir Wizards we’re joined by Nathan Retta, Senior Software
    Engineer from Android at DoorDash. We learn about Nathan’s background; his experience
    having a degree in Chemical Engineering and working in Oil and Gas for 6 years.
    Nathan then wrote an Android app in 2016 and soon after became a mobile developer
    -- the rest is history. He is currently based in Denver, Colorado, and our host
    Owen has met him prior through the Denver Elixir virtual meet up. \nJoin us today
    for this conversation between Owen, Dan and Nathan as we learn about Nathan’s
    experience leading up to his current position at Android for DoorDash and how
    he is using Elixir in his side projects. \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+soiawfUb
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3d022fd3-b8f1-41da-97ac-8e9b5784bfa3.mp3
    length: '70044176'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: ''
    duration: '29:11'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3d022fd3-b8f1-41da-97ac-8e9b5784bfa3/cover.jpg?v=1
    summary: "\n        <p>This week on Elixir Wizards we’re joined by Nathan Retta,
      Senior Software Engineer from Android at DoorDash. We learn about Nathan’s background;
      his experience having a degree in Chemical Engineering and working in Oil and
      Gas for 6 years. Nathan then wrote an Android app in 2016 and soon after became
      a mobile developer -- the rest is history. He is currently based in Denver,
      Colorado, and our host Owen has met him prior through the Denver Elixir virtual
      meet up. </p>\n\n<p>Join us today for this conversation between Owen, Dan and
      Nathan as we learn about Nathan’s experience leading up to his current position
      at Android for DoorDash and how he is using Elixir in his side projects. </p>\n
      \     "
  contentEncoded: "\n        <p>This week on Elixir Wizards we’re joined by Nathan
    Retta, Senior Software Engineer from Android at DoorDash. We learn about Nathan’s
    background; his experience having a degree in Chemical Engineering and working
    in Oil and Gas for 6 years. Nathan then wrote an Android app in 2016 and soon
    after became a mobile developer -- the rest is history. He is currently based
    in Denver, Colorado, and our host Owen has met him prior through the Denver Elixir
    virtual meet up. </p>\n\n<p>Join us today for this conversation between Owen,
    Dan and Nathan as we learn about Nathan’s experience leading up to his current
    position at Android for DoorDash and how he is using Elixir in his side projects.
    </p>\n      "
- title: Cara Mitchell on Internal In-house eCommerce
  slug: s8e10-mitchell
  link: https://smartlogic.io/podcast/elixir-wizards/s8e10-mitchell
  guid: acc26d2b-07e6-4dad-8ef5-e78780d17650
  pubDate: Thu, 16 Jun 2022 06:00:00 -0400
  pubDateFriendly: June 16, 2022
  description: "Welcome to this week’s episode of Elixir Wizards, with our special
    guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about her career journey
    that led to her living in the lower East Side of New York City. Cara has been
    working in the software engineering field for over 20 years and currently works
    at PepsiCo on their in-house eCommerce platform built with Elixir. Over the years,
    she's worked on systems that range from embedded firmware to large distributed
    systems running on thousands of machines. She enjoys working in a number of programming
    languages and refuses to pick a favorite. Today we learn about Cara’s unique experience
    as a college dropout turned self-made software engineer and how PepsiCo is working
    in Elixir on a global scale with an inside look at the goings on at PepsiCo. Tune
    in today to learn more from today’s special guest, Cara Mitchell!  \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LZuwLqcM
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/acc26d2b-07e6-4dad-8ef5-e78780d17650.mp3
    length: '42143445'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: ''
    duration: '44:41'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/acc26d2b-07e6-4dad-8ef5-e78780d17650/cover.jpg?v=1
    summary: "\n        <p>Welcome to this week’s episode of Elixir Wizards, with
      our special guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about
      her career journey that led to her living in the lower East Side of New York
      City. Cara has been working in the software engineering field for over 20 years
      and currently works at PepsiCo on their in-house eCommerce platform built with
      Elixir. Over the years, she&#39;s worked on systems that range from embedded
      firmware to large distributed systems running on thousands of machines. She
      enjoys working in a number of programming languages and refuses to pick a favorite.
      Today we learn about Cara’s unique experience as a college dropout turned self-made
      software engineer and how PepsiCo is working in Elixir on a global scale with
      an inside look at the goings on at PepsiCo. Tune in today to learn more from
      today’s special guest, Cara Mitchell! </p>\n      "
  contentEncoded: "\n        <p>Welcome to this week’s episode of Elixir Wizards,
    with our special guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about
    her career journey that led to her living in the lower East Side of New York City.
    Cara has been working in the software engineering field for over 20 years and
    currently works at PepsiCo on their in-house eCommerce platform built with Elixir.
    Over the years, she&#39;s worked on systems that range from embedded firmware
    to large distributed systems running on thousands of machines. She enjoys working
    in a number of programming languages and refuses to pick a favorite. Today we
    learn about Cara’s unique experience as a college dropout turned self-made software
    engineer and how PepsiCo is working in Elixir on a global scale with an inside
    look at the goings on at PepsiCo. Tune in today to learn more from today’s special
    guest, Cara Mitchell! </p>\n      "
- title: Catalina Astengo on The Many Languages of Nav
  slug: s8e9-astengo
  link: https://smartlogic.io/podcast/elixir-wizards/s8e9-astengo
  guid: 9114fce2-a423-4c1d-9ca6-c5ff2098dd34
  pubDate: Thu, 09 Jun 2022 07:30:00 -0400
  pubDateFriendly: June  9, 2022
  description: "Joining us today on Elixir Wizards is Catalina Astengo, Staff Software
    Engineer at Nav Inc. We chat with Catalina about how she went from working as
    a process engineer in a mine to a software engineer in beautiful Salt Lake City.
    \nIn today’s show we find out more about Catalina’s professional background, how
    and why she started taking Ruby courses while working at a mine in southern Utah,
    how she fell in love with Salt Lake City and what it looked like transitioning
    to a new profession. We learn about the ins & outs of Nav and their team roles,
    as well as how they keep up with all of the languages that they are using including
    Elixir, Ruby, Go and JS. Tune in today to learn more from today’s special guest,
    Catalina Astengo!\nKey Points From This Episode:\nA brief breakdown of today’s
    topic and introduction to our special guest, Catalina Astengo.\nWhat it was like
    working in a small town in a mine in southern Utah \nWhat a process engineer is
    and what the job title entails \nWhat prompted the switch from process engineering
    to software engineering\nWhat Nav does as a company\nCatalina gives us a rundown
    of her professional career.\nIs this the most Polyglot stack we have encountered
    this season!?\nThe ins & outs at Nav and their teams roles \nHow Nav uses Elixir
    on a daily basis\nHow Nav keeps up to date on all of the languages they are using\nConcerns
    about using multiple languages on the backend\nContext switching between languages\nHow
    Nav decided to use Golang and why she prefers Elixir\nWhere Nav is based and where
    they are hiring \nHow Catalina and her team made a home movie production of Beetlejuice\nWe
    review Elixir Conf 2020 and takeaways that Catalina had from the conference\nHow
    Nav uses GRPC\nRP vs GRPC - what’s the difference?\nProtobuf for validation schemes
    across GPS \nWays to validate event payloads by using the Graph QL\nWe discuss
    our experience with management vs. coding \nOwens penguin discovery about Catalina
    on the Nav website \nLinks Mentioned in Today’s Episode:\nCatalina Astengo on
    Twitter — https://twitter.com/catalinaastengo\nCatalina Astengo on GitHub — https://github.com/castengo
    \nCatalina Astengo on LinkedIn — https://www.linkedin.com/in/catalinaastengo/\nBlog
    Post on Graph QL Schema Validation – https://www.infoq.com/news/2022/05/graphql-schema-validation/\nNav
    Careers — https://www.nav.com/ \nSmartLogic — https://smartlogic.io/ \nSmartLogic
    on Twitter — https://twitter.com/smartlogic\nSmartLogic on LinkedIn — https://www.linkedin.com/company/smartlogic-io/\nSmartLogic
    on Facebook — https://www.facebook.com/smartlogic/\nSundi Myint on LinkedIn —
    https://www.linkedin.com/in/sundimyint/\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bd4cOfk4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9114fce2-a423-4c1d-9ca6-c5ff2098dd34.mp3
    length: '40534461'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: ''
    duration: '42:48'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9114fce2-a423-4c1d-9ca6-c5ff2098dd34/cover.jpg?v=1
    summary: "\n        <p>Joining us today on Elixir Wizards is Catalina Astengo,
      Staff Software Engineer at Nav Inc. We chat with Catalina about how she went
      from working as a process engineer in a mine to a software engineer in beautiful
      Salt Lake City. </p>\n\n<p>In today’s show we find out more about Catalina’s
      professional background, how and why she started taking Ruby courses while working
      at a mine in southern Utah, how she fell in love with Salt Lake City and what
      it looked like transitioning to a new profession. We learn about the ins &amp;
      outs of Nav and their team roles, as well as how they keep up with all of the
      languages that they are using including Elixir, Ruby, Go and JS. Tune in today
      to learn more from today’s special guest, Catalina Astengo!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<p>A brief breakdown of today’s topic and introduction
      to our special guest, Catalina Astengo.<br>\nWhat it was like working in a small
      town in a mine in southern Utah <br>\nWhat a process engineer is and what the
      job title entails <br>\nWhat prompted the switch from process engineering to
      software engineering<br>\nWhat Nav does as a company<br>\nCatalina gives us
      a rundown of her professional career.<br>\nIs this the most Polyglot stack we
      have encountered this season!?<br>\nThe ins &amp; outs at Nav and their teams
      roles <br>\nHow Nav uses Elixir on a daily basis<br>\nHow Nav keeps up to date
      on all of the languages they are using<br>\nConcerns about using multiple languages
      on the backend<br>\nContext switching between languages<br>\nHow Nav decided
      to use Golang and why she prefers Elixir<br>\nWhere Nav is based and where they
      are hiring <br>\nHow Catalina and her team made a home movie production of Beetlejuice<br>\nWe
      review Elixir Conf 2020 and takeaways that Catalina had from the conference<br>\nHow
      Nav uses GRPC<br>\nRP vs GRPC - what’s the difference?<br>\nProtobuf for validation
      schemes across GPS <br>\nWays to validate event payloads by using the Graph
      QL<br>\nWe discuss our experience with management vs. coding <br>\nOwens penguin
      discovery about Catalina on the Nav website </p>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Catalina Astengo on Twitter — <a href=\"https://twitter.com/catalinaastengo\"
      rel=\"nofollow\">https://twitter.com/catalinaastengo</a><br>\nCatalina Astengo
      on GitHub — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a>
      <br>\nCatalina Astengo on LinkedIn — <a href=\"https://www.linkedin.com/in/catalinaastengo/\"
      rel=\"nofollow\">https://www.linkedin.com/in/catalinaastengo/</a><br>\nBlog
      Post on Graph QL Schema Validation – <a href=\"https://www.infoq.com/news/2022/05/graphql-schema-validation/\"
      rel=\"nofollow\">https://www.infoq.com/news/2022/05/graphql-schema-validation/</a><br>\nNav
      Careers — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a>
      <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic on Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic
      on LinkedIn — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
      on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nSundi
      Myint on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a></p>\n
      \     "
  contentEncoded: "\n        <p>Joining us today on Elixir Wizards is Catalina Astengo,
    Staff Software Engineer at Nav Inc. We chat with Catalina about how she went from
    working as a process engineer in a mine to a software engineer in beautiful Salt
    Lake City. </p>\n\n<p>In today’s show we find out more about Catalina’s professional
    background, how and why she started taking Ruby courses while working at a mine
    in southern Utah, how she fell in love with Salt Lake City and what it looked
    like transitioning to a new profession. We learn about the ins &amp; outs of Nav
    and their team roles, as well as how they keep up with all of the languages that
    they are using including Elixir, Ruby, Go and JS. Tune in today to learn more
    from today’s special guest, Catalina Astengo!</p>\n\n<p>Key Points From This Episode:</p>\n\n<p>A
    brief breakdown of today’s topic and introduction to our special guest, Catalina
    Astengo.<br>\nWhat it was like working in a small town in a mine in southern Utah
    <br>\nWhat a process engineer is and what the job title entails <br>\nWhat prompted
    the switch from process engineering to software engineering<br>\nWhat Nav does
    as a company<br>\nCatalina gives us a rundown of her professional career.<br>\nIs
    this the most Polyglot stack we have encountered this season!?<br>\nThe ins &amp;
    outs at Nav and their teams roles <br>\nHow Nav uses Elixir on a daily basis<br>\nHow
    Nav keeps up to date on all of the languages they are using<br>\nConcerns about
    using multiple languages on the backend<br>\nContext switching between languages<br>\nHow
    Nav decided to use Golang and why she prefers Elixir<br>\nWhere Nav is based and
    where they are hiring <br>\nHow Catalina and her team made a home movie production
    of Beetlejuice<br>\nWe review Elixir Conf 2020 and takeaways that Catalina had
    from the conference<br>\nHow Nav uses GRPC<br>\nRP vs GRPC - what’s the difference?<br>\nProtobuf
    for validation schemes across GPS <br>\nWays to validate event payloads by using
    the Graph QL<br>\nWe discuss our experience with management vs. coding <br>\nOwens
    penguin discovery about Catalina on the Nav website </p>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Catalina Astengo on Twitter — <a href=\"https://twitter.com/catalinaastengo\"
    rel=\"nofollow\">https://twitter.com/catalinaastengo</a><br>\nCatalina Astengo
    on GitHub — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a>
    <br>\nCatalina Astengo on LinkedIn — <a href=\"https://www.linkedin.com/in/catalinaastengo/\"
    rel=\"nofollow\">https://www.linkedin.com/in/catalinaastengo/</a><br>\nBlog Post
    on Graph QL Schema Validation – <a href=\"https://www.infoq.com/news/2022/05/graphql-schema-validation/\"
    rel=\"nofollow\">https://www.infoq.com/news/2022/05/graphql-schema-validation/</a><br>\nNav
    Careers — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a>
    <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSmartLogic on Twitter — <a href=\"https://twitter.com/smartlogic\" rel=\"nofollow\">https://twitter.com/smartlogic</a><br>\nSmartLogic
    on LinkedIn — <a href=\"https://www.linkedin.com/company/smartlogic-io/\" rel=\"nofollow\">https://www.linkedin.com/company/smartlogic-io/</a><br>\nSmartLogic
    on Facebook — <a href=\"https://www.facebook.com/smartlogic/\" rel=\"nofollow\">https://www.facebook.com/smartlogic/</a><br>\nSundi
    Myint on LinkedIn — <a href=\"https://www.linkedin.com/in/sundimyint/\" rel=\"nofollow\">https://www.linkedin.com/in/sundimyint/</a></p>\n
    \     "
- title: Meks McClure on Communication, Diversity, and Ergonomics
  slug: s8e8-mcclure
  link: https://smartlogic.io/podcast/elixir-wizards/s8e8-mcclure
  guid: 7a1f4173-df13-4237-9d32-e862b6512a16
  pubDate: Thu, 02 Jun 2022 06:00:00 -0400
  pubDateFriendly: June  2, 2022
  description: "Welcome to another episode of Elixir Wizards, a show focused on conversations
    with software developers from around the world on the Elixir language and other
    modern web technologies. In today’s episode, we speak with Meks McClure, a Full
    Stack Software Engineer with an unconventional background in Biology and Philosophy.
    Meks found their passion for programming after building a website for a Mexican
    non-profit, Permanencia Voluntaria, using wix.com. Seeing people use the website
    and how it helped the community inspired Meks to pursue a career in programming.
    They are currently based at NewAperio, a software development company, as a Junior
    Developer. In today’s show we find out more about Meks’s professional background,
    NewAperio and the services they offer, more about their unconventional training
    background, challenges transitioning to a new career path, the importance of effective
    communication in the workplace, the significance of Pride Month, Meks’s very cool
    desk setup, and much more! Tune in today to learn more from today’s special guest,
    Meks McClure!\nKey Points From This Episode:\nA brief breakdown of today’s topic
    and introduction to our special guest, Meks McClure.\nWe find out about NewAperio
    and what services they offer.\nHow long Meks has been based at NewAperio.\nFind
    out what the NewAperio tradition is for people celebrating their work anniversary.\nA
    light-hearted discussion about singing Happy Birthday to colleagues.\nMeks gives
    us a rundown of their professional career.\nWe find out more about Meks’s non-traditional
    programming background.\nHow long they have been using Elixir for and how they
    initially got started in it.\nThe lessons they learned from their Flatiron and
    Elixir development experience.\nWhat was most difficult transitioning from working
    Ruby to Elixir.\nKeeping a balance between learning and meeting productivity targets.\nThe
    moment when Meks felt like they were making good progress transitioning.\nSome
    advice they have for people learning Elixir.\nOther projects that Meks is currently
    working on and programming languages used.\nHow boot camp is different from real-world
    situations, in terms of programming.\nWe find out about Meks’s current Star Wars
    obsession.\nThe importance of finding enjoyment outside of work.\nMeks shares
    their personal journey to becoming the person they are today.\nA conversation
    about the importance of Pride Month and keeping an open mind.\nA highlight of
    some communication challenges that come with remote working.\nWhy empathetic and
    effective communication is essential in the workplace.\nWe reflect on some recent
    networking opportunities and conferences. \nThe approach at NewAperio to networking
    and conferences.\nDetails about Meks’ desk setup and why it is called the ‘Moon
    Lander’.\nMore about their desk setup: keycap preferences.\nHow learning Elixir
    changed the way Meks thinks about programming in general.\nMeks explains their
    approach to writing code.\nWhat their ultimate combination of programming languages
    are.\nWhat opportunities or weaknesses that a polyglot environment can introduce.\n*Links
    Mentioned in Today’s Episode:\n*\n* Meks McClure on Twitter — https://twitter.com/mmcclure0100\n*
    Meks McClure on GitHub — https://github.com/MMcClure11\n* Meks McClure on LinkedIn
    — https://www.linkedin.com/in/meksmcclure/\n* NewAperio — https://newaperio.com/\n*
    SmartLogic — https://smartlogic.io/ \n* Sundi Myint on Twitter — https://twitter.com/sundikhin\n*
    Owen Bickford on Twitter — https://twitter.com/owenbickford/\n* SmartLogic — https://smartlogic.io\n*
    Moon Lander — https://www.zsa.io/moonlander/\n* Difficult Conversations — https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/\n*
    Kailh Speed Silver (Linear) Mechanical Switch Kit — https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z\n
    Special Guest: Meks McClure.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bzxMb-E0
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7a1f4173-df13-4237-9d32-e862b6512a16.mp3
    length: '43871828'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: In today’s episode, we speak with Meks McClure, a Full Stack Software
      Engineer with an unconventional background in Biology and Philosophy. Meks found
      their passion for programming after building a website for a Mexican non-profit,
      Permanencia Voluntaria, using wix.com. Seeing people use the website and how
      it helped the community inspired Meks to pursue a career in programming.
    duration: '45:35'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7a1f4173-df13-4237-9d32-e862b6512a16/cover.jpg?v=1
    summary: "\n        <p>Welcome to another episode of Elixir Wizards, a show focused
      on conversations with software developers from around the world on the Elixir
      language and other modern web technologies. In today’s episode, we speak with
      Meks McClure, a Full Stack Software Engineer with an unconventional background
      in Biology and Philosophy. Meks found their passion for programming after building
      a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing
      people use the website and how it helped the community inspired Meks to pursue
      a career in programming. They are currently based at NewAperio, a software development
      company, as a Junior Developer. In today’s show we find out more about Meks’s
      professional background, NewAperio and the services they offer, more about their
      unconventional training background, challenges transitioning to a new career
      path, the importance of effective communication in the workplace, the significance
      of Pride Month, Meks’s very cool desk setup, and much more! Tune in today to
      learn more from today’s special guest, Meks McClure!</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic and introduction
      to our special guest, Meks McClure.</li>\n<li>We find out about NewAperio and
      what services they offer.</li>\n<li>How long Meks has been based at NewAperio.</li>\n<li>Find
      out what the NewAperio tradition is for people celebrating their work anniversary.</li>\n<li>A
      light-hearted discussion about singing Happy Birthday to colleagues.</li>\n<li>Meks
      gives us a rundown of their professional career.</li>\n<li>We find out more
      about Meks’s non-traditional programming background.</li>\n<li>How long they
      have been using Elixir for and how they initially got started in it.</li>\n<li>The
      lessons they learned from their Flatiron and Elixir development experience.</li>\n<li>What
      was most difficult transitioning from working Ruby to Elixir.</li>\n<li>Keeping
      a balance between learning and meeting productivity targets.</li>\n<li>The moment
      when Meks felt like they were making good progress transitioning.</li>\n<li>Some
      advice they have for people learning Elixir.</li>\n<li>Other projects that Meks
      is currently working on and programming languages used.</li>\n<li>How boot camp
      is different from real-world situations, in terms of programming.</li>\n<li>We
      find out about Meks’s current Star Wars obsession.</li>\n<li>The importance
      of finding enjoyment outside of work.</li>\n<li>Meks shares their personal journey
      to becoming the person they are today.</li>\n<li>A conversation about the importance
      of Pride Month and keeping an open mind.</li>\n<li>A highlight of some communication
      challenges that come with remote working.</li>\n<li>Why empathetic and effective
      communication is essential in the workplace.</li>\n<li>We reflect on some recent
      networking opportunities and conferences. </li>\n<li>The approach at NewAperio
      to networking and conferences.</li>\n<li>Details about Meks’ desk setup and
      why it is called the ‘Moon Lander’.</li>\n<li>More about their desk setup: keycap
      preferences.</li>\n<li>How learning Elixir changed the way Meks thinks about
      programming in general.</li>\n<li>Meks explains their approach to writing code.</li>\n<li>What
      their ultimate combination of programming languages are.</li>\n<li>What opportunities
      or weaknesses that a polyglot environment can introduce.</li>\n</ul>\n\n<p>*<em>Links
      Mentioned in Today’s Episode:<br>\n*</em></p>\n\n<ul>\n<li>Meks McClure on Twitter
      — <a href=\"https://twitter.com/mmcclure0100\" rel=\"nofollow\">https://twitter.com/mmcclure0100</a></li>\n<li>Meks
      McClure on GitHub — <a href=\"https://github.com/MMcClure11\" rel=\"nofollow\">https://github.com/MMcClure11</a></li>\n<li>Meks
      McClure on LinkedIn — <a href=\"https://www.linkedin.com/in/meksmcclure/\" rel=\"nofollow\">https://www.linkedin.com/in/meksmcclure/</a></li>\n<li>NewAperio
      — <a href=\"https://newaperio.com/\" rel=\"nofollow\">https://newaperio.com/</a></li>\n<li>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </li>\n<li>Sundi Myint on Twitter — <a href=\"https://twitter.com/sundikhin\"
      rel=\"nofollow\">https://twitter.com/sundikhin</a></li>\n<li>Owen Bickford on
      Twitter — <a href=\"https://twitter.com/owenbickford/\" rel=\"nofollow\">https://twitter.com/owenbickford/</a></li>\n<li>SmartLogic
      — <a href=\"https://smartlogic.io\" rel=\"nofollow\">https://smartlogic.io</a></li>\n<li>Moon
      Lander — <a href=\"https://www.zsa.io/moonlander/\" rel=\"nofollow\">https://www.zsa.io/moonlander/</a></li>\n<li>Difficult
      Conversations — <a href=\"https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/\"
      rel=\"nofollow\">https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/</a></li>\n<li>Kailh
      Speed Silver (Linear) Mechanical Switch Kit — <a href=\"https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z\"
      rel=\"nofollow\">https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z</a></li>\n</ul><p>Special
      Guest: Meks McClure.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another episode of Elixir Wizards, a show
    focused on conversations with software developers from around the world on the
    Elixir language and other modern web technologies. In today’s episode, we speak
    with Meks McClure, a Full Stack Software Engineer with an unconventional background
    in Biology and Philosophy. Meks found their passion for programming after building
    a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing
    people use the website and how it helped the community inspired Meks to pursue
    a career in programming. They are currently based at NewAperio, a software development
    company, as a Junior Developer. In today’s show we find out more about Meks’s
    professional background, NewAperio and the services they offer, more about their
    unconventional training background, challenges transitioning to a new career path,
    the importance of effective communication in the workplace, the significance of
    Pride Month, Meks’s very cool desk setup, and much more! Tune in today to learn
    more from today’s special guest, Meks McClure!</p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>A brief breakdown of today’s topic and introduction
    to our special guest, Meks McClure.</li>\n<li>We find out about NewAperio and
    what services they offer.</li>\n<li>How long Meks has been based at NewAperio.</li>\n<li>Find
    out what the NewAperio tradition is for people celebrating their work anniversary.</li>\n<li>A
    light-hearted discussion about singing Happy Birthday to colleagues.</li>\n<li>Meks
    gives us a rundown of their professional career.</li>\n<li>We find out more about
    Meks’s non-traditional programming background.</li>\n<li>How long they have been
    using Elixir for and how they initially got started in it.</li>\n<li>The lessons
    they learned from their Flatiron and Elixir development experience.</li>\n<li>What
    was most difficult transitioning from working Ruby to Elixir.</li>\n<li>Keeping
    a balance between learning and meeting productivity targets.</li>\n<li>The moment
    when Meks felt like they were making good progress transitioning.</li>\n<li>Some
    advice they have for people learning Elixir.</li>\n<li>Other projects that Meks
    is currently working on and programming languages used.</li>\n<li>How boot camp
    is different from real-world situations, in terms of programming.</li>\n<li>We
    find out about Meks’s current Star Wars obsession.</li>\n<li>The importance of
    finding enjoyment outside of work.</li>\n<li>Meks shares their personal journey
    to becoming the person they are today.</li>\n<li>A conversation about the importance
    of Pride Month and keeping an open mind.</li>\n<li>A highlight of some communication
    challenges that come with remote working.</li>\n<li>Why empathetic and effective
    communication is essential in the workplace.</li>\n<li>We reflect on some recent
    networking opportunities and conferences. </li>\n<li>The approach at NewAperio
    to networking and conferences.</li>\n<li>Details about Meks’ desk setup and why
    it is called the ‘Moon Lander’.</li>\n<li>More about their desk setup: keycap
    preferences.</li>\n<li>How learning Elixir changed the way Meks thinks about programming
    in general.</li>\n<li>Meks explains their approach to writing code.</li>\n<li>What
    their ultimate combination of programming languages are.</li>\n<li>What opportunities
    or weaknesses that a polyglot environment can introduce.</li>\n</ul>\n\n<p>*<em>Links
    Mentioned in Today’s Episode:<br>\n*</em></p>\n\n<ul>\n<li>Meks McClure on Twitter
    — <a href=\"https://twitter.com/mmcclure0100\" rel=\"nofollow\">https://twitter.com/mmcclure0100</a></li>\n<li>Meks
    McClure on GitHub — <a href=\"https://github.com/MMcClure11\" rel=\"nofollow\">https://github.com/MMcClure11</a></li>\n<li>Meks
    McClure on LinkedIn — <a href=\"https://www.linkedin.com/in/meksmcclure/\" rel=\"nofollow\">https://www.linkedin.com/in/meksmcclure/</a></li>\n<li>NewAperio
    — <a href=\"https://newaperio.com/\" rel=\"nofollow\">https://newaperio.com/</a></li>\n<li>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </li>\n<li>Sundi Myint on Twitter — <a href=\"https://twitter.com/sundikhin\"
    rel=\"nofollow\">https://twitter.com/sundikhin</a></li>\n<li>Owen Bickford on
    Twitter — <a href=\"https://twitter.com/owenbickford/\" rel=\"nofollow\">https://twitter.com/owenbickford/</a></li>\n<li>SmartLogic
    — <a href=\"https://smartlogic.io\" rel=\"nofollow\">https://smartlogic.io</a></li>\n<li>Moon
    Lander — <a href=\"https://www.zsa.io/moonlander/\" rel=\"nofollow\">https://www.zsa.io/moonlander/</a></li>\n<li>Difficult
    Conversations — <a href=\"https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/\"
    rel=\"nofollow\">https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/</a></li>\n<li>Kailh
    Speed Silver (Linear) Mechanical Switch Kit — <a href=\"https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z\"
    rel=\"nofollow\">https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z</a></li>\n</ul><p>Special
    Guest: Meks McClure.</p>\n      "
- title: Jessica Kerr on Systems Thinking for Developers
  slug: s8e7-kerr
  link: https://smartlogic.io/podcast/elixir-wizards/s8e7-kerr
  guid: 942f6a18-066a-4996-b3f8-9b0712959574
  pubDate: Thu, 26 May 2022 06:00:00 -0400
  pubDateFriendly: May 26, 2022
  description: "A superpower of software development is teaching our code to teach
    us what’s happening. This is observability, and it’s why Jessica Kerr works at
    Honeycomb, where she is a Developer Advocate. After twenty years as a developer,
    Jess sees software as a significant force in the world. As a symmathecist in the
    medium of code, she views development teams as learning systems made of both people
    and software. She believes that, if we allow the software to teach us, it becomes
    a better teammate and, if this process makes us into systems thinkers, we can
    be better people in the world! Today, Jess compares the way we work in teams to
    game design and we find out what she means by observability and how it can serve
    everybody on a team. She elaborates on the remarkable agency that software developers
    have and how the languages they use can empower them, especially when they aren’t
    having specific architecture imposed on them! We also touch on what being a polyglot
    means to Jess, the value of working with rather then against complexity, and what
    Jess means when she says a software team is the perfect example of a symmathesy,
    plus so much more, so make sure to tune in today for this fascinating conversation
    with Jessica Kerr!\n*Key Points From This Episode:\n*\n* Jess starts by drawing
    an interesting comparison between teamwork and game design.\n* Insight into her
    journey as a developer and how she was introduced to Elixir.\n* Discover Jess’
    connection to Elixir iteratees via Jose Valim!\n* Her role at Honeycomb, the languages
    she uses, and what she means by observability.\n* Why Jess believes that developers
    have agency and enormous power.\n* Why the best language to use is the one that
    you and your team know best.\n* The value of standardizing the platform rather
    than trying to dictate the language.\n* How observability reveals connections
    and acts as one tool that serves everybody.\n* Congressive versus ingressive behavior
    as per Dr. Eugenia Cheng.\n* What being a polyglot means to Jess: accepting that
    others don’t think just like you do and actively learning from them.\n* Working
    skillfully within complexity rather than trying to eliminate it.\n* How people
    gain exposure to different languages at Honeycomb.\n* The importance of understanding
    what architecture is being imposed on you.\n* Jess’ favorite talk on symmathesy
    and why a software team in particular is a symmathesy.\n* Opportunities and/or
    weaknesses that being in a polyglot environment can introduce.\n* Ways you can
    connect with Jess and even sign up for a 30-minute chat with her!\n*Links Mentioned
    in Today’s Episode:\n*\nJessica Kerr — https://jessitron.com/\nJessica Kerr on
    LinkedIn — https://www.linkedin.com/in/jessicakerr/\nJessica Kerr on Twitter —
    https://twitter.com/jessitron\nHoneycomb — https://www.honeycomb.io/\nSchedule
    a Call with Jess — honeycomb.io/office-hours\nGames: Agency As Art — https://objectionable.net/games-agency-as-art/\nOpenTelemetry
    — https://opentelemetry.io/\nMatthew Skelton — https://blog.matthewskelton.net/\nTeam
    Topologies — https://teamtopologies.com/\nQCon — https://plus.qconferences.com/
    \nKeynote: ’The Language is the Least of It’ — https://youtu.be/nvV-4040xXI\nDr
    Eugenia Cheng — http://eugeniacheng.com/\nx + y — https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/
    \n'Backend for frontend (BFF) pattern’ — https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0\nAbstract
    syntax tree — https://en.wikipedia.org/wiki/Abstractsyntaxtree\nKeynote: ‘Collective
    Problem Solving in Music, Science, Art, and Software’ — https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/\nSmartLogic
    — https://smartlogic.io/ \n Special Guest: Jessica Kerr.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ArOhlJgl
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/942f6a18-066a-4996-b3f8-9b0712959574.mp3
    length: '42053870'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: A superpower of software development is teaching our code to teach us
      what’s happening. This is observability, and it’s why Jessica Kerr works at
      Honeycomb, where she is a Developer Advocate. After twenty years as a developer,
      Jess sees software as a significant force in the world. As a symmathecist in
      the medium of code, she views development teams as learning systems made of
      both people and software.
    duration: '43:42'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/942f6a18-066a-4996-b3f8-9b0712959574/cover.jpg?v=1
    summary: "\n        <p>A superpower of software development is teaching our code
      to teach us what’s happening. This is observability, and it’s why Jessica Kerr
      works at Honeycomb, where she is a Developer Advocate. After twenty years as
      a developer, Jess sees software as a significant force in the world. As a symmathecist
      in the medium of code, she views development teams as learning systems made
      of both people and software. She believes that, if we allow the software to
      teach us, it becomes a better teammate and, if this process makes us into systems
      thinkers, we can be better people in the world! Today, Jess compares the way
      we work in teams to game design and we find out what she means by observability
      and how it can serve everybody on a team. She elaborates on the remarkable agency
      that software developers have and how the languages they use can empower them,
      especially when they aren’t having specific architecture imposed on them! We
      also touch on what being a polyglot means to Jess, the value of working with
      rather then against complexity, and what Jess means when she says a software
      team is the perfect example of a symmathesy, plus so much more, so make sure
      to tune in today for this fascinating conversation with Jessica Kerr!</p>\n\n<p>*<em>Key
      Points From This Episode:<br>\n*</em></p>\n\n<ul>\n<li>Jess starts by drawing
      an interesting comparison between teamwork and game design.</li>\n<li>Insight
      into her journey as a developer and how she was introduced to Elixir.</li>\n<li>Discover
      Jess’ connection to Elixir iteratees via Jose Valim!</li>\n<li>Her role at Honeycomb,
      the languages she uses, and what she means by observability.</li>\n<li>Why Jess
      believes that developers have agency and enormous power.</li>\n<li>Why the best
      language to use is the one that you and your team know best.</li>\n<li>The value
      of standardizing the platform rather than trying to dictate the language.</li>\n<li>How
      observability reveals connections and acts as one tool that serves everybody.</li>\n<li>Congressive
      versus ingressive behavior as per Dr. Eugenia Cheng.</li>\n<li>What being a
      polyglot means to Jess: accepting that others don’t think just like you do and
      actively learning from them.</li>\n<li>Working skillfully within complexity
      rather than trying to eliminate it.</li>\n<li>How people gain exposure to different
      languages at Honeycomb.</li>\n<li>The importance of understanding what architecture
      is being imposed on you.</li>\n<li>Jess’ favorite talk on symmathesy and why
      a software team in particular is a symmathesy.</li>\n<li>Opportunities and/or
      weaknesses that being in a polyglot environment can introduce.</li>\n<li>Ways
      you can connect with Jess and even sign up for a 30-minute chat with her!</li>\n</ul>\n\n<p>*<em>Links
      Mentioned in Today’s Episode:<br>\n*</em><br>\nJessica Kerr — <a href=\"https://jessitron.com/\"
      rel=\"nofollow\">https://jessitron.com/</a><br>\nJessica Kerr on LinkedIn —
      <a href=\"https://www.linkedin.com/in/jessicakerr/\" rel=\"nofollow\">https://www.linkedin.com/in/jessicakerr/</a><br>\nJessica
      Kerr on Twitter — <a href=\"https://twitter.com/jessitron\" rel=\"nofollow\">https://twitter.com/jessitron</a><br>\nHoneycomb
      — <a href=\"https://www.honeycomb.io/\" rel=\"nofollow\">https://www.honeycomb.io/</a><br>\nSchedule
      a Call with Jess — honeycomb.io/office-hours<br>\nGames: Agency As Art — <a
      href=\"https://objectionable.net/games-agency-as-art/\" rel=\"nofollow\">https://objectionable.net/games-agency-as-art/</a><br>\nOpenTelemetry
      — <a href=\"https://opentelemetry.io/\" rel=\"nofollow\">https://opentelemetry.io/</a><br>\nMatthew
      Skelton — <a href=\"https://blog.matthewskelton.net/\" rel=\"nofollow\">https://blog.matthewskelton.net/</a><br>\nTeam
      Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nQCon
      — <a href=\"https://plus.qconferences.com/\" rel=\"nofollow\">https://plus.qconferences.com/</a>
      <br>\nKeynote: ’The Language is the Least of It’ — <a href=\"https://youtu.be/nvV-4040xXI\"
      rel=\"nofollow\">https://youtu.be/nvV-4040xXI</a><br>\nDr Eugenia Cheng — <a
      href=\"http://eugeniacheng.com/\" rel=\"nofollow\">http://eugeniacheng.com/</a><br>\nx
      + y — <a href=\"https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/\"
      rel=\"nofollow\">https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/</a>
      <br>\n&#39;Backend for frontend (BFF) pattern’ — <a href=\"https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0\"
      rel=\"nofollow\">https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0</a><br>\nAbstract
      syntax tree — <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a><br>\nKeynote:
      ‘Collective Problem Solving in Music, Science, Art, and Software’ — <a href=\"https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/\"
      rel=\"nofollow\">https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Jessica Kerr.</p>\n      "
  contentEncoded: "\n        <p>A superpower of software development is teaching our
    code to teach us what’s happening. This is observability, and it’s why Jessica
    Kerr works at Honeycomb, where she is a Developer Advocate. After twenty years
    as a developer, Jess sees software as a significant force in the world. As a symmathecist
    in the medium of code, she views development teams as learning systems made of
    both people and software. She believes that, if we allow the software to teach
    us, it becomes a better teammate and, if this process makes us into systems thinkers,
    we can be better people in the world! Today, Jess compares the way we work in
    teams to game design and we find out what she means by observability and how it
    can serve everybody on a team. She elaborates on the remarkable agency that software
    developers have and how the languages they use can empower them, especially when
    they aren’t having specific architecture imposed on them! We also touch on what
    being a polyglot means to Jess, the value of working with rather then against
    complexity, and what Jess means when she says a software team is the perfect example
    of a symmathesy, plus so much more, so make sure to tune in today for this fascinating
    conversation with Jessica Kerr!</p>\n\n<p>*<em>Key Points From This Episode:<br>\n*</em></p>\n\n<ul>\n<li>Jess
    starts by drawing an interesting comparison between teamwork and game design.</li>\n<li>Insight
    into her journey as a developer and how she was introduced to Elixir.</li>\n<li>Discover
    Jess’ connection to Elixir iteratees via Jose Valim!</li>\n<li>Her role at Honeycomb,
    the languages she uses, and what she means by observability.</li>\n<li>Why Jess
    believes that developers have agency and enormous power.</li>\n<li>Why the best
    language to use is the one that you and your team know best.</li>\n<li>The value
    of standardizing the platform rather than trying to dictate the language.</li>\n<li>How
    observability reveals connections and acts as one tool that serves everybody.</li>\n<li>Congressive
    versus ingressive behavior as per Dr. Eugenia Cheng.</li>\n<li>What being a polyglot
    means to Jess: accepting that others don’t think just like you do and actively
    learning from them.</li>\n<li>Working skillfully within complexity rather than
    trying to eliminate it.</li>\n<li>How people gain exposure to different languages
    at Honeycomb.</li>\n<li>The importance of understanding what architecture is being
    imposed on you.</li>\n<li>Jess’ favorite talk on symmathesy and why a software
    team in particular is a symmathesy.</li>\n<li>Opportunities and/or weaknesses
    that being in a polyglot environment can introduce.</li>\n<li>Ways you can connect
    with Jess and even sign up for a 30-minute chat with her!</li>\n</ul>\n\n<p>*<em>Links
    Mentioned in Today’s Episode:<br>\n*</em><br>\nJessica Kerr — <a href=\"https://jessitron.com/\"
    rel=\"nofollow\">https://jessitron.com/</a><br>\nJessica Kerr on LinkedIn — <a
    href=\"https://www.linkedin.com/in/jessicakerr/\" rel=\"nofollow\">https://www.linkedin.com/in/jessicakerr/</a><br>\nJessica
    Kerr on Twitter — <a href=\"https://twitter.com/jessitron\" rel=\"nofollow\">https://twitter.com/jessitron</a><br>\nHoneycomb
    — <a href=\"https://www.honeycomb.io/\" rel=\"nofollow\">https://www.honeycomb.io/</a><br>\nSchedule
    a Call with Jess — honeycomb.io/office-hours<br>\nGames: Agency As Art — <a href=\"https://objectionable.net/games-agency-as-art/\"
    rel=\"nofollow\">https://objectionable.net/games-agency-as-art/</a><br>\nOpenTelemetry
    — <a href=\"https://opentelemetry.io/\" rel=\"nofollow\">https://opentelemetry.io/</a><br>\nMatthew
    Skelton — <a href=\"https://blog.matthewskelton.net/\" rel=\"nofollow\">https://blog.matthewskelton.net/</a><br>\nTeam
    Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nQCon
    — <a href=\"https://plus.qconferences.com/\" rel=\"nofollow\">https://plus.qconferences.com/</a>
    <br>\nKeynote: ’The Language is the Least of It’ — <a href=\"https://youtu.be/nvV-4040xXI\"
    rel=\"nofollow\">https://youtu.be/nvV-4040xXI</a><br>\nDr Eugenia Cheng — <a href=\"http://eugeniacheng.com/\"
    rel=\"nofollow\">http://eugeniacheng.com/</a><br>\nx + y — <a href=\"https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/\"
    rel=\"nofollow\">https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/</a>
    <br>\n&#39;Backend for frontend (BFF) pattern’ — <a href=\"https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0\"
    rel=\"nofollow\">https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0</a><br>\nAbstract
    syntax tree — <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a><br>\nKeynote:
    ‘Collective Problem Solving in Music, Science, Art, and Software’ — <a href=\"https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/\"
    rel=\"nofollow\">https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Jessica Kerr.</p>\n      "
- title: Digit on Smart Homes, EMPEX, and Cross-platform Development
  slug: s8e6-digit
  link: https://smartlogic.io/podcast/elixir-wizards/s8e6-digit
  guid: c1e61882-d69a-47d8-af8b-a1a1b3f33708
  pubDate: Thu, 19 May 2022 06:00:00 -0400
  pubDateFriendly: May 19, 2022
  description: "Welcome back to another episode of Elixir Wizards. Today, we chat
    with Digit, a talented software engineer currently based at SmartRent. He became
    aware of the company when he started trying to modify his smart home and realized
    what was behind the software. Digit works on building applications within the
    SmartRent suite of tools using the Nerves ecosystem. Although fairly new at SmartRent,
    Digit loves the powerful applications of the software they are developing. In
    today’s show we find out more about the work Digit is currently involved with
    at SmartRent and what they have in store for the future. We also discuss the pros
    and cons of living in a smart home, the different languages that Digit uses, what
    makes developing a game so challenging, Using Elixir for building DSLs to generate
    content for Unity, what Digit’s opinion is of Burrito, and much more! For all
    this and more, be sure to tune in today! \nKey Points From This Episode:\nIntroduction
    to today’s show and brief catch-up of what everyone has been up to.\nWe find out
    what talks at the conference Digit is most looking forward to.\nWhat OTP stands
    for: hint, it is not ‘Open Telephony Platform.’\nA brief discussion about the
    advantages of a one-day conference.\nWe find out who all the people are that are
    going to give talks at EMPEX. \nDigit shares what it has been like working at
    SmartRent.\nWe find out how Digit landed the job at SmartRent.\nBreakdown of what
    SmartRent is in terms of the high level.\nWe get some insider knowledge of the
    next-generation technology at SmartRent.\nRundown of what Flutter is and the advantages
    of using it.\nDiscussion about the pros and cons of living in a smart home.\nFind
    out what the best smart thermostat is, according to Digit.\nThe different programming
    languages that Digit is currently working in.\nDigit explains the type of WebSocket
    support available in Flutter. \nBackground about Digit’s experience in game development.\nWhat
    makes finishing developing a game so difficult.\nThe language stack used to develop
    games.\nUsing Elixir for building DSLs to generate content for Unity.\nDigit gives
    listeners an overview of Burrito.\nThe advantages of using Burrito for cross-platform
    with no internet connection.\nExamples of real-world applications using Burrito.\nOther
    applications for Elixir outside of web application development.\nWe get some insider
    information about a new Elixir-based project in the works.\nA rundown of the security
    applications using Macaroons. \nThe power that passwordless authentication has
    to offer.\nWe end the show with some takeaways from Digit for listeners. \nLinks
    Mentioned in Today’s Episode:\nDigit — https://puppy.surf\nDigit on GitHub — https://github.com/doawoo\nDigit
    on Twitter — https://twitter.com/doawoo\nSmartRent — https://smartrent.com\nSmartLogic
    — https://smartlogic.io/ \nSundi Myint on Twitter — https://twitter.com/sundikhin/\nOwen
    Bickford on Twitter — https://twitter.com/owenbickford/\nEMPEX — https://www.empex.co\nFlutter
    — https://flutter.dev/\n Special Guest: Digit.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Zyxlr7rr
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c1e61882-d69a-47d8-af8b-a1a1b3f33708.mp3
    length: '41346722'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: Welcome back to another episode of Elixir Wizards. Today, we chat with
      Digit, a talented software engineer currently based at SmartRent. He became
      aware of the company when he started trying to modify his smart home and realized
      what was behind the software. Digit works on building applications within the
      SmartRent suite of tools using the Nerves ecosystem. Although fairly new at
      SmartRent, Digit loves the powerful applications of the software they are developing.
    duration: '42:58'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c1e61882-d69a-47d8-af8b-a1a1b3f33708/cover.jpg?v=1
    summary: "\n        <p>Welcome back to another episode of Elixir Wizards. Today,
      we chat with Digit, a talented software engineer currently based at SmartRent.
      He became aware of the company when he started trying to modify his smart home
      and realized what was behind the software. Digit works on building applications
      within the SmartRent suite of tools using the Nerves ecosystem. Although fairly
      new at SmartRent, Digit loves the powerful applications of the software they
      are developing. In today’s show we find out more about the work Digit is currently
      involved with at SmartRent and what they have in store for the future. We also
      discuss the pros and cons of living in a smart home, the different languages
      that Digit uses, what makes developing a game so challenging, Using Elixir for
      building DSLs to generate content for Unity, what Digit’s opinion is of Burrito,
      and much more! For all this and more, be sure to tune in today! </p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Introduction to today’s
      show and brief catch-up of what everyone has been up to.</li>\n<li>We find out
      what talks at the conference Digit is most looking forward to.</li>\n<li>What
      OTP stands for: hint, it is not ‘Open Telephony Platform.’</li>\n<li>A brief
      discussion about the advantages of a one-day conference.</li>\n<li>We find out
      who all the people are that are going to give talks at EMPEX. </li>\n<li>Digit
      shares what it has been like working at SmartRent.</li>\n<li>We find out how
      Digit landed the job at SmartRent.</li>\n<li>Breakdown of what SmartRent is
      in terms of the high level.</li>\n<li>We get some insider knowledge of the next-generation
      technology at SmartRent.</li>\n<li>Rundown of what Flutter is and the advantages
      of using it.</li>\n<li>Discussion about the pros and cons of living in a smart
      home.</li>\n<li>Find out what the best smart thermostat is, according to Digit.</li>\n<li>The
      different programming languages that Digit is currently working in.</li>\n<li>Digit
      explains the type of WebSocket support available in Flutter. </li>\n<li>Background
      about Digit’s experience in game development.</li>\n<li>What makes finishing
      developing a game so difficult.</li>\n<li>The language stack used to develop
      games.</li>\n<li>Using Elixir for building DSLs to generate content for Unity.</li>\n<li>Digit
      gives listeners an overview of Burrito.</li>\n<li>The advantages of using Burrito
      for cross-platform with no internet connection.</li>\n<li>Examples of real-world
      applications using Burrito.</li>\n<li>Other applications for Elixir outside
      of web application development.</li>\n<li>We get some insider information about
      a new Elixir-based project in the works.</li>\n<li>A rundown of the security
      applications using Macaroons. </li>\n<li>The power that passwordless authentication
      has to offer.</li>\n<li>We end the show with some takeaways from Digit for listeners.
      </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Digit
      — <a href=\"https://puppy.surf\" rel=\"nofollow\">https://puppy.surf</a><br>\nDigit
      on GitHub — <a href=\"https://github.com/doawoo\" rel=\"nofollow\">https://github.com/doawoo</a><br>\nDigit
      on Twitter — <a href=\"https://twitter.com/doawoo\" rel=\"nofollow\">https://twitter.com/doawoo</a><br>\nSmartRent
      — <a href=\"https://smartrent.com\" rel=\"nofollow\">https://smartrent.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSundi Myint on Twitter — <a href=\"https://twitter.com/sundikhin/\" rel=\"nofollow\">https://twitter.com/sundikhin/</a><br>\nOwen
      Bickford on Twitter — <a href=\"https://twitter.com/owenbickford/\" rel=\"nofollow\">https://twitter.com/owenbickford/</a><br>\nEMPEX
      — <a href=\"https://www.empex.co\" rel=\"nofollow\">https://www.empex.co</a><br>\nFlutter
      — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a></p><p>Special
      Guest: Digit.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to another episode of Elixir Wizards.
    Today, we chat with Digit, a talented software engineer currently based at SmartRent.
    He became aware of the company when he started trying to modify his smart home
    and realized what was behind the software. Digit works on building applications
    within the SmartRent suite of tools using the Nerves ecosystem. Although fairly
    new at SmartRent, Digit loves the powerful applications of the software they are
    developing. In today’s show we find out more about the work Digit is currently
    involved with at SmartRent and what they have in store for the future. We also
    discuss the pros and cons of living in a smart home, the different languages that
    Digit uses, what makes developing a game so challenging, Using Elixir for building
    DSLs to generate content for Unity, what Digit’s opinion is of Burrito, and much
    more! For all this and more, be sure to tune in today! </p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Introduction to today’s show
    and brief catch-up of what everyone has been up to.</li>\n<li>We find out what
    talks at the conference Digit is most looking forward to.</li>\n<li>What OTP stands
    for: hint, it is not ‘Open Telephony Platform.’</li>\n<li>A brief discussion about
    the advantages of a one-day conference.</li>\n<li>We find out who all the people
    are that are going to give talks at EMPEX. </li>\n<li>Digit shares what it has
    been like working at SmartRent.</li>\n<li>We find out how Digit landed the job
    at SmartRent.</li>\n<li>Breakdown of what SmartRent is in terms of the high level.</li>\n<li>We
    get some insider knowledge of the next-generation technology at SmartRent.</li>\n<li>Rundown
    of what Flutter is and the advantages of using it.</li>\n<li>Discussion about
    the pros and cons of living in a smart home.</li>\n<li>Find out what the best
    smart thermostat is, according to Digit.</li>\n<li>The different programming languages
    that Digit is currently working in.</li>\n<li>Digit explains the type of WebSocket
    support available in Flutter. </li>\n<li>Background about Digit’s experience in
    game development.</li>\n<li>What makes finishing developing a game so difficult.</li>\n<li>The
    language stack used to develop games.</li>\n<li>Using Elixir for building DSLs
    to generate content for Unity.</li>\n<li>Digit gives listeners an overview of
    Burrito.</li>\n<li>The advantages of using Burrito for cross-platform with no
    internet connection.</li>\n<li>Examples of real-world applications using Burrito.</li>\n<li>Other
    applications for Elixir outside of web application development.</li>\n<li>We get
    some insider information about a new Elixir-based project in the works.</li>\n<li>A
    rundown of the security applications using Macaroons. </li>\n<li>The power that
    passwordless authentication has to offer.</li>\n<li>We end the show with some
    takeaways from Digit for listeners. </li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>Digit — <a href=\"https://puppy.surf\"
    rel=\"nofollow\">https://puppy.surf</a><br>\nDigit on GitHub — <a href=\"https://github.com/doawoo\"
    rel=\"nofollow\">https://github.com/doawoo</a><br>\nDigit on Twitter — <a href=\"https://twitter.com/doawoo\"
    rel=\"nofollow\">https://twitter.com/doawoo</a><br>\nSmartRent — <a href=\"https://smartrent.com\"
    rel=\"nofollow\">https://smartrent.com</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSundi Myint on Twitter — <a
    href=\"https://twitter.com/sundikhin/\" rel=\"nofollow\">https://twitter.com/sundikhin/</a><br>\nOwen
    Bickford on Twitter — <a href=\"https://twitter.com/owenbickford/\" rel=\"nofollow\">https://twitter.com/owenbickford/</a><br>\nEMPEX
    — <a href=\"https://www.empex.co\" rel=\"nofollow\">https://www.empex.co</a><br>\nFlutter
    — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a></p><p>Special
    Guest: Digit.</p>\n      "
- title: Nathan Willson on the Polyglot Landscape in Japan
  slug: s8e5-willson
  link: https://smartlogic.io/podcast/elixir-wizards/s8e5-willson
  guid: 23a28e9b-417e-4841-9b86-addd0247ce4e
  pubDate: Thu, 12 May 2022 06:00:00 -0400
  pubDateFriendly: May 12, 2022
  description: "Joining us in conversation today is Nathan Willson all the way from
    Tokyo, Japan. Listeners will learn about the polyglot landscape he works in from
    Japan, why he believes knowing a language, and mastering it, are two different
    things, and what his first foray into coding looked like. We touch on the necessary
    evil of MIDI plugins, and Nathan introduces listeners to GEMS, how you can use
    it, and what he has done to make it accessible across the globe. We talk latency
    issues, curbing the potential for abuse, and choosing to make an app open source,
    before delving into Nathan’s other projects outside of GEMS, including the Elixir
    app, Biddy, that he built with five friends, When to Chat, and much more. Thanks
    for tuning in to hear from today’s inspiring guest. \nKey Points From This Episode:\nAn
    introduction to today’s guest, Nathan Willson, his Canadian-Japanese history,
    his obsession with Elixir, and his musical experimental app, GEMS. \nThe polyglot
    environment in which he works which is Japanese and English.\nWhy knowing a language
    and mastering a language are such different things.\nHis first foray into coding
    via Reaper’s plugins.\nWhy he considers MIDI to be a necessary evil. \nWhat GEMS,
    or Globally Editable Matrix Sequencer, is, and how it works.\nHow Phoenix or Elixir
    can facilitate the use of GEMS anywhere in the world, at the same time.\nHow he
    has approached the problem of the potential for abuse.\nRelative and absolute
    latency and how that impacts user experience between countries.\nNathan’s other
    projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.\nThe app,
    When to Chat, that Nathan has built.\nWhere he picked up his design skills with
    a background in back-end engineering.\nWhy he prefers BandCamp to Spotify as a
    music listener.\nHow his knowledge of Elixir has helped him to code Ruby better.\nAn
    invitation from Nathan to reach out with what you are working on.\nLinks Mentioned
    in Today’s Episode:\nTone.js — https://tonejs.github.io/\nBandCamp — https://bandcamp.com/\nNathan
    Wilson — https://nathanwillson.com/\nNathan Willson on Twitter — https://twitter.com/nathanwillson\nNathan
    Willson on Instagram — https://www.instagram.com/nahtanw/\nGEMS — https://gems.nathanwillson.com/\nWhat
    is Max? | Cycling ‘74 — https://cycling74.com/products/max\nWhen to Chat —https://whentochat.co/\nSmartLogic
    — https://smartlogic.io/ \n Special Guest: Nathan Willson.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+_pCpY1et
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/23a28e9b-417e-4841-9b86-addd0247ce4e.mp3
    length: '43628070'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: Joining us in conversation today is Nathan Willson all the way from
      Tokyo, Japan. Learn about his current projects and how his background in music
      brought him to coding.
    duration: '45:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/23a28e9b-417e-4841-9b86-addd0247ce4e/cover.jpg?v=1
    summary: "\n        <p>Joining us in conversation today is Nathan Willson all
      the way from Tokyo, Japan. Listeners will learn about the polyglot landscape
      he works in from Japan, why he believes knowing a language, and mastering it,
      are two different things, and what his first foray into coding looked like.
      We touch on the necessary evil of MIDI plugins, and Nathan introduces listeners
      to GEMS, how you can use it, and what he has done to make it accessible across
      the globe. We talk latency issues, curbing the potential for abuse, and choosing
      to make an app open source, before delving into Nathan’s other projects outside
      of GEMS, including the Elixir app, Biddy, that he built with five friends, When
      to Chat, and much more. Thanks for tuning in to hear from today’s inspiring
      guest. </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>An
      introduction to today’s guest, Nathan Willson, his Canadian-Japanese history,
      his obsession with Elixir, and his musical experimental app, GEMS. </li>\n<li>The
      polyglot environment in which he works which is Japanese and English.</li>\n<li>Why
      knowing a language and mastering a language are such different things.</li>\n<li>His
      first foray into coding via Reaper’s plugins.</li>\n<li>Why he considers MIDI
      to be a necessary evil. </li>\n<li>What GEMS, or Globally Editable Matrix Sequencer,
      is, and how it works.</li>\n<li>How Phoenix or Elixir can facilitate the use
      of GEMS anywhere in the world, at the same time.</li>\n<li>How he has approached
      the problem of the potential for abuse.</li>\n<li>Relative and absolute latency
      and how that impacts user experience between countries.</li>\n<li>Nathan’s other
      projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.</li>\n<li>The
      app, When to Chat, that Nathan has built.</li>\n<li>Where he picked up his design
      skills with a background in back-end engineering.</li>\n<li>Why he prefers BandCamp
      to Spotify as a music listener.</li>\n<li>How his knowledge of Elixir has helped
      him to code Ruby better.</li>\n<li>An invitation from Nathan to reach out with
      what you are working on.</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s
      Episode:</strong></p>\n\n<p>Tone.js — <a href=\"https://tonejs.github.io/\"
      rel=\"nofollow\">https://tonejs.github.io/</a><br>\nBandCamp — <a href=\"https://bandcamp.com/\"
      rel=\"nofollow\">https://bandcamp.com/</a><br>\nNathan Wilson — <a href=\"https://nathanwillson.com/\"
      rel=\"nofollow\">https://nathanwillson.com/</a><br>\nNathan Willson on Twitter
      — <a href=\"https://twitter.com/nathanwillson\" rel=\"nofollow\">https://twitter.com/nathanwillson</a><br>\nNathan
      Willson on Instagram — <a href=\"https://www.instagram.com/nahtanw/\" rel=\"nofollow\">https://www.instagram.com/nahtanw/</a><br>\nGEMS
      — <a href=\"https://gems.nathanwillson.com/\" rel=\"nofollow\">https://gems.nathanwillson.com/</a><br>\nWhat
      is Max? | Cycling ‘74 — <a href=\"https://cycling74.com/products/max\" rel=\"nofollow\">https://cycling74.com/products/max</a><br>\nWhen
      to Chat —<a href=\"https://whentochat.co/\" rel=\"nofollow\">https://whentochat.co/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Nathan Willson.</p>\n      "
  contentEncoded: "\n        <p>Joining us in conversation today is Nathan Willson
    all the way from Tokyo, Japan. Listeners will learn about the polyglot landscape
    he works in from Japan, why he believes knowing a language, and mastering it,
    are two different things, and what his first foray into coding looked like. We
    touch on the necessary evil of MIDI plugins, and Nathan introduces listeners to
    GEMS, how you can use it, and what he has done to make it accessible across the
    globe. We talk latency issues, curbing the potential for abuse, and choosing to
    make an app open source, before delving into Nathan’s other projects outside of
    GEMS, including the Elixir app, Biddy, that he built with five friends, When to
    Chat, and much more. Thanks for tuning in to hear from today’s inspiring guest.
    </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>An
    introduction to today’s guest, Nathan Willson, his Canadian-Japanese history,
    his obsession with Elixir, and his musical experimental app, GEMS. </li>\n<li>The
    polyglot environment in which he works which is Japanese and English.</li>\n<li>Why
    knowing a language and mastering a language are such different things.</li>\n<li>His
    first foray into coding via Reaper’s plugins.</li>\n<li>Why he considers MIDI
    to be a necessary evil. </li>\n<li>What GEMS, or Globally Editable Matrix Sequencer,
    is, and how it works.</li>\n<li>How Phoenix or Elixir can facilitate the use of
    GEMS anywhere in the world, at the same time.</li>\n<li>How he has approached
    the problem of the potential for abuse.</li>\n<li>Relative and absolute latency
    and how that impacts user experience between countries.</li>\n<li>Nathan’s other
    projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.</li>\n<li>The
    app, When to Chat, that Nathan has built.</li>\n<li>Where he picked up his design
    skills with a background in back-end engineering.</li>\n<li>Why he prefers BandCamp
    to Spotify as a music listener.</li>\n<li>How his knowledge of Elixir has helped
    him to code Ruby better.</li>\n<li>An invitation from Nathan to reach out with
    what you are working on.</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s
    Episode:</strong></p>\n\n<p>Tone.js — <a href=\"https://tonejs.github.io/\" rel=\"nofollow\">https://tonejs.github.io/</a><br>\nBandCamp
    — <a href=\"https://bandcamp.com/\" rel=\"nofollow\">https://bandcamp.com/</a><br>\nNathan
    Wilson — <a href=\"https://nathanwillson.com/\" rel=\"nofollow\">https://nathanwillson.com/</a><br>\nNathan
    Willson on Twitter — <a href=\"https://twitter.com/nathanwillson\" rel=\"nofollow\">https://twitter.com/nathanwillson</a><br>\nNathan
    Willson on Instagram — <a href=\"https://www.instagram.com/nahtanw/\" rel=\"nofollow\">https://www.instagram.com/nahtanw/</a><br>\nGEMS
    — <a href=\"https://gems.nathanwillson.com/\" rel=\"nofollow\">https://gems.nathanwillson.com/</a><br>\nWhat
    is Max? | Cycling ‘74 — <a href=\"https://cycling74.com/products/max\" rel=\"nofollow\">https://cycling74.com/products/max</a><br>\nWhen
    to Chat —<a href=\"https://whentochat.co/\" rel=\"nofollow\">https://whentochat.co/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Nathan Willson.</p>\n      "
- title: Sanne Kalkman on Coding, Crafting, and Collaboration
  slug: s8e4-kalkman
  link: https://smartlogic.io/podcast/elixir-wizards/s8e4-kalkman
  guid: 32849026-ad26-4b84-9a89-316306f6e3c1
  pubDate: Thu, 05 May 2022 08:00:00 -0400
  pubDateFriendly: May  5, 2022
  description: "This week we are joined by Sanne Kalkman, former teacher turned software
    engineer. Currently, Sanne works at CodeSandbox, where she's one of two Elixir
    developers responsible for the backend. When she's not coding, you'll probably
    find her either 25 browser tabs deep into a new CS topic, learning yet another
    new hobby, or behind her sewing machine, all of which we dive into in today’s
    episode! Tuning in, you’ll discover which languages Sanne is proficient in and
    why she doesn’t consider herself a polyglot; gain some insight into CodeSandbox
    Projects, a more collaborative rewrite of CodeSandbox from the ground up; and
    get a sneak peek into Sanne’s upcoming keynote address at Code BEAM Europe in
    May 2022, which tackles how to help juniors succeed in your organization. We also
    touch on garbage collection in Elixir, cute avatars, the intersection of code
    and sewing, and much, much more, so make sure not to miss this fun and insightful
    conversation with coder and crafter, Sanne Kalkman!\nKey Points From This Episode:\nWhat
    it’s like living in the Netherlands, Sanne’s favorite TV show, and more.\nAn introduction
    to Sanne, how she found herself in tech, and her role at CodeSandbox.\nThe first
    language she entered the professional coding space with: Elixir, of course!\nHow
    she thinks about JavaScript now that she is proficient in another language like
    Elixir.\nLearn more about CodeSandbox Projects and how it fosters live collaboration.\nHow
    the CodeSandbox app is broken down into Elixir, TypeScript, and Rust.\nWhy Sanne
    views CodeSandbox as a polyglot environment, but she isn’t a polyglot herself.\nFind
    out why she prefers to stick with Elixir in her personal capacity.\nCode BEAM
    Europe 2022 and some highlights from Sanne’s upcoming keynote address.\nTop tips
    for helping juniors succeed at your organization; model asking questions.\nThe
    TLDR summary of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.\nCute
    avatars over headshots, Sanne’s crafty hobbies, side projects, and more!\nSome
    of the cool work taking place at the intersection of code and sewing.\nOpportunities
    at CodeSandbox to dive into different codebases and learn different things.\nFinal
    plugs, mentions, and where to connect with Sanne!\nLinks Mentioned in Today’s
    Episode:\nSanne Kalkman on LinkedIn — https://www.linkedin.com/in/sannekalkman/\nSanne
    Kalkman on GitHub — https://github.com/sannek/sketch\nSanne Kalkman on Twitter
    — https://twitter.com/sannekalkman \nCodeSandbox — https://codesandbox.io/\nOur
    Flag Means Death — https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO\nWalibi
    Amusement Park — https://www.walibi.com/\nCode BEAM Europe 2022 — https://codesync.global/conferences/code-beam-sto-2022/\nSanne
    Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — https://youtu.be/OSdaXNQ0xhQ\nCovatar
    — https://covatar.com/\nFreeSewing — https://freesewing.org/\nSmartLogic — https://smartlogic.io/
    \nSmartLogic Jobs — https://smartlogic.io/jobs\n Special Guest: Sanne Kalkman.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+46r6yef7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/32849026-ad26-4b84-9a89-316306f6e3c1.mp3
    length: '41882304'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: This week we are joined by Sanne Kalkman who works as Senior Software
      Engineer at CodeSandbox. We discuss her role at CodeSandbox, her interest in
      multiple languages, Elixir, crafting, and more.
    duration: '43:31'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/32849026-ad26-4b84-9a89-316306f6e3c1/cover.jpg?v=1
    summary: "\n        <p>This week we are joined by Sanne Kalkman, former teacher
      turned software engineer. Currently, Sanne works at CodeSandbox, where she&#39;s
      one of two Elixir developers responsible for the backend. When she&#39;s not
      coding, you&#39;ll probably find her either 25 browser tabs deep into a new
      CS topic, learning yet another new hobby, or behind her sewing machine, all
      of which we dive into in today’s episode! Tuning in, you’ll discover which languages
      Sanne is proficient in and why she doesn’t consider herself a polyglot; gain
      some insight into CodeSandbox Projects, a more collaborative rewrite of CodeSandbox
      from the ground up; and get a sneak peek into Sanne’s upcoming keynote address
      at Code BEAM Europe in May 2022, which tackles how to help juniors succeed in
      your organization. We also touch on garbage collection in Elixir, cute avatars,
      the intersection of code and sewing, and much, much more, so make sure not to
      miss this fun and insightful conversation with coder and crafter, Sanne Kalkman!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>What it’s like living in
      the Netherlands, Sanne’s favorite TV show, and more.</li>\n<li>An introduction
      to Sanne, how she found herself in tech, and her role at CodeSandbox.</li>\n<li>The
      first language she entered the professional coding space with: Elixir, of course!</li>\n<li>How
      she thinks about JavaScript now that she is proficient in another language like
      Elixir.</li>\n<li>Learn more about CodeSandbox Projects and how it fosters live
      collaboration.</li>\n<li>How the CodeSandbox app is broken down into Elixir,
      TypeScript, and Rust.</li>\n<li>Why Sanne views CodeSandbox as a polyglot environment,
      but she isn’t a polyglot herself.</li>\n<li>Find out why she prefers to stick
      with Elixir in her personal capacity.</li>\n<li>Code BEAM Europe 2022 and some
      highlights from Sanne’s upcoming keynote address.</li>\n<li>Top tips for helping
      juniors succeed at your organization; model asking questions.</li>\n<li>The
      TLDR summary of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.</li>\n<li>Cute
      avatars over headshots, Sanne’s crafty hobbies, side projects, and more!</li>\n<li>Some
      of the cool work taking place at the intersection of code and sewing.</li>\n<li>Opportunities
      at CodeSandbox to dive into different codebases and learn different things.</li>\n<li>Final
      plugs, mentions, and where to connect with Sanne!</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Sanne Kalkman on LinkedIn —
      <a href=\"https://www.linkedin.com/in/sannekalkman/\" rel=\"nofollow\">https://www.linkedin.com/in/sannekalkman/</a><br>\nSanne
      Kalkman on GitHub — <a href=\"https://github.com/sannek/sketch\" rel=\"nofollow\">https://github.com/sannek/sketch</a><br>\nSanne
      Kalkman on Twitter — <a href=\"https://twitter.com/sannekalkman\" rel=\"nofollow\">https://twitter.com/sannekalkman</a>
      <br>\nCodeSandbox — <a href=\"https://codesandbox.io/\" rel=\"nofollow\">https://codesandbox.io/</a><br>\nOur
      Flag Means Death — <a href=\"https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO\"
      rel=\"nofollow\">https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO</a><br>\nWalibi
      Amusement Park — <a href=\"https://www.walibi.com/\" rel=\"nofollow\">https://www.walibi.com/</a><br>\nCode
      BEAM Europe 2022 — <a href=\"https://codesync.global/conferences/code-beam-sto-2022/\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto-2022/</a><br>\nSanne
      Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — <a href=\"https://youtu.be/OSdaXNQ0xhQ\"
      rel=\"nofollow\">https://youtu.be/OSdaXNQ0xhQ</a><br>\nCovatar — <a href=\"https://covatar.com/\"
      rel=\"nofollow\">https://covatar.com/</a><br>\nFreeSewing — <a href=\"https://freesewing.org/\"
      rel=\"nofollow\">https://freesewing.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.io/jobs\"
      rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special Guest: Sanne Kalkman.</p>\n
      \     "
  contentEncoded: "\n        <p>This week we are joined by Sanne Kalkman, former teacher
    turned software engineer. Currently, Sanne works at CodeSandbox, where she&#39;s
    one of two Elixir developers responsible for the backend. When she&#39;s not coding,
    you&#39;ll probably find her either 25 browser tabs deep into a new CS topic,
    learning yet another new hobby, or behind her sewing machine, all of which we
    dive into in today’s episode! Tuning in, you’ll discover which languages Sanne
    is proficient in and why she doesn’t consider herself a polyglot; gain some insight
    into CodeSandbox Projects, a more collaborative rewrite of CodeSandbox from the
    ground up; and get a sneak peek into Sanne’s upcoming keynote address at Code
    BEAM Europe in May 2022, which tackles how to help juniors succeed in your organization.
    We also touch on garbage collection in Elixir, cute avatars, the intersection
    of code and sewing, and much, much more, so make sure not to miss this fun and
    insightful conversation with coder and crafter, Sanne Kalkman!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>What it’s like living in the
    Netherlands, Sanne’s favorite TV show, and more.</li>\n<li>An introduction to
    Sanne, how she found herself in tech, and her role at CodeSandbox.</li>\n<li>The
    first language she entered the professional coding space with: Elixir, of course!</li>\n<li>How
    she thinks about JavaScript now that she is proficient in another language like
    Elixir.</li>\n<li>Learn more about CodeSandbox Projects and how it fosters live
    collaboration.</li>\n<li>How the CodeSandbox app is broken down into Elixir, TypeScript,
    and Rust.</li>\n<li>Why Sanne views CodeSandbox as a polyglot environment, but
    she isn’t a polyglot herself.</li>\n<li>Find out why she prefers to stick with
    Elixir in her personal capacity.</li>\n<li>Code BEAM Europe 2022 and some highlights
    from Sanne’s upcoming keynote address.</li>\n<li>Top tips for helping juniors
    succeed at your organization; model asking questions.</li>\n<li>The TLDR summary
    of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.</li>\n<li>Cute
    avatars over headshots, Sanne’s crafty hobbies, side projects, and more!</li>\n<li>Some
    of the cool work taking place at the intersection of code and sewing.</li>\n<li>Opportunities
    at CodeSandbox to dive into different codebases and learn different things.</li>\n<li>Final
    plugs, mentions, and where to connect with Sanne!</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Sanne Kalkman on LinkedIn — <a
    href=\"https://www.linkedin.com/in/sannekalkman/\" rel=\"nofollow\">https://www.linkedin.com/in/sannekalkman/</a><br>\nSanne
    Kalkman on GitHub — <a href=\"https://github.com/sannek/sketch\" rel=\"nofollow\">https://github.com/sannek/sketch</a><br>\nSanne
    Kalkman on Twitter — <a href=\"https://twitter.com/sannekalkman\" rel=\"nofollow\">https://twitter.com/sannekalkman</a>
    <br>\nCodeSandbox — <a href=\"https://codesandbox.io/\" rel=\"nofollow\">https://codesandbox.io/</a><br>\nOur
    Flag Means Death — <a href=\"https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO\"
    rel=\"nofollow\">https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO</a><br>\nWalibi
    Amusement Park — <a href=\"https://www.walibi.com/\" rel=\"nofollow\">https://www.walibi.com/</a><br>\nCode
    BEAM Europe 2022 — <a href=\"https://codesync.global/conferences/code-beam-sto-2022/\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto-2022/</a><br>\nSanne
    Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — <a href=\"https://youtu.be/OSdaXNQ0xhQ\"
    rel=\"nofollow\">https://youtu.be/OSdaXNQ0xhQ</a><br>\nCovatar — <a href=\"https://covatar.com/\"
    rel=\"nofollow\">https://covatar.com/</a><br>\nFreeSewing — <a href=\"https://freesewing.org/\"
    rel=\"nofollow\">https://freesewing.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.io/jobs\"
    rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special Guest: Sanne Kalkman.</p>\n
    \     "
- title: Cassidy Williams and Tobi Pfeiffer on Elixir Programming at Remote
  slug: s8e3-williams-pfeiffer
  link: https://smartlogic.io/podcast/elixir-wizards/s8e3-williams-pfeiffer
  guid: c1436a7a-59b9-402a-970c-f87791f275e1
  pubDate: Thu, 28 Apr 2022 08:00:00 -0400
  pubDateFriendly: April 28, 2022
  description: "This double guest episode features Cassidy Williams, Head of Developer
    Experience and Education and Tobi Pfeiffer, Staff Engineer from Remote. This fast
    growing Elixir company provides HR support to clients who are hiring internationally.
    In this fascinating fast-paced conversation Cassidy and Tobi discuss how Remote
    works, the explosive growth it has seen and what Cassidy and Tobi have most enjoyed
    in their time there. Also, we learn more about Cassidy's content creation projects,
    why Tobi's handle is PragTob, and the strangest laws they have come across when
    working internationally. We also learn about Cassidy's love of mechanical keyboards
    and about Tobi's adorable pet rabbits. We wrap up the episode with some great
    book recommendations and what's upcoming at Remote.\nKey Points From This Episode:\nWelcome
    to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer
    (Staff Engineer) at Remote.\nWhy Cassidy recommends the app Centered for achieving
    flow state. \nHow different types of music affect everyone’s concentration while
    coding. \nGetting to know Tobi: Rails Girls community member, wearer of green
    and keyboard player. \nWho Cassidy is: a dweeb who likes memes and how she found
    the world of coding. \nWhat Remote is and how it works. \nHow Tobi came up with
    the handle PragTob!\nThe explosive growth Remote has seen, and how they stay on
    top of it.\nWhat's coming on the open-source front of Remote. \nThe challenges
    Remote faces when employing people from different countries. \nThe strangest laws
    Tobi and Cassidy have come across internationally. \nWhy Cassidy enjoyed the well-practiced
    onboarding aspects of Remote, and the company values Tobi most appreciates.\nTobi’s
    secret role in the formation of Remote!\nThe people Tobi and Cassidy see moving
    into Elixir and which skills benefit them the most. \nWhy Tobi's GitHub picture
    has a rabbit and his favorite game. \nCassidy’s passion for mechanical keyboards!\nBook
    club recommendations: the books you should be looking out for, and why!\nLinks
    Mentioned in Today’s Episode:\nCassidy Williams on LinkedIn — https://www.linkedin.com/in/cassidoo/\nCassidy
    Williams on TikTok — https://www.tiktok.com/@cassidoo\nCassidy Williams’ Newsletter
    — https://cassidoo.co/newsletter/\nTobi Pfeiffer on LinkedIn — https://www.linkedin.com/in/tobiaspfeiffer\nTobi
    Pfeiffer on GitHub — https://github.com/pragtob\nRemote — https://remote.com/\nRemote
    GitHub — https://github.com/remoteoss\nCentered — https://www.centered.app/\nBenchee
    — https://elixirschool.com/en/lessons/misc/benchee\nSimpleCov — https://github.com/simplecov-ruby\nRails
    Girls Berlin — http://railsgirls.com/berlin\nThe Agile Samurai: How Agile Masters
    Deliver Great Software — https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers\nNetlify
    — https://www.netlify.com/\nDevs for Ukraine — https://www.devsforukraine.io/\nJose
    Valim — https://www.linkedin.com/in/josevalim\nMarcelo Lebre — https://www.linkedin.com/in/marcelolebre\nRubyConf
    — https://rubyconf.org/\nRust — https://rust.facepunch.com/\nGo — https://go.dev/\nNode.js
    — https://nodejs.org/en/\nReact — https://reactjs.org/\nAstro — https://astro.build/\nSupabase
    — https://supabase.com/\nThea 2: The Shattering — https://store.steampowered.com/app/606230/Thea2TheShattering\nMechanical
    Keyboard — https://en.wikipedia.org/wiki/ModelM_keyboard\nQMK Firmware — https://docs.qmk.fm/#/\nBrandon
    Sanderson — https://www.brandonsanderson.com/\nDark Matter — https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch\nSmartLogic
    — https://smartlogic.io/\nSmartLogic Jobs — https://smartlogic.io/about/jobs\n
    Special Guests: Cassidy Williams and Tobi Pfeiffer.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+QLWOoP9W
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c1436a7a-59b9-402a-970c-f87791f275e1.mp3
    length: '59374234'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: This week we welcome Cassidy Williams and Tobi Pfeiffer from Remote.
      Learn about Cassidy's role as Head of Experience and Education and Tobi's work
      as Staff Engineer at this fast growing, international Elixir company in this
      exciting double-guest episode.
    duration: '1:00:36'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c1436a7a-59b9-402a-970c-f87791f275e1/cover.jpg?v=2
    summary: "\n        <p>This double guest episode features Cassidy Williams, Head
      of Developer Experience and Education and Tobi Pfeiffer, Staff Engineer from
      Remote. This fast growing Elixir company provides HR support to clients who
      are hiring internationally. In this fascinating fast-paced conversation Cassidy
      and Tobi discuss how Remote works, the explosive growth it has seen and what
      Cassidy and Tobi have most enjoyed in their time there. Also, we learn more
      about Cassidy&#39;s content creation projects, why Tobi&#39;s handle is PragTob,
      and the strangest laws they have come across when working internationally. We
      also learn about Cassidy&#39;s love of mechanical keyboards and about Tobi&#39;s
      adorable pet rabbits. We wrap up the episode with some great book recommendations
      and what&#39;s upcoming at Remote.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Welcome
      to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer
      (Staff Engineer) at Remote.</li>\n<li>Why Cassidy recommends the app Centered
      for achieving flow state. </li>\n<li>How different types of music affect everyone’s
      concentration while coding. </li>\n<li>Getting to know Tobi: Rails Girls community
      member, wearer of green and keyboard player. </li>\n<li>Who Cassidy is: a dweeb
      who likes memes and how she found the world of coding. </li>\n<li>What Remote
      is and how it works. </li>\n<li>How Tobi came up with the handle PragTob!</li>\n<li>The
      explosive growth Remote has seen, and how they stay on top of it.</li>\n<li>What&#39;s
      coming on the open-source front of Remote. </li>\n<li>The challenges Remote
      faces when employing people from different countries. </li>\n<li>The strangest
      laws Tobi and Cassidy have come across internationally. </li>\n<li>Why Cassidy
      enjoyed the well-practiced onboarding aspects of Remote, and the company values
      Tobi most appreciates.</li>\n<li>Tobi’s secret role in the formation of Remote!</li>\n<li>The
      people Tobi and Cassidy see moving into Elixir and which skills benefit them
      the most. </li>\n<li>Why Tobi&#39;s GitHub picture has a rabbit and his favorite
      game. </li>\n<li>Cassidy’s passion for mechanical keyboards!</li>\n<li>Book
      club recommendations: the books you should be looking out for, and why!</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Cassidy Williams on LinkedIn
      — <a href=\"https://www.linkedin.com/in/cassidoo/\" rel=\"nofollow\">https://www.linkedin.com/in/cassidoo/</a><br>\nCassidy
      Williams on TikTok — <a href=\"https://www.tiktok.com/@cassidoo\" rel=\"nofollow\">https://www.tiktok.com/@cassidoo</a><br>\nCassidy
      Williams’ Newsletter — <a href=\"https://cassidoo.co/newsletter/\" rel=\"nofollow\">https://cassidoo.co/newsletter/</a><br>\nTobi
      Pfeiffer on LinkedIn — <a href=\"https://www.linkedin.com/in/tobiaspfeiffer\"
      rel=\"nofollow\">https://www.linkedin.com/in/tobiaspfeiffer</a><br>\nTobi Pfeiffer
      on GitHub — <a href=\"https://github.com/pragtob\" rel=\"nofollow\">https://github.com/pragtob</a><br>\nRemote
      — <a href=\"https://remote.com/\" rel=\"nofollow\">https://remote.com/</a><br>\nRemote
      GitHub — <a href=\"https://github.com/remoteoss\" rel=\"nofollow\">https://github.com/remoteoss</a><br>\nCentered
      — <a href=\"https://www.centered.app/\" rel=\"nofollow\">https://www.centered.app/</a><br>\nBenchee
      — <a href=\"https://elixirschool.com/en/lessons/misc/benchee\" rel=\"nofollow\">https://elixirschool.com/en/lessons/misc/benchee</a><br>\nSimpleCov
      — <a href=\"https://github.com/simplecov-ruby\" rel=\"nofollow\">https://github.com/simplecov-ruby</a><br>\nRails
      Girls Berlin — <a href=\"http://railsgirls.com/berlin\" rel=\"nofollow\">http://railsgirls.com/berlin</a><br>\nThe
      Agile Samurai: How Agile Masters Deliver Great Software — <a href=\"https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers\"
      rel=\"nofollow\">https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers</a><br>\nNetlify
      — <a href=\"https://www.netlify.com/\" rel=\"nofollow\">https://www.netlify.com/</a><br>\nDevs
      for Ukraine — <a href=\"https://www.devsforukraine.io/\" rel=\"nofollow\">https://www.devsforukraine.io/</a><br>\nJose
      Valim — <a href=\"https://www.linkedin.com/in/josevalim\" rel=\"nofollow\">https://www.linkedin.com/in/josevalim</a><br>\nMarcelo
      Lebre — <a href=\"https://www.linkedin.com/in/marcelolebre\" rel=\"nofollow\">https://www.linkedin.com/in/marcelolebre</a><br>\nRubyConf
      — <a href=\"https://rubyconf.org/\" rel=\"nofollow\">https://rubyconf.org/</a><br>\nRust
      — <a href=\"https://rust.facepunch.com/\" rel=\"nofollow\">https://rust.facepunch.com/</a><br>\nGo
      — <a href=\"https://go.dev/\" rel=\"nofollow\">https://go.dev/</a><br>\nNode.js
      — <a href=\"https://nodejs.org/en/\" rel=\"nofollow\">https://nodejs.org/en/</a><br>\nReact
      — <a href=\"https://reactjs.org/\" rel=\"nofollow\">https://reactjs.org/</a><br>\nAstro
      — <a href=\"https://astro.build/\" rel=\"nofollow\">https://astro.build/</a><br>\nSupabase
      — <a href=\"https://supabase.com/\" rel=\"nofollow\">https://supabase.com/</a><br>\nThea
      2: The Shattering — <a href=\"https://store.steampowered.com/app/606230/Thea_2_The_Shattering\"
      rel=\"nofollow\">https://store.steampowered.com/app/606230/Thea_2_The_Shattering</a><br>\nMechanical
      Keyboard — <a href=\"https://en.wikipedia.org/wiki/Model_M_keyboard\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Model_M_keyboard</a><br>\nQMK
      Firmware — <a href=\"https://docs.qmk.fm/#/\" rel=\"nofollow\">https://docs.qmk.fm/#/</a><br>\nBrandon
      Sanderson — <a href=\"https://www.brandonsanderson.com/\" rel=\"nofollow\">https://www.brandonsanderson.com/</a><br>\nDark
      Matter — <a href=\"https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch\" rel=\"nofollow\">https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
      Jobs — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a></p><p>Special
      Guests: Cassidy Williams and Tobi Pfeiffer.</p>\n      "
  contentEncoded: "\n        <p>This double guest episode features Cassidy Williams,
    Head of Developer Experience and Education and Tobi Pfeiffer, Staff Engineer from
    Remote. This fast growing Elixir company provides HR support to clients who are
    hiring internationally. In this fascinating fast-paced conversation Cassidy and
    Tobi discuss how Remote works, the explosive growth it has seen and what Cassidy
    and Tobi have most enjoyed in their time there. Also, we learn more about Cassidy&#39;s
    content creation projects, why Tobi&#39;s handle is PragTob, and the strangest
    laws they have come across when working internationally. We also learn about Cassidy&#39;s
    love of mechanical keyboards and about Tobi&#39;s adorable pet rabbits. We wrap
    up the episode with some great book recommendations and what&#39;s upcoming at
    Remote.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Welcome
    to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer
    (Staff Engineer) at Remote.</li>\n<li>Why Cassidy recommends the app Centered
    for achieving flow state. </li>\n<li>How different types of music affect everyone’s
    concentration while coding. </li>\n<li>Getting to know Tobi: Rails Girls community
    member, wearer of green and keyboard player. </li>\n<li>Who Cassidy is: a dweeb
    who likes memes and how she found the world of coding. </li>\n<li>What Remote
    is and how it works. </li>\n<li>How Tobi came up with the handle PragTob!</li>\n<li>The
    explosive growth Remote has seen, and how they stay on top of it.</li>\n<li>What&#39;s
    coming on the open-source front of Remote. </li>\n<li>The challenges Remote faces
    when employing people from different countries. </li>\n<li>The strangest laws
    Tobi and Cassidy have come across internationally. </li>\n<li>Why Cassidy enjoyed
    the well-practiced onboarding aspects of Remote, and the company values Tobi most
    appreciates.</li>\n<li>Tobi’s secret role in the formation of Remote!</li>\n<li>The
    people Tobi and Cassidy see moving into Elixir and which skills benefit them the
    most. </li>\n<li>Why Tobi&#39;s GitHub picture has a rabbit and his favorite game.
    </li>\n<li>Cassidy’s passion for mechanical keyboards!</li>\n<li>Book club recommendations:
    the books you should be looking out for, and why!</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Cassidy Williams on LinkedIn
    — <a href=\"https://www.linkedin.com/in/cassidoo/\" rel=\"nofollow\">https://www.linkedin.com/in/cassidoo/</a><br>\nCassidy
    Williams on TikTok — <a href=\"https://www.tiktok.com/@cassidoo\" rel=\"nofollow\">https://www.tiktok.com/@cassidoo</a><br>\nCassidy
    Williams’ Newsletter — <a href=\"https://cassidoo.co/newsletter/\" rel=\"nofollow\">https://cassidoo.co/newsletter/</a><br>\nTobi
    Pfeiffer on LinkedIn — <a href=\"https://www.linkedin.com/in/tobiaspfeiffer\"
    rel=\"nofollow\">https://www.linkedin.com/in/tobiaspfeiffer</a><br>\nTobi Pfeiffer
    on GitHub — <a href=\"https://github.com/pragtob\" rel=\"nofollow\">https://github.com/pragtob</a><br>\nRemote
    — <a href=\"https://remote.com/\" rel=\"nofollow\">https://remote.com/</a><br>\nRemote
    GitHub — <a href=\"https://github.com/remoteoss\" rel=\"nofollow\">https://github.com/remoteoss</a><br>\nCentered
    — <a href=\"https://www.centered.app/\" rel=\"nofollow\">https://www.centered.app/</a><br>\nBenchee
    — <a href=\"https://elixirschool.com/en/lessons/misc/benchee\" rel=\"nofollow\">https://elixirschool.com/en/lessons/misc/benchee</a><br>\nSimpleCov
    — <a href=\"https://github.com/simplecov-ruby\" rel=\"nofollow\">https://github.com/simplecov-ruby</a><br>\nRails
    Girls Berlin — <a href=\"http://railsgirls.com/berlin\" rel=\"nofollow\">http://railsgirls.com/berlin</a><br>\nThe
    Agile Samurai: How Agile Masters Deliver Great Software — <a href=\"https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers\"
    rel=\"nofollow\">https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers</a><br>\nNetlify
    — <a href=\"https://www.netlify.com/\" rel=\"nofollow\">https://www.netlify.com/</a><br>\nDevs
    for Ukraine — <a href=\"https://www.devsforukraine.io/\" rel=\"nofollow\">https://www.devsforukraine.io/</a><br>\nJose
    Valim — <a href=\"https://www.linkedin.com/in/josevalim\" rel=\"nofollow\">https://www.linkedin.com/in/josevalim</a><br>\nMarcelo
    Lebre — <a href=\"https://www.linkedin.com/in/marcelolebre\" rel=\"nofollow\">https://www.linkedin.com/in/marcelolebre</a><br>\nRubyConf
    — <a href=\"https://rubyconf.org/\" rel=\"nofollow\">https://rubyconf.org/</a><br>\nRust
    — <a href=\"https://rust.facepunch.com/\" rel=\"nofollow\">https://rust.facepunch.com/</a><br>\nGo
    — <a href=\"https://go.dev/\" rel=\"nofollow\">https://go.dev/</a><br>\nNode.js
    — <a href=\"https://nodejs.org/en/\" rel=\"nofollow\">https://nodejs.org/en/</a><br>\nReact
    — <a href=\"https://reactjs.org/\" rel=\"nofollow\">https://reactjs.org/</a><br>\nAstro
    — <a href=\"https://astro.build/\" rel=\"nofollow\">https://astro.build/</a><br>\nSupabase
    — <a href=\"https://supabase.com/\" rel=\"nofollow\">https://supabase.com/</a><br>\nThea
    2: The Shattering — <a href=\"https://store.steampowered.com/app/606230/Thea_2_The_Shattering\"
    rel=\"nofollow\">https://store.steampowered.com/app/606230/Thea_2_The_Shattering</a><br>\nMechanical
    Keyboard — <a href=\"https://en.wikipedia.org/wiki/Model_M_keyboard\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Model_M_keyboard</a><br>\nQMK
    Firmware — <a href=\"https://docs.qmk.fm/#/\" rel=\"nofollow\">https://docs.qmk.fm/#/</a><br>\nBrandon
    Sanderson — <a href=\"https://www.brandonsanderson.com/\" rel=\"nofollow\">https://www.brandonsanderson.com/</a><br>\nDark
    Matter — <a href=\"https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch\" rel=\"nofollow\">https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSmartLogic
    Jobs — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a></p><p>Special
    Guests: Cassidy Williams and Tobi Pfeiffer.</p>\n      "
- title: Devon Estes on The Power of Functional Programming
  slug: s8e2-estes
  link: https://smartlogic.io/podcast/elixir-wizards/s8e2-estes
  guid: 95a396ef-84bd-43e0-b0ae-dc8276917eb9
  pubDate: Thu, 21 Apr 2022 08:00:00 -0400
  pubDateFriendly: April 21, 2022
  description: "Today’s guest is Devon Estes, who leads the third-party integration
    team at Remote, a company that uses technology to make it easier for other companies
    to hire remote employees (not contractors, actual employees) from over 100 countries
    across the world. Prior to working at Remote (which he loves, as you'll hear today),
    Devon was a freelancer and avid public speaker, and some of his talks from many
    years ago are still relevant today. In this conversation, Devon explains why functional
    programming is easier to use than any other programming type, and how the only
    thing holding you back from becoming a master is your desire to learn! \nKey Points
    From This Episode:\nGuest host Dan Ivovich explains what prompted him to come
    up with the theme for this season; Elixir in a Polyglot Environment.\nA brief
    rundown of Devon’s daily life.\nContent that Devon covers in the talks that he
    gives these days.\nDevon explains what his role at Remote (where he has worked
    since November 2021) involves.\nA challenge that Devon has noticed other people
    facing when learning Elixir.\nAn overview of what Remote does, and the specific
    area that Devon’s team focuses on.\nFunctional programming versus object-oriented
    programming.\nDevon shares an example of the power of Elixir.\nThe importance
    of libraries in making Elixir a viable language for data scientists.\nDevon’s
    thoughts on mutation testing.\nWhy Devon doesn’t do a lot of open-source work
    anymore.\nHow Remote has grown over the past year and a half.\nOne of the things
    that Devon loves about working at Remote.\nLinks Mentioned in Today’s Episode:\nDevon
    Estes on Twitter — https://twitter.com/devoncestes \nDevon Estes — https://devonestes.com/
    \nRefactoring Elixir — https://www.youtube.com/watch?v=tJJMrtJEK1A \nGoing Multi-Node
    with ExUnit— https://www.youtube.com/watch?v=elC_8PhWRTg \nDesigning Elixir Systems
    with OTP — https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp
    \nElixirConf EU — https://www.elixirconf.eu/ \nRemote — http://remote.com/ \nSmartLogic
    — https://smartlogic.io/ \nJobs at SmartLogic — https://smartlogic.io/jobs\n Special
    Guest: Devon Estes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+sEA8SnOo
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/95a396ef-84bd-43e0-b0ae-dc8276917eb9.mp3
    length: '46293746'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: For today's episode we invite back Devon Estes, who now leads the third-party
      integration team at Remote. In this conversation, Devon tells us about the ins
      and outs of working for an enormous international Elixir based company, and
      explains why functional programming is easier to use than any other programming
      type.
    duration: '48:07'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/95a396ef-84bd-43e0-b0ae-dc8276917eb9/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Devon Estes, who leads the third-party
      integration team at Remote, a company that uses technology to make it easier
      for other companies to hire remote employees (not contractors, actual employees)
      from over 100 countries across the world. Prior to working at Remote (which
      he loves, as you&#39;ll hear today), Devon was a freelancer and avid public
      speaker, and some of his talks from many years ago are still relevant today.
      In this conversation, Devon explains why functional programming is easier to
      use than any other programming type, and how the only thing holding you back
      from becoming a master is your desire to learn! </p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>Guest host Dan Ivovich explains
      what prompted him to come up with the theme for this season; Elixir in a Polyglot
      Environment.</li>\n<li>A brief rundown of Devon’s daily life.</li>\n<li>Content
      that Devon covers in the talks that he gives these days.</li>\n<li>Devon explains
      what his role at Remote (where he has worked since November 2021) involves.</li>\n<li>A
      challenge that Devon has noticed other people facing when learning Elixir.</li>\n<li>An
      overview of what Remote does, and the specific area that Devon’s team focuses
      on.</li>\n<li>Functional programming versus object-oriented programming.</li>\n<li>Devon
      shares an example of the power of Elixir.</li>\n<li>The importance of libraries
      in making Elixir a viable language for data scientists.</li>\n<li>Devon’s thoughts
      on mutation testing.</li>\n<li>Why Devon doesn’t do a lot of open-source work
      anymore.</li>\n<li>How Remote has grown over the past year and a half.</li>\n<li>One
      of the things that Devon loves about working at Remote.</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Devon Estes on Twitter — <a
      href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a>
      <br>\nDevon Estes — <a href=\"https://devonestes.com/\" rel=\"nofollow\">https://devonestes.com/</a>
      <br>\nRefactoring Elixir — <a href=\"https://www.youtube.com/watch?v=tJJMrtJEK1A\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=tJJMrtJEK1A</a> <br>\nGoing
      Multi-Node with ExUnit— <a href=\"https://www.youtube.com/watch?v=elC_8PhWRTg\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=elC_8PhWRTg</a> <br>\nDesigning
      Elixir Systems with OTP — <a href=\"https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp</a>
      <br>\nElixirConf EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a>
      <br>\nRemote — <a href=\"http://remote.com/\" rel=\"nofollow\">http://remote.com/</a>
      <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJobs at SmartLogic — <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special
      Guest: Devon Estes.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Devon Estes, who leads the third-party
    integration team at Remote, a company that uses technology to make it easier for
    other companies to hire remote employees (not contractors, actual employees) from
    over 100 countries across the world. Prior to working at Remote (which he loves,
    as you&#39;ll hear today), Devon was a freelancer and avid public speaker, and
    some of his talks from many years ago are still relevant today. In this conversation,
    Devon explains why functional programming is easier to use than any other programming
    type, and how the only thing holding you back from becoming a master is your desire
    to learn! </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Guest
    host Dan Ivovich explains what prompted him to come up with the theme for this
    season; Elixir in a Polyglot Environment.</li>\n<li>A brief rundown of Devon’s
    daily life.</li>\n<li>Content that Devon covers in the talks that he gives these
    days.</li>\n<li>Devon explains what his role at Remote (where he has worked since
    November 2021) involves.</li>\n<li>A challenge that Devon has noticed other people
    facing when learning Elixir.</li>\n<li>An overview of what Remote does, and the
    specific area that Devon’s team focuses on.</li>\n<li>Functional programming versus
    object-oriented programming.</li>\n<li>Devon shares an example of the power of
    Elixir.</li>\n<li>The importance of libraries in making Elixir a viable language
    for data scientists.</li>\n<li>Devon’s thoughts on mutation testing.</li>\n<li>Why
    Devon doesn’t do a lot of open-source work anymore.</li>\n<li>How Remote has grown
    over the past year and a half.</li>\n<li>One of the things that Devon loves about
    working at Remote.</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Devon
    Estes on Twitter — <a href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a>
    <br>\nDevon Estes — <a href=\"https://devonestes.com/\" rel=\"nofollow\">https://devonestes.com/</a>
    <br>\nRefactoring Elixir — <a href=\"https://www.youtube.com/watch?v=tJJMrtJEK1A\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=tJJMrtJEK1A</a> <br>\nGoing Multi-Node
    with ExUnit— <a href=\"https://www.youtube.com/watch?v=elC_8PhWRTg\" rel=\"nofollow\">https://www.youtube.com/watch?v=elC_8PhWRTg</a>
    <br>\nDesigning Elixir Systems with OTP — <a href=\"https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp</a>
    <br>\nElixirConf EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a>
    <br>\nRemote — <a href=\"http://remote.com/\" rel=\"nofollow\">http://remote.com/</a>
    <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJobs at SmartLogic — <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special
    Guest: Devon Estes.</p>\n      "
- title: Miguel Cobá on Deploying in Elixir and Other Languages
  slug: s8e1-coba
  link: https://smartlogic.io/podcast/elixir-wizards/s8e1-coba
  guid: f4a94090-3527-4b5f-924e-beb55f9688c5
  pubDate: Thu, 14 Apr 2022 08:00:00 -0400
  pubDateFriendly: April 14, 2022
  description: "Welcome to the new season of Elixir Wizards: Elixir in a Polyglot
    Environment. To get things going on this exciting and intriguing subject we are
    very happy to welcome Miguel Cobá! Miguel currently works at Shore, and he gives
    us some great insight into the part that Elixir plays at the company (alongside
    other languages), and how this suits his particulars skillset and vision. In this
    season, we want to consider important questions about reaching beyond the confines
    of the Elixir community, and how we can all learn from each other. Miguel is such
    a perfect guest to open this conversation, as he is fascinated by the way Elixir
    can fit into a network of knowledge and its deployment into other areas. In today's
    chat, we also get into the early days of Miguel's interest in programming, and
    how it took starting a job for him to really start learning. So, to hear all this
    and more, and to get a taste of a great season to come, be sure to tune in!\nKey
    Points From This Episode:\nMiguel's perspective on the importance of using Elixir
    alongside other languages.\nThe languages that Miguel has worked in, and currently
    uses. \nA look at the path that Miguel took into programming and the first language
    he used! \nTurning an interest into a career; Miguel's biggest periods of learning.
    \nBackground and motivations for Miguel's book, 100 Elixir Tips. \nThe book that
    Miguel wrote that aims to help developers to write their own books!\nConstant
    learning and the passion that Miguel has for sharing this process with others
    through writing.  \nMiguel shares some surprising parts of deployment in other
    languages. \nThe combinations of languages that Miguel prefers.\nAn explanation
    of Elixir's strength for background or asynchronous tasks.\nWhy Miguel values
    the attitude above different language skills in a programmer.\nUnpacking how Elixir
    fits into the polyglot environment at Shore. \nHow Miguel feels about community
    building and the usefulness of Twitter. \nMiguel compares his favorite parts of
    Elixir and the things he feels it is missing. \nWhere to find and connect with
    Miguel online!\nLinks Mentioned in Today’s Episode:\n100 Elixir Tips — https://store.miguelcoba.com/l/100elixirtips\nDeploying
    Elixir — https://blog.miguelcoba.com/deploying-elixir-ebook\nMiguel Cobá on Twitter
    https://twitter.com/MiguelCoba_\nElm — https://elm-lang.org/\nMiguel Cobá Blog
    https://blog.miguelcoba.com/\nGumroad — https://gumroad.com/\nHashnotes — https://www.hashnotes.app/\nShore
    — https://www.shore.com/en/\nSmartLogic — https://smartlogic.io/ \nJobs at SmartLogic
    – https://smartlogic.io/jobs Special Guest: Miguel Cobá.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+lwm90KRX
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f4a94090-3527-4b5f-924e-beb55f9688c5.mp3
    length: '70267158'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '8'
    author: SmartLogic LLC
    subtitle: To kick off our season premiere, we are very happy to welcome Miguel
      Cobá to the show! Miguel currently works at Shore, and he gives us some great
      insight into the part that Elixir plays at the company (alongside other languages),
      and how this suits his particulars skillset and vision.
    duration: '48:47'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f4a94090-3527-4b5f-924e-beb55f9688c5/cover.jpg?v=1
    summary: "\n        <p>Welcome to the new season of Elixir Wizards: Elixir in
      a Polyglot Environment. To get things going on this exciting and intriguing
      subject we are very happy to welcome Miguel Cobá! Miguel currently works at
      Shore, and he gives us some great insight into the part that Elixir plays at
      the company (alongside other languages), and how this suits his particulars
      skillset and vision. In this season, we want to consider important questions
      about reaching beyond the confines of the Elixir community, and how we can all
      learn from each other. Miguel is such a perfect guest to open this conversation,
      as he is fascinated by the way Elixir can fit into a network of knowledge and
      its deployment into other areas. In today&#39;s chat, we also get into the early
      days of Miguel&#39;s interest in programming, and how it took starting a job
      for him to really start learning. So, to hear all this and more, and to get
      a taste of a great season to come, be sure to tune in!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Miguel&#39;s perspective
      on the importance of using Elixir alongside other languages.</li>\n<li>The languages
      that Miguel has worked in, and currently uses. </li>\n<li>A look at the path
      that Miguel took into programming and the first language he used! </li>\n<li>Turning
      an interest into a career; Miguel&#39;s biggest periods of learning. </li>\n<li>Background
      and motivations for Miguel&#39;s book, 100 Elixir Tips. </li>\n<li>The book
      that Miguel wrote that aims to help developers to write their own books!</li>\n<li>Constant
      learning and the passion that Miguel has for sharing this process with others
      through writing.<br></li>\n<li>Miguel shares some surprising parts of deployment
      in other languages. </li>\n<li>The combinations of languages that Miguel prefers.</li>\n<li>An
      explanation of Elixir&#39;s strength for background or asynchronous tasks.</li>\n<li>Why
      Miguel values the attitude above different language skills in a programmer.</li>\n<li>Unpacking
      how Elixir fits into the polyglot environment at Shore. </li>\n<li>How Miguel
      feels about community building and the usefulness of Twitter. </li>\n<li>Miguel
      compares his favorite parts of Elixir and the things he feels it is missing.
      </li>\n<li>Where to find and connect with Miguel online!</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>100 Elixir Tips — <a href=\"https://store.miguelcoba.com/l/100elixirtips\"
      rel=\"nofollow\">https://store.miguelcoba.com/l/100elixirtips</a><br>\nDeploying
      Elixir — <a href=\"https://blog.miguelcoba.com/deploying-elixir-ebook\" rel=\"nofollow\">https://blog.miguelcoba.com/deploying-elixir-ebook</a><br>\nMiguel
      Cobá on Twitter <a href=\"https://twitter.com/MiguelCoba_\" rel=\"nofollow\">https://twitter.com/MiguelCoba_</a><br>\nElm
      — <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nMiguel
      Cobá Blog <a href=\"https://blog.miguelcoba.com/\" rel=\"nofollow\">https://blog.miguelcoba.com/</a><br>\nGumroad
      — <a href=\"https://gumroad.com/\" rel=\"nofollow\">https://gumroad.com/</a><br>\nHashnotes
      — <a href=\"https://www.hashnotes.app/\" rel=\"nofollow\">https://www.hashnotes.app/</a><br>\nShore
      — <a href=\"https://www.shore.com/en/\" rel=\"nofollow\">https://www.shore.com/en/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJobs at SmartLogic – <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special
      Guest: Miguel Cobá.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the new season of Elixir Wizards: Elixir
    in a Polyglot Environment. To get things going on this exciting and intriguing
    subject we are very happy to welcome Miguel Cobá! Miguel currently works at Shore,
    and he gives us some great insight into the part that Elixir plays at the company
    (alongside other languages), and how this suits his particulars skillset and vision.
    In this season, we want to consider important questions about reaching beyond
    the confines of the Elixir community, and how we can all learn from each other.
    Miguel is such a perfect guest to open this conversation, as he is fascinated
    by the way Elixir can fit into a network of knowledge and its deployment into
    other areas. In today&#39;s chat, we also get into the early days of Miguel&#39;s
    interest in programming, and how it took starting a job for him to really start
    learning. So, to hear all this and more, and to get a taste of a great season
    to come, be sure to tune in!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Miguel&#39;s
    perspective on the importance of using Elixir alongside other languages.</li>\n<li>The
    languages that Miguel has worked in, and currently uses. </li>\n<li>A look at
    the path that Miguel took into programming and the first language he used! </li>\n<li>Turning
    an interest into a career; Miguel&#39;s biggest periods of learning. </li>\n<li>Background
    and motivations for Miguel&#39;s book, 100 Elixir Tips. </li>\n<li>The book that
    Miguel wrote that aims to help developers to write their own books!</li>\n<li>Constant
    learning and the passion that Miguel has for sharing this process with others
    through writing.<br></li>\n<li>Miguel shares some surprising parts of deployment
    in other languages. </li>\n<li>The combinations of languages that Miguel prefers.</li>\n<li>An
    explanation of Elixir&#39;s strength for background or asynchronous tasks.</li>\n<li>Why
    Miguel values the attitude above different language skills in a programmer.</li>\n<li>Unpacking
    how Elixir fits into the polyglot environment at Shore. </li>\n<li>How Miguel
    feels about community building and the usefulness of Twitter. </li>\n<li>Miguel
    compares his favorite parts of Elixir and the things he feels it is missing. </li>\n<li>Where
    to find and connect with Miguel online!</li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>100 Elixir Tips — <a href=\"https://store.miguelcoba.com/l/100elixirtips\"
    rel=\"nofollow\">https://store.miguelcoba.com/l/100elixirtips</a><br>\nDeploying
    Elixir — <a href=\"https://blog.miguelcoba.com/deploying-elixir-ebook\" rel=\"nofollow\">https://blog.miguelcoba.com/deploying-elixir-ebook</a><br>\nMiguel
    Cobá on Twitter <a href=\"https://twitter.com/MiguelCoba_\" rel=\"nofollow\">https://twitter.com/MiguelCoba_</a><br>\nElm
    — <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nMiguel
    Cobá Blog <a href=\"https://blog.miguelcoba.com/\" rel=\"nofollow\">https://blog.miguelcoba.com/</a><br>\nGumroad
    — <a href=\"https://gumroad.com/\" rel=\"nofollow\">https://gumroad.com/</a><br>\nHashnotes
    — <a href=\"https://www.hashnotes.app/\" rel=\"nofollow\">https://www.hashnotes.app/</a><br>\nShore
    — <a href=\"https://www.shore.com/en/\" rel=\"nofollow\">https://www.shore.com/en/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJobs at SmartLogic – <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a></p><p>Special
    Guest: Miguel Cobá.</p>\n      "
- title: Todd Resudek on the Impact of Elixir
  slug: s7e12-resudek
  link: https://smartlogic.io/podcast/elixir-wizards/s7e12-resudek
  guid: 8ddde7c8-d4df-4b6b-88dd-7ac7796534c1
  pubDate: Thu, 03 Feb 2022 06:00:00 -0500
  pubDateFriendly: February  3, 2022
  description: "Welcome to the Season 7 finale! Today, we are joined by Todd Resudek,
    Staff Engineer at Jackpocket, to reflect on the past season and speak about the
    impact of Elixir, as well as a variety of other topics almost entirely unrelated
    to programming! Todd is a reformed graphic designer that got his start in web
    development 15 years ago. He has made a career in front-end development, PHP,
    Rails, and Elixir. He is also a member of the Hex core team and, in his spare
    time, he tinkers with hardware projects. In today’s episode of Elixir Wizards,
    you’ll learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing,
    the formula for anticipating how many people will turn up at your event, and what
    trains have to do with the history of timezones. We also touch on Todd’s hopes
    for the future of Elixir, how Elixir has impacted him, both personally and professionally,
    and why he recommends learning Elixir as a backup language, plus so much more!
    Tune in today for a fun discussion with Todd Resudek!\n**\nKey Points From This
    Episode:**\nThe hilarious and sometimes tragic mispronunciation of our names.\nLearn
    more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing.\nTodd
    shares a bit about his background and his allegiance to Wisconsin football.\nWe
    discuss the formula for how many people to expect at your meetup (or wedding).\nSome
    interesting history on timezones and how they relate to trains.\nDune memes, roller
    skating, a qualifier for couple skates, and more.\nTodd shares his favorite Elixir
    Wizards episode from Season 7: Brooklyn Zelenka.\nHow Todd learned Elixir when
    he first started working at Weedmaps.\nWhy he suggests learning Elixir as a ‘backup
    language’ rather than a primary one.\nHis biggest hope for the future of Elixir:
    an even more diverse, welcoming community.\nHow a functional programming language
    like Elixir has impacted the way Todd works.\nThe personal impact the Elixir community
    has had for Todd by enabling new connections.\nFind out why Alex’s dog, Bean,
    loved the test kitchen at their previous workplace.\nEric and Alex share how the
    impact of Elixir has changed for them throughout this season.\nWhat all our children,
    human and animal, had for breakfast.\nLinks Mentioned in Today’s Episode:\nTodd
    Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek/\nTodd Resudek on
    Twitter — https://twitter.com/sprsmpl\nTodd Resudek on GitHub — https://github.com/supersimple\nTodd
    Resudek — https://supersimple.org/\nJackpocket — https://jackpocket.com/\nEMPEX
    Conference — https://www.empex.co/\nEMPEX MTN 2022 — https://www.empex.co/mtn\nAlex’s
    Favorite Dune Meme — https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96\n‘Brooklyn
    Zelenka and The Exciting World of Edge Computing’ — https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/\nToucan
    — https://www.toucan.events\nElixir Wizards |> Conference — https://smartlogic.io/about/community/elixir-wizards-conference/\nSmartLogic
    — https://smartlogic.io/ \nAudience Survey -- https://smr.tl/survey\n Special
    Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+fprfU1sv
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8ddde7c8-d4df-4b6b-88dd-7ac7796534c1.mp3
    length: '81969207'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: 'Welcome to the Season 7 finale! Today, we are joined by Todd Resudek,
      Staff Engineer at Jackpocket, to reflect on the past season and speak about
      the impact of Elixir, as well as a variety of other topics almost entirely unrelated
      to programming! '
    duration: '56:55'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8ddde7c8-d4df-4b6b-88dd-7ac7796534c1/cover.jpg?v=1
    summary: "\n        <p>Welcome to the Season 7 finale! Today, we are joined by
      Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and
      speak about the impact of Elixir, as well as a variety of other topics almost
      entirely unrelated to programming! Todd is a reformed graphic designer that
      got his start in web development 15 years ago. He has made a career in front-end
      development, PHP, Rails, and Elixir. He is also a member of the Hex core team
      and, in his spare time, he tinkers with hardware projects. In today’s episode
      of Elixir Wizards, you’ll learn more about the 2022 EMPEX Elixir Mountain event
      that Todd is co-organizing, the formula for anticipating how many people will
      turn up at your event, and what trains have to do with the history of timezones.
      We also touch on Todd’s hopes for the future of Elixir, how Elixir has impacted
      him, both personally and professionally, and why he recommends learning Elixir
      as a backup language, plus so much more! Tune in today for a fun discussion
      with Todd Resudek!<br>\n**<br>\nKey Points From This Episode:**</p>\n\n<ul>\n<li>The
      hilarious and sometimes tragic mispronunciation of our names.</li>\n<li>Learn
      more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing.</li>\n<li>Todd
      shares a bit about his background and his allegiance to Wisconsin football.</li>\n<li>We
      discuss the formula for how many people to expect at your meetup (or wedding).</li>\n<li>Some
      interesting history on timezones and how they relate to trains.</li>\n<li>Dune
      memes, roller skating, a qualifier for couple skates, and more.</li>\n<li>Todd
      shares his favorite Elixir Wizards episode from Season 7: Brooklyn Zelenka.</li>\n<li>How
      Todd learned Elixir when he first started working at Weedmaps.</li>\n<li>Why
      he suggests learning Elixir as a ‘backup language’ rather than a primary one.</li>\n<li>His
      biggest hope for the future of Elixir: an even more diverse, welcoming community.</li>\n<li>How
      a functional programming language like Elixir has impacted the way Todd works.</li>\n<li>The
      personal impact the Elixir community has had for Todd by enabling new connections.</li>\n<li>Find
      out why Alex’s dog, Bean, loved the test kitchen at their previous workplace.</li>\n<li>Eric
      and Alex share how the impact of Elixir has changed for them throughout this
      season.</li>\n<li>What all our children, human and animal, had for breakfast.</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek on LinkedIn —
      <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
      Resudek on GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nTodd
      Resudek — <a href=\"https://supersimple.org/\" rel=\"nofollow\">https://supersimple.org/</a><br>\nJackpocket
      — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nEMPEX
      Conference — <a href=\"https://www.empex.co/\" rel=\"nofollow\">https://www.empex.co/</a><br>\nEMPEX
      MTN 2022 — <a href=\"https://www.empex.co/mtn\" rel=\"nofollow\">https://www.empex.co/mtn</a><br>\nAlex’s
      Favorite Dune Meme — <a href=\"https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96\"
      rel=\"nofollow\">https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96</a><br>\n‘Brooklyn
      Zelenka and The Exciting World of Edge Computing’ — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/</a><br>\nToucan
      — <a href=\"https://www.toucan.events\" rel=\"nofollow\">https://www.toucan.events</a><br>\nElixir
      Wizards |&gt; Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
      rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAudience Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the Season 7 finale! Today, we are joined
    by Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and
    speak about the impact of Elixir, as well as a variety of other topics almost
    entirely unrelated to programming! Todd is a reformed graphic designer that got
    his start in web development 15 years ago. He has made a career in front-end development,
    PHP, Rails, and Elixir. He is also a member of the Hex core team and, in his spare
    time, he tinkers with hardware projects. In today’s episode of Elixir Wizards,
    you’ll learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing,
    the formula for anticipating how many people will turn up at your event, and what
    trains have to do with the history of timezones. We also touch on Todd’s hopes
    for the future of Elixir, how Elixir has impacted him, both personally and professionally,
    and why he recommends learning Elixir as a backup language, plus so much more!
    Tune in today for a fun discussion with Todd Resudek!<br>\n**<br>\nKey Points
    From This Episode:**</p>\n\n<ul>\n<li>The hilarious and sometimes tragic mispronunciation
    of our names.</li>\n<li>Learn more about the 2022 EMPEX Elixir Mountain event
    that Todd is co-organizing.</li>\n<li>Todd shares a bit about his background and
    his allegiance to Wisconsin football.</li>\n<li>We discuss the formula for how
    many people to expect at your meetup (or wedding).</li>\n<li>Some interesting
    history on timezones and how they relate to trains.</li>\n<li>Dune memes, roller
    skating, a qualifier for couple skates, and more.</li>\n<li>Todd shares his favorite
    Elixir Wizards episode from Season 7: Brooklyn Zelenka.</li>\n<li>How Todd learned
    Elixir when he first started working at Weedmaps.</li>\n<li>Why he suggests learning
    Elixir as a ‘backup language’ rather than a primary one.</li>\n<li>His biggest
    hope for the future of Elixir: an even more diverse, welcoming community.</li>\n<li>How
    a functional programming language like Elixir has impacted the way Todd works.</li>\n<li>The
    personal impact the Elixir community has had for Todd by enabling new connections.</li>\n<li>Find
    out why Alex’s dog, Bean, loved the test kitchen at their previous workplace.</li>\n<li>Eric
    and Alex share how the impact of Elixir has changed for them throughout this season.</li>\n<li>What
    all our children, human and animal, had for breakfast.</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek on LinkedIn — <a
    href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
    Resudek on GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nTodd
    Resudek — <a href=\"https://supersimple.org/\" rel=\"nofollow\">https://supersimple.org/</a><br>\nJackpocket
    — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nEMPEX
    Conference — <a href=\"https://www.empex.co/\" rel=\"nofollow\">https://www.empex.co/</a><br>\nEMPEX
    MTN 2022 — <a href=\"https://www.empex.co/mtn\" rel=\"nofollow\">https://www.empex.co/mtn</a><br>\nAlex’s
    Favorite Dune Meme — <a href=\"https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96\"
    rel=\"nofollow\">https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96</a><br>\n‘Brooklyn
    Zelenka and The Exciting World of Edge Computing’ — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/</a><br>\nToucan
    — <a href=\"https://www.toucan.events\" rel=\"nofollow\">https://www.toucan.events</a><br>\nElixir
    Wizards |&gt; Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
    rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nAudience Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: Arthi Radhakrishnan on the Value of Collaborative Learning for Software Engineers
  slug: s7e11-arthi
  link: https://smartlogic.io/podcast/elixir-wizards/s7e11-arthi
  guid: d64b67ed-770e-44c1-8032-b2666cc84d48
  pubDate: Thu, 27 Jan 2022 06:00:00 -0500
  pubDateFriendly: January 27, 2022
  description: "This week we welcome Arthi Radhakrishnan back to the show to discuss
    how Elixir and her career more broadly have shaped her perspectives on learning.
    Arthi first got into programming as a child growing up in the Bay Area, constantly
    exposed to tech and tech culture. She remembers building websites using GeoCities
    in high school and learning about data structures and OOP in Java while in college
    before transitioning to Elixir during her current position as a backend engineer
    at Community. We hear about what made her learning so enjoyable, the biggest paradigm
    shifts she needed to make, and she talks about the value of mentorship, pair programming,
    and working at a company that encourages learning on the job. In today’s show,
    we also explore a realization that Arthi has come to at the end of her first decade
    as a software engineer: that effective learning requires a big dose of self-compassion.
    So, for all this and more, be sure to tune in today!\nKey Points From This Episode:\nIntroducing
    Arthi and the work she does as a backend engineer for Community.\nWhat it was
    like growing up in the Bay Area and how Arthi got into programming.\nGoing from
    building websites with GeoCities in high school to building a compiler in college.\nThe
    big role that Java and OOP played in Arthi’s experience of programming fundamentals.\nArthi’s
    experience of learning Elixir and having to shift away from an OOP paradigm.\nWhere
    Arthi is in her journey of learning Elixir and why she enjoys it so much.\nHow
    compelling it is to learn on the job and the value of companies that allow for
    this.\nThe impact that company culture has on job experiences and career trajectories.\nSummer
    internships Arthi did in college and how they shaped her career goals.\nFinding
    time to do personal learning and why Advent of Code is so helpful.\nWhy setting
    low expectations for yourself is a helpful paradigm for learning.\nExercising
    self-compassion while learning and how Arthi’s learning approach has evolved.\nWhy
    Arthi is so grateful that she has gotten to learn Elixir at Community specifically.\nWhat
    good mentorship looks like to Arthi and why she loves pair programming.\nHow learning
    Elixir and the past 10 years have shaped Arthi’s sense of her needs.\nArthi’s
    thoughts on how Elixir will evolve in the next 10 years.\nLinks Mentioned in Today’s
    Episode:\nArthi Radhakrishnan — https://www.linkedin.com/in/arthiradhakrishnan/
    \nCommunity — https://www.community.com/\nAdvent of Code — https://adventofcode.com/\nSmartLogic
    — https://smartlogic.io/ \nAudience Survey -- https://smr.tl/survey\n Special
    Guest: Arthi Radhakrishnan.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+yaTHmiHK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d64b67ed-770e-44c1-8032-b2666cc84d48.mp3
    length: '65895213'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: 'This week we welcome Arthi Radhakrishnan back to the show to discuss
      how Elixir and her career more broadly have shaped her perspectives on learning.
      We hear about what made her learning Elixir so enjoyable, the biggest paradigm
      shifts she needed to make, and she talks about the value of mentorship, pair
      programming, and working at a company that encourages learning on the job. '
    duration: '45:33'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d64b67ed-770e-44c1-8032-b2666cc84d48/cover.jpg?v=1
    summary: "\n        <p>This week we welcome Arthi Radhakrishnan back to the show
      to discuss how Elixir and her career more broadly have shaped her perspectives
      on learning. Arthi first got into programming as a child growing up in the Bay
      Area, constantly exposed to tech and tech culture. She remembers building websites
      using GeoCities in high school and learning about data structures and OOP in
      Java while in college before transitioning to Elixir during her current position
      as a backend engineer at Community. We hear about what made her learning so
      enjoyable, the biggest paradigm shifts she needed to make, and she talks about
      the value of mentorship, pair programming, and working at a company that encourages
      learning on the job. In today’s show, we also explore a realization that Arthi
      has come to at the end of her first decade as a software engineer: that effective
      learning requires a big dose of self-compassion. So, for all this and more,
      be sure to tune in today!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Introducing
      Arthi and the work she does as a backend engineer for Community.</li>\n<li>What
      it was like growing up in the Bay Area and how Arthi got into programming.</li>\n<li>Going
      from building websites with GeoCities in high school to building a compiler
      in college.</li>\n<li>The big role that Java and OOP played in Arthi’s experience
      of programming fundamentals.</li>\n<li>Arthi’s experience of learning Elixir
      and having to shift away from an OOP paradigm.</li>\n<li>Where Arthi is in her
      journey of learning Elixir and why she enjoys it so much.</li>\n<li>How compelling
      it is to learn on the job and the value of companies that allow for this.</li>\n<li>The
      impact that company culture has on job experiences and career trajectories.</li>\n<li>Summer
      internships Arthi did in college and how they shaped her career goals.</li>\n<li>Finding
      time to do personal learning and why Advent of Code is so helpful.</li>\n<li>Why
      setting low expectations for yourself is a helpful paradigm for learning.</li>\n<li>Exercising
      self-compassion while learning and how Arthi’s learning approach has evolved.</li>\n<li>Why
      Arthi is so grateful that she has gotten to learn Elixir at Community specifically.</li>\n<li>What
      good mentorship looks like to Arthi and why she loves pair programming.</li>\n<li>How
      learning Elixir and the past 10 years have shaped Arthi’s sense of her needs.</li>\n<li>Arthi’s
      thoughts on how Elixir will evolve in the next 10 years.</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Arthi Radhakrishnan — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
      rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a> <br>\nCommunity
      — <a href=\"https://www.community.com/\" rel=\"nofollow\">https://www.community.com/</a><br>\nAdvent
      of Code — <a href=\"https://adventofcode.com/\" rel=\"nofollow\">https://adventofcode.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAudience Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
      Guest: Arthi Radhakrishnan.</p>\n      "
  contentEncoded: "\n        <p>This week we welcome Arthi Radhakrishnan back to the
    show to discuss how Elixir and her career more broadly have shaped her perspectives
    on learning. Arthi first got into programming as a child growing up in the Bay
    Area, constantly exposed to tech and tech culture. She remembers building websites
    using GeoCities in high school and learning about data structures and OOP in Java
    while in college before transitioning to Elixir during her current position as
    a backend engineer at Community. We hear about what made her learning so enjoyable,
    the biggest paradigm shifts she needed to make, and she talks about the value
    of mentorship, pair programming, and working at a company that encourages learning
    on the job. In today’s show, we also explore a realization that Arthi has come
    to at the end of her first decade as a software engineer: that effective learning
    requires a big dose of self-compassion. So, for all this and more, be sure to
    tune in today!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Introducing
    Arthi and the work she does as a backend engineer for Community.</li>\n<li>What
    it was like growing up in the Bay Area and how Arthi got into programming.</li>\n<li>Going
    from building websites with GeoCities in high school to building a compiler in
    college.</li>\n<li>The big role that Java and OOP played in Arthi’s experience
    of programming fundamentals.</li>\n<li>Arthi’s experience of learning Elixir and
    having to shift away from an OOP paradigm.</li>\n<li>Where Arthi is in her journey
    of learning Elixir and why she enjoys it so much.</li>\n<li>How compelling it
    is to learn on the job and the value of companies that allow for this.</li>\n<li>The
    impact that company culture has on job experiences and career trajectories.</li>\n<li>Summer
    internships Arthi did in college and how they shaped her career goals.</li>\n<li>Finding
    time to do personal learning and why Advent of Code is so helpful.</li>\n<li>Why
    setting low expectations for yourself is a helpful paradigm for learning.</li>\n<li>Exercising
    self-compassion while learning and how Arthi’s learning approach has evolved.</li>\n<li>Why
    Arthi is so grateful that she has gotten to learn Elixir at Community specifically.</li>\n<li>What
    good mentorship looks like to Arthi and why she loves pair programming.</li>\n<li>How
    learning Elixir and the past 10 years have shaped Arthi’s sense of her needs.</li>\n<li>Arthi’s
    thoughts on how Elixir will evolve in the next 10 years.</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Arthi Radhakrishnan — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
    rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a> <br>\nCommunity
    — <a href=\"https://www.community.com/\" rel=\"nofollow\">https://www.community.com/</a><br>\nAdvent
    of Code — <a href=\"https://adventofcode.com/\" rel=\"nofollow\">https://adventofcode.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nAudience Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
    Guest: Arthi Radhakrishnan.</p>\n      "
- title: Meryl Dakin on Changing Lanes and Switching Gears With Elixir
  slug: s7e10-dakin
  link: https://smartlogic.io/podcast/elixir-wizards/s7e10-dakin
  guid: a9b73218-2d0c-4a6f-9bba-93d5c355db7a
  pubDate: Thu, 20 Jan 2022 06:00:00 -0500
  pubDateFriendly: January 20, 2022
  description: "Today we welcome software engineer Meryl Dakin to the show, who is
    currently employed by Knock. Meryl is here to help us continue our exploration
    of this season's theme of the impact of Elixir, and we get to hear about all how
    it has impacted her professional and personal life! Our guest talks about her
    journey through the world of development and the different positions she has held
    before her current role. We also get into her recent stint as the emcee of ElixirConf
    alongside our other friend Sophie DeBenedetto! We talk about learning through
    teaching, encouraging more questions, and why Elixir has had such a positive impact
    on Meryl's approach to code more generally. Big takeaways from today's conversation
    include the way that learning a new language can alter one's career in multiple
    and unexpected ways, why the Elixir community can feel so safe and supportive,
    and who might get the most benefit from being exposed to Elixir at the right time.
    So, to hear it all from Meryl and our usual cast of characters, be sure to listen
    in!\nKey Points From This Episode:\nA quick update on Meryl and what she has been
    busy with lately. \nMeryl's experiences emceeing the recent ElixirConf! \nUnpacking
    what Knock does and who the company serves.  \nHow Elixir has been used at Knock
    and the great experience Meryl has had building with it. \nMeryl's learning curve
    with Elixir and the biggest developments in the space from her perspective. \nThe
    most common advice that Meryl would offer to junior engineers!\nWhy teaching is
    often the best route to further learning; Meryl's reflections on her presentations.\nThe
    importance of asking questions and speaking up when you do not understand.\nHow
    Elixir shifted Meryl's way of thinking about programming: cleaner code and encapsulation.
    \nThe different kinds of developers that might benefit from being introduced to
    Elixir.  \nThoughts on making Elixir more visible to the right people in the larger
    community.  \nThe personal impacts that Elixir has had on Meryl's life: meeting
    great people and finding an engaging and supportive community.  \nWhen to consider
    using Knock and the initial offer for new clients.  \nWhere to go to find out
    more about Knock and whether it might be right for you!\nMeryl shares her biggest
    hopes and dreams for the future of the Elixir community. \nLinks Mentioned in
    Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nMeryl Dakin on Twitter
    — https://twitter.com/meryldakin\nElixirConf — https://www.elixirconf.com/\nNetflix
    Christmas Universe — https://collider.com/netflix-christmas-universe-how-movies-connect-explained/\nFlatiron
    School — https://flatironschool.com/\nFrame.io — https://www.frame.io/\nKnock
    — https://knock.app/\nKnock on Twitter — https://twitter.com/knockdotcom\nKnock
    Changelog — https://knock.app/changelog\nSophie DeBenedetto — https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto\nThe
    Flutter Apprentice Book  — https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2
    \nEMPEX  — https://www.empex.co/mtn\nProgramming Phoenix LiveView — https://pragprog.com/titles/liveview/programming-phoenix-liveview/\nTwilio
    — https://www.twilio.com/\nAudience Survey -- https://smr.tl/survey Special Guest:
    Meryl Dakin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+u8IEmOHi
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a9b73218-2d0c-4a6f-9bba-93d5c355db7a.mp3
    length: '73947213'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: 'Today we welcome software engineer Meryl Dakin to the show, who is
      currently employed by Knock. Meryl is here to help us continue our exploration
      of this season''s theme of the impact of Elixir, and we get to hear about all
      how it has impacted her professional and personal life! '
    duration: '51:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a9b73218-2d0c-4a6f-9bba-93d5c355db7a/cover.jpg?v=1
    summary: "\n        <p>Today we welcome software engineer Meryl Dakin to the show,
      who is currently employed by Knock. Meryl is here to help us continue our exploration
      of this season&#39;s theme of the impact of Elixir, and we get to hear about
      all how it has impacted her professional and personal life! Our guest talks
      about her journey through the world of development and the different positions
      she has held before her current role. We also get into her recent stint as the
      emcee of ElixirConf alongside our other friend Sophie DeBenedetto! We talk about
      learning through teaching, encouraging more questions, and why Elixir has had
      such a positive impact on Meryl&#39;s approach to code more generally. Big takeaways
      from today&#39;s conversation include the way that learning a new language can
      alter one&#39;s career in multiple and unexpected ways, why the Elixir community
      can feel so safe and supportive, and who might get the most benefit from being
      exposed to Elixir at the right time. So, to hear it all from Meryl and our usual
      cast of characters, be sure to listen in!</p>\n\n<p><strong>Key Points From
      This Episode:</strong></p>\n\n<ul>\n<li>A quick update on Meryl and what she
      has been busy with lately. </li>\n<li>Meryl&#39;s experiences emceeing the recent
      ElixirConf! </li>\n<li>Unpacking what Knock does and who the company serves.<br></li>\n<li>How
      Elixir has been used at Knock and the great experience Meryl has had building
      with it. </li>\n<li>Meryl&#39;s learning curve with Elixir and the biggest developments
      in the space from her perspective. </li>\n<li>The most common advice that Meryl
      would offer to junior engineers!</li>\n<li>Why teaching is often the best route
      to further learning; Meryl&#39;s reflections on her presentations.</li>\n<li>The
      importance of asking questions and speaking up when you do not understand.</li>\n<li>How
      Elixir shifted Meryl&#39;s way of thinking about programming: cleaner code and
      encapsulation. </li>\n<li>The different kinds of developers that might benefit
      from being introduced to Elixir.<br></li>\n<li>Thoughts on making Elixir more
      visible to the right people in the larger community.<br></li>\n<li>The personal
      impacts that Elixir has had on Meryl&#39;s life: meeting great people and finding
      an engaging and supportive community.<br></li>\n<li>When to consider using Knock
      and the initial offer for new clients.<br></li>\n<li>Where to go to find out
      more about Knock and whether it might be right for you!</li>\n<li>Meryl shares
      her biggest hopes and dreams for the future of the Elixir community. </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMeryl Dakin on Twitter — <a
      href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nElixirConf
      — <a href=\"https://www.elixirconf.com/\" rel=\"nofollow\">https://www.elixirconf.com/</a><br>\nNetflix
      Christmas Universe — <a href=\"https://collider.com/netflix-christmas-universe-how-movies-connect-explained/\"
      rel=\"nofollow\">https://collider.com/netflix-christmas-universe-how-movies-connect-explained/</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nFrame.io
      — <a href=\"https://www.frame.io/\" rel=\"nofollow\">https://www.frame.io/</a><br>\nKnock
      — <a href=\"https://knock.app/\" rel=\"nofollow\">https://knock.app/</a><br>\nKnock
      on Twitter — <a href=\"https://twitter.com/knockdotcom\" rel=\"nofollow\">https://twitter.com/knockdotcom</a><br>\nKnock
      Changelog — <a href=\"https://knock.app/changelog\" rel=\"nofollow\">https://knock.app/changelog</a><br>\nSophie
      DeBenedetto — <a href=\"https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto\"
      rel=\"nofollow\">https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto</a><br>\nThe
      Flutter Apprentice Book  — <a href=\"https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2\"
      rel=\"nofollow\">https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2</a>
      <br>\nEMPEX  — <a href=\"https://www.empex.co/mtn\" rel=\"nofollow\">https://www.empex.co/mtn</a><br>\nProgramming
      Phoenix LiveView — <a href=\"https://pragprog.com/titles/liveview/programming-phoenix-liveview/\"
      rel=\"nofollow\">https://pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nTwilio
      — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nAudience
      Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
      Guest: Meryl Dakin.</p>\n      "
  contentEncoded: "\n        <p>Today we welcome software engineer Meryl Dakin to
    the show, who is currently employed by Knock. Meryl is here to help us continue
    our exploration of this season&#39;s theme of the impact of Elixir, and we get
    to hear about all how it has impacted her professional and personal life! Our
    guest talks about her journey through the world of development and the different
    positions she has held before her current role. We also get into her recent stint
    as the emcee of ElixirConf alongside our other friend Sophie DeBenedetto! We talk
    about learning through teaching, encouraging more questions, and why Elixir has
    had such a positive impact on Meryl&#39;s approach to code more generally. Big
    takeaways from today&#39;s conversation include the way that learning a new language
    can alter one&#39;s career in multiple and unexpected ways, why the Elixir community
    can feel so safe and supportive, and who might get the most benefit from being
    exposed to Elixir at the right time. So, to hear it all from Meryl and our usual
    cast of characters, be sure to listen in!</p>\n\n<p><strong>Key Points From This
    Episode:</strong></p>\n\n<ul>\n<li>A quick update on Meryl and what she has been
    busy with lately. </li>\n<li>Meryl&#39;s experiences emceeing the recent ElixirConf!
    </li>\n<li>Unpacking what Knock does and who the company serves.<br></li>\n<li>How
    Elixir has been used at Knock and the great experience Meryl has had building
    with it. </li>\n<li>Meryl&#39;s learning curve with Elixir and the biggest developments
    in the space from her perspective. </li>\n<li>The most common advice that Meryl
    would offer to junior engineers!</li>\n<li>Why teaching is often the best route
    to further learning; Meryl&#39;s reflections on her presentations.</li>\n<li>The
    importance of asking questions and speaking up when you do not understand.</li>\n<li>How
    Elixir shifted Meryl&#39;s way of thinking about programming: cleaner code and
    encapsulation. </li>\n<li>The different kinds of developers that might benefit
    from being introduced to Elixir.<br></li>\n<li>Thoughts on making Elixir more
    visible to the right people in the larger community.<br></li>\n<li>The personal
    impacts that Elixir has had on Meryl&#39;s life: meeting great people and finding
    an engaging and supportive community.<br></li>\n<li>When to consider using Knock
    and the initial offer for new clients.<br></li>\n<li>Where to go to find out more
    about Knock and whether it might be right for you!</li>\n<li>Meryl shares her
    biggest hopes and dreams for the future of the Elixir community. </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMeryl Dakin on Twitter — <a
    href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nElixirConf
    — <a href=\"https://www.elixirconf.com/\" rel=\"nofollow\">https://www.elixirconf.com/</a><br>\nNetflix
    Christmas Universe — <a href=\"https://collider.com/netflix-christmas-universe-how-movies-connect-explained/\"
    rel=\"nofollow\">https://collider.com/netflix-christmas-universe-how-movies-connect-explained/</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nFrame.io
    — <a href=\"https://www.frame.io/\" rel=\"nofollow\">https://www.frame.io/</a><br>\nKnock
    — <a href=\"https://knock.app/\" rel=\"nofollow\">https://knock.app/</a><br>\nKnock
    on Twitter — <a href=\"https://twitter.com/knockdotcom\" rel=\"nofollow\">https://twitter.com/knockdotcom</a><br>\nKnock
    Changelog — <a href=\"https://knock.app/changelog\" rel=\"nofollow\">https://knock.app/changelog</a><br>\nSophie
    DeBenedetto — <a href=\"https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto\"
    rel=\"nofollow\">https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto</a><br>\nThe
    Flutter Apprentice Book  — <a href=\"https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2\"
    rel=\"nofollow\">https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2</a>
    <br>\nEMPEX  — <a href=\"https://www.empex.co/mtn\" rel=\"nofollow\">https://www.empex.co/mtn</a><br>\nProgramming
    Phoenix LiveView — <a href=\"https://pragprog.com/titles/liveview/programming-phoenix-liveview/\"
    rel=\"nofollow\">https://pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nTwilio
    — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nAudience
    Survey -- <a href=\"https://smr.tl/survey\" rel=\"nofollow\">https://smr.tl/survey</a></p><p>Special
    Guest: Meryl Dakin.</p>\n      "
- title: 'Brooklyn Zelenka and The Exciting World of Edge Computing '
  slug: s7e9-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka
  guid: 66261581-0dd2-4380-8280-495736a41540
  pubDate: Thu, 13 Jan 2022 06:00:00 -0500
  pubDateFriendly: January 13, 2022
  description: "We are very excited to welcome Brooklyn Zelenka back to the podcast
    to talk about her work at Fission and the ever-expanding frontier of edge computing!
    Brooklyn is a co-founder and CTO at Fission and she gives us some insight into
    the focus of the company's applied research. We hear from our guest about the
    projects she has been most excited about recently and she even talks about her
    newfound passion for fermentation! She does a great job of explaining why edge
    computing is potentially so revolutionary and some of the hurdles that are yet
    to be overcome on the way to reaching this potential. We discuss security and
    trust, tech equity, broad adoption, and much more before getting into some more
    Elixir-focused questions. Our guest shares how Elixir and functional programming
    have inspired her in different ways, as well as her perspective on some of the
    weaknesses of Elixir. At the end of our chat, Brooklyn gives some great resource
    recommendations for anyone wanting to learn more about edge computing, so make
    sure to stay tuned for that!\nKey Points From This Episode:\nWhat Brooklyn has
    been keeping busy with recently. \nA little about Fission and what their research
    focuses on.\nTech and societal trends through the pandemic and Brooklyn's new
    interest in fermentation.\nBrooklyn unpacks the main mission of edge computing
    and some of the biggest challenges. \nDecisions around what is localized and what
    is stored remotely in edge computing. \nAddressing the issue of trust and safeguarding
    against data breaches. \nThe influence of functional programming in Brooklyn's
    work on edge applications.  \nSome information on Brooklyn's talk at ElixirConf
    this year titled 'The Jump to Hyperspace.' \nOur guest explains the concept of
    antientropy and its associated techniques. \nThoughts on the problem of tech equity
    and how this might be tackled. \nGaining popular trust for new technologies and
    their inevitable faults.\nBrooklyn's feelings about Haskell, and the inspiration
    she takes from it into her work with Elixir. \nThe impact that Elixir has on Brooklyn's
    work in a broader sense.\nThe route that Brooklyn took into the functional programming
    world. \nBrooklyn weighs in on the questions of Elixir's downsides. \nResources
    recommendations for anyone looking to get more acquainted with work in edge computing.
    \ \nWhere to find and connect with Brooklyn online!   \nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nBrooklyn Zelenka — https://twitter.com/expede?lang=en\nFission
    — https://fission.codes/\nBrooklyn Zelenka at ElixirConf 2021— https://www.youtube.com/watch?v=ogOEEKWxevo\nDesigning
    Data-Intensive Applications — https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB\nBrooklyn's
    Tepache Fermentation Recipe — https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf\nWitchcraft
    Suite of Libraries in Haskell/Elixir — https://hexdocs.pm/witchcraft/readme.html\nProto
    School — https://proto.school/\nFission Discord — https://discord.gg/zAQBDEq\nFission
    Discourse — https://talk.fission.codes/\nFission on Luma — https://lu.ma/community/com-XuESjPQQHjh43pc\nFissionCodes
    Twitter — https://twitter.com/FISSIONcodes\nWitchcraft Suite — https://github.com/witchcrafters\n
    Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+AJse6oBb
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/66261581-0dd2-4380-8280-495736a41540.mp3
    length: '67290128'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: We are very excited to welcome Brooklyn Zelenka back to the podcast
      to talk about her work at Fission and the ever-expanding frontier of edge computing!
    duration: '46:05'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/66261581-0dd2-4380-8280-495736a41540/cover.jpg?v=2
    summary: "\n        <p>We are very excited to welcome Brooklyn Zelenka back to
      the podcast to talk about her work at Fission and the ever-expanding frontier
      of edge computing! Brooklyn is a co-founder and CTO at Fission and she gives
      us some insight into the focus of the company&#39;s applied research. We hear
      from our guest about the projects she has been most excited about recently and
      she even talks about her newfound passion for fermentation! She does a great
      job of explaining why edge computing is potentially so revolutionary and some
      of the hurdles that are yet to be overcome on the way to reaching this potential.
      We discuss security and trust, tech equity, broad adoption, and much more before
      getting into some more Elixir-focused questions. Our guest shares how Elixir
      and functional programming have inspired her in different ways, as well as her
      perspective on some of the weaknesses of Elixir. At the end of our chat, Brooklyn
      gives some great resource recommendations for anyone wanting to learn more about
      edge computing, so make sure to stay tuned for that!</p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>What Brooklyn has been keeping
      busy with recently. </li>\n<li>A little about Fission and what their research
      focuses on.</li>\n<li>Tech and societal trends through the pandemic and Brooklyn&#39;s
      new interest in fermentation.</li>\n<li>Brooklyn unpacks the main mission of
      edge computing and some of the biggest challenges. </li>\n<li>Decisions around
      what is localized and what is stored remotely in edge computing. </li>\n<li>Addressing
      the issue of trust and safeguarding against data breaches. </li>\n<li>The influence
      of functional programming in Brooklyn&#39;s work on edge applications.<br></li>\n<li>Some
      information on Brooklyn&#39;s talk at ElixirConf this year titled &#39;The Jump
      to Hyperspace.&#39; </li>\n<li>Our guest explains the concept of antientropy
      and its associated techniques. </li>\n<li>Thoughts on the problem of tech equity
      and how this might be tackled. </li>\n<li>Gaining popular trust for new technologies
      and their inevitable faults.</li>\n<li>Brooklyn&#39;s feelings about Haskell,
      and the inspiration she takes from it into her work with Elixir. </li>\n<li>The
      impact that Elixir has on Brooklyn&#39;s work in a broader sense.</li>\n<li>The
      route that Brooklyn took into the functional programming world. </li>\n<li>Brooklyn
      weighs in on the questions of Elixir&#39;s downsides. </li>\n<li>Resources recommendations
      for anyone looking to get more acquainted with work in edge computing.<br></li>\n<li>Where
      to find and connect with Brooklyn online!<br></li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBrooklyn Zelenka — <a href=\"https://twitter.com/expede?lang=en\"
      rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nFission — <a href=\"https://fission.codes/\"
      rel=\"nofollow\">https://fission.codes/</a><br>\nBrooklyn Zelenka at ElixirConf
      2021— <a href=\"https://www.youtube.com/watch?v=ogOEEKWxevo\" rel=\"nofollow\">https://www.youtube.com/watch?v=ogOEEKWxevo</a><br>\nDesigning
      Data-Intensive Applications — <a href=\"https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB\"
      rel=\"nofollow\">https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB</a><br>\nBrooklyn&#39;s
      Tepache Fermentation Recipe — <a href=\"https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf\"
      rel=\"nofollow\">https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf</a><br>\nWitchcraft
      Suite of Libraries in Haskell/Elixir — <a href=\"https://hexdocs.pm/witchcraft/readme.html\"
      rel=\"nofollow\">https://hexdocs.pm/witchcraft/readme.html</a><br>\nProto School
      — <a href=\"https://proto.school/\" rel=\"nofollow\">https://proto.school/</a><br>\nFission
      Discord — <a href=\"https://discord.gg/zAQBDEq\" rel=\"nofollow\">https://discord.gg/zAQBDEq</a><br>\nFission
      Discourse — <a href=\"https://talk.fission.codes/\" rel=\"nofollow\">https://talk.fission.codes/</a><br>\nFission
      on Luma — <a href=\"https://lu.ma/community/com-XuESjPQQHjh43pc\" rel=\"nofollow\">https://lu.ma/community/com-XuESjPQQHjh43pc</a><br>\nFissionCodes
      Twitter — <a href=\"https://twitter.com/FISSIONcodes\" rel=\"nofollow\">https://twitter.com/FISSIONcodes</a><br>\nWitchcraft
      Suite — <a href=\"https://github.com/witchcrafters\" rel=\"nofollow\">https://github.com/witchcrafters</a></p><p>Special
      Guest: Brooklyn Zelenka.</p>\n      "
  contentEncoded: "\n        <p>We are very excited to welcome Brooklyn Zelenka back
    to the podcast to talk about her work at Fission and the ever-expanding frontier
    of edge computing! Brooklyn is a co-founder and CTO at Fission and she gives us
    some insight into the focus of the company&#39;s applied research. We hear from
    our guest about the projects she has been most excited about recently and she
    even talks about her newfound passion for fermentation! She does a great job of
    explaining why edge computing is potentially so revolutionary and some of the
    hurdles that are yet to be overcome on the way to reaching this potential. We
    discuss security and trust, tech equity, broad adoption, and much more before
    getting into some more Elixir-focused questions. Our guest shares how Elixir and
    functional programming have inspired her in different ways, as well as her perspective
    on some of the weaknesses of Elixir. At the end of our chat, Brooklyn gives some
    great resource recommendations for anyone wanting to learn more about edge computing,
    so make sure to stay tuned for that!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>What
    Brooklyn has been keeping busy with recently. </li>\n<li>A little about Fission
    and what their research focuses on.</li>\n<li>Tech and societal trends through
    the pandemic and Brooklyn&#39;s new interest in fermentation.</li>\n<li>Brooklyn
    unpacks the main mission of edge computing and some of the biggest challenges.
    </li>\n<li>Decisions around what is localized and what is stored remotely in edge
    computing. </li>\n<li>Addressing the issue of trust and safeguarding against data
    breaches. </li>\n<li>The influence of functional programming in Brooklyn&#39;s
    work on edge applications.<br></li>\n<li>Some information on Brooklyn&#39;s talk
    at ElixirConf this year titled &#39;The Jump to Hyperspace.&#39; </li>\n<li>Our
    guest explains the concept of antientropy and its associated techniques. </li>\n<li>Thoughts
    on the problem of tech equity and how this might be tackled. </li>\n<li>Gaining
    popular trust for new technologies and their inevitable faults.</li>\n<li>Brooklyn&#39;s
    feelings about Haskell, and the inspiration she takes from it into her work with
    Elixir. </li>\n<li>The impact that Elixir has on Brooklyn&#39;s work in a broader
    sense.</li>\n<li>The route that Brooklyn took into the functional programming
    world. </li>\n<li>Brooklyn weighs in on the questions of Elixir&#39;s downsides.
    </li>\n<li>Resources recommendations for anyone looking to get more acquainted
    with work in edge computing.<br></li>\n<li>Where to find and connect with Brooklyn
    online!<br></li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nBrooklyn Zelenka — <a href=\"https://twitter.com/expede?lang=en\" rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nFission
    — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nBrooklyn
    Zelenka at ElixirConf 2021— <a href=\"https://www.youtube.com/watch?v=ogOEEKWxevo\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ogOEEKWxevo</a><br>\nDesigning
    Data-Intensive Applications — <a href=\"https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB\"
    rel=\"nofollow\">https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB</a><br>\nBrooklyn&#39;s
    Tepache Fermentation Recipe — <a href=\"https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf\"
    rel=\"nofollow\">https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf</a><br>\nWitchcraft
    Suite of Libraries in Haskell/Elixir — <a href=\"https://hexdocs.pm/witchcraft/readme.html\"
    rel=\"nofollow\">https://hexdocs.pm/witchcraft/readme.html</a><br>\nProto School
    — <a href=\"https://proto.school/\" rel=\"nofollow\">https://proto.school/</a><br>\nFission
    Discord — <a href=\"https://discord.gg/zAQBDEq\" rel=\"nofollow\">https://discord.gg/zAQBDEq</a><br>\nFission
    Discourse — <a href=\"https://talk.fission.codes/\" rel=\"nofollow\">https://talk.fission.codes/</a><br>\nFission
    on Luma — <a href=\"https://lu.ma/community/com-XuESjPQQHjh43pc\" rel=\"nofollow\">https://lu.ma/community/com-XuESjPQQHjh43pc</a><br>\nFissionCodes
    Twitter — <a href=\"https://twitter.com/FISSIONcodes\" rel=\"nofollow\">https://twitter.com/FISSIONcodes</a><br>\nWitchcraft
    Suite — <a href=\"https://github.com/witchcrafters\" rel=\"nofollow\">https://github.com/witchcrafters</a></p><p>Special
    Guest: Brooklyn Zelenka.</p>\n      "
- title: Sigu Magwa on the Elixir Community in Kenya
  slug: s7e8-magwa
  link: https://smartlogic.io/podcast/elixir-wizards/s7e8-magwa
  guid: bb8d89d6-4176-4414-b0fe-8e569cff9408
  pubDate: Thu, 06 Jan 2022 06:00:00 -0500
  pubDateFriendly: January  6, 2022
  description: "We are always excited to have conversations about the growth of the
    Elixir community, and today we go truly global, welcoming Sigu Magwa to the podcast,
    who hails from Kenya! Sigu is currently traveling in the US and he fills us in
    on some of the highs and lows of his trip and why he is so excited to get home
    to his friends and family. From there, we get into some interesting information
    about Elixir Kenya and the growth of the meetup over the last couple of years.
    Sigu shares some insight into IoT in his country and what the general tech space
    is like right now over there, before opening up about his journey into programming
    and how he found his way into working with Elixir. We also get to talk about his
    company, Podii, and their first few years working with clients. Apart from all
    the tech talk, Sigu is kind enough to shed some light on Kenya's matatu buses,
    and what makes them so unique, a subject that was particularly captivating to
    our panel! Listeners can also expect to hear about the recent ElixirConf Africa,
    Sigu's thoughts on hiring young talent, and what he hopes to see in the next decade
    within the community. So to catch it all, be sure to listen in with us on Elixir
    Wizards!\nKey Points From This Episode:\nSigu's trip to the US and the sights
    he has been seeing in different cities. \nSome information from Sigu about the
    Elixir Kenya meetup and the community there. \nSigu's experiences with IoT technology
    in Kenya and its adoption.  \nThe elevator pitch for Sigu's company, Podii, and
    its roots in training.  \nPodii's current operation and company size and some
    of the projects they have worked on thus far. \nThe coding language trends in
    Kenya; Sigu weighs in on what he has noticed.  \nSigu's history in the programming
    space and how he made his way into the world of tech.  \nHow 'matatu' buses operate
    in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!  \nThe ElixirConf
    Africa that was hosted this year and Sigu's experience of being involved. \nSigu's
    hopes for the Elixir community for the next ten years! \nApproaches for identifying
    talented young Elixir developers. \nHow and where to connect with Sigu online
    and final remarks from our guest. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nSigu Magwa on LinkedIn — https://www.linkedin.com/in/sigu/?originalSubdomain=ke\nSigu
    Magwa on Twitter — https://twitter.com/s_igu\nPodii — https://podiihq.com/\nNerves
    — https://www.nerves-project.org/platform.html\nElixirConf Africa — https://elixirconf.africa/\nQuadBlockQuiz
    — http://quadblockquiz.org:4000/\nMatatu Bus — https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures\nHire
    Junior Engineers — https://smartlogic.io/blog/hire-junior-engineers/\nTeach Yourself
    Computer Science — https://teachyourselfcs.com/\nStructure and Interpretation
    of Computer Programs — https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871\nElixir
    Wizards Discord — https://discord.com/invite/JGcqSaYf2a Special Guest: Sigu Magwa.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+q_eOn4iq
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bb8d89d6-4176-4414-b0fe-8e569cff9408.mp3
    length: '73038376'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: In this episode we are joined by Podii creator and founder of Elixir
      Kenya Sigu Magwa about the African tech space, matatu buses, and his hopes for
      the future of the community.
    duration: '50:42'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bb8d89d6-4176-4414-b0fe-8e569cff9408/cover.jpg?v=1
    summary: "\n        <p>We are always excited to have conversations about the growth
      of the Elixir community, and today we go truly global, welcoming Sigu Magwa
      to the podcast, who hails from Kenya! Sigu is currently traveling in the US
      and he fills us in on some of the highs and lows of his trip and why he is so
      excited to get home to his friends and family. From there, we get into some
      interesting information about Elixir Kenya and the growth of the meetup over
      the last couple of years. Sigu shares some insight into IoT in his country and
      what the general tech space is like right now over there, before opening up
      about his journey into programming and how he found his way into working with
      Elixir. We also get to talk about his company, Podii, and their first few years
      working with clients. Apart from all the tech talk, Sigu is kind enough to shed
      some light on Kenya&#39;s matatu buses, and what makes them so unique, a subject
      that was particularly captivating to our panel! Listeners can also expect to
      hear about the recent ElixirConf Africa, Sigu&#39;s thoughts on hiring young
      talent, and what he hopes to see in the next decade within the community. So
      to catch it all, be sure to listen in with us on Elixir Wizards!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Sigu&#39;s trip to the US
      and the sights he has been seeing in different cities. </li>\n<li>Some information
      from Sigu about the Elixir Kenya meetup and the community there. </li>\n<li>Sigu&#39;s
      experiences with IoT technology in Kenya and its adoption.<br></li>\n<li>The
      elevator pitch for Sigu&#39;s company, Podii, and its roots in training.<br></li>\n<li>Podii&#39;s
      current operation and company size and some of the projects they have worked
      on thus far. </li>\n<li>The coding language trends in Kenya; Sigu weighs in
      on what he has noticed.<br></li>\n<li>Sigu&#39;s history in the programming
      space and how he made his way into the world of tech.<br></li>\n<li>How &#39;matatu&#39;
      buses operate in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!<br></li>\n<li>The
      ElixirConf Africa that was hosted this year and Sigu&#39;s experience of being
      involved. </li>\n<li>Sigu&#39;s hopes for the Elixir community for the next
      ten years! </li>\n<li>Approaches for identifying talented young Elixir developers.
      </li>\n<li>How and where to connect with Sigu online and final remarks from
      our guest. </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSigu Magwa on LinkedIn — <a href=\"https://www.linkedin.com/in/sigu/?originalSubdomain=ke\"
      rel=\"nofollow\">https://www.linkedin.com/in/sigu/?originalSubdomain=ke</a><br>\nSigu
      Magwa on Twitter — <a href=\"https://twitter.com/s_igu\" rel=\"nofollow\">https://twitter.com/s_igu</a><br>\nPodii
      — <a href=\"https://podiihq.com/\" rel=\"nofollow\">https://podiihq.com/</a><br>\nNerves
      — <a href=\"https://www.nerves-project.org/platform.html\" rel=\"nofollow\">https://www.nerves-project.org/platform.html</a><br>\nElixirConf
      Africa — <a href=\"https://elixirconf.africa/\" rel=\"nofollow\">https://elixirconf.africa/</a><br>\nQuadBlockQuiz
      — <a href=\"http://quadblockquiz.org:4000/\" rel=\"nofollow\">http://quadblockquiz.org:4000/</a><br>\nMatatu
      Bus — <a href=\"https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures\"
      rel=\"nofollow\">https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures</a><br>\nHire
      Junior Engineers — <a href=\"https://smartlogic.io/blog/hire-junior-engineers/\"
      rel=\"nofollow\">https://smartlogic.io/blog/hire-junior-engineers/</a><br>\nTeach
      Yourself Computer Science — <a href=\"https://teachyourselfcs.com/\" rel=\"nofollow\">https://teachyourselfcs.com/</a><br>\nStructure
      and Interpretation of Computer Programs — <a href=\"https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871\"
      rel=\"nofollow\">https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871</a><br>\nElixir
      Wizards Discord — <a href=\"https://discord.com/invite/JGcqSaYf2a\" rel=\"nofollow\">https://discord.com/invite/JGcqSaYf2a</a></p><p>Special
      Guest: Sigu Magwa.</p>\n      "
  contentEncoded: "\n        <p>We are always excited to have conversations about
    the growth of the Elixir community, and today we go truly global, welcoming Sigu
    Magwa to the podcast, who hails from Kenya! Sigu is currently traveling in the
    US and he fills us in on some of the highs and lows of his trip and why he is
    so excited to get home to his friends and family. From there, we get into some
    interesting information about Elixir Kenya and the growth of the meetup over the
    last couple of years. Sigu shares some insight into IoT in his country and what
    the general tech space is like right now over there, before opening up about his
    journey into programming and how he found his way into working with Elixir. We
    also get to talk about his company, Podii, and their first few years working with
    clients. Apart from all the tech talk, Sigu is kind enough to shed some light
    on Kenya&#39;s matatu buses, and what makes them so unique, a subject that was
    particularly captivating to our panel! Listeners can also expect to hear about
    the recent ElixirConf Africa, Sigu&#39;s thoughts on hiring young talent, and
    what he hopes to see in the next decade within the community. So to catch it all,
    be sure to listen in with us on Elixir Wizards!</p>\n\n<p><strong>Key Points From
    This Episode:</strong></p>\n\n<ul>\n<li>Sigu&#39;s trip to the US and the sights
    he has been seeing in different cities. </li>\n<li>Some information from Sigu
    about the Elixir Kenya meetup and the community there. </li>\n<li>Sigu&#39;s experiences
    with IoT technology in Kenya and its adoption.<br></li>\n<li>The elevator pitch
    for Sigu&#39;s company, Podii, and its roots in training.<br></li>\n<li>Podii&#39;s
    current operation and company size and some of the projects they have worked on
    thus far. </li>\n<li>The coding language trends in Kenya; Sigu weighs in on what
    he has noticed.<br></li>\n<li>Sigu&#39;s history in the programming space and
    how he made his way into the world of tech.<br></li>\n<li>How &#39;matatu&#39;
    buses operate in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!<br></li>\n<li>The
    ElixirConf Africa that was hosted this year and Sigu&#39;s experience of being
    involved. </li>\n<li>Sigu&#39;s hopes for the Elixir community for the next ten
    years! </li>\n<li>Approaches for identifying talented young Elixir developers.
    </li>\n<li>How and where to connect with Sigu online and final remarks from our
    guest. </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSigu Magwa on LinkedIn — <a href=\"https://www.linkedin.com/in/sigu/?originalSubdomain=ke\"
    rel=\"nofollow\">https://www.linkedin.com/in/sigu/?originalSubdomain=ke</a><br>\nSigu
    Magwa on Twitter — <a href=\"https://twitter.com/s_igu\" rel=\"nofollow\">https://twitter.com/s_igu</a><br>\nPodii
    — <a href=\"https://podiihq.com/\" rel=\"nofollow\">https://podiihq.com/</a><br>\nNerves
    — <a href=\"https://www.nerves-project.org/platform.html\" rel=\"nofollow\">https://www.nerves-project.org/platform.html</a><br>\nElixirConf
    Africa — <a href=\"https://elixirconf.africa/\" rel=\"nofollow\">https://elixirconf.africa/</a><br>\nQuadBlockQuiz
    — <a href=\"http://quadblockquiz.org:4000/\" rel=\"nofollow\">http://quadblockquiz.org:4000/</a><br>\nMatatu
    Bus — <a href=\"https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures\"
    rel=\"nofollow\">https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures</a><br>\nHire
    Junior Engineers — <a href=\"https://smartlogic.io/blog/hire-junior-engineers/\"
    rel=\"nofollow\">https://smartlogic.io/blog/hire-junior-engineers/</a><br>\nTeach
    Yourself Computer Science — <a href=\"https://teachyourselfcs.com/\" rel=\"nofollow\">https://teachyourselfcs.com/</a><br>\nStructure
    and Interpretation of Computer Programs — <a href=\"https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871\"
    rel=\"nofollow\">https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871</a><br>\nElixir
    Wizards Discord — <a href=\"https://discord.com/invite/JGcqSaYf2a\" rel=\"nofollow\">https://discord.com/invite/JGcqSaYf2a</a></p><p>Special
    Guest: Sigu Magwa.</p>\n      "
- title: Casting Spells with Brooklin Myers
  slug: s7e7-myers
  link: https://smartlogic.io/podcast/elixir-wizards/s7e7-myers
  guid: c628b216-0cf4-431f-b430-377ad40bf4ff
  pubDate: Thu, 16 Dec 2021 06:00:00 -0500
  pubDateFriendly: December 16, 2021
  description: "Brooklin Myers is on a quest to change the perception that Elixir
    is difficult to get into and we are so grateful to have him as a guest on the
    show today. Aside from being a passionate programmer, Brooklin spends a lot of
    his time trying to encourage new members in the Elixir community through his Twitter
    account and podcast called Elixir Newbies. In this episode, we talk to Brooklin
    about his relationship with Elixir and its broader community, why he loves the
    space so much and, and why he wants to help it grow. We cover his journey into
    programming and how he got involved with Elixir specifically. He talks about the
    features of the language that he loves most and how learning Surface has allowed
    him to use Elixir in the same way he used to use React. Our conversation also
    ventures onto the subject of Dungeons and Dragons, another passion of Brooklin’s,
    and he tells us how learning programming is the closest he has come to fulfilling
    his dream of being a wizard!\nKey Points From This Episode:\nRegion-specific spelling
    and our peeves about words we easily misspell.\nBrooklin’s background in React
    and how Surface has helped him use Elixir in a similar way.\nStructure and testing:
    Why Brooklin loves Elixir and how it compares to JavaScript.\nHow Brooklin got
    into programming and left his job selling computers.\nWhat led Brooklin to discover
    Elixir and how he realized its true potential.\nThe aspect of problem-solving
    and continuous growth Brooklin loves about programming.\nBrooklin’s desire to
    help others learn and why he started the Elixir Newbie podcast.\nHow to get over
    perfectionism: the value of remembering it is okay to fail.\nSundi and Brooklin’s
    approach to taking notes and turning them into posts or tweets.\nHow Brooklin
    handles his writing, podcasting, and other work by time-blocking.\nBrooklin’s
    love of Dungeons and Dragons and the improvisation of being the DM.\nWhy Brooklin
    loves fantasy and how programming is the closest thing to real-world magic.\nThe
    impacts of Elixir on Brooklin and how supportive the community has been to him.\nWhether
    Brooklin feels that learning Elixir has changed the way he codes.\nAspects of
    Elixir that can improve regarding ease of access to the community.\nFinal shoutouts
    from Brooklin and where to connect with him online.\nLinks Mentioned in Today’s
    Episode:\nBrooklin Myers on Twitter — https://twitter.com/brooklinjmyers\nElixir
    Newbie — https://www.elixirnewbie.com/\nElixir Newbie Podcast — https://podtail.com/en/podcast/elixir-newbie/\nLost
    Mines of Phandelver – https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free\nKealy
    Doyle — https://www.linkedin.com/in/kealy-doyle/\nJono Stiansen — https://twitter.com/JonoCodes\nMatthew
    Baker — https://www.linkedin.com/in/mcbii/\nAnton’s Pasta Bar — https://antonspastabar.com/\nKeith
    Eats Everything — https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e\nSurface
    — https://hexdocs.pm/surface/Surface.html\nSmartLogic — https://smartlogic.io/
    \n Special Guest: Brooklin Myers.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+1YcPlsNZ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c628b216-0cf4-431f-b430-377ad40bf4ff.mp3
    length: '81234527'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: In this episode, we talk to Brooklin Myers about his relationship with
      Elixir and its broader community, why he loves the space so much, and and why
      he wants to help it grow.
    duration: '56:10'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c628b216-0cf4-431f-b430-377ad40bf4ff/cover.jpg?v=1
    summary: "\n        <p>Brooklin Myers is on a quest to change the perception that
      Elixir is difficult to get into and we are so grateful to have him as a guest
      on the show today. Aside from being a passionate programmer, Brooklin spends
      a lot of his time trying to encourage new members in the Elixir community through
      his Twitter account and podcast called Elixir Newbies. In this episode, we talk
      to Brooklin about his relationship with Elixir and its broader community, why
      he loves the space so much and, and why he wants to help it grow. We cover his
      journey into programming and how he got involved with Elixir specifically. He
      talks about the features of the language that he loves most and how learning
      Surface has allowed him to use Elixir in the same way he used to use React.
      Our conversation also ventures onto the subject of Dungeons and Dragons, another
      passion of Brooklin’s, and he tells us how learning programming is the closest
      he has come to fulfilling his dream of being a wizard!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Region-specific spelling and our peeves
      about words we easily misspell.</li>\n<li>Brooklin’s background in React and
      how Surface has helped him use Elixir in a similar way.</li>\n<li>Structure
      and testing: Why Brooklin loves Elixir and how it compares to JavaScript.</li>\n<li>How
      Brooklin got into programming and left his job selling computers.</li>\n<li>What
      led Brooklin to discover Elixir and how he realized its true potential.</li>\n<li>The
      aspect of problem-solving and continuous growth Brooklin loves about programming.</li>\n<li>Brooklin’s
      desire to help others learn and why he started the Elixir Newbie podcast.</li>\n<li>How
      to get over perfectionism: the value of remembering it is okay to fail.</li>\n<li>Sundi
      and Brooklin’s approach to taking notes and turning them into posts or tweets.</li>\n<li>How
      Brooklin handles his writing, podcasting, and other work by time-blocking.</li>\n<li>Brooklin’s
      love of Dungeons and Dragons and the improvisation of being the DM.</li>\n<li>Why
      Brooklin loves fantasy and how programming is the closest thing to real-world
      magic.</li>\n<li>The impacts of Elixir on Brooklin and how supportive the community
      has been to him.</li>\n<li>Whether Brooklin feels that learning Elixir has changed
      the way he codes.</li>\n<li>Aspects of Elixir that can improve regarding ease
      of access to the community.</li>\n<li>Final shoutouts from Brooklin and where
      to connect with him online.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Brooklin
      Myers on Twitter — <a href=\"https://twitter.com/brooklinjmyers\" rel=\"nofollow\">https://twitter.com/brooklinjmyers</a><br>\nElixir
      Newbie — <a href=\"https://www.elixirnewbie.com/\" rel=\"nofollow\">https://www.elixirnewbie.com/</a><br>\nElixir
      Newbie Podcast — <a href=\"https://podtail.com/en/podcast/elixir-newbie/\" rel=\"nofollow\">https://podtail.com/en/podcast/elixir-newbie/</a><br>\nLost
      Mines of Phandelver – <a href=\"https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free\"
      rel=\"nofollow\">https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free</a><br>\nKealy
      Doyle — <a href=\"https://www.linkedin.com/in/kealy-doyle/\" rel=\"nofollow\">https://www.linkedin.com/in/kealy-doyle/</a><br>\nJono
      Stiansen — <a href=\"https://twitter.com/JonoCodes\" rel=\"nofollow\">https://twitter.com/JonoCodes</a><br>\nMatthew
      Baker — <a href=\"https://www.linkedin.com/in/mcbii/\" rel=\"nofollow\">https://www.linkedin.com/in/mcbii/</a><br>\nAnton’s
      Pasta Bar — <a href=\"https://antonspastabar.com/\" rel=\"nofollow\">https://antonspastabar.com/</a><br>\nKeith
      Eats Everything — <a href=\"https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e\"
      rel=\"nofollow\">https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e</a><br>\nSurface
      — <a href=\"https://hexdocs.pm/surface/Surface.html\" rel=\"nofollow\">https://hexdocs.pm/surface/Surface.html</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Brooklin Myers.</p>\n      "
  contentEncoded: "\n        <p>Brooklin Myers is on a quest to change the perception
    that Elixir is difficult to get into and we are so grateful to have him as a guest
    on the show today. Aside from being a passionate programmer, Brooklin spends a
    lot of his time trying to encourage new members in the Elixir community through
    his Twitter account and podcast called Elixir Newbies. In this episode, we talk
    to Brooklin about his relationship with Elixir and its broader community, why
    he loves the space so much and, and why he wants to help it grow. We cover his
    journey into programming and how he got involved with Elixir specifically. He
    talks about the features of the language that he loves most and how learning Surface
    has allowed him to use Elixir in the same way he used to use React. Our conversation
    also ventures onto the subject of Dungeons and Dragons, another passion of Brooklin’s,
    and he tells us how learning programming is the closest he has come to fulfilling
    his dream of being a wizard!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Region-specific
    spelling and our peeves about words we easily misspell.</li>\n<li>Brooklin’s background
    in React and how Surface has helped him use Elixir in a similar way.</li>\n<li>Structure
    and testing: Why Brooklin loves Elixir and how it compares to JavaScript.</li>\n<li>How
    Brooklin got into programming and left his job selling computers.</li>\n<li>What
    led Brooklin to discover Elixir and how he realized its true potential.</li>\n<li>The
    aspect of problem-solving and continuous growth Brooklin loves about programming.</li>\n<li>Brooklin’s
    desire to help others learn and why he started the Elixir Newbie podcast.</li>\n<li>How
    to get over perfectionism: the value of remembering it is okay to fail.</li>\n<li>Sundi
    and Brooklin’s approach to taking notes and turning them into posts or tweets.</li>\n<li>How
    Brooklin handles his writing, podcasting, and other work by time-blocking.</li>\n<li>Brooklin’s
    love of Dungeons and Dragons and the improvisation of being the DM.</li>\n<li>Why
    Brooklin loves fantasy and how programming is the closest thing to real-world
    magic.</li>\n<li>The impacts of Elixir on Brooklin and how supportive the community
    has been to him.</li>\n<li>Whether Brooklin feels that learning Elixir has changed
    the way he codes.</li>\n<li>Aspects of Elixir that can improve regarding ease
    of access to the community.</li>\n<li>Final shoutouts from Brooklin and where
    to connect with him online.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Brooklin
    Myers on Twitter — <a href=\"https://twitter.com/brooklinjmyers\" rel=\"nofollow\">https://twitter.com/brooklinjmyers</a><br>\nElixir
    Newbie — <a href=\"https://www.elixirnewbie.com/\" rel=\"nofollow\">https://www.elixirnewbie.com/</a><br>\nElixir
    Newbie Podcast — <a href=\"https://podtail.com/en/podcast/elixir-newbie/\" rel=\"nofollow\">https://podtail.com/en/podcast/elixir-newbie/</a><br>\nLost
    Mines of Phandelver – <a href=\"https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free\"
    rel=\"nofollow\">https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free</a><br>\nKealy
    Doyle — <a href=\"https://www.linkedin.com/in/kealy-doyle/\" rel=\"nofollow\">https://www.linkedin.com/in/kealy-doyle/</a><br>\nJono
    Stiansen — <a href=\"https://twitter.com/JonoCodes\" rel=\"nofollow\">https://twitter.com/JonoCodes</a><br>\nMatthew
    Baker — <a href=\"https://www.linkedin.com/in/mcbii/\" rel=\"nofollow\">https://www.linkedin.com/in/mcbii/</a><br>\nAnton’s
    Pasta Bar — <a href=\"https://antonspastabar.com/\" rel=\"nofollow\">https://antonspastabar.com/</a><br>\nKeith
    Eats Everything — <a href=\"https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e\"
    rel=\"nofollow\">https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e</a><br>\nSurface
    — <a href=\"https://hexdocs.pm/surface/Surface.html\" rel=\"nofollow\">https://hexdocs.pm/surface/Surface.html</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Brooklin Myers.</p>\n      "
- title: Speedcubing and Building Livebook with Jonatan Kłosko
  slug: s7e6-klosko
  link: https://smartlogic.io/podcast/elixir-wizards/s7e6-klosko
  guid: '03563586-ac91-4c9e-a6ec-f7a91318d2b7'
  pubDate: Thu, 09 Dec 2021 06:00:00 -0500
  pubDateFriendly: December  9, 2021
  description: |
    It is important to us that the Elixir community keeps thriving, and one of the best ways to ensure this is by lowering the barrier to entry as much as possible. Livebook is helping to achieve this aim, and today we are lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is a young prodigy because while he is still at college, he is working closely with José Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds! After hearing about his college thesis on evolutionary algorithms using Numerical Elixir, we jump into the story of how he met José and started building Livebook. He explains that Livebook is a web application for writing interactive and collaborative code notebooks for Elixir and we hear about the many features he is building into it. From there, Jonatan describes what he loves about Elixir, and we discuss how learning functional programming changes the way we code. Tuning in, you’ll also hear about a bunch of features that make Elixir so great, how its downsides are mostly solved by its extensibility, and some of Jonatan’s other hobbies that help him keep balance in his life. Be sure to sip on some Elixir with us today!
    Key Points From This Episode:
    Jonatan speaks about “speedcubing”: his hobby of quickly solving Rubik’s cubes.
    How Jonatan got into programming and where he is at in his CS degree.
    Discussing Jonatan’s Bachelor’s thesis project on evolutionary algorithms in Elixir.
    How evolutionary algorithms are a style of solving optimization problems biologically.
    Building the project using the Erlang distribution and the Numerical Elixir library.
    How Jonatan started working on the Livebook project with Dashbit.
    Thoughts on how Jonatan broke into the Elixir community and how others can do the same.
    Livebook: a code notebook application with collaborative and sequential evaluation features.
    The IEx session abilities of Livebook and how impressed Sundi was when she discovered them.
    The different use cases for Livebook and the direction Jonatan wants to take the app in.
    Jonatan’s process of learning Elixir at college and the application he built for a project.
    The pair programming features of Livebook and how to use them.
    How well-positioned Jonatan is to learn Elixir and what he loves about the language.
    The functional programming style and how it affects how people write code after learning it.
    Downsides of Elixir around immutability and typing and Jonatan’s feelings toward this.
    How Elixir is making an impact on the programming community through being user-friendly.
    Jonatan talks about his other hobbies and how he finds balance in his life.
    Hopes for the future of Elixir, resources for learning, and how to get involved in the community.
    How amazing the pipe operator is and the huge advantage it gives Elixir over JavaScript.
    Final plugs from Jonatan and how best to reach out to him online.
    Links Mentioned in Today’s Episode:
    Jonatan Kłosko — https://jonatanklosko.com/
    Jonatan Kłosko on GitHub — https://github.com/jonatanklosko
    Speedcubing — https://www.rubiks.com/en-us/speed-cubing
    Erlang Ecosystem Foundation Slack — https://erlef.org/slack-invite/erlef
    Numerical Elixir — https://github.com/elixir-nx
    LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
    Phoenix LiveView — https://github.com/phoenixframework/phoenixliveview
    Dashbit — https://dashbit.co/
    Haskell — https://www.haskell.org/
    React — https://reactjs.org/
    Elixir — https://elixir-lang.org/
    José Valim — https://twitter.com/josevalim
    Livebook — https://dashbit.co/blog/announcing-livebook
    SmartLogic — https://smartlogic.io/  Special Guest: Jonatan Kłosko.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+eszy-uN4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/03563586-ac91-4c9e-a6ec-f7a91318d2b7.mp3
    length: '43565075'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: Today we are lucky enough to be joined by Livebook developer, Jonatan
      Kłosko, a young prodigy. While he is still at college, he is working closely
      with José Valim at Dashbit, and can solve a Rubik’s cube in under five seconds!
    duration: '45:17'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/03563586-ac91-4c9e-a6ec-f7a91318d2b7/cover.jpg?v=1
    summary: "\n        <p>It is important to us that the Elixir community keeps thriving,
      and one of the best ways to ensure this is by lowering the barrier to entry
      as much as possible. Livebook is helping to achieve this aim, and today we are
      lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is a young
      prodigy because while he is still at college, he is working closely with José
      Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds! After
      hearing about his college thesis on evolutionary algorithms using Numerical
      Elixir, we jump into the story of how he met José and started building Livebook.
      He explains that Livebook is a web application for writing interactive and collaborative
      code notebooks for Elixir and we hear about the many features he is building
      into it. From there, Jonatan describes what he loves about Elixir, and we discuss
      how learning functional programming changes the way we code. Tuning in, you’ll
      also hear about a bunch of features that make Elixir so great, how its downsides
      are mostly solved by its extensibility, and some of Jonatan’s other hobbies
      that help him keep balance in his life. Be sure to sip on some Elixir with us
      today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Jonatan speaks
      about “speedcubing”: his hobby of quickly solving Rubik’s cubes.</li>\n<li>How
      Jonatan got into programming and where he is at in his CS degree.</li>\n<li>Discussing
      Jonatan’s Bachelor’s thesis project on evolutionary algorithms in Elixir.</li>\n<li>How
      evolutionary algorithms are a style of solving optimization problems biologically.</li>\n<li>Building
      the project using the Erlang distribution and the Numerical Elixir library.</li>\n<li>How
      Jonatan started working on the Livebook project with Dashbit.</li>\n<li>Thoughts
      on how Jonatan broke into the Elixir community and how others can do the same.</li>\n<li>Livebook:
      a code notebook application with collaborative and sequential evaluation features.</li>\n<li>The
      IEx session abilities of Livebook and how impressed Sundi was when she discovered
      them.</li>\n<li>The different use cases for Livebook and the direction Jonatan
      wants to take the app in.</li>\n<li>Jonatan’s process of learning Elixir at
      college and the application he built for a project.</li>\n<li>The pair programming
      features of Livebook and how to use them.</li>\n<li>How well-positioned Jonatan
      is to learn Elixir and what he loves about the language.</li>\n<li>The functional
      programming style and how it affects how people write code after learning it.</li>\n<li>Downsides
      of Elixir around immutability and typing and Jonatan’s feelings toward this.</li>\n<li>How
      Elixir is making an impact on the programming community through being user-friendly.</li>\n<li>Jonatan
      talks about his other hobbies and how he finds balance in his life.</li>\n<li>Hopes
      for the future of Elixir, resources for learning, and how to get involved in
      the community.</li>\n<li>How amazing the pipe operator is and the huge advantage
      it gives Elixir over JavaScript.</li>\n<li>Final plugs from Jonatan and how
      best to reach out to him online.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Jonatan Kłosko — <a href=\"https://jonatanklosko.com/\" rel=\"nofollow\">https://jonatanklosko.com/</a><br>\nJonatan
      Kłosko on GitHub — <a href=\"https://github.com/jonatanklosko\" rel=\"nofollow\">https://github.com/jonatanklosko</a><br>\nSpeedcubing
      — <a href=\"https://www.rubiks.com/en-us/speed-cubing\" rel=\"nofollow\">https://www.rubiks.com/en-us/speed-cubing</a><br>\nErlang
      Ecosystem Foundation Slack — <a href=\"https://erlef.org/slack-invite/erlef\"
      rel=\"nofollow\">https://erlef.org/slack-invite/erlef</a><br>\nNumerical Elixir
      — <a href=\"https://github.com/elixir-nx\" rel=\"nofollow\">https://github.com/elixir-nx</a><br>\nLiveView
      — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
      LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nDashbit
      — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nReact
      — <a href=\"https://reactjs.org/\" rel=\"nofollow\">https://reactjs.org/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nLivebook
      — <a href=\"https://dashbit.co/blog/announcing-livebook\" rel=\"nofollow\">https://dashbit.co/blog/announcing-livebook</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Jonatan Kłosko.</p>\n      "
  contentEncoded: "\n        <p>It is important to us that the Elixir community keeps
    thriving, and one of the best ways to ensure this is by lowering the barrier to
    entry as much as possible. Livebook is helping to achieve this aim, and today
    we are lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is
    a young prodigy because while he is still at college, he is working closely with
    José Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds!
    After hearing about his college thesis on evolutionary algorithms using Numerical
    Elixir, we jump into the story of how he met José and started building Livebook.
    He explains that Livebook is a web application for writing interactive and collaborative
    code notebooks for Elixir and we hear about the many features he is building into
    it. From there, Jonatan describes what he loves about Elixir, and we discuss how
    learning functional programming changes the way we code. Tuning in, you’ll also
    hear about a bunch of features that make Elixir so great, how its downsides are
    mostly solved by its extensibility, and some of Jonatan’s other hobbies that help
    him keep balance in his life. Be sure to sip on some Elixir with us today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Jonatan speaks about “speedcubing”:
    his hobby of quickly solving Rubik’s cubes.</li>\n<li>How Jonatan got into programming
    and where he is at in his CS degree.</li>\n<li>Discussing Jonatan’s Bachelor’s
    thesis project on evolutionary algorithms in Elixir.</li>\n<li>How evolutionary
    algorithms are a style of solving optimization problems biologically.</li>\n<li>Building
    the project using the Erlang distribution and the Numerical Elixir library.</li>\n<li>How
    Jonatan started working on the Livebook project with Dashbit.</li>\n<li>Thoughts
    on how Jonatan broke into the Elixir community and how others can do the same.</li>\n<li>Livebook:
    a code notebook application with collaborative and sequential evaluation features.</li>\n<li>The
    IEx session abilities of Livebook and how impressed Sundi was when she discovered
    them.</li>\n<li>The different use cases for Livebook and the direction Jonatan
    wants to take the app in.</li>\n<li>Jonatan’s process of learning Elixir at college
    and the application he built for a project.</li>\n<li>The pair programming features
    of Livebook and how to use them.</li>\n<li>How well-positioned Jonatan is to learn
    Elixir and what he loves about the language.</li>\n<li>The functional programming
    style and how it affects how people write code after learning it.</li>\n<li>Downsides
    of Elixir around immutability and typing and Jonatan’s feelings toward this.</li>\n<li>How
    Elixir is making an impact on the programming community through being user-friendly.</li>\n<li>Jonatan
    talks about his other hobbies and how he finds balance in his life.</li>\n<li>Hopes
    for the future of Elixir, resources for learning, and how to get involved in the
    community.</li>\n<li>How amazing the pipe operator is and the huge advantage it
    gives Elixir over JavaScript.</li>\n<li>Final plugs from Jonatan and how best
    to reach out to him online.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Jonatan
    Kłosko — <a href=\"https://jonatanklosko.com/\" rel=\"nofollow\">https://jonatanklosko.com/</a><br>\nJonatan
    Kłosko on GitHub — <a href=\"https://github.com/jonatanklosko\" rel=\"nofollow\">https://github.com/jonatanklosko</a><br>\nSpeedcubing
    — <a href=\"https://www.rubiks.com/en-us/speed-cubing\" rel=\"nofollow\">https://www.rubiks.com/en-us/speed-cubing</a><br>\nErlang
    Ecosystem Foundation Slack — <a href=\"https://erlef.org/slack-invite/erlef\"
    rel=\"nofollow\">https://erlef.org/slack-invite/erlef</a><br>\nNumerical Elixir
    — <a href=\"https://github.com/elixir-nx\" rel=\"nofollow\">https://github.com/elixir-nx</a><br>\nLiveView
    — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
    LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nDashbit
    — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nReact
    — <a href=\"https://reactjs.org/\" rel=\"nofollow\">https://reactjs.org/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nLivebook
    — <a href=\"https://dashbit.co/blog/announcing-livebook\" rel=\"nofollow\">https://dashbit.co/blog/announcing-livebook</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Jonatan Kłosko.</p>\n      "
- title: Protocols in Elixir with Yiming Chen
  slug: s7e5-chen
  link: https://smartlogic.io/podcast/elixir-wizards/s7e5-chen
  guid: 496000a0-b38c-4ab6-96f8-a0948d8c6d40
  pubDate: Thu, 02 Dec 2021 06:00:00 -0500
  pubDateFriendly: December  2, 2021
  description: "Today on the show we are grateful to get the chance to speak with
    Yiming Chen from Tubi, where we hear all about how he likes to use Elixir and
    the contributions he has made to the community. We begin as always with Yiming's
    journey into programming and how he got into Elixir through his early interest
    in Ruby. From there, we talk about the magic of Protocols, hearing about an awesome
    project Yiming built using them and how this lead him to build a testing framework
    called Promox. In this section, we also get into how Protocols enable polymorphic
    logic, why they are useful for defining shared interfaces explicitly, and the
    differences between Promox and Mox. Our conversation today covers some general
    advantages of writing code in Elixir, and we explore how it has influenced Yiming’s
    style of programming, its efficiency thanks to concurrency, and its usefulness
    for building maintainable applications. Wrapping up, we hear Yiming’s thoughts
    about the nascent Elixir community in China and all the future possibilities for
    this magical language.\nKey Points From This Episode:\nHow Yiming got into programming
    by building websites using WYSIWYG tools as a child.\nYiming’s experiences using
    Ruby and how that led him to learn Elixir.\nPeople Yiming knows that are using
    Elixir for personal projects and some highlights of these.\nYiming’s project where
    he used Protocols to transfer files from one cloud provider to another.\nHow Yiming’s
    Protocol project led him to create a testing framework called Promox.\nProtocols
    versus behaviors and how Promox differs from Mox.\nA basic description of how
    Protocols enable polymorphic logic in Elixir.\nWhy Protocols are so useful for
    defining shared interfaces explicitly.\nThe thing that makes Protocols in Elixir
    specifically attractive.\nSundi’s talk on Mox and her thoughts on the pros and
    cons of using it.\nHow Yiming got into using Mox through Ruby and his thoughts
    on it.\nThe advantages of using Elixir over Ruby relating to concurrency and testing.\nNetworking
    and software developer jobs after remote work.\nHow Yiming’s ElixirConf talk went
    and the positive feedback he received.\nYiming’s feelings about Test Driven Development
    and how closely he follows it.\nLearning Lisp in college and Yiming’s earlier
    experiences with functional programming.\nHow small the Elixir scene in China
    is and thoughts about how it should grow.\nThe benefits of Elixir for building
    maintainable applications and more.\nHow Elixir has changed the way the Yiming
    programs.\nA model for building websites in Elixir with HTTP requests as functions.\nFinal
    plugs from Yiming about the need for developers at Tubi!\nLinks Mentioned in Today’s
    Episode:\nYiming Chen on Twitter — https://twitter.com/dsdshcym?lang=en\ntubi.tv
    — https://tubitv.com/\nQuinn Wilton — https://twitter.com/wilton_quinn\nPromox
    — https://giters.com/dsdshcym/promox\nSundi Myint: Stunt Doubles | Testing with
    Mox, Elixir Conf 2021 — https://youtu.be/qMScnpGhu4E \nYiming Chen - Promox: Roles,
    Protocols, and Mocks — https://youtu.be/Df81LbdRd0A\n‘Mocks and explicit contracts’
    — https://dashbit.co/blog/mocks-and-explicit-contracts\nProgramming Phoenix —
    https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\nWhy
    Elixir Matters A Genealogy of Functional Programming - OsaGaius — https://youtu.be/X2u0bBqhRKE\nSmartLogic
    — https://smartlogic.io/  Special Guest: Yiming Chen.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+smnBplzg
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/496000a0-b38c-4ab6-96f8-a0948d8c6d40.mp3
    length: '60807348'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: Today on the show we are grateful to get the chance to speak with Yiming
      Chen from Tubi, where we hear all about how he likes to use Elixir and the contributions
      he has made to the community.
    duration: '42:11'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/496000a0-b38c-4ab6-96f8-a0948d8c6d40/cover.jpg?v=1
    summary: "\n        <p>Today on the show we are grateful to get the chance to
      speak with Yiming Chen from Tubi, where we hear all about how he likes to use
      Elixir and the contributions he has made to the community. We begin as always
      with Yiming&#39;s journey into programming and how he got into Elixir through
      his early interest in Ruby. From there, we talk about the magic of Protocols,
      hearing about an awesome project Yiming built using them and how this lead him
      to build a testing framework called Promox. In this section, we also get into
      how Protocols enable polymorphic logic, why they are useful for defining shared
      interfaces explicitly, and the differences between Promox and Mox. Our conversation
      today covers some general advantages of writing code in Elixir, and we explore
      how it has influenced Yiming’s style of programming, its efficiency thanks to
      concurrency, and its usefulness for building maintainable applications. Wrapping
      up, we hear Yiming’s thoughts about the nascent Elixir community in China and
      all the future possibilities for this magical language.</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>How Yiming got into programming by building
      websites using WYSIWYG tools as a child.</li>\n<li>Yiming’s experiences using
      Ruby and how that led him to learn Elixir.</li>\n<li>People Yiming knows that
      are using Elixir for personal projects and some highlights of these.</li>\n<li>Yiming’s
      project where he used Protocols to transfer files from one cloud provider to
      another.</li>\n<li>How Yiming’s Protocol project led him to create a testing
      framework called Promox.</li>\n<li>Protocols versus behaviors and how Promox
      differs from Mox.</li>\n<li>A basic description of how Protocols enable polymorphic
      logic in Elixir.</li>\n<li>Why Protocols are so useful for defining shared interfaces
      explicitly.</li>\n<li>The thing that makes Protocols in Elixir specifically
      attractive.</li>\n<li>Sundi’s talk on Mox and her thoughts on the pros and cons
      of using it.</li>\n<li>How Yiming got into using Mox through Ruby and his thoughts
      on it.</li>\n<li>The advantages of using Elixir over Ruby relating to concurrency
      and testing.</li>\n<li>Networking and software developer jobs after remote work.</li>\n<li>How
      Yiming’s ElixirConf talk went and the positive feedback he received.</li>\n<li>Yiming’s
      feelings about Test Driven Development and how closely he follows it.</li>\n<li>Learning
      Lisp in college and Yiming’s earlier experiences with functional programming.</li>\n<li>How
      small the Elixir scene in China is and thoughts about how it should grow.</li>\n<li>The
      benefits of Elixir for building maintainable applications and more.</li>\n<li>How
      Elixir has changed the way the Yiming programs.</li>\n<li>A model for building
      websites in Elixir with HTTP requests as functions.</li>\n<li>Final plugs from
      Yiming about the need for developers at Tubi!</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Yiming Chen on Twitter — <a href=\"https://twitter.com/dsdshcym?lang=en\"
      rel=\"nofollow\">https://twitter.com/dsdshcym?lang=en</a><br>\ntubi.tv — <a
      href=\"https://tubitv.com/\" rel=\"nofollow\">https://tubitv.com/</a><br>\nQuinn
      Wilton — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nPromox
      — <a href=\"https://giters.com/dsdshcym/promox\" rel=\"nofollow\">https://giters.com/dsdshcym/promox</a><br>\nSundi
      Myint: Stunt Doubles | Testing with Mox, Elixir Conf 2021 — <a href=\"https://youtu.be/qMScnpGhu4E\"
      rel=\"nofollow\">https://youtu.be/qMScnpGhu4E</a> <br>\nYiming Chen - Promox:
      Roles, Protocols, and Mocks — <a href=\"https://youtu.be/Df81LbdRd0A\" rel=\"nofollow\">https://youtu.be/Df81LbdRd0A</a><br>\n‘Mocks
      and explicit contracts’ — <a href=\"https://dashbit.co/blog/mocks-and-explicit-contracts\"
      rel=\"nofollow\">https://dashbit.co/blog/mocks-and-explicit-contracts</a><br>\nProgramming
      Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nWhy
      Elixir Matters A Genealogy of Functional Programming - OsaGaius — <a href=\"https://youtu.be/X2u0bBqhRKE\"
      rel=\"nofollow\">https://youtu.be/X2u0bBqhRKE</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> </p><p>Special Guest: Yiming Chen.</p>\n
      \     "
  contentEncoded: "\n        <p>Today on the show we are grateful to get the chance
    to speak with Yiming Chen from Tubi, where we hear all about how he likes to use
    Elixir and the contributions he has made to the community. We begin as always
    with Yiming&#39;s journey into programming and how he got into Elixir through
    his early interest in Ruby. From there, we talk about the magic of Protocols,
    hearing about an awesome project Yiming built using them and how this lead him
    to build a testing framework called Promox. In this section, we also get into
    how Protocols enable polymorphic logic, why they are useful for defining shared
    interfaces explicitly, and the differences between Promox and Mox. Our conversation
    today covers some general advantages of writing code in Elixir, and we explore
    how it has influenced Yiming’s style of programming, its efficiency thanks to
    concurrency, and its usefulness for building maintainable applications. Wrapping
    up, we hear Yiming’s thoughts about the nascent Elixir community in China and
    all the future possibilities for this magical language.</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>How Yiming got into programming by building websites
    using WYSIWYG tools as a child.</li>\n<li>Yiming’s experiences using Ruby and
    how that led him to learn Elixir.</li>\n<li>People Yiming knows that are using
    Elixir for personal projects and some highlights of these.</li>\n<li>Yiming’s
    project where he used Protocols to transfer files from one cloud provider to another.</li>\n<li>How
    Yiming’s Protocol project led him to create a testing framework called Promox.</li>\n<li>Protocols
    versus behaviors and how Promox differs from Mox.</li>\n<li>A basic description
    of how Protocols enable polymorphic logic in Elixir.</li>\n<li>Why Protocols are
    so useful for defining shared interfaces explicitly.</li>\n<li>The thing that
    makes Protocols in Elixir specifically attractive.</li>\n<li>Sundi’s talk on Mox
    and her thoughts on the pros and cons of using it.</li>\n<li>How Yiming got into
    using Mox through Ruby and his thoughts on it.</li>\n<li>The advantages of using
    Elixir over Ruby relating to concurrency and testing.</li>\n<li>Networking and
    software developer jobs after remote work.</li>\n<li>How Yiming’s ElixirConf talk
    went and the positive feedback he received.</li>\n<li>Yiming’s feelings about
    Test Driven Development and how closely he follows it.</li>\n<li>Learning Lisp
    in college and Yiming’s earlier experiences with functional programming.</li>\n<li>How
    small the Elixir scene in China is and thoughts about how it should grow.</li>\n<li>The
    benefits of Elixir for building maintainable applications and more.</li>\n<li>How
    Elixir has changed the way the Yiming programs.</li>\n<li>A model for building
    websites in Elixir with HTTP requests as functions.</li>\n<li>Final plugs from
    Yiming about the need for developers at Tubi!</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Yiming Chen on Twitter — <a href=\"https://twitter.com/dsdshcym?lang=en\"
    rel=\"nofollow\">https://twitter.com/dsdshcym?lang=en</a><br>\ntubi.tv — <a href=\"https://tubitv.com/\"
    rel=\"nofollow\">https://tubitv.com/</a><br>\nQuinn Wilton — <a href=\"https://twitter.com/wilton_quinn\"
    rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nPromox — <a href=\"https://giters.com/dsdshcym/promox\"
    rel=\"nofollow\">https://giters.com/dsdshcym/promox</a><br>\nSundi Myint: Stunt
    Doubles | Testing with Mox, Elixir Conf 2021 — <a href=\"https://youtu.be/qMScnpGhu4E\"
    rel=\"nofollow\">https://youtu.be/qMScnpGhu4E</a> <br>\nYiming Chen - Promox:
    Roles, Protocols, and Mocks — <a href=\"https://youtu.be/Df81LbdRd0A\" rel=\"nofollow\">https://youtu.be/Df81LbdRd0A</a><br>\n‘Mocks
    and explicit contracts’ — <a href=\"https://dashbit.co/blog/mocks-and-explicit-contracts\"
    rel=\"nofollow\">https://dashbit.co/blog/mocks-and-explicit-contracts</a><br>\nProgramming
    Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nWhy
    Elixir Matters A Genealogy of Functional Programming - OsaGaius — <a href=\"https://youtu.be/X2u0bBqhRKE\"
    rel=\"nofollow\">https://youtu.be/X2u0bBqhRKE</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> </p><p>Special Guest: Yiming Chen.</p>\n
    \     "
- title: Learning and Teaching Functional Programming with Adolfo Neto
  slug: s7e4-neto
  link: https://smartlogic.io/podcast/elixir-wizards/s7e4-neto
  guid: 5c3a89b0-b7f6-4b83-aebb-af04520dba3e
  pubDate: Tue, 23 Nov 2021 06:00:00 -0500
  pubDateFriendly: November 23, 2021
  description: "Today we are joined by programmer, professor, educator, and podcaster,
    Adolfo Neto! We have a fascinating conversation that continues our exploration
    of the theme of the impact of Elixir, hearing from Adolfo about his early attraction
    to computers and computer science, the decision to study the subject, and how
    this led to a life in education and academia. We also talk about growing up in
    Brazil and how geography influenced his career trajectory, before getting into
    some of the main outlets that Adolfo uses to share information on functional programming.
    He also comments on what he loves about Elixir, why learning it can improve any
    programmer's skills, and much more. One of Adolfo's main goals with his podcasts
    and YouTube channel is the diversification of the computer science field, and
    to bring the subject to a wider audience that may not always consider it an option
    to pursue. Towards the end of our chat, our guest shares some thoughts on useful
    resources to check out, and his desire to help the Elixir community to continue
    to grow!\nKey Points From This Episode:\nOpening remarks and rants from Adolfo
    regarding Livebook!\nAdolfo's route into teaching and how he became a university
    professor. \nInformation on Adolfo's Ph.D. program which he completed at the University
    of São Paulo.\nThe initial impetus to study computer science; what drew Adolfo
    to the field. \nAdolfo's YouTube channels and the subjects he covers for his audience.
    \ \nThe course that Adolfo offers on Elixir to students all over the world! \nHow
    Adolfo found and learned about functional programming. \nAdolfo's thoughts on
    the benefits of different functional programming languages.\nThe main goals that
    Adolfo has for his functional programming classes.\nAdolfo's own forays into podcasting,
    and what drew him to the medium! \nExperiences in the South; Adolfo's early days
    studying the US.\nRecommended resources for learning Elixir; the books and sites
    that Adolfo uses.\nAdolfo's hopes for Elixir to keep growing and why he prefers
    functional programming. \nHow to connect with Adolfo online and make use of some
    of his amazing content! \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nAdolfo Neto on Twitter — https://twitter.com/adolfont\nAdolfo Neto on YouTube
    — https://www.youtube.com/c/AdolfoNeto\nLivebook — https://livebook.dev/#install\nFly.io
    — https://fly.io/\nBASIC — https://en.wikipedia.org/wiki/BASIC\nML (programming
    language) — https://en.wikipedia.org/wiki/ML(programminglanguage)\nEmílias on
    Twitter — https://twitter.com/emilias_utfpr\nElixir em Foco on Twitter — https://twitter.com/elixiremfoco\nSeven
    Languages in Seven Weeks — https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\nClojure
    — https://clojure.org/\nLaurie Williams — https://collaboration.csc.ncsu.edu/laurie/\nSaša
    Jurić — https://www.theerlangelist.com/\nBrujo Benavides on LinkedIn — https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es\nElixir
    School — https://elixirschool.com/en/\nExercism Elixir Track — https://exercism.org/tracks/elixir\nExercism
    Erlang Track — https://exercism.org/tracks/erlang Special Guest: Adolfo Neto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+VF_5CxvJ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5c3a89b0-b7f6-4b83-aebb-af04520dba3e.mp3
    length: '69309578'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: Today we are joined by programmer, professor, educator, and podcaster,
      Adolfo Neto! We talk about his early attraction to computers and how this led
      to a life in education and academia.
    duration: '47:53'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5c3a89b0-b7f6-4b83-aebb-af04520dba3e/cover.jpg?v=1
    summary: "\n        <p>Today we are joined by programmer, professor, educator,
      and podcaster, Adolfo Neto! We have a fascinating conversation that continues
      our exploration of the theme of the impact of Elixir, hearing from Adolfo about
      his early attraction to computers and computer science, the decision to study
      the subject, and how this led to a life in education and academia. We also talk
      about growing up in Brazil and how geography influenced his career trajectory,
      before getting into some of the main outlets that Adolfo uses to share information
      on functional programming. He also comments on what he loves about Elixir, why
      learning it can improve any programmer&#39;s skills, and much more. One of Adolfo&#39;s
      main goals with his podcasts and YouTube channel is the diversification of the
      computer science field, and to bring the subject to a wider audience that may
      not always consider it an option to pursue. Towards the end of our chat, our
      guest shares some thoughts on useful resources to check out, and his desire
      to help the Elixir community to continue to grow!</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>Opening remarks and rants from Adolfo regarding
      Livebook!</li>\n<li>Adolfo&#39;s route into teaching and how he became a university
      professor. </li>\n<li>Information on Adolfo&#39;s Ph.D. program which he completed
      at the University of São Paulo.</li>\n<li>The initial impetus to study computer
      science; what drew Adolfo to the field. </li>\n<li>Adolfo&#39;s YouTube channels
      and the subjects he covers for his audience.<br></li>\n<li>The course that Adolfo
      offers on Elixir to students all over the world! </li>\n<li>How Adolfo found
      and learned about functional programming. </li>\n<li>Adolfo&#39;s thoughts on
      the benefits of different functional programming languages.</li>\n<li>The main
      goals that Adolfo has for his functional programming classes.</li>\n<li>Adolfo&#39;s
      own forays into podcasting, and what drew him to the medium! </li>\n<li>Experiences
      in the South; Adolfo&#39;s early days studying the US.</li>\n<li>Recommended
      resources for learning Elixir; the books and sites that Adolfo uses.</li>\n<li>Adolfo&#39;s
      hopes for Elixir to keep growing and why he prefers functional programming.
      </li>\n<li>How to connect with Adolfo online and make use of some of his amazing
      content! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAdolfo Neto on Twitter — <a href=\"https://twitter.com/adolfont\" rel=\"nofollow\">https://twitter.com/adolfont</a><br>\nAdolfo
      Neto on YouTube — <a href=\"https://www.youtube.com/c/AdolfoNeto\" rel=\"nofollow\">https://www.youtube.com/c/AdolfoNeto</a><br>\nLivebook
      — <a href=\"https://livebook.dev/#install\" rel=\"nofollow\">https://livebook.dev/#install</a><br>\nFly.io
      — <a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\nBASIC
      — <a href=\"https://en.wikipedia.org/wiki/BASIC\" rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nML
      (programming language) — <a href=\"https://en.wikipedia.org/wiki/ML_(programming_language)\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/ML_(programming_language)</a><br>\nEmílias
      on Twitter — <a href=\"https://twitter.com/emilias_utfpr\" rel=\"nofollow\">https://twitter.com/emilias_utfpr</a><br>\nElixir
      em Foco on Twitter — <a href=\"https://twitter.com/elixiremfoco\" rel=\"nofollow\">https://twitter.com/elixiremfoco</a><br>\nSeven
      Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
      rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nLaurie
      Williams — <a href=\"https://collaboration.csc.ncsu.edu/laurie/\" rel=\"nofollow\">https://collaboration.csc.ncsu.edu/laurie/</a><br>\nSaša
      Jurić — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nBrujo
      Benavides on LinkedIn — <a href=\"https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es\"
      rel=\"nofollow\">https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nExercism
      Elixir Track — <a href=\"https://exercism.org/tracks/elixir\" rel=\"nofollow\">https://exercism.org/tracks/elixir</a><br>\nExercism
      Erlang Track — <a href=\"https://exercism.org/tracks/erlang\" rel=\"nofollow\">https://exercism.org/tracks/erlang</a></p><p>Special
      Guest: Adolfo Neto.</p>\n      "
  contentEncoded: "\n        <p>Today we are joined by programmer, professor, educator,
    and podcaster, Adolfo Neto! We have a fascinating conversation that continues
    our exploration of the theme of the impact of Elixir, hearing from Adolfo about
    his early attraction to computers and computer science, the decision to study
    the subject, and how this led to a life in education and academia. We also talk
    about growing up in Brazil and how geography influenced his career trajectory,
    before getting into some of the main outlets that Adolfo uses to share information
    on functional programming. He also comments on what he loves about Elixir, why
    learning it can improve any programmer&#39;s skills, and much more. One of Adolfo&#39;s
    main goals with his podcasts and YouTube channel is the diversification of the
    computer science field, and to bring the subject to a wider audience that may
    not always consider it an option to pursue. Towards the end of our chat, our guest
    shares some thoughts on useful resources to check out, and his desire to help
    the Elixir community to continue to grow!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Opening
    remarks and rants from Adolfo regarding Livebook!</li>\n<li>Adolfo&#39;s route
    into teaching and how he became a university professor. </li>\n<li>Information
    on Adolfo&#39;s Ph.D. program which he completed at the University of São Paulo.</li>\n<li>The
    initial impetus to study computer science; what drew Adolfo to the field. </li>\n<li>Adolfo&#39;s
    YouTube channels and the subjects he covers for his audience.<br></li>\n<li>The
    course that Adolfo offers on Elixir to students all over the world! </li>\n<li>How
    Adolfo found and learned about functional programming. </li>\n<li>Adolfo&#39;s
    thoughts on the benefits of different functional programming languages.</li>\n<li>The
    main goals that Adolfo has for his functional programming classes.</li>\n<li>Adolfo&#39;s
    own forays into podcasting, and what drew him to the medium! </li>\n<li>Experiences
    in the South; Adolfo&#39;s early days studying the US.</li>\n<li>Recommended resources
    for learning Elixir; the books and sites that Adolfo uses.</li>\n<li>Adolfo&#39;s
    hopes for Elixir to keep growing and why he prefers functional programming. </li>\n<li>How
    to connect with Adolfo online and make use of some of his amazing content! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAdolfo Neto on Twitter — <a
    href=\"https://twitter.com/adolfont\" rel=\"nofollow\">https://twitter.com/adolfont</a><br>\nAdolfo
    Neto on YouTube — <a href=\"https://www.youtube.com/c/AdolfoNeto\" rel=\"nofollow\">https://www.youtube.com/c/AdolfoNeto</a><br>\nLivebook
    — <a href=\"https://livebook.dev/#install\" rel=\"nofollow\">https://livebook.dev/#install</a><br>\nFly.io
    — <a href=\"https://fly.io/\" rel=\"nofollow\">https://fly.io/</a><br>\nBASIC
    — <a href=\"https://en.wikipedia.org/wiki/BASIC\" rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nML
    (programming language) — <a href=\"https://en.wikipedia.org/wiki/ML_(programming_language)\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/ML_(programming_language)</a><br>\nEmílias
    on Twitter — <a href=\"https://twitter.com/emilias_utfpr\" rel=\"nofollow\">https://twitter.com/emilias_utfpr</a><br>\nElixir
    em Foco on Twitter — <a href=\"https://twitter.com/elixiremfoco\" rel=\"nofollow\">https://twitter.com/elixiremfoco</a><br>\nSeven
    Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
    rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nLaurie
    Williams — <a href=\"https://collaboration.csc.ncsu.edu/laurie/\" rel=\"nofollow\">https://collaboration.csc.ncsu.edu/laurie/</a><br>\nSaša
    Jurić — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nBrujo
    Benavides on LinkedIn — <a href=\"https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es\"
    rel=\"nofollow\">https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nExercism
    Elixir Track — <a href=\"https://exercism.org/tracks/elixir\" rel=\"nofollow\">https://exercism.org/tracks/elixir</a><br>\nExercism
    Erlang Track — <a href=\"https://exercism.org/tracks/erlang\" rel=\"nofollow\">https://exercism.org/tracks/erlang</a></p><p>Special
    Guest: Adolfo Neto.</p>\n      "
- title: The Benefits of Consistently Growing Your Toolset with Florian Kraft
  slug: s7e3-kraft
  link: https://smartlogic.io/podcast/elixir-wizards/s7e3-kraft
  guid: e7dec128-99fe-4b5f-9f1c-0844b6424558
  pubDate: Thu, 18 Nov 2021 06:00:00 -0500
  pubDateFriendly: November 18, 2021
  description: "As we continue this season of the podcast, focusing on the impact
    of Elixir, we are joined by Florian Kraft, all the way from Berlin, Germany! Florian
    works as a software engineer at Contentful, and has a number of exciting open-source
    projects that he is currently involved with. In our fun conversation with Florian,
    we get to hear about the events that led up to him becoming interested in computers
    and working with software, and why he maintains a light-hearted attitude when
    talking about his expertise. We also get to hear from our guest about his thoughts
    on a few other languages, and why learning new languages is a great way to constantly
    improve your work in the languages you already know! Florian talks about what
    drew him to Elixir and the community and also shares some of his reflections from
    this year's virtual Elixir Wizards conference. Towards the end of our chat, Florian
    tells us about his work with AdoptOSS and Mimicry, which you can currently find
    on GitHub, both of which we are quite excited about! So to hear it all from Florian
    and our usual suspects, be sure to listen in!\nKey Points From This Episode:\nFlorian's
    interesting route into the world of software engineering. \nHow Florian views
    his experiences and skills as a software engineer. \nFlorian's thoughts on Haskell
    and some of the best resources for learning about it.\nThe languages that Florian
    uses in his work at Contentful. \nExperiences entering into the Elixir community
    and the colleague who introduced him to the language! \nLife in Germany and Berlin;
    thoughts on the seasons, and the general culture. \nFlorian's experiences at this
    year's Elixir Wizards conference; warming to virtual events. \nStaying active
    in the Elixir community and Florian's honest confessions about the time he puts
    in. \nFeatures that Florian misses and wishes for when working in Elixir. \nImmutability
    and pattern matching: Florian's favorite parts of Elixir!\nSome of the open-source
    Elixir projects that Florian is currently working on.\nThe video games that Florian
    has most enjoyed recently and some of his all-time favorites!  \nWhere to find
    and connect with Florian and his exciting projects!\nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nFlorian Kraft — github.com/FlorianK\nContentful
    — https://www.contentful.com/\nExercism — https://exercism.org/\nAdoptoposs —
    https://adoptoposs.org\nAdoptoposs Github — https://github.com/adoptoposs/adoptoposs\nMimicry
    — https://github.com/mimicry-tech/mimicry\nLearn You a Haskell for Great Good
    — https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839\nHaskell —
    https://www.haskell.org/\nProlog — https://www.cpp.edu/~jrfisher/www/prologtutorial/ptframer.html\nLearn
    You Some Erlang for Great Good — https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351\nElixir
    in Action, Second Edition — https://www.manning.com/books/elixir-in-action-second-edition\nGleam
    — https://gleam.run/\nAutobutler — https://autobutler.co.uk \nSquid Game — https://www.rottentomatoes.com/tv/squidgame\nOktoberfest
    — https://www.imdb.com/title/tt10244612/\nToucan — https://www.toucan.events/\nThe
    Binding of Isaac — https://store.steampowered.com/app/113200/TheBindingofIsaac/\nZelda
    — https://www.zelda.com/\nDoom — https://bethesda.net/en/game/doom\nDefragmenting
    C Drive — http://hultbergs.org/defrag/ Special Guest: Florian Kraft.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qUiKD6Yg
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e7dec128-99fe-4b5f-9f1c-0844b6424558.mp3
    length: '47010995'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: As we continue this season of the podcast, we are joined by Florian
      Kraft. Florian works as a software engineer at Contentful, and has a number
      of exciting open-source projects that he is currently involved with.
    duration: '48:52'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e7dec128-99fe-4b5f-9f1c-0844b6424558/cover.jpg?v=1
    summary: "\n        <p>As we continue this season of the podcast, focusing on
      the impact of Elixir, we are joined by Florian Kraft, all the way from Berlin,
      Germany! Florian works as a software engineer at Contentful, and has a number
      of exciting open-source projects that he is currently involved with. In our
      fun conversation with Florian, we get to hear about the events that led up to
      him becoming interested in computers and working with software, and why he maintains
      a light-hearted attitude when talking about his expertise. We also get to hear
      from our guest about his thoughts on a few other languages, and why learning
      new languages is a great way to constantly improve your work in the languages
      you already know! Florian talks about what drew him to Elixir and the community
      and also shares some of his reflections from this year&#39;s virtual Elixir
      Wizards conference. Towards the end of our chat, Florian tells us about his
      work with AdoptOSS and Mimicry, which you can currently find on GitHub, both
      of which we are quite excited about! So to hear it all from Florian and our
      usual suspects, be sure to listen in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Florian&#39;s
      interesting route into the world of software engineering. </li>\n<li>How Florian
      views his experiences and skills as a software engineer. </li>\n<li>Florian&#39;s
      thoughts on Haskell and some of the best resources for learning about it.</li>\n<li>The
      languages that Florian uses in his work at Contentful. </li>\n<li>Experiences
      entering into the Elixir community and the colleague who introduced him to the
      language! </li>\n<li>Life in Germany and Berlin; thoughts on the seasons, and
      the general culture. </li>\n<li>Florian&#39;s experiences at this year&#39;s
      Elixir Wizards conference; warming to virtual events. </li>\n<li>Staying active
      in the Elixir community and Florian&#39;s honest confessions about the time
      he puts in. </li>\n<li>Features that Florian misses and wishes for when working
      in Elixir. </li>\n<li>Immutability and pattern matching: Florian&#39;s favorite
      parts of Elixir!</li>\n<li>Some of the open-source Elixir projects that Florian
      is currently working on.</li>\n<li>The video games that Florian has most enjoyed
      recently and some of his all-time favorites!<br></li>\n<li>Where to find and
      connect with Florian and his exciting projects!</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nFlorian Kraft — github.com/FlorianK<br>\nContentful
      — <a href=\"https://www.contentful.com/\" rel=\"nofollow\">https://www.contentful.com/</a><br>\nExercism
      — <a href=\"https://exercism.org/\" rel=\"nofollow\">https://exercism.org/</a><br>\nAdoptoposs
      — <a href=\"https://adoptoposs.org\" rel=\"nofollow\">https://adoptoposs.org</a><br>\nAdoptoposs
      Github — <a href=\"https://github.com/adoptoposs/adoptoposs\" rel=\"nofollow\">https://github.com/adoptoposs/adoptoposs</a><br>\nMimicry
      — <a href=\"https://github.com/mimicry-tech/mimicry\" rel=\"nofollow\">https://github.com/mimicry-tech/mimicry</a><br>\nLearn
      You a Haskell for Great Good — <a href=\"https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839\"
      rel=\"nofollow\">https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nProlog
      — <a href=\"https://www.cpp.edu/%7Ejrfisher/www/prolog_tutorial/pt_framer.html\"
      rel=\"nofollow\">https://www.cpp.edu/~jrfisher/www/prolog_tutorial/pt_framer.html</a><br>\nLearn
      You Some Erlang for Great Good — <a href=\"https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351\"
      rel=\"nofollow\">https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351</a><br>\nElixir
      in Action, Second Edition — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nAutobutler
      — <a href=\"https://autobutler.co.uk\" rel=\"nofollow\">https://autobutler.co.uk</a>
      <br>\nSquid Game — <a href=\"https://www.rottentomatoes.com/tv/squid_game\"
      rel=\"nofollow\">https://www.rottentomatoes.com/tv/squid_game</a><br>\nOktoberfest
      — <a href=\"https://www.imdb.com/title/tt10244612/\" rel=\"nofollow\">https://www.imdb.com/title/tt10244612/</a><br>\nToucan
      — <a href=\"https://www.toucan.events/\" rel=\"nofollow\">https://www.toucan.events/</a><br>\nThe
      Binding of Isaac — <a href=\"https://store.steampowered.com/app/113200/The_Binding_of_Isaac/\"
      rel=\"nofollow\">https://store.steampowered.com/app/113200/The_Binding_of_Isaac/</a><br>\nZelda
      — <a href=\"https://www.zelda.com/\" rel=\"nofollow\">https://www.zelda.com/</a><br>\nDoom
      — <a href=\"https://bethesda.net/en/game/doom\" rel=\"nofollow\">https://bethesda.net/en/game/doom</a><br>\nDefragmenting
      C Drive — <a href=\"http://hultbergs.org/defrag/\" rel=\"nofollow\">http://hultbergs.org/defrag/</a></p><p>Special
      Guest: Florian Kraft.</p>\n      "
  contentEncoded: "\n        <p>As we continue this season of the podcast, focusing
    on the impact of Elixir, we are joined by Florian Kraft, all the way from Berlin,
    Germany! Florian works as a software engineer at Contentful, and has a number
    of exciting open-source projects that he is currently involved with. In our fun
    conversation with Florian, we get to hear about the events that led up to him
    becoming interested in computers and working with software, and why he maintains
    a light-hearted attitude when talking about his expertise. We also get to hear
    from our guest about his thoughts on a few other languages, and why learning new
    languages is a great way to constantly improve your work in the languages you
    already know! Florian talks about what drew him to Elixir and the community and
    also shares some of his reflections from this year&#39;s virtual Elixir Wizards
    conference. Towards the end of our chat, Florian tells us about his work with
    AdoptOSS and Mimicry, which you can currently find on GitHub, both of which we
    are quite excited about! So to hear it all from Florian and our usual suspects,
    be sure to listen in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Florian&#39;s
    interesting route into the world of software engineering. </li>\n<li>How Florian
    views his experiences and skills as a software engineer. </li>\n<li>Florian&#39;s
    thoughts on Haskell and some of the best resources for learning about it.</li>\n<li>The
    languages that Florian uses in his work at Contentful. </li>\n<li>Experiences
    entering into the Elixir community and the colleague who introduced him to the
    language! </li>\n<li>Life in Germany and Berlin; thoughts on the seasons, and
    the general culture. </li>\n<li>Florian&#39;s experiences at this year&#39;s Elixir
    Wizards conference; warming to virtual events. </li>\n<li>Staying active in the
    Elixir community and Florian&#39;s honest confessions about the time he puts in.
    </li>\n<li>Features that Florian misses and wishes for when working in Elixir.
    </li>\n<li>Immutability and pattern matching: Florian&#39;s favorite parts of
    Elixir!</li>\n<li>Some of the open-source Elixir projects that Florian is currently
    working on.</li>\n<li>The video games that Florian has most enjoyed recently and
    some of his all-time favorites!<br></li>\n<li>Where to find and connect with Florian
    and his exciting projects!</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nFlorian Kraft — github.com/FlorianK<br>\nContentful — <a href=\"https://www.contentful.com/\"
    rel=\"nofollow\">https://www.contentful.com/</a><br>\nExercism — <a href=\"https://exercism.org/\"
    rel=\"nofollow\">https://exercism.org/</a><br>\nAdoptoposs — <a href=\"https://adoptoposs.org\"
    rel=\"nofollow\">https://adoptoposs.org</a><br>\nAdoptoposs Github — <a href=\"https://github.com/adoptoposs/adoptoposs\"
    rel=\"nofollow\">https://github.com/adoptoposs/adoptoposs</a><br>\nMimicry — <a
    href=\"https://github.com/mimicry-tech/mimicry\" rel=\"nofollow\">https://github.com/mimicry-tech/mimicry</a><br>\nLearn
    You a Haskell for Great Good — <a href=\"https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839\"
    rel=\"nofollow\">https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nProlog
    — <a href=\"https://www.cpp.edu/%7Ejrfisher/www/prolog_tutorial/pt_framer.html\"
    rel=\"nofollow\">https://www.cpp.edu/~jrfisher/www/prolog_tutorial/pt_framer.html</a><br>\nLearn
    You Some Erlang for Great Good — <a href=\"https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351\"
    rel=\"nofollow\">https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351</a><br>\nElixir
    in Action, Second Edition — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nAutobutler
    — <a href=\"https://autobutler.co.uk\" rel=\"nofollow\">https://autobutler.co.uk</a>
    <br>\nSquid Game — <a href=\"https://www.rottentomatoes.com/tv/squid_game\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/squid_game</a><br>\nOktoberfest
    — <a href=\"https://www.imdb.com/title/tt10244612/\" rel=\"nofollow\">https://www.imdb.com/title/tt10244612/</a><br>\nToucan
    — <a href=\"https://www.toucan.events/\" rel=\"nofollow\">https://www.toucan.events/</a><br>\nThe
    Binding of Isaac — <a href=\"https://store.steampowered.com/app/113200/The_Binding_of_Isaac/\"
    rel=\"nofollow\">https://store.steampowered.com/app/113200/The_Binding_of_Isaac/</a><br>\nZelda
    — <a href=\"https://www.zelda.com/\" rel=\"nofollow\">https://www.zelda.com/</a><br>\nDoom
    — <a href=\"https://bethesda.net/en/game/doom\" rel=\"nofollow\">https://bethesda.net/en/game/doom</a><br>\nDefragmenting
    C Drive — <a href=\"http://hultbergs.org/defrag/\" rel=\"nofollow\">http://hultbergs.org/defrag/</a></p><p>Special
    Guest: Florian Kraft.</p>\n      "
- title: Re-Platforming One of the Original Dot Coms in Elixir with Angel Jose
  slug: s7e2-jose
  link: https://smartlogic.io/podcast/elixir-wizards/s7e2-jose
  guid: 196446c8-44e8-4c34-86c8-a688bfb3f706
  pubDate: Thu, 11 Nov 2021 06:00:00 -0500
  pubDateFriendly: November 11, 2021
  description: "Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com
    with a passion for product and the customer experience. Angel played a key role
    in completely re-platforming Cars.com via Elixir, Phoenix, and other open source
    tooling, and his former adventures in the blockchain space include working with
    ETH, EOS, and general distributed tooling. In today’s episode, we discuss Cars.com's
    decision to migrate to an entirely Elixir-based system, rebuilding the data model
    from scratch, redesigning all of the user interfaces, and what that meant for
    the team that Angel was tasked with leading, as well as how the Elixir system
    functions at such incredible scale, with Cars.com receiving more than a million
    visitors daily! We touch on Angel’s approach to onboarding new engineers, how
    Elixir impacts this process, and the broader impact Elixir has on the community
    as a whole, as well as what he hopes to see from the community in the future,
    so make sure not to miss this awesome conversation about adopting Elixir with
    Angel Jose! \nKey Points From This Episode:\nHot takes, rants, and obsessions:
    Angel’s best and worst taco experiences.\nWhy Angel won’t be at ElixirConf 2021
    and the story of how he began programming in Elixir.\nThe process of finding a
    job in software engineering after completing an online bootcamp.\nAngel’s experience
    of navigating the freedom that comes with being an engineer.\nFind out how Angel
    got involved in re-platforming Cars.com, one of the original dot coms. \nGet a
    glimpse into the make up of the engineering team at Cars.com.\nHow the pandemic
    impacted not only Angel’s deadlines but the car industry as a whole.\nThe ETL
    pipeline of different data points that makes up Cars.com and Auto.com.\nAngel
    shares his opinion of LiveView and what he has learned about using it at scale.\nAdvice
    for those adopting new technology: make sure there are enough resources out there.\nWhere
    Angel believes his team would be without Elixir and what they are looking forward
    to.\nSome of the tangible benefits Cars.com has seen from flipping the switch
    to Elixir.\nHow Angel approaches onboarding new engineers by providing them with
    resources and integrating learning into their day-to-day.\nThe importance of celebrating
    small wins and fostering feelings of accomplishment.\nAngel on how Elixir impacts
    onboarding and new engineers; more simplicity, less magic.\nHow Elixir has impacted
    the programming community and what Angel hopes to see in future.\nTaco happy hour,
    conference food, making the most of each meal, remote work, and more!\nWhat Angel
    has learned from working remotely, particularly from a social perspective.\nAngel
    shares his dream car after working at Cars.com and moving to Colorado.\nLinks
    Mentioned in Today’s Episode:\nAngel Jose on LinkedIn — https://www.linkedin.com/in/ajose01/\nAngel
    Jose on Twitter — https://twitter.com/ajose01\nCars.com — https://www.cars.com/\nCars.com
    Careers — https://www.cars.com/careers/\nElixir Conf — https://2021.elixirconf.com/\nElixir
    Slack — https://elixir-slackin.herokuapp.com/\nGeneral Assembly — https://generalassemb.ly/\nSmartLogic
    — https://smartlogic.io/  Special Guest: Angel Jose.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+sH54rwhi
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/196446c8-44e8-4c34-86c8-a688bfb3f706.mp3
    length: '69371510'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com.
      He played a key role in completely re-platforming Cars.com via Elixir, Phoenix,
      and other open source tooling,
    duration: '47:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/196446c8-44e8-4c34-86c8-a688bfb3f706/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Angel Jose, a Software Engineer Manager
      at Cars.com with a passion for product and the customer experience. Angel played
      a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other
      open source tooling, and his former adventures in the blockchain space include
      working with ETH, EOS, and general distributed tooling. In today’s episode,
      we discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system,
      rebuilding the data model from scratch, redesigning all of the user interfaces,
      and what that meant for the team that Angel was tasked with leading, as well
      as how the Elixir system functions at such incredible scale, with Cars.com receiving
      more than a million visitors daily! We touch on Angel’s approach to onboarding
      new engineers, how Elixir impacts this process, and the broader impact Elixir
      has on the community as a whole, as well as what he hopes to see from the community
      in the future, so make sure not to miss this awesome conversation about adopting
      Elixir with Angel Jose! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hot
      takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>\n<li>Why
      Angel won’t be at ElixirConf 2021 and the story of how he began programming
      in Elixir.</li>\n<li>The process of finding a job in software engineering after
      completing an online bootcamp.</li>\n<li>Angel’s experience of navigating the
      freedom that comes with being an engineer.</li>\n<li>Find out how Angel got
      involved in re-platforming Cars.com, one of the original dot coms. </li>\n<li>Get
      a glimpse into the make up of the engineering team at Cars.com.</li>\n<li>How
      the pandemic impacted not only Angel’s deadlines but the car industry as a whole.</li>\n<li>The
      ETL pipeline of different data points that makes up Cars.com and Auto.com.</li>\n<li>Angel
      shares his opinion of LiveView and what he has learned about using it at scale.</li>\n<li>Advice
      for those adopting new technology: make sure there are enough resources out
      there.</li>\n<li>Where Angel believes his team would be without Elixir and what
      they are looking forward to.</li>\n<li>Some of the tangible benefits Cars.com
      has seen from flipping the switch to Elixir.</li>\n<li>How Angel approaches
      onboarding new engineers by providing them with resources and integrating learning
      into their day-to-day.</li>\n<li>The importance of celebrating small wins and
      fostering feelings of accomplishment.</li>\n<li>Angel on how Elixir impacts
      onboarding and new engineers; more simplicity, less magic.</li>\n<li>How Elixir
      has impacted the programming community and what Angel hopes to see in future.</li>\n<li>Taco
      happy hour, conference food, making the most of each meal, remote work, and
      more!</li>\n<li>What Angel has learned from working remotely, particularly from
      a social perspective.</li>\n<li>Angel shares his dream car after working at
      Cars.com and moving to Colorado.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Angel Jose on LinkedIn — <a href=\"https://www.linkedin.com/in/ajose01/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ajose01/</a><br>\nAngel Jose on
      Twitter — <a href=\"https://twitter.com/ajose01\" rel=\"nofollow\">https://twitter.com/ajose01</a><br>\nCars.com
      — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nCars.com
      Careers — <a href=\"https://www.cars.com/careers/\" rel=\"nofollow\">https://www.cars.com/careers/</a><br>\nElixir
      Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nElixir
      Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nGeneral
      Assembly — <a href=\"https://generalassemb.ly/\" rel=\"nofollow\">https://generalassemb.ly/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Angel Jose.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Angel Jose, a Software Engineer Manager
    at Cars.com with a passion for product and the customer experience. Angel played
    a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other
    open source tooling, and his former adventures in the blockchain space include
    working with ETH, EOS, and general distributed tooling. In today’s episode, we
    discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system,
    rebuilding the data model from scratch, redesigning all of the user interfaces,
    and what that meant for the team that Angel was tasked with leading, as well as
    how the Elixir system functions at such incredible scale, with Cars.com receiving
    more than a million visitors daily! We touch on Angel’s approach to onboarding
    new engineers, how Elixir impacts this process, and the broader impact Elixir
    has on the community as a whole, as well as what he hopes to see from the community
    in the future, so make sure not to miss this awesome conversation about adopting
    Elixir with Angel Jose! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hot
    takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>\n<li>Why
    Angel won’t be at ElixirConf 2021 and the story of how he began programming in
    Elixir.</li>\n<li>The process of finding a job in software engineering after completing
    an online bootcamp.</li>\n<li>Angel’s experience of navigating the freedom that
    comes with being an engineer.</li>\n<li>Find out how Angel got involved in re-platforming
    Cars.com, one of the original dot coms. </li>\n<li>Get a glimpse into the make
    up of the engineering team at Cars.com.</li>\n<li>How the pandemic impacted not
    only Angel’s deadlines but the car industry as a whole.</li>\n<li>The ETL pipeline
    of different data points that makes up Cars.com and Auto.com.</li>\n<li>Angel
    shares his opinion of LiveView and what he has learned about using it at scale.</li>\n<li>Advice
    for those adopting new technology: make sure there are enough resources out there.</li>\n<li>Where
    Angel believes his team would be without Elixir and what they are looking forward
    to.</li>\n<li>Some of the tangible benefits Cars.com has seen from flipping the
    switch to Elixir.</li>\n<li>How Angel approaches onboarding new engineers by providing
    them with resources and integrating learning into their day-to-day.</li>\n<li>The
    importance of celebrating small wins and fostering feelings of accomplishment.</li>\n<li>Angel
    on how Elixir impacts onboarding and new engineers; more simplicity, less magic.</li>\n<li>How
    Elixir has impacted the programming community and what Angel hopes to see in future.</li>\n<li>Taco
    happy hour, conference food, making the most of each meal, remote work, and more!</li>\n<li>What
    Angel has learned from working remotely, particularly from a social perspective.</li>\n<li>Angel
    shares his dream car after working at Cars.com and moving to Colorado.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Angel Jose on LinkedIn — <a href=\"https://www.linkedin.com/in/ajose01/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ajose01/</a><br>\nAngel Jose on Twitter
    — <a href=\"https://twitter.com/ajose01\" rel=\"nofollow\">https://twitter.com/ajose01</a><br>\nCars.com
    — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nCars.com
    Careers — <a href=\"https://www.cars.com/careers/\" rel=\"nofollow\">https://www.cars.com/careers/</a><br>\nElixir
    Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nElixir
    Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nGeneral
    Assembly — <a href=\"https://generalassemb.ly/\" rel=\"nofollow\">https://generalassemb.ly/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Angel Jose.</p>\n      "
- title: The Impact of Elixir Launchisode
  slug: s7e1-launchisode
  link: https://smartlogic.io/podcast/elixir-wizards/s7e1-launchisode
  guid: 6610fc7c-e295-43f4-b542-40847c96f358
  pubDate: Thu, 04 Nov 2021 06:00:00 -0400
  pubDateFriendly: November  4, 2021
  description: "As we kick off our new, seventh season of the Elixir Wizards podcast,
    we wanted to introduce our theme of the impact of Elixir by having a simple chat
    between our panel and foregoing our usual guest format. As fans of podcasts ourselves,
    we always like to get to know some of the personalities behind the voices, so
    we decided to take this opportunity to do just that, with Alex, Sundi, and Eric!
    So to hear a little about what to expect in the coming weeks of the show, what
    the teams have been up to recently, both professionally and beyond, and to just
    enjoy a quick hangout with some friendly voices, make sure you tune into this
    launchisode!\nKey Points From This Episode:\nWhat our team has been up to recently:
    new projects, the apprentice program, and more. \nReflections on this iteration
    of the apprentice program and differences from 2018.  \nThe recent ElixirConf
    and how our panel was involved in the event.\nInside information that is shared
    at conferences and learning about the world!\nAvoiding the pressure to always
    do more while engaging in the community.\nNoting the impact that Elixir has had
    on each of us, and how we write code respectively. \nProactive learning and career
    growth; looking forward to the new season exploring these subjects! \nStaying
    focused on what's important, getting rest, and pursuing passions.\nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nAino — https://github.com/oestrich/aino\nAino
    Read Me — https://ainoweb.dev/readme.html\nKing Tooth — https://www.instagram.com/kingtoothpug/\nSmartLogic
    Apprenticeship Program — https://smartlogic.io/about/community/apprentice/\nSmartLogic
    Welcomes Two New Developer Apprentices to the Team! — https://smartlogic.io/blog/2021apprentices/\nElixir
    Conf — https://2021.elixirconf.com/\nCulttt — https://www.culttt.com/\nShrek —
    https://www.rottentomatoes.com/m/shrek\nKangaroo Jack — https://www.rottentomatoes.com/m/kangaroojack\nKorn
    — https://www.kornofficial.com/\nFlutter — https://flutter.dev/docs/resources/books\nLonestar
    Elixir — https://lonestarelixir.com/ \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9azQuBd5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6610fc7c-e295-43f4-b542-40847c96f358.mp3
    length: '56531123'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '7'
    author: SmartLogic LLC
    subtitle: As we kick off our new, seventh season of the Elixir Wizards podcast,
      we wanted to introduce our theme of the impact of Elixir by having a simple
      chat between our panel and foregoing our usual guest format.
    duration: '58:47'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6610fc7c-e295-43f4-b542-40847c96f358/cover.jpg?v=1
    summary: "\n        <p>As we kick off our new, seventh season of the Elixir Wizards
      podcast, we wanted to introduce our theme of the impact of Elixir by having
      a simple chat between our panel and foregoing our usual guest format. As fans
      of podcasts ourselves, we always like to get to know some of the personalities
      behind the voices, so we decided to take this opportunity to do just that, with
      Alex, Sundi, and Eric! So to hear a little about what to expect in the coming
      weeks of the show, what the teams have been up to recently, both professionally
      and beyond, and to just enjoy a quick hangout with some friendly voices, make
      sure you tune into this launchisode!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
      our team has been up to recently: new projects, the apprentice program, and
      more. </li>\n<li>Reflections on this iteration of the apprentice program and
      differences from 2018.<br></li>\n<li>The recent ElixirConf and how our panel
      was involved in the event.</li>\n<li>Inside information that is shared at conferences
      and learning about the world!</li>\n<li>Avoiding the pressure to always do more
      while engaging in the community.</li>\n<li>Noting the impact that Elixir has
      had on each of us, and how we write code respectively. </li>\n<li>Proactive
      learning and career growth; looking forward to the new season exploring these
      subjects! </li>\n<li>Staying focused on what&#39;s important, getting rest,
      and pursuing passions.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAino — <a href=\"https://github.com/oestrich/aino\" rel=\"nofollow\">https://github.com/oestrich/aino</a><br>\nAino
      Read Me — <a href=\"https://ainoweb.dev/readme.html\" rel=\"nofollow\">https://ainoweb.dev/readme.html</a><br>\nKing
      Tooth — <a href=\"https://www.instagram.com/kingtooth_pug/\" rel=\"nofollow\">https://www.instagram.com/kingtooth_pug/</a><br>\nSmartLogic
      Apprenticeship Program — <a href=\"https://smartlogic.io/about/community/apprentice/\"
      rel=\"nofollow\">https://smartlogic.io/about/community/apprentice/</a><br>\nSmartLogic
      Welcomes Two New Developer Apprentices to the Team! — <a href=\"https://smartlogic.io/blog/2021apprentices/\"
      rel=\"nofollow\">https://smartlogic.io/blog/2021apprentices/</a><br>\nElixir
      Conf — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nCulttt
      — <a href=\"https://www.culttt.com/\" rel=\"nofollow\">https://www.culttt.com/</a><br>\nShrek
      — <a href=\"https://www.rottentomatoes.com/m/shrek\" rel=\"nofollow\">https://www.rottentomatoes.com/m/shrek</a><br>\nKangaroo
      Jack — <a href=\"https://www.rottentomatoes.com/m/kangaroo_jack\" rel=\"nofollow\">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>\nKorn
      — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nFlutter
      — <a href=\"https://flutter.dev/docs/resources/books\" rel=\"nofollow\">https://flutter.dev/docs/resources/books</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p>\n
      \     "
  contentEncoded: "\n        <p>As we kick off our new, seventh season of the Elixir
    Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having
    a simple chat between our panel and foregoing our usual guest format. As fans
    of podcasts ourselves, we always like to get to know some of the personalities
    behind the voices, so we decided to take this opportunity to do just that, with
    Alex, Sundi, and Eric! So to hear a little about what to expect in the coming
    weeks of the show, what the teams have been up to recently, both professionally
    and beyond, and to just enjoy a quick hangout with some friendly voices, make
    sure you tune into this launchisode!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
    our team has been up to recently: new projects, the apprentice program, and more.
    </li>\n<li>Reflections on this iteration of the apprentice program and differences
    from 2018.<br></li>\n<li>The recent ElixirConf and how our panel was involved
    in the event.</li>\n<li>Inside information that is shared at conferences and learning
    about the world!</li>\n<li>Avoiding the pressure to always do more while engaging
    in the community.</li>\n<li>Noting the impact that Elixir has had on each of us,
    and how we write code respectively. </li>\n<li>Proactive learning and career growth;
    looking forward to the new season exploring these subjects! </li>\n<li>Staying
    focused on what&#39;s important, getting rest, and pursuing passions.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAino — <a href=\"https://github.com/oestrich/aino\"
    rel=\"nofollow\">https://github.com/oestrich/aino</a><br>\nAino Read Me — <a href=\"https://ainoweb.dev/readme.html\"
    rel=\"nofollow\">https://ainoweb.dev/readme.html</a><br>\nKing Tooth — <a href=\"https://www.instagram.com/kingtooth_pug/\"
    rel=\"nofollow\">https://www.instagram.com/kingtooth_pug/</a><br>\nSmartLogic
    Apprenticeship Program — <a href=\"https://smartlogic.io/about/community/apprentice/\"
    rel=\"nofollow\">https://smartlogic.io/about/community/apprentice/</a><br>\nSmartLogic
    Welcomes Two New Developer Apprentices to the Team! — <a href=\"https://smartlogic.io/blog/2021apprentices/\"
    rel=\"nofollow\">https://smartlogic.io/blog/2021apprentices/</a><br>\nElixir Conf
    — <a href=\"https://2021.elixirconf.com/\" rel=\"nofollow\">https://2021.elixirconf.com/</a><br>\nCulttt
    — <a href=\"https://www.culttt.com/\" rel=\"nofollow\">https://www.culttt.com/</a><br>\nShrek
    — <a href=\"https://www.rottentomatoes.com/m/shrek\" rel=\"nofollow\">https://www.rottentomatoes.com/m/shrek</a><br>\nKangaroo
    Jack — <a href=\"https://www.rottentomatoes.com/m/kangaroo_jack\" rel=\"nofollow\">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>\nKorn
    — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nFlutter
    — <a href=\"https://flutter.dev/docs/resources/books\" rel=\"nofollow\">https://flutter.dev/docs/resources/books</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p>\n
    \     "
- title: Wrapping up BEAM Magic with Amos King
  slug: s6e12-king
  link: https://smartlogic.io/podcast/elixir-wizards/s6e12-king
  guid: 5bcca27a-dc98-4584-a152-84f4b04ee0d5
  pubDate: Thu, 26 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 26, 2021
  description: "We have reached the final episode of our season, and as we wrap up
    our exploration of BEAM magic, we are joined by Amos King, whose tweet was the
    inspiration behind this season's focus! We've had such a great time this season
    and hope that our listeners have enjoyed it as much as we have, and gained something
    in the process. Our conversation with Amos jumps around from exploring his experiences
    during the last year and a half, to the journey he has been on with his company,
    Binary Noggin, life as a CEO, and much more! We delve into some thoughts from
    our guest about the relationship between magic and understanding and also talk
    a little about this year's upcoming ElixirConf, where Amos will be speaking. Amos
    also shares how learning a new language can help the coding you do in languages
    you already know, and tells an interesting story about how he turned a long commute
    into a superpower! So stay tuned for Season 7, coming to you soon, and thank you
    for sticking with us this long!\nKey Points From This Episode:\nLooking forward
    to this year's ElixirConf and the hope that it will proceed.\nAmos' return to
    the office after three months of working from home.\nA little about Binary Noggin
    and the different size clients they work with. \nThe inspiration behind the company
    name and the transition from side work to a full-time gig. \nAmos' experiences
    as a CEO during the pandemic and the surprising growth at Binary Noggin.\nHow
    Amos inspired the BEAM Magic theme for this season and his thoughts on understanding.
    \nAmos' experiences of speaking at conferences and the possibility of presenting
    about magic.  \nSome details on Amos' talk this year at ElixirConf.\nHow Amos
    was introduced to Elixir through Erlang and the things that made him love it!
    \nThe impact that learning new languages can have on your work in general. \nHow
    an extremely long commute early in Amos' career served him in unexpected ways.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic Jobs — https://smartlogic.io/about/jobs
    \nAmos King on Twitter — https://twitter.com/adkron\nBinary Noggin — https://binarynoggin.com/\nBinary
    Noggin Careers — https://binarynoggin.com/about-us/#careers\nBinary Noggin Email
    — contact@binarynoggin.com\nDirtyInformation — http://dirtyinformation.com/\nElixir
    Outlaws — https://elixiroutlaws.com/\nWallaby — https://github.com/elixir-wallaby/wallaby\nTesting
    Elixir — https://www.goodreads.com/book/show/54156353-testing-elixir Special Guest:
    Amos King.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+3ljuFMiT
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5bcca27a-dc98-4584-a152-84f4b04ee0d5.mp3
    length: '55716250'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: We have reached the final episode of our season, and as we wrap up our
      exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration
      behind this season's focus!
    duration: '57:56'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5bcca27a-dc98-4584-a152-84f4b04ee0d5/cover.jpg?v=1
    summary: "\n        <p>We have reached the final episode of our season, and as
      we wrap up our exploration of BEAM magic, we are joined by Amos King, whose
      tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such
      a great time this season and hope that our listeners have enjoyed it as much
      as we have, and gained something in the process. Our conversation with Amos
      jumps around from exploring his experiences during the last year and a half,
      to the journey he has been on with his company, Binary Noggin, life as a CEO,
      and much more! We delve into some thoughts from our guest about the relationship
      between magic and understanding and also talk a little about this year&#39;s
      upcoming ElixirConf, where Amos will be speaking. Amos also shares how learning
      a new language can help the coding you do in languages you already know, and
      tells an interesting story about how he turned a long commute into a superpower!
      So stay tuned for Season 7, coming to you soon, and thank you for sticking with
      us this long!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Looking
      forward to this year&#39;s ElixirConf and the hope that it will proceed.</li>\n<li>Amos&#39;
      return to the office after three months of working from home.</li>\n<li>A little
      about Binary Noggin and the different size clients they work with. </li>\n<li>The
      inspiration behind the company name and the transition from side work to a full-time
      gig. </li>\n<li>Amos&#39; experiences as a CEO during the pandemic and the surprising
      growth at Binary Noggin.</li>\n<li>How Amos inspired the BEAM Magic theme for
      this season and his thoughts on understanding. </li>\n<li>Amos&#39; experiences
      of speaking at conferences and the possibility of presenting about magic.<br></li>\n<li>Some
      details on Amos&#39; talk this year at ElixirConf.</li>\n<li>How Amos was introduced
      to Elixir through Erlang and the things that made him love it! </li>\n<li>The
      impact that learning new languages can have on your work in general. </li>\n<li>How
      an extremely long commute early in Amos&#39; career served him in unexpected
      ways. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      Jobs — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a>
      <br>\nAmos King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
      Noggin Careers — <a href=\"https://binarynoggin.com/about-us/#careers\" rel=\"nofollow\">https://binarynoggin.com/about-us/#careers</a><br>\nBinary
      Noggin Email — <a href=\"mailto:contact@binarynoggin.com\" rel=\"nofollow\">contact@binarynoggin.com</a><br>\nDirtyInformation
      — <a href=\"http://dirtyinformation.com/\" rel=\"nofollow\">http://dirtyinformation.com/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWallaby
      — <a href=\"https://github.com/elixir-wallaby/wallaby\" rel=\"nofollow\">https://github.com/elixir-wallaby/wallaby</a><br>\nTesting
      Elixir — <a href=\"https://www.goodreads.com/book/show/54156353-testing-elixir\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special
      Guest: Amos King.</p>\n      "
  contentEncoded: "\n        <p>We have reached the final episode of our season, and
    as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose
    tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such a
    great time this season and hope that our listeners have enjoyed it as much as
    we have, and gained something in the process. Our conversation with Amos jumps
    around from exploring his experiences during the last year and a half, to the
    journey he has been on with his company, Binary Noggin, life as a CEO, and much
    more! We delve into some thoughts from our guest about the relationship between
    magic and understanding and also talk a little about this year&#39;s upcoming
    ElixirConf, where Amos will be speaking. Amos also shares how learning a new language
    can help the coding you do in languages you already know, and tells an interesting
    story about how he turned a long commute into a superpower! So stay tuned for
    Season 7, coming to you soon, and thank you for sticking with us this long!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Looking forward to this year&#39;s
    ElixirConf and the hope that it will proceed.</li>\n<li>Amos&#39; return to the
    office after three months of working from home.</li>\n<li>A little about Binary
    Noggin and the different size clients they work with. </li>\n<li>The inspiration
    behind the company name and the transition from side work to a full-time gig.
    </li>\n<li>Amos&#39; experiences as a CEO during the pandemic and the surprising
    growth at Binary Noggin.</li>\n<li>How Amos inspired the BEAM Magic theme for
    this season and his thoughts on understanding. </li>\n<li>Amos&#39; experiences
    of speaking at conferences and the possibility of presenting about magic.<br></li>\n<li>Some
    details on Amos&#39; talk this year at ElixirConf.</li>\n<li>How Amos was introduced
    to Elixir through Erlang and the things that made him love it! </li>\n<li>The
    impact that learning new languages can have on your work in general. </li>\n<li>How
    an extremely long commute early in Amos&#39; career served him in unexpected ways.
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic Jobs
    — <a href=\"https://smartlogic.io/about/jobs\" rel=\"nofollow\">https://smartlogic.io/about/jobs</a>
    <br>\nAmos King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
    Noggin Careers — <a href=\"https://binarynoggin.com/about-us/#careers\" rel=\"nofollow\">https://binarynoggin.com/about-us/#careers</a><br>\nBinary
    Noggin Email — <a href=\"mailto:contact@binarynoggin.com\" rel=\"nofollow\">contact@binarynoggin.com</a><br>\nDirtyInformation
    — <a href=\"http://dirtyinformation.com/\" rel=\"nofollow\">http://dirtyinformation.com/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWallaby
    — <a href=\"https://github.com/elixir-wallaby/wallaby\" rel=\"nofollow\">https://github.com/elixir-wallaby/wallaby</a><br>\nTesting
    Elixir — <a href=\"https://www.goodreads.com/book/show/54156353-testing-elixir\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special
    Guest: Amos King.</p>\n      "
- title: Mini-Feature Extravaganza featuring Tyler Clemens, Elom Amouzou, Elise Navarro,
    and Jeremy Neal
  slug: s6e11-minifeatures
  link: https://smartlogic.io/podcast/elixir-wizards/s6e11-minifeatures
  guid: 332edbe7-b497-4b63-a474-8d468123d586
  pubDate: Thu, 19 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 19, 2021
  description: "This episode serves as a round-up of some of the special mini-features
    we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom
    Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with
    Elixir. Our first segment is with Tyler, who is a software developer at Jackpocket,
    where he explains what he is currently busy with and how the company is offering
    access to the lottery in more safe and convenient ways. We then move on to Elom,
    who talks about transitioning from a life in public education, and what prompted
    him to learn functional programming. Elise, who works at Zingeroo, takes us through
    her relatively new career, why she is so excited about Elixir, and the interesting
    work that is being done at her company to educate the public about the stock market.
    Lastly, Jeremy talks to us about the socially conscious agenda at Clover Food
    Lab, his personal interests in cooking and baking, and how he came to work with
    Elixir. All of our guests share helpful resources for learning, and reflections
    on their time working within Elixir -  make sure to join us to catch all this
    good stuff!\nKey Points From This Episode:\nTyler's path into software engineering
    and the first language he learned.\nWhat Jackpocket offers its customers and how
    Elixir is used within the company.\nTyler's thoughts on the perks and challenges
    associated with engineering with Elixir.  \nThe most helpful resources that Tyler
    uses when in need: Elixir Slack, books, and Elixir School!\nOnboarding and training
    in Elixir and the biggest challenges presented in this area. \nTyler's passion
    for photography and imagining an alternative career path in this direction.\nElom's
    first programming language and the subsequent transition into Elixir. \nHow Elom
    moved into working in programming from his roots in education.\nElom's perspective
    on the positives associated with adopting Elixir early on. \nResource recommendations
    from Elom for early-stage developers. \nConsidering the pros and cons of the small
    intimate Elixir community and its future.\nElom's ideal alternative career path
    and favorite book!\nElise's beginnings in programming and her move from a career
    in digital media. \nComparing Elixir with other languages; Elise weighs in with
    her experiences. \nWhat Zingeroo does and how they use Elixir to make the stock
    market more accessible through the app. \nThe benefits of using Elixir for a real-time
    app like Zingeroo. \nThe resources that have been most valuable to Elise since
    joining the community. \nElise's alternative career path, and her passion for
    teaching Pilates.  \nJeremy's educational and professional path into software
    engineering and working with Elixir.\nHow Jeremy has been using LiveView in his
    work to get a functional UI up and running. \nWhat Clover Food Lab does and how
    Elixir is used at the company and online store. \nJeremy's thoughts on a different
    career and why he would love to be a baker! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nTyler Clemens — https://www.linkedin.com/in/tylerclemens\nJackpocket
    — https://jackpocket.com/\nElixir in Action — https://www.goodreads.com/book/show/38732242-elixir-in-action\nElixir
    School — https://elixirschool.com/\nTuring School — https://turing.edu/\nPragmatic
    Bookshelf — https://pragprog.com/\nCode Flow Thinking Elixir — https://thinkingelixir.com/available-courses/code-flow/\nFrantz
    Fanon — https://www.britannica.com/biography/Frantz-Fanon\nPeau Noire, Masques
    Blancs — https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\nElise
    Navarro — https://www.linkedin.com/in/elise-navarro\nZingeroo — https://zingeroo.com/\nJeremy
    Neal — https://www.linkedin.com/in/jeremy-neal-59ba8b82\nClover Food Lab — https://www.cloverfoodlab.com/
    Special Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6D9agJe5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/332edbe7-b497-4b63-a474-8d468123d586.mp3
    length: '37052095'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: This episode serves as a round-up of some of the special mini-features
      we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom
      Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with
      Elixir.
    duration: '38:30'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/332edbe7-b497-4b63-a474-8d468123d586/cover.jpg?v=1
    summary: "\n        <p>This episode serves as a round-up of some of the special
      mini-features we have recorded throughout Season 6, where we&#39;ll hear from
      Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work
      and experiences with Elixir. Our first segment is with Tyler, who is a software
      developer at Jackpocket, where he explains what he is currently busy with and
      how the company is offering access to the lottery in more safe and convenient
      ways. We then move on to Elom, who talks about transitioning from a life in
      public education, and what prompted him to learn functional programming. Elise,
      who works at Zingeroo, takes us through her relatively new career, why she is
      so excited about Elixir, and the interesting work that is being done at her
      company to educate the public about the stock market. Lastly, Jeremy talks to
      us about the socially conscious agenda at Clover Food Lab, his personal interests
      in cooking and baking, and how he came to work with Elixir. All of our guests
      share helpful resources for learning, and reflections on their time working
      within Elixir -  make sure to join us to catch all this good stuff!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Tyler&#39;s path into software engineering
      and the first language he learned.</li>\n<li>What Jackpocket offers its customers
      and how Elixir is used within the company.</li>\n<li>Tyler&#39;s thoughts on
      the perks and challenges associated with engineering with Elixir.<br></li>\n<li>The
      most helpful resources that Tyler uses when in need: Elixir Slack, books, and
      Elixir School!</li>\n<li>Onboarding and training in Elixir and the biggest challenges
      presented in this area. </li>\n<li>Tyler&#39;s passion for photography and imagining
      an alternative career path in this direction.</li>\n<li>Elom&#39;s first programming
      language and the subsequent transition into Elixir. </li>\n<li>How Elom moved
      into working in programming from his roots in education.</li>\n<li>Elom&#39;s
      perspective on the positives associated with adopting Elixir early on. </li>\n<li>Resource
      recommendations from Elom for early-stage developers. </li>\n<li>Considering
      the pros and cons of the small intimate Elixir community and its future.</li>\n<li>Elom&#39;s
      ideal alternative career path and favorite book!</li>\n<li>Elise&#39;s beginnings
      in programming and her move from a career in digital media. </li>\n<li>Comparing
      Elixir with other languages; Elise weighs in with her experiences. </li>\n<li>What
      Zingeroo does and how they use Elixir to make the stock market more accessible
      through the app. </li>\n<li>The benefits of using Elixir for a real-time app
      like Zingeroo. </li>\n<li>The resources that have been most valuable to Elise
      since joining the community. </li>\n<li>Elise&#39;s alternative career path,
      and her passion for teaching Pilates.<br></li>\n<li>Jeremy&#39;s educational
      and professional path into software engineering and working with Elixir.</li>\n<li>How
      Jeremy has been using LiveView in his work to get a functional UI up and running.
      </li>\n<li>What Clover Food Lab does and how Elixir is used at the company and
      online store. </li>\n<li>Jeremy&#39;s thoughts on a different career and why
      he would love to be a baker! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nTyler Clemens — <a href=\"https://www.linkedin.com/in/tylerclemens\" rel=\"nofollow\">https://www.linkedin.com/in/tylerclemens</a><br>\nJackpocket
      — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nElixir
      in Action — <a href=\"https://www.goodreads.com/book/show/38732242-elixir-in-action\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/\" rel=\"nofollow\">https://elixirschool.com/</a><br>\nTuring
      School — <a href=\"https://turing.edu/\" rel=\"nofollow\">https://turing.edu/</a><br>\nPragmatic
      Bookshelf — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nCode
      Flow Thinking Elixir — <a href=\"https://thinkingelixir.com/available-courses/code-flow/\"
      rel=\"nofollow\">https://thinkingelixir.com/available-courses/code-flow/</a><br>\nFrantz
      Fanon — <a href=\"https://www.britannica.com/biography/Frantz-Fanon\" rel=\"nofollow\">https://www.britannica.com/biography/Frantz-Fanon</a><br>\nPeau
      Noire, Masques Blancs — <a href=\"https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\"
      rel=\"nofollow\">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>\nElise
      Navarro — <a href=\"https://www.linkedin.com/in/elise-navarro\" rel=\"nofollow\">https://www.linkedin.com/in/elise-navarro</a><br>\nZingeroo
      — <a href=\"https://zingeroo.com/\" rel=\"nofollow\">https://zingeroo.com/</a><br>\nJeremy
      Neal — <a href=\"https://www.linkedin.com/in/jeremy-neal-59ba8b82\" rel=\"nofollow\">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>\nClover
      Food Lab — <a href=\"https://www.cloverfoodlab.com/\" rel=\"nofollow\">https://www.cloverfoodlab.com/</a></p><p>Special
      Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>\n      "
  contentEncoded: "\n        <p>This episode serves as a round-up of some of the special
    mini-features we have recorded throughout Season 6, where we&#39;ll hear from
    Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and
    experiences with Elixir. Our first segment is with Tyler, who is a software developer
    at Jackpocket, where he explains what he is currently busy with and how the company
    is offering access to the lottery in more safe and convenient ways. We then move
    on to Elom, who talks about transitioning from a life in public education, and
    what prompted him to learn functional programming. Elise, who works at Zingeroo,
    takes us through her relatively new career, why she is so excited about Elixir,
    and the interesting work that is being done at her company to educate the public
    about the stock market. Lastly, Jeremy talks to us about the socially conscious
    agenda at Clover Food Lab, his personal interests in cooking and baking, and how
    he came to work with Elixir. All of our guests share helpful resources for learning,
    and reflections on their time working within Elixir -  make sure to join us to
    catch all this good stuff!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Tyler&#39;s
    path into software engineering and the first language he learned.</li>\n<li>What
    Jackpocket offers its customers and how Elixir is used within the company.</li>\n<li>Tyler&#39;s
    thoughts on the perks and challenges associated with engineering with Elixir.<br></li>\n<li>The
    most helpful resources that Tyler uses when in need: Elixir Slack, books, and
    Elixir School!</li>\n<li>Onboarding and training in Elixir and the biggest challenges
    presented in this area. </li>\n<li>Tyler&#39;s passion for photography and imagining
    an alternative career path in this direction.</li>\n<li>Elom&#39;s first programming
    language and the subsequent transition into Elixir. </li>\n<li>How Elom moved
    into working in programming from his roots in education.</li>\n<li>Elom&#39;s
    perspective on the positives associated with adopting Elixir early on. </li>\n<li>Resource
    recommendations from Elom for early-stage developers. </li>\n<li>Considering the
    pros and cons of the small intimate Elixir community and its future.</li>\n<li>Elom&#39;s
    ideal alternative career path and favorite book!</li>\n<li>Elise&#39;s beginnings
    in programming and her move from a career in digital media. </li>\n<li>Comparing
    Elixir with other languages; Elise weighs in with her experiences. </li>\n<li>What
    Zingeroo does and how they use Elixir to make the stock market more accessible
    through the app. </li>\n<li>The benefits of using Elixir for a real-time app like
    Zingeroo. </li>\n<li>The resources that have been most valuable to Elise since
    joining the community. </li>\n<li>Elise&#39;s alternative career path, and her
    passion for teaching Pilates.<br></li>\n<li>Jeremy&#39;s educational and professional
    path into software engineering and working with Elixir.</li>\n<li>How Jeremy has
    been using LiveView in his work to get a functional UI up and running. </li>\n<li>What
    Clover Food Lab does and how Elixir is used at the company and online store. </li>\n<li>Jeremy&#39;s
    thoughts on a different career and why he would love to be a baker! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nTyler Clemens — <a href=\"https://www.linkedin.com/in/tylerclemens\"
    rel=\"nofollow\">https://www.linkedin.com/in/tylerclemens</a><br>\nJackpocket
    — <a href=\"https://jackpocket.com/\" rel=\"nofollow\">https://jackpocket.com/</a><br>\nElixir
    in Action — <a href=\"https://www.goodreads.com/book/show/38732242-elixir-in-action\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/\" rel=\"nofollow\">https://elixirschool.com/</a><br>\nTuring
    School — <a href=\"https://turing.edu/\" rel=\"nofollow\">https://turing.edu/</a><br>\nPragmatic
    Bookshelf — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nCode
    Flow Thinking Elixir — <a href=\"https://thinkingelixir.com/available-courses/code-flow/\"
    rel=\"nofollow\">https://thinkingelixir.com/available-courses/code-flow/</a><br>\nFrantz
    Fanon — <a href=\"https://www.britannica.com/biography/Frantz-Fanon\" rel=\"nofollow\">https://www.britannica.com/biography/Frantz-Fanon</a><br>\nPeau
    Noire, Masques Blancs — <a href=\"https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014\"
    rel=\"nofollow\">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>\nElise
    Navarro — <a href=\"https://www.linkedin.com/in/elise-navarro\" rel=\"nofollow\">https://www.linkedin.com/in/elise-navarro</a><br>\nZingeroo
    — <a href=\"https://zingeroo.com/\" rel=\"nofollow\">https://zingeroo.com/</a><br>\nJeremy
    Neal — <a href=\"https://www.linkedin.com/in/jeremy-neal-59ba8b82\" rel=\"nofollow\">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>\nClover
    Food Lab — <a href=\"https://www.cloverfoodlab.com/\" rel=\"nofollow\">https://www.cloverfoodlab.com/</a></p><p>Special
    Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>\n      "
- title: Delving Deeper into Magic with Quinn Wilton
  slug: s6e10-wilton
  link: https://smartlogic.io/podcast/elixir-wizards/s6e10-wilton
  guid: 1487b980-5611-4fbc-9c58-7b4508ebefa9
  pubDate: Thu, 12 Aug 2021 06:00:00 -0400
  pubDateFriendly: August 12, 2021
  description: "Joining us on the show today is Quinn Wilton, and we have a wonderful
    conversation with our guest about her journey with Elixir, unusual path into programming,
    and her wide appreciation for different languages! We start off looking at the
    time Quinn spent at Waterloo University and what separates the Canadian ethos
    around computer science. From there, we turn to Quinn's early work in programming,
    the first proper job that she stepped into, and the immediate affinity she felt
    for working in Elixir. We also talk a bit about the interesting research that
    Quinn has been conducting privately, tracking and plotting the path of Erlang
    over the decades, while also reflecting on the skill of academic reading. We spend
    some necessary time hearing from Quinn about the BEAM and what BEAM magic means
    to her, before hearing about her website, love of Twitter,  other languages that
    currently have her excited, and the avenues she is most lit up about exploring
    in the future! Listen in to hear it all, as we continue this journey! \nKey Points
    From This Episode:\nQuinn's reflections on her education in Canada, and differences
    to the American approach to computer science. \nReasons that Quinn wanted to pursue
    a career in programming  \nThe first jobs that Quinn landed as a programmer; creating
    a Roblox game and tracking malware.\nHow Quinn was introduced to Elixir and the
    immediate love she felt for the language. \nThe recent work that Quinn has been
    busy with researching and tracing the history of Erlang.\nExperiences of reading
    academic papers and what sets it apart from other formats.\nThe inspiration behind
    Quinn's website and her affinity for Twitter's format. \nQuinn's favorite characteristics
    of the BEAM: the debugging possibilities. \nThe project that Quinn worked on using
    Gleam on the BEAM and her enjoyment of its simplicity. \nSome possible areas,
    outlined by Joe Armstrong, that Quinn is excited to explore in the near future.\nQuinn's
    huge appreciation for different programming languages and her fascination with
    Strand.\nEncouragement from Quinn to dive into reading intimidating research papers.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/jobs
    \nQuinn Wilton — https://quinnwilton.com/\nQuinn Wilton on Twitter — https://twitter.com/wiltonquinn\nQuinn
    Wilton on GitHub — https://github.com/QuinnWilton\nUniversity of Waterloo — https://uwaterloo.ca/\nRoblox
    — https://www.roblox.com/\nLookout — https://www.lookout.com/\nClint Gibler —
    https://clintgibler.com/\nGleam — https://gleam.run/\nJoe Armstrong — https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\n'Getting
    Erlang to talk to the outside world' — https://www.researchgate.net/publication/2549678GettingErlangtotalktotheoutsideworld\nUniversal
    Binary Format — https://github.com/ubf/ubf\nCLU — https://en.wikipedia.org/wiki/CLU(programminglanguage)\nStrand
    — https://en.wikipedia.org/wiki/Strand(programming_language) Special Guest: Quinn
    Wilton.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+aOpj3AP9
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1487b980-5611-4fbc-9c58-7b4508ebefa9.mp3
    length: '43192367'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: 'Today we have a wonderful conversation with Quinn Wilton about her
      journey with Elixir, unusual path into programming, and her wide appreciation
      for different languages! '
    duration: '44:54'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1487b980-5611-4fbc-9c58-7b4508ebefa9/cover.jpg?v=1
    summary: "\n        <p>Joining us on the show today is Quinn Wilton, and we have
      a wonderful conversation with our guest about her journey with Elixir, unusual
      path into programming, and her wide appreciation for different languages! We
      start off looking at the time Quinn spent at Waterloo University and what separates
      the Canadian ethos around computer science. From there, we turn to Quinn&#39;s
      early work in programming, the first proper job that she stepped into, and the
      immediate affinity she felt for working in Elixir. We also talk a bit about
      the interesting research that Quinn has been conducting privately, tracking
      and plotting the path of Erlang over the decades, while also reflecting on the
      skill of academic reading. We spend some necessary time hearing from Quinn about
      the BEAM and what BEAM magic means to her, before hearing about her website,
      love of Twitter,  other languages that currently have her excited, and the avenues
      she is most lit up about exploring in the future! Listen in to hear it all,
      as we continue this journey! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Quinn&#39;s
      reflections on her education in Canada, and differences to the American approach
      to computer science. </li>\n<li>Reasons that Quinn wanted to pursue a career
      in programming<br></li>\n<li>The first jobs that Quinn landed as a programmer;
      creating a Roblox game and tracking malware.</li>\n<li>How Quinn was introduced
      to Elixir and the immediate love she felt for the language. </li>\n<li>The recent
      work that Quinn has been busy with researching and tracing the history of Erlang.</li>\n<li>Experiences
      of reading academic papers and what sets it apart from other formats.</li>\n<li>The
      inspiration behind Quinn&#39;s website and her affinity for Twitter&#39;s format.
      </li>\n<li>Quinn&#39;s favorite characteristics of the BEAM: the debugging possibilities.
      </li>\n<li>The project that Quinn worked on using Gleam on the BEAM and her
      enjoyment of its simplicity. </li>\n<li>Some possible areas, outlined by Joe
      Armstrong, that Quinn is excited to explore in the near future.</li>\n<li>Quinn&#39;s
      huge appreciation for different programming languages and her fascination with
      Strand.</li>\n<li>Encouragement from Quinn to dive into reading intimidating
      research papers. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/jobs\" rel=\"nofollow\">https://smartlogic.io/jobs</a>
      <br>\nQuinn Wilton — <a href=\"https://quinnwilton.com/\" rel=\"nofollow\">https://quinnwilton.com/</a><br>\nQuinn
      Wilton on Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nQuinn
      Wilton on GitHub — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nUniversity
      of Waterloo — <a href=\"https://uwaterloo.ca/\" rel=\"nofollow\">https://uwaterloo.ca/</a><br>\nRoblox
      — <a href=\"https://www.roblox.com/\" rel=\"nofollow\">https://www.roblox.com/</a><br>\nLookout
      — <a href=\"https://www.lookout.com/\" rel=\"nofollow\">https://www.lookout.com/</a><br>\nClint
      Gibler — <a href=\"https://clintgibler.com/\" rel=\"nofollow\">https://clintgibler.com/</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nJoe
      Armstrong — <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
      rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\n&#39;Getting
      Erlang to talk to the outside world&#39; — <a href=\"https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world\"
      rel=\"nofollow\">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>\nUniversal
      Binary Format — <a href=\"https://github.com/ubf/ubf\" rel=\"nofollow\">https://github.com/ubf/ubf</a><br>\nCLU
      — <a href=\"https://en.wikipedia.org/wiki/CLU_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>\nStrand
      — <a href=\"https://en.wikipedia.org/wiki/Strand_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special
      Guest: Quinn Wilton.</p>\n      "
  contentEncoded: "\n        <p>Joining us on the show today is Quinn Wilton, and
    we have a wonderful conversation with our guest about her journey with Elixir,
    unusual path into programming, and her wide appreciation for different languages!
    We start off looking at the time Quinn spent at Waterloo University and what separates
    the Canadian ethos around computer science. From there, we turn to Quinn&#39;s
    early work in programming, the first proper job that she stepped into, and the
    immediate affinity she felt for working in Elixir. We also talk a bit about the
    interesting research that Quinn has been conducting privately, tracking and plotting
    the path of Erlang over the decades, while also reflecting on the skill of academic
    reading. We spend some necessary time hearing from Quinn about the BEAM and what
    BEAM magic means to her, before hearing about her website, love of Twitter,  other
    languages that currently have her excited, and the avenues she is most lit up
    about exploring in the future! Listen in to hear it all, as we continue this journey!
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Quinn&#39;s reflections
    on her education in Canada, and differences to the American approach to computer
    science. </li>\n<li>Reasons that Quinn wanted to pursue a career in programming<br></li>\n<li>The
    first jobs that Quinn landed as a programmer; creating a Roblox game and tracking
    malware.</li>\n<li>How Quinn was introduced to Elixir and the immediate love she
    felt for the language. </li>\n<li>The recent work that Quinn has been busy with
    researching and tracing the history of Erlang.</li>\n<li>Experiences of reading
    academic papers and what sets it apart from other formats.</li>\n<li>The inspiration
    behind Quinn&#39;s website and her affinity for Twitter&#39;s format. </li>\n<li>Quinn&#39;s
    favorite characteristics of the BEAM: the debugging possibilities. </li>\n<li>The
    project that Quinn worked on using Gleam on the BEAM and her enjoyment of its
    simplicity. </li>\n<li>Some possible areas, outlined by Joe Armstrong, that Quinn
    is excited to explore in the near future.</li>\n<li>Quinn&#39;s huge appreciation
    for different programming languages and her fascination with Strand.</li>\n<li>Encouragement
    from Quinn to dive into reading intimidating research papers. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/jobs\"
    rel=\"nofollow\">https://smartlogic.io/jobs</a> <br>\nQuinn Wilton — <a href=\"https://quinnwilton.com/\"
    rel=\"nofollow\">https://quinnwilton.com/</a><br>\nQuinn Wilton on Twitter — <a
    href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\nQuinn
    Wilton on GitHub — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nUniversity
    of Waterloo — <a href=\"https://uwaterloo.ca/\" rel=\"nofollow\">https://uwaterloo.ca/</a><br>\nRoblox
    — <a href=\"https://www.roblox.com/\" rel=\"nofollow\">https://www.roblox.com/</a><br>\nLookout
    — <a href=\"https://www.lookout.com/\" rel=\"nofollow\">https://www.lookout.com/</a><br>\nClint
    Gibler — <a href=\"https://clintgibler.com/\" rel=\"nofollow\">https://clintgibler.com/</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nJoe
    Armstrong — <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
    rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\n&#39;Getting
    Erlang to talk to the outside world&#39; — <a href=\"https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world\"
    rel=\"nofollow\">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>\nUniversal
    Binary Format — <a href=\"https://github.com/ubf/ubf\" rel=\"nofollow\">https://github.com/ubf/ubf</a><br>\nCLU
    — <a href=\"https://en.wikipedia.org/wiki/CLU_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>\nStrand
    — <a href=\"https://en.wikipedia.org/wiki/Strand_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special
    Guest: Quinn Wilton.</p>\n      "
- title: The Bridge Between Elixir and Zig with Isaac Yonemoto
  slug: s6e9-yonemoto
  link: https://smartlogic.io/podcast/elixir-wizards/s6e9-yonemoto
  guid: 5e1ccc21-8727-4ae4-8921-ae296f46cff7
  pubDate: Thu, 05 Aug 2021 06:00:00 -0400
  pubDateFriendly: August  5, 2021
  description: "While NIFs provide a great way to interface with native code in the
    BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac
    Yonemoto built Zigler, things have become a lot simpler, and he joins us today
    to talk about how. Isaac is an Elixir developer with a background in biotech and
    we kick off the discussion by hearing about his journey into programming and some
    of the ways that he has combined it with science. From there we hear more about
    the different languages Isaac has worked in and why he fell in love with Elixir,
    where he talks about its encouragement of test-driven development and how this
    has made him a better programmer. We dive right into the contributions Isaac is
    making to the Elixir community next, and he starts off by talking about Zigler.
    He explains how Zigler provides a bridge between Zig and Elixir that makes it
    far easier to build NIFs. We hear a bunch of the other cool possibilities that
    Zigler offers to Elixir as well, including its ability to make debugging easier
    by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion
    of magic in Elixir, we close today's show off with a few of the other projects
    he is working on, contributions that are bound to make the world of Elixir even
    more exciting!\nKey Points From This Episode:\nIsaac’s early exposure to programming
    and how he got started in tech.\nThe education Isaac had in the sciences and his
    experience in the biotech sphere.\nDifficulties with installing Ruby and how this
    led to Isaac learning Elixir.\nSupport for asynchronous testing and the reasons
    why Isaac finds joy in Elixir.\nThe emphasis on test-driven development in Elixir
    and how this has made Isaac a better programmer.\nIsaac’s experiences with Zig
    and the similarities between it and Elixir.\nHow NIFs allow C code in Elixir and
    what it is like debugging them.\nIsaac’s Zigler project and how it provides integration
    between Elixir and Zig making it easy to build NIFs.\nCross-compiling C using
    Zig and why Isaac built a disassembler.\nAspects of the BEAM that make it harder
    to write NIFs in Elixir than in Julia.\nIsaac’s opinion of magic in programming
    and how it should always be comprehensible.\nFinal plugs from Isaac: where to
    find Zigler, and some upcoming projects.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nIsaac Yonemoto on Twitter — https://twitter.com/DNAutics\nIsaac
    Yonemoto on GitHub — https://github.com/ityonemo\nIsaac Yonemoto on YouTube —
    https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\nSelectrix — https://github.com/ityonemo/selectrix\nMavis
    — https://github.com/ityonemo/mavis\nChiaroscuro - https://github.com/ityonemo/chiaroscuro\nZigler
    - https://hexdocs.pm/zigler/Zig.html\nZigler on GitHub — https://github.com/ityonemo/zigler\nJulia
    — https://julialang.org/\nTesting Elixir with Jeffrey Matthias and Andrea Leopardi
    — https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/ Special
    Guest: Isaac Yonemoto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Gy2RRGyd
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5e1ccc21-8727-4ae4-8921-ae296f46cff7.mp3
    length: '67142697'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While NIFs provide a great way to interface with native code in the
      BEAM machine, the process can also be rather error-prone. Thankfully, since
      Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins
      us today to talk about how.
    duration: '46:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5e1ccc21-8727-4ae4-8921-ae296f46cff7/cover.jpg?v=1
    summary: "\n        <p>While NIFs provide a great way to interface with native
      code in the BEAM machine, the process can also be rather error-prone. Thankfully,
      since Isaac Yonemoto built Zigler, things have become a lot simpler, and he
      joins us today to talk about how. Isaac is an Elixir developer with a background
      in biotech and we kick off the discussion by hearing about his journey into
      programming and some of the ways that he has combined it with science. From
      there we hear more about the different languages Isaac has worked in and why
      he fell in love with Elixir, where he talks about its encouragement of test-driven
      development and how this has made him a better programmer. We dive right into
      the contributions Isaac is making to the Elixir community next, and he starts
      off by talking about Zigler. He explains how Zigler provides a bridge between
      Zig and Elixir that makes it far easier to build NIFs. We hear a bunch of the
      other cool possibilities that Zigler offers to Elixir as well, including its
      ability to make debugging easier by appending the Zig stack trace to the Elixir
      one. After hearing Isaac’s opinion of magic in Elixir, we close today&#39;s
      show off with a few of the other projects he is working on, contributions that
      are bound to make the world of Elixir even more exciting!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Isaac’s early exposure to programming and
      how he got started in tech.</li>\n<li>The education Isaac had in the sciences
      and his experience in the biotech sphere.</li>\n<li>Difficulties with installing
      Ruby and how this led to Isaac learning Elixir.</li>\n<li>Support for asynchronous
      testing and the reasons why Isaac finds joy in Elixir.</li>\n<li>The emphasis
      on test-driven development in Elixir and how this has made Isaac a better programmer.</li>\n<li>Isaac’s
      experiences with Zig and the similarities between it and Elixir.</li>\n<li>How
      NIFs allow C code in Elixir and what it is like debugging them.</li>\n<li>Isaac’s
      Zigler project and how it provides integration between Elixir and Zig making
      it easy to build NIFs.</li>\n<li>Cross-compiling C using Zig and why Isaac built
      a disassembler.</li>\n<li>Aspects of the BEAM that make it harder to write NIFs
      in Elixir than in Julia.</li>\n<li>Isaac’s opinion of magic in programming and
      how it should always be comprehensible.</li>\n<li>Final plugs from Isaac: where
      to find Zigler, and some upcoming projects.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nIsaac Yonemoto on Twitter
      — <a href=\"https://twitter.com/DNAutics\" rel=\"nofollow\">https://twitter.com/DNAutics</a><br>\nIsaac
      Yonemoto on GitHub — <a href=\"https://github.com/ityonemo\" rel=\"nofollow\">https://github.com/ityonemo</a><br>\nIsaac
      Yonemoto on YouTube — <a href=\"https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>\nSelectrix
      — <a href=\"https://github.com/ityonemo/selectrix\" rel=\"nofollow\">https://github.com/ityonemo/selectrix</a><br>\nMavis
      — <a href=\"https://github.com/ityonemo/mavis\" rel=\"nofollow\">https://github.com/ityonemo/mavis</a><br>\nChiaroscuro
      - <a href=\"https://github.com/ityonemo/chiaroscuro\" rel=\"nofollow\">https://github.com/ityonemo/chiaroscuro</a><br>\nZigler
      - <a href=\"https://hexdocs.pm/zigler/Zig.html\" rel=\"nofollow\">https://hexdocs.pm/zigler/Zig.html</a><br>\nZigler
      on GitHub — <a href=\"https://github.com/ityonemo/zigler\" rel=\"nofollow\">https://github.com/ityonemo/zigler</a><br>\nJulia
      — <a href=\"https://julialang.org/\" rel=\"nofollow\">https://julialang.org/</a><br>\nTesting
      Elixir with Jeffrey Matthias and Andrea Leopardi — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special
      Guest: Isaac Yonemoto.</p>\n      "
  contentEncoded: "\n        <p>While NIFs provide a great way to interface with native
    code in the BEAM machine, the process can also be rather error-prone. Thankfully,
    since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins
    us today to talk about how. Isaac is an Elixir developer with a background in
    biotech and we kick off the discussion by hearing about his journey into programming
    and some of the ways that he has combined it with science. From there we hear
    more about the different languages Isaac has worked in and why he fell in love
    with Elixir, where he talks about its encouragement of test-driven development
    and how this has made him a better programmer. We dive right into the contributions
    Isaac is making to the Elixir community next, and he starts off by talking about
    Zigler. He explains how Zigler provides a bridge between Zig and Elixir that makes
    it far easier to build NIFs. We hear a bunch of the other cool possibilities that
    Zigler offers to Elixir as well, including its ability to make debugging easier
    by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion
    of magic in Elixir, we close today&#39;s show off with a few of the other projects
    he is working on, contributions that are bound to make the world of Elixir even
    more exciting!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Isaac’s
    early exposure to programming and how he got started in tech.</li>\n<li>The education
    Isaac had in the sciences and his experience in the biotech sphere.</li>\n<li>Difficulties
    with installing Ruby and how this led to Isaac learning Elixir.</li>\n<li>Support
    for asynchronous testing and the reasons why Isaac finds joy in Elixir.</li>\n<li>The
    emphasis on test-driven development in Elixir and how this has made Isaac a better
    programmer.</li>\n<li>Isaac’s experiences with Zig and the similarities between
    it and Elixir.</li>\n<li>How NIFs allow C code in Elixir and what it is like debugging
    them.</li>\n<li>Isaac’s Zigler project and how it provides integration between
    Elixir and Zig making it easy to build NIFs.</li>\n<li>Cross-compiling C using
    Zig and why Isaac built a disassembler.</li>\n<li>Aspects of the BEAM that make
    it harder to write NIFs in Elixir than in Julia.</li>\n<li>Isaac’s opinion of
    magic in programming and how it should always be comprehensible.</li>\n<li>Final
    plugs from Isaac: where to find Zigler, and some upcoming projects.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nIsaac Yonemoto on Twitter —
    <a href=\"https://twitter.com/DNAutics\" rel=\"nofollow\">https://twitter.com/DNAutics</a><br>\nIsaac
    Yonemoto on GitHub — <a href=\"https://github.com/ityonemo\" rel=\"nofollow\">https://github.com/ityonemo</a><br>\nIsaac
    Yonemoto on YouTube — <a href=\"https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA\"
    rel=\"nofollow\">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>\nSelectrix
    — <a href=\"https://github.com/ityonemo/selectrix\" rel=\"nofollow\">https://github.com/ityonemo/selectrix</a><br>\nMavis
    — <a href=\"https://github.com/ityonemo/mavis\" rel=\"nofollow\">https://github.com/ityonemo/mavis</a><br>\nChiaroscuro
    - <a href=\"https://github.com/ityonemo/chiaroscuro\" rel=\"nofollow\">https://github.com/ityonemo/chiaroscuro</a><br>\nZigler
    - <a href=\"https://hexdocs.pm/zigler/Zig.html\" rel=\"nofollow\">https://hexdocs.pm/zigler/Zig.html</a><br>\nZigler
    on GitHub — <a href=\"https://github.com/ityonemo/zigler\" rel=\"nofollow\">https://github.com/ityonemo/zigler</a><br>\nJulia
    — <a href=\"https://julialang.org/\" rel=\"nofollow\">https://julialang.org/</a><br>\nTesting
    Elixir with Jeffrey Matthias and Andrea Leopardi — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special
    Guest: Isaac Yonemoto.</p>\n      "
- title: Maxim Fedorov on Building and Scaling WhatsApp with Erlang
  slug: s6e8-fedorov
  link: https://smartlogic.io/podcast/elixir-wizards/s6e8-fedorov
  guid: ff944923-7612-4245-b9b0-d9217e878b0b
  pubDate: Thu, 29 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 29, 2021
  description: "Today we are so excited to share a conversation with Maxim Fedorov,
    who is the Core Infrastructure Lead at communications giant, WhatsApp! In our
    chat, Maxim offers such interesting insight and wisdom from a long career in the
    space, focusing on Erlang and why he views it as such a powerful language for
    the work at WhatsApp. We also get some backstory from Maxim, looking at his first
    experiences with computers, his educational background, and some of the work he
    did leading up to his current position. Our guest does a great job of sharing
    his thoughts on what he sees as a lack of magic within the Erlang language, why
    he prefers this, and how the company has managed to scale in such a major way
    over the past years. We also deal with some more general questions, weighing functional
    languages against object-oriented ones, useful resource recommendations, and a
    whole lot more! We finish off this episode with a mini-interview with David Hardwick,
    who is the current Vice President of Engineering at STORD, so make sure to stay
    tuned until the end for that! \nKey Points From This Episode:\nThe beginnings
    of Maxim's interest in computer science and software development. \nHow Maxim
    transitioned into the network security field. \nMaxim's experience with timezones
    and how this is approached for an app like WhatsApp.\nThoughts on why WhatsApp
    is so popular outside of the United States. \nHow Erlang is used at WhatsApp to
    power messaging. \nProbable reasons that Erlang was selected as the language for
    WhatsApp.\nOutages and downtime; what constitutes a serious issue for WhatsApp
    user experience. \nThe massive growth that WhatsApp has seen and how their approach
    to scaling has evolved.\nCharacteristics of Erlang that make it so well suited
    to WhatsApp's needs; simplicity and reliability. \nMaxim's perspective on the
    issues around programmer education and their results.  \nFunctional languages
    versus object-oriented programming; Maxim's thoughts on strengths and weaknesses.\nWhy
    Maxim views Erlang as not containing or performing anything magical. \nMaxim's
    recommendations for resources when getting started in Erlang!\nLooking back at
    Maxim's experiences of tertiary education and the thesis he produced. \nThe scaling
    of the WhatsApp server; the project that Maxim is most proud of!\nMaxim's love
    for motorcycles and bicycles and how these grew out of initial conveniences.  \nToday's
    mini-feature interview with David Hardwick, VP of Engineering at STORD.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nMaxim Fedorov:
    https://au.linkedin.com/in/maxim-fedorov-14a570b\nElectronika MK-61 — https://en.wikipedia.org/wiki/ElektronikaMK-52\nBrian
    Acton — https://www.forbes.com/profile/brian-acton/\nLearn You Some Erlang — https://learnyousomeerlang.com/\nAdopting
    Erlang — https://github.com/adoptingerlang\nJoe Armstrong Thesis — https://erlang.org/download/armstrongthesis2003.pdf\nThe
    BEAM Book— https://github.com/happi/theBeamBook\nejabberd — https://www.ejabberd.im/\nWill
    Cathcart Tweet — https://twitter.com/wcathcart/status/1385253969522413568\nClarke's
    three laws — https://en.wikipedia.org/wiki/Clarke%27sthree_laws\nLukas Larson
    — https://twitter.com/garazdawi\nErlang OTP — https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\nDavid
    Hardwick — https://www.linkedin.com/in/davidhardwick\nSTORD — https://www.stord.com/\nBetterCloud
    — http://www.bettercloud.com/ Special Guest: Maxim Fedorov.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+jbA1bSUT
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ff944923-7612-4245-b9b0-d9217e878b0b.mp3
    length: '48273230'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today we are so excited to share a conversation with Maxim Fedorov who
      offers such interesting insight and wisdom from a long career in the space,
      focusing on Erlang and why he views it as such a powerful language for the work
      at WhatsApp.
    duration: '50:13'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/ff944923-7612-4245-b9b0-d9217e878b0b/cover.jpg?v=1
    summary: "\n        <p>Today we are so excited to share a conversation with Maxim
      Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp!
      In our chat, Maxim offers such interesting insight and wisdom from a long career
      in the space, focusing on Erlang and why he views it as such a powerful language
      for the work at WhatsApp. We also get some backstory from Maxim, looking at
      his first experiences with computers, his educational background, and some of
      the work he did leading up to his current position. Our guest does a great job
      of sharing his thoughts on what he sees as a lack of magic within the Erlang
      language, why he prefers this, and how the company has managed to scale in such
      a major way over the past years. We also deal with some more general questions,
      weighing functional languages against object-oriented ones, useful resource
      recommendations, and a whole lot more! We finish off this episode with a mini-interview
      with David Hardwick, who is the current Vice President of Engineering at STORD,
      so make sure to stay tuned until the end for that! </p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>The beginnings of Maxim&#39;s interest in computer
      science and software development. </li>\n<li>How Maxim transitioned into the
      network security field. </li>\n<li>Maxim&#39;s experience with timezones and
      how this is approached for an app like WhatsApp.</li>\n<li>Thoughts on why WhatsApp
      is so popular outside of the United States. </li>\n<li>How Erlang is used at
      WhatsApp to power messaging. </li>\n<li>Probable reasons that Erlang was selected
      as the language for WhatsApp.</li>\n<li>Outages and downtime; what constitutes
      a serious issue for WhatsApp user experience. </li>\n<li>The massive growth
      that WhatsApp has seen and how their approach to scaling has evolved.</li>\n<li>Characteristics
      of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and
      reliability. </li>\n<li>Maxim&#39;s perspective on the issues around programmer
      education and their results.<br></li>\n<li>Functional languages versus object-oriented
      programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>\n<li>Why
      Maxim views Erlang as not containing or performing anything magical. </li>\n<li>Maxim&#39;s
      recommendations for resources when getting started in Erlang!</li>\n<li>Looking
      back at Maxim&#39;s experiences of tertiary education and the thesis he produced.
      </li>\n<li>The scaling of the WhatsApp server; the project that Maxim is most
      proud of!</li>\n<li>Maxim&#39;s love for motorcycles and bicycles and how these
      grew out of initial conveniences.<br></li>\n<li>Today&#39;s mini-feature interview
      with David Hardwick, VP of Engineering at STORD.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMaxim Fedorov: <a href=\"https://au.linkedin.com/in/maxim-fedorov-14a570b\"
      rel=\"nofollow\">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>\nElectronika
      MK-61 — <a href=\"https://en.wikipedia.org/wiki/Elektronika_MK-52\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>\nBrian
      Acton — <a href=\"https://www.forbes.com/profile/brian-acton/\" rel=\"nofollow\">https://www.forbes.com/profile/brian-acton/</a><br>\nLearn
      You Some Erlang — <a href=\"https://learnyousomeerlang.com/\" rel=\"nofollow\">https://learnyousomeerlang.com/</a><br>\nAdopting
      Erlang — <a href=\"https://github.com/adoptingerlang\" rel=\"nofollow\">https://github.com/adoptingerlang</a><br>\nJoe
      Armstrong Thesis — <a href=\"https://erlang.org/download/armstrong_thesis_2003.pdf\"
      rel=\"nofollow\">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>\nThe
      BEAM Book— <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nejabberd
      — <a href=\"https://www.ejabberd.im/\" rel=\"nofollow\">https://www.ejabberd.im/</a><br>\nWill
      Cathcart Tweet — <a href=\"https://twitter.com/wcathcart/status/1385253969522413568\"
      rel=\"nofollow\">https://twitter.com/wcathcart/status/1385253969522413568</a><br>\nClarke&#39;s
      three laws — <a href=\"https://en.wikipedia.org/wiki/Clarke%27s_three_laws\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>\nLukas
      Larson — <a href=\"https://twitter.com/garazdawi\" rel=\"nofollow\">https://twitter.com/garazdawi</a><br>\nErlang
      OTP — <a href=\"https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\"
      rel=\"nofollow\">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>\nDavid
      Hardwick — <a href=\"https://www.linkedin.com/in/davidhardwick\" rel=\"nofollow\">https://www.linkedin.com/in/davidhardwick</a><br>\nSTORD
      — <a href=\"https://www.stord.com/\" rel=\"nofollow\">https://www.stord.com/</a><br>\nBetterCloud
      — <a href=\"http://www.bettercloud.com/\" rel=\"nofollow\">http://www.bettercloud.com/</a></p><p>Special
      Guest: Maxim Fedorov.</p>\n      "
  contentEncoded: "\n        <p>Today we are so excited to share a conversation with
    Maxim Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp!
    In our chat, Maxim offers such interesting insight and wisdom from a long career
    in the space, focusing on Erlang and why he views it as such a powerful language
    for the work at WhatsApp. We also get some backstory from Maxim, looking at his
    first experiences with computers, his educational background, and some of the
    work he did leading up to his current position. Our guest does a great job of
    sharing his thoughts on what he sees as a lack of magic within the Erlang language,
    why he prefers this, and how the company has managed to scale in such a major
    way over the past years. We also deal with some more general questions, weighing
    functional languages against object-oriented ones, useful resource recommendations,
    and a whole lot more! We finish off this episode with a mini-interview with David
    Hardwick, who is the current Vice President of Engineering at STORD, so make sure
    to stay tuned until the end for that! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    beginnings of Maxim&#39;s interest in computer science and software development.
    </li>\n<li>How Maxim transitioned into the network security field. </li>\n<li>Maxim&#39;s
    experience with timezones and how this is approached for an app like WhatsApp.</li>\n<li>Thoughts
    on why WhatsApp is so popular outside of the United States. </li>\n<li>How Erlang
    is used at WhatsApp to power messaging. </li>\n<li>Probable reasons that Erlang
    was selected as the language for WhatsApp.</li>\n<li>Outages and downtime; what
    constitutes a serious issue for WhatsApp user experience. </li>\n<li>The massive
    growth that WhatsApp has seen and how their approach to scaling has evolved.</li>\n<li>Characteristics
    of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and
    reliability. </li>\n<li>Maxim&#39;s perspective on the issues around programmer
    education and their results.<br></li>\n<li>Functional languages versus object-oriented
    programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>\n<li>Why Maxim
    views Erlang as not containing or performing anything magical. </li>\n<li>Maxim&#39;s
    recommendations for resources when getting started in Erlang!</li>\n<li>Looking
    back at Maxim&#39;s experiences of tertiary education and the thesis he produced.
    </li>\n<li>The scaling of the WhatsApp server; the project that Maxim is most
    proud of!</li>\n<li>Maxim&#39;s love for motorcycles and bicycles and how these
    grew out of initial conveniences.<br></li>\n<li>Today&#39;s mini-feature interview
    with David Hardwick, VP of Engineering at STORD.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMaxim Fedorov: <a href=\"https://au.linkedin.com/in/maxim-fedorov-14a570b\"
    rel=\"nofollow\">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>\nElectronika
    MK-61 — <a href=\"https://en.wikipedia.org/wiki/Elektronika_MK-52\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>\nBrian
    Acton — <a href=\"https://www.forbes.com/profile/brian-acton/\" rel=\"nofollow\">https://www.forbes.com/profile/brian-acton/</a><br>\nLearn
    You Some Erlang — <a href=\"https://learnyousomeerlang.com/\" rel=\"nofollow\">https://learnyousomeerlang.com/</a><br>\nAdopting
    Erlang — <a href=\"https://github.com/adoptingerlang\" rel=\"nofollow\">https://github.com/adoptingerlang</a><br>\nJoe
    Armstrong Thesis — <a href=\"https://erlang.org/download/armstrong_thesis_2003.pdf\"
    rel=\"nofollow\">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>\nThe
    BEAM Book— <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nejabberd
    — <a href=\"https://www.ejabberd.im/\" rel=\"nofollow\">https://www.ejabberd.im/</a><br>\nWill
    Cathcart Tweet — <a href=\"https://twitter.com/wcathcart/status/1385253969522413568\"
    rel=\"nofollow\">https://twitter.com/wcathcart/status/1385253969522413568</a><br>\nClarke&#39;s
    three laws — <a href=\"https://en.wikipedia.org/wiki/Clarke%27s_three_laws\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>\nLukas
    Larson — <a href=\"https://twitter.com/garazdawi\" rel=\"nofollow\">https://twitter.com/garazdawi</a><br>\nErlang
    OTP — <a href=\"https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl\"
    rel=\"nofollow\">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>\nDavid
    Hardwick — <a href=\"https://www.linkedin.com/in/davidhardwick\" rel=\"nofollow\">https://www.linkedin.com/in/davidhardwick</a><br>\nSTORD
    — <a href=\"https://www.stord.com/\" rel=\"nofollow\">https://www.stord.com/</a><br>\nBetterCloud
    — <a href=\"http://www.bettercloud.com/\" rel=\"nofollow\">http://www.bettercloud.com/</a></p><p>Special
    Guest: Maxim Fedorov.</p>\n      "
- title: Chelsea Troy on the Importance of Access and the Impact of Teaching
  slug: s6e7-troy
  link: https://smartlogic.io/podcast/elixir-wizards/s6e7-troy
  guid: 49a8c965-5f19-4aba-9cd7-6b59acc7188b
  pubDate: Thu, 22 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 22, 2021
  description: |
    Some of you may recognize Chelsea Troy from her popular blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference. Chelsea is an instructor in the Master's Program in Computer Science at the University of Chicago and currently works as a staff software engineer at Mozilla, where she specializes in machine learning and backend systems. In our conversation with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea outlines how programming can be more accessible than other careers because it doesn't have the same financial burden when it comes to education. She also emphasizes the importance of allowing a more diverse range of people access to the field and unpacks the type of person the internet was originally built for, explaining how it had favored privileged affluent individuals from the Bay Area. We hear from Chelsea about how she became a programmer out of a desire for job security rather than passion and why she believes it’s so important to have a broader representation of different narratives when it comes to careers in programming and coding. Later Chelsea shares the story of how she became an educator and why she is so passionate about teaching. For all this and much more, join us today!
    Key Points From This Episode:
    Introducing today’s guest Chelsea Troy
    Why Chelsea believes it’s important to privilege multiple narratives of why people choose to pursue programming as a career.
    There is less of a financial burden with becoming a programmer than other higher-paying professions.
    The benefits of a diverse group of people having access to programming as a career.
    What first prompted Chelsea to start her blog and how her goals for it have changed over time.
    Why Chelsea struggles to give advice on how to market a blog.
    How being able to draw parallels between different coding languages has strengthened Chelsea’s teaching and writing pursuits.
    Why Chelsea is so enthusiastic about teaching.
    How teaching allows Chelsea to have a more meaningful impact in the field of tech.
    How Chelsea prioritizes which jobs and clients to pursue as a consultant.
    How having two parents who taught for living influenced Chelsea’s passion for teaching.
    Chelsea shares how she earned her position at Chicago University, despite expecting not to.
    The challenges and benefits of teaching remotely.
    The pros and cons of functional languages versus object-oriented languages.
    How students tend to react to learning functional languages versus object-oriented languages.
    Mini-feature segment: hear from Rosemary about how she became a software engineer.
    How Rosemary built websites as a side hustle while studying English.
    Rosemary shares how she transitioned from working with Java and Blu-ray discs to doing back-end web development and writing in Elixir.
    How RentPath, the company Rosemary is currently working for, is transitioning from Ruby to Elixir.
    An outline of RentPath and what they do.
    Rosemary’s many hobbies and pursuits, including wildlife photography.
    Links Mentioned in Today’s Episode:
    Chelsea Troy on Twitter — https://twitter.com/HeyChelseaTroy
    Chelsea Troy on LinkedIn — https://www.linkedin.com/in/chelseatroy/
    Chelsea Troy Blog — https://chelseatroy.com/
    Upcoming Code BEAM Conferences — https://codesync.global/
    Chelsea Troy on Youtube —  https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig
    Ruby — https://www.ruby-lang.org/en/
    Mozilla — mozilla.org/en-US/
    Pocket — https://getpocket.com/
    Rosemary Ledesma — https://www.linkedin.com/in/rosemary-ledesma-b6198717/
    RentPath — https://www.rentpath.com/
    RedFin — https://www.redfin.com/
     Special Guest: Chelsea Troy.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ixIufJ34
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49a8c965-5f19-4aba-9cd7-6b59acc7188b.mp3
    length: '46274411'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: You may recognize Chelsea Troy from her popular blog or as a keynote
      speaker for the March 2021 Code BEAM conference. Today she discusses some of
      the unique aspects of coding as a career.
    duration: '48:08'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49a8c965-5f19-4aba-9cd7-6b59acc7188b/cover.jpg?v=1
    summary: "\n        <p>Some of you may recognize Chelsea Troy from her popular
      blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference.
      Chelsea is an instructor in the Master&#39;s Program in Computer Science at
      the University of Chicago and currently works as a staff software engineer at
      Mozilla, where she specializes in machine learning and backend systems. In our
      conversation with Chelsea, we discuss some of the unique aspects of coding as
      a career. Chelsea outlines how programming can be more accessible than other
      careers because it doesn&#39;t have the same financial burden when it comes
      to education. She also emphasizes the importance of allowing a more diverse
      range of people access to the field and unpacks the type of person the internet
      was originally built for, explaining how it had favored privileged affluent
      individuals from the Bay Area. We hear from Chelsea about how she became a programmer
      out of a desire for job security rather than passion and why she believes it’s
      so important to have a broader representation of different narratives when it
      comes to careers in programming and coding. Later Chelsea shares the story of
      how she became an educator and why she is so passionate about teaching. For
      all this and much more, join us today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest Chelsea Troy</li>\n<li>Why Chelsea believes it’s important to
      privilege multiple narratives of why people choose to pursue programming as
      a career.</li>\n<li>There is less of a financial burden with becoming a programmer
      than other higher-paying professions.</li>\n<li>The benefits of a diverse group
      of people having access to programming as a career.</li>\n<li>What first prompted
      Chelsea to start her blog and how her goals for it have changed over time.</li>\n<li>Why
      Chelsea struggles to give advice on how to market a blog.</li>\n<li>How being
      able to draw parallels between different coding languages has strengthened Chelsea’s
      teaching and writing pursuits.</li>\n<li>Why Chelsea is so enthusiastic about
      teaching.</li>\n<li>How teaching allows Chelsea to have a more meaningful impact
      in the field of tech.</li>\n<li>How Chelsea prioritizes which jobs and clients
      to pursue as a consultant.</li>\n<li>How having two parents who taught for living
      influenced Chelsea’s passion for teaching.</li>\n<li>Chelsea shares how she
      earned her position at Chicago University, despite expecting not to.</li>\n<li>The
      challenges and benefits of teaching remotely.</li>\n<li>The pros and cons of
      functional languages versus object-oriented languages.</li>\n<li>How students
      tend to react to learning functional languages versus object-oriented languages.</li>\n<li>Mini-feature
      segment: hear from Rosemary about how she became a software engineer.</li>\n<li>How
      Rosemary built websites as a side hustle while studying English.</li>\n<li>Rosemary
      shares how she transitioned from working with Java and Blu-ray discs to doing
      back-end web development and writing in Elixir.</li>\n<li>How RentPath, the
      company Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>\n<li>An
      outline of RentPath and what they do.</li>\n<li>Rosemary’s many hobbies and
      pursuits, including wildlife photography.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Chelsea Troy on Twitter — <a href=\"https://twitter.com/HeyChelseaTroy\"
      rel=\"nofollow\">https://twitter.com/HeyChelseaTroy</a><br>\nChelsea Troy on
      LinkedIn — <a href=\"https://www.linkedin.com/in/chelseatroy/\" rel=\"nofollow\">https://www.linkedin.com/in/chelseatroy/</a><br>\nChelsea
      Troy Blog — <a href=\"https://chelseatroy.com/\" rel=\"nofollow\">https://chelseatroy.com/</a><br>\nUpcoming
      Code BEAM Conferences — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nChelsea
      Troy on Youtube —  <a href=\"https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nMozilla
      — mozilla.org/en-US/<br>\nPocket — <a href=\"https://getpocket.com/\" rel=\"nofollow\">https://getpocket.com/</a><br>\nRosemary
      Ledesma — <a href=\"https://www.linkedin.com/in/rosemary-ledesma-b6198717/\"
      rel=\"nofollow\">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>\nRentPath
      — <a href=\"https://www.rentpath.com/\" rel=\"nofollow\">https://www.rentpath.com/</a><br>\nRedFin
      — <a href=\"https://www.redfin.com/\" rel=\"nofollow\">https://www.redfin.com/</a></p><p>Special
      Guest: Chelsea Troy.</p>\n      "
  contentEncoded: "\n        <p>Some of you may recognize Chelsea Troy from her popular
    blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference.
    Chelsea is an instructor in the Master&#39;s Program in Computer Science at the
    University of Chicago and currently works as a staff software engineer at Mozilla,
    where she specializes in machine learning and backend systems. In our conversation
    with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea
    outlines how programming can be more accessible than other careers because it
    doesn&#39;t have the same financial burden when it comes to education. She also
    emphasizes the importance of allowing a more diverse range of people access to
    the field and unpacks the type of person the internet was originally built for,
    explaining how it had favored privileged affluent individuals from the Bay Area.
    We hear from Chelsea about how she became a programmer out of a desire for job
    security rather than passion and why she believes it’s so important to have a
    broader representation of different narratives when it comes to careers in programming
    and coding. Later Chelsea shares the story of how she became an educator and why
    she is so passionate about teaching. For all this and much more, join us today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing today’s guest Chelsea Troy</li>\n<li>Why
    Chelsea believes it’s important to privilege multiple narratives of why people
    choose to pursue programming as a career.</li>\n<li>There is less of a financial
    burden with becoming a programmer than other higher-paying professions.</li>\n<li>The
    benefits of a diverse group of people having access to programming as a career.</li>\n<li>What
    first prompted Chelsea to start her blog and how her goals for it have changed
    over time.</li>\n<li>Why Chelsea struggles to give advice on how to market a blog.</li>\n<li>How
    being able to draw parallels between different coding languages has strengthened
    Chelsea’s teaching and writing pursuits.</li>\n<li>Why Chelsea is so enthusiastic
    about teaching.</li>\n<li>How teaching allows Chelsea to have a more meaningful
    impact in the field of tech.</li>\n<li>How Chelsea prioritizes which jobs and
    clients to pursue as a consultant.</li>\n<li>How having two parents who taught
    for living influenced Chelsea’s passion for teaching.</li>\n<li>Chelsea shares
    how she earned her position at Chicago University, despite expecting not to.</li>\n<li>The
    challenges and benefits of teaching remotely.</li>\n<li>The pros and cons of functional
    languages versus object-oriented languages.</li>\n<li>How students tend to react
    to learning functional languages versus object-oriented languages.</li>\n<li>Mini-feature
    segment: hear from Rosemary about how she became a software engineer.</li>\n<li>How
    Rosemary built websites as a side hustle while studying English.</li>\n<li>Rosemary
    shares how she transitioned from working with Java and Blu-ray discs to doing
    back-end web development and writing in Elixir.</li>\n<li>How RentPath, the company
    Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>\n<li>An
    outline of RentPath and what they do.</li>\n<li>Rosemary’s many hobbies and pursuits,
    including wildlife photography.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Chelsea
    Troy on Twitter — <a href=\"https://twitter.com/HeyChelseaTroy\" rel=\"nofollow\">https://twitter.com/HeyChelseaTroy</a><br>\nChelsea
    Troy on LinkedIn — <a href=\"https://www.linkedin.com/in/chelseatroy/\" rel=\"nofollow\">https://www.linkedin.com/in/chelseatroy/</a><br>\nChelsea
    Troy Blog — <a href=\"https://chelseatroy.com/\" rel=\"nofollow\">https://chelseatroy.com/</a><br>\nUpcoming
    Code BEAM Conferences — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nChelsea
    Troy on Youtube —  <a href=\"https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig\"
    rel=\"nofollow\">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nMozilla
    — mozilla.org/en-US/<br>\nPocket — <a href=\"https://getpocket.com/\" rel=\"nofollow\">https://getpocket.com/</a><br>\nRosemary
    Ledesma — <a href=\"https://www.linkedin.com/in/rosemary-ledesma-b6198717/\" rel=\"nofollow\">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>\nRentPath
    — <a href=\"https://www.rentpath.com/\" rel=\"nofollow\">https://www.rentpath.com/</a><br>\nRedFin
    — <a href=\"https://www.redfin.com/\" rel=\"nofollow\">https://www.redfin.com/</a></p><p>Special
    Guest: Chelsea Troy.</p>\n      "
- title: Testing Elixir with Jeffrey Matthias and Andrea Leopardi
  slug: s6e6-matthias-leopardi
  link: https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi
  guid: 3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9
  pubDate: Thu, 15 Jul 2021 06:00:00 -0400
  pubDateFriendly: July 15, 2021
  description: "While we can think of many reasons why we love Elixir, the community
    could always benefit from a more lively conversation around testing. It was with
    this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing
    Elixir, and today they join us on the show to share some of the insights to be
    found in their new book. Our guests start by sketching out the main reasons why
    they decided to write a book of this nature before speaking to the process of
    writing it collaboratively from their respective homes in Italy and the US. Andrea
    and Jeffrey speak about the challenges of finding a middle ground between their
    unique styles to come up with a unified testing method. The conversation then
    takes a deep dive into the weeds of testing in Elixir and we hear our guests'
    perspectives on the most appropriate situations to use async true, Mox, Ecto Sandbox,
    and other techniques. We wrap up our interview with a question about what Andrea
    and Jeffrey would most like people to take away from their book where they express
    the hope that it can act as a springboard for further conversation about best
    practices for testing in Elixir and more. As always, we close the show off with
    our mini-interview, this time talking to Tracey Onim from Podii. \nKey Points
    From This Episode:\nWhy Jeffrey and Andrea wrote their book and how they pitched
    it to the publisher.\nHow the feedback Andrea and Jeffrey got while writing the
    book shaped its content.\nWhat writing the book was like considering its authors
    live in different countries.\nHow our guests came up with a unified testing method
    when each had their own style.\nStories about testing mistakes and the funny situations
    they led to.\nDiscussing the HBO integration test email and how it was responded
    to and dealt with.\nThe issue of developers not using async true enough and how
    to get better at it.\nWhen to use async true, Ecto Sandbox, and Mox.\nWhy our
    guests use Mox, when the best times to use it are, and how it shapes your thinking.
    \nExploring the relationship between test driven development and using the program.\nWhat
    can go wrong if you rely purely on tests to test out your code.\nThe main takeaways
    our guests hope can be found in their book.\nFinal plugs from Jeffrey and Andrea
    and where to find them online.\nA quick interview where we learn more about Tracey
    Onim from Podii. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nJeffrey Matthias on Twitter — https://twitter.com/idlehands\nAndrea Leopardi
    — https://andrealeopardi.com/\nAndrea Leopardi on Twitter — https://twitter.com/whatyouhide\nAndrea
    Leopardi on GitHub — https://github.com/whatyouhide/corsica\nTesting Elixir —
    http://testingelixir.com/\nTesting Elixir — https://pragprog.com/titles/lmelixir/testing-elixir/\nTesting
    Elixir — https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\nTesting
    Elixir on Twitter — https://twitter.com/testingelixir\nPublish with The Pragmatic
    Bookshelf — https://pragprog.com/become-an-author/\nEcto.Adapters.SQL.Sandbox
    — https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\nMox — https://hexdocs.pm/mox/Mox.html\nCommand
    Line Options — https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\nMocks
    and Explicit Contracts — http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\nbypass
    — https://github.com/PSPDFKit-labs/bypass\nTest-Driven Development with Phoenix
    — https://www.tddphoenix.com/\nTracey Onim — https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\nPodii
    — https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count Special
    Guests: Andrea Leopardi and Jeffrey Matthias.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+aQtoGngD
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9.mp3
    length: '47303624'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While we can think of many reasons why we love Elixir, the community
      could always benefit from a more lively conversation around testing. It was
      with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write
      Testing Elixir. Today they join us to share some of the insights to be found
      in their new book.
    duration: '56:18'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9/cover.jpg?v=1
    summary: "\n        <p>While we can think of many reasons why we love Elixir,
      the community could always benefit from a more lively conversation around testing.
      It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to
      write Testing Elixir, and today they join us on the show to share some of the
      insights to be found in their new book. Our guests start by sketching out the
      main reasons why they decided to write a book of this nature before speaking
      to the process of writing it collaboratively from their respective homes in
      Italy and the US. Andrea and Jeffrey speak about the challenges of finding a
      middle ground between their unique styles to come up with a unified testing
      method. The conversation then takes a deep dive into the weeds of testing in
      Elixir and we hear our guests&#39; perspectives on the most appropriate situations
      to use async true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview
      with a question about what Andrea and Jeffrey would most like people to take
      away from their book where they express the hope that it can act as a springboard
      for further conversation about best practices for testing in Elixir and more.
      As always, we close the show off with our mini-interview, this time talking
      to Tracey Onim from Podii. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
      Jeffrey and Andrea wrote their book and how they pitched it to the publisher.</li>\n<li>How
      the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>\n<li>What
      writing the book was like considering its authors live in different countries.</li>\n<li>How
      our guests came up with a unified testing method when each had their own style.</li>\n<li>Stories
      about testing mistakes and the funny situations they led to.</li>\n<li>Discussing
      the HBO integration test email and how it was responded to and dealt with.</li>\n<li>The
      issue of developers not using async true enough and how to get better at it.</li>\n<li>When
      to use async true, Ecto Sandbox, and Mox.</li>\n<li>Why our guests use Mox,
      when the best times to use it are, and how it shapes your thinking. </li>\n<li>Exploring
      the relationship between test driven development and using the program.</li>\n<li>What
      can go wrong if you rely purely on tests to test out your code.</li>\n<li>The
      main takeaways our guests hope can be found in their book.</li>\n<li>Final plugs
      from Jeffrey and Andrea and where to find them online.</li>\n<li>A quick interview
      where we learn more about Tracey Onim from Podii. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nJeffrey Matthias on Twitter
      — <a href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrea
      Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nAndrea
      Leopardi on GitHub — <a href=\"https://github.com/whatyouhide/corsica\" rel=\"nofollow\">https://github.com/whatyouhide/corsica</a><br>\nTesting
      Elixir — <a href=\"http://testingelixir.com/\" rel=\"nofollow\">http://testingelixir.com/</a><br>\nTesting
      Elixir — <a href=\"https://pragprog.com/titles/lmelixir/testing-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>\nTesting
      Elixir — <a href=\"https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\"
      rel=\"nofollow\">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>\nTesting
      Elixir on Twitter — <a href=\"https://twitter.com/testingelixir\" rel=\"nofollow\">https://twitter.com/testingelixir</a><br>\nPublish
      with The Pragmatic Bookshelf — <a href=\"https://pragprog.com/become-an-author/\"
      rel=\"nofollow\">https://pragprog.com/become-an-author/</a><br>\nEcto.Adapters.SQL.Sandbox
      — <a href=\"https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>\nMox
      — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nCommand
      Line Options — <a href=\"https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\"
      rel=\"nofollow\">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>\nMocks
      and Explicit Contracts — <a href=\"http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\"
      rel=\"nofollow\">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>\nbypass
      — <a href=\"https://github.com/PSPDFKit-labs/bypass\" rel=\"nofollow\">https://github.com/PSPDFKit-labs/bypass</a><br>\nTest-Driven
      Development with Phoenix — <a href=\"https://www.tddphoenix.com/\" rel=\"nofollow\">https://www.tddphoenix.com/</a><br>\nTracey
      Onim — <a href=\"https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\"
      rel=\"nofollow\">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>\nPodii
      — <a href=\"https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count\"
      rel=\"nofollow\">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special
      Guests: Andrea Leopardi and Jeffrey Matthias.</p>\n      "
  contentEncoded: "\n        <p>While we can think of many reasons why we love Elixir,
    the community could always benefit from a more lively conversation around testing.
    It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to
    write Testing Elixir, and today they join us on the show to share some of the
    insights to be found in their new book. Our guests start by sketching out the
    main reasons why they decided to write a book of this nature before speaking to
    the process of writing it collaboratively from their respective homes in Italy
    and the US. Andrea and Jeffrey speak about the challenges of finding a middle
    ground between their unique styles to come up with a unified testing method. The
    conversation then takes a deep dive into the weeds of testing in Elixir and we
    hear our guests&#39; perspectives on the most appropriate situations to use async
    true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview with a
    question about what Andrea and Jeffrey would most like people to take away from
    their book where they express the hope that it can act as a springboard for further
    conversation about best practices for testing in Elixir and more. As always, we
    close the show off with our mini-interview, this time talking to Tracey Onim from
    Podii. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why Jeffrey and
    Andrea wrote their book and how they pitched it to the publisher.</li>\n<li>How
    the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>\n<li>What
    writing the book was like considering its authors live in different countries.</li>\n<li>How
    our guests came up with a unified testing method when each had their own style.</li>\n<li>Stories
    about testing mistakes and the funny situations they led to.</li>\n<li>Discussing
    the HBO integration test email and how it was responded to and dealt with.</li>\n<li>The
    issue of developers not using async true enough and how to get better at it.</li>\n<li>When
    to use async true, Ecto Sandbox, and Mox.</li>\n<li>Why our guests use Mox, when
    the best times to use it are, and how it shapes your thinking. </li>\n<li>Exploring
    the relationship between test driven development and using the program.</li>\n<li>What
    can go wrong if you rely purely on tests to test out your code.</li>\n<li>The
    main takeaways our guests hope can be found in their book.</li>\n<li>Final plugs
    from Jeffrey and Andrea and where to find them online.</li>\n<li>A quick interview
    where we learn more about Tracey Onim from Podii. </li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nJeffrey Matthias on Twitter
    — <a href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrea
    Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nAndrea
    Leopardi on GitHub — <a href=\"https://github.com/whatyouhide/corsica\" rel=\"nofollow\">https://github.com/whatyouhide/corsica</a><br>\nTesting
    Elixir — <a href=\"http://testingelixir.com/\" rel=\"nofollow\">http://testingelixir.com/</a><br>\nTesting
    Elixir — <a href=\"https://pragprog.com/titles/lmelixir/testing-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>\nTesting
    Elixir — <a href=\"https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab\"
    rel=\"nofollow\">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>\nTesting
    Elixir on Twitter — <a href=\"https://twitter.com/testingelixir\" rel=\"nofollow\">https://twitter.com/testingelixir</a><br>\nPublish
    with The Pragmatic Bookshelf — <a href=\"https://pragprog.com/become-an-author/\"
    rel=\"nofollow\">https://pragprog.com/become-an-author/</a><br>\nEcto.Adapters.SQL.Sandbox
    — <a href=\"https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html\" rel=\"nofollow\">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>\nMox
    — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nCommand
    Line Options — <a href=\"https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options\"
    rel=\"nofollow\">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>\nMocks
    and Explicit Contracts — <a href=\"http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/\"
    rel=\"nofollow\">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>\nbypass
    — <a href=\"https://github.com/PSPDFKit-labs/bypass\" rel=\"nofollow\">https://github.com/PSPDFKit-labs/bypass</a><br>\nTest-Driven
    Development with Phoenix — <a href=\"https://www.tddphoenix.com/\" rel=\"nofollow\">https://www.tddphoenix.com/</a><br>\nTracey
    Onim — <a href=\"https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke\"
    rel=\"nofollow\">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>\nPodii
    — <a href=\"https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count\"
    rel=\"nofollow\">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special
    Guests: Andrea Leopardi and Jeffrey Matthias.</p>\n      "
- title: Scaling and The Growth Curve with Francesco Cesarini
  slug: s6e5-cesarini
  link: https://smartlogic.io/podcast/elixir-wizards/s6e5-cesarini
  guid: 3c07dbc2-eadc-48b9-9136-7decec7a0f57
  pubDate: Thu, 03 Jun 2021 06:00:00 -0400
  pubDateFriendly: June  3, 2021
  description: "Joining us for this episode of Elixir Wizards is the vastly experienced
    and well-traveled Francesco Cesarini! Francesco is the founder of Erlang Solutions
    and we are so lucky to have him here on the show to talk about his personal and
    professional journey, and take this great season of shows on the magic of the
    BEAM even further. Francesco takes us through his early interactions with computers
    and coding and the events that led to his decision to study computer science,
    before diving into his move to Sweden, and subsequently the UK, and how this all
    resulted in the founding of his company. Our guest touches on some helpful lessons
    he learned around marketing and branding, particularly related to the name of
    the company and we also discuss how the company grew in stages over the years.
    From there, the conversation turns to Francesco's work on conferences, and his
    commitment to this important feature of the community. We talk about the benefits
    of virtual conferences, what to look forward to, and the team that Francesco works
    with when organizing. To finish off this segment, our guest gives a few recommended
    resources and comments on Erlang syntax too! For today's mini-feature we welcome
    Jeffery Utter who works as a Senior Software Developer at Bleacher Report, so
    make sure to tune in to catch it all!\nKey Points From This Episode:\nFrancesco's
    route into coding from an early age and first forays into studying computer science.\nThe
    first job that Francesco had out of college: an exciting internship at Ericsson.
    \nHow Francesco founded Erlang Solutions after leaving Sweden and moving to London.
    \nThe big growth steps that happened over the years as Erlang Solutions developed.\nFrancesco's
    evolving mindset during this growth period and his attitude towards scaling the
    company. \nThe current size of the company and the offices that are spread all
    over the world! \nVirtual conferences, more connectivity, and the benefits of
    getting involved in the community. \nThe planning process for conferences and
    the size of the team that put them together. \nThe growth curve for Erlang Solutions
    over the years and the main drivers in the process. \nExamples from the explanatory
    videos that Francesco produced to help people understand Erlang.  \nFrancesco's
    feelings about Erlang syntax and the misconceptions about its difficulty.\nRecommendations
    of helpful resources to aid the learning curve.\nGetting involved with Erlang
    Solutions and connecting with Francesco and his team!\nJeffery Utter from Bleacher
    Report joins us to briefly talk about his journey with Elixir.\nThe time that
    Jeffery spent working at Communication Service for the Deaf prior to Bleacher
    Report.\nSome updates on the growth and evolution of Bleacher Report and what
    they offer users.\nHow Elixir is used at Bleacher Report and its succession of
    Ruby at the company. \nJeffery's alternate career paths and qualifications in
    music and education!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixir Conference — http://smr.tl/conf-podcast\nFrancesco Cesarini on Twitter
    — https://twitter.com/FrancescoC\nJoe Armstrong — https://codersatwork.com/joe-armstrong.html\nErlang
    Solutions — https://www.erlang-solutions.com/\nErlang Programming Language - Computerphile
    — https://www.youtube.com/watch?v=SOqQVoVai6s\nChalmers University of Technology
    — https://www.chalmers.se/en/Pages/default.aspx\nErlang & Elixir Developers |
    Careers at Erlang Solutions — https://www.erlang-solutions.com/careers/\nCode
    BEAM V SF 2021 — https://codesync.global/conferences/code-beam-sf-2021/.\nRabbitMQ
    Summit— https://rabbitmqsummit.com/\nLanguages, and about languages, on the BEAM
    — https://github.com/llaisdy/beam_languages\nLambda Days 2021 — https://www.lambdadays.org/lambdadays2021\nCode
    Mesh — https://codesync.global/conferences/code-mesh-ldn\nErlang Master Classes
    University of Kent — https://www.cs.kent.ac.uk/ErlangMasterClasses/\nProfessor
    Simon Thompson — https://www.kent.ac.uk/computing/people/3164/thompson-simon\nDesigning
    for Scalability with Erlang/OTP — https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\nErlang
    Programming — https://www.oreilly.com/library/view/erlang-programming/9780596803940/\nJeffery
    Utter — https://www.linkedin.com/in/jeffutter\nBleacher Report — https://bleacherreport.com/\nCommunication
    Service for the Deaf — https://www.csd.org/\nGallaudet University — https://www.gallaudet.edu/
    \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XI8Bq-gm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3c07dbc2-eadc-48b9-9136-7decec7a0f57.mp3
    length: '44755930'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Francesco Cesarini is the founder of Erlang Solutions and we are so
      lucky to have him here on the show to talk about his personal and professional
      journey, and take this great season of shows on the magic of the BEAM even further.
    duration: '46:33'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3c07dbc2-eadc-48b9-9136-7decec7a0f57/cover.jpg?v=1
    summary: "\n        <p>Joining us for this episode of Elixir Wizards is the vastly
      experienced and well-traveled Francesco Cesarini! Francesco is the founder of
      Erlang Solutions and we are so lucky to have him here on the show to talk about
      his personal and professional journey, and take this great season of shows on
      the magic of the BEAM even further. Francesco takes us through his early interactions
      with computers and coding and the events that led to his decision to study computer
      science, before diving into his move to Sweden, and subsequently the UK, and
      how this all resulted in the founding of his company. Our guest touches on some
      helpful lessons he learned around marketing and branding, particularly related
      to the name of the company and we also discuss how the company grew in stages
      over the years. From there, the conversation turns to Francesco&#39;s work on
      conferences, and his commitment to this important feature of the community.
      We talk about the benefits of virtual conferences, what to look forward to,
      and the team that Francesco works with when organizing. To finish off this segment,
      our guest gives a few recommended resources and comments on Erlang syntax too!
      For today&#39;s mini-feature we welcome Jeffery Utter who works as a Senior
      Software Developer at Bleacher Report, so make sure to tune in to catch it all!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Francesco&#39;s route into coding
      from an early age and first forays into studying computer science.</li>\n<li>The
      first job that Francesco had out of college: an exciting internship at Ericsson.
      </li>\n<li>How Francesco founded Erlang Solutions after leaving Sweden and moving
      to London. </li>\n<li>The big growth steps that happened over the years as Erlang
      Solutions developed.</li>\n<li>Francesco&#39;s evolving mindset during this
      growth period and his attitude towards scaling the company. </li>\n<li>The current
      size of the company and the offices that are spread all over the world! </li>\n<li>Virtual
      conferences, more connectivity, and the benefits of getting involved in the
      community. </li>\n<li>The planning process for conferences and the size of the
      team that put them together. </li>\n<li>The growth curve for Erlang Solutions
      over the years and the main drivers in the process. </li>\n<li>Examples from
      the explanatory videos that Francesco produced to help people understand Erlang.<br></li>\n<li>Francesco&#39;s
      feelings about Erlang syntax and the misconceptions about its difficulty.</li>\n<li>Recommendations
      of helpful resources to aid the learning curve.</li>\n<li>Getting involved with
      Erlang Solutions and connecting with Francesco and his team!</li>\n<li>Jeffery
      Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>\n<li>The
      time that Jeffery spent working at Communication Service for the Deaf prior
      to Bleacher Report.</li>\n<li>Some updates on the growth and evolution of Bleacher
      Report and what they offer users.</li>\n<li>How Elixir is used at Bleacher Report
      and its succession of Ruby at the company. </li>\n<li>Jeffery&#39;s alternate
      career paths and qualifications in music and education!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Conference — <a href=\"http://smr.tl/conf-podcast\"
      rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nFrancesco Cesarini on Twitter
      — <a href=\"https://twitter.com/FrancescoC\" rel=\"nofollow\">https://twitter.com/FrancescoC</a><br>\nJoe
      Armstrong — <a href=\"https://codersatwork.com/joe-armstrong.html\" rel=\"nofollow\">https://codersatwork.com/joe-armstrong.html</a><br>\nErlang
      Solutions — <a href=\"https://www.erlang-solutions.com/\" rel=\"nofollow\">https://www.erlang-solutions.com/</a><br>\nErlang
      Programming Language - Computerphile — <a href=\"https://www.youtube.com/watch?v=SOqQVoVai6s\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>\nChalmers
      University of Technology — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\"
      rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nErlang
      &amp; Elixir Developers | Careers at Erlang Solutions — <a href=\"https://www.erlang-solutions.com/careers/\"
      rel=\"nofollow\">https://www.erlang-solutions.com/careers/</a><br>\nCode BEAM
      V SF 2021 — <a href=\"https://codesync.global/conferences/code-beam-sf-2021/\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>\nRabbitMQ
      Summit— <a href=\"https://rabbitmqsummit.com/\" rel=\"nofollow\">https://rabbitmqsummit.com/</a><br>\nLanguages,
      and about languages, on the BEAM — <a href=\"https://github.com/llaisdy/beam_languages\"
      rel=\"nofollow\">https://github.com/llaisdy/beam_languages</a><br>\nLambda Days
      2021 — <a href=\"https://www.lambdadays.org/lambdadays2021\" rel=\"nofollow\">https://www.lambdadays.org/lambdadays2021</a><br>\nCode
      Mesh — <a href=\"https://codesync.global/conferences/code-mesh-ldn\" rel=\"nofollow\">https://codesync.global/conferences/code-mesh-ldn</a><br>\nErlang
      Master Classes University of Kent — <a href=\"https://www.cs.kent.ac.uk/ErlangMasterClasses/\"
      rel=\"nofollow\">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>\nProfessor
      Simon Thompson — <a href=\"https://www.kent.ac.uk/computing/people/3164/thompson-simon\"
      rel=\"nofollow\">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>\nDesigning
      for Scalability with Erlang/OTP — <a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>\nErlang
      Programming — <a href=\"https://www.oreilly.com/library/view/erlang-programming/9780596803940/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>\nJeffery
      Utter — <a href=\"https://www.linkedin.com/in/jeffutter\" rel=\"nofollow\">https://www.linkedin.com/in/jeffutter</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nCommunication
      Service for the Deaf — <a href=\"https://www.csd.org/\" rel=\"nofollow\">https://www.csd.org/</a><br>\nGallaudet
      University — <a href=\"https://www.gallaudet.edu/\" rel=\"nofollow\">https://www.gallaudet.edu/</a></p>\n
      \     "
  contentEncoded: "\n        <p>Joining us for this episode of Elixir Wizards is the
    vastly experienced and well-traveled Francesco Cesarini! Francesco is the founder
    of Erlang Solutions and we are so lucky to have him here on the show to talk about
    his personal and professional journey, and take this great season of shows on
    the magic of the BEAM even further. Francesco takes us through his early interactions
    with computers and coding and the events that led to his decision to study computer
    science, before diving into his move to Sweden, and subsequently the UK, and how
    this all resulted in the founding of his company. Our guest touches on some helpful
    lessons he learned around marketing and branding, particularly related to the
    name of the company and we also discuss how the company grew in stages over the
    years. From there, the conversation turns to Francesco&#39;s work on conferences,
    and his commitment to this important feature of the community. We talk about the
    benefits of virtual conferences, what to look forward to, and the team that Francesco
    works with when organizing. To finish off this segment, our guest gives a few
    recommended resources and comments on Erlang syntax too! For today&#39;s mini-feature
    we welcome Jeffery Utter who works as a Senior Software Developer at Bleacher
    Report, so make sure to tune in to catch it all!</p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>Francesco&#39;s route into coding from an early age
    and first forays into studying computer science.</li>\n<li>The first job that
    Francesco had out of college: an exciting internship at Ericsson. </li>\n<li>How
    Francesco founded Erlang Solutions after leaving Sweden and moving to London.
    </li>\n<li>The big growth steps that happened over the years as Erlang Solutions
    developed.</li>\n<li>Francesco&#39;s evolving mindset during this growth period
    and his attitude towards scaling the company. </li>\n<li>The current size of the
    company and the offices that are spread all over the world! </li>\n<li>Virtual
    conferences, more connectivity, and the benefits of getting involved in the community.
    </li>\n<li>The planning process for conferences and the size of the team that
    put them together. </li>\n<li>The growth curve for Erlang Solutions over the years
    and the main drivers in the process. </li>\n<li>Examples from the explanatory
    videos that Francesco produced to help people understand Erlang.<br></li>\n<li>Francesco&#39;s
    feelings about Erlang syntax and the misconceptions about its difficulty.</li>\n<li>Recommendations
    of helpful resources to aid the learning curve.</li>\n<li>Getting involved with
    Erlang Solutions and connecting with Francesco and his team!</li>\n<li>Jeffery
    Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>\n<li>The
    time that Jeffery spent working at Communication Service for the Deaf prior to
    Bleacher Report.</li>\n<li>Some updates on the growth and evolution of Bleacher
    Report and what they offer users.</li>\n<li>How Elixir is used at Bleacher Report
    and its succession of Ruby at the company. </li>\n<li>Jeffery&#39;s alternate
    career paths and qualifications in music and education!</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Conference — <a href=\"http://smr.tl/conf-podcast\"
    rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nFrancesco Cesarini on Twitter
    — <a href=\"https://twitter.com/FrancescoC\" rel=\"nofollow\">https://twitter.com/FrancescoC</a><br>\nJoe
    Armstrong — <a href=\"https://codersatwork.com/joe-armstrong.html\" rel=\"nofollow\">https://codersatwork.com/joe-armstrong.html</a><br>\nErlang
    Solutions — <a href=\"https://www.erlang-solutions.com/\" rel=\"nofollow\">https://www.erlang-solutions.com/</a><br>\nErlang
    Programming Language - Computerphile — <a href=\"https://www.youtube.com/watch?v=SOqQVoVai6s\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>\nChalmers
    University of Technology — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\"
    rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nErlang
    &amp; Elixir Developers | Careers at Erlang Solutions — <a href=\"https://www.erlang-solutions.com/careers/\"
    rel=\"nofollow\">https://www.erlang-solutions.com/careers/</a><br>\nCode BEAM
    V SF 2021 — <a href=\"https://codesync.global/conferences/code-beam-sf-2021/\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>\nRabbitMQ
    Summit— <a href=\"https://rabbitmqsummit.com/\" rel=\"nofollow\">https://rabbitmqsummit.com/</a><br>\nLanguages,
    and about languages, on the BEAM — <a href=\"https://github.com/llaisdy/beam_languages\"
    rel=\"nofollow\">https://github.com/llaisdy/beam_languages</a><br>\nLambda Days
    2021 — <a href=\"https://www.lambdadays.org/lambdadays2021\" rel=\"nofollow\">https://www.lambdadays.org/lambdadays2021</a><br>\nCode
    Mesh — <a href=\"https://codesync.global/conferences/code-mesh-ldn\" rel=\"nofollow\">https://codesync.global/conferences/code-mesh-ldn</a><br>\nErlang
    Master Classes University of Kent — <a href=\"https://www.cs.kent.ac.uk/ErlangMasterClasses/\"
    rel=\"nofollow\">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>\nProfessor
    Simon Thompson — <a href=\"https://www.kent.ac.uk/computing/people/3164/thompson-simon\"
    rel=\"nofollow\">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>\nDesigning
    for Scalability with Erlang/OTP — <a href=\"https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>\nErlang
    Programming — <a href=\"https://www.oreilly.com/library/view/erlang-programming/9780596803940/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>\nJeffery
    Utter — <a href=\"https://www.linkedin.com/in/jeffutter\" rel=\"nofollow\">https://www.linkedin.com/in/jeffutter</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nCommunication
    Service for the Deaf — <a href=\"https://www.csd.org/\" rel=\"nofollow\">https://www.csd.org/</a><br>\nGallaudet
    University — <a href=\"https://www.gallaudet.edu/\" rel=\"nofollow\">https://www.gallaudet.edu/</a></p>\n
    \     "
- title: Bringing the Magic of Math into Programming with Chris Miller
  slug: s6e4-miller
  link: https://smartlogic.io/podcast/elixir-wizards/s6e4-miller
  guid: 95a7bb65-24d3-4155-bd40-9a4b4a94fbbb
  pubDate: Thu, 27 May 2021 06:00:00 -0400
  pubDateFriendly: May 27, 2021
  description: "Today we have some extra BEAM magic for all of you! Joining us on
    the show is Chris Miller, who currently works as an Associate Software Engineer
    at Corvus Insurance. We get into a great conversation with Chris about his history
    with programming, his long-held interest in mathematics, and how he is trying
    to bring these two worlds closer together through his work. Chris weighs in with
    some very important expert perspectives on a range of subjects, from monads and
    monoids to Vim and Emacs, before we get into the different avenues of Chris' work.
    Along with an old college friend, Chris runs the informative YouTube Channel,
    Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual,
    speaking Mandarin, Spanish, German, and English! We get some illumination on interesting
    and important concepts such as Turing completeness, programming language theory,
    and more, all delivered with an accessibility that belies the high level of the
    material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney
    Leatherwood, at the end, be sure to listen in today!\nKey Points From This Episode:\nThe
    story behind Chris' Twitter handle and his admiration for Leonhard Euler! \nHow
    Chris is bringing his love of math into his programming work. \nA crash course
    on monads and monoids! \nChris' teaching and tutoring work and his aim of bringing
    fun examples into learning. \nThe YouTube channel that Chris runs with an old
    friend, called Coding Cave. \nChris' take on the Vim versus Emacs debate.\nHow
    Chris learned to program from his father, and his return to it during college.
    \nUnpacking programming language theory and the idea of Turing completeness. \nChris
    clears up the difference between computer science and mathematics.\nReasons that
    Chris enjoys working in Elixir compared with other languages.    \nChris' goals
    for his YouTube channel and his hopes to spread advanced education. \nMagic and
    languages; a programming language theory perspective. \nChris' day job as a software
    engineer at Corvus Insurance using Elixir and Elm.\nThe array of languages that
    Chris can speak; Mandarin, German, and Spanish. \nThe process of language acquisition
    and Chris' methods for learning. \nWhy Chris believes starting with the function
    is the best way to learn a new programming language. \nThe aspects of Elixir and
    the BEAM that have Chris the most excited at the moment! \nThis week's mini-feature
    with Sidney Leatherwood and his use of Elixir in production.\nThe comparative
    rating service that Semsee offers their customers.\nHiring in Elixir currently;
    perks, challenges, and resources in the space. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nChris Miller on Twitter — https://twitter.com/blackeuler\nElixir
    Wizard Conference — http://smr.tl/conf-podcast\nLeonhard Euler — https://en.wikipedia.org/wiki/LeonhardEuler\nCurry–Howard
    Correspondence — https://en.wikipedia.org/wiki/Curry%E2%80%93Howardcorrespondence\nHaskell
    — https://www.haskell.org/\nBrooklyn Zelenka — https://medium.com/@expede\nCoding
    Cave — https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYovg\nConversations
    with the Creator: José Valim — https://www.youtube.com/watch?v=BXpoKKkqAX4\nFunctor
    — https://en.wikipedia.org/wiki/Functor\nSpacemacs: Emacs advanced Kit focused
    on Evil — https://www.spacemacs.org/\nhlissner/doom-emacs — https://github.com/hlissner/doom-emacs\nTuring
    Completeness — https://en.wikipedia.org/wiki/Turingcompleteness\nCal Newport —
    https://www.calnewport.com/\nBoolean Algebra — https://en.wikipedia.org/wiki/Booleanalgebra\nClojure
    — https://clojure.org/\nCorvus Insurance — https://www.corvusinsurance.com/\nAPL
    — https://en.wikipedia.org/wiki/APL(programming_language)\nGleam - https://gleam.run/\nSidney
    Leatherwood on LinkedIn — https://www.linkedin.com/in/leather-s\nSemsee — https://semsee.com/
    Special Guest: Chris Miller.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+iK3LS_7b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb.mp3
    length: '52082260'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today we have some extra BEAM magic for all of you! Joining us on the
      show is Chris Miller with Corvus Insurance. We get into a great conversation
      with Chris about his history with programming, his long-held interest in mathematics,
      and how he is trying to bring these two worlds closer together through his work.
    duration: '54:11'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb/cover.jpg?v=1
    summary: "\n        <p>Today we have some extra BEAM magic for all of you! Joining
      us on the show is Chris Miller, who currently works as an Associate Software
      Engineer at Corvus Insurance. We get into a great conversation with Chris about
      his history with programming, his long-held interest in mathematics, and how
      he is trying to bring these two worlds closer together through his work. Chris
      weighs in with some very important expert perspectives on a range of subjects,
      from monads and monoids to Vim and Emacs, before we get into the different avenues
      of Chris&#39; work. Along with an old college friend, Chris runs the informative
      YouTube Channel, Coding Cave, helps other coders through mentorship and tutoring,
      and is also multilingual, speaking Mandarin, Spanish, German, and English! We
      get some illumination on interesting and important concepts such as Turing completeness,
      programming language theory, and more, all delivered with an accessibility that
      belies the high level of the material. So for all this, plus our bonus mini-segment
      with Semsee employee, Sidney Leatherwood, at the end, be sure to listen in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>The story behind Chris&#39; Twitter
      handle and his admiration for Leonhard Euler! </li>\n<li>How Chris is bringing
      his love of math into his programming work. </li>\n<li>A crash course on monads
      and monoids! </li>\n<li>Chris&#39; teaching and tutoring work and his aim of
      bringing fun examples into learning. </li>\n<li>The YouTube channel that Chris
      runs with an old friend, called Coding Cave. </li>\n<li>Chris&#39; take on the
      Vim versus Emacs debate.</li>\n<li>How Chris learned to program from his father,
      and his return to it during college. </li>\n<li>Unpacking programming language
      theory and the idea of Turing completeness. </li>\n<li>Chris clears up the difference
      between computer science and mathematics.</li>\n<li>Reasons that Chris enjoys
      working in Elixir compared with other languages.<br></li>\n<li>Chris&#39; goals
      for his YouTube channel and his hopes to spread advanced education. </li>\n<li>Magic
      and languages; a programming language theory perspective. </li>\n<li>Chris&#39;
      day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>\n<li>The
      array of languages that Chris can speak; Mandarin, German, and Spanish. </li>\n<li>The
      process of language acquisition and Chris&#39; methods for learning. </li>\n<li>Why
      Chris believes starting with the function is the best way to learn a new programming
      language. </li>\n<li>The aspects of Elixir and the BEAM that have Chris the
      most excited at the moment! </li>\n<li>This week&#39;s mini-feature with Sidney
      Leatherwood and his use of Elixir in production.</li>\n<li>The comparative rating
      service that Semsee offers their customers.</li>\n<li>Hiring in Elixir currently;
      perks, challenges, and resources in the space. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Miller on Twitter —
      <a href=\"https://twitter.com/blackeuler\" rel=\"nofollow\">https://twitter.com/blackeuler</a><br>\nElixir
      Wizard Conference — <a href=\"http://smr.tl/conf-podcast\" rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nLeonhard
      Euler — <a href=\"https://en.wikipedia.org/wiki/Leonhard_Euler\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>\nCurry–Howard
      Correspondence — <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nBrooklyn
      Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nCoding
      Cave — <a href=\"https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g\"
      rel=\"nofollow\">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>\nConversations
      with the Creator: José Valim — <a href=\"https://www.youtube.com/watch?v=BXpoKKkqAX4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>\nFunctor
      — <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Functor</a><br>\nSpacemacs:
      Emacs advanced Kit focused on Evil — <a href=\"https://www.spacemacs.org/\"
      rel=\"nofollow\">https://www.spacemacs.org/</a><br>\nhlissner/doom-emacs — <a
      href=\"https://github.com/hlissner/doom-emacs\" rel=\"nofollow\">https://github.com/hlissner/doom-emacs</a><br>\nTuring
      Completeness — <a href=\"https://en.wikipedia.org/wiki/Turing_completeness\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Turing_completeness</a><br>\nCal
      Newport — <a href=\"https://www.calnewport.com/\" rel=\"nofollow\">https://www.calnewport.com/</a><br>\nBoolean
      Algebra — <a href=\"https://en.wikipedia.org/wiki/Boolean_algebra\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nCorvus
      Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nAPL
      — <a href=\"https://en.wikipedia.org/wiki/APL_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>\nGleam
      - <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nSidney
      Leatherwood on LinkedIn — <a href=\"https://www.linkedin.com/in/leather-s\"
      rel=\"nofollow\">https://www.linkedin.com/in/leather-s</a><br>\nSemsee — <a
      href=\"https://semsee.com/\" rel=\"nofollow\">https://semsee.com/</a></p><p>Special
      Guest: Chris Miller.</p>\n      "
  contentEncoded: "\n        <p>Today we have some extra BEAM magic for all of you!
    Joining us on the show is Chris Miller, who currently works as an Associate Software
    Engineer at Corvus Insurance. We get into a great conversation with Chris about
    his history with programming, his long-held interest in mathematics, and how he
    is trying to bring these two worlds closer together through his work. Chris weighs
    in with some very important expert perspectives on a range of subjects, from monads
    and monoids to Vim and Emacs, before we get into the different avenues of Chris&#39;
    work. Along with an old college friend, Chris runs the informative YouTube Channel,
    Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual,
    speaking Mandarin, Spanish, German, and English! We get some illumination on interesting
    and important concepts such as Turing completeness, programming language theory,
    and more, all delivered with an accessibility that belies the high level of the
    material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney
    Leatherwood, at the end, be sure to listen in today!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>The story behind Chris&#39; Twitter handle and
    his admiration for Leonhard Euler! </li>\n<li>How Chris is bringing his love of
    math into his programming work. </li>\n<li>A crash course on monads and monoids!
    </li>\n<li>Chris&#39; teaching and tutoring work and his aim of bringing fun examples
    into learning. </li>\n<li>The YouTube channel that Chris runs with an old friend,
    called Coding Cave. </li>\n<li>Chris&#39; take on the Vim versus Emacs debate.</li>\n<li>How
    Chris learned to program from his father, and his return to it during college.
    </li>\n<li>Unpacking programming language theory and the idea of Turing completeness.
    </li>\n<li>Chris clears up the difference between computer science and mathematics.</li>\n<li>Reasons
    that Chris enjoys working in Elixir compared with other languages.<br></li>\n<li>Chris&#39;
    goals for his YouTube channel and his hopes to spread advanced education. </li>\n<li>Magic
    and languages; a programming language theory perspective. </li>\n<li>Chris&#39;
    day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>\n<li>The
    array of languages that Chris can speak; Mandarin, German, and Spanish. </li>\n<li>The
    process of language acquisition and Chris&#39; methods for learning. </li>\n<li>Why
    Chris believes starting with the function is the best way to learn a new programming
    language. </li>\n<li>The aspects of Elixir and the BEAM that have Chris the most
    excited at the moment! </li>\n<li>This week&#39;s mini-feature with Sidney Leatherwood
    and his use of Elixir in production.</li>\n<li>The comparative rating service
    that Semsee offers their customers.</li>\n<li>Hiring in Elixir currently; perks,
    challenges, and resources in the space. </li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nChris Miller on Twitter — <a href=\"https://twitter.com/blackeuler\" rel=\"nofollow\">https://twitter.com/blackeuler</a><br>\nElixir
    Wizard Conference — <a href=\"http://smr.tl/conf-podcast\" rel=\"nofollow\">http://smr.tl/conf-podcast</a><br>\nLeonhard
    Euler — <a href=\"https://en.wikipedia.org/wiki/Leonhard_Euler\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>\nCurry–Howard
    Correspondence — <a href=\"https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nBrooklyn
    Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nCoding
    Cave — <a href=\"https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g\" rel=\"nofollow\">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>\nConversations
    with the Creator: José Valim — <a href=\"https://www.youtube.com/watch?v=BXpoKKkqAX4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>\nFunctor
    — <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Functor</a><br>\nSpacemacs:
    Emacs advanced Kit focused on Evil — <a href=\"https://www.spacemacs.org/\" rel=\"nofollow\">https://www.spacemacs.org/</a><br>\nhlissner/doom-emacs
    — <a href=\"https://github.com/hlissner/doom-emacs\" rel=\"nofollow\">https://github.com/hlissner/doom-emacs</a><br>\nTuring
    Completeness — <a href=\"https://en.wikipedia.org/wiki/Turing_completeness\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Turing_completeness</a><br>\nCal
    Newport — <a href=\"https://www.calnewport.com/\" rel=\"nofollow\">https://www.calnewport.com/</a><br>\nBoolean
    Algebra — <a href=\"https://en.wikipedia.org/wiki/Boolean_algebra\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nCorvus
    Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nAPL
    — <a href=\"https://en.wikipedia.org/wiki/APL_(programming_language)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>\nGleam
    - <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nSidney
    Leatherwood on LinkedIn — <a href=\"https://www.linkedin.com/in/leather-s\" rel=\"nofollow\">https://www.linkedin.com/in/leather-s</a><br>\nSemsee
    — <a href=\"https://semsee.com/\" rel=\"nofollow\">https://semsee.com/</a></p><p>Special
    Guest: Chris Miller.</p>\n      "
- title: The Controlled Magic of Oban with Parker and Shannon Selbert
  slug: s6e3-selbert
  link: https://smartlogic.io/podcast/elixir-wizards/s6e3-selbert
  guid: 943755c0-4bf5-4c89-949c-44406ea58584
  pubDate: Thu, 20 May 2021 06:00:00 -0400
  pubDateFriendly: May 20, 2021
  description: "While there is magic to be found in many frameworks, having too much
    going on under the hood without you being able to control it is not for everybody.
    Today we invite Parker and Shannon Selbert to speak about their dynamic partnership
    and the ‘controlled magic’ of their tool Oban. Together Parker and Shannon founded
    Soren, where they help clients with established web apps stabilize, scale, and
    ‘add schmancy features’. Their tool Oban is a persistent background job processor
    written in Elixir whose differentiating feature revolves around keeping jobs after
    they're processed. We dive right in with Parker and Shannon hearing about how
    they got into programming before they talk about Oban and what sets it apart.
    Next up we get into how our guests navigate their personal relationship and professional
    partnership and they weigh in on homeschooling kids, writing new features, and
    the necessary life skills for handling Oban user support. Moving onto the topic
    of the BEAM, we explore the unique type of magic it offers and how this plays
    into some of the cooler features of Oban such as being able to cancel jobs. Our
    guests talk about some of the kinks they still need to work out of their tool
    and we wrap up our conversation on the pro version of Oban and how successful
    it has been. As always we close today’s show off with our mini-interview, this
    time with Joe Peck from Spreedly!\nKey Points From This Episode:\nThe illicit
    stories behind how Parker and Shannon got into tech.\nUnderstanding Oban, a persistent
    background job processor written in Elixir.\nHow Oban is different from other
    job processors like Sidekiq.\nThe great partnership our guests have and the story
    behind Soren.\nHow Parker and Shannon differentiate their personal and professional
    life.\nThe approach Parker and Shannon take to handling Oban user support.\nPerspectives
    on the magic of homeschooling, relationships, and Oban!\nDifferent kinds of magic
    provided by different frameworks and why Elixir magic is the best.\nHow Parker
    and Shannon got interested in Erlang, BEAM, and Elixir.\nThe best part about maintaining
    an open-source project.\nThe story behind getting a global concurrency lock on
    handling batches.\nAdded features that come with upgrading to the pro version
    of Oban.\nCanceling a job on Oban and the role the BEAM plays in allowing this.\nWriting
    documentation for Oban and our guest’s plans to make video tutorials.\nThe shift
    in digital learning more towards video tutorials.\nPerspectives on whether we
    have arrived at a golden age in computing yet.\nChallenges around implementing
    seamless horizontal scaling in Oban.\nMaking a living and working on Oban; advantages
    of setting up a pro version.\nOur mini-interview with Joe Peck where we explore
    his journey with Elixir.\nLinks Mentioned in Today’s Episode:\nElixir Wizards
    |> Conference — https://smr.tl/conf-podcast\nSmartLogic — https://smartlogic.io/
    \nSoren on Twitter — https://twitter.com/sorentwo?lang=en\nSoren — https://sorentwo.com/\nParker
    Selbert on GitHub — https://github.com/sorentwo\nShannon Selbert on GitHub — https://github.com/sorenone\nOban
    — https://github.com/sorentwo/oban\nSidekiq — https://sidekiq.org/\nLawnmower
    Man — https://www.imdb.com/title/tt0104692/\nSoren Kierkegaard — https://www.britannica.com/biography/Soren-Kierkegaard\nEnder's
    Game — https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\nJoe
    Peck  — https://peckyeah.com/\nSpreedly — https://www.spreedly.com/\n Special
    Guests: Parker Selbert and Shannon Selbert.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+QjkFjeck
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/943755c0-4bf5-4c89-949c-44406ea58584.mp3
    length: '43252983'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: While there is magic to be found in many frameworks, having too much
      going on without being able to control it is not for everybody. Today Parker
      and Shannon Selbert talk about their dynamic partnership and the ‘controlled
      magic’ of their tool Oban.
    duration: '50:21'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/943755c0-4bf5-4c89-949c-44406ea58584/cover.jpg?v=3
    summary: "\n        <p>While there is magic to be found in many frameworks, having
      too much going on under the hood without you being able to control it is not
      for everybody. Today we invite Parker and Shannon Selbert to speak about their
      dynamic partnership and the ‘controlled magic’ of their tool Oban. Together
      Parker and Shannon founded Soren, where they help clients with established web
      apps stabilize, scale, and ‘add schmancy features’. Their tool Oban is a persistent
      background job processor written in Elixir whose differentiating feature revolves
      around keeping jobs after they&#39;re processed. We dive right in with Parker
      and Shannon hearing about how they got into programming before they talk about
      Oban and what sets it apart. Next up we get into how our guests navigate their
      personal relationship and professional partnership and they weigh in on homeschooling
      kids, writing new features, and the necessary life skills for handling Oban
      user support. Moving onto the topic of the BEAM, we explore the unique type
      of magic it offers and how this plays into some of the cooler features of Oban
      such as being able to cancel jobs. Our guests talk about some of the kinks they
      still need to work out of their tool and we wrap up our conversation on the
      pro version of Oban and how successful it has been. As always we close today’s
      show off with our mini-interview, this time with Joe Peck from Spreedly!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>The illicit stories behind how Parker
      and Shannon got into tech.</li>\n<li>Understanding Oban, a persistent background
      job processor written in Elixir.</li>\n<li>How Oban is different from other
      job processors like Sidekiq.</li>\n<li>The great partnership our guests have
      and the story behind Soren.</li>\n<li>How Parker and Shannon differentiate their
      personal and professional life.</li>\n<li>The approach Parker and Shannon take
      to handling Oban user support.</li>\n<li>Perspectives on the magic of homeschooling,
      relationships, and Oban!</li>\n<li>Different kinds of magic provided by different
      frameworks and why Elixir magic is the best.</li>\n<li>How Parker and Shannon
      got interested in Erlang, BEAM, and Elixir.</li>\n<li>The best part about maintaining
      an open-source project.</li>\n<li>The story behind getting a global concurrency
      lock on handling batches.</li>\n<li>Added features that come with upgrading
      to the pro version of Oban.</li>\n<li>Canceling a job on Oban and the role the
      BEAM plays in allowing this.</li>\n<li>Writing documentation for Oban and our
      guest’s plans to make video tutorials.</li>\n<li>The shift in digital learning
      more towards video tutorials.</li>\n<li>Perspectives on whether we have arrived
      at a golden age in computing yet.</li>\n<li>Challenges around implementing seamless
      horizontal scaling in Oban.</li>\n<li>Making a living and working on Oban; advantages
      of setting up a pro version.</li>\n<li>Our mini-interview with Joe Peck where
      we explore his journey with Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>Elixir Wizards |&gt; Conference — <a href=\"https://smr.tl/conf-podcast\"
      rel=\"nofollow\">https://smr.tl/conf-podcast</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSoren on Twitter — <a href=\"https://twitter.com/sorentwo?lang=en\"
      rel=\"nofollow\">https://twitter.com/sorentwo?lang=en</a><br>\nSoren — <a href=\"https://sorentwo.com/\"
      rel=\"nofollow\">https://sorentwo.com/</a><br>\nParker Selbert on GitHub — <a
      href=\"https://github.com/sorentwo\" rel=\"nofollow\">https://github.com/sorentwo</a><br>\nShannon
      Selbert on GitHub — <a href=\"https://github.com/sorenone\" rel=\"nofollow\">https://github.com/sorenone</a><br>\nOban
      — <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a><br>\nSidekiq
      — <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a><br>\nLawnmower
      Man — <a href=\"https://www.imdb.com/title/tt0104692/\" rel=\"nofollow\">https://www.imdb.com/title/tt0104692/</a><br>\nSoren
      Kierkegaard — <a href=\"https://www.britannica.com/biography/Soren-Kierkegaard\"
      rel=\"nofollow\">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>\nEnder&#39;s
      Game — <a href=\"https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\"
      rel=\"nofollow\">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>\nJoe
      Peck  — <a href=\"https://peckyeah.com/\" rel=\"nofollow\">https://peckyeah.com/</a><br>\nSpreedly
      — <a href=\"https://www.spreedly.com/\" rel=\"nofollow\">https://www.spreedly.com/</a></p><p>Special
      Guests: Parker Selbert and Shannon Selbert.</p>\n      "
  contentEncoded: "\n        <p>While there is magic to be found in many frameworks,
    having too much going on under the hood without you being able to control it is
    not for everybody. Today we invite Parker and Shannon Selbert to speak about their
    dynamic partnership and the ‘controlled magic’ of their tool Oban. Together Parker
    and Shannon founded Soren, where they help clients with established web apps stabilize,
    scale, and ‘add schmancy features’. Their tool Oban is a persistent background
    job processor written in Elixir whose differentiating feature revolves around
    keeping jobs after they&#39;re processed. We dive right in with Parker and Shannon
    hearing about how they got into programming before they talk about Oban and what
    sets it apart. Next up we get into how our guests navigate their personal relationship
    and professional partnership and they weigh in on homeschooling kids, writing
    new features, and the necessary life skills for handling Oban user support. Moving
    onto the topic of the BEAM, we explore the unique type of magic it offers and
    how this plays into some of the cooler features of Oban such as being able to
    cancel jobs. Our guests talk about some of the kinks they still need to work out
    of their tool and we wrap up our conversation on the pro version of Oban and how
    successful it has been. As always we close today’s show off with our mini-interview,
    this time with Joe Peck from Spreedly!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    illicit stories behind how Parker and Shannon got into tech.</li>\n<li>Understanding
    Oban, a persistent background job processor written in Elixir.</li>\n<li>How Oban
    is different from other job processors like Sidekiq.</li>\n<li>The great partnership
    our guests have and the story behind Soren.</li>\n<li>How Parker and Shannon differentiate
    their personal and professional life.</li>\n<li>The approach Parker and Shannon
    take to handling Oban user support.</li>\n<li>Perspectives on the magic of homeschooling,
    relationships, and Oban!</li>\n<li>Different kinds of magic provided by different
    frameworks and why Elixir magic is the best.</li>\n<li>How Parker and Shannon
    got interested in Erlang, BEAM, and Elixir.</li>\n<li>The best part about maintaining
    an open-source project.</li>\n<li>The story behind getting a global concurrency
    lock on handling batches.</li>\n<li>Added features that come with upgrading to
    the pro version of Oban.</li>\n<li>Canceling a job on Oban and the role the BEAM
    plays in allowing this.</li>\n<li>Writing documentation for Oban and our guest’s
    plans to make video tutorials.</li>\n<li>The shift in digital learning more towards
    video tutorials.</li>\n<li>Perspectives on whether we have arrived at a golden
    age in computing yet.</li>\n<li>Challenges around implementing seamless horizontal
    scaling in Oban.</li>\n<li>Making a living and working on Oban; advantages of
    setting up a pro version.</li>\n<li>Our mini-interview with Joe Peck where we
    explore his journey with Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Elixir Wizards |&gt; Conference — <a href=\"https://smr.tl/conf-podcast\"
    rel=\"nofollow\">https://smr.tl/conf-podcast</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSoren on Twitter — <a href=\"https://twitter.com/sorentwo?lang=en\"
    rel=\"nofollow\">https://twitter.com/sorentwo?lang=en</a><br>\nSoren — <a href=\"https://sorentwo.com/\"
    rel=\"nofollow\">https://sorentwo.com/</a><br>\nParker Selbert on GitHub — <a
    href=\"https://github.com/sorentwo\" rel=\"nofollow\">https://github.com/sorentwo</a><br>\nShannon
    Selbert on GitHub — <a href=\"https://github.com/sorenone\" rel=\"nofollow\">https://github.com/sorenone</a><br>\nOban
    — <a href=\"https://github.com/sorentwo/oban\" rel=\"nofollow\">https://github.com/sorentwo/oban</a><br>\nSidekiq
    — <a href=\"https://sidekiq.org/\" rel=\"nofollow\">https://sidekiq.org/</a><br>\nLawnmower
    Man — <a href=\"https://www.imdb.com/title/tt0104692/\" rel=\"nofollow\">https://www.imdb.com/title/tt0104692/</a><br>\nSoren
    Kierkegaard — <a href=\"https://www.britannica.com/biography/Soren-Kierkegaard\"
    rel=\"nofollow\">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>\nEnder&#39;s
    Game — <a href=\"https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706\"
    rel=\"nofollow\">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>\nJoe
    Peck  — <a href=\"https://peckyeah.com/\" rel=\"nofollow\">https://peckyeah.com/</a><br>\nSpreedly
    — <a href=\"https://www.spreedly.com/\" rel=\"nofollow\">https://www.spreedly.com/</a></p><p>Special
    Guests: Parker Selbert and Shannon Selbert.</p>\n      "
- title: The Right Amount of Magic with Erik Person
  slug: s6e2-person
  link: https://smartlogic.io/podcast/elixir-wizards/s6e2-person
  guid: f1486983-1421-45be-87ae-99a0a56ec848
  pubDate: Thu, 13 May 2021 06:00:00 -0400
  pubDateFriendly: May 13, 2021
  description: "Today we are joined by the Vice President of Engineering at Corvus
    Insurance, Erik Person! Erik continues our journey into the magic of the BEAM,
    our season-long theme for the Elixir Wizards Podcast, and we get to hear all about
    Erik's path in programming, his relationship with Elixir, and his utilization
    of the BEAM. Growing up in a family involved in computer science, and an early
    affinity for technology made the choice of what to study at college a straightforward
    one for Erik. He tells us about his life during and after those school years,
    touching on his first job and the important milestones leading up to his current
    position at Corvus. We talk about his early feelings for Elixir and why it appealed
    to him almost immediately before discussing different languages on the BEAM and
    his love of types! Our guest also shares some of the bigger challenges he has
    encountered working in Elixir and touches on the issue of scaling effectively.
    In this episode, we also air a mini-feature with SmartLogic's very own Stephanie
    Vizzi, talking about her work at the company, relationship with Elixir, and more!
    So for all this, plus a lot in between, be sure to tune in!\nKey Points From This
    Episode:\nErik's family ties to computer science and his path leading into programming.
    \nThe first job that Erik landed in programming and his current role at Corvus
    Insurance.\nThe BEAM at Corvus and the general architecture of the company's technology.
    \nErik's first encounters and learnings with Elixir and the questions it answered
    for him immediately.\nThe learning curve for languages on The BEAM; Erik's own
    journey to understanding.\nErik's preference for types and his wish for their
    inclusion on Elixir!\nLisp on The BEAM; Erik unpacks his perspectives and the
    blog post he wrote on the subject. \nGetting to grips with abstract forms and
    how these terms operate in Erlang and Elixir. \nThe challenges that Erik experienced
    parsing and manipulating the code in Elixir.  \nErik weighs in on BEAM magic;
    appreciating the magic that is possible with Elixir and Elm. \nPerspectives on
    scaling on Elm and Elixir as an application grows rapidly.\nHow Erik and his team
    typically use contexts and service-oriented architecture.\nChallenges with compile
    times during the process of scaling of the application.\nExcitement about the
    progressive steps in the data science component of Corvus. \nHow Erik applied
    his skills to his passion for playing blackjack by creating a card-counting application.
    \nThe remote meeting hardware device that Erik built as a pandemic side-project!
    \nThis week's community mini-feature! Looking at how Stephanie Vizzi got into
    and uses Elixir.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nErik Person on LinkedIn — https://www.linkedin.com/in/erik-person-a9368bb\nVirtualBox
    — https://www.virtualbox.org/\nTunnelblick — https://tunnelblick.net/\nCorvus
    Insurance — https://www.corvusinsurance.com/\nCorvus Job Openings — https://boards.greenhouse.io/corvusinsurance/\nClojure
    — https://clojure.org/\nSaša Jurić — https://github.com/sasa1977\nLFE — https://lfe.io/\nElm
    — https://elm-lang.org/\nRobert Virding — https://codesync.global/speaker/robert-virding/\nThe
    Erlang Rationale — https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\nPaul
    Graham — http://www.paulgraham.com/\nHackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nMyers
    Briggs — https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\nChris
    McCord — http://chrismccord.com/\nMix Xref — https://hexdocs.pm/mix/Mix.Tasks.Xref.html\nGleam
    — https://gleam.run/\nLeex — http://erlang.org/doc/man/leex.html\nGNU Bison -
    The Yacc-compatible Parser Generator — https://www.gnu.org/software/bison/manual/\nYACC
    — https://www.geeksforgeeks.org/introduction-to-yacc/\nStephanie Vizzi on LinkedIn
    — https://www.linkedin.com/in/stephanie-vizzi-b1158996 Special Guests: Erik Person
    and Stephanie Vizzi.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KnojL5Gf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f1486983-1421-45be-87ae-99a0a56ec848.mp3
    length: '58315913'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Today, Erik Person continues our journey into the magic of the BEAM
      and we get to hear all about his path in programming, his relationship with
      Elixir, and his utilization of the BEAM. We also have a mini-feature with SmartLogic's
      very own Stephanie Vizzi, talking about her work, relationship with Elixir,
      and more!
    duration: '1:00:41'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f1486983-1421-45be-87ae-99a0a56ec848/cover.jpg?v=1
    summary: "\n        <p>Today we are joined by the Vice President of Engineering
      at Corvus Insurance, Erik Person! Erik continues our journey into the magic
      of the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get
      to hear all about Erik&#39;s path in programming, his relationship with Elixir,
      and his utilization of the BEAM. Growing up in a family involved in computer
      science, and an early affinity for technology made the choice of what to study
      at college a straightforward one for Erik. He tells us about his life during
      and after those school years, touching on his first job and the important milestones
      leading up to his current position at Corvus. We talk about his early feelings
      for Elixir and why it appealed to him almost immediately before discussing different
      languages on the BEAM and his love of types! Our guest also shares some of the
      bigger challenges he has encountered working in Elixir and touches on the issue
      of scaling effectively. In this episode, we also air a mini-feature with SmartLogic&#39;s
      very own Stephanie Vizzi, talking about her work at the company, relationship
      with Elixir, and more! So for all this, plus a lot in between, be sure to tune
      in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Erik&#39;s family
      ties to computer science and his path leading into programming. </li>\n<li>The
      first job that Erik landed in programming and his current role at Corvus Insurance.</li>\n<li>The
      BEAM at Corvus and the general architecture of the company&#39;s technology.
      </li>\n<li>Erik&#39;s first encounters and learnings with Elixir and the questions
      it answered for him immediately.</li>\n<li>The learning curve for languages
      on The BEAM; Erik&#39;s own journey to understanding.</li>\n<li>Erik&#39;s preference
      for types and his wish for their inclusion on Elixir!</li>\n<li>Lisp on The
      BEAM; Erik unpacks his perspectives and the blog post he wrote on the subject.
      </li>\n<li>Getting to grips with abstract forms and how these terms operate
      in Erlang and Elixir. </li>\n<li>The challenges that Erik experienced parsing
      and manipulating the code in Elixir.<br></li>\n<li>Erik weighs in on BEAM magic;
      appreciating the magic that is possible with Elixir and Elm. </li>\n<li>Perspectives
      on scaling on Elm and Elixir as an application grows rapidly.</li>\n<li>How
      Erik and his team typically use contexts and service-oriented architecture.</li>\n<li>Challenges
      with compile times during the process of scaling of the application.</li>\n<li>Excitement
      about the progressive steps in the data science component of Corvus. </li>\n<li>How
      Erik applied his skills to his passion for playing blackjack by creating a card-counting
      application. </li>\n<li>The remote meeting hardware device that Erik built as
      a pandemic side-project! </li>\n<li>This week&#39;s community mini-feature!
      Looking at how Stephanie Vizzi got into and uses Elixir.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nErik Person on LinkedIn —
      <a href=\"https://www.linkedin.com/in/erik-person-a9368bb\" rel=\"nofollow\">https://www.linkedin.com/in/erik-person-a9368bb</a><br>\nVirtualBox
      — <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">https://www.virtualbox.org/</a><br>\nTunnelblick
      — <a href=\"https://tunnelblick.net/\" rel=\"nofollow\">https://tunnelblick.net/</a><br>\nCorvus
      Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nCorvus
      Job Openings — <a href=\"https://boards.greenhouse.io/corvusinsurance/\" rel=\"nofollow\">https://boards.greenhouse.io/corvusinsurance/</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nSaša
      Jurić — <a href=\"https://github.com/sasa1977\" rel=\"nofollow\">https://github.com/sasa1977</a><br>\nLFE
      — <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nElm
      — <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nRobert
      Virding — <a href=\"https://codesync.global/speaker/robert-virding/\" rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nThe
      Erlang Rationale — <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
      rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
      and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nMyers
      Briggs — <a href=\"https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\"
      rel=\"nofollow\">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nMix
      Xref — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Xref.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLeex
      — <a href=\"http://erlang.org/doc/man/leex.html\" rel=\"nofollow\">http://erlang.org/doc/man/leex.html</a><br>\nGNU
      Bison - The Yacc-compatible Parser Generator — <a href=\"https://www.gnu.org/software/bison/manual/\"
      rel=\"nofollow\">https://www.gnu.org/software/bison/manual/</a><br>\nYACC —
      <a href=\"https://www.geeksforgeeks.org/introduction-to-yacc/\" rel=\"nofollow\">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>\nStephanie
      Vizzi on LinkedIn — <a href=\"https://www.linkedin.com/in/stephanie-vizzi-b1158996\"
      rel=\"nofollow\">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special
      Guests: Erik Person and Stephanie Vizzi.</p>\n      "
  contentEncoded: "\n        <p>Today we are joined by the Vice President of Engineering
    at Corvus Insurance, Erik Person! Erik continues our journey into the magic of
    the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get to
    hear all about Erik&#39;s path in programming, his relationship with Elixir, and
    his utilization of the BEAM. Growing up in a family involved in computer science,
    and an early affinity for technology made the choice of what to study at college
    a straightforward one for Erik. He tells us about his life during and after those
    school years, touching on his first job and the important milestones leading up
    to his current position at Corvus. We talk about his early feelings for Elixir
    and why it appealed to him almost immediately before discussing different languages
    on the BEAM and his love of types! Our guest also shares some of the bigger challenges
    he has encountered working in Elixir and touches on the issue of scaling effectively.
    In this episode, we also air a mini-feature with SmartLogic&#39;s very own Stephanie
    Vizzi, talking about her work at the company, relationship with Elixir, and more!
    So for all this, plus a lot in between, be sure to tune in!</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Erik&#39;s family ties to computer science
    and his path leading into programming. </li>\n<li>The first job that Erik landed
    in programming and his current role at Corvus Insurance.</li>\n<li>The BEAM at
    Corvus and the general architecture of the company&#39;s technology. </li>\n<li>Erik&#39;s
    first encounters and learnings with Elixir and the questions it answered for him
    immediately.</li>\n<li>The learning curve for languages on The BEAM; Erik&#39;s
    own journey to understanding.</li>\n<li>Erik&#39;s preference for types and his
    wish for their inclusion on Elixir!</li>\n<li>Lisp on The BEAM; Erik unpacks his
    perspectives and the blog post he wrote on the subject. </li>\n<li>Getting to
    grips with abstract forms and how these terms operate in Erlang and Elixir. </li>\n<li>The
    challenges that Erik experienced parsing and manipulating the code in Elixir.<br></li>\n<li>Erik
    weighs in on BEAM magic; appreciating the magic that is possible with Elixir and
    Elm. </li>\n<li>Perspectives on scaling on Elm and Elixir as an application grows
    rapidly.</li>\n<li>How Erik and his team typically use contexts and service-oriented
    architecture.</li>\n<li>Challenges with compile times during the process of scaling
    of the application.</li>\n<li>Excitement about the progressive steps in the data
    science component of Corvus. </li>\n<li>How Erik applied his skills to his passion
    for playing blackjack by creating a card-counting application. </li>\n<li>The
    remote meeting hardware device that Erik built as a pandemic side-project! </li>\n<li>This
    week&#39;s community mini-feature! Looking at how Stephanie Vizzi got into and
    uses Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nErik Person on LinkedIn — <a href=\"https://www.linkedin.com/in/erik-person-a9368bb\"
    rel=\"nofollow\">https://www.linkedin.com/in/erik-person-a9368bb</a><br>\nVirtualBox
    — <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">https://www.virtualbox.org/</a><br>\nTunnelblick
    — <a href=\"https://tunnelblick.net/\" rel=\"nofollow\">https://tunnelblick.net/</a><br>\nCorvus
    Insurance — <a href=\"https://www.corvusinsurance.com/\" rel=\"nofollow\">https://www.corvusinsurance.com/</a><br>\nCorvus
    Job Openings — <a href=\"https://boards.greenhouse.io/corvusinsurance/\" rel=\"nofollow\">https://boards.greenhouse.io/corvusinsurance/</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nSaša
    Jurić — <a href=\"https://github.com/sasa1977\" rel=\"nofollow\">https://github.com/sasa1977</a><br>\nLFE
    — <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nElm —
    <a href=\"https://elm-lang.org/\" rel=\"nofollow\">https://elm-lang.org/</a><br>\nRobert
    Virding — <a href=\"https://codesync.global/speaker/robert-virding/\" rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nThe
    Erlang Rationale — <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
    rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
    and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nMyers
    Briggs — <a href=\"https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/\"
    rel=\"nofollow\">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nMix
    Xref — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Xref.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLeex
    — <a href=\"http://erlang.org/doc/man/leex.html\" rel=\"nofollow\">http://erlang.org/doc/man/leex.html</a><br>\nGNU
    Bison - The Yacc-compatible Parser Generator — <a href=\"https://www.gnu.org/software/bison/manual/\"
    rel=\"nofollow\">https://www.gnu.org/software/bison/manual/</a><br>\nYACC — <a
    href=\"https://www.geeksforgeeks.org/introduction-to-yacc/\" rel=\"nofollow\">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>\nStephanie
    Vizzi on LinkedIn — <a href=\"https://www.linkedin.com/in/stephanie-vizzi-b1158996\"
    rel=\"nofollow\">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special
    Guests: Erik Person and Stephanie Vizzi.</p>\n      "
- title: Robert Virding on the Roots of Erlang
  slug: s6e1-virding
  link: https://smartlogic.io/podcast/elixir-wizards/s6e1-virding
  guid: 10914181-66e0-4200-b6c8-260bee7e32bd
  pubDate: Thu, 06 May 2021 06:00:00 -0400
  pubDateFriendly: May  6, 2021
  description: "Welcome to a brand-spanking-new season of Elixir Wizards! This time
    around we will be focussing on the magic of the BEAM, so get ready for an exciting
    journey into new territories filled with mystery and power! To kick things off
    in this inaugural episode we are joined by a true legend in the space of Erlang,
    Elixir, and the BEAM. Robert Virding is one of the three founding members of Erlang,
    and his unrivaled intimacy with the language and its related subjects is truly
    inspiring and informative. We feel like we could fill many more episodes just
    hearing Robert unpack the history he has been involved in, but we do manage to
    cover a lot in this show, touching on Robert's career arcs, the other founders
    of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much
    more. Robert also shares some insight into the BEAM and the idea of a virtual
    machine, broaching these sometimes misunderstood concepts with simplicity and
    clarity. We talk about magic, hurdles, best practices, and the future of community,
    with Robert sharing his experiences working on Erlog, LFE, and much more. Make
    sure to join us for this episode and stay tuned for the rest of another great
    season!\nKey Points From This Episode:\nRobert's description of the Erlang Rationale
    document and why it was important to create it. \nBackground information on the
    founding three members of Erlang and how they came together. \nTraining and early
    career as a computer scientist; Robert's background before Ericsson. \nThe roots
    of the Erlang name, and how Robert first came across and connected with it. \nThe
    simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! \nUnpacking
    the application of a virtual machine and the connection between Erlang and BEAM.\nInformation
    on Core Erlang and how it works within the compiler.\nLFE or Lisp-Flavored Erlang
    and the decisions that were made to keep it straightforward. \nHurdles to learning
    Erlang and Robert's thoughts on getting over these. \nWeighing the usefulness
    of 'magic' and the caution with which Robert approaches it. \nBest practices for
    Erlang and Elixir according to Robert; the biggest shifts necessary for success.\nRobert's
    first feelings about the arrival of Elixir and the questions it raised for him.
    \nThe motivation behind Robert's work on Erlog! \nReflections on the Erlang movies
    that Ericsson produced and their evolution over time! \nThe future of Erlang,
    its community, and the need for continued and increased collaboration. \nWhy Robert
    wants to put more parentheses back in the mix! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    - https://smartlogic.io/\nRobert Virding - https://codesync.global/speaker/robert-virding/\nRobert
    Viriding on Twitter - https://twitter.com/rvirding?lang=en\nThe Erlang Rationale
    - https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\nProlog
    - https://www.swi-prolog.org/\nEricsson - https://www.ericsson.com/\nJoe Armstrong
    - https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\nMike
    Williams - https://codesync.global/speaker/mike-williams/\nFortran - https://fortran-lang.org/\nPascal
    - http://www.pascal-programming.info/index.php\nVAX - https://www.computerhope.com/jargon/v/vax.htm\nFranz
    Lisp - https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\nAgner
    Krarup Erlang - https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\nBogumil
    Hausman - https://peoplepill.com/people/bogumil-hausman\nLFE - https://lfe.io/\nErlang
    The Abstract Format - https://erlang.org/doc/apps/erts/absform.html\nCore Erlang
    - https://blog.erlang.org/core-erlang-by-example/\nErlog - https://github.com/rvirding/erlog\nLua
    in Erlang - https://github.com/rvirding/luerl\nErlang: The Movie - https://elixirforum.com/t/erlang-the-movie/440\nMonty
    Python - http://www.montypython.com/\nErlang Ecosystem Foundation - https://erlef.org/\nA
    first look at the JIT - https://blog.erlang.org/a-first-look-at-the-jit/\nLisp
    Cycles - https://xkcd.com/297/\nCreative Assembly - https://www.creative-assembly.com/home
    \nTotal War - https://www.totalwar.com/\nWorld of Warcraft - https://worldofwarcraft.com/en-us/
    Special Guest: Robert Virding.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+W5dAvToG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10914181-66e0-4200-b6c8-260bee7e32bd.mp3
    length: '47708964'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '6'
    author: SmartLogic LLC
    subtitle: Welcome to a new season of Elixir Wizards! This time around we will
      be focussing on the magic of the BEAM, so get ready for an exciting journey.
      To kick things off we are joined by a true legend in the space of Erlang, Elixir,
      and the BEAM, Robert Virding.
    duration: '49:38'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10914181-66e0-4200-b6c8-260bee7e32bd/cover.jpg?v=1
    summary: "\n        <p>Welcome to a brand-spanking-new season of Elixir Wizards!
      This time around we will be focussing on the magic of the BEAM, so get ready
      for an exciting journey into new territories filled with mystery and power!
      To kick things off in this inaugural episode we are joined by a true legend
      in the space of Erlang, Elixir, and the BEAM. Robert Virding is one of the three
      founding members of Erlang, and his unrivaled intimacy with the language and
      its related subjects is truly inspiring and informative. We feel like we could
      fill many more episodes just hearing Robert unpack the history he has been involved
      in, but we do manage to cover a lot in this show, touching on Robert&#39;s career
      arcs, the other founders of Erlang, the connection to Ericsson and the bridge
      to Elixir, as well as much more. Robert also shares some insight into the BEAM
      and the idea of a virtual machine, broaching these sometimes misunderstood concepts
      with simplicity and clarity. We talk about magic, hurdles, best practices, and
      the future of community, with Robert sharing his experiences working on Erlog,
      LFE, and much more. Make sure to join us for this episode and stay tuned for
      the rest of another great season!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Robert&#39;s
      description of the Erlang Rationale document and why it was important to create
      it. </li>\n<li>Background information on the founding three members of Erlang
      and how they came together. </li>\n<li>Training and early career as a computer
      scientist; Robert&#39;s background before Ericsson. </li>\n<li>The roots of
      the Erlang name, and how Robert first came across and connected with it. </li>\n<li>The
      simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>\n<li>Unpacking
      the application of a virtual machine and the connection between Erlang and BEAM.</li>\n<li>Information
      on Core Erlang and how it works within the compiler.</li>\n<li>LFE or Lisp-Flavored
      Erlang and the decisions that were made to keep it straightforward. </li>\n<li>Hurdles
      to learning Erlang and Robert&#39;s thoughts on getting over these. </li>\n<li>Weighing
      the usefulness of &#39;magic&#39; and the caution with which Robert approaches
      it. </li>\n<li>Best practices for Erlang and Elixir according to Robert; the
      biggest shifts necessary for success.</li>\n<li>Robert&#39;s first feelings
      about the arrival of Elixir and the questions it raised for him. </li>\n<li>The
      motivation behind Robert&#39;s work on Erlog! </li>\n<li>Reflections on the
      Erlang movies that Ericsson produced and their evolution over time! </li>\n<li>The
      future of Erlang, its community, and the need for continued and increased collaboration.
      </li>\n<li>Why Robert wants to put more parentheses back in the mix! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic - <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nRobert Virding - <a href=\"https://codesync.global/speaker/robert-virding/\"
      rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nRobert
      Viriding on Twitter - <a href=\"https://twitter.com/rvirding?lang=en\" rel=\"nofollow\">https://twitter.com/rvirding?lang=en</a><br>\nThe
      Erlang Rationale - <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
      rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nProlog
      - <a href=\"https://www.swi-prolog.org/\" rel=\"nofollow\">https://www.swi-prolog.org/</a><br>\nEricsson
      - <a href=\"https://www.ericsson.com/\" rel=\"nofollow\">https://www.ericsson.com/</a><br>\nJoe
      Armstrong - <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
      rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\nMike
      Williams - <a href=\"https://codesync.global/speaker/mike-williams/\" rel=\"nofollow\">https://codesync.global/speaker/mike-williams/</a><br>\nFortran
      - <a href=\"https://fortran-lang.org/\" rel=\"nofollow\">https://fortran-lang.org/</a><br>\nPascal
      - <a href=\"http://www.pascal-programming.info/index.php\" rel=\"nofollow\">http://www.pascal-programming.info/index.php</a><br>\nVAX
      - <a href=\"https://www.computerhope.com/jargon/v/vax.htm\" rel=\"nofollow\">https://www.computerhope.com/jargon/v/vax.htm</a><br>\nFranz
      Lisp - <a href=\"https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\"
      rel=\"nofollow\">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>\nAgner
      Krarup Erlang - <a href=\"https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\"
      rel=\"nofollow\">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>\nBogumil
      Hausman - <a href=\"https://peoplepill.com/people/bogumil-hausman\" rel=\"nofollow\">https://peoplepill.com/people/bogumil-hausman</a><br>\nLFE
      - <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nErlang
      The Abstract Format - <a href=\"https://erlang.org/doc/apps/erts/absform.html\"
      rel=\"nofollow\">https://erlang.org/doc/apps/erts/absform.html</a><br>\nCore
      Erlang - <a href=\"https://blog.erlang.org/core-erlang-by-example/\" rel=\"nofollow\">https://blog.erlang.org/core-erlang-by-example/</a><br>\nErlog
      - <a href=\"https://github.com/rvirding/erlog\" rel=\"nofollow\">https://github.com/rvirding/erlog</a><br>\nLua
      in Erlang - <a href=\"https://github.com/rvirding/luerl\" rel=\"nofollow\">https://github.com/rvirding/luerl</a><br>\nErlang:
      The Movie - <a href=\"https://elixirforum.com/t/erlang-the-movie/440\" rel=\"nofollow\">https://elixirforum.com/t/erlang-the-movie/440</a><br>\nMonty
      Python - <a href=\"http://www.montypython.com/\" rel=\"nofollow\">http://www.montypython.com/</a><br>\nErlang
      Ecosystem Foundation - <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nA
      first look at the JIT - <a href=\"https://blog.erlang.org/a-first-look-at-the-jit/\"
      rel=\"nofollow\">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>\nLisp
      Cycles - <a href=\"https://xkcd.com/297/\" rel=\"nofollow\">https://xkcd.com/297/</a><br>\nCreative
      Assembly - <a href=\"https://www.creative-assembly.com/home\" rel=\"nofollow\">https://www.creative-assembly.com/home</a>
      <br>\nTotal War - <a href=\"https://www.totalwar.com/\" rel=\"nofollow\">https://www.totalwar.com/</a><br>\nWorld
      of Warcraft - <a href=\"https://worldofwarcraft.com/en-us/\" rel=\"nofollow\">https://worldofwarcraft.com/en-us/</a></p><p>Special
      Guest: Robert Virding.</p>\n      "
  contentEncoded: "\n        <p>Welcome to a brand-spanking-new season of Elixir Wizards!
    This time around we will be focussing on the magic of the BEAM, so get ready for
    an exciting journey into new territories filled with mystery and power! To kick
    things off in this inaugural episode we are joined by a true legend in the space
    of Erlang, Elixir, and the BEAM. Robert Virding is one of the three founding members
    of Erlang, and his unrivaled intimacy with the language and its related subjects
    is truly inspiring and informative. We feel like we could fill many more episodes
    just hearing Robert unpack the history he has been involved in, but we do manage
    to cover a lot in this show, touching on Robert&#39;s career arcs, the other founders
    of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much
    more. Robert also shares some insight into the BEAM and the idea of a virtual
    machine, broaching these sometimes misunderstood concepts with simplicity and
    clarity. We talk about magic, hurdles, best practices, and the future of community,
    with Robert sharing his experiences working on Erlog, LFE, and much more. Make
    sure to join us for this episode and stay tuned for the rest of another great
    season!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Robert&#39;s
    description of the Erlang Rationale document and why it was important to create
    it. </li>\n<li>Background information on the founding three members of Erlang
    and how they came together. </li>\n<li>Training and early career as a computer
    scientist; Robert&#39;s background before Ericsson. </li>\n<li>The roots of the
    Erlang name, and how Robert first came across and connected with it. </li>\n<li>The
    simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>\n<li>Unpacking
    the application of a virtual machine and the connection between Erlang and BEAM.</li>\n<li>Information
    on Core Erlang and how it works within the compiler.</li>\n<li>LFE or Lisp-Flavored
    Erlang and the decisions that were made to keep it straightforward. </li>\n<li>Hurdles
    to learning Erlang and Robert&#39;s thoughts on getting over these. </li>\n<li>Weighing
    the usefulness of &#39;magic&#39; and the caution with which Robert approaches
    it. </li>\n<li>Best practices for Erlang and Elixir according to Robert; the biggest
    shifts necessary for success.</li>\n<li>Robert&#39;s first feelings about the
    arrival of Elixir and the questions it raised for him. </li>\n<li>The motivation
    behind Robert&#39;s work on Erlog! </li>\n<li>Reflections on the Erlang movies
    that Ericsson produced and their evolution over time! </li>\n<li>The future of
    Erlang, its community, and the need for continued and increased collaboration.
    </li>\n<li>Why Robert wants to put more parentheses back in the mix! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic - <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nRobert Virding - <a href=\"https://codesync.global/speaker/robert-virding/\"
    rel=\"nofollow\">https://codesync.global/speaker/robert-virding/</a><br>\nRobert
    Viriding on Twitter - <a href=\"https://twitter.com/rvirding?lang=en\" rel=\"nofollow\">https://twitter.com/rvirding?lang=en</a><br>\nThe
    Erlang Rationale - <a href=\"https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313\"
    rel=\"nofollow\">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>\nProlog
    - <a href=\"https://www.swi-prolog.org/\" rel=\"nofollow\">https://www.swi-prolog.org/</a><br>\nEricsson
    - <a href=\"https://www.ericsson.com/\" rel=\"nofollow\">https://www.ericsson.com/</a><br>\nJoe
    Armstrong - <a href=\"https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary\"
    rel=\"nofollow\">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>\nMike
    Williams - <a href=\"https://codesync.global/speaker/mike-williams/\" rel=\"nofollow\">https://codesync.global/speaker/mike-williams/</a><br>\nFortran
    - <a href=\"https://fortran-lang.org/\" rel=\"nofollow\">https://fortran-lang.org/</a><br>\nPascal
    - <a href=\"http://www.pascal-programming.info/index.php\" rel=\"nofollow\">http://www.pascal-programming.info/index.php</a><br>\nVAX
    - <a href=\"https://www.computerhope.com/jargon/v/vax.htm\" rel=\"nofollow\">https://www.computerhope.com/jargon/v/vax.htm</a><br>\nFranz
    Lisp - <a href=\"https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml\"
    rel=\"nofollow\">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>\nAgner
    Krarup Erlang - <a href=\"https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/\"
    rel=\"nofollow\">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>\nBogumil
    Hausman - <a href=\"https://peoplepill.com/people/bogumil-hausman\" rel=\"nofollow\">https://peoplepill.com/people/bogumil-hausman</a><br>\nLFE
    - <a href=\"https://lfe.io/\" rel=\"nofollow\">https://lfe.io/</a><br>\nErlang
    The Abstract Format - <a href=\"https://erlang.org/doc/apps/erts/absform.html\"
    rel=\"nofollow\">https://erlang.org/doc/apps/erts/absform.html</a><br>\nCore Erlang
    - <a href=\"https://blog.erlang.org/core-erlang-by-example/\" rel=\"nofollow\">https://blog.erlang.org/core-erlang-by-example/</a><br>\nErlog
    - <a href=\"https://github.com/rvirding/erlog\" rel=\"nofollow\">https://github.com/rvirding/erlog</a><br>\nLua
    in Erlang - <a href=\"https://github.com/rvirding/luerl\" rel=\"nofollow\">https://github.com/rvirding/luerl</a><br>\nErlang:
    The Movie - <a href=\"https://elixirforum.com/t/erlang-the-movie/440\" rel=\"nofollow\">https://elixirforum.com/t/erlang-the-movie/440</a><br>\nMonty
    Python - <a href=\"http://www.montypython.com/\" rel=\"nofollow\">http://www.montypython.com/</a><br>\nErlang
    Ecosystem Foundation - <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nA
    first look at the JIT - <a href=\"https://blog.erlang.org/a-first-look-at-the-jit/\"
    rel=\"nofollow\">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>\nLisp
    Cycles - <a href=\"https://xkcd.com/297/\" rel=\"nofollow\">https://xkcd.com/297/</a><br>\nCreative
    Assembly - <a href=\"https://www.creative-assembly.com/home\" rel=\"nofollow\">https://www.creative-assembly.com/home</a>
    <br>\nTotal War - <a href=\"https://www.totalwar.com/\" rel=\"nofollow\">https://www.totalwar.com/</a><br>\nWorld
    of Warcraft - <a href=\"https://worldofwarcraft.com/en-us/\" rel=\"nofollow\">https://worldofwarcraft.com/en-us/</a></p><p>Special
    Guest: Robert Virding.</p>\n      "
- title: Adopting Elixir Finale with Sean Lewis, Anna Neyzberg, and René Föhring
  slug: s5e17-adopting-elixir-finale
  link: https://smartlogic.io/podcast/elixir-wizards/s5e17-adopting-elixir-finale
  guid: 12f603e4-7d53-4e83-baed-33e436cbf102
  pubDate: Thu, 25 Mar 2021 06:00:00 -0400
  pubDateFriendly: March 25, 2021
  description: "Season 5 ends with a bang as we welcome back Sean Lewis, Anna Neyzber,
    and René Föhring onto the show to share their journey on getting their companies
    and teams to adopt Elixir. We open our conversation with each guest sharing their
    first experiences with Elixir. After chatting about the changes that they’ve seen
    in the Elixir ecosystem, we explore Elixir’s benefits and how they’ve persuaded
    companies to make the Elixir leap. From zero downtime deployment to arguing for
    Elixir’s ability to solve immediate problems, we touch on the most convincing
    reasons for stakeholders to adopt Elixir. Following this, we unpack common Elixir
    criticisms before looking at the importance of hiring developers for their aptitude
    as well as for their skill set. Later, we discuss what we most appreciate about
    Elixir, with each guest sharing a story from producing an Elixir app. We round
    off an insightful episode by talking about Elixir accessibility and the top ways
    to train entry-level programmers. Join us as we wrap up this season for a last
    deep-dive on adopting Elixir. \nKey Points From This Episode:\nWe introduce today’s
    panel, featuring Sean Lewis, Anna Neyzberg, and René Föhring.\nHear how each guest
    discovered Elixir and what they’ve seen change in the ecosystem.\nExploring our
    guests' first Elixir projects. \nThe intersections between Elixir and cryptocurrency.\nHow
    to persuade company stakeholders to adopt Elixir. \nWhy choosing a language for
    scalability often isn’t as important as its immediate benefits.\nUnpacking common
    criticisms of Elixir adoption.\nHow a culture of learning can push your company
    in the right direction.\nAnecdotes on getting companies to adopt Elixir.\nWe touch
    on the benefits of using Elixir. \nEach guest reflects on their experiences producing
    and maintaining Elixir apps. \nHow our guests are currently using Elixir.\nUsing
    Credo to train new Elixir developers. \nAdvice on making Elixir accessible to
    entry-level coders.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nElixir
    Wizards Conference — https://smartlogic.io/about/community/elixir-wizards-conference/\nAnna
    Neyzberg on LinkedIn — https://www.linkedin.com/in/anna-neyzberg-93545316/\nAnna
    Neyzberg on Twitter — https://twitter.com/ANeyzb\nSean Lewis on LinkedIn— https://www.linkedin.com/in/sean-lewis-40375077/\nRené
    Föhring on Twitter — https://twitter.com/rrrene\nRené Föhring — https://rrrene.org/\nElixirBridge
    — http://elixirbridge.org/\nCarbon Five — https://www.carbonfive.com/\nGenesis
    Block — https://genesisblock.com/\nGenesis Block Jobs — https://genesisblock.com/jobs\nCredo
    on GitHub — https://github.com/rrrene/credo/\nElixirConf 2018 — https://elixirconf.com/2018\nEthereumex
    — https://hex.pm/packages/ethereumex\nMana — https://github.com/mana-ethereum/mana\nRobinhood
    — https://robinhood.com/us/en/\nSlack — https://slack.com/\nPagerDuty — https://www.pagerduty.com/\nAlexandra
    Episode — https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\nTuring
    — https://turing.io/\nWeedmaps — https://weedmaps.com/\nNav Inc. — https://www.nav.com/\nElixirStatus
    — https://elixirstatus.com/\nDivvy — https://getdivvy.com/\nMatt Mills — https://github.com/photomattmills\nFactorio
    — https://factorio.com/\nDyson Sphere Program — https://store.steampowered.com/app/1366540/DysonSphereProgram/
    Special Guests: Anna Neyzberg, René Föhring, and Sean Lewis.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+M7tEI5pR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/12f603e4-7d53-4e83-baed-33e436cbf102.mp3
    length: '59244335'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Season 5 ends with a bang as we welcome past guests Sean Lewis, Anna
      Neyzber, and René Föhring onto the show to share their journey on getting their
      companies and teams to adopt Elixir.
    duration: '1:01:39'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/12f603e4-7d53-4e83-baed-33e436cbf102/cover.jpg?v=1
    summary: "\n        <p>Season 5 ends with a bang as we welcome back Sean Lewis,
      Anna Neyzber, and René Föhring onto the show to share their journey on getting
      their companies and teams to adopt Elixir. We open our conversation with each
      guest sharing their first experiences with Elixir. After chatting about the
      changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits
      and how they’ve persuaded companies to make the Elixir leap. From zero downtime
      deployment to arguing for Elixir’s ability to solve immediate problems, we touch
      on the most convincing reasons for stakeholders to adopt Elixir. Following this,
      we unpack common Elixir criticisms before looking at the importance of hiring
      developers for their aptitude as well as for their skill set. Later, we discuss
      what we most appreciate about Elixir, with each guest sharing a story from producing
      an Elixir app. We round off an insightful episode by talking about Elixir accessibility
      and the top ways to train entry-level programmers. Join us as we wrap up this
      season for a last deep-dive on adopting Elixir. </p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>We introduce today’s panel, featuring Sean Lewis,
      Anna Neyzberg, and René Föhring.</li>\n<li>Hear how each guest discovered Elixir
      and what they’ve seen change in the ecosystem.</li>\n<li>Exploring our guests&#39;
      first Elixir projects. </li>\n<li>The intersections between Elixir and cryptocurrency.</li>\n<li>How
      to persuade company stakeholders to adopt Elixir. </li>\n<li>Why choosing a
      language for scalability often isn’t as important as its immediate benefits.</li>\n<li>Unpacking
      common criticisms of Elixir adoption.</li>\n<li>How a culture of learning can
      push your company in the right direction.</li>\n<li>Anecdotes on getting companies
      to adopt Elixir.</li>\n<li>We touch on the benefits of using Elixir. </li>\n<li>Each
      guest reflects on their experiences producing and maintaining Elixir apps. </li>\n<li>How
      our guests are currently using Elixir.</li>\n<li>Using Credo to train new Elixir
      developers. </li>\n<li>Advice on making Elixir accessible to entry-level coders.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nElixir
      Wizards Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
      rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nAnna
      Neyzberg on LinkedIn — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\"
      rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nAnna
      Neyzberg on Twitter — <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">https://twitter.com/ANeyzb</a><br>\nSean
      Lewis on LinkedIn— <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nRené
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nRené
      Föhring — <a href=\"https://rrrene.org/\" rel=\"nofollow\">https://rrrene.org/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nCarbon
      Five — <a href=\"https://www.carbonfive.com/\" rel=\"nofollow\">https://www.carbonfive.com/</a><br>\nGenesis
      Block — <a href=\"https://genesisblock.com/\" rel=\"nofollow\">https://genesisblock.com/</a><br>\nGenesis
      Block Jobs — <a href=\"https://genesisblock.com/jobs\" rel=\"nofollow\">https://genesisblock.com/jobs</a><br>\nCredo
      on GitHub — <a href=\"https://github.com/rrrene/credo/\" rel=\"nofollow\">https://github.com/rrrene/credo/</a><br>\nElixirConf
      2018 — <a href=\"https://elixirconf.com/2018\" rel=\"nofollow\">https://elixirconf.com/2018</a><br>\nEthereumex
      — <a href=\"https://hex.pm/packages/ethereumex\" rel=\"nofollow\">https://hex.pm/packages/ethereumex</a><br>\nMana
      — <a href=\"https://github.com/mana-ethereum/mana\" rel=\"nofollow\">https://github.com/mana-ethereum/mana</a><br>\nRobinhood
      — <a href=\"https://robinhood.com/us/en/\" rel=\"nofollow\">https://robinhood.com/us/en/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPagerDuty
      — <a href=\"https://www.pagerduty.com/\" rel=\"nofollow\">https://www.pagerduty.com/</a><br>\nAlexandra
      Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nNav
      Inc. — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a><br>\nElixirStatus
      — <a href=\"https://elixirstatus.com/\" rel=\"nofollow\">https://elixirstatus.com/</a><br>\nDivvy
      — <a href=\"https://getdivvy.com/\" rel=\"nofollow\">https://getdivvy.com/</a><br>\nMatt
      Mills — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nFactorio
      — <a href=\"https://factorio.com/\" rel=\"nofollow\">https://factorio.com/</a><br>\nDyson
      Sphere Program — <a href=\"https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/\"
      rel=\"nofollow\">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special
      Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>\n      "
  contentEncoded: "\n        <p>Season 5 ends with a bang as we welcome back Sean
    Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on
    getting their companies and teams to adopt Elixir. We open our conversation with
    each guest sharing their first experiences with Elixir. After chatting about the
    changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits
    and how they’ve persuaded companies to make the Elixir leap. From zero downtime
    deployment to arguing for Elixir’s ability to solve immediate problems, we touch
    on the most convincing reasons for stakeholders to adopt Elixir. Following this,
    we unpack common Elixir criticisms before looking at the importance of hiring
    developers for their aptitude as well as for their skill set. Later, we discuss
    what we most appreciate about Elixir, with each guest sharing a story from producing
    an Elixir app. We round off an insightful episode by talking about Elixir accessibility
    and the top ways to train entry-level programmers. Join us as we wrap up this
    season for a last deep-dive on adopting Elixir. </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>We introduce today’s panel, featuring Sean Lewis, Anna
    Neyzberg, and René Föhring.</li>\n<li>Hear how each guest discovered Elixir and
    what they’ve seen change in the ecosystem.</li>\n<li>Exploring our guests&#39;
    first Elixir projects. </li>\n<li>The intersections between Elixir and cryptocurrency.</li>\n<li>How
    to persuade company stakeholders to adopt Elixir. </li>\n<li>Why choosing a language
    for scalability often isn’t as important as its immediate benefits.</li>\n<li>Unpacking
    common criticisms of Elixir adoption.</li>\n<li>How a culture of learning can
    push your company in the right direction.</li>\n<li>Anecdotes on getting companies
    to adopt Elixir.</li>\n<li>We touch on the benefits of using Elixir. </li>\n<li>Each
    guest reflects on their experiences producing and maintaining Elixir apps. </li>\n<li>How
    our guests are currently using Elixir.</li>\n<li>Using Credo to train new Elixir
    developers. </li>\n<li>Advice on making Elixir accessible to entry-level coders.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nElixir
    Wizards Conference — <a href=\"https://smartlogic.io/about/community/elixir-wizards-conference/\"
    rel=\"nofollow\">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>\nAnna
    Neyzberg on LinkedIn — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\"
    rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nAnna
    Neyzberg on Twitter — <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">https://twitter.com/ANeyzb</a><br>\nSean
    Lewis on LinkedIn— <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nRené
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nRené
    Föhring — <a href=\"https://rrrene.org/\" rel=\"nofollow\">https://rrrene.org/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nCarbon
    Five — <a href=\"https://www.carbonfive.com/\" rel=\"nofollow\">https://www.carbonfive.com/</a><br>\nGenesis
    Block — <a href=\"https://genesisblock.com/\" rel=\"nofollow\">https://genesisblock.com/</a><br>\nGenesis
    Block Jobs — <a href=\"https://genesisblock.com/jobs\" rel=\"nofollow\">https://genesisblock.com/jobs</a><br>\nCredo
    on GitHub — <a href=\"https://github.com/rrrene/credo/\" rel=\"nofollow\">https://github.com/rrrene/credo/</a><br>\nElixirConf
    2018 — <a href=\"https://elixirconf.com/2018\" rel=\"nofollow\">https://elixirconf.com/2018</a><br>\nEthereumex
    — <a href=\"https://hex.pm/packages/ethereumex\" rel=\"nofollow\">https://hex.pm/packages/ethereumex</a><br>\nMana
    — <a href=\"https://github.com/mana-ethereum/mana\" rel=\"nofollow\">https://github.com/mana-ethereum/mana</a><br>\nRobinhood
    — <a href=\"https://robinhood.com/us/en/\" rel=\"nofollow\">https://robinhood.com/us/en/</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPagerDuty
    — <a href=\"https://www.pagerduty.com/\" rel=\"nofollow\">https://www.pagerduty.com/</a><br>\nAlexandra
    Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nWeedmaps
    — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nNav
    Inc. — <a href=\"https://www.nav.com/\" rel=\"nofollow\">https://www.nav.com/</a><br>\nElixirStatus
    — <a href=\"https://elixirstatus.com/\" rel=\"nofollow\">https://elixirstatus.com/</a><br>\nDivvy
    — <a href=\"https://getdivvy.com/\" rel=\"nofollow\">https://getdivvy.com/</a><br>\nMatt
    Mills — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nFactorio
    — <a href=\"https://factorio.com/\" rel=\"nofollow\">https://factorio.com/</a><br>\nDyson
    Sphere Program — <a href=\"https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/\"
    rel=\"nofollow\">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special
    Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>\n      "
- title: Jenn Gamble on Data Science, Machine Learning, and Elixir
  slug: s5e16-gamble
  link: https://smartlogic.io/podcast/elixir-wizards/s5e16-gamble
  guid: 2bb38486-078c-44b5-a40c-b2c71a50d210
  pubDate: Thu, 18 Mar 2021 06:00:00 -0400
  pubDateFriendly: March 18, 2021
  description: "The fields of data science and machine learning are moving ever faster.
    Jenn Gamble has her finger on the pulse and has become an industry expert with
    a wealth of experience to her name. As today’s guest, she dives into these rich
    and often complex topics, and she helps us boil them down into palatable nuggets
    of knowledge. We start off by asking Jenn about her current role at Very, and
    she tells us about the nature of her team and the things they’re able to achieve.
    She touches on what the language markups look like for a data science team, before
    moving onto her experiences in machine learning and data science. Delving deeper,
    Jenn tells us why it is not a necessity to have a master’s in data science, and
    why you can be well enough equipped in other senses to become proficient in the
    area. Later on, she reveals the differences between Elixir models and data science
    models. Following these detailed explanations, she furnishes listener’s minds
    with informative comments on relating the foundations of machine learning to IoT,
    using priori knowledge to add nuance to your machine learning, and how she envisions
    the future of data science. Join us today and be sure to get all this, and much
    more!\nKey Points From This Episode:\nIntroducing today’s guest, Jenn Gamble.\nJenn
    tells us about Very, an IoT engineering firm.\nHear about the data science team
    at Very.\nWe learn more on what the language markup looks like for a data science
    team.\nJenn’s experience in learning machine learning and data science.\nHear
    her five-year plan while doing her masters.\nWe ask if it’s necessary to have
    a master’s degree to be well-equipped in data science.\nThe difference between
    an Elixir model and a data science model.\nJenn elaborates on weights and intuitive
    algorithms. \nDealing with N-dimensional matrices.\nRelating the foundations of
    machine learning to IoT.\nWays to start building up an intuition around what the
    most fundamental abstractions are.\nUsing priori knowledge to add nuance to your
    machine learning.\nHow Jenn envisions the future of data science.\nHear about
    tensors and vectors.\nJenn tells us about her keynote experience at ElixirConf
    2020.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nJenn
    Gamble on Twitter – https://twitter.com/jennpgamble\nJenn Gamble on LinkedIn –
    https://www.linkedin.com/in/jenn-gamble/\nElixirConf 2020 - Keynote - Jenn Gamble
    – https://www.youtube.com/watch?v=btIvtN9wsI&abchannel=ElixirConf\nIoT – https://www.verypossible.com/careers\nVery
    – https://jobs.lever.co/verypossible\nMathWorks – https://www.mathworks.com/products/matlab.html\nCassie
    Kozykrov – https://kozyrkov.medium.com/\nLinear regression – http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\nPythagorean
    theorem – https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\nQuadratic
    equation – https://www.mathsisfun.com/algebra/quadratic-equation.html\nA priori
    and a posteriori – https://iep.utm.edu/apriori/\nTensor – https://mathworld.wolfram.com/Tensor.html\nVector
    (mathematics and physics) – https://mathinsight.org/vector_introduction\nCoursera
    – https://www.coursera.org/learn/ai-for-everyone Special Guest: Jenn Gamble.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+d_pGgf1o
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2bb38486-078c-44b5-a40c-b2c71a50d210.mp3
    length: '45782601'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: The fields of data science and machine learning are moving ever faster.  Today’s
      guest, Jenn Gamble, dives into these rich and often complex topics, and she
      helps us boil them down into palatable nuggets of knowledge.
    duration: '47:38'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2bb38486-078c-44b5-a40c-b2c71a50d210/cover.jpg?v=1
    summary: "\n        <p>The fields of data science and machine learning are moving
      ever faster. Jenn Gamble has her finger on the pulse and has become an industry
      expert with a wealth of experience to her name. As today’s guest, she dives
      into these rich and often complex topics, and she helps us boil them down into
      palatable nuggets of knowledge. We start off by asking Jenn about her current
      role at Very, and she tells us about the nature of her team and the things they’re
      able to achieve. She touches on what the language markups look like for a data
      science team, before moving onto her experiences in machine learning and data
      science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s
      in data science, and why you can be well enough equipped in other senses to
      become proficient in the area. Later on, she reveals the differences between
      Elixir models and data science models. Following these detailed explanations,
      she furnishes listener’s minds with informative comments on relating the foundations
      of machine learning to IoT, using priori knowledge to add nuance to your machine
      learning, and how she envisions the future of data science. Join us today and
      be sure to get all this, and much more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest, Jenn Gamble.</li>\n<li>Jenn tells us about Very, an IoT engineering
      firm.</li>\n<li>Hear about the data science team at Very.</li>\n<li>We learn
      more on what the language markup looks like for a data science team.</li>\n<li>Jenn’s
      experience in learning machine learning and data science.</li>\n<li>Hear her
      five-year plan while doing her masters.</li>\n<li>We ask if it’s necessary to
      have a master’s degree to be well-equipped in data science.</li>\n<li>The difference
      between an Elixir model and a data science model.</li>\n<li>Jenn elaborates
      on weights and intuitive algorithms. </li>\n<li>Dealing with N-dimensional matrices.</li>\n<li>Relating
      the foundations of machine learning to IoT.</li>\n<li>Ways to start building
      up an intuition around what the most fundamental abstractions are.</li>\n<li>Using
      priori knowledge to add nuance to your machine learning.</li>\n<li>How Jenn
      envisions the future of data science.</li>\n<li>Hear about tensors and vectors.</li>\n<li>Jenn
      tells us about her keynote experience at ElixirConf 2020.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJenn
      Gamble on Twitter – <a href=\"https://twitter.com/jennpgamble\" rel=\"nofollow\">https://twitter.com/jennpgamble</a><br>\nJenn
      Gamble on LinkedIn – <a href=\"https://www.linkedin.com/in/jenn-gamble/\" rel=\"nofollow\">https://www.linkedin.com/in/jenn-gamble/</a><br>\nElixirConf
      2020 - Keynote - Jenn Gamble – <a href=\"https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>\nIoT
      – <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a><br>\nVery
      – <a href=\"https://jobs.lever.co/verypossible\" rel=\"nofollow\">https://jobs.lever.co/verypossible</a><br>\nMathWorks
      – <a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow\">https://www.mathworks.com/products/matlab.html</a><br>\nCassie
      Kozykrov – <a href=\"https://kozyrkov.medium.com/\" rel=\"nofollow\">https://kozyrkov.medium.com/</a><br>\nLinear
      regression – <a href=\"http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\"
      rel=\"nofollow\">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>\nPythagorean
      theorem – <a href=\"https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\"
      rel=\"nofollow\">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>\nQuadratic
      equation – <a href=\"https://www.mathsisfun.com/algebra/quadratic-equation.html\"
      rel=\"nofollow\">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>\nA
      priori and a posteriori – <a href=\"https://iep.utm.edu/apriori/\" rel=\"nofollow\">https://iep.utm.edu/apriori/</a><br>\nTensor
      – <a href=\"https://mathworld.wolfram.com/Tensor.html\" rel=\"nofollow\">https://mathworld.wolfram.com/Tensor.html</a><br>\nVector
      (mathematics and physics) – <a href=\"https://mathinsight.org/vector_introduction\"
      rel=\"nofollow\">https://mathinsight.org/vector_introduction</a><br>\nCoursera
      – <a href=\"https://www.coursera.org/learn/ai-for-everyone\" rel=\"nofollow\">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special
      Guest: Jenn Gamble.</p>\n      "
  contentEncoded: "\n        <p>The fields of data science and machine learning are
    moving ever faster. Jenn Gamble has her finger on the pulse and has become an
    industry expert with a wealth of experience to her name. As today’s guest, she
    dives into these rich and often complex topics, and she helps us boil them down
    into palatable nuggets of knowledge. We start off by asking Jenn about her current
    role at Very, and she tells us about the nature of her team and the things they’re
    able to achieve. She touches on what the language markups look like for a data
    science team, before moving onto her experiences in machine learning and data
    science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s
    in data science, and why you can be well enough equipped in other senses to become
    proficient in the area. Later on, she reveals the differences between Elixir models
    and data science models. Following these detailed explanations, she furnishes
    listener’s minds with informative comments on relating the foundations of machine
    learning to IoT, using priori knowledge to add nuance to your machine learning,
    and how she envisions the future of data science. Join us today and be sure to
    get all this, and much more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    today’s guest, Jenn Gamble.</li>\n<li>Jenn tells us about Very, an IoT engineering
    firm.</li>\n<li>Hear about the data science team at Very.</li>\n<li>We learn more
    on what the language markup looks like for a data science team.</li>\n<li>Jenn’s
    experience in learning machine learning and data science.</li>\n<li>Hear her five-year
    plan while doing her masters.</li>\n<li>We ask if it’s necessary to have a master’s
    degree to be well-equipped in data science.</li>\n<li>The difference between an
    Elixir model and a data science model.</li>\n<li>Jenn elaborates on weights and
    intuitive algorithms. </li>\n<li>Dealing with N-dimensional matrices.</li>\n<li>Relating
    the foundations of machine learning to IoT.</li>\n<li>Ways to start building up
    an intuition around what the most fundamental abstractions are.</li>\n<li>Using
    priori knowledge to add nuance to your machine learning.</li>\n<li>How Jenn envisions
    the future of data science.</li>\n<li>Hear about tensors and vectors.</li>\n<li>Jenn
    tells us about her keynote experience at ElixirConf 2020.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJenn
    Gamble on Twitter – <a href=\"https://twitter.com/jennpgamble\" rel=\"nofollow\">https://twitter.com/jennpgamble</a><br>\nJenn
    Gamble on LinkedIn – <a href=\"https://www.linkedin.com/in/jenn-gamble/\" rel=\"nofollow\">https://www.linkedin.com/in/jenn-gamble/</a><br>\nElixirConf
    2020 - Keynote - Jenn Gamble – <a href=\"https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>\nIoT
    – <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a><br>\nVery
    – <a href=\"https://jobs.lever.co/verypossible\" rel=\"nofollow\">https://jobs.lever.co/verypossible</a><br>\nMathWorks
    – <a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow\">https://www.mathworks.com/products/matlab.html</a><br>\nCassie
    Kozykrov – <a href=\"https://kozyrkov.medium.com/\" rel=\"nofollow\">https://kozyrkov.medium.com/</a><br>\nLinear
    regression – <a href=\"http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm\"
    rel=\"nofollow\">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>\nPythagorean
    theorem – <a href=\"https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem\"
    rel=\"nofollow\">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>\nQuadratic
    equation – <a href=\"https://www.mathsisfun.com/algebra/quadratic-equation.html\"
    rel=\"nofollow\">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>\nA
    priori and a posteriori – <a href=\"https://iep.utm.edu/apriori/\" rel=\"nofollow\">https://iep.utm.edu/apriori/</a><br>\nTensor
    – <a href=\"https://mathworld.wolfram.com/Tensor.html\" rel=\"nofollow\">https://mathworld.wolfram.com/Tensor.html</a><br>\nVector
    (mathematics and physics) – <a href=\"https://mathinsight.org/vector_introduction\"
    rel=\"nofollow\">https://mathinsight.org/vector_introduction</a><br>\nCoursera
    – <a href=\"https://www.coursera.org/learn/ai-for-everyone\" rel=\"nofollow\">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special
    Guest: Jenn Gamble.</p>\n      "
- title: John Mertens on Adopting Elixir at Change.org
  slug: s5e15-mertens
  link: https://smartlogic.io/podcast/elixir-wizards/s5e15-mertens
  guid: d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f
  pubDate: Thu, 11 Mar 2021 06:00:00 -0500
  pubDateFriendly: March 11, 2021
  description: "Many organizations take an incremental approach when adopting Elixir,
    preferring to pick up its nuances by using it to work on non-essential projects.
    But not Change.org. Today we speak with Change.org Director of Engineering John
    Mertens about how his company adopted Elixir to create a business-critical app
    that handles over a billion emails per month. From building webpages on GeoCities
    to working as an IT intern at an Iowan prison, we open our conversation by exploring
    John’s coding background. After chatting about his first Elixir project, we dive
    into Change.org’s process in adopting Elixir. As John shares his insights into
    successfully integrating Elixir into your tech stack, he highlights the benefits
    provided by the language. Later, John discusses the advantages of event-driven
    architecture and how this structure makes it easier for teams to access and analyze
    data, while also making it easier to add product features. We wrap up this episode
    with John highlighting his user-centered approach to coding. Join us to hear John’s
    lessons on making the leap and adopting Elixir in large organizations.\nKey Points
    From This Episode:\nJohn shares details about his role at Change.org.\nThe story
    behind John and Change’s Elixir adoption. \nHear about John’s coding journey.\nHow
    John made an Elixir app based on spotting San Francisco tram carriages. \nInsights
    into the massive project that Change built using Elixir.\nWhy Elixir is taking
    over Change’s back-end tech stack.\nUsing Elixir to build reliable event-based
    architecture.\nExploring event-driven architecture from the perspective of Change’s
    system.\nJohn makes a compelling case for event-driven architecture. \nHow Change
    hires for Elixir roles.\nChange’s process in training their staff to code in Elixir.\nJohn
    talks about his user-centred approach to design.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/\nElixir Wizards Discord — https://smr.tl/wizards-discord\nElixir
    Wizards Email — podcast@smartlogic.io\nJohn Mertens — https://www.mertonium.com/about\nJohn
    Mertens on Twitter — https://twitter.com/mertonium\nJohn Mertens on GitHub — https://github.com/mertonium\nChange.org
    — https://www.change.org/\nChange.org Careers — https://careers.change.org/\nJosé
    Valim — https://twitter.com/josevalim\nGenStage and Flow - José Valim (Lambda
    Days 2017) — https://www.youtube.com/watch?v=XPlXNUXmcgE\nDashbit — https://dashbit.co/\nHacker
    News — https://thehackernews.com/\nPaul Graham — https://twitter.com/paulg/\nNim
    — https://nim-lang.org/\nPony — https://www.ponylang.io/\nGrax.io — https://www.grax.com/\nLogo
    — https://el.media.mit.edu/logo-foundation/whatislogo/logo_programming.html\nNerves
    — https://www.nerves-project.org/\nFlow — https://hexdocs.pm/flow/Flow.html\nElixirConf
    EU — https://www.elixirconf.eu/\nMartin Fowler — https://martinfowler.com/\n‘The
    Log: What every software engineer should know about real-time data's unifying
    abstraction’ — https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\nSalesforce
    Marketing Cloud — https://www.salesforce.com/eu/products/marketing-cloud/overview/\n‘Delivering
    social change with Elixir at Change.org’  — https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\nCode
    for America — https://www.codeforamerica.org/ Special Guest: John Mertens.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FQWjnk0B
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f.mp3
    length: '41765494'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Change.org Director of Engineering John Mertens
      about how his company adopted Elixir to create a business-critical app that
      handles over a billion emails per month.
    duration: '43:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f/cover.jpg?v=1
    summary: "\n        <p>Many organizations take an incremental approach when adopting
      Elixir, preferring to pick up its nuances by using it to work on non-essential
      projects. But not Change.org. Today we speak with Change.org Director of Engineering
      John Mertens about how his company adopted Elixir to create a business-critical
      app that handles over a billion emails per month. From building webpages on
      GeoCities to working as an IT intern at an Iowan prison, we open our conversation
      by exploring John’s coding background. After chatting about his first Elixir
      project, we dive into Change.org’s process in adopting Elixir. As John shares
      his insights into successfully integrating Elixir into your tech stack, he highlights
      the benefits provided by the language. Later, John discusses the advantages
      of event-driven architecture and how this structure makes it easier for teams
      to access and analyze data, while also making it easier to add product features.
      We wrap up this episode with John highlighting his user-centered approach to
      coding. Join us to hear John’s lessons on making the leap and adopting Elixir
      in large organizations.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>John
      shares details about his role at Change.org.</li>\n<li>The story behind John
      and Change’s Elixir adoption. </li>\n<li>Hear about John’s coding journey.</li>\n<li>How
      John made an Elixir app based on spotting San Francisco tram carriages. </li>\n<li>Insights
      into the massive project that Change built using Elixir.</li>\n<li>Why Elixir
      is taking over Change’s back-end tech stack.</li>\n<li>Using Elixir to build
      reliable event-based architecture.</li>\n<li>Exploring event-driven architecture
      from the perspective of Change’s system.</li>\n<li>John makes a compelling case
      for event-driven architecture. </li>\n<li>How Change hires for Elixir roles.</li>\n<li>Change’s
      process in training their staff to code in Elixir.</li>\n<li>John talks about
      his user-centred approach to design.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
      Wizards Discord — <a href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJohn
      Mertens — <a href=\"https://www.mertonium.com/about\" rel=\"nofollow\">https://www.mertonium.com/about</a><br>\nJohn
      Mertens on Twitter — <a href=\"https://twitter.com/mertonium\" rel=\"nofollow\">https://twitter.com/mertonium</a><br>\nJohn
      Mertens on GitHub — <a href=\"https://github.com/mertonium\" rel=\"nofollow\">https://github.com/mertonium</a><br>\nChange.org
      — <a href=\"https://www.change.org/\" rel=\"nofollow\">https://www.change.org/</a><br>\nChange.org
      Careers — <a href=\"https://careers.change.org/\" rel=\"nofollow\">https://careers.change.org/</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nGenStage
      and Flow - José Valim (Lambda Days 2017) — <a href=\"https://www.youtube.com/watch?v=XPlXNUXmcgE\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>\nDashbit
      — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHacker
      News — <a href=\"https://thehackernews.com/\" rel=\"nofollow\">https://thehackernews.com/</a><br>\nPaul
      Graham — <a href=\"https://twitter.com/paulg/\" rel=\"nofollow\">https://twitter.com/paulg/</a><br>\nNim
      — <a href=\"https://nim-lang.org/\" rel=\"nofollow\">https://nim-lang.org/</a><br>\nPony
      — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nGrax.io
      — <a href=\"https://www.grax.com/\" rel=\"nofollow\">https://www.grax.com/</a><br>\nLogo
      — <a href=\"https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html\"
      rel=\"nofollow\">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>\nNerves
      — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFlow
      — <a href=\"https://hexdocs.pm/flow/Flow.html\" rel=\"nofollow\">https://hexdocs.pm/flow/Flow.html</a><br>\nElixirConf
      EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\nMartin
      Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\n‘The
      Log: What every software engineer should know about real-time data&#39;s unifying
      abstraction’ — <a href=\"https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\"
      rel=\"nofollow\">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>\nSalesforce
      Marketing Cloud — <a href=\"https://www.salesforce.com/eu/products/marketing-cloud/overview/\"
      rel=\"nofollow\">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>\n‘Delivering
      social change with Elixir at Change.org’  — <a href=\"https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\"
      rel=\"nofollow\">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>\nCode
      for America — <a href=\"https://www.codeforamerica.org/\" rel=\"nofollow\">https://www.codeforamerica.org/</a></p><p>Special
      Guest: John Mertens.</p>\n      "
  contentEncoded: "\n        <p>Many organizations take an incremental approach when
    adopting Elixir, preferring to pick up its nuances by using it to work on non-essential
    projects. But not Change.org. Today we speak with Change.org Director of Engineering
    John Mertens about how his company adopted Elixir to create a business-critical
    app that handles over a billion emails per month. From building webpages on GeoCities
    to working as an IT intern at an Iowan prison, we open our conversation by exploring
    John’s coding background. After chatting about his first Elixir project, we dive
    into Change.org’s process in adopting Elixir. As John shares his insights into
    successfully integrating Elixir into your tech stack, he highlights the benefits
    provided by the language. Later, John discusses the advantages of event-driven
    architecture and how this structure makes it easier for teams to access and analyze
    data, while also making it easier to add product features. We wrap up this episode
    with John highlighting his user-centered approach to coding. Join us to hear John’s
    lessons on making the leap and adopting Elixir in large organizations.</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>John shares details about his role
    at Change.org.</li>\n<li>The story behind John and Change’s Elixir adoption. </li>\n<li>Hear
    about John’s coding journey.</li>\n<li>How John made an Elixir app based on spotting
    San Francisco tram carriages. </li>\n<li>Insights into the massive project that
    Change built using Elixir.</li>\n<li>Why Elixir is taking over Change’s back-end
    tech stack.</li>\n<li>Using Elixir to build reliable event-based architecture.</li>\n<li>Exploring
    event-driven architecture from the perspective of Change’s system.</li>\n<li>John
    makes a compelling case for event-driven architecture. </li>\n<li>How Change hires
    for Elixir roles.</li>\n<li>Change’s process in training their staff to code in
    Elixir.</li>\n<li>John talks about his user-centred approach to design.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nJohn
    Mertens — <a href=\"https://www.mertonium.com/about\" rel=\"nofollow\">https://www.mertonium.com/about</a><br>\nJohn
    Mertens on Twitter — <a href=\"https://twitter.com/mertonium\" rel=\"nofollow\">https://twitter.com/mertonium</a><br>\nJohn
    Mertens on GitHub — <a href=\"https://github.com/mertonium\" rel=\"nofollow\">https://github.com/mertonium</a><br>\nChange.org
    — <a href=\"https://www.change.org/\" rel=\"nofollow\">https://www.change.org/</a><br>\nChange.org
    Careers — <a href=\"https://careers.change.org/\" rel=\"nofollow\">https://careers.change.org/</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nGenStage
    and Flow - José Valim (Lambda Days 2017) — <a href=\"https://www.youtube.com/watch?v=XPlXNUXmcgE\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>\nDashbit
    — <a href=\"https://dashbit.co/\" rel=\"nofollow\">https://dashbit.co/</a><br>\nHacker
    News — <a href=\"https://thehackernews.com/\" rel=\"nofollow\">https://thehackernews.com/</a><br>\nPaul
    Graham — <a href=\"https://twitter.com/paulg/\" rel=\"nofollow\">https://twitter.com/paulg/</a><br>\nNim
    — <a href=\"https://nim-lang.org/\" rel=\"nofollow\">https://nim-lang.org/</a><br>\nPony
    — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nGrax.io
    — <a href=\"https://www.grax.com/\" rel=\"nofollow\">https://www.grax.com/</a><br>\nLogo
    — <a href=\"https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html\"
    rel=\"nofollow\">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>\nNerves
    — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFlow
    — <a href=\"https://hexdocs.pm/flow/Flow.html\" rel=\"nofollow\">https://hexdocs.pm/flow/Flow.html</a><br>\nElixirConf
    EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\nMartin
    Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\n‘The
    Log: What every software engineer should know about real-time data&#39;s unifying
    abstraction’ — <a href=\"https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\"
    rel=\"nofollow\">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>\nSalesforce
    Marketing Cloud — <a href=\"https://www.salesforce.com/eu/products/marketing-cloud/overview/\"
    rel=\"nofollow\">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>\n‘Delivering
    social change with Elixir at Change.org’  — <a href=\"https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/\"
    rel=\"nofollow\">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>\nCode
    for America — <a href=\"https://www.codeforamerica.org/\" rel=\"nofollow\">https://www.codeforamerica.org/</a></p><p>Special
    Guest: John Mertens.</p>\n      "
- title: Sophie DeBenedetto on Programming Phoenix LiveView
  slug: s5e14-debenedetto
  link: https://smartlogic.io/podcast/elixir-wizards/s5e14-debenedetto
  guid: 9470edd5-3447-4d40-9f5d-aaba34126ae3
  pubDate: Thu, 04 Mar 2021 06:00:00 -0500
  pubDateFriendly: March  4, 2021
  description: "As users increasingly demand interactivity from their web experiences,
    Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications
    without a loss to reliability. Today we welcome back an old friend of the show
    and GitHub engineer Sophie DeBenedetto to talk about her upcoming book, Programming
    Phoenix LiveView. We open our conversation with Sophie by hearing about her work
    at GitHub, as well as what we can expect from the Code BEAM V conference. As she
    doesn’t always get to use Elixir at her job, Sophie then discusses how coders
    can sharpen their Elixir skills when not at work. After exploring how companies
    can begin adopting Elixir through event-driven design, we dive into Sophie’s book.
    She unpacks the value of LiveView when building efficient web applications before
    touching on how her book can best help people to learn LiveView. We ask Sophie
    how intertwined the future of Elixir is to the success of LiveView and how this
    might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir
    adoption while also making Elixir easier to learn. We wrap up our discussion by
    chatting about the challenges of technical writing and Sophie’s experience working
    with the wonderful Pragmatic Programmers publishing house. Tune in to hear more
    insights into programming LiveView; if you believe the hype, it’s “one of the
    most important new frameworks of our generation.” \nKey Points From This Episode:\nWe
    catch up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.\nSophie
    shares her feelings on coding in Go.\nHow Sophie engages with Elixir when it’s
    not a key part of her day job.\nWhat Flatiron School did to work towards Elixir
    adoption.\nExploring the concept of event-driven design.\nInsights into the eventing
    system used at GitHub.\nSophie talks about her experience as an engineering manager.
    \nWhy Sophie transitioned from being a manager to being an individual contributor.
    \nHow work-from-home has impacted meeting expectations.\nHear the elevator pitch
    for Sophie’s upcoming book.\nThoughts on how beginner-friendly Elixir is as a
    language.\nWhether Phoenix LiveView is the future of Elixir. \nHow the attention
    placed on LiveView limits access to Phoenix resources and tutorials.\nWe ask Sophie
    if LiveView will make it easier or more difficult to learn Elixir. \nAdvice on
    writing technical books and the writing support offered by Pragmatic Programmers.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir Wizards
    Discord — https://smr.tl/wizards-discord\nElixir Wizards Email — podcast@smartlogic.io\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nSophie DeBenedetto on LinkedIn —
    https://www.linkedin.com/in/sophiedebenedetto/\nSophie DeBenedetto on Twitter
    — https://twitter.com/smdebenedetto\nProgramming Phoenix LiveView — https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\nBeam
    Radio — https://www.beamrad.io/\nCode BEAM V — https://codesync.global/conferences/code-beam-sto/\nBruce
    Tate — https://twitter.com/redrapids\nJosé Valim — https://twitter.com/josevalim\nNx
    — https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\nAlex
    Koutmos — https://twitter.com/akoutmos\nEMPEX — https://empex.co/nyc.html\nFlatiron
    School — https://flatironschool.com/\n‘What is the difference between Event Driven
    and Event Sourcing?’ — https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\nChris
    Keithley — https://twitter.com/chriskeathley\nGitHub — https://github.com/\nSteven
    Nuñez — https://twitter.com/StevenNunez\n‘Shipping Greenfield Elixir in a Legacy
    World’ — https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\nRuby
    on Rails Tutorial: Learn Web Development with Rails — https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\nToran
    Billups — https://twitter.com/toranb\nThe Pragmatic Programmers — https://pragprog.com/\nChris
    McCord — https://twitter.com/chris_mccord/\nDave Thomas — https://twitter.com/pragdave/\nAndy
    Hunt — https://twitter.com/PragmaticAndy/\nZenni — https://www.zennioptical.com/\nWarby
    Parker — https://www.warbyparker.com/ Special Guest: Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+m_tRzC_7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9470edd5-3447-4d40-9f5d-aaba34126ae3.mp3
    length: '46750427'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: As users increasingly demand interactivity from their web experiences,
      Phoenix LiveView is becoming the dominant way of writing interactive Elixir
      applications without a loss to reliability. Today we welcome back Sophie DeBenedetto,
      GitHub engineer, to talk about her upcoming book, Programming Phoenix LiveView.
    duration: '48:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9470edd5-3447-4d40-9f5d-aaba34126ae3/cover.jpg?v=1
    summary: "\n        <p>As users increasingly demand interactivity from their web
      experiences, Phoenix LiveView is becoming the dominant way of writing interactive
      Elixir applications without a loss to reliability. Today we welcome back an
      old friend of the show and GitHub engineer Sophie DeBenedetto to talk about
      her upcoming book, Programming Phoenix LiveView. We open our conversation with
      Sophie by hearing about her work at GitHub, as well as what we can expect from
      the Code BEAM V conference. As she doesn’t always get to use Elixir at her job,
      Sophie then discusses how coders can sharpen their Elixir skills when not at
      work. After exploring how companies can begin adopting Elixir through event-driven
      design, we dive into Sophie’s book. She unpacks the value of LiveView when building
      efficient web applications before touching on how her book can best help people
      to learn LiveView. We ask Sophie how intertwined the future of Elixir is to
      the success of LiveView and how this might impact Phoenix. Her answers highlight
      LiveView’s role in pushing Elixir adoption while also making Elixir easier to
      learn. We wrap up our discussion by chatting about the challenges of technical
      writing and Sophie’s experience working with the wonderful Pragmatic Programmers
      publishing house. Tune in to hear more insights into programming LiveView; if
      you believe the hype, it’s “one of the most important new frameworks of our
      generation.” </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We catch
      up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.</li>\n<li>Sophie
      shares her feelings on coding in Go.</li>\n<li>How Sophie engages with Elixir
      when it’s not a key part of her day job.</li>\n<li>What Flatiron School did
      to work towards Elixir adoption.</li>\n<li>Exploring the concept of event-driven
      design.</li>\n<li>Insights into the eventing system used at GitHub.</li>\n<li>Sophie
      talks about her experience as an engineering manager. </li>\n<li>Why Sophie
      transitioned from being a manager to being an individual contributor. </li>\n<li>How
      work-from-home has impacted meeting expectations.</li>\n<li>Hear the elevator
      pitch for Sophie’s upcoming book.</li>\n<li>Thoughts on how beginner-friendly
      Elixir is as a language.</li>\n<li>Whether Phoenix LiveView is the future of
      Elixir. </li>\n<li>How the attention placed on LiveView limits access to Phoenix
      resources and tutorials.</li>\n<li>We ask Sophie if LiveView will make it easier
      or more difficult to learn Elixir. </li>\n<li>Advice on writing technical books
      and the writing support offered by Pragmatic Programmers.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a
      href=\"https://smr.tl/wizards-discord\" rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nSophie
      DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
      DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nProgramming
      Phoenix LiveView — <a href=\"https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\"
      rel=\"nofollow\">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nBeam
      Radio — <a href=\"https://www.beamrad.io/\" rel=\"nofollow\">https://www.beamrad.io/</a><br>\nCode
      BEAM V — <a href=\"https://codesync.global/conferences/code-beam-sto/\" rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nNx
      — <a href=\"https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\"
      rel=\"nofollow\">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>\nAlex
      Koutmos — <a href=\"https://twitter.com/akoutmos\" rel=\"nofollow\">https://twitter.com/akoutmos</a><br>\nEMPEX
      — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\n‘What
      is the difference between Event Driven and Event Sourcing?’ — <a href=\"https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\"
      rel=\"nofollow\">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>\nChris
      Keithley — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nSteven
      Nuñez — <a href=\"https://twitter.com/_StevenNunez\" rel=\"nofollow\">https://twitter.com/_StevenNunez</a><br>\n‘Shipping
      Greenfield Elixir in a Legacy World’ — <a href=\"https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>\nRuby
      on Rails Tutorial: Learn Web Development with Rails — <a href=\"https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\"
      rel=\"nofollow\">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>\nToran
      Billups — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nThe
      Pragmatic Programmers — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nChris
      McCord — <a href=\"https://twitter.com/chris_mccord/\" rel=\"nofollow\">https://twitter.com/chris_mccord/</a><br>\nDave
      Thomas — <a href=\"https://twitter.com/pragdave/\" rel=\"nofollow\">https://twitter.com/pragdave/</a><br>\nAndy
      Hunt — <a href=\"https://twitter.com/PragmaticAndy/\" rel=\"nofollow\">https://twitter.com/PragmaticAndy/</a><br>\nZenni
      — <a href=\"https://www.zennioptical.com/\" rel=\"nofollow\">https://www.zennioptical.com/</a><br>\nWarby
      Parker — <a href=\"https://www.warbyparker.com/\" rel=\"nofollow\">https://www.warbyparker.com/</a></p><p>Special
      Guest: Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>As users increasingly demand interactivity from their
    web experiences, Phoenix LiveView is becoming the dominant way of writing interactive
    Elixir applications without a loss to reliability. Today we welcome back an old
    friend of the show and GitHub engineer Sophie DeBenedetto to talk about her upcoming
    book, Programming Phoenix LiveView. We open our conversation with Sophie by hearing
    about her work at GitHub, as well as what we can expect from the Code BEAM V conference.
    As she doesn’t always get to use Elixir at her job, Sophie then discusses how
    coders can sharpen their Elixir skills when not at work. After exploring how companies
    can begin adopting Elixir through event-driven design, we dive into Sophie’s book.
    She unpacks the value of LiveView when building efficient web applications before
    touching on how her book can best help people to learn LiveView. We ask Sophie
    how intertwined the future of Elixir is to the success of LiveView and how this
    might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir
    adoption while also making Elixir easier to learn. We wrap up our discussion by
    chatting about the challenges of technical writing and Sophie’s experience working
    with the wonderful Pragmatic Programmers publishing house. Tune in to hear more
    insights into programming LiveView; if you believe the hype, it’s “one of the
    most important new frameworks of our generation.” </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>We catch up with guest Sophie DeBenedetto and hear about
    the Code BEAM V conference.</li>\n<li>Sophie shares her feelings on coding in
    Go.</li>\n<li>How Sophie engages with Elixir when it’s not a key part of her day
    job.</li>\n<li>What Flatiron School did to work towards Elixir adoption.</li>\n<li>Exploring
    the concept of event-driven design.</li>\n<li>Insights into the eventing system
    used at GitHub.</li>\n<li>Sophie talks about her experience as an engineering
    manager. </li>\n<li>Why Sophie transitioned from being a manager to being an individual
    contributor. </li>\n<li>How work-from-home has impacted meeting expectations.</li>\n<li>Hear
    the elevator pitch for Sophie’s upcoming book.</li>\n<li>Thoughts on how beginner-friendly
    Elixir is as a language.</li>\n<li>Whether Phoenix LiveView is the future of Elixir.
    </li>\n<li>How the attention placed on LiveView limits access to Phoenix resources
    and tutorials.</li>\n<li>We ask Sophie if LiveView will make it easier or more
    difficult to learn Elixir. </li>\n<li>Advice on writing technical books and the
    writing support offered by Pragmatic Programmers.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Discord — <a href=\"https://smr.tl/wizards-discord\"
    rel=\"nofollow\">https://smr.tl/wizards-discord</a><br>\nElixir Wizards Email
    — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nSophie
    DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
    DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nProgramming
    Phoenix LiveView — <a href=\"https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/\"
    rel=\"nofollow\">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>\nBeam
    Radio — <a href=\"https://www.beamrad.io/\" rel=\"nofollow\">https://www.beamrad.io/</a><br>\nCode
    BEAM V — <a href=\"https://codesync.global/conferences/code-beam-sto/\" rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nNx
    — <a href=\"https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available\"
    rel=\"nofollow\">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>\nAlex
    Koutmos — <a href=\"https://twitter.com/akoutmos\" rel=\"nofollow\">https://twitter.com/akoutmos</a><br>\nEMPEX
    — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\n‘What
    is the difference between Event Driven and Event Sourcing?’ — <a href=\"https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing\"
    rel=\"nofollow\">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>\nChris
    Keithley — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nSteven
    Nuñez — <a href=\"https://twitter.com/_StevenNunez\" rel=\"nofollow\">https://twitter.com/_StevenNunez</a><br>\n‘Shipping
    Greenfield Elixir in a Legacy World’ — <a href=\"https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>\nRuby
    on Rails Tutorial: Learn Web Development with Rails — <a href=\"https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK\"
    rel=\"nofollow\">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>\nToran
    Billups — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nThe
    Pragmatic Programmers — <a href=\"https://pragprog.com/\" rel=\"nofollow\">https://pragprog.com/</a><br>\nChris
    McCord — <a href=\"https://twitter.com/chris_mccord/\" rel=\"nofollow\">https://twitter.com/chris_mccord/</a><br>\nDave
    Thomas — <a href=\"https://twitter.com/pragdave/\" rel=\"nofollow\">https://twitter.com/pragdave/</a><br>\nAndy
    Hunt — <a href=\"https://twitter.com/PragmaticAndy/\" rel=\"nofollow\">https://twitter.com/PragmaticAndy/</a><br>\nZenni
    — <a href=\"https://www.zennioptical.com/\" rel=\"nofollow\">https://www.zennioptical.com/</a><br>\nWarby
    Parker — <a href=\"https://www.warbyparker.com/\" rel=\"nofollow\">https://www.warbyparker.com/</a></p><p>Special
    Guest: Sophie DeBenedetto.</p>\n      "
- title: Shaun Robinson and Toran Billups on Using Elixir to Empower Online Learning
  slug: s5e13-robinson-billups
  link: https://smartlogic.io/podcast/elixir-wizards/s5e13-robinson-billups
  guid: 97fc73f8-1e61-447f-953f-99d2580f1476
  pubDate: Thu, 25 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 25, 2021
  description: "With the prevalence of at-home learning, teachers have to compete
    for student attention against numerous screen-based activities. Today we speak
    with engineering lead Shaun Robinson and Elixir developer Toran Billups about
    how Legends of Learning helps educators make their classrooms fun, engaging, and
    productive through their curriculum-based games. After chatting about Legends’
    mission to empower teachers, we talk with Toran about how he landed a job there.
    He then shares his insights into securing Elixir jobs, touching on the importance
    of networking and building a portfolio of Elixir projects. We discuss why Elixir
    became Legends’ language of choice before exploring their process in adopting
    Elixir. Reflecting on their early server structure, Shaun explains their process
    of refactoring from their old code base into an Elixir monolith. Responding to
    a previous episode, where frustrations were shared about coding in LiveView, Toran
    talks about its advantages, despite its issues as a new technology. Later, Shaun
    and Toran dive into what you can do to help your company adopt Elixir. We wrap
    up another incredible conversation by asking our guests about their favorite Legend
    of Learning games. Tune in to hear more about Legend of Learning’s Elixir journey
    and how they’re using it to create dynamic learning environments. \nKey Points
    From This Episode:\nExploring the mission and work of the Legends of Learning
    startup.\nShaun and Toran share details about their backgrounds.  \nWhy building
    a van home is so similar to building software.  \nHear about Toran’s podcast on
    the human side of programming.\nShaun talks about the time when he sold his Twitter
    and GitHub handle.\nWhat Toran did to land his first Elixir job.\nWhy Legends
    of Learning decided to adopt Elixir. \nInsights into Legends of Learning’s early
    server architecture. \nToran unpacks Legend’s hiring process.\nWhy Shaun’s engineering
    team consists of remote workers. \nToran shares the virtues of coding in LiveView.\nWhat
    Shaun did to refactor their old code base into an Elixir monolith.\nThe process
    that Legends underwent when adopting Elixir.\nAdvice on finding an Elixir role
    and adopting Elixir in your company.\nHear about Shaun and Toran’s favorite Legend
    of Learning games. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nShaun Robinson on LinkedIn — https://www.linkedin.com/in/shaun1010/\nToran
    Billups on Twitter — https://twitter.com/toranb\nToran Billups on LinkedIn — https://www.linkedin.com/in/toranb/\nLegends
    of Learning — https://www.legendsoflearning.com/\nVadim Polikov — https://www.linkedin.com/in/vadim-polikov/\nDeveloping
    Fatigue Podcast — https://developingfatigue.fm/\nKris Van Houghton — https://twitter.com/krivaten\nDave
    Gardner — https://www.linkedin.com/in/davegardner01/\nLegends of Learning Careers
    — https://www.legendsoflearning.com/interested-game-developer/\nLegends of Learning
    API Docs — https://docs.legendsoflearning.com/\nLonestar Elixir — https://lonestarelixir.com/\nElixir
    Match —https://elixirmatch.com/\nElixir Match on GitHub —  https://github.com/toranb/elixir-match\nChris
    McCord — http://chrismccord.com/\nGrox.io — https://grox.io/\nBruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/\nPostgraphile
    on GitHub — https://github.com/graphile/postgraphile\nMartin Fowler — https://martinfowler.com/\nThe
    Strangler Application — https://martinfowler.com/bliki/StranglerFigApplication.html\nTimescale
    — https://www.timescale.com/\n‘TimescaleDB 2.0 is now Generally Available’ — https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\nSun,
    Moon & Stars: Patterns of Apparent Motion on Legends of Learning — https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\nMagic
    the Gathering — https://magic.wizards.com/en\nLegends of Learning Awakening —
    https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\nHour
    of Code — https://hourofcode.com/\nOwl Pro — https://owllabs.com/products/meeting-owl-pro\nCorrection:
    In an earlier version of this episode, the host mis-spoke and mis-named the guests'
    company name in the outro; that error has been corrected as of 2021-02-25 3:52PM
    ET. Special Guests: Shaun Robinson and Toran Billups.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KczqS-33
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/97fc73f8-1e61-447f-953f-99d2580f1476.mp3
    length: '42647821'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Shaun Robinson and Toran Billups about how Legends
      of Learning helps educators make their classrooms fun, engaging, and productive
      through their curriculum-based games.
    duration: '50:45'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/97fc73f8-1e61-447f-953f-99d2580f1476/cover.jpg?v=1
    summary: "\n        <p>With the prevalence of at-home learning, teachers have
      to compete for student attention against numerous screen-based activities. Today
      we speak with engineering lead Shaun Robinson and Elixir developer Toran Billups
      about how Legends of Learning helps educators make their classrooms fun, engaging,
      and productive through their curriculum-based games. After chatting about Legends’
      mission to empower teachers, we talk with Toran about how he landed a job there.
      He then shares his insights into securing Elixir jobs, touching on the importance
      of networking and building a portfolio of Elixir projects. We discuss why Elixir
      became Legends’ language of choice before exploring their process in adopting
      Elixir. Reflecting on their early server structure, Shaun explains their process
      of refactoring from their old code base into an Elixir monolith. Responding
      to a previous episode, where frustrations were shared about coding in LiveView,
      Toran talks about its advantages, despite its issues as a new technology. Later,
      Shaun and Toran dive into what you can do to help your company adopt Elixir.
      We wrap up another incredible conversation by asking our guests about their
      favorite Legend of Learning games. Tune in to hear more about Legend of Learning’s
      Elixir journey and how they’re using it to create dynamic learning environments.
      </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Exploring the mission
      and work of the Legends of Learning startup.</li>\n<li>Shaun and Toran share
      details about their backgrounds.<br></li>\n<li>Why building a van home is so
      similar to building software.<br></li>\n<li>Hear about Toran’s podcast on the
      human side of programming.</li>\n<li>Shaun talks about the time when he sold
      his Twitter and GitHub handle.</li>\n<li>What Toran did to land his first Elixir
      job.</li>\n<li>Why Legends of Learning decided to adopt Elixir. </li>\n<li>Insights
      into Legends of Learning’s early server architecture. </li>\n<li>Toran unpacks
      Legend’s hiring process.</li>\n<li>Why Shaun’s engineering team consists of
      remote workers. </li>\n<li>Toran shares the virtues of coding in LiveView.</li>\n<li>What
      Shaun did to refactor their old code base into an Elixir monolith.</li>\n<li>The
      process that Legends underwent when adopting Elixir.</li>\n<li>Advice on finding
      an Elixir role and adopting Elixir in your company.</li>\n<li>Hear about Shaun
      and Toran’s favorite Legend of Learning games. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
      rel=\"nofollow\">podcast@smartlogic.io</a><br>\nShaun Robinson on LinkedIn —
      <a href=\"https://www.linkedin.com/in/shaun1010/\" rel=\"nofollow\">https://www.linkedin.com/in/shaun1010/</a><br>\nToran
      Billups on Twitter — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nToran
      Billups on LinkedIn — <a href=\"https://www.linkedin.com/in/toranb/\" rel=\"nofollow\">https://www.linkedin.com/in/toranb/</a><br>\nLegends
      of Learning — <a href=\"https://www.legendsoflearning.com/\" rel=\"nofollow\">https://www.legendsoflearning.com/</a><br>\nVadim
      Polikov — <a href=\"https://www.linkedin.com/in/vadim-polikov/\" rel=\"nofollow\">https://www.linkedin.com/in/vadim-polikov/</a><br>\nDeveloping
      Fatigue Podcast — <a href=\"https://developingfatigue.fm/\" rel=\"nofollow\">https://developingfatigue.fm/</a><br>\nKris
      Van Houghton — <a href=\"https://twitter.com/krivaten\" rel=\"nofollow\">https://twitter.com/krivaten</a><br>\nDave
      Gardner — <a href=\"https://www.linkedin.com/in/davegardner01/\" rel=\"nofollow\">https://www.linkedin.com/in/davegardner01/</a><br>\nLegends
      of Learning Careers — <a href=\"https://www.legendsoflearning.com/interested-game-developer/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/interested-game-developer/</a><br>\nLegends
      of Learning API Docs — <a href=\"https://docs.legendsoflearning.com/\" rel=\"nofollow\">https://docs.legendsoflearning.com/</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nElixir
      Match —<a href=\"https://elixirmatch.com/\" rel=\"nofollow\">https://elixirmatch.com/</a><br>\nElixir
      Match on GitHub —  <a href=\"https://github.com/toranb/elixir-match\" rel=\"nofollow\">https://github.com/toranb/elixir-match</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nGrox.io
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nPostgraphile
      on GitHub — <a href=\"https://github.com/graphile/postgraphile\" rel=\"nofollow\">https://github.com/graphile/postgraphile</a><br>\nMartin
      Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\nThe
      Strangler Application — <a href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"
      rel=\"nofollow\">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>\nTimescale
      — <a href=\"https://www.timescale.com/\" rel=\"nofollow\">https://www.timescale.com/</a><br>\n‘TimescaleDB
      2.0 is now Generally Available’ — <a href=\"https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\"
      rel=\"nofollow\">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>\nSun,
      Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href=\"https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>\nMagic
      the Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nLegends
      of Learning Awakening — <a href=\"https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\"
      rel=\"nofollow\">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>\nHour
      of Code — <a href=\"https://hourofcode.com/\" rel=\"nofollow\">https://hourofcode.com/</a><br>\nOwl
      Pro — <a href=\"https://owllabs.com/products/meeting-owl-pro\" rel=\"nofollow\">https://owllabs.com/products/meeting-owl-pro</a></p>\n\n<p>Correction:
      In an earlier version of this episode, the host mis-spoke and mis-named the
      guests&#39; company name in the outro; that error has been corrected as of 2021-02-25
      3:52PM ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>\n      "
  contentEncoded: "\n        <p>With the prevalence of at-home learning, teachers
    have to compete for student attention against numerous screen-based activities.
    Today we speak with engineering lead Shaun Robinson and Elixir developer Toran
    Billups about how Legends of Learning helps educators make their classrooms fun,
    engaging, and productive through their curriculum-based games. After chatting
    about Legends’ mission to empower teachers, we talk with Toran about how he landed
    a job there. He then shares his insights into securing Elixir jobs, touching on
    the importance of networking and building a portfolio of Elixir projects. We discuss
    why Elixir became Legends’ language of choice before exploring their process in
    adopting Elixir. Reflecting on their early server structure, Shaun explains their
    process of refactoring from their old code base into an Elixir monolith. Responding
    to a previous episode, where frustrations were shared about coding in LiveView,
    Toran talks about its advantages, despite its issues as a new technology. Later,
    Shaun and Toran dive into what you can do to help your company adopt Elixir. We
    wrap up another incredible conversation by asking our guests about their favorite
    Legend of Learning games. Tune in to hear more about Legend of Learning’s Elixir
    journey and how they’re using it to create dynamic learning environments. </p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Exploring the mission and work of the
    Legends of Learning startup.</li>\n<li>Shaun and Toran share details about their
    backgrounds.<br></li>\n<li>Why building a van home is so similar to building software.<br></li>\n<li>Hear
    about Toran’s podcast on the human side of programming.</li>\n<li>Shaun talks
    about the time when he sold his Twitter and GitHub handle.</li>\n<li>What Toran
    did to land his first Elixir job.</li>\n<li>Why Legends of Learning decided to
    adopt Elixir. </li>\n<li>Insights into Legends of Learning’s early server architecture.
    </li>\n<li>Toran unpacks Legend’s hiring process.</li>\n<li>Why Shaun’s engineering
    team consists of remote workers. </li>\n<li>Toran shares the virtues of coding
    in LiveView.</li>\n<li>What Shaun did to refactor their old code base into an
    Elixir monolith.</li>\n<li>The process that Legends underwent when adopting Elixir.</li>\n<li>Advice
    on finding an Elixir role and adopting Elixir in your company.</li>\n<li>Hear
    about Shaun and Toran’s favorite Legend of Learning games. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
    rel=\"nofollow\">podcast@smartlogic.io</a><br>\nShaun Robinson on LinkedIn — <a
    href=\"https://www.linkedin.com/in/shaun1010/\" rel=\"nofollow\">https://www.linkedin.com/in/shaun1010/</a><br>\nToran
    Billups on Twitter — <a href=\"https://twitter.com/toranb\" rel=\"nofollow\">https://twitter.com/toranb</a><br>\nToran
    Billups on LinkedIn — <a href=\"https://www.linkedin.com/in/toranb/\" rel=\"nofollow\">https://www.linkedin.com/in/toranb/</a><br>\nLegends
    of Learning — <a href=\"https://www.legendsoflearning.com/\" rel=\"nofollow\">https://www.legendsoflearning.com/</a><br>\nVadim
    Polikov — <a href=\"https://www.linkedin.com/in/vadim-polikov/\" rel=\"nofollow\">https://www.linkedin.com/in/vadim-polikov/</a><br>\nDeveloping
    Fatigue Podcast — <a href=\"https://developingfatigue.fm/\" rel=\"nofollow\">https://developingfatigue.fm/</a><br>\nKris
    Van Houghton — <a href=\"https://twitter.com/krivaten\" rel=\"nofollow\">https://twitter.com/krivaten</a><br>\nDave
    Gardner — <a href=\"https://www.linkedin.com/in/davegardner01/\" rel=\"nofollow\">https://www.linkedin.com/in/davegardner01/</a><br>\nLegends
    of Learning Careers — <a href=\"https://www.legendsoflearning.com/interested-game-developer/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/interested-game-developer/</a><br>\nLegends
    of Learning API Docs — <a href=\"https://docs.legendsoflearning.com/\" rel=\"nofollow\">https://docs.legendsoflearning.com/</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nElixir
    Match —<a href=\"https://elixirmatch.com/\" rel=\"nofollow\">https://elixirmatch.com/</a><br>\nElixir
    Match on GitHub —  <a href=\"https://github.com/toranb/elixir-match\" rel=\"nofollow\">https://github.com/toranb/elixir-match</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nGrox.io
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nPostgraphile
    on GitHub — <a href=\"https://github.com/graphile/postgraphile\" rel=\"nofollow\">https://github.com/graphile/postgraphile</a><br>\nMartin
    Fowler — <a href=\"https://martinfowler.com/\" rel=\"nofollow\">https://martinfowler.com/</a><br>\nThe
    Strangler Application — <a href=\"https://martinfowler.com/bliki/StranglerFigApplication.html\"
    rel=\"nofollow\">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>\nTimescale
    — <a href=\"https://www.timescale.com/\" rel=\"nofollow\">https://www.timescale.com/</a><br>\n‘TimescaleDB
    2.0 is now Generally Available’ — <a href=\"https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/\"
    rel=\"nofollow\">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>\nSun,
    Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href=\"https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>\nMagic
    the Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nLegends
    of Learning Awakening — <a href=\"https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/\"
    rel=\"nofollow\">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>\nHour
    of Code — <a href=\"https://hourofcode.com/\" rel=\"nofollow\">https://hourofcode.com/</a><br>\nOwl
    Pro — <a href=\"https://owllabs.com/products/meeting-owl-pro\" rel=\"nofollow\">https://owllabs.com/products/meeting-owl-pro</a></p>\n\n<p>Correction:
    In an earlier version of this episode, the host mis-spoke and mis-named the guests&#39;
    company name in the outro; that error has been corrected as of 2021-02-25 3:52PM
    ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>\n      "
- title: Brian Howenstein on How ClusterTruck is Innovating Food Delivery
  slug: s5e12-howenstein
  link: https://smartlogic.io/podcast/elixir-wizards/s5e12-howenstein
  guid: 1b9ca1de-dc95-49fa-885b-4e6093d52055
  pubDate: Thu, 18 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 18, 2021
  description: "ClusterTruck, a master of vertical integration, is rewriting the method
    of end-to-end food delivery and ghost kitchens. Today we speak with ClusterTruck
    Product VP Brian Howenstein to find out more about his journey in programming,
    ClusterTruck as an end-to-end food service, and how Elixir became mission-critical
    to the success of the business. \nWe kick things off by hearing more on Brian’s
    childhood and how he became interested in programming. We then hear about his
    internship at Apple where he was part of the Core OS networking team. Brian touches
    on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook, and shares how
    these personalities changed his view of the tech industry. Later in the show,
    we turn our attention to current times. Brian expands on his role at ClusterTruck
    and shares details on how Elixir has played a vital role in the company’s success.
    We hear his take on vertical integration, why they’d never consider third-party
    delivery companies, and much more. We then briefly digress to Brian’s hobby: the
    Scottish Games, before returning to ClusterTruck to find out what his favorite
    menu items are and what the future holds for food delivery and ghost kitchens.
    \nBe sure to stay tuned to enjoy our mini-feature where we speak with Michelle
    Morry, a software engineer at FuturePet. For all things Elixir, be sure to join
    us today! \nBonus: If you’re in Indianapolis, IN, Columbus, OH, or Kansas City,
    MO, download the ClusterTruck app and use code “ELIXIRWIZARDS” at checkout for
    a one-time 25% discount on your ClusterTruck order. Good for a single use for
    both new and returning customers.\nKey Points From This Episode:\nA call to all
    talented engineering managers to join our team!\nIntroducing today’s guest, Brian
    Howenstein.\nBrian tells us about his company, ClusterTruck.\nHear about Brian’s
    background in technology and programming.\nWhat inspired Brian to do programming
    professionally.\nBrian tells us about his internship at Apple.\nHear one of Brian’s
    fondest anecdotes about Jony Ive.\nBrian shares notes on his path to Elixir.\nWhy
    Elixir has had such an impact on ClusterTruck’s success.\nClusterTruck’s origin
    story.\nBrian talks about ClusterTruck’s vertical integration model.\nHow Brian
    got the people around him to buy into Elixir and the hurdles that came with it.\nBrian
    talks about his journey to become a ClusterTruck VP.\nBrian tells us about his
    hobby and we digress to World’s Strongest Man controversy.\nHow COVID has affected
    Brian’s business.\nNerves projects at ClusterTruck and how it’s being used.\nWhat
    the future looks like for ClusterTruck.\nBrian’s advice for people who are trying
    to get their company to code in Elixir.\nHow ClusterTruck is using LiveView.\nBrian’s
    favorite and least favorite menu items.\nStay tuned for our quick mini-feature.\nLinks
    Mentioned in Today’s Episode:\nClusterTruck — https://www.clustertruck.com/\nClusterTruck
    Hiring — https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\nCabermetrics
    — https://www.cabermetrics.com/\nBrain Howenstein on LinkedIn — https://www.linkedin.com/in/brianhowenstein/\nBrain
    Howenstein on Twitter — https://twitter.com/hwrd\nIndianapolis Scottish Games
    Festival — https://indyscotgamesandfest.com/\nPurdue University — https://www.purdue.edu/\nSimCity
    — https://www.ea.com/en-gb/games/simcity\nApple — https://www.apple.com/\nJony
    Ive — https://www.britannica.com/biography/Jonathan-Ive\nTim Cook — https://twitter.com/timcook\nSteve
    Jobs — https://www.biography.com/business-figure/steve-jobs\nUber Eats — https://www.ubereats.com/za\nExactTarget
    — https://www.linkedin.com/company/exacttarget/\nSalesforce — https://www.salesforce.com/\nDoorDash
    — https://www.doordash.com/en-US\nGrubHub — https://www.grubhub.com/\nThe World’s
    Strongest Man — http://theworldsstrongestman.com/\nRaspberry Pi — https://www.raspberrypi.org/\nIndy
    Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
    Hangry — https://www.youtube.com/watch?v=9LMzYTK6dsE&abchannel=IndyElixir\nIndy
    Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
    for a Team Simple — https://www.youtube.com/watch?v=ZY2XeIENMRw&abchannel=IndyElixir\nClusterTruck:
    Liberate Your Appetite — https://www.youtube.com/watch?v=xNC3vrrxNWM&abchannel=ClusterTruck\nSean
    in the City: ClusterTruck Indy — https://www.youtube.com/watch?v=-nusA13LYJI&abchannel=B105.7Indy\nClusterTruck
    + Slack — https://www.youtube.com/watch?v=C6t8aZQPB68&abchannel=ClusterTruck Special
    Guest: Brian Howenstein.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ycil-1Xj
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b9ca1de-dc95-49fa-885b-4e6093d52055.mp3
    length: '49892465'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: 'Today we speak with Brian Howenstein to find out about his journey
      in programming, ClusterTruck as an end-to-end food service, and how Elixir became
      mission-critical to the success of the business. '
    duration: '59:23'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b9ca1de-dc95-49fa-885b-4e6093d52055/cover.jpg?v=1
    summary: "\n        <p>ClusterTruck, a master of vertical integration, is rewriting
      the method of end-to-end food delivery and ghost kitchens. Today we speak with
      ClusterTruck Product VP Brian Howenstein to find out more about his journey
      in programming, ClusterTruck as an end-to-end food service, and how Elixir became
      mission-critical to the success of the business. </p>\n\n<p>We kick things off
      by hearing more on Brian’s childhood and how he became interested in programming.
      We then hear about his internship at Apple where he was part of the Core OS
      networking team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy,
      and Tim Cook, and shares how these personalities changed his view of the tech
      industry. Later in the show, we turn our attention to current times. Brian expands
      on his role at ClusterTruck and shares details on how Elixir has played a vital
      role in the company’s success. We hear his take on vertical integration, why
      they’d never consider third-party delivery companies, and much more. We then
      briefly digress to Brian’s hobby: the Scottish Games, before returning to ClusterTruck
      to find out what his favorite menu items are and what the future holds for food
      delivery and ghost kitchens. </p>\n\n<p>Be sure to stay tuned to enjoy our mini-feature
      where we speak with Michelle Morry, a software engineer at FuturePet. For all
      things Elixir, be sure to join us today! </p>\n\n<p>Bonus: If you’re in Indianapolis,
      IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use
      code “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck
      order. Good for a single use for both new and returning customers.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>A call to all talented engineering
      managers to join our team!</li>\n<li>Introducing today’s guest, Brian Howenstein.</li>\n<li>Brian
      tells us about his company, ClusterTruck.</li>\n<li>Hear about Brian’s background
      in technology and programming.</li>\n<li>What inspired Brian to do programming
      professionally.</li>\n<li>Brian tells us about his internship at Apple.</li>\n<li>Hear
      one of Brian’s fondest anecdotes about Jony Ive.</li>\n<li>Brian shares notes
      on his path to Elixir.</li>\n<li>Why Elixir has had such an impact on ClusterTruck’s
      success.</li>\n<li>ClusterTruck’s origin story.</li>\n<li>Brian talks about
      ClusterTruck’s vertical integration model.</li>\n<li>How Brian got the people
      around him to buy into Elixir and the hurdles that came with it.</li>\n<li>Brian
      talks about his journey to become a ClusterTruck VP.</li>\n<li>Brian tells us
      about his hobby and we digress to World’s Strongest Man controversy.</li>\n<li>How
      COVID has affected Brian’s business.</li>\n<li>Nerves projects at ClusterTruck
      and how it’s being used.</li>\n<li>What the future looks like for ClusterTruck.</li>\n<li>Brian’s
      advice for people who are trying to get their company to code in Elixir.</li>\n<li>How
      ClusterTruck is using LiveView.</li>\n<li>Brian’s favorite and least favorite
      menu items.</li>\n<li>Stay tuned for our quick mini-feature.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>ClusterTruck — <a href=\"https://www.clustertruck.com/\"
      rel=\"nofollow\">https://www.clustertruck.com/</a><br>\nClusterTruck Hiring
      — <a href=\"https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\"
      rel=\"nofollow\">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>\nCabermetrics
      — <a href=\"https://www.cabermetrics.com/\" rel=\"nofollow\">https://www.cabermetrics.com/</a><br>\nBrain
      Howenstein on LinkedIn — <a href=\"https://www.linkedin.com/in/brianhowenstein/\"
      rel=\"nofollow\">https://www.linkedin.com/in/brianhowenstein/</a><br>\nBrain
      Howenstein on Twitter — <a href=\"https://twitter.com/hwrd\" rel=\"nofollow\">https://twitter.com/hwrd</a><br>\nIndianapolis
      Scottish Games Festival — <a href=\"https://indyscotgamesandfest.com/\" rel=\"nofollow\">https://indyscotgamesandfest.com/</a><br>\nPurdue
      University — <a href=\"https://www.purdue.edu/\" rel=\"nofollow\">https://www.purdue.edu/</a><br>\nSimCity
      — <a href=\"https://www.ea.com/en-gb/games/simcity\" rel=\"nofollow\">https://www.ea.com/en-gb/games/simcity</a><br>\nApple
      — <a href=\"https://www.apple.com/\" rel=\"nofollow\">https://www.apple.com/</a><br>\nJony
      Ive — <a href=\"https://www.britannica.com/biography/Jonathan-Ive\" rel=\"nofollow\">https://www.britannica.com/biography/Jonathan-Ive</a><br>\nTim
      Cook — <a href=\"https://twitter.com/tim_cook\" rel=\"nofollow\">https://twitter.com/tim_cook</a><br>\nSteve
      Jobs — <a href=\"https://www.biography.com/business-figure/steve-jobs\" rel=\"nofollow\">https://www.biography.com/business-figure/steve-jobs</a><br>\nUber
      Eats — <a href=\"https://www.ubereats.com/za\" rel=\"nofollow\">https://www.ubereats.com/za</a><br>\nExactTarget
      — <a href=\"https://www.linkedin.com/company/exacttarget/\" rel=\"nofollow\">https://www.linkedin.com/company/exacttarget/</a><br>\nSalesforce
      — <a href=\"https://www.salesforce.com/\" rel=\"nofollow\">https://www.salesforce.com/</a><br>\nDoorDash
      — <a href=\"https://www.doordash.com/en-US\" rel=\"nofollow\">https://www.doordash.com/en-US</a><br>\nGrubHub
      — <a href=\"https://www.grubhub.com/\" rel=\"nofollow\">https://www.grubhub.com/</a><br>\nThe
      World’s Strongest Man — <a href=\"http://theworldsstrongestman.com/\" rel=\"nofollow\">http://theworldsstrongestman.com/</a><br>\nRaspberry
      Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nIndy
      Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
      Hangry — <a href=\"https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>\nIndy
      Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
      for a Team Simple — <a href=\"https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>\nClusterTruck:
      Liberate Your Appetite — <a href=\"https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>\nSean
      in the City: ClusterTruck Indy — <a href=\"https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>\nClusterTruck
      + Slack — <a href=\"https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special
      Guest: Brian Howenstein.</p>\n      "
  contentEncoded: "\n        <p>ClusterTruck, a master of vertical integration, is
    rewriting the method of end-to-end food delivery and ghost kitchens. Today we
    speak with ClusterTruck Product VP Brian Howenstein to find out more about his
    journey in programming, ClusterTruck as an end-to-end food service, and how Elixir
    became mission-critical to the success of the business. </p>\n\n<p>We kick things
    off by hearing more on Brian’s childhood and how he became interested in programming.
    We then hear about his internship at Apple where he was part of the Core OS networking
    team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook,
    and shares how these personalities changed his view of the tech industry. Later
    in the show, we turn our attention to current times. Brian expands on his role
    at ClusterTruck and shares details on how Elixir has played a vital role in the
    company’s success. We hear his take on vertical integration, why they’d never
    consider third-party delivery companies, and much more. We then briefly digress
    to Brian’s hobby: the Scottish Games, before returning to ClusterTruck to find
    out what his favorite menu items are and what the future holds for food delivery
    and ghost kitchens. </p>\n\n<p>Be sure to stay tuned to enjoy our mini-feature
    where we speak with Michelle Morry, a software engineer at FuturePet. For all
    things Elixir, be sure to join us today! </p>\n\n<p>Bonus: If you’re in Indianapolis,
    IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use code
    “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck order.
    Good for a single use for both new and returning customers.</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>A call to all talented engineering managers
    to join our team!</li>\n<li>Introducing today’s guest, Brian Howenstein.</li>\n<li>Brian
    tells us about his company, ClusterTruck.</li>\n<li>Hear about Brian’s background
    in technology and programming.</li>\n<li>What inspired Brian to do programming
    professionally.</li>\n<li>Brian tells us about his internship at Apple.</li>\n<li>Hear
    one of Brian’s fondest anecdotes about Jony Ive.</li>\n<li>Brian shares notes
    on his path to Elixir.</li>\n<li>Why Elixir has had such an impact on ClusterTruck’s
    success.</li>\n<li>ClusterTruck’s origin story.</li>\n<li>Brian talks about ClusterTruck’s
    vertical integration model.</li>\n<li>How Brian got the people around him to buy
    into Elixir and the hurdles that came with it.</li>\n<li>Brian talks about his
    journey to become a ClusterTruck VP.</li>\n<li>Brian tells us about his hobby
    and we digress to World’s Strongest Man controversy.</li>\n<li>How COVID has affected
    Brian’s business.</li>\n<li>Nerves projects at ClusterTruck and how it’s being
    used.</li>\n<li>What the future looks like for ClusterTruck.</li>\n<li>Brian’s
    advice for people who are trying to get their company to code in Elixir.</li>\n<li>How
    ClusterTruck is using LiveView.</li>\n<li>Brian’s favorite and least favorite
    menu items.</li>\n<li>Stay tuned for our quick mini-feature.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>ClusterTruck — <a href=\"https://www.clustertruck.com/\"
    rel=\"nofollow\">https://www.clustertruck.com/</a><br>\nClusterTruck Hiring —
    <a href=\"https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb\"
    rel=\"nofollow\">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>\nCabermetrics
    — <a href=\"https://www.cabermetrics.com/\" rel=\"nofollow\">https://www.cabermetrics.com/</a><br>\nBrain
    Howenstein on LinkedIn — <a href=\"https://www.linkedin.com/in/brianhowenstein/\"
    rel=\"nofollow\">https://www.linkedin.com/in/brianhowenstein/</a><br>\nBrain Howenstein
    on Twitter — <a href=\"https://twitter.com/hwrd\" rel=\"nofollow\">https://twitter.com/hwrd</a><br>\nIndianapolis
    Scottish Games Festival — <a href=\"https://indyscotgamesandfest.com/\" rel=\"nofollow\">https://indyscotgamesandfest.com/</a><br>\nPurdue
    University — <a href=\"https://www.purdue.edu/\" rel=\"nofollow\">https://www.purdue.edu/</a><br>\nSimCity
    — <a href=\"https://www.ea.com/en-gb/games/simcity\" rel=\"nofollow\">https://www.ea.com/en-gb/games/simcity</a><br>\nApple
    — <a href=\"https://www.apple.com/\" rel=\"nofollow\">https://www.apple.com/</a><br>\nJony
    Ive — <a href=\"https://www.britannica.com/biography/Jonathan-Ive\" rel=\"nofollow\">https://www.britannica.com/biography/Jonathan-Ive</a><br>\nTim
    Cook — <a href=\"https://twitter.com/tim_cook\" rel=\"nofollow\">https://twitter.com/tim_cook</a><br>\nSteve
    Jobs — <a href=\"https://www.biography.com/business-figure/steve-jobs\" rel=\"nofollow\">https://www.biography.com/business-figure/steve-jobs</a><br>\nUber
    Eats — <a href=\"https://www.ubereats.com/za\" rel=\"nofollow\">https://www.ubereats.com/za</a><br>\nExactTarget
    — <a href=\"https://www.linkedin.com/company/exacttarget/\" rel=\"nofollow\">https://www.linkedin.com/company/exacttarget/</a><br>\nSalesforce
    — <a href=\"https://www.salesforce.com/\" rel=\"nofollow\">https://www.salesforce.com/</a><br>\nDoorDash
    — <a href=\"https://www.doordash.com/en-US\" rel=\"nofollow\">https://www.doordash.com/en-US</a><br>\nGrubHub
    — <a href=\"https://www.grubhub.com/\" rel=\"nofollow\">https://www.grubhub.com/</a><br>\nThe
    World’s Strongest Man — <a href=\"http://theworldsstrongestman.com/\" rel=\"nofollow\">http://theworldsstrongestman.com/</a><br>\nRaspberry
    Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nIndy
    Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are
    Hangry — <a href=\"https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>\nIndy
    Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering
    for a Team Simple — <a href=\"https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>\nClusterTruck:
    Liberate Your Appetite — <a href=\"https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>\nSean
    in the City: ClusterTruck Indy — <a href=\"https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>\nClusterTruck
    + Slack — <a href=\"https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special
    Guest: Brian Howenstein.</p>\n      "
- title: Yair Flicker on SmartLogic’s Origin, Evolution, and Elixir Adoption Process
  slug: s5e11-flicker
  link: https://smartlogic.io/podcast/elixir-wizards/s5e11-flicker
  guid: bc908c5d-f422-4fc4-809b-ec4f4b051d3a
  pubDate: Thu, 11 Feb 2021 06:00:00 -0500
  pubDateFriendly: February 11, 2021
  description: "Building a successful development company requires having a leader
    with technical know-how and excellent management skills. Today we speak with SmartLogic
    President and Founder Yair Flicker about his company’s origin story, evolution,
    and their Elixir adoption process. Early in the episode, we talk about Yair’s
    first jobs before diving into how he founded SmartLogic. An important transition
    point, we then chat about how he moved from writing code to running a business.
    Reflecting on his tech background, Yair opens up about how he learned to code
    before he shares insights into the languages that his company programs in, how
    they discovered Elixir, and how they integrated it into their practice. In a discussion
    that’s sure to resonate with startup managers, Yair unpacks what he does to grow
    as a manager, along with best practices for companies looking to adopt Elixir.
    We ask Yair about the benefits of coding in Elixir, how SmartLogic has retained
    its top employees, why he prioritizes employee happiness, and the role that company
    values play in strengthening SmartLogic. After hearing about Yair’s vision for
    the future, we jump into our mini-segment where we interview Jake Johnson, the
    Director of Software Engineering at TaxJar. For more on building strong companies
    and advice on adopting Elixir, be sure to tune in and benefit from our conversations
    with Yair and Jake.\nKey Points From This Episode:\nSmartLogic Founder Yair Flicker
    talks about his first job.\nYair shares details about SmartLogic’s humble origins.\nEarly
    challenges SmarLogic faced and Yair’s move from coding to running a business.\nWe
    ask Yair about how he learned to code. \nSmartLogic’s coding evolution and how
    they discovered Elixir.\nThe Maker vs. Manager distinction; what Yair did to grow
    as a manager.\nExploring the benefits of adopting Elixir.\nYair’s advice for companies
    wanting to adopt Elixir.\nWhy Elixir allows for more scalability than many other
    languages.\nHow SmartLogic has been able to retain some of its top employees.\nThe
    link between having happy employees and happy clients. \nHow Yair lives his company’s
    values. \nYair shares his recipe for creating productive meetings.\nHear about
    Yair’s vision for SmartLogic’s future. \nFor our mini-feature segment, we chat
    with Jake Johnson from TaxJar.\nWhy TaxJar adopted Elixir and details on Jake’s
    background. \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nYair Flicker on LinkedIn — https://www.linkedin.com/in/yflicker/\nYair
    Flicker on Twitter — https://twitter.com/yflicker\nJake Johnson on LinkedIn —
    https://www.linkedin.com/in/jakej/\nTaxJar — https://www.taxjar.com/\nMusic and
    Arts — https://www.musicarts.com/\nJohns Hopkins University — https://www.jhu.edu/\nHackers
    — https://www.imdb.com/title/tt0113243/\nNational Conference of Synagogue Youth
    — https://ncsy.org/\nStanley Black & Decker — https://www.stanleyblackanddecker.com/\nReddit
    — https://reddit.com/\nDiscord — https://discord.com/\nInstagram — https://www.instagram.com\nAmazon
    Web Services — https://aws.amazon.com/\nSales Tax for Developers — https://salestax.dev\nBackstreet
    Boys — https://linktr.ee/backstreetboys Special Guest: Yair Flicker.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+P_7e0HQf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bc908c5d-f422-4fc4-809b-ec4f4b051d3a.mp3
    length: '53579123'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with SmartLogic President and Founder Yair Flicker about
      his company’s origin story, evolution, and their Elixir adoption process.
    duration: '55:46'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bc908c5d-f422-4fc4-809b-ec4f4b051d3a/cover.jpg?v=1
    summary: "\n        <p>Building a successful development company requires having
      a leader with technical know-how and excellent management skills. Today we speak
      with SmartLogic President and Founder Yair Flicker about his company’s origin
      story, evolution, and their Elixir adoption process. Early in the episode, we
      talk about Yair’s first jobs before diving into how he founded SmartLogic. An
      important transition point, we then chat about how he moved from writing code
      to running a business. Reflecting on his tech background, Yair opens up about
      how he learned to code before he shares insights into the languages that his
      company programs in, how they discovered Elixir, and how they integrated it
      into their practice. In a discussion that’s sure to resonate with startup managers,
      Yair unpacks what he does to grow as a manager, along with best practices for
      companies looking to adopt Elixir. We ask Yair about the benefits of coding
      in Elixir, how SmartLogic has retained its top employees, why he prioritizes
      employee happiness, and the role that company values play in strengthening SmartLogic.
      After hearing about Yair’s vision for the future, we jump into our mini-segment
      where we interview Jake Johnson, the Director of Software Engineering at TaxJar.
      For more on building strong companies and advice on adopting Elixir, be sure
      to tune in and benefit from our conversations with Yair and Jake.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>SmartLogic Founder Yair Flicker talks
      about his first job.</li>\n<li>Yair shares details about SmartLogic’s humble
      origins.</li>\n<li>Early challenges SmarLogic faced and Yair’s move from coding
      to running a business.</li>\n<li>We ask Yair about how he learned to code. </li>\n<li>SmartLogic’s
      coding evolution and how they discovered Elixir.</li>\n<li>The Maker vs. Manager
      distinction; what Yair did to grow as a manager.</li>\n<li>Exploring the benefits
      of adopting Elixir.</li>\n<li>Yair’s advice for companies wanting to adopt Elixir.</li>\n<li>Why
      Elixir allows for more scalability than many other languages.</li>\n<li>How
      SmartLogic has been able to retain some of its top employees.</li>\n<li>The
      link between having happy employees and happy clients. </li>\n<li>How Yair lives
      his company’s values. </li>\n<li>Yair shares his recipe for creating productive
      meetings.</li>\n<li>Hear about Yair’s vision for SmartLogic’s future. </li>\n<li>For
      our mini-feature segment, we chat with Jake Johnson from TaxJar.</li>\n<li>Why
      TaxJar adopted Elixir and details on Jake’s background. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir Wizards Email — <a href=\"mailto:podcast@smartlogic.io\"
      rel=\"nofollow\">podcast@smartlogic.io</a><br>\nYair Flicker on LinkedIn — <a
      href=\"https://www.linkedin.com/in/yflicker/\" rel=\"nofollow\">https://www.linkedin.com/in/yflicker/</a><br>\nYair
      Flicker on Twitter — <a href=\"https://twitter.com/yflicker\" rel=\"nofollow\">https://twitter.com/yflicker</a><br>\nJake
      Johnson on LinkedIn — <a href=\"https://www.linkedin.com/in/jakej/\" rel=\"nofollow\">https://www.linkedin.com/in/jakej/</a><br>\nTaxJar
      — <a href=\"https://www.taxjar.com/\" rel=\"nofollow\">https://www.taxjar.com/</a><br>\nMusic
      and Arts — <a href=\"https://www.musicarts.com/\" rel=\"nofollow\">https://www.musicarts.com/</a><br>\nJohns
      Hopkins University — <a href=\"https://www.jhu.edu/\" rel=\"nofollow\">https://www.jhu.edu/</a><br>\nHackers
      — <a href=\"https://www.imdb.com/title/tt0113243/\" rel=\"nofollow\">https://www.imdb.com/title/tt0113243/</a><br>\nNational
      Conference of Synagogue Youth — <a href=\"https://ncsy.org/\" rel=\"nofollow\">https://ncsy.org/</a><br>\nStanley
      Black &amp; Decker — <a href=\"https://www.stanleyblackanddecker.com/\" rel=\"nofollow\">https://www.stanleyblackanddecker.com/</a><br>\nReddit
      — <a href=\"https://reddit.com/\" rel=\"nofollow\">https://reddit.com/</a><br>\nDiscord
      — <a href=\"https://discord.com/\" rel=\"nofollow\">https://discord.com/</a><br>\nInstagram
      — <a href=\"https://www.instagram.com\" rel=\"nofollow\">https://www.instagram.com</a><br>\nAmazon
      Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nSales
      Tax for Developers — <a href=\"https://salestax.dev\" rel=\"nofollow\">https://salestax.dev</a><br>\nBackstreet
      Boys — <a href=\"https://linktr.ee/backstreetboys\" rel=\"nofollow\">https://linktr.ee/backstreetboys</a></p><p>Special
      Guest: Yair Flicker.</p>\n      "
  contentEncoded: "\n        <p>Building a successful development company requires
    having a leader with technical know-how and excellent management skills. Today
    we speak with SmartLogic President and Founder Yair Flicker about his company’s
    origin story, evolution, and their Elixir adoption process. Early in the episode,
    we talk about Yair’s first jobs before diving into how he founded SmartLogic.
    An important transition point, we then chat about how he moved from writing code
    to running a business. Reflecting on his tech background, Yair opens up about
    how he learned to code before he shares insights into the languages that his company
    programs in, how they discovered Elixir, and how they integrated it into their
    practice. In a discussion that’s sure to resonate with startup managers, Yair
    unpacks what he does to grow as a manager, along with best practices for companies
    looking to adopt Elixir. We ask Yair about the benefits of coding in Elixir, how
    SmartLogic has retained its top employees, why he prioritizes employee happiness,
    and the role that company values play in strengthening SmartLogic. After hearing
    about Yair’s vision for the future, we jump into our mini-segment where we interview
    Jake Johnson, the Director of Software Engineering at TaxJar. For more on building
    strong companies and advice on adopting Elixir, be sure to tune in and benefit
    from our conversations with Yair and Jake.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>SmartLogic
    Founder Yair Flicker talks about his first job.</li>\n<li>Yair shares details
    about SmartLogic’s humble origins.</li>\n<li>Early challenges SmarLogic faced
    and Yair’s move from coding to running a business.</li>\n<li>We ask Yair about
    how he learned to code. </li>\n<li>SmartLogic’s coding evolution and how they
    discovered Elixir.</li>\n<li>The Maker vs. Manager distinction; what Yair did
    to grow as a manager.</li>\n<li>Exploring the benefits of adopting Elixir.</li>\n<li>Yair’s
    advice for companies wanting to adopt Elixir.</li>\n<li>Why Elixir allows for
    more scalability than many other languages.</li>\n<li>How SmartLogic has been
    able to retain some of its top employees.</li>\n<li>The link between having happy
    employees and happy clients. </li>\n<li>How Yair lives his company’s values. </li>\n<li>Yair
    shares his recipe for creating productive meetings.</li>\n<li>Hear about Yair’s
    vision for SmartLogic’s future. </li>\n<li>For our mini-feature segment, we chat
    with Jake Johnson from TaxJar.</li>\n<li>Why TaxJar adopted Elixir and details
    on Jake’s background. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
    Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nYair
    Flicker on LinkedIn — <a href=\"https://www.linkedin.com/in/yflicker/\" rel=\"nofollow\">https://www.linkedin.com/in/yflicker/</a><br>\nYair
    Flicker on Twitter — <a href=\"https://twitter.com/yflicker\" rel=\"nofollow\">https://twitter.com/yflicker</a><br>\nJake
    Johnson on LinkedIn — <a href=\"https://www.linkedin.com/in/jakej/\" rel=\"nofollow\">https://www.linkedin.com/in/jakej/</a><br>\nTaxJar
    — <a href=\"https://www.taxjar.com/\" rel=\"nofollow\">https://www.taxjar.com/</a><br>\nMusic
    and Arts — <a href=\"https://www.musicarts.com/\" rel=\"nofollow\">https://www.musicarts.com/</a><br>\nJohns
    Hopkins University — <a href=\"https://www.jhu.edu/\" rel=\"nofollow\">https://www.jhu.edu/</a><br>\nHackers
    — <a href=\"https://www.imdb.com/title/tt0113243/\" rel=\"nofollow\">https://www.imdb.com/title/tt0113243/</a><br>\nNational
    Conference of Synagogue Youth — <a href=\"https://ncsy.org/\" rel=\"nofollow\">https://ncsy.org/</a><br>\nStanley
    Black &amp; Decker — <a href=\"https://www.stanleyblackanddecker.com/\" rel=\"nofollow\">https://www.stanleyblackanddecker.com/</a><br>\nReddit
    — <a href=\"https://reddit.com/\" rel=\"nofollow\">https://reddit.com/</a><br>\nDiscord
    — <a href=\"https://discord.com/\" rel=\"nofollow\">https://discord.com/</a><br>\nInstagram
    — <a href=\"https://www.instagram.com\" rel=\"nofollow\">https://www.instagram.com</a><br>\nAmazon
    Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nSales
    Tax for Developers — <a href=\"https://salestax.dev\" rel=\"nofollow\">https://salestax.dev</a><br>\nBackstreet
    Boys — <a href=\"https://linktr.ee/backstreetboys\" rel=\"nofollow\">https://linktr.ee/backstreetboys</a></p><p>Special
    Guest: Yair Flicker.</p>\n      "
- title: Alexandra Chakeres on Moving Towards an Inclusive Elixir Community
  slug: s5e10-chakeres
  link: https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres
  guid: d3843a34-8180-4e29-ae31-ab4d2da8379b
  pubDate: Thu, 04 Feb 2021 06:00:00 -0500
  pubDateFriendly: February  4, 2021
  description: "Despite its welcoming character, the Elixir community struggles with
    diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists
    are women. Today we speak with Blinker software engineer Alexandra Chakeres about
    her experience of the community, as well as what we can do to make it more inclusive.
    We open by exploring Alexandra’s background and coding career. After expressing
    her enthusiasm for the Turing School, we talk about Alexandra’s learn-by-doing
    approach to picking up Elixir. She shares how she landed her first Elixir job
    before we chat about her current role at Blinker. We discuss why the small size
    of the community means that Alexandra doesn’t recommend Elixir to coding beginners.
    We then dive into the topic of Elixir diversity, touching on factors that limit
    inclusivity, including how few Elixir positions are available for juniors. Alexandra
    unpacks solutions, like how organizations can shift their hiring pipeline and
    the need to approach diversity organizations with openings. Later, listeners will
    enjoy our mini-feature segment where we interview Instinct Science engineer Bill
    Peregoy about how their team uses Elixir. Tune in for more on what we can do to
    create a more diverse community. \nKey Points From This Episode:\nHear how co-host
    Sundi Myint first met Alexandra.\nAlexandra shares details about her coding background.\nWhy
    Alexandra feels so passionately about Turing Boot Camp.\nDetails about Alexandra’s
    first Elixir job.\nWhat Alexandra’s current team builds in Elixir and her experience
    using umbrella apps.\nComparing Ruby with Elixir and insights into what Elixir
    is missing. \nWhy Alexandra doesn’t recommend that junior engineers first learn
    Elixir.\nHow restricted Elixir hirings lead to a lack of diversity in the community.
    \nExploring ways to make the Elixir community more diverse. \nWhat Alexandra most
    enjoys about coding in Elixir.\nAlexandra’s top advice for minorities in the Elixir
    community.\nWhy it’s up to all of us to create a more inclusive community.\nWe
    talk to Bill Peregoy about how the team at Instinct Science uses Elixir.\nBill’s
    challenges and benefits to writing in Elixir.\nHow Bill would help new hires learn
    Elixir.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nElixir
    Wizards Email — podcast@smartlogic.io\nAlexandra Chakeres on LinkedIn — https://www.linkedin.com/in/alexandrachakeres/\nAlexandra
    Chakeres on GitHub — https://github.com/chakeresa\nBlinker — https://www.blinker.com/\nElixirConf
    — https://elixirconf.com\nBrian Cardarella — https://twitter.com/bcardarella\nTuring
    School — https://turing.io/\nAngelfire — https://www.angelfire.lycos.com/\nMelvin
    Cedeno — https://twitter.com/thecraftedgem\nWeedmaps — https://weedmaps.com/\nDenver
    Erlang and Elixir Meetup — https://www.meetup.com/Denver-Erlang-Elixir/\nDC |>
    Elixir Meetup — https://www.meetup.com/DC-Elixir/\nDispatchHealth — https://www.dispatchhealth.com/\nAutotrader
    — https://www.autotrader.com/\nJosé Valim - https://github.com/josevalim\nDiversified
    Tech — https://www.diversifytech.co/\nWomen Who Code D.C — https://www.womenwhocode.com/dc\nBruce
    Tate — https://twitter.com/redrapids\nBill Peregoy on LinkedIn — https://www.linkedin.com/in/billperegoy/\nInstinct
    Science — https://www.instinct.vet/\nAppSense — https://www.ivanti.com/company/history/appsense
    Special Guest: Alexandra Chakeres.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Ap-0UjrU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d3843a34-8180-4e29-ae31-ab4d2da8379b.mp3
    length: '46530590'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Despite its welcoming character, the Elixir community struggles with
      diversity. Today we speak with Alexandra Chakeres about her experience and what
      we can do to make it more inclusive.
    duration: '48:25'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d3843a34-8180-4e29-ae31-ab4d2da8379b/cover.jpg?v=1
    summary: "\n        <p>Despite its welcoming character, the Elixir community struggles
      with diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists
      are women. Today we speak with Blinker software engineer Alexandra Chakeres
      about her experience of the community, as well as what we can do to make it
      more inclusive. We open by exploring Alexandra’s background and coding career.
      After expressing her enthusiasm for the Turing School, we talk about Alexandra’s
      learn-by-doing approach to picking up Elixir. She shares how she landed her
      first Elixir job before we chat about her current role at Blinker. We discuss
      why the small size of the community means that Alexandra doesn’t recommend Elixir
      to coding beginners. We then dive into the topic of Elixir diversity, touching
      on factors that limit inclusivity, including how few Elixir positions are available
      for juniors. Alexandra unpacks solutions, like how organizations can shift their
      hiring pipeline and the need to approach diversity organizations with openings.
      Later, listeners will enjoy our mini-feature segment where we interview Instinct
      Science engineer Bill Peregoy about how their team uses Elixir. Tune in for
      more on what we can do to create a more diverse community. </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Hear how co-host Sundi Myint first met Alexandra.</li>\n<li>Alexandra
      shares details about her coding background.</li>\n<li>Why Alexandra feels so
      passionately about Turing Boot Camp.</li>\n<li>Details about Alexandra’s first
      Elixir job.</li>\n<li>What Alexandra’s current team builds in Elixir and her
      experience using umbrella apps.</li>\n<li>Comparing Ruby with Elixir and insights
      into what Elixir is missing. </li>\n<li>Why Alexandra doesn’t recommend that
      junior engineers first learn Elixir.</li>\n<li>How restricted Elixir hirings
      lead to a lack of diversity in the community. </li>\n<li>Exploring ways to make
      the Elixir community more diverse. </li>\n<li>What Alexandra most enjoys about
      coding in Elixir.</li>\n<li>Alexandra’s top advice for minorities in the Elixir
      community.</li>\n<li>Why it’s up to all of us to create a more inclusive community.</li>\n<li>We
      talk to Bill Peregoy about how the team at Instinct Science uses Elixir.</li>\n<li>Bill’s
      challenges and benefits to writing in Elixir.</li>\n<li>How Bill would help
      new hires learn Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
      Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nAlexandra
      Chakeres on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandrachakeres/\"
      rel=\"nofollow\">https://www.linkedin.com/in/alexandrachakeres/</a><br>\nAlexandra
      Chakeres on GitHub — <a href=\"https://github.com/chakeresa\" rel=\"nofollow\">https://github.com/chakeresa</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com\" rel=\"nofollow\">https://elixirconf.com</a><br>\nBrian
      Cardarella — <a href=\"https://twitter.com/bcardarella\" rel=\"nofollow\">https://twitter.com/bcardarella</a><br>\nTuring
      School — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nAngelfire
      — <a href=\"https://www.angelfire.lycos.com/\" rel=\"nofollow\">https://www.angelfire.lycos.com/</a><br>\nMelvin
      Cedeno — <a href=\"https://twitter.com/thecraftedgem\" rel=\"nofollow\">https://twitter.com/thecraftedgem</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nDenver
      Erlang and Elixir Meetup — <a href=\"https://www.meetup.com/Denver-Erlang-Elixir/\"
      rel=\"nofollow\">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>\nDC |&gt;
      Elixir Meetup — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nDispatchHealth
      — <a href=\"https://www.dispatchhealth.com/\" rel=\"nofollow\">https://www.dispatchhealth.com/</a><br>\nAutotrader
      — <a href=\"https://www.autotrader.com/\" rel=\"nofollow\">https://www.autotrader.com/</a><br>\nJosé
      Valim - <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nDiversified
      Tech — <a href=\"https://www.diversifytech.co/\" rel=\"nofollow\">https://www.diversifytech.co/</a><br>\nWomen
      Who Code D.C — <a href=\"https://www.womenwhocode.com/dc\" rel=\"nofollow\">https://www.womenwhocode.com/dc</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBill
      Peregoy on LinkedIn — <a href=\"https://www.linkedin.com/in/billperegoy/\" rel=\"nofollow\">https://www.linkedin.com/in/billperegoy/</a><br>\nInstinct
      Science — <a href=\"https://www.instinct.vet/\" rel=\"nofollow\">https://www.instinct.vet/</a><br>\nAppSense
      — <a href=\"https://www.ivanti.com/company/history/appsense\" rel=\"nofollow\">https://www.ivanti.com/company/history/appsense</a></p><p>Special
      Guest: Alexandra Chakeres.</p>\n      "
  contentEncoded: "\n        <p>Despite its welcoming character, the Elixir community
    struggles with diversity; as the 2020 ElixirConf community survey shows, only
    2% of Elixirists are women. Today we speak with Blinker software engineer Alexandra
    Chakeres about her experience of the community, as well as what we can do to make
    it more inclusive. We open by exploring Alexandra’s background and coding career.
    After expressing her enthusiasm for the Turing School, we talk about Alexandra’s
    learn-by-doing approach to picking up Elixir. She shares how she landed her first
    Elixir job before we chat about her current role at Blinker. We discuss why the
    small size of the community means that Alexandra doesn’t recommend Elixir to coding
    beginners. We then dive into the topic of Elixir diversity, touching on factors
    that limit inclusivity, including how few Elixir positions are available for juniors.
    Alexandra unpacks solutions, like how organizations can shift their hiring pipeline
    and the need to approach diversity organizations with openings. Later, listeners
    will enjoy our mini-feature segment where we interview Instinct Science engineer
    Bill Peregoy about how their team uses Elixir. Tune in for more on what we can
    do to create a more diverse community. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Hear
    how co-host Sundi Myint first met Alexandra.</li>\n<li>Alexandra shares details
    about her coding background.</li>\n<li>Why Alexandra feels so passionately about
    Turing Boot Camp.</li>\n<li>Details about Alexandra’s first Elixir job.</li>\n<li>What
    Alexandra’s current team builds in Elixir and her experience using umbrella apps.</li>\n<li>Comparing
    Ruby with Elixir and insights into what Elixir is missing. </li>\n<li>Why Alexandra
    doesn’t recommend that junior engineers first learn Elixir.</li>\n<li>How restricted
    Elixir hirings lead to a lack of diversity in the community. </li>\n<li>Exploring
    ways to make the Elixir community more diverse. </li>\n<li>What Alexandra most
    enjoys about coding in Elixir.</li>\n<li>Alexandra’s top advice for minorities
    in the Elixir community.</li>\n<li>Why it’s up to all of us to create a more inclusive
    community.</li>\n<li>We talk to Bill Peregoy about how the team at Instinct Science
    uses Elixir.</li>\n<li>Bill’s challenges and benefits to writing in Elixir.</li>\n<li>How
    Bill would help new hires learn Elixir.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixir
    Wizards Email — <a href=\"mailto:podcast@smartlogic.io\" rel=\"nofollow\">podcast@smartlogic.io</a><br>\nAlexandra
    Chakeres on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandrachakeres/\"
    rel=\"nofollow\">https://www.linkedin.com/in/alexandrachakeres/</a><br>\nAlexandra
    Chakeres on GitHub — <a href=\"https://github.com/chakeresa\" rel=\"nofollow\">https://github.com/chakeresa</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com\" rel=\"nofollow\">https://elixirconf.com</a><br>\nBrian
    Cardarella — <a href=\"https://twitter.com/bcardarella\" rel=\"nofollow\">https://twitter.com/bcardarella</a><br>\nTuring
    School — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nAngelfire
    — <a href=\"https://www.angelfire.lycos.com/\" rel=\"nofollow\">https://www.angelfire.lycos.com/</a><br>\nMelvin
    Cedeno — <a href=\"https://twitter.com/thecraftedgem\" rel=\"nofollow\">https://twitter.com/thecraftedgem</a><br>\nWeedmaps
    — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nDenver
    Erlang and Elixir Meetup — <a href=\"https://www.meetup.com/Denver-Erlang-Elixir/\"
    rel=\"nofollow\">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>\nDC |&gt;
    Elixir Meetup — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nDispatchHealth
    — <a href=\"https://www.dispatchhealth.com/\" rel=\"nofollow\">https://www.dispatchhealth.com/</a><br>\nAutotrader
    — <a href=\"https://www.autotrader.com/\" rel=\"nofollow\">https://www.autotrader.com/</a><br>\nJosé
    Valim - <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nDiversified
    Tech — <a href=\"https://www.diversifytech.co/\" rel=\"nofollow\">https://www.diversifytech.co/</a><br>\nWomen
    Who Code D.C — <a href=\"https://www.womenwhocode.com/dc\" rel=\"nofollow\">https://www.womenwhocode.com/dc</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBill
    Peregoy on LinkedIn — <a href=\"https://www.linkedin.com/in/billperegoy/\" rel=\"nofollow\">https://www.linkedin.com/in/billperegoy/</a><br>\nInstinct
    Science — <a href=\"https://www.instinct.vet/\" rel=\"nofollow\">https://www.instinct.vet/</a><br>\nAppSense
    — <a href=\"https://www.ivanti.com/company/history/appsense\" rel=\"nofollow\">https://www.ivanti.com/company/history/appsense</a></p><p>Special
    Guest: Alexandra Chakeres.</p>\n      "
- title: 'Matt Nowack and Jake Heinz on Elixir and Discord; Bonus: Arthi Radhakrishnan,
    Community.com'
  slug: s5e8-nowack-heinz
  link: https://smartlogic.io/podcast/elixir-wizards/s5e8-nowack-heinz
  guid: 1752ae0e-feb0-4606-b3b0-97f70e29e3de
  pubDate: Thu, 21 Jan 2021 06:00:00 -0500
  pubDateFriendly: January 21, 2021
  description: |
    In this episode we continue our conversation about adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system! We also invite Arthi Radhakrishnan from community.com for our mini-interview in the last chunk of the episode. Our chat begins with Jake and Matt telling Elixir developers exactly why they should not use Mnesia. They subsequently dive into their journeys in programming and the process of learning Elixir after joining Discord. They share a few aha-moments as well as challenging projects that asked them to get their heads around some of the more powerful features of Elixir, highlighting a way they used immutability for a project that asked them to efficiently calculate deltas for large member list updates. From there we get into the culture around onboarding new devs at Discord, the company’s popular open-source Elixir contributions, and some brags about the high performance of features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their suggestions for teams and devs hoping to adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s standard library. After that, it’s time for our chat with Arthi, where we hear about her programming journey, how Elixir is being put to use at Community.com, how the company supports new devs learning Elixir, and more!
    Key Points From This Episode:
    Our guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.
    How Jake and Matt got into programming and learned Elixir after joining Discord.
    The history of the use of Elixir at Discord and some of the projects Jake helped build since.
    The nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.
    Different projects Matt worked on after joining Discord and how they helped him learn Elixir.
    Aha moments of learning Elixir; features of the language that acted as force multipliers in the development of different Discord projects.
    Processes at Discord for helping new developers learn Elixir.
    Open-source contributions from Discord to the Elixir community and the culture around this at Discord.
    Issues around logging and memory allocation in Elixir and what our guests think could change.
    The sheer power Elixir brought to the Discord project allowing rapid scale with a small team.
    Jake weighs in on the strengths of Python, Rust and Elixir, as well as BEAM processes versus Goroutines.
    Discord as a native Electron app and whether we will see it written in Rust.
    Advice regarding adopting Elixir about the power of OTP and the standard library.
    Introducing Arthi Radhakrishnan for our mini-interview at the end of the show.
    Previous languages Arthi worked in and how she learned Elixir after joining community.com.
    The fan chat service offered at community.com and some famous users.
    Features of the community.com architecture built in Elixir.
    The size of the team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.

    Links Mentioned in Today’s Episode:
    SmartLogic — https://smartlogic.io/
    Matt Nowack on GitHub — https://github.com/ihumanable
    Mat Nowack on Twitter — https://twitter.com/ihumanable?lang=en
    Jake Heinz on GitHub — https://github.com/jhgg
    Apply for a Position at Discord — https://discord.com/jobs
    Stanislav Vishnevskiy on LinkedIn — https://www.linkedin.com/in/svishnevskiy/
    ZenMonitor — https://github.com/discord/zenmonitor
    SortedSet Nif — https://github.com/discord/sortedsetnif
    The BEAM Book — https://github.com/happi/theBeamBook
    Semaphore — https://github.com/discord/semaphore
    ExHashRing — https://github.com/discord/exhashring
    ertsalloc Documentation — https://erlang.org/doc/man/erts_alloc.html
    Arthi Radhakrishnan on LinkedIn — https://www.linkedin.com/in/arthiradhakrishnan/
    Community.com (https://www.community.com/)
    Andrea Leopardi on LinkedIn — https://www.linkedin.com/in/anleopardi/?originalSubdomain=it Special Guests: Jake Heinz and Matt Nowack.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5GV4qQWP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1752ae0e-feb0-4606-b3b0-97f70e29e3de.mp3
    length: '51116798'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: In today's episode we talk with Matt Nowack and Jake Heinz from Discord.
      They get into the features of Elixir that make it a great fit for building a
      real-time chat infrastructure system!
    duration: '53:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1752ae0e-feb0-4606-b3b0-97f70e29e3de/cover.jpg?v=1
    summary: "\n        <p>In this episode we continue our conversation about adopting
      Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them
      get into the features of Elixir that make it a great fit for building a real-time
      chat infrastructure system! We also invite Arthi Radhakrishnan from community.com
      for our mini-interview in the last chunk of the episode. Our chat begins with
      Jake and Matt telling Elixir developers exactly why they should not use Mnesia.
      They subsequently dive into their journeys in programming and the process of
      learning Elixir after joining Discord. They share a few aha-moments as well
      as challenging projects that asked them to get their heads around some of the
      more powerful features of Elixir, highlighting a way they used immutability
      for a project that asked them to efficiently calculate deltas for large member
      list updates. From there we get into the culture around onboarding new devs
      at Discord, the company’s popular open-source Elixir contributions, and some
      brags about the high performance of features of Discord built in Elixir. Wrapping
      up with Jake and Matt, we hear their suggestions for teams and devs hoping to
      adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s
      standard library. After that, it’s time for our chat with Arthi, where we hear
      about her programming journey, how Elixir is being put to use at Community.com,
      how the company supports new devs learning Elixir, and more!</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Our guests’ thoughts on why Elixir developers
      shouldn’t use the database driver Mnesia.</li>\n<li>How Jake and Matt got into
      programming and learned Elixir after joining Discord.</li>\n<li>The history
      of the use of Elixir at Discord and some of the projects Jake helped build since.</li>\n<li>The
      nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.</li>\n<li>Different
      projects Matt worked on after joining Discord and how they helped him learn
      Elixir.</li>\n<li>Aha moments of learning Elixir; features of the language that
      acted as force multipliers in the development of different Discord projects.</li>\n<li>Processes
      at Discord for helping new developers learn Elixir.</li>\n<li>Open-source contributions
      from Discord to the Elixir community and the culture around this at Discord.</li>\n<li>Issues
      around logging and memory allocation in Elixir and what our guests think could
      change.</li>\n<li>The sheer power Elixir brought to the Discord project allowing
      rapid scale with a small team.</li>\n<li>Jake weighs in on the strengths of
      Python, Rust and Elixir, as well as BEAM processes versus Goroutines.</li>\n<li>Discord
      as a native Electron app and whether we will see it written in Rust.</li>\n<li>Advice
      regarding adopting Elixir about the power of OTP and the standard library.</li>\n<li>Introducing
      Arthi Radhakrishnan for our mini-interview at the end of the show.</li>\n<li>Previous
      languages Arthi worked in and how she learned Elixir after joining community.com.</li>\n<li>The
      fan chat service offered at community.com and some famous users.</li>\n<li>Features
      of the community.com architecture built in Elixir.</li>\n<li>The size of the
      team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>\n<li>\nLinks
      Mentioned in Today’s Episode:</li>\n</ul>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nMatt Nowack on GitHub — <a
      href=\"https://github.com/ihumanable\" rel=\"nofollow\">https://github.com/ihumanable</a><br>\nMat
      Nowack on Twitter — <a href=\"https://twitter.com/ihumanable?lang=en\" rel=\"nofollow\">https://twitter.com/ihumanable?lang=en</a><br>\nJake
      Heinz on GitHub — <a href=\"https://github.com/jhgg\" rel=\"nofollow\">https://github.com/jhgg</a><br>\nApply
      for a Position at Discord — <a href=\"https://discord.com/jobs\" rel=\"nofollow\">https://discord.com/jobs</a><br>\nStanislav
      Vishnevskiy on LinkedIn — <a href=\"https://www.linkedin.com/in/svishnevskiy/\"
      rel=\"nofollow\">https://www.linkedin.com/in/svishnevskiy/</a><br>\nZenMonitor
      — <a href=\"https://github.com/discord/zen_monitor\" rel=\"nofollow\">https://github.com/discord/zen_monitor</a><br>\nSortedSet
      Nif — <a href=\"https://github.com/discord/sorted_set_nif\" rel=\"nofollow\">https://github.com/discord/sorted_set_nif</a><br>\nThe
      BEAM Book — <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nSemaphore
      — <a href=\"https://github.com/discord/semaphore\" rel=\"nofollow\">https://github.com/discord/semaphore</a><br>\nExHashRing
      — <a href=\"https://github.com/discord/ex_hash_ring\" rel=\"nofollow\">https://github.com/discord/ex_hash_ring</a><br>\nerts_alloc
      Documentation — <a href=\"https://erlang.org/doc/man/erts_alloc.html\" rel=\"nofollow\">https://erlang.org/doc/man/erts_alloc.html</a><br>\nArthi
      Radhakrishnan on LinkedIn — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
      rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>\n<a
      href=\"https://www.community.com/\" rel=\"nofollow\">Community.com</a><br>\nAndrea
      Leopardi on LinkedIn — <a href=\"https://www.linkedin.com/in/anleopardi/?originalSubdomain=it\"
      rel=\"nofollow\">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special
      Guests: Jake Heinz and Matt Nowack.</p>\n      "
  contentEncoded: "\n        <p>In this episode we continue our conversation about
    adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing
    them get into the features of Elixir that make it a great fit for building a real-time
    chat infrastructure system! We also invite Arthi Radhakrishnan from community.com
    for our mini-interview in the last chunk of the episode. Our chat begins with
    Jake and Matt telling Elixir developers exactly why they should not use Mnesia.
    They subsequently dive into their journeys in programming and the process of learning
    Elixir after joining Discord. They share a few aha-moments as well as challenging
    projects that asked them to get their heads around some of the more powerful features
    of Elixir, highlighting a way they used immutability for a project that asked
    them to efficiently calculate deltas for large member list updates. From there
    we get into the culture around onboarding new devs at Discord, the company’s popular
    open-source Elixir contributions, and some brags about the high performance of
    features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their
    suggestions for teams and devs hoping to adopt Elixir, where they strongly advise
    on learning OTP as well as Elixir’s standard library. After that, it’s time for
    our chat with Arthi, where we hear about her programming journey, how Elixir is
    being put to use at Community.com, how the company supports new devs learning
    Elixir, and more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Our
    guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.</li>\n<li>How
    Jake and Matt got into programming and learned Elixir after joining Discord.</li>\n<li>The
    history of the use of Elixir at Discord and some of the projects Jake helped build
    since.</li>\n<li>The nuts and bolts of OTP; Jake’s experiences learning it along
    with Elixir at Discord.</li>\n<li>Different projects Matt worked on after joining
    Discord and how they helped him learn Elixir.</li>\n<li>Aha moments of learning
    Elixir; features of the language that acted as force multipliers in the development
    of different Discord projects.</li>\n<li>Processes at Discord for helping new
    developers learn Elixir.</li>\n<li>Open-source contributions from Discord to the
    Elixir community and the culture around this at Discord.</li>\n<li>Issues around
    logging and memory allocation in Elixir and what our guests think could change.</li>\n<li>The
    sheer power Elixir brought to the Discord project allowing rapid scale with a
    small team.</li>\n<li>Jake weighs in on the strengths of Python, Rust and Elixir,
    as well as BEAM processes versus Goroutines.</li>\n<li>Discord as a native Electron
    app and whether we will see it written in Rust.</li>\n<li>Advice regarding adopting
    Elixir about the power of OTP and the standard library.</li>\n<li>Introducing
    Arthi Radhakrishnan for our mini-interview at the end of the show.</li>\n<li>Previous
    languages Arthi worked in and how she learned Elixir after joining community.com.</li>\n<li>The
    fan chat service offered at community.com and some famous users.</li>\n<li>Features
    of the community.com architecture built in Elixir.</li>\n<li>The size of the team,
    the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>\n<li>\nLinks
    Mentioned in Today’s Episode:</li>\n</ul>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nMatt Nowack on GitHub — <a href=\"https://github.com/ihumanable\"
    rel=\"nofollow\">https://github.com/ihumanable</a><br>\nMat Nowack on Twitter
    — <a href=\"https://twitter.com/ihumanable?lang=en\" rel=\"nofollow\">https://twitter.com/ihumanable?lang=en</a><br>\nJake
    Heinz on GitHub — <a href=\"https://github.com/jhgg\" rel=\"nofollow\">https://github.com/jhgg</a><br>\nApply
    for a Position at Discord — <a href=\"https://discord.com/jobs\" rel=\"nofollow\">https://discord.com/jobs</a><br>\nStanislav
    Vishnevskiy on LinkedIn — <a href=\"https://www.linkedin.com/in/svishnevskiy/\"
    rel=\"nofollow\">https://www.linkedin.com/in/svishnevskiy/</a><br>\nZenMonitor
    — <a href=\"https://github.com/discord/zen_monitor\" rel=\"nofollow\">https://github.com/discord/zen_monitor</a><br>\nSortedSet
    Nif — <a href=\"https://github.com/discord/sorted_set_nif\" rel=\"nofollow\">https://github.com/discord/sorted_set_nif</a><br>\nThe
    BEAM Book — <a href=\"https://github.com/happi/theBeamBook\" rel=\"nofollow\">https://github.com/happi/theBeamBook</a><br>\nSemaphore
    — <a href=\"https://github.com/discord/semaphore\" rel=\"nofollow\">https://github.com/discord/semaphore</a><br>\nExHashRing
    — <a href=\"https://github.com/discord/ex_hash_ring\" rel=\"nofollow\">https://github.com/discord/ex_hash_ring</a><br>\nerts_alloc
    Documentation — <a href=\"https://erlang.org/doc/man/erts_alloc.html\" rel=\"nofollow\">https://erlang.org/doc/man/erts_alloc.html</a><br>\nArthi
    Radhakrishnan on LinkedIn — <a href=\"https://www.linkedin.com/in/arthiradhakrishnan/\"
    rel=\"nofollow\">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>\n<a href=\"https://www.community.com/\"
    rel=\"nofollow\">Community.com</a><br>\nAndrea Leopardi on LinkedIn — <a href=\"https://www.linkedin.com/in/anleopardi/?originalSubdomain=it\"
    rel=\"nofollow\">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special
    Guests: Jake Heinz and Matt Nowack.</p>\n      "
- title: Jason Axelson on the Elixir Language Server
  slug: s5e7-axelson
  link: https://smartlogic.io/podcast/elixir-wizards/s5e7-axelson
  guid: 6475cfad-49d7-498d-a06a-c9af4a82e710
  pubDate: Thu, 14 Jan 2021 06:00:00 -0500
  pubDateFriendly: January 14, 2021
  description: |
    Welcome back to the Elixir Wizards podcast! In this episode, we will be continuing our conversation on the theme of adopting elixir, and our great guest for today is Jason Axelson! Jason is a back-end developer for a mixed reality studio called Animal Repair Shop and has also made some significant contributions to the Elixir Language Server project. We kick off our conversation with Jason hearing about his programming journey and then dive into the event chat service app he helped build using Elixir while he was working at Hobnob. From there, we talk about some of his aha moments while learning Elixir and some of his favorite features about the language which he is putting to use building out the back end for Animal Repair Shop. Next, we turn our attention to Elixir Language Server and Jason weighs in on the IDE type features it offers, why he got started as a collaborator on the project, and some of their challenges in the field of shared governance. Wrapping up for today, Jason makes a few suggestions for how devs who love Elixir can convince their teams to adopt it as a more mainstream option. Tune in for a great chat on the topic of adopting Elixir!
    Key Points From This Episode:
    An introduction to Jason Axelson and the story of how he got into programming.
    Some of the books our hosts and guests read as kids and how they relate to programming.
    How Jason got into Elixir while working on a chat service for events app at Hobnob.
    Jason’s current project using Elixir to build the back end for Animal Repair Shop.
    What caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning it.
    The TLDR version of the project that birthed ‘Road to 2 Million WebSocket Connections’.
    What Jason loves about Elixir — pattern matching, immutability, explicitness.
    Why Jason and his team at Animal Repair Shop are building their back end in Elixir.
    The features provided by the Elixir Language Server for giving IDEs Elixir type support.
    Jason’s involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture, etc.
    Some of the most challenging aspects of working on ElixirLS for Jason.
    Jason’s talk on ElixirLS at ElixirConf – its content, doing it virtually, and more.
    New features in the pipeline for ElixirLS; formatting speed improvements and more.
    The role that good tooling plays in being able to learn a language more easily.
    What needs to happen for Elixir to become a more mainstream back end option.
    Advice from Jason regarding ways to convince your firm to adopt Elixir.
    Links Mentioned in Today’s Episode:
    SmartLogic — https://smartlogic.io/
    Jason Axelson on LinkedIn — https://www.linkedin.com/in/jasonaxelson
    Jason Axelson on GitHub — https://github.com/axelson
    Jason Axelson on Twitter — https://twitter.com/bostonvaulter?lang=en
    Privcheck by Jason Axelson — https://github.com/axelson/privcheck
    Jason Axelson ElixirConf ElixirLS Talk — https://2020.elixirconf.com/speakers/126/talk
    A Definitive Guide to JavaScript  — https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/
    Hobnob — https://hobnob.app/
    Elixir for Programmers by Dave Thomas — https://codestool.coding-gnome.com/courses/elixir-for-programmers
    Animal Repair Shop — https://www.animalrepairshop.com/about/
    ‘Road to 2 Million WebSocket Connections’ — https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections
    Elixir Getting Started Guide — https://elixir-lang.org/getting-started/introduction.html
    GitHub/ElixirLP — https://github.com/elixir-lsp/elixir-ls
    Adopting Elixir — https://pragprog.com/titles/tvmelixir/adopting-elixir/
    Elixir Slack — https://elixir-slackin.herokuapp.com/
    elixir-lsp/elixir-ls: Issue #274 — https://github.com/elixir-lsp/elixir-ls/issues/274
    elixir-lsp/elixir-ls: Issue #381 — https://github.com/elixir-lsp/elixir-ls/issues/381 Special Guest: Jason Axelson.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+AGH9ImrY
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6475cfad-49d7-498d-a06a-c9af4a82e710.mp3
    length: '32639876'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: 'Today''s guest Jason Axelson, a back-end developer for a mixed reality
      studio,  talks about his programming journey and contributions to Animal Repair
      Shop and the Elixir Language Server project. '
    duration: '33:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6475cfad-49d7-498d-a06a-c9af4a82e710/cover.jpg?v=1
    summary: "\n        <p>Welcome back to the Elixir Wizards podcast! In this episode,
      we will be continuing our conversation on the theme of adopting elixir, and
      our great guest for today is Jason Axelson! Jason is a back-end developer for
      a mixed reality studio called Animal Repair Shop and has also made some significant
      contributions to the Elixir Language Server project. We kick off our conversation
      with Jason hearing about his programming journey and then dive into the event
      chat service app he helped build using Elixir while he was working at Hobnob.
      From there, we talk about some of his aha moments while learning Elixir and
      some of his favorite features about the language which he is putting to use
      building out the back end for Animal Repair Shop. Next, we turn our attention
      to Elixir Language Server and Jason weighs in on the IDE type features it offers,
      why he got started as a collaborator on the project, and some of their challenges
      in the field of shared governance. Wrapping up for today, Jason makes a few
      suggestions for how devs who love Elixir can convince their teams to adopt it
      as a more mainstream option. Tune in for a great chat on the topic of adopting
      Elixir!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>An introduction
      to Jason Axelson and the story of how he got into programming.</li>\n<li>Some
      of the books our hosts and guests read as kids and how they relate to programming.</li>\n<li>How
      Jason got into Elixir while working on a chat service for events app at Hobnob.</li>\n<li>Jason’s
      current project using Elixir to build the back end for Animal Repair Shop.</li>\n<li>What
      caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments
      learning it.</li>\n<li>The TLDR version of the project that birthed ‘Road to
      2 Million WebSocket Connections’.</li>\n<li>What Jason loves about Elixir —
      pattern matching, immutability, explicitness.</li>\n<li>Why Jason and his team
      at Animal Repair Shop are building their back end in Elixir.</li>\n<li>The features
      provided by the Elixir Language Server for giving IDEs Elixir type support.</li>\n<li>Jason’s
      involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture,
      etc.</li>\n<li>Some of the most challenging aspects of working on ElixirLS for
      Jason.</li>\n<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing
      it virtually, and more.</li>\n<li>New features in the pipeline for ElixirLS;
      formatting speed improvements and more.</li>\n<li>The role that good tooling
      plays in being able to learn a language more easily.</li>\n<li>What needs to
      happen for Elixir to become a more mainstream back end option.</li>\n<li>Advice
      from Jason regarding ways to convince your firm to adopt Elixir.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a><br>\nJason Axelson on LinkedIn —
      <a href=\"https://www.linkedin.com/in/jasonaxelson\" rel=\"nofollow\">https://www.linkedin.com/in/jasonaxelson</a><br>\nJason
      Axelson on GitHub — <a href=\"https://github.com/axelson\" rel=\"nofollow\">https://github.com/axelson</a><br>\nJason
      Axelson on Twitter — <a href=\"https://twitter.com/bostonvaulter?lang=en\" rel=\"nofollow\">https://twitter.com/bostonvaulter?lang=en</a><br>\nPriv_check
      by Jason Axelson — <a href=\"https://github.com/axelson/priv_check\" rel=\"nofollow\">https://github.com/axelson/priv_check</a><br>\nJason
      Axelson ElixirConf ElixirLS Talk — <a href=\"https://2020.elixirconf.com/speakers/126/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/126/talk</a><br>\nA Definitive
      Guide to JavaScript  — <a href=\"https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>\nHobnob
      — <a href=\"https://hobnob.app/\" rel=\"nofollow\">https://hobnob.app/</a><br>\nElixir
      for Programmers by Dave Thomas — <a href=\"https://codestool.coding-gnome.com/courses/elixir-for-programmers\"
      rel=\"nofollow\">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>\nAnimal
      Repair Shop — <a href=\"https://www.animalrepairshop.com/about/\" rel=\"nofollow\">https://www.animalrepairshop.com/about/</a><br>\n‘Road
      to 2 Million WebSocket Connections’ — <a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
      rel=\"nofollow\">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nElixir
      Getting Started Guide — <a href=\"https://elixir-lang.org/getting-started/introduction.html\"
      rel=\"nofollow\">https://elixir-lang.org/getting-started/introduction.html</a><br>\nGitHub/ElixirLP
      — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAdopting
      Elixir — <a href=\"https://pragprog.com/titles/tvmelixir/adopting-elixir/\"
      rel=\"nofollow\">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>\nElixir
      Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nelixir-lsp/elixir-ls:
      Issue #274 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/274\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>\nelixir-lsp/elixir-ls:
      Issue #381 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/381\"
      rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special
      Guest: Jason Axelson.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to the Elixir Wizards podcast! In this
    episode, we will be continuing our conversation on the theme of adopting elixir,
    and our great guest for today is Jason Axelson! Jason is a back-end developer
    for a mixed reality studio called Animal Repair Shop and has also made some significant
    contributions to the Elixir Language Server project. We kick off our conversation
    with Jason hearing about his programming journey and then dive into the event
    chat service app he helped build using Elixir while he was working at Hobnob.
    From there, we talk about some of his aha moments while learning Elixir and some
    of his favorite features about the language which he is putting to use building
    out the back end for Animal Repair Shop. Next, we turn our attention to Elixir
    Language Server and Jason weighs in on the IDE type features it offers, why he
    got started as a collaborator on the project, and some of their challenges in
    the field of shared governance. Wrapping up for today, Jason makes a few suggestions
    for how devs who love Elixir can convince their teams to adopt it as a more mainstream
    option. Tune in for a great chat on the topic of adopting Elixir!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>An introduction to Jason Axelson and
    the story of how he got into programming.</li>\n<li>Some of the books our hosts
    and guests read as kids and how they relate to programming.</li>\n<li>How Jason
    got into Elixir while working on a chat service for events app at Hobnob.</li>\n<li>Jason’s
    current project using Elixir to build the back end for Animal Repair Shop.</li>\n<li>What
    caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning
    it.</li>\n<li>The TLDR version of the project that birthed ‘Road to 2 Million
    WebSocket Connections’.</li>\n<li>What Jason loves about Elixir — pattern matching,
    immutability, explicitness.</li>\n<li>Why Jason and his team at Animal Repair
    Shop are building their back end in Elixir.</li>\n<li>The features provided by
    the Elixir Language Server for giving IDEs Elixir type support.</li>\n<li>Jason’s
    involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture,
    etc.</li>\n<li>Some of the most challenging aspects of working on ElixirLS for
    Jason.</li>\n<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing it
    virtually, and more.</li>\n<li>New features in the pipeline for ElixirLS; formatting
    speed improvements and more.</li>\n<li>The role that good tooling plays in being
    able to learn a language more easily.</li>\n<li>What needs to happen for Elixir
    to become a more mainstream back end option.</li>\n<li>Advice from Jason regarding
    ways to convince your firm to adopt Elixir.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nJason Axelson on LinkedIn — <a
    href=\"https://www.linkedin.com/in/jasonaxelson\" rel=\"nofollow\">https://www.linkedin.com/in/jasonaxelson</a><br>\nJason
    Axelson on GitHub — <a href=\"https://github.com/axelson\" rel=\"nofollow\">https://github.com/axelson</a><br>\nJason
    Axelson on Twitter — <a href=\"https://twitter.com/bostonvaulter?lang=en\" rel=\"nofollow\">https://twitter.com/bostonvaulter?lang=en</a><br>\nPriv_check
    by Jason Axelson — <a href=\"https://github.com/axelson/priv_check\" rel=\"nofollow\">https://github.com/axelson/priv_check</a><br>\nJason
    Axelson ElixirConf ElixirLS Talk — <a href=\"https://2020.elixirconf.com/speakers/126/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/126/talk</a><br>\nA Definitive
    Guide to JavaScript  — <a href=\"https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>\nHobnob
    — <a href=\"https://hobnob.app/\" rel=\"nofollow\">https://hobnob.app/</a><br>\nElixir
    for Programmers by Dave Thomas — <a href=\"https://codestool.coding-gnome.com/courses/elixir-for-programmers\"
    rel=\"nofollow\">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>\nAnimal
    Repair Shop — <a href=\"https://www.animalrepairshop.com/about/\" rel=\"nofollow\">https://www.animalrepairshop.com/about/</a><br>\n‘Road
    to 2 Million WebSocket Connections’ — <a href=\"https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections\"
    rel=\"nofollow\">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>\nElixir
    Getting Started Guide — <a href=\"https://elixir-lang.org/getting-started/introduction.html\"
    rel=\"nofollow\">https://elixir-lang.org/getting-started/introduction.html</a><br>\nGitHub/ElixirLP
    — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAdopting
    Elixir — <a href=\"https://pragprog.com/titles/tvmelixir/adopting-elixir/\" rel=\"nofollow\">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>\nElixir
    Slack — <a href=\"https://elixir-slackin.herokuapp.com/\" rel=\"nofollow\">https://elixir-slackin.herokuapp.com/</a><br>\nelixir-lsp/elixir-ls:
    Issue #274 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/274\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>\nelixir-lsp/elixir-ls:
    Issue #381 — <a href=\"https://github.com/elixir-lsp/elixir-ls/issues/381\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special
    Guest: Jason Axelson.</p>\n      "
- title: Steve Domin on Innovating Travel APIs
  slug: s5e6-domin
  link: https://smartlogic.io/podcast/elixir-wizards/s5e6-domin
  guid: 6d2c98f6-1ba5-4003-8e4a-d98265dccd91
  pubDate: Fri, 08 Jan 2021 06:00:00 -0500
  pubDateFriendly: January  8, 2021
  description: "Anyone who has written software for the travel industry can tell you
    that it is in desperate need of innovation — shockingly many of their cobwebbed
    systems were built in the 70s. Today we speak with Duffel CEO Steve Domin, who
    is building tech that can finally align travel with the expectations of modern
    consumers. We open by exploring Steve’s journey into coding before diving into
    how Duffel is innovating travel. After touching on how the pandemic has impacted
    Duffel’s roll-out, Steve shares horror stories about the outdated tech and API
    systems that airlines use. We discuss Duffel’s service offerings and why Elixir
    is uniquely suited to solve the problems that Steve’s company is addressing. Steve
    then talks about the types of engineers that Duffel hires, his client base, and
    where his company is heading. Near the end of the episode, we ask Steve for his
    advice on selling your company on Elixir and we chat about the status of the London
    Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make
    travel an effortless experience.  \nKey Points From This Episode:\nIntroducing
    Duffel CEO Steve Domin. \nSteve shares details about his coding journey and career
    highlights. \nInsights into the old school ecosystem of Flash, Flex, and ActionScript.\nExploring
    how Duffel is innovating the travel industry. \nWhy Duffel accelerated their roll-out
    due to the pandemic. \nSteve unpacks the outdated tech and API systems that airlines
    use. \nWhy Duffel decided to use Elixir to tackle their problems.\nThe benefits
    of using Elixir when dealing with airline data. \nSteve gives listeners an overview
    of Duffel’s pipeline. \nInsights into the types of engineers that Duffel hires.
    \nWho Duffel’s clients are and how they’re onboarded.\nSteve reflects on some
    airline API horror stories.\nHear about Duffel’s roadmap — the future is bright.\nWhat
    Elixir has uniquely enabled Duffel to do.\nSteve’s advice on selling Elixir to
    stakeholders in your company.\nThe status of the London Elixir Meetup.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/\nSteve Domin
    — https://stevedomin.com/about\nSteve Domin on LinkedIn — https://www.linkedin.com/in/stevedomin/\nSteve
    Domin on Twitter — https://twitter.com/stevedomin\nDuffel — https://duffel.com/\nDuffel
    Careers — https://duffel.com/careers\nJosé Valim — https://twitter.com/josevalim\nFlex
    — https://www.adobe.com/products/flex.html\nPassenger Service System — https://en.wikipedia.org/wiki/Passengerservicesystem\nGlobal
    Distribution System — https://en.wikipedia.org/wiki/Globaldistributionsystem\nSabre
    — https://www.sabre.com/\nAmadeus — https://amadeus.com/en\n‘Why does NDC matter
    to my travel business?’ — https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\nIATA
    — https://www.iata.org/\nNext.js — https://nextjs.org/\nGoCardless — https://gocardless.com/\nTwilio
    — https://www.twilio.com/\nStripe — https://stripe.com/\nThomas Bates — https://www.linkedin.com/in/thomas-bates-3908a74b/\nElixir
    London Meetup — https://www.meetup.com/Elixir-London/\nBaris Balic — https://twitter.com/barisbalic
    Special Guest: Steve Domin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+taR6HVSP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6d2c98f6-1ba5-4003-8e4a-d98265dccd91.mp3
    length: '27767287'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: The travel industry is in desperate need of innovation from systems
      that were built in the 70s. Today Steve Domin talks about how Duffel is building
      tech that can finally align travel with modern consumers.
    duration: '38:33'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6d2c98f6-1ba5-4003-8e4a-d98265dccd91/cover.jpg?v=1
    summary: "\n        <p>Anyone who has written software for the travel industry
      can tell you that it is in desperate need of innovation — shockingly many of
      their cobwebbed systems were built in the 70s. Today we speak with Duffel CEO
      Steve Domin, who is building tech that can finally align travel with the expectations
      of modern consumers. We open by exploring Steve’s journey into coding before
      diving into how Duffel is innovating travel. After touching on how the pandemic
      has impacted Duffel’s roll-out, Steve shares horror stories about the outdated
      tech and API systems that airlines use. We discuss Duffel’s service offerings
      and why Elixir is uniquely suited to solve the problems that Steve’s company
      is addressing. Steve then talks about the types of engineers that Duffel hires,
      his client base, and where his company is heading. Near the end of the episode,
      we ask Steve for his advice on selling your company on Elixir and we chat about
      the status of the London Elixir Meetup. Tune in for more insights on how Steve
      is using Elixir to make travel an effortless experience.  </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing Duffel CEO Steve Domin. </li>\n<li>Steve
      shares details about his coding journey and career highlights. </li>\n<li>Insights
      into the old school ecosystem of Flash, Flex, and ActionScript.</li>\n<li>Exploring
      how Duffel is innovating the travel industry. </li>\n<li>Why Duffel accelerated
      their roll-out due to the pandemic. </li>\n<li>Steve unpacks the outdated tech
      and API systems that airlines use. </li>\n<li>Why Duffel decided to use Elixir
      to tackle their problems.</li>\n<li>The benefits of using Elixir when dealing
      with airline data. </li>\n<li>Steve gives listeners an overview of Duffel’s
      pipeline. </li>\n<li>Insights into the types of engineers that Duffel hires.
      </li>\n<li>Who Duffel’s clients are and how they’re onboarded.</li>\n<li>Steve
      reflects on some airline API horror stories.</li>\n<li>Hear about Duffel’s roadmap
      — the future is bright.</li>\n<li>What Elixir has uniquely enabled Duffel to
      do.</li>\n<li>Steve’s advice on selling Elixir to stakeholders in your company.</li>\n<li>The
      status of the London Elixir Meetup.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
      Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nSteve
      Domin — <a href=\"https://stevedomin.com/about\" rel=\"nofollow\">https://stevedomin.com/about</a><br>\nSteve
      Domin on LinkedIn — <a href=\"https://www.linkedin.com/in/stevedomin/\" rel=\"nofollow\">https://www.linkedin.com/in/stevedomin/</a><br>\nSteve
      Domin on Twitter — <a href=\"https://twitter.com/stevedomin\" rel=\"nofollow\">https://twitter.com/stevedomin</a><br>\nDuffel
      — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nDuffel
      Careers — <a href=\"https://duffel.com/careers\" rel=\"nofollow\">https://duffel.com/careers</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nFlex
      — <a href=\"https://www.adobe.com/products/flex.html\" rel=\"nofollow\">https://www.adobe.com/products/flex.html</a><br>\nPassenger
      Service System — <a href=\"https://en.wikipedia.org/wiki/Passenger_service_system\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>\nGlobal
      Distribution System — <a href=\"https://en.wikipedia.org/wiki/Global_distribution_system\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>\nSabre
      — <a href=\"https://www.sabre.com/\" rel=\"nofollow\">https://www.sabre.com/</a><br>\nAmadeus
      — <a href=\"https://amadeus.com/en\" rel=\"nofollow\">https://amadeus.com/en</a><br>\n‘Why
      does NDC matter to my travel business?’ — <a href=\"https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\"
      rel=\"nofollow\">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>\nIATA
      — <a href=\"https://www.iata.org/\" rel=\"nofollow\">https://www.iata.org/</a><br>\nNext.js
      — <a href=\"https://nextjs.org/\" rel=\"nofollow\">https://nextjs.org/</a><br>\nGoCardless
      — <a href=\"https://gocardless.com/\" rel=\"nofollow\">https://gocardless.com/</a><br>\nTwilio
      — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nStripe
      — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nThomas
      Bates — <a href=\"https://www.linkedin.com/in/thomas-bates-3908a74b/\" rel=\"nofollow\">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>\nElixir
      London Meetup — <a href=\"https://www.meetup.com/Elixir-London/\" rel=\"nofollow\">https://www.meetup.com/Elixir-London/</a><br>\nBaris
      Balic — <a href=\"https://twitter.com/barisbalic\" rel=\"nofollow\">https://twitter.com/barisbalic</a></p><p>Special
      Guest: Steve Domin.</p>\n      "
  contentEncoded: "\n        <p>Anyone who has written software for the travel industry
    can tell you that it is in desperate need of innovation — shockingly many of their
    cobwebbed systems were built in the 70s. Today we speak with Duffel CEO Steve
    Domin, who is building tech that can finally align travel with the expectations
    of modern consumers. We open by exploring Steve’s journey into coding before diving
    into how Duffel is innovating travel. After touching on how the pandemic has impacted
    Duffel’s roll-out, Steve shares horror stories about the outdated tech and API
    systems that airlines use. We discuss Duffel’s service offerings and why Elixir
    is uniquely suited to solve the problems that Steve’s company is addressing. Steve
    then talks about the types of engineers that Duffel hires, his client base, and
    where his company is heading. Near the end of the episode, we ask Steve for his
    advice on selling your company on Elixir and we chat about the status of the London
    Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make
    travel an effortless experience.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Duffel CEO Steve Domin. </li>\n<li>Steve shares details about his coding journey
    and career highlights. </li>\n<li>Insights into the old school ecosystem of Flash,
    Flex, and ActionScript.</li>\n<li>Exploring how Duffel is innovating the travel
    industry. </li>\n<li>Why Duffel accelerated their roll-out due to the pandemic.
    </li>\n<li>Steve unpacks the outdated tech and API systems that airlines use.
    </li>\n<li>Why Duffel decided to use Elixir to tackle their problems.</li>\n<li>The
    benefits of using Elixir when dealing with airline data. </li>\n<li>Steve gives
    listeners an overview of Duffel’s pipeline. </li>\n<li>Insights into the types
    of engineers that Duffel hires. </li>\n<li>Who Duffel’s clients are and how they’re
    onboarded.</li>\n<li>Steve reflects on some airline API horror stories.</li>\n<li>Hear
    about Duffel’s roadmap — the future is bright.</li>\n<li>What Elixir has uniquely
    enabled Duffel to do.</li>\n<li>Steve’s advice on selling Elixir to stakeholders
    in your company.</li>\n<li>The status of the London Elixir Meetup.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nSteve Domin — <a href=\"https://stevedomin.com/about\"
    rel=\"nofollow\">https://stevedomin.com/about</a><br>\nSteve Domin on LinkedIn
    — <a href=\"https://www.linkedin.com/in/stevedomin/\" rel=\"nofollow\">https://www.linkedin.com/in/stevedomin/</a><br>\nSteve
    Domin on Twitter — <a href=\"https://twitter.com/stevedomin\" rel=\"nofollow\">https://twitter.com/stevedomin</a><br>\nDuffel
    — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nDuffel
    Careers — <a href=\"https://duffel.com/careers\" rel=\"nofollow\">https://duffel.com/careers</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nFlex
    — <a href=\"https://www.adobe.com/products/flex.html\" rel=\"nofollow\">https://www.adobe.com/products/flex.html</a><br>\nPassenger
    Service System — <a href=\"https://en.wikipedia.org/wiki/Passenger_service_system\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>\nGlobal
    Distribution System — <a href=\"https://en.wikipedia.org/wiki/Global_distribution_system\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>\nSabre
    — <a href=\"https://www.sabre.com/\" rel=\"nofollow\">https://www.sabre.com/</a><br>\nAmadeus
    — <a href=\"https://amadeus.com/en\" rel=\"nofollow\">https://amadeus.com/en</a><br>\n‘Why
    does NDC matter to my travel business?’ — <a href=\"https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business\"
    rel=\"nofollow\">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>\nIATA
    — <a href=\"https://www.iata.org/\" rel=\"nofollow\">https://www.iata.org/</a><br>\nNext.js
    — <a href=\"https://nextjs.org/\" rel=\"nofollow\">https://nextjs.org/</a><br>\nGoCardless
    — <a href=\"https://gocardless.com/\" rel=\"nofollow\">https://gocardless.com/</a><br>\nTwilio
    — <a href=\"https://www.twilio.com/\" rel=\"nofollow\">https://www.twilio.com/</a><br>\nStripe
    — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nThomas
    Bates — <a href=\"https://www.linkedin.com/in/thomas-bates-3908a74b/\" rel=\"nofollow\">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>\nElixir
    London Meetup — <a href=\"https://www.meetup.com/Elixir-London/\" rel=\"nofollow\">https://www.meetup.com/Elixir-London/</a><br>\nBaris
    Balic — <a href=\"https://twitter.com/barisbalic\" rel=\"nofollow\">https://twitter.com/barisbalic</a></p><p>Special
    Guest: Steve Domin.</p>\n      "
- title: Shawn Vo on Elixir as a Competitive Advantage
  slug: s5e5-vo
  link: https://smartlogic.io/podcast/elixir-wizards/s5e5-vo
  guid: a15c1f14-3ae4-4a02-a642-a03ab3e11660
  pubDate: Tue, 29 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 29, 2020
  description: "To beat out their competitors, startups need to code quickly, simply,
    and in a language that attracts top engineers. Enter Elixir. Today we speak with
    Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and
    how it has given his company a competitive advantage. We open our conversation
    by exploring how Shawn got into coding while automating his work as an investment
    banker. After touching on why he sees programming as a superpower for adding value,
    he shares his growth hacks for learning a language — these range from reading
    old books to attending coding meetups. We then dive into Axle Payments’ business
    model, with Shawn highlighting the business opportunity of creating tech for industries
    that “people don’t think about.” A key theme in this episode, Shawn talks about
    how building in Elixir has helped Axle Payments hire the best engineers. We also
    discuss how Elixir allows them to quickly and efficiently write code that doesn’t
    break. Near the end of the episode, we explore Shawn’s browser extension projects
    and why he has a readme file to help guide people who want to work with him. Be
    sure to tune in to hear more insight from Shawn on the benefits of using Elixir
    in the startup space. \nKey Points From This Episode:\nIntroducing Axle Payments
    CTO Shawn Vo. \nFrom investment banking to coding, hear how Shawn got into our
    industry. \nWhy coding and creating content are top ways of creating value. \nReading
    books and getting into the fundamentals; tips on how Shawn learns a language.
    \nShawn shares details about his professional career.\nHow Shawn grew his skills
    by attending coding meetups.\nHear about Axle Payments’ model providing a factoring
    service.  \nHow Shawn discovered and fell in love with Elixir. \nWhy Elixir has
    given Axle Payments their competitive advantage. \nShawn reflects on his first
    Elixir project. \nThe benefits of using event sourcing to build your app.\nWhy
    Shawn created a readme to guide people who want to work with him.\nShawn summarizes
    why Elixir is the perfect language for his company. \nLinks Mentioned in Today’s
    Episode:\nShawn Vo on LinkedIn — https://www.linkedin.com/in/shawnvo/\nShawn Vo
    on Twitter — https://twitter.com/shawnvo\nShawn Vo on GitHub — https://github.com/voshawn\nShawn
    Vo Email — shawn@axlepayments.com\nAxle Payments — https://www.axlepayments.com/\nThe
    Technical Cofounder Newsletter — https://technicalcofounder.substack.com/\nMeryl
    Dakin — https://twitter.com/meryldakin\nWALL-E — https://www.imdb.com/title/tt0910970/\nBarclays
    Investment Bank — https://www.investmentbank.barclays.com/\nThe Climate Corporation
    — https://www.climate.com/\nThe Monsanto Company — https://www.cropscience.bayer.com/\nFederal
    Deposit Insurance Corporation — https://www.fdic.gov/\nDeep Learning NYC — https://www.meetup.com/Deep-Learning-NYC/\nBaltimore
    AI Meetup — https://www.meetup.com/Baltimore-AI/\nFast.ai — https://www.fast.ai/\nMegabus
    — https://www.megabus.com/\nGreyhound — https://www.greyhound.com/\nTechstars
    — https://www.techstars.com/\nPeter Thiel — https://www.forbes.com/profile/peter-thiel/\nWeWork
    — https://www.wework.com/\nPaul Graham — http://www.paulgraham.com/\nY Combinator
    — https://www.ycombinator.com/\n‘The Python Paradox’ — http://www.paulgraham.com/pypar.html\nHeroku
    — https://www.heroku.com/\nSessionizer — https://sessionize-me.herokuapp.com/\nHamilton
    — https://hamiltonmusical.com/new-york/home/\nSlack — https://slack.com/\nPhoenix
    — https://hexdocs.pm/phoenix/overview.html\nCommanded — https://hexdocs.pm/commanded/Commanded.html\nThe
    Social Dilemma — https://www.imdb.com/title/tt11464826/ Special Guest: Shawn Vo.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+SisMEP3c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a15c1f14-3ae4-4a02-a642-a03ab3e11660.mp3
    length: '37436800'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about
      his journey with Elixir and how it has given his company a competitive advantage.
    duration: '38:57'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a15c1f14-3ae4-4a02-a642-a03ab3e11660/cover.jpg?v=2
    summary: "\n        <p>To beat out their competitors, startups need to code quickly,
      simply, and in a language that attracts top engineers. Enter Elixir. Today we
      speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with
      Elixir and how it has given his company a competitive advantage. We open our
      conversation by exploring how Shawn got into coding while automating his work
      as an investment banker. After touching on why he sees programming as a superpower
      for adding value, he shares his growth hacks for learning a language — these
      range from reading old books to attending coding meetups. We then dive into
      Axle Payments’ business model, with Shawn highlighting the business opportunity
      of creating tech for industries that “people don’t think about.” A key theme
      in this episode, Shawn talks about how building in Elixir has helped Axle Payments
      hire the best engineers. We also discuss how Elixir allows them to quickly and
      efficiently write code that doesn’t break. Near the end of the episode, we explore
      Shawn’s browser extension projects and why he has a readme file to help guide
      people who want to work with him. Be sure to tune in to hear more insight from
      Shawn on the benefits of using Elixir in the startup space. </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing Axle Payments CTO Shawn Vo.
      </li>\n<li>From investment banking to coding, hear how Shawn got into our industry.
      </li>\n<li>Why coding and creating content are top ways of creating value. </li>\n<li>Reading
      books and getting into the fundamentals; tips on how Shawn learns a language.
      </li>\n<li>Shawn shares details about his professional career.</li>\n<li>How
      Shawn grew his skills by attending coding meetups.</li>\n<li>Hear about Axle
      Payments’ model providing a factoring service.<br></li>\n<li>How Shawn discovered
      and fell in love with Elixir. </li>\n<li>Why Elixir has given Axle Payments
      their competitive advantage. </li>\n<li>Shawn reflects on his first Elixir project.
      </li>\n<li>The benefits of using event sourcing to build your app.</li>\n<li>Why
      Shawn created a readme to guide people who want to work with him.</li>\n<li>Shawn
      summarizes why Elixir is the perfect language for his company. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Shawn Vo on LinkedIn — <a href=\"https://www.linkedin.com/in/shawnvo/\"
      rel=\"nofollow\">https://www.linkedin.com/in/shawnvo/</a><br>\nShawn Vo on Twitter
      — <a href=\"https://twitter.com/shawnvo\" rel=\"nofollow\">https://twitter.com/shawnvo</a><br>\nShawn
      Vo on GitHub — <a href=\"https://github.com/voshawn\" rel=\"nofollow\">https://github.com/voshawn</a><br>\nShawn
      Vo Email — <a href=\"mailto:shawn@axlepayments.com\" rel=\"nofollow\">shawn@axlepayments.com</a><br>\nAxle
      Payments — <a href=\"https://www.axlepayments.com/\" rel=\"nofollow\">https://www.axlepayments.com/</a><br>\nThe
      Technical Cofounder Newsletter — <a href=\"https://technicalcofounder.substack.com/\"
      rel=\"nofollow\">https://technicalcofounder.substack.com/</a><br>\nMeryl Dakin
      — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nWALL-E
      — <a href=\"https://www.imdb.com/title/tt0910970/\" rel=\"nofollow\">https://www.imdb.com/title/tt0910970/</a><br>\nBarclays
      Investment Bank — <a href=\"https://www.investmentbank.barclays.com/\" rel=\"nofollow\">https://www.investmentbank.barclays.com/</a><br>\nThe
      Climate Corporation — <a href=\"https://www.climate.com/\" rel=\"nofollow\">https://www.climate.com/</a><br>\nThe
      Monsanto Company — <a href=\"https://www.cropscience.bayer.com/\" rel=\"nofollow\">https://www.cropscience.bayer.com/</a><br>\nFederal
      Deposit Insurance Corporation — <a href=\"https://www.fdic.gov/\" rel=\"nofollow\">https://www.fdic.gov/</a><br>\nDeep
      Learning NYC — <a href=\"https://www.meetup.com/Deep-Learning-NYC/\" rel=\"nofollow\">https://www.meetup.com/Deep-Learning-NYC/</a><br>\nBaltimore
      AI Meetup — <a href=\"https://www.meetup.com/Baltimore-AI/\" rel=\"nofollow\">https://www.meetup.com/Baltimore-AI/</a><br>\nFast.ai
      — <a href=\"https://www.fast.ai/\" rel=\"nofollow\">https://www.fast.ai/</a><br>\nMegabus
      — <a href=\"https://www.megabus.com/\" rel=\"nofollow\">https://www.megabus.com/</a><br>\nGreyhound
      — <a href=\"https://www.greyhound.com/\" rel=\"nofollow\">https://www.greyhound.com/</a><br>\nTechstars
      — <a href=\"https://www.techstars.com/\" rel=\"nofollow\">https://www.techstars.com/</a><br>\nPeter
      Thiel — <a href=\"https://www.forbes.com/profile/peter-thiel/\" rel=\"nofollow\">https://www.forbes.com/profile/peter-thiel/</a><br>\nWeWork
      — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nY
      Combinator — <a href=\"https://www.ycombinator.com/\" rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n‘The
      Python Paradox’ — <a href=\"http://www.paulgraham.com/pypar.html\" rel=\"nofollow\">http://www.paulgraham.com/pypar.html</a><br>\nHeroku
      — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nSessionizer
      — <a href=\"https://sessionize-me.herokuapp.com/\" rel=\"nofollow\">https://sessionize-me.herokuapp.com/</a><br>\nHamilton
      — <a href=\"https://hamiltonmusical.com/new-york/home/\" rel=\"nofollow\">https://hamiltonmusical.com/new-york/home/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPhoenix
      — <a href=\"https://hexdocs.pm/phoenix/overview.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/overview.html</a><br>\nCommanded
      — <a href=\"https://hexdocs.pm/commanded/Commanded.html\" rel=\"nofollow\">https://hexdocs.pm/commanded/Commanded.html</a><br>\nThe
      Social Dilemma — <a href=\"https://www.imdb.com/title/tt11464826/\" rel=\"nofollow\">https://www.imdb.com/title/tt11464826/</a></p><p>Special
      Guest: Shawn Vo.</p>\n      "
  contentEncoded: "\n        <p>To beat out their competitors, startups need to code
    quickly, simply, and in a language that attracts top engineers. Enter Elixir.
    Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey
    with Elixir and how it has given his company a competitive advantage. We open
    our conversation by exploring how Shawn got into coding while automating his work
    as an investment banker. After touching on why he sees programming as a superpower
    for adding value, he shares his growth hacks for learning a language — these range
    from reading old books to attending coding meetups. We then dive into Axle Payments’
    business model, with Shawn highlighting the business opportunity of creating tech
    for industries that “people don’t think about.” A key theme in this episode, Shawn
    talks about how building in Elixir has helped Axle Payments hire the best engineers.
    We also discuss how Elixir allows them to quickly and efficiently write code that
    doesn’t break. Near the end of the episode, we explore Shawn’s browser extension
    projects and why he has a readme file to help guide people who want to work with
    him. Be sure to tune in to hear more insight from Shawn on the benefits of using
    Elixir in the startup space. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Axle Payments CTO Shawn Vo. </li>\n<li>From investment banking to coding, hear
    how Shawn got into our industry. </li>\n<li>Why coding and creating content are
    top ways of creating value. </li>\n<li>Reading books and getting into the fundamentals;
    tips on how Shawn learns a language. </li>\n<li>Shawn shares details about his
    professional career.</li>\n<li>How Shawn grew his skills by attending coding meetups.</li>\n<li>Hear
    about Axle Payments’ model providing a factoring service.<br></li>\n<li>How Shawn
    discovered and fell in love with Elixir. </li>\n<li>Why Elixir has given Axle
    Payments their competitive advantage. </li>\n<li>Shawn reflects on his first Elixir
    project. </li>\n<li>The benefits of using event sourcing to build your app.</li>\n<li>Why
    Shawn created a readme to guide people who want to work with him.</li>\n<li>Shawn
    summarizes why Elixir is the perfect language for his company. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Shawn Vo on LinkedIn — <a href=\"https://www.linkedin.com/in/shawnvo/\"
    rel=\"nofollow\">https://www.linkedin.com/in/shawnvo/</a><br>\nShawn Vo on Twitter
    — <a href=\"https://twitter.com/shawnvo\" rel=\"nofollow\">https://twitter.com/shawnvo</a><br>\nShawn
    Vo on GitHub — <a href=\"https://github.com/voshawn\" rel=\"nofollow\">https://github.com/voshawn</a><br>\nShawn
    Vo Email — <a href=\"mailto:shawn@axlepayments.com\" rel=\"nofollow\">shawn@axlepayments.com</a><br>\nAxle
    Payments — <a href=\"https://www.axlepayments.com/\" rel=\"nofollow\">https://www.axlepayments.com/</a><br>\nThe
    Technical Cofounder Newsletter — <a href=\"https://technicalcofounder.substack.com/\"
    rel=\"nofollow\">https://technicalcofounder.substack.com/</a><br>\nMeryl Dakin
    — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nWALL-E
    — <a href=\"https://www.imdb.com/title/tt0910970/\" rel=\"nofollow\">https://www.imdb.com/title/tt0910970/</a><br>\nBarclays
    Investment Bank — <a href=\"https://www.investmentbank.barclays.com/\" rel=\"nofollow\">https://www.investmentbank.barclays.com/</a><br>\nThe
    Climate Corporation — <a href=\"https://www.climate.com/\" rel=\"nofollow\">https://www.climate.com/</a><br>\nThe
    Monsanto Company — <a href=\"https://www.cropscience.bayer.com/\" rel=\"nofollow\">https://www.cropscience.bayer.com/</a><br>\nFederal
    Deposit Insurance Corporation — <a href=\"https://www.fdic.gov/\" rel=\"nofollow\">https://www.fdic.gov/</a><br>\nDeep
    Learning NYC — <a href=\"https://www.meetup.com/Deep-Learning-NYC/\" rel=\"nofollow\">https://www.meetup.com/Deep-Learning-NYC/</a><br>\nBaltimore
    AI Meetup — <a href=\"https://www.meetup.com/Baltimore-AI/\" rel=\"nofollow\">https://www.meetup.com/Baltimore-AI/</a><br>\nFast.ai
    — <a href=\"https://www.fast.ai/\" rel=\"nofollow\">https://www.fast.ai/</a><br>\nMegabus
    — <a href=\"https://www.megabus.com/\" rel=\"nofollow\">https://www.megabus.com/</a><br>\nGreyhound
    — <a href=\"https://www.greyhound.com/\" rel=\"nofollow\">https://www.greyhound.com/</a><br>\nTechstars
    — <a href=\"https://www.techstars.com/\" rel=\"nofollow\">https://www.techstars.com/</a><br>\nPeter
    Thiel — <a href=\"https://www.forbes.com/profile/peter-thiel/\" rel=\"nofollow\">https://www.forbes.com/profile/peter-thiel/</a><br>\nWeWork
    — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nY
    Combinator — <a href=\"https://www.ycombinator.com/\" rel=\"nofollow\">https://www.ycombinator.com/</a><br>\n‘The
    Python Paradox’ — <a href=\"http://www.paulgraham.com/pypar.html\" rel=\"nofollow\">http://www.paulgraham.com/pypar.html</a><br>\nHeroku
    — <a href=\"https://www.heroku.com/\" rel=\"nofollow\">https://www.heroku.com/</a><br>\nSessionizer
    — <a href=\"https://sessionize-me.herokuapp.com/\" rel=\"nofollow\">https://sessionize-me.herokuapp.com/</a><br>\nHamilton
    — <a href=\"https://hamiltonmusical.com/new-york/home/\" rel=\"nofollow\">https://hamiltonmusical.com/new-york/home/</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nPhoenix
    — <a href=\"https://hexdocs.pm/phoenix/overview.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix/overview.html</a><br>\nCommanded
    — <a href=\"https://hexdocs.pm/commanded/Commanded.html\" rel=\"nofollow\">https://hexdocs.pm/commanded/Commanded.html</a><br>\nThe
    Social Dilemma — <a href=\"https://www.imdb.com/title/tt11464826/\" rel=\"nofollow\">https://www.imdb.com/title/tt11464826/</a></p><p>Special
    Guest: Shawn Vo.</p>\n      "
- title: Viktória Fördős on Erlang
  slug: s5e4-fordos
  link: https://smartlogic.io/podcast/elixir-wizards/s5e4-fordos
  guid: 6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b
  pubDate: Tue, 22 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 22, 2020
  description: "Today we sit down with Erlanger Viktória Fördős, who talks with us
    about Erlang and how it is used at Cisco. We open the show by finding out about
    Viki’s background in coding and her unorthodox entry into the field. After hearing
    about her experiences in her school choir and her transition into the informatics
    faculty, Viki talks to us about her first experiences in coding and the thrills
    she found in it. She then expands on the topic, revealing how she approached people
    to build their websites using her newfound skills in HTML and PHP. A flash-forward
    later, and Viki shares details about her role as an NSO Core Engineer for Cisco.
    After hearing how NSO serves as a network operating system, device automation
    platform, and orchestration engine, Viki explains why NSO is so special. She touches
    on fast map-based service and some of the ways she and her team implement network-wide
    transactions using — you guessed it — Erlang. Viki then explains Erlang, how you
    should approach it if you’re a newbie, and what to expect from its biggest challenges.
    She elaborates on tail-recursive functions and high-level vulnerabilities concerned
    with SSL crypto libraries, system integrity, and atom tables. Toward the end of
    the show, we ask Viki to tell us about her Code BEAM presentation and about her
    thoughts on why academia and industry should collaborate on a more regular basis.
    Join us today and be treated to an enriching conversation about Erlang, as well
    as our secret mini-feature segment!\nKey Points From This Episode:\nIntroducing
    today’s guest, Viki Fördős from Cisco.\nA snapshot of Viki’s unorthodox background
    in coding.\nViki shares details about early experiences learning Basic.\nHear
    about Viki’s first programming job out of college.\nViki’s position as a core
    engineer for the NSO team at Cisco.\nFind out what the NSO team at Cisco does.\nInsights
    into the patented algorithm, “fast map.”\nHow Viki started to use Erlang on a
    day-to-day basis.\nWays you can start thinking in Erlang from an Elixir background.\nThe
    kinds of issues Viki runs into when spawning too many processes.\nWhat Erlang
    has to offer that other languages cannot.\nViki’s biggest challenges when she
    first started learning Erlang.\nThe elevator pitch Viki uses when she encourages
    friends and colleagues to use Erlang.\nDistribution protocols and what they mean
    to Erlang newbies.\nHear about the high-level vulnerabilities you ought to pay
    attention to when coding in Erlang.\nIntroducing Christian Koch, today’s mini-feature
    segment guest.\nHow Chris first got into Elixir. \nHow Elixir is being used by
    platform engineers at Cars.com.\nWhy Elixir was chosen as the end-game language
    to be used at Cars.com\nThe process behind onboarding coders onto Chris’s Elixir
    team.\nViki’s best advice to those wanting to give a Code BEAM talk.\nHear about
    refactoring and how it works.\nWhat Viki means by, “research being consumed by
    industry.”\nLinks Mentioned in Today’s Episode:\nViktória Fördős - https://github.com/viktoriafordos
    \nCisco — https://www.cisco.com/ \nEW20 — https://github.com/viktoriafordos/ew20
    Prototype implementation of the security analysis introduced in V. Fördős: Secure
    Design and Verification of Erlang Systems paper\nChristian Koch — https://www.linkedin.com/in/ckochx/
    \nCars.com — https://www.cars.com/\nBASIC —  https://en.wikipedia.org/wiki/BASIC\nCisco
    NSO — https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\nThink
    in Erlang! - Viktória Fördős — https://www.youtube.com/watch?v=bYkOsQU2ywM\nErlang
    general server — https://erlang.org/doc/man/genserver.html\nErland Reference Manual
    — https://erlang.org/doc/referencemanual/distributed.html\n4 Using TLS — https://erlang.org/doc/apps/ssl/ssldistribution.html\nErland
    System Limits — http://erlang.org/doc/efficiencyguide/advanced.html#system-limits\nHexdocs
    — https://hexdocs.pm/elixir/String.html#toexistingatom/1\nRefactorErl — https://plc.inf.elte.hu/erlang/\nPipedream
    on GitHub — https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md
    Special Guest: Viktória Fördős.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+d0bVLmUa
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b.mp3
    length: '46411863'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today we sit down with Erlanger Viktória Fördős, who talks with us about
      Erlang and how it is used at Cisco.
    duration: '47:20'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b/cover.jpg?v=2
    summary: "\n        <p>Today we sit down with Erlanger Viktória Fördős, who talks
      with us about Erlang and how it is used at Cisco. We open the show by finding
      out about Viki’s background in coding and her unorthodox entry into the field.
      After hearing about her experiences in her school choir and her transition into
      the informatics faculty, Viki talks to us about her first experiences in coding
      and the thrills she found in it. She then expands on the topic, revealing how
      she approached people to build their websites using her newfound skills in HTML
      and PHP. A flash-forward later, and Viki shares details about her role as an
      NSO Core Engineer for Cisco. After hearing how NSO serves as a network operating
      system, device automation platform, and orchestration engine, Viki explains
      why NSO is so special. She touches on fast map-based service and some of the
      ways she and her team implement network-wide transactions using — you guessed
      it — Erlang. Viki then explains Erlang, how you should approach it if you’re
      a newbie, and what to expect from its biggest challenges. She elaborates on
      tail-recursive functions and high-level vulnerabilities concerned with SSL crypto
      libraries, system integrity, and atom tables. Toward the end of the show, we
      ask Viki to tell us about her Code BEAM presentation and about her thoughts
      on why academia and industry should collaborate on a more regular basis. Join
      us today and be treated to an enriching conversation about Erlang, as well as
      our secret mini-feature segment!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      today’s guest, Viki Fördős from Cisco.</li>\n<li>A snapshot of Viki’s unorthodox
      background in coding.</li>\n<li>Viki shares details about early experiences
      learning Basic.</li>\n<li>Hear about Viki’s first programming job out of college.</li>\n<li>Viki’s
      position as a core engineer for the NSO team at Cisco.</li>\n<li>Find out what
      the NSO team at Cisco does.</li>\n<li>Insights into the patented algorithm,
      “fast map.”</li>\n<li>How Viki started to use Erlang on a day-to-day basis.</li>\n<li>Ways
      you can start thinking in Erlang from an Elixir background.</li>\n<li>The kinds
      of issues Viki runs into when spawning too many processes.</li>\n<li>What Erlang
      has to offer that other languages cannot.</li>\n<li>Viki’s biggest challenges
      when she first started learning Erlang.</li>\n<li>The elevator pitch Viki uses
      when she encourages friends and colleagues to use Erlang.</li>\n<li>Distribution
      protocols and what they mean to Erlang newbies.</li>\n<li>Hear about the high-level
      vulnerabilities you ought to pay attention to when coding in Erlang.</li>\n<li>Introducing
      Christian Koch, today’s mini-feature segment guest.</li>\n<li>How Chris first
      got into Elixir. </li>\n<li>How Elixir is being used by platform engineers at
      Cars.com.</li>\n<li>Why Elixir was chosen as the end-game language to be used
      at Cars.com</li>\n<li>The process behind onboarding coders onto Chris’s Elixir
      team.</li>\n<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>\n<li>Hear
      about refactoring and how it works.</li>\n<li>What Viki means by, “research
      being consumed by industry.”</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Viktória
      Fördős - <a href=\"https://github.com/viktoriafordos\" rel=\"nofollow\">https://github.com/viktoriafordos</a>
      <br>\nCisco — <a href=\"https://www.cisco.com/\" rel=\"nofollow\">https://www.cisco.com/</a>
      <br>\nEW20 — <a href=\"https://github.com/viktoriafordos/ew20\" rel=\"nofollow\">https://github.com/viktoriafordos/ew20</a>
      Prototype implementation of the security analysis introduced in V. Fördős: Secure
      Design and Verification of Erlang Systems paper<br>\nChristian Koch — <a href=\"https://www.linkedin.com/in/ckochx/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ckochx/</a> <br>\nCars.com — <a
      href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nBASIC
      —  <a href=\"https://en.wikipedia.org/wiki/BASIC\" rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nCisco
      NSO — <a href=\"https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\"
      rel=\"nofollow\">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>\nThink
      in Erlang! - Viktória Fördős — <a href=\"https://www.youtube.com/watch?v=bYkOsQU2ywM\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>\nErlang
      general server — <a href=\"https://erlang.org/doc/man/gen_server.html\" rel=\"nofollow\">https://erlang.org/doc/man/gen_server.html</a><br>\nErland
      Reference Manual — <a href=\"https://erlang.org/doc/reference_manual/distributed.html\"
      rel=\"nofollow\">https://erlang.org/doc/reference_manual/distributed.html</a><br>\n4
      Using TLS — <a href=\"https://erlang.org/doc/apps/ssl/ssl_distribution.html\"
      rel=\"nofollow\">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>\nErland
      System Limits — <a href=\"http://erlang.org/doc/efficiency_guide/advanced.html#system-limits\"
      rel=\"nofollow\">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>\nHexdocs
      — <a href=\"https://hexdocs.pm/elixir/String.html#to_existing_atom/1\" rel=\"nofollow\">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>\nRefactorErl
      — <a href=\"https://plc.inf.elte.hu/erlang/\" rel=\"nofollow\">https://plc.inf.elte.hu/erlang/</a><br>\nPipedream
      on GitHub — <a href=\"https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md\"
      rel=\"nofollow\">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special
      Guest: Viktória Fördős.</p>\n      "
  contentEncoded: "\n        <p>Today we sit down with Erlanger Viktória Fördős, who
    talks with us about Erlang and how it is used at Cisco. We open the show by finding
    out about Viki’s background in coding and her unorthodox entry into the field.
    After hearing about her experiences in her school choir and her transition into
    the informatics faculty, Viki talks to us about her first experiences in coding
    and the thrills she found in it. She then expands on the topic, revealing how
    she approached people to build their websites using her newfound skills in HTML
    and PHP. A flash-forward later, and Viki shares details about her role as an NSO
    Core Engineer for Cisco. After hearing how NSO serves as a network operating system,
    device automation platform, and orchestration engine, Viki explains why NSO is
    so special. She touches on fast map-based service and some of the ways she and
    her team implement network-wide transactions using — you guessed it — Erlang.
    Viki then explains Erlang, how you should approach it if you’re a newbie, and
    what to expect from its biggest challenges. She elaborates on tail-recursive functions
    and high-level vulnerabilities concerned with SSL crypto libraries, system integrity,
    and atom tables. Toward the end of the show, we ask Viki to tell us about her
    Code BEAM presentation and about her thoughts on why academia and industry should
    collaborate on a more regular basis. Join us today and be treated to an enriching
    conversation about Erlang, as well as our secret mini-feature segment!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing today’s guest, Viki Fördős
    from Cisco.</li>\n<li>A snapshot of Viki’s unorthodox background in coding.</li>\n<li>Viki
    shares details about early experiences learning Basic.</li>\n<li>Hear about Viki’s
    first programming job out of college.</li>\n<li>Viki’s position as a core engineer
    for the NSO team at Cisco.</li>\n<li>Find out what the NSO team at Cisco does.</li>\n<li>Insights
    into the patented algorithm, “fast map.”</li>\n<li>How Viki started to use Erlang
    on a day-to-day basis.</li>\n<li>Ways you can start thinking in Erlang from an
    Elixir background.</li>\n<li>The kinds of issues Viki runs into when spawning
    too many processes.</li>\n<li>What Erlang has to offer that other languages cannot.</li>\n<li>Viki’s
    biggest challenges when she first started learning Erlang.</li>\n<li>The elevator
    pitch Viki uses when she encourages friends and colleagues to use Erlang.</li>\n<li>Distribution
    protocols and what they mean to Erlang newbies.</li>\n<li>Hear about the high-level
    vulnerabilities you ought to pay attention to when coding in Erlang.</li>\n<li>Introducing
    Christian Koch, today’s mini-feature segment guest.</li>\n<li>How Chris first
    got into Elixir. </li>\n<li>How Elixir is being used by platform engineers at
    Cars.com.</li>\n<li>Why Elixir was chosen as the end-game language to be used
    at Cars.com</li>\n<li>The process behind onboarding coders onto Chris’s Elixir
    team.</li>\n<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>\n<li>Hear
    about refactoring and how it works.</li>\n<li>What Viki means by, “research being
    consumed by industry.”</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Viktória
    Fördős - <a href=\"https://github.com/viktoriafordos\" rel=\"nofollow\">https://github.com/viktoriafordos</a>
    <br>\nCisco — <a href=\"https://www.cisco.com/\" rel=\"nofollow\">https://www.cisco.com/</a>
    <br>\nEW20 — <a href=\"https://github.com/viktoriafordos/ew20\" rel=\"nofollow\">https://github.com/viktoriafordos/ew20</a>
    Prototype implementation of the security analysis introduced in V. Fördős: Secure
    Design and Verification of Erlang Systems paper<br>\nChristian Koch — <a href=\"https://www.linkedin.com/in/ckochx/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ckochx/</a> <br>\nCars.com — <a href=\"https://www.cars.com/\"
    rel=\"nofollow\">https://www.cars.com/</a><br>\nBASIC —  <a href=\"https://en.wikipedia.org/wiki/BASIC\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/BASIC</a><br>\nCisco NSO — <a href=\"https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\"
    rel=\"nofollow\">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>\nThink
    in Erlang! - Viktória Fördős — <a href=\"https://www.youtube.com/watch?v=bYkOsQU2ywM\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>\nErlang general
    server — <a href=\"https://erlang.org/doc/man/gen_server.html\" rel=\"nofollow\">https://erlang.org/doc/man/gen_server.html</a><br>\nErland
    Reference Manual — <a href=\"https://erlang.org/doc/reference_manual/distributed.html\"
    rel=\"nofollow\">https://erlang.org/doc/reference_manual/distributed.html</a><br>\n4
    Using TLS — <a href=\"https://erlang.org/doc/apps/ssl/ssl_distribution.html\"
    rel=\"nofollow\">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>\nErland
    System Limits — <a href=\"http://erlang.org/doc/efficiency_guide/advanced.html#system-limits\"
    rel=\"nofollow\">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>\nHexdocs
    — <a href=\"https://hexdocs.pm/elixir/String.html#to_existing_atom/1\" rel=\"nofollow\">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>\nRefactorErl
    — <a href=\"https://plc.inf.elte.hu/erlang/\" rel=\"nofollow\">https://plc.inf.elte.hu/erlang/</a><br>\nPipedream
    on GitHub — <a href=\"https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md\"
    rel=\"nofollow\">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special
    Guest: Viktória Fördős.</p>\n      "
- title: Simon Glenn-Gregg on Building an Election Results Prototype in Elixir
  slug: s5e3-glenn-gregg
  link: https://smartlogic.io/podcast/elixir-wizards/s5e3-glenn-gregg
  guid: 4653eb7c-8637-447c-8ead-a6fe53e5c3cc
  pubDate: Thu, 17 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 17, 2020
  description: "Today’s guest is Simon Glenn-Gregg, News Engineer at The Washington
    Post. He joins us to talk about using Elixir to build a prototype for a platform
    the news house recently implemented to visualize the results of the November 2020
    elections in real-time. \nWhile the job title of ‘News Engineer’ makes it seem
    like Simon invents news, this is not the case. He is focused on software related
    to publishing at The Washington Post, and in particular, has been working on building
    their election visualization platform for the past two years. Before the final
    iteration of the platform was built, the software engineering team at The Washington
    Post were given a period to test different technologies as an experiment to find
    the best fit, and Simon decided to try his hand at Elixir and Phoenix. He talks
    about what led him to this choice, and his experiences building out his prototype
    which he demonstrated on a dataset generated by the North Carolina 3rd Congressional
    District house race in September. Simon tells us about how the pitch went, what
    the team at The Washington Post was especially impressed by, and what led to the
    choice to use Node in the end. \nSimon talks about the culture of openness to
    new technologies at The Washington Post as well as some of the limitations to
    their adoption. We also hear about how the final version of the visualization
    platform held up during the elections proper, and Simon’s plans to include Elixir
    in future stacks due to its amazing abilities as far as concurrency and memory.
    Tune in today! \nKey Points From This Episode:\nWhat kinds of projects Simon works
    on at The Washington Post as a ‘news engineer’.\nThe live updating election visualizer
    that Simon was working on at The Washington Post.\nWhat went into building the
    infrastructure for this platform and how Elixir was chosen as a candidate.\n A
    blog post about Elixir’s memory management; abilities Elixir has regarding concurrency.\nThe
    first steps Simon took toward learning Elixir and Phoenix by building simple projects.\nSimon’s
    process of integrating his Elixir app into the current stack and people at The
    Washington Post.\nTesting the app on the 3rd Congressional District house race
    in North Carolina, and pitching to the team.\nWhy it is hard to implement projects
    in new languages at The Washington Post.\nHow the voting process went after the
    pitch and which project won.\nWhat the audience at the pitch loved about Elixir,
    and what the stumbling blocks were.\nThe nature of working at a deadline-driven
    place like The Washington Post when it comes to adopting new technologies.\nSources
    The Washington Post used to get their election data.\nWhat technologies and methods
    the team used to handle the size of data some election moments generated.\nWhich
    parts about the election visualizer that ended up being built using Node would
    have been easier to do in Elixir.\nThe other side of the coin – what made writing
    the app in Python and JavaScript easier.\nWhat future projects Elixir might be
    better suited to at The Washington Post.\nSimon’s background, education, and how
    he learned programming in previous jobs\nWhy Simon stuck programming out and decided
    it was the right path for him.\nThe need for software engineers at The Washington
    Post and why they are recruiting so often.\nA deep dive into the tech stack at
    The Washington Post and how they render their pages and maps.\nHow Simon feels
    having reached the end of a successful project that millions of people engaged
    with.\nFuture projects at The Washington Post and Simon’s hopes to incorporate
    more Elixir.\nA funny story about having to manually update the votes from rural
    New Hampshire into the app.\nLinks Mentioned in Today’s Episode:\nSmartLogic —
    https://smartlogic.io/ \nSimon Glenn-Gregg on LinkedIn — https://www.linkedin.com/in/simongle/\nSimon
    Glenn-Gregg — http://simonglenngregg.com/\nThe Washington Post — https://www.washingtonpost.com/\nJason
    Holt on Twitter — https://twitter.com/offpol\n‘Elixir RAM and the Template of
    Doom’ — https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\nErik
    Reyna on LinkedIn — https://www.linkedin.com/in/erikreyna/\nJeremy Bowers on LinkedIn
    — https://www.linkedin.com/in/jeremyjbowers/\nAssociated Press — https://apnews.com/\nEdison
    — https://www.edisonresearch.com/\nWhole Whale — https://www.wholewhale.com/\nThe
    Century Foundation — https://tcf.org/\nArc Publishing — https://www.arcpublishing.com/\nSundi
    Myint on Twitter — https://twitter.com/sundikhin\nJustus Eapen — https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Simon Glenn-Gregg.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bUzbxrep
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4653eb7c-8637-447c-8ead-a6fe53e5c3cc.mp3
    length: '26984468'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Today’s guest, Simon Glenn-Gregg joins us to talk about using Elixir
      to build a prototype for a platform The Washington Post recently implemented
      to visualize the results of the 2020 elections in real-time.
    duration: '37:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4653eb7c-8637-447c-8ead-a6fe53e5c3cc/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Simon Glenn-Gregg, News Engineer at The
      Washington Post. He joins us to talk about using Elixir to build a prototype
      for a platform the news house recently implemented to visualize the results
      of the November 2020 elections in real-time. </p>\n\n<p>While the job title
      of ‘News Engineer’ makes it seem like Simon invents news, this is not the case.
      He is focused on software related to publishing at The Washington Post, and
      in particular, has been working on building their election visualization platform
      for the past two years. Before the final iteration of the platform was built,
      the software engineering team at The Washington Post were given a period to
      test different technologies as an experiment to find the best fit, and Simon
      decided to try his hand at Elixir and Phoenix. He talks about what led him to
      this choice, and his experiences building out his prototype which he demonstrated
      on a dataset generated by the North Carolina 3rd Congressional District house
      race in September. Simon tells us about how the pitch went, what the team at
      The Washington Post was especially impressed by, and what led to the choice
      to use Node in the end. </p>\n\n<p>Simon talks about the culture of openness
      to new technologies at The Washington Post as well as some of the limitations
      to their adoption. We also hear about how the final version of the visualization
      platform held up during the elections proper, and Simon’s plans to include Elixir
      in future stacks due to its amazing abilities as far as concurrency and memory.
      Tune in today! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
      kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>\n<li>The
      live updating election visualizer that Simon was working on at The Washington
      Post.</li>\n<li>What went into building the infrastructure for this platform
      and how Elixir was chosen as a candidate.</li>\n<li> A blog post about Elixir’s
      memory management; abilities Elixir has regarding concurrency.</li>\n<li>The
      first steps Simon took toward learning Elixir and Phoenix by building simple
      projects.</li>\n<li>Simon’s process of integrating his Elixir app into the current
      stack and people at The Washington Post.</li>\n<li>Testing the app on the 3rd
      Congressional District house race in North Carolina, and pitching to the team.</li>\n<li>Why
      it is hard to implement projects in new languages at The Washington Post.</li>\n<li>How
      the voting process went after the pitch and which project won.</li>\n<li>What
      the audience at the pitch loved about Elixir, and what the stumbling blocks
      were.</li>\n<li>The nature of working at a deadline-driven place like The Washington
      Post when it comes to adopting new technologies.</li>\n<li>Sources The Washington
      Post used to get their election data.</li>\n<li>What technologies and methods
      the team used to handle the size of data some election moments generated.</li>\n<li>Which
      parts about the election visualizer that ended up being built using Node would
      have been easier to do in Elixir.</li>\n<li>The other side of the coin – what
      made writing the app in Python and JavaScript easier.</li>\n<li>What future
      projects Elixir might be better suited to at The Washington Post.</li>\n<li>Simon’s
      background, education, and how he learned programming in previous jobs</li>\n<li>Why
      Simon stuck programming out and decided it was the right path for him.</li>\n<li>The
      need for software engineers at The Washington Post and why they are recruiting
      so often.</li>\n<li>A deep dive into the tech stack at The Washington Post and
      how they render their pages and maps.</li>\n<li>How Simon feels having reached
      the end of a successful project that millions of people engaged with.</li>\n<li>Future
      projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>\n<li>A
      funny story about having to manually update the votes from rural New Hampshire
      into the app.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSimon Glenn-Gregg on LinkedIn — <a href=\"https://www.linkedin.com/in/simongle/\"
      rel=\"nofollow\">https://www.linkedin.com/in/simongle/</a><br>\nSimon Glenn-Gregg
      — <a href=\"http://simonglenngregg.com/\" rel=\"nofollow\">http://simonglenngregg.com/</a><br>\nThe
      Washington Post — <a href=\"https://www.washingtonpost.com/\" rel=\"nofollow\">https://www.washingtonpost.com/</a><br>\nJason
      Holt on Twitter — <a href=\"https://twitter.com/offpol\" rel=\"nofollow\">https://twitter.com/offpol</a><br>\n‘Elixir
      RAM and the Template of Doom’ — <a href=\"https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\"
      rel=\"nofollow\">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>\nErik
      Reyna on LinkedIn — <a href=\"https://www.linkedin.com/in/erikreyna/\" rel=\"nofollow\">https://www.linkedin.com/in/erikreyna/</a><br>\nJeremy
      Bowers on LinkedIn — <a href=\"https://www.linkedin.com/in/jeremyjbowers/\"
      rel=\"nofollow\">https://www.linkedin.com/in/jeremyjbowers/</a><br>\nAssociated
      Press — <a href=\"https://apnews.com/\" rel=\"nofollow\">https://apnews.com/</a><br>\nEdison
      — <a href=\"https://www.edisonresearch.com/\" rel=\"nofollow\">https://www.edisonresearch.com/</a><br>\nWhole
      Whale — <a href=\"https://www.wholewhale.com/\" rel=\"nofollow\">https://www.wholewhale.com/</a><br>\nThe
      Century Foundation — <a href=\"https://tcf.org/\" rel=\"nofollow\">https://tcf.org/</a><br>\nArc
      Publishing — <a href=\"https://www.arcpublishing.com/\" rel=\"nofollow\">https://www.arcpublishing.com/</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Simon Glenn-Gregg.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Simon Glenn-Gregg, News Engineer
    at The Washington Post. He joins us to talk about using Elixir to build a prototype
    for a platform the news house recently implemented to visualize the results of
    the November 2020 elections in real-time. </p>\n\n<p>While the job title of ‘News
    Engineer’ makes it seem like Simon invents news, this is not the case. He is focused
    on software related to publishing at The Washington Post, and in particular, has
    been working on building their election visualization platform for the past two
    years. Before the final iteration of the platform was built, the software engineering
    team at The Washington Post were given a period to test different technologies
    as an experiment to find the best fit, and Simon decided to try his hand at Elixir
    and Phoenix. He talks about what led him to this choice, and his experiences building
    out his prototype which he demonstrated on a dataset generated by the North Carolina
    3rd Congressional District house race in September. Simon tells us about how the
    pitch went, what the team at The Washington Post was especially impressed by,
    and what led to the choice to use Node in the end. </p>\n\n<p>Simon talks about
    the culture of openness to new technologies at The Washington Post as well as
    some of the limitations to their adoption. We also hear about how the final version
    of the visualization platform held up during the elections proper, and Simon’s
    plans to include Elixir in future stacks due to its amazing abilities as far as
    concurrency and memory. Tune in today! </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What
    kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>\n<li>The
    live updating election visualizer that Simon was working on at The Washington
    Post.</li>\n<li>What went into building the infrastructure for this platform and
    how Elixir was chosen as a candidate.</li>\n<li> A blog post about Elixir’s memory
    management; abilities Elixir has regarding concurrency.</li>\n<li>The first steps
    Simon took toward learning Elixir and Phoenix by building simple projects.</li>\n<li>Simon’s
    process of integrating his Elixir app into the current stack and people at The
    Washington Post.</li>\n<li>Testing the app on the 3rd Congressional District house
    race in North Carolina, and pitching to the team.</li>\n<li>Why it is hard to
    implement projects in new languages at The Washington Post.</li>\n<li>How the
    voting process went after the pitch and which project won.</li>\n<li>What the
    audience at the pitch loved about Elixir, and what the stumbling blocks were.</li>\n<li>The
    nature of working at a deadline-driven place like The Washington Post when it
    comes to adopting new technologies.</li>\n<li>Sources The Washington Post used
    to get their election data.</li>\n<li>What technologies and methods the team used
    to handle the size of data some election moments generated.</li>\n<li>Which parts
    about the election visualizer that ended up being built using Node would have
    been easier to do in Elixir.</li>\n<li>The other side of the coin – what made
    writing the app in Python and JavaScript easier.</li>\n<li>What future projects
    Elixir might be better suited to at The Washington Post.</li>\n<li>Simon’s background,
    education, and how he learned programming in previous jobs</li>\n<li>Why Simon
    stuck programming out and decided it was the right path for him.</li>\n<li>The
    need for software engineers at The Washington Post and why they are recruiting
    so often.</li>\n<li>A deep dive into the tech stack at The Washington Post and
    how they render their pages and maps.</li>\n<li>How Simon feels having reached
    the end of a successful project that millions of people engaged with.</li>\n<li>Future
    projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>\n<li>A
    funny story about having to manually update the votes from rural New Hampshire
    into the app.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSimon Glenn-Gregg on LinkedIn — <a href=\"https://www.linkedin.com/in/simongle/\"
    rel=\"nofollow\">https://www.linkedin.com/in/simongle/</a><br>\nSimon Glenn-Gregg
    — <a href=\"http://simonglenngregg.com/\" rel=\"nofollow\">http://simonglenngregg.com/</a><br>\nThe
    Washington Post — <a href=\"https://www.washingtonpost.com/\" rel=\"nofollow\">https://www.washingtonpost.com/</a><br>\nJason
    Holt on Twitter — <a href=\"https://twitter.com/offpol\" rel=\"nofollow\">https://twitter.com/offpol</a><br>\n‘Elixir
    RAM and the Template of Doom’ — <a href=\"https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html\"
    rel=\"nofollow\">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>\nErik
    Reyna on LinkedIn — <a href=\"https://www.linkedin.com/in/erikreyna/\" rel=\"nofollow\">https://www.linkedin.com/in/erikreyna/</a><br>\nJeremy
    Bowers on LinkedIn — <a href=\"https://www.linkedin.com/in/jeremyjbowers/\" rel=\"nofollow\">https://www.linkedin.com/in/jeremyjbowers/</a><br>\nAssociated
    Press — <a href=\"https://apnews.com/\" rel=\"nofollow\">https://apnews.com/</a><br>\nEdison
    — <a href=\"https://www.edisonresearch.com/\" rel=\"nofollow\">https://www.edisonresearch.com/</a><br>\nWhole
    Whale — <a href=\"https://www.wholewhale.com/\" rel=\"nofollow\">https://www.wholewhale.com/</a><br>\nThe
    Century Foundation — <a href=\"https://tcf.org/\" rel=\"nofollow\">https://tcf.org/</a><br>\nArc
    Publishing — <a href=\"https://www.arcpublishing.com/\" rel=\"nofollow\">https://www.arcpublishing.com/</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Simon Glenn-Gregg.</p>\n      "
- title: Randall Thomas on Learning Elixir and Why Community Matters
  slug: s5e2-thomas
  link: https://smartlogic.io/podcast/elixir-wizards/s5e2-thomas
  guid: 41c6ea5d-4915-4a6e-9795-3e2a9b57aa72
  pubDate: Thu, 10 Dec 2020 06:00:00 -0500
  pubDateFriendly: December 10, 2020
  description: "The culture of your programming community directly impacts your professional
    success. As Thunderbolt Labs Founder Randall Thomas explains in this episode,
    a community that practices openness and which warmly welcomes its newer members
    leads to greater career happiness. \nWe open our chat with Randall by exploring
    his start in coding and how he discovered Elixir. He shares some of the teething
    problems that he had moving from Ruby to Elixir before we touch on how learning
    other languages expands your ability to both appreciate and code in languages
    that you’re already fluent in. Following this, Randall explodes the myth of the
    genius polyglot programmer by sharing his take on why all coders are polyglots.
    As the Thunderbolt CEO, we ask Randall how his company adopted Elixir. He provides
    listeners with insights into how they introduced Elixir into their practice without
    affecting existing projects. \nAfter highlighting the efficiency of Elixir and
    how community affects the feel of a language, we compare the culture and challenges
    of Ruby, JavaScript, and Elixir. Near the end of the episode, Randall reflects
    on why experts make for poor teachers. For Randall, Elixir gives his company a
    competitive advantage. Tune in to hear Randall’s perspective on why community
    matters and for his top advice on teaching your team Elixir. \nKey Points From
    This Episode:\nIntroducing Thunderbolt Labs Founder and CEO, Randall Thomas.\nRandall
    shares how he discovered coding and engineering. \nHear how Randall first heard
    about Elixir and how he picked up the language.\nExploring common challenges moving
    from Ruby to Elixir. \nHow learning new languages can deepen your understanding
    of languages that you already know.\nWhy there’s no such thing as the ‘genius
    polyglot programmer.’ \nDetails on why Randall’s company began gravitating towards
    Elixir.\nHow communities affect the ‘feel’ of a language.\nWhy no one actually
    writes in JavaScript anymore. \nRandall gives his take on why Elixir is a god-send
    for certain programmers. \nInsights into how Randall integrated Elixir into his
    company.\nThe challenge of learning Elixir versus the ease of learning JavaScript.\nHow
    Randall sold his clients on Elixir and the benefits of having clients that trust
    you.\nRandall’s top tips on helping your developers learn Elixir.\nWhy Elixir
    gives Randall’s a strategic advantage.\nThe importance of having non-experts explain
    things to you. \nHow your coding community can impact your happiness and career
    success.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nRandall Thomas on LinkedIn — https://www.linkedin.com/in/randall-j-thomas/\nRandall
    Thomas on Twitter — https://twitter.com/daksis\nThunderbolt Labs — https://www.thunderboltlabs.com/\nEpisode
    with Miki Rezentes — https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\nGödel,
    Escher, Bach on Amazon — https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\nStephen
    Hawking — https://www.biography.com/scientist/stephen-hawking\nWilliam James —
    https://plato.stanford.edu/entries/james/\nBertrand Russell — https://plato.stanford.edu/entries/russell/\nBarcelona
    Ruby Conference — https://twitter.com/baruco\nJosé Valim — https://twitter.com/josevalim\nProgramming
    Elixir on Amazon — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\nDave
    Thomas — https://pragdave.me/\nElixirConf — https://2020.elixirconf.com/\n‘(UN)Learning
    Elixir’ — https://www.youtube.com/watch?v=o54EurlzK8o\nBruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/\nGrox.io
    — https://grox.io/\nEric S. Raymond — http://www.catb.org/~esr/\nStack Overflow
    — https://stackoverflow.com/\nMedium — https://medium.com/\nEngine Yard — https://www.engineyard.com/\nDouglas
    Crockford — https://www.crockford.com/about.html\nYehuda Katz — https://www.linkedin.com/in/yehudakatz/\nBlake
    Mizerany — https://www.linkedin.com/in/bmizerany/\nThe Pragmatic Studio — https://pragmaticstudio.com/\nStuff
    Goes Bad: Erlang in Anger on Amazon — https://www.erlang-in-anger.com/\n Frederic
    Trottier-Hebert — https://www.linkedin.com/in/fredth/\nStu Holloway — https://www.linkedin.com/in/stu-holloway-linvio/\nPaul
    Graham — http://www.paulgraham.com/\nHackers and Painters on Amazon — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nLonestar
    Elixir — https://lonestarelixir.com/\nTuring.io — https://turing.io/\nSundi Myint
    on Twitter — https://twitter.com/sundikhin\nJustus Eapen on Twitter— https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Randall
    Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+cTOOXU7U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72.mp3
    length: '38278017'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: In today's episode, Randall Thomas explains  how a community that practices
      openness and which warmly welcomes its newer members leads to greater career
      happiness.
    duration: '53:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72/cover.jpg?v=1
    summary: "\n        <p>The culture of your programming community directly impacts
      your professional success. As Thunderbolt Labs Founder Randall Thomas explains
      in this episode, a community that practices openness and which warmly welcomes
      its newer members leads to greater career happiness. </p>\n\n<p>We open our
      chat with Randall by exploring his start in coding and how he discovered Elixir.
      He shares some of the teething problems that he had moving from Ruby to Elixir
      before we touch on how learning other languages expands your ability to both
      appreciate and code in languages that you’re already fluent in. Following this,
      Randall explodes the myth of the genius polyglot programmer by sharing his take
      on why all coders are polyglots. As the Thunderbolt CEO, we ask Randall how
      his company adopted Elixir. He provides listeners with insights into how they
      introduced Elixir into their practice without affecting existing projects. </p>\n\n<p>After
      highlighting the efficiency of Elixir and how community affects the feel of
      a language, we compare the culture and challenges of Ruby, JavaScript, and Elixir.
      Near the end of the episode, Randall reflects on why experts make for poor teachers.
      For Randall, Elixir gives his company a competitive advantage. Tune in to hear
      Randall’s perspective on why community matters and for his top advice on teaching
      your team Elixir. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      Thunderbolt Labs Founder and CEO, Randall Thomas.</li>\n<li>Randall shares how
      he discovered coding and engineering. </li>\n<li>Hear how Randall first heard
      about Elixir and how he picked up the language.</li>\n<li>Exploring common challenges
      moving from Ruby to Elixir. </li>\n<li>How learning new languages can deepen
      your understanding of languages that you already know.</li>\n<li>Why there’s
      no such thing as the ‘genius polyglot programmer.’ </li>\n<li>Details on why
      Randall’s company began gravitating towards Elixir.</li>\n<li>How communities
      affect the ‘feel’ of a language.</li>\n<li>Why no one actually writes in JavaScript
      anymore. </li>\n<li>Randall gives his take on why Elixir is a god-send for certain
      programmers. </li>\n<li>Insights into how Randall integrated Elixir into his
      company.</li>\n<li>The challenge of learning Elixir versus the ease of learning
      JavaScript.</li>\n<li>How Randall sold his clients on Elixir and the benefits
      of having clients that trust you.</li>\n<li>Randall’s top tips on helping your
      developers learn Elixir.</li>\n<li>Why Elixir gives Randall’s a strategic advantage.</li>\n<li>The
      importance of having non-experts explain things to you. </li>\n<li>How your
      coding community can impact your happiness and career success.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nRandall Thomas on LinkedIn
      — <a href=\"https://www.linkedin.com/in/randall-j-thomas/\" rel=\"nofollow\">https://www.linkedin.com/in/randall-j-thomas/</a><br>\nRandall
      Thomas on Twitter — <a href=\"https://twitter.com/daksis\" rel=\"nofollow\">https://twitter.com/daksis</a><br>\nThunderbolt
      Labs — <a href=\"https://www.thunderboltlabs.com/\" rel=\"nofollow\">https://www.thunderboltlabs.com/</a><br>\nEpisode
      with Miki Rezentes — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>\nGödel,
      Escher, Bach on Amazon — <a href=\"https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\"
      rel=\"nofollow\">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>\nStephen
      Hawking — <a href=\"https://www.biography.com/scientist/stephen-hawking\" rel=\"nofollow\">https://www.biography.com/scientist/stephen-hawking</a><br>\nWilliam
      James — <a href=\"https://plato.stanford.edu/entries/james/\" rel=\"nofollow\">https://plato.stanford.edu/entries/james/</a><br>\nBertrand
      Russell — <a href=\"https://plato.stanford.edu/entries/russell/\" rel=\"nofollow\">https://plato.stanford.edu/entries/russell/</a><br>\nBarcelona
      Ruby Conference — <a href=\"https://twitter.com/baruco\" rel=\"nofollow\">https://twitter.com/baruco</a><br>\nJosé
      Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nProgramming
      Elixir on Amazon — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nDave
      Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nElixirConf
      — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\n‘(UN)Learning
      Elixir’ — <a href=\"https://www.youtube.com/watch?v=o54EurlzK8o\" rel=\"nofollow\">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nGrox.io
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nEric
      S. Raymond — <a href=\"http://www.catb.org/%7Eesr/\" rel=\"nofollow\">http://www.catb.org/~esr/</a><br>\nStack
      Overflow — <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">https://stackoverflow.com/</a><br>\nMedium
      — <a href=\"https://medium.com/\" rel=\"nofollow\">https://medium.com/</a><br>\nEngine
      Yard — <a href=\"https://www.engineyard.com/\" rel=\"nofollow\">https://www.engineyard.com/</a><br>\nDouglas
      Crockford — <a href=\"https://www.crockford.com/about.html\" rel=\"nofollow\">https://www.crockford.com/about.html</a><br>\nYehuda
      Katz — <a href=\"https://www.linkedin.com/in/yehudakatz/\" rel=\"nofollow\">https://www.linkedin.com/in/yehudakatz/</a><br>\nBlake
      Mizerany — <a href=\"https://www.linkedin.com/in/bmizerany/\" rel=\"nofollow\">https://www.linkedin.com/in/bmizerany/</a><br>\nThe
      Pragmatic Studio — <a href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\nStuff
      Goes Bad: Erlang in Anger on Amazon — <a href=\"https://www.erlang-in-anger.com/\"
      rel=\"nofollow\">https://www.erlang-in-anger.com/</a><br>\n Frederic Trottier-Hebert
      — <a href=\"https://www.linkedin.com/in/fredth/\" rel=\"nofollow\">https://www.linkedin.com/in/fredth/</a><br>\nStu
      Holloway — <a href=\"https://www.linkedin.com/in/stu-holloway-linvio/\" rel=\"nofollow\">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
      and Painters on Amazon — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTuring.io
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen on Twitter— <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Randall Thomas.</p>\n      "
  contentEncoded: "\n        <p>The culture of your programming community directly
    impacts your professional success. As Thunderbolt Labs Founder Randall Thomas
    explains in this episode, a community that practices openness and which warmly
    welcomes its newer members leads to greater career happiness. </p>\n\n<p>We open
    our chat with Randall by exploring his start in coding and how he discovered Elixir.
    He shares some of the teething problems that he had moving from Ruby to Elixir
    before we touch on how learning other languages expands your ability to both appreciate
    and code in languages that you’re already fluent in. Following this, Randall explodes
    the myth of the genius polyglot programmer by sharing his take on why all coders
    are polyglots. As the Thunderbolt CEO, we ask Randall how his company adopted
    Elixir. He provides listeners with insights into how they introduced Elixir into
    their practice without affecting existing projects. </p>\n\n<p>After highlighting
    the efficiency of Elixir and how community affects the feel of a language, we
    compare the culture and challenges of Ruby, JavaScript, and Elixir. Near the end
    of the episode, Randall reflects on why experts make for poor teachers. For Randall,
    Elixir gives his company a competitive advantage. Tune in to hear Randall’s perspective
    on why community matters and for his top advice on teaching your team Elixir.
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing Thunderbolt
    Labs Founder and CEO, Randall Thomas.</li>\n<li>Randall shares how he discovered
    coding and engineering. </li>\n<li>Hear how Randall first heard about Elixir and
    how he picked up the language.</li>\n<li>Exploring common challenges moving from
    Ruby to Elixir. </li>\n<li>How learning new languages can deepen your understanding
    of languages that you already know.</li>\n<li>Why there’s no such thing as the
    ‘genius polyglot programmer.’ </li>\n<li>Details on why Randall’s company began
    gravitating towards Elixir.</li>\n<li>How communities affect the ‘feel’ of a language.</li>\n<li>Why
    no one actually writes in JavaScript anymore. </li>\n<li>Randall gives his take
    on why Elixir is a god-send for certain programmers. </li>\n<li>Insights into
    how Randall integrated Elixir into his company.</li>\n<li>The challenge of learning
    Elixir versus the ease of learning JavaScript.</li>\n<li>How Randall sold his
    clients on Elixir and the benefits of having clients that trust you.</li>\n<li>Randall’s
    top tips on helping your developers learn Elixir.</li>\n<li>Why Elixir gives Randall’s
    a strategic advantage.</li>\n<li>The importance of having non-experts explain
    things to you. </li>\n<li>How your coding community can impact your happiness
    and career success.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nRandall Thomas on LinkedIn — <a href=\"https://www.linkedin.com/in/randall-j-thomas/\"
    rel=\"nofollow\">https://www.linkedin.com/in/randall-j-thomas/</a><br>\nRandall
    Thomas on Twitter — <a href=\"https://twitter.com/daksis\" rel=\"nofollow\">https://twitter.com/daksis</a><br>\nThunderbolt
    Labs — <a href=\"https://www.thunderboltlabs.com/\" rel=\"nofollow\">https://www.thunderboltlabs.com/</a><br>\nEpisode
    with Miki Rezentes — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>\nGödel,
    Escher, Bach on Amazon — <a href=\"https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567\"
    rel=\"nofollow\">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>\nStephen
    Hawking — <a href=\"https://www.biography.com/scientist/stephen-hawking\" rel=\"nofollow\">https://www.biography.com/scientist/stephen-hawking</a><br>\nWilliam
    James — <a href=\"https://plato.stanford.edu/entries/james/\" rel=\"nofollow\">https://plato.stanford.edu/entries/james/</a><br>\nBertrand
    Russell — <a href=\"https://plato.stanford.edu/entries/russell/\" rel=\"nofollow\">https://plato.stanford.edu/entries/russell/</a><br>\nBarcelona
    Ruby Conference — <a href=\"https://twitter.com/baruco\" rel=\"nofollow\">https://twitter.com/baruco</a><br>\nJosé
    Valim — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nProgramming
    Elixir on Amazon — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nDave
    Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nElixirConf
    — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\n‘(UN)Learning
    Elixir’ — <a href=\"https://www.youtube.com/watch?v=o54EurlzK8o\" rel=\"nofollow\">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b/\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>\nGrox.io
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nEric
    S. Raymond — <a href=\"http://www.catb.org/%7Eesr/\" rel=\"nofollow\">http://www.catb.org/~esr/</a><br>\nStack
    Overflow — <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">https://stackoverflow.com/</a><br>\nMedium
    — <a href=\"https://medium.com/\" rel=\"nofollow\">https://medium.com/</a><br>\nEngine
    Yard — <a href=\"https://www.engineyard.com/\" rel=\"nofollow\">https://www.engineyard.com/</a><br>\nDouglas
    Crockford — <a href=\"https://www.crockford.com/about.html\" rel=\"nofollow\">https://www.crockford.com/about.html</a><br>\nYehuda
    Katz — <a href=\"https://www.linkedin.com/in/yehudakatz/\" rel=\"nofollow\">https://www.linkedin.com/in/yehudakatz/</a><br>\nBlake
    Mizerany — <a href=\"https://www.linkedin.com/in/bmizerany/\" rel=\"nofollow\">https://www.linkedin.com/in/bmizerany/</a><br>\nThe
    Pragmatic Studio — <a href=\"https://pragmaticstudio.com/\" rel=\"nofollow\">https://pragmaticstudio.com/</a><br>\nStuff
    Goes Bad: Erlang in Anger on Amazon — <a href=\"https://www.erlang-in-anger.com/\"
    rel=\"nofollow\">https://www.erlang-in-anger.com/</a><br>\n Frederic Trottier-Hebert
    — <a href=\"https://www.linkedin.com/in/fredth/\" rel=\"nofollow\">https://www.linkedin.com/in/fredth/</a><br>\nStu
    Holloway — <a href=\"https://www.linkedin.com/in/stu-holloway-linvio/\" rel=\"nofollow\">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nHackers
    and Painters on Amazon — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTuring.io
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen on Twitter— <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Randall Thomas.</p>\n      "
- title: Launchisode and Outlaws Takeover with Chris Keathley, Amos King, and Anna
    Neyzberg
  slug: s5e1-launchisode-outlaws-takeover
  link: https://smartlogic.io/podcast/elixir-wizards/s5e1-launchisode-outlaws-takeover
  guid: 4a9a2637-46ff-42d5-af60-6c46bbf9c3fa
  pubDate: Thu, 03 Dec 2020 06:00:00 -0500
  pubDateFriendly: December  3, 2020
  description: "Welcome back to Elixir Wizards, season five, episode one! The theme
    for this season is ‘Adopting Elixir’, and for today’s show the team at Elixir
    Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give the Elixir
    Wizards a chance to talk about what they love about Elixir, how they learned it,
    and some of their experiences using it at SmartLogic! \nWe kick off the conversation
    with some memories of college and the different degrees everybody did, how these
    experiences fit into programming and the different paths that Justus, Eric, and
    Sundi took into the world of Elixir. From there, we dive into some of the amazing
    features about Elixir, highlighting pattern matching, readability, and how easy
    it is to think about how to write solutions to problems using it. Our conversation
    moves onto the topic of serving clients with Elixir, and here we consider the
    risk of basing a consultancy on one technology, as well as how open clients are
    to their needs being met with this young but powerful language. We also talk about
    training staff and convincing teams to adopt Elixir, covering themes of barriers
    to entry, the job market, and using the Elixir community as a resource. For a
    fun conversation about Elixir where our hosts take the mic as guests, be sure
    to tune in today.\nKey Points From This Episode:\nIntroducing this season’s topic
    and today’s plan where the hosts become guests.\nHow Justus, Eric and Sundi got
    introduced to Elixir and their respective journeys using it.\nEverybody discusses
    their forays into programming and compares their different degrees.\nHustles Justus
    did at college to get tuition cheaper for his friends and him.\n‘Staking a consultancy
    on a tech’; how SmartLogic adopted Elixir initially.\nHow the first few clients
    SmartLogic served with Elixir felt about the language being used.\nSundi’s onboarding
    experience at CAVA and how she got introduced to Elixir.\nHow Justus discovered
    the beauty of Elixir after he began to understand pattern matching.\nSundi’s thoughts
    about hidden functionality in JavaScript code versus Elixir which reads better.\nWhether
    using Elixir to solve problems feels easy due to familiarity or its inherent characteristics.\nConventions
    SmartLogic is implementing regarding using Elixir to build projects.\nThe lack
    of introductory resources for learning Elixir and the team’s attempts at making
    some.\nThe value of getting involved in your community for learning a new technology.\nFind
    out the value of investing in staff training for companies who want to switch
    to Elixir.\nA new wall between Dev and Ops in the form of Kubernetes.\nHow to
    get your co-workers to learn Elixir if you are passionate about it.\nGrowth at
    SmartLogic, new hires, and what they specialize in.\nThe job landscape in 2020
    and how this relates to having Elixir under your belt.\nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nChris Keathley on Twitter — https://twitter.com/chriskeathley\nAmos
    King on Twitter — https://twitter.com/adkron\nAnna Neyzberg on Twitter — https://twitter.com/aneyzb\nSundi
    Myint on Twitter — https://twitter.com/sundikhin\nJustus Eapen — https://twitter.com/JustusEapen\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich\nCAVA — https://cava.com/\nPavlok
    — https://pavlok.com/\nJohnny Boursiquot — https://www.jboursiquot.com/\nElixirBridge
    — http://elixirbridge.org/\nMatt Mills on GitHub — https://github.com/photomattmills\nBrooklyn
    Zelenca on Functional Programming — https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\nBleacher
    Report — https://bleacherreport.com/\nLiveView by Bruce Tate — https://pragprog.com/titles/passlive/programmer-passport-liveview/
    Special Guests: Amos King, Anna Neyzberg, and Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+R9k5VsM4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa.mp3
    length: '81502282'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '5'
    author: SmartLogic LLC
    subtitle: Welcome to season five, 'Adopting Elixir'. Today the Elixir Outlaws
      play host!  The Elixir Wizards talk about what they love about Elixir, how they
      learned it, and their experiences using it at SmartLogic.
    duration: '56:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa/cover.jpg?v=1
    summary: "\n        <p>Welcome back to Elixir Wizards, season five, episode one!
      The theme for this season is ‘Adopting Elixir’, and for today’s show the team
      at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give
      the Elixir Wizards a chance to talk about what they love about Elixir, how they
      learned it, and some of their experiences using it at SmartLogic! </p>\n\n<p>We
      kick off the conversation with some memories of college and the different degrees
      everybody did, how these experiences fit into programming and the different
      paths that Justus, Eric, and Sundi took into the world of Elixir. From there,
      we dive into some of the amazing features about Elixir, highlighting pattern
      matching, readability, and how easy it is to think about how to write solutions
      to problems using it. Our conversation moves onto the topic of serving clients
      with Elixir, and here we consider the risk of basing a consultancy on one technology,
      as well as how open clients are to their needs being met with this young but
      powerful language. We also talk about training staff and convincing teams to
      adopt Elixir, covering themes of barriers to entry, the job market, and using
      the Elixir community as a resource. For a fun conversation about Elixir where
      our hosts take the mic as guests, be sure to tune in today.</p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Introducing this season’s topic and today’s
      plan where the hosts become guests.</li>\n<li>How Justus, Eric and Sundi got
      introduced to Elixir and their respective journeys using it.</li>\n<li>Everybody
      discusses their forays into programming and compares their different degrees.</li>\n<li>Hustles
      Justus did at college to get tuition cheaper for his friends and him.</li>\n<li>‘Staking
      a consultancy on a tech’; how SmartLogic adopted Elixir initially.</li>\n<li>How
      the first few clients SmartLogic served with Elixir felt about the language
      being used.</li>\n<li>Sundi’s onboarding experience at CAVA and how she got
      introduced to Elixir.</li>\n<li>How Justus discovered the beauty of Elixir after
      he began to understand pattern matching.</li>\n<li>Sundi’s thoughts about hidden
      functionality in JavaScript code versus Elixir which reads better.</li>\n<li>Whether
      using Elixir to solve problems feels easy due to familiarity or its inherent
      characteristics.</li>\n<li>Conventions SmartLogic is implementing regarding
      using Elixir to build projects.</li>\n<li>The lack of introductory resources
      for learning Elixir and the team’s attempts at making some.</li>\n<li>The value
      of getting involved in your community for learning a new technology.</li>\n<li>Find
      out the value of investing in staff training for companies who want to switch
      to Elixir.</li>\n<li>A new wall between Dev and Ops in the form of Kubernetes.</li>\n<li>How
      to get your co-workers to learn Elixir if you are passionate about it.</li>\n<li>Growth
      at SmartLogic, new hires, and what they specialize in.</li>\n<li>The job landscape
      in 2020 and how this relates to having Elixir under your belt.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter
      — <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nAmos
      King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nAnna
      Neyzberg on Twitter — <a href=\"https://twitter.com/aneyzb\" rel=\"nofollow\">https://twitter.com/aneyzb</a><br>\nSundi
      Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
      Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nCAVA
      — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nPavlok
      — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nJohnny
      Boursiquot — <a href=\"https://www.jboursiquot.com/\" rel=\"nofollow\">https://www.jboursiquot.com/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nMatt
      Mills on GitHub — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nBrooklyn
      Zelenca on Functional Programming — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nLiveView
      by Bruce Tate — <a href=\"https://pragprog.com/titles/passlive/programmer-passport-liveview/\"
      rel=\"nofollow\">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special
      Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to Elixir Wizards, season five, episode
    one! The theme for this season is ‘Adopting Elixir’, and for today’s show the
    team at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg
    give the Elixir Wizards a chance to talk about what they love about Elixir, how
    they learned it, and some of their experiences using it at SmartLogic! </p>\n\n<p>We
    kick off the conversation with some memories of college and the different degrees
    everybody did, how these experiences fit into programming and the different paths
    that Justus, Eric, and Sundi took into the world of Elixir. From there, we dive
    into some of the amazing features about Elixir, highlighting pattern matching,
    readability, and how easy it is to think about how to write solutions to problems
    using it. Our conversation moves onto the topic of serving clients with Elixir,
    and here we consider the risk of basing a consultancy on one technology, as well
    as how open clients are to their needs being met with this young but powerful
    language. We also talk about training staff and convincing teams to adopt Elixir,
    covering themes of barriers to entry, the job market, and using the Elixir community
    as a resource. For a fun conversation about Elixir where our hosts take the mic
    as guests, be sure to tune in today.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    this season’s topic and today’s plan where the hosts become guests.</li>\n<li>How
    Justus, Eric and Sundi got introduced to Elixir and their respective journeys
    using it.</li>\n<li>Everybody discusses their forays into programming and compares
    their different degrees.</li>\n<li>Hustles Justus did at college to get tuition
    cheaper for his friends and him.</li>\n<li>‘Staking a consultancy on a tech’;
    how SmartLogic adopted Elixir initially.</li>\n<li>How the first few clients SmartLogic
    served with Elixir felt about the language being used.</li>\n<li>Sundi’s onboarding
    experience at CAVA and how she got introduced to Elixir.</li>\n<li>How Justus
    discovered the beauty of Elixir after he began to understand pattern matching.</li>\n<li>Sundi’s
    thoughts about hidden functionality in JavaScript code versus Elixir which reads
    better.</li>\n<li>Whether using Elixir to solve problems feels easy due to familiarity
    or its inherent characteristics.</li>\n<li>Conventions SmartLogic is implementing
    regarding using Elixir to build projects.</li>\n<li>The lack of introductory resources
    for learning Elixir and the team’s attempts at making some.</li>\n<li>The value
    of getting involved in your community for learning a new technology.</li>\n<li>Find
    out the value of investing in staff training for companies who want to switch
    to Elixir.</li>\n<li>A new wall between Dev and Ops in the form of Kubernetes.</li>\n<li>How
    to get your co-workers to learn Elixir if you are passionate about it.</li>\n<li>Growth
    at SmartLogic, new hires, and what they specialize in.</li>\n<li>The job landscape
    in 2020 and how this relates to having Elixir under your belt.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter —
    <a href=\"https://twitter.com/chriskeathley\" rel=\"nofollow\">https://twitter.com/chriskeathley</a><br>\nAmos
    King on Twitter — <a href=\"https://twitter.com/adkron\" rel=\"nofollow\">https://twitter.com/adkron</a><br>\nAnna
    Neyzberg on Twitter — <a href=\"https://twitter.com/aneyzb\" rel=\"nofollow\">https://twitter.com/aneyzb</a><br>\nSundi
    Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nJustus
    Eapen — <a href=\"https://twitter.com/JustusEapen\" rel=\"nofollow\">https://twitter.com/JustusEapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nCAVA
    — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nPavlok
    — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nJohnny
    Boursiquot — <a href=\"https://www.jboursiquot.com/\" rel=\"nofollow\">https://www.jboursiquot.com/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nMatt
    Mills on GitHub — <a href=\"https://github.com/photomattmills\" rel=\"nofollow\">https://github.com/photomattmills</a><br>\nBrooklyn
    Zelenca on Functional Programming — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nLiveView
    by Bruce Tate — <a href=\"https://pragprog.com/titles/passlive/programmer-passport-liveview/\"
    rel=\"nofollow\">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special
    Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>\n      "
- title: 'Season Four Wrap: Whose Design Is It Anyway? with Swadia, Windholtz, Rezentes,
    and Keathley'
  slug: s4e22-s4wrap-whose-design-is-it-anyway
  link: https://smartlogic.io/podcast/elixir-wizards/s4e22-s4wrap-whose-design-is-it-anyway
  guid: 8cbeff8e-7468-4da6-a117-7e0a1f94d653
  pubDate: Thu, 15 Oct 2020 06:00:00 -0400
  pubDateFriendly: October 15, 2020
  description: "To close off this season and conclude our deep dive into system and
    application architecture, today’s episode is a special panel discussion on a topic
    that has provoked a mix of answers that range from the controversial to the philosophical
    — “What does domain-driven design mean to you?” For the final word on this subject,
    we welcome back software developers Chris Keathley, Japa Swadia, Mark Windholtz,
    and Miki Rezentes. Our first hot take comes from Miki, who shares her thoughts
    about how domain-driven design developed because the tech industry undervalues
    communication. Following this, Mark and Japa discuss how domain-driven design
    gives developers a context for what they create while informing how you code using
    Elixir. We then touch on whether domain-driven design makes it easier or more
    difficult to change your code and how communication is valued within a business
    context. We explore key domain-driven design concepts, including the role of bounded
    contexts, and how this design ethos can help you appeal to stakeholders such as
    product managers. After Miki highlights the reasons why communication should be
    seen as a vital tech skill, each guest provides their final thoughts on domain-driven
    design. Tune in for this season’s insightful finale and find out which of today’s
    guests is the winner of “Whose Design Is It Anyway?”\nKey Points From This Episode:\nIntroducing
    guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.\nHear what
    domain-driven design means for each guest.\nMiki shares her hot take that domain-driven
    design is “nothing new under the sun.”\nWhy the essence of domain-driven design
    is about listening. \nHow domain-driven design can inform your Elixir architecture.
    \nMapping your system and developing names for your bounded contexts.\nDomain-driven
    design trade-offs and how it can lead to a loss of productivity. \nThe idea that
    domain-driven design has developed because the tech industry undervalues communication.
    \nWhy communication should be valued — bad communication costs money. \nHow tech
    companies are generally aligned with the goals of domain-driven design.\nWhy Mark
    is so delighted to be working with Elixir and domain-driven design.\nThe link
    between domain-driven design and developing better products.\nExploring how bounded
    contexts allow teams to create solutions to unique problems.\nSeeing communication
    as a tech skill that should be learned early in your career.\nOur guests share
    their final thoughts on domain-driven design. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nChris Keathley on Twitter — @ChrisKeathley/\nChris
    Keathley — https://keathley.io/\nJapa Swadia on Twitter — https://twitter.com/japa2292\nJapa
    Swadia on LinkedIn — https://www.linkedin.com/in/japaswadia/\nMark Windholtz on
    Twitter — https://twitter.com/windholtz\nMark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/\nMiki
    Rezentes on Twitter — https://twitter.com/mikirez\nMiki Rezentes on LinkedIn —
    https://www.linkedin.com/in/miki-rezentes-823ba02a/ \nPodium — https://www.podium.com/\nElixir
    Outlaws — https://elixiroutlaws.com/\nAgile DNA — http://www.agiledna.com\nFrame.io
    — https://frame.io/\nBleacher Report — https://bleacherreport.com/\nDomain-Driven
    Design: Tackling Complexity in the Heart of Software on Amazon— https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\nDomain
    Language — https://www.domainlanguage.com/\nThe Seven Laws of Learning: Why Great
    Leaders Are Also Great Teachers on Amazon\n— https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\nPatterns,
    Principles, and Practices of Domain-Driven Design on Amazon — https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\n‘Ubiquitous
    Language’ — https://martinfowler.com/bliki/UbiquitousLanguage.html\n‘Value Object’
    — https://martinfowler.com/bliki/ValueObject.html\nDomain-Driven Design Europe
    — https://dddeurope.com/2021/\nDomain-Driven Design Europe on YouTube — https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\nA
    Philosophy of Software Design on Amazon — https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\nEric
    Evans Training Videos — https://elearn.domainlanguage.com/\nDesigning Elixir Systems
    with OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\nWhose
    Line Is It Anyway? — https://www.imdb.com/title/tt0163507/\nDrew Carey — https://www.imdb.com/name/nm0004804/
    Special Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XRBHme1c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8cbeff8e-7468-4da6-a117-7e0a1f94d653.mp3
    length: '42936728'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: To close off this season and conclude our deep dive into system and
      application architecture, today’s episode is a panel discussion on domain-driven
      design with special guests Japa Swadia, Mark Windholtz, Miki Rezentes, and Chris
      Keathley.
    duration: '59:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8cbeff8e-7468-4da6-a117-7e0a1f94d653/cover.jpg?v=1
    summary: "\n        <p>To close off this season and conclude our deep dive into
      system and application architecture, today’s episode is a special panel discussion
      on a topic that has provoked a mix of answers that range from the controversial
      to the philosophical — “What does domain-driven design mean to you?” For the
      final word on this subject, we welcome back software developers Chris Keathley,
      Japa Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from
      Miki, who shares her thoughts about how domain-driven design developed because
      the tech industry undervalues communication. Following this, Mark and Japa discuss
      how domain-driven design gives developers a context for what they create while
      informing how you code using Elixir. We then touch on whether domain-driven
      design makes it easier or more difficult to change your code and how communication
      is valued within a business context. We explore key domain-driven design concepts,
      including the role of bounded contexts, and how this design ethos can help you
      appeal to stakeholders such as product managers. After Miki highlights the reasons
      why communication should be seen as a vital tech skill, each guest provides
      their final thoughts on domain-driven design. Tune in for this season’s insightful
      finale and find out which of today’s guests is the winner of “Whose Design Is
      It Anyway?”</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>\n<li>Hear
      what domain-driven design means for each guest.</li>\n<li>Miki shares her hot
      take that domain-driven design is “nothing new under the sun.”</li>\n<li>Why
      the essence of domain-driven design is about listening. </li>\n<li>How domain-driven
      design can inform your Elixir architecture. </li>\n<li>Mapping your system and
      developing names for your bounded contexts.</li>\n<li>Domain-driven design trade-offs
      and how it can lead to a loss of productivity. </li>\n<li>The idea that domain-driven
      design has developed because the tech industry undervalues communication. </li>\n<li>Why
      communication should be valued — bad communication costs money. </li>\n<li>How
      tech companies are generally aligned with the goals of domain-driven design.</li>\n<li>Why
      Mark is so delighted to be working with Elixir and domain-driven design.</li>\n<li>The
      link between domain-driven design and developing better products.</li>\n<li>Exploring
      how bounded contexts allow teams to create solutions to unique problems.</li>\n<li>Seeing
      communication as a tech skill that should be learned early in your career.</li>\n<li>Our
      guests share their final thoughts on domain-driven design. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter
      — @ChrisKeathley/<br>\nChris Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nJapa
      Swadia on Twitter — <a href=\"https://twitter.com/japa2292\" rel=\"nofollow\">https://twitter.com/japa2292</a><br>\nJapa
      Swadia on LinkedIn — <a href=\"https://www.linkedin.com/in/japaswadia/\" rel=\"nofollow\">https://www.linkedin.com/in/japaswadia/</a><br>\nMark
      Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nMark
      Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\"
      rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMiki Rezentes
      on Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMiki
      Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
      rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>\nPodium
      — <a href=\"https://www.podium.com/\" rel=\"nofollow\">https://www.podium.com/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nAgile
      DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nFrame.io
      — <a href=\"https://frame.io/\" rel=\"nofollow\">https://frame.io/</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nDomain-Driven
      Design: Tackling Complexity in the Heart of Software on Amazon— <a href=\"https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\"
      rel=\"nofollow\">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>\nDomain
      Language — <a href=\"https://www.domainlanguage.com/\" rel=\"nofollow\">https://www.domainlanguage.com/</a><br>\nThe
      Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>\n—
      <a href=\"https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\"
      rel=\"nofollow\">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>\nPatterns,
      Principles, and Practices of Domain-Driven Design on Amazon — <a href=\"https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\"
      rel=\"nofollow\">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>\n‘Ubiquitous
      Language’ — <a href=\"https://martinfowler.com/bliki/UbiquitousLanguage.html\"
      rel=\"nofollow\">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>\n‘Value
      Object’ — <a href=\"https://martinfowler.com/bliki/ValueObject.html\" rel=\"nofollow\">https://martinfowler.com/bliki/ValueObject.html</a><br>\nDomain-Driven
      Design Europe — <a href=\"https://dddeurope.com/2021/\" rel=\"nofollow\">https://dddeurope.com/2021/</a><br>\nDomain-Driven
      Design Europe on YouTube — <a href=\"https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\"
      rel=\"nofollow\">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>\nA
      Philosophy of Software Design on Amazon — <a href=\"https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\"
      rel=\"nofollow\">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>\nEric
      Evans Training Videos — <a href=\"https://elearn.domainlanguage.com/\" rel=\"nofollow\">https://elearn.domainlanguage.com/</a><br>\nDesigning
      Elixir Systems with OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nWhose
      Line Is It Anyway? — <a href=\"https://www.imdb.com/title/tt0163507/\" rel=\"nofollow\">https://www.imdb.com/title/tt0163507/</a><br>\nDrew
      Carey — <a href=\"https://www.imdb.com/name/nm0004804/\" rel=\"nofollow\">https://www.imdb.com/name/nm0004804/</a></p><p>Special
      Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>\n      "
  contentEncoded: "\n        <p>To close off this season and conclude our deep dive
    into system and application architecture, today’s episode is a special panel discussion
    on a topic that has provoked a mix of answers that range from the controversial
    to the philosophical — “What does domain-driven design mean to you?” For the final
    word on this subject, we welcome back software developers Chris Keathley, Japa
    Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from Miki,
    who shares her thoughts about how domain-driven design developed because the tech
    industry undervalues communication. Following this, Mark and Japa discuss how
    domain-driven design gives developers a context for what they create while informing
    how you code using Elixir. We then touch on whether domain-driven design makes
    it easier or more difficult to change your code and how communication is valued
    within a business context. We explore key domain-driven design concepts, including
    the role of bounded contexts, and how this design ethos can help you appeal to
    stakeholders such as product managers. After Miki highlights the reasons why communication
    should be seen as a vital tech skill, each guest provides their final thoughts
    on domain-driven design. Tune in for this season’s insightful finale and find
    out which of today’s guests is the winner of “Whose Design Is It Anyway?”</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Introducing guests Chris Keathley,
    Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>\n<li>Hear what domain-driven
    design means for each guest.</li>\n<li>Miki shares her hot take that domain-driven
    design is “nothing new under the sun.”</li>\n<li>Why the essence of domain-driven
    design is about listening. </li>\n<li>How domain-driven design can inform your
    Elixir architecture. </li>\n<li>Mapping your system and developing names for your
    bounded contexts.</li>\n<li>Domain-driven design trade-offs and how it can lead
    to a loss of productivity. </li>\n<li>The idea that domain-driven design has developed
    because the tech industry undervalues communication. </li>\n<li>Why communication
    should be valued — bad communication costs money. </li>\n<li>How tech companies
    are generally aligned with the goals of domain-driven design.</li>\n<li>Why Mark
    is so delighted to be working with Elixir and domain-driven design.</li>\n<li>The
    link between domain-driven design and developing better products.</li>\n<li>Exploring
    how bounded contexts allow teams to create solutions to unique problems.</li>\n<li>Seeing
    communication as a tech skill that should be learned early in your career.</li>\n<li>Our
    guests share their final thoughts on domain-driven design. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on Twitter —
    @ChrisKeathley/<br>\nChris Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nJapa
    Swadia on Twitter — <a href=\"https://twitter.com/japa2292\" rel=\"nofollow\">https://twitter.com/japa2292</a><br>\nJapa
    Swadia on LinkedIn — <a href=\"https://www.linkedin.com/in/japaswadia/\" rel=\"nofollow\">https://www.linkedin.com/in/japaswadia/</a><br>\nMark
    Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nMark
    Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\" rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMiki
    Rezentes on Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMiki
    Rezentes on LinkedIn — <a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
    rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>\nPodium
    — <a href=\"https://www.podium.com/\" rel=\"nofollow\">https://www.podium.com/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nAgile
    DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nFrame.io
    — <a href=\"https://frame.io/\" rel=\"nofollow\">https://frame.io/</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nDomain-Driven
    Design: Tackling Complexity in the Heart of Software on Amazon— <a href=\"https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\"
    rel=\"nofollow\">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>\nDomain
    Language — <a href=\"https://www.domainlanguage.com/\" rel=\"nofollow\">https://www.domainlanguage.com/</a><br>\nThe
    Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>\n—
    <a href=\"https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277\"
    rel=\"nofollow\">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>\nPatterns,
    Principles, and Practices of Domain-Driven Design on Amazon — <a href=\"https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709\"
    rel=\"nofollow\">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>\n‘Ubiquitous
    Language’ — <a href=\"https://martinfowler.com/bliki/UbiquitousLanguage.html\"
    rel=\"nofollow\">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>\n‘Value
    Object’ — <a href=\"https://martinfowler.com/bliki/ValueObject.html\" rel=\"nofollow\">https://martinfowler.com/bliki/ValueObject.html</a><br>\nDomain-Driven
    Design Europe — <a href=\"https://dddeurope.com/2021/\" rel=\"nofollow\">https://dddeurope.com/2021/</a><br>\nDomain-Driven
    Design Europe on YouTube — <a href=\"https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ\"
    rel=\"nofollow\">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>\nA
    Philosophy of Software Design on Amazon — <a href=\"https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\"
    rel=\"nofollow\">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>\nEric
    Evans Training Videos — <a href=\"https://elearn.domainlanguage.com/\" rel=\"nofollow\">https://elearn.domainlanguage.com/</a><br>\nDesigning
    Elixir Systems with OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nWhose
    Line Is It Anyway? — <a href=\"https://www.imdb.com/title/tt0163507/\" rel=\"nofollow\">https://www.imdb.com/title/tt0163507/</a><br>\nDrew
    Carey — <a href=\"https://www.imdb.com/name/nm0004804/\" rel=\"nofollow\">https://www.imdb.com/name/nm0004804/</a></p><p>Special
    Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>\n      "
- title: Anna Sherman on Change, Failure, and living in Gig City
  slug: s4e21-sherman
  link: https://smartlogic.io/podcast/elixir-wizards/s4e21-sherman
  guid: 6cb1796f-017c-4f06-bd10-9cbf85fff404
  pubDate: Thu, 08 Oct 2020 06:00:00 -0400
  pubDateFriendly: October  8, 2020
  description: "Even with the most programming experience in the world, coding still
    involves a lot of trial and error. People getting started in the industry should
    not become bogged down by failure. Because in the end, it’s a feature and not
    a bug. That’s one of Zillion developer Anna Sherman’s key messages this episode.
    We open our discussion with Anna by talking about living in Chattanooga, AKA,
    Gig City. She talks about why the tech scene there is exploding before diving
    into her journey into programming. Having created her own personal coding boot
    camp, she opens up about what she did to land her first software job within only
    two months of looking. After discussing her early working experiences, we explore
    her work at Zillion, along with her side projects. We then touch on what Anna
    does to expand her skillset and develop herself as a professional, using a style
    guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch
    for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture
    and design, as well as the importance of domain-driven design in keeping your
    team aligned with what they’re building. Near the end of the episode, we talk
    about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why
    failure is an important part of coding. Tune in to hear more of Anna’s insights
    on change, failure, and living in Gig City.  \nKey Points From This Episode:\nFast
    internet and the great outdoors; hear why Chattanooga has become a tech hub.\nAnna
    shares her love of math and how she got into programming.\nCreating your own boot
    camp and becoming a self-taught coder.\nHow Anna landed her first gig, just two
    months after learning code.\nExploring Anna’s first job at Sovee, a machine translation
    company.\nWhat side projects Anna is working on and how they help her Magic: The
    Gathering games.\nHow Anna expands her skill set and develops herself as a professional.\nHear
    Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.\nWhat
    architecture, design, and domain-driven design mean to Anna. \nUsing a style guide
    and ‘lunch and learns’ to help your team understand patterns.\nDetails on how
    Anna’s style guide keeps her team informed. \nThe virtues of being a ‘physlistcler;’
    anchoring your workflow to a physical list. \nWhy failure is a key part of coding
    and the idea that anyone can learn to code.\nWe close the episode by chatting
    about Anna’s favorite board games. \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nAnna Sherman on LinkedIn — https://www.linkedin.com/in/anna-sherman-54289372/\nAnna
    Sherman on Twitter — https://twitter.com/cavewoman90\nAnna Sherman on Instagram
    — https://www.instagram.com/annasherman100816/\nAnna Sherman Email — anna@myzillion.com\nCraig
    Lyons Email — craig@myzillion.com\nZillion — https://www.myzillion.com/\nBruce
    Tate — https://twitter.com/redrapids\nBrett Wise — https://twitter.com/brettwise\nGig
    City Elixir — https://www.gigcityelixir.com/\nNervesConf — https://www.nervesconf.com/\nChili’s
    — https://www.chilis.com/\nGodTube — https://www.godtube.com/\nMagic: The Gathering
    — https://magic.wizards.com/en\nScryfall — https://scryfall.com/\nCode BEAM SF
    Talk — https://www.youtube.com/watch?v=XgOJQAK6iHI\nEvernote — https://evernote.com/\nNerves
    — https://www.nerves-project.org/\n‘Repository and Services Pattern in a Multilayered
    architecture’ — https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\nA
    Handful of Stars — https://boardgamegeek.com/boardgame/197320/handful-stars\nA
    Few Acres Of Snow — https://boardgamegeek.com/boardgame/79828/few-acres-snow Special
    Guest: Anna Sherman.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+oXpUq12b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cb1796f-017c-4f06-bd10-9cbf85fff404.mp3
    length: '51319210'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'People in the industry should not be bogged down by failure. It’s a
      feature and not a bug. Today Anna Sherman talks about why the tech scene in
      Chattanooga is exploding and her journey into programming. '
    duration: '35:16'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cb1796f-017c-4f06-bd10-9cbf85fff404/cover.jpg?v=1
    summary: "\n        <p>Even with the most programming experience in the world,
      coding still involves a lot of trial and error. People getting started in the
      industry should not become bogged down by failure. Because in the end, it’s
      a feature and not a bug. That’s one of Zillion developer Anna Sherman’s key
      messages this episode. We open our discussion with Anna by talking about living
      in Chattanooga, AKA, Gig City. She talks about why the tech scene there is exploding
      before diving into her journey into programming. Having created her own personal
      coding boot camp, she opens up about what she did to land her first software
      job within only two months of looking. After discussing her early working experiences,
      we explore her work at Zillion, along with her side projects. We then touch
      on what Anna does to expand her skillset and develop herself as a professional,
      using a style guide and ‘lunch and learns’ to update her team, and we hear the
      elevator pitch for Anna’s Code BEAM San Francisco talk. Anna shares her take
      on architecture and design, as well as the importance of domain-driven design
      in keeping your team aligned with what they’re building. Near the end of the
      episode, we talk about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’
      and why failure is an important part of coding. Tune in to hear more of Anna’s
      insights on change, failure, and living in Gig City.  </p>\n\n<p>Key Points
      From This Episode:</p>\n\n<ul>\n<li>Fast internet and the great outdoors; hear
      why Chattanooga has become a tech hub.</li>\n<li>Anna shares her love of math
      and how she got into programming.</li>\n<li>Creating your own boot camp and
      becoming a self-taught coder.</li>\n<li>How Anna landed her first gig, just
      two months after learning code.</li>\n<li>Exploring Anna’s first job at Sovee,
      a machine translation company.</li>\n<li>What side projects Anna is working
      on and how they help her Magic: The Gathering games.</li>\n<li>How Anna expands
      her skill set and develops herself as a professional.</li>\n<li>Hear Anna’s
      elevator pitch for the talk she gave at Code BEAM San Francisco.</li>\n<li>What
      architecture, design, and domain-driven design mean to Anna. </li>\n<li>Using
      a style guide and ‘lunch and learns’ to help your team understand patterns.</li>\n<li>Details
      on how Anna’s style guide keeps her team informed. </li>\n<li>The virtues of
      being a ‘physlistcler;’ anchoring your workflow to a physical list. </li>\n<li>Why
      failure is a key part of coding and the idea that anyone can learn to code.</li>\n<li>We
      close the episode by chatting about Anna’s favorite board games. </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAnna Sherman on LinkedIn —
      <a href=\"https://www.linkedin.com/in/anna-sherman-54289372/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>\nAnna
      Sherman on Twitter — <a href=\"https://twitter.com/cavewoman90\" rel=\"nofollow\">https://twitter.com/cavewoman90</a><br>\nAnna
      Sherman on Instagram — <a href=\"https://www.instagram.com/annasherman100816/\"
      rel=\"nofollow\">https://www.instagram.com/annasherman100816/</a><br>\nAnna
      Sherman Email — <a href=\"mailto:anna@myzillion.com\" rel=\"nofollow\">anna@myzillion.com</a><br>\nCraig
      Lyons Email — <a href=\"mailto:craig@myzillion.com\" rel=\"nofollow\">craig@myzillion.com</a><br>\nZillion
      — <a href=\"https://www.myzillion.com/\" rel=\"nofollow\">https://www.myzillion.com/</a><br>\nBruce
      Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBrett
      Wise — <a href=\"https://twitter.com/brettwise\" rel=\"nofollow\">https://twitter.com/brettwise</a><br>\nGig
      City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nNervesConf
      — <a href=\"https://www.nervesconf.com/\" rel=\"nofollow\">https://www.nervesconf.com/</a><br>\nChili’s
      — <a href=\"https://www.chilis.com/\" rel=\"nofollow\">https://www.chilis.com/</a><br>\nGodTube
      — <a href=\"https://www.godtube.com/\" rel=\"nofollow\">https://www.godtube.com/</a><br>\nMagic:
      The Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nScryfall
      — <a href=\"https://scryfall.com/\" rel=\"nofollow\">https://scryfall.com/</a><br>\nCode
      BEAM SF Talk — <a href=\"https://www.youtube.com/watch?v=XgOJQAK6iHI\" rel=\"nofollow\">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>\nEvernote
      — <a href=\"https://evernote.com/\" rel=\"nofollow\">https://evernote.com/</a><br>\nNerves
      — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\n‘Repository
      and Services Pattern in a Multilayered architecture’ — <a href=\"https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\"
      rel=\"nofollow\">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>\nA
      Handful of Stars — <a href=\"https://boardgamegeek.com/boardgame/197320/handful-stars\"
      rel=\"nofollow\">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>\nA
      Few Acres Of Snow — <a href=\"https://boardgamegeek.com/boardgame/79828/few-acres-snow\"
      rel=\"nofollow\">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special
      Guest: Anna Sherman.</p>\n      "
  contentEncoded: "\n        <p>Even with the most programming experience in the world,
    coding still involves a lot of trial and error. People getting started in the
    industry should not become bogged down by failure. Because in the end, it’s a
    feature and not a bug. That’s one of Zillion developer Anna Sherman’s key messages
    this episode. We open our discussion with Anna by talking about living in Chattanooga,
    AKA, Gig City. She talks about why the tech scene there is exploding before diving
    into her journey into programming. Having created her own personal coding boot
    camp, she opens up about what she did to land her first software job within only
    two months of looking. After discussing her early working experiences, we explore
    her work at Zillion, along with her side projects. We then touch on what Anna
    does to expand her skillset and develop herself as a professional, using a style
    guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch
    for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture
    and design, as well as the importance of domain-driven design in keeping your
    team aligned with what they’re building. Near the end of the episode, we talk
    about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why
    failure is an important part of coding. Tune in to hear more of Anna’s insights
    on change, failure, and living in Gig City.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Fast
    internet and the great outdoors; hear why Chattanooga has become a tech hub.</li>\n<li>Anna
    shares her love of math and how she got into programming.</li>\n<li>Creating your
    own boot camp and becoming a self-taught coder.</li>\n<li>How Anna landed her
    first gig, just two months after learning code.</li>\n<li>Exploring Anna’s first
    job at Sovee, a machine translation company.</li>\n<li>What side projects Anna
    is working on and how they help her Magic: The Gathering games.</li>\n<li>How
    Anna expands her skill set and develops herself as a professional.</li>\n<li>Hear
    Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.</li>\n<li>What
    architecture, design, and domain-driven design mean to Anna. </li>\n<li>Using
    a style guide and ‘lunch and learns’ to help your team understand patterns.</li>\n<li>Details
    on how Anna’s style guide keeps her team informed. </li>\n<li>The virtues of being
    a ‘physlistcler;’ anchoring your workflow to a physical list. </li>\n<li>Why failure
    is a key part of coding and the idea that anyone can learn to code.</li>\n<li>We
    close the episode by chatting about Anna’s favorite board games. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nAnna Sherman on LinkedIn — <a
    href=\"https://www.linkedin.com/in/anna-sherman-54289372/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>\nAnna
    Sherman on Twitter — <a href=\"https://twitter.com/cavewoman90\" rel=\"nofollow\">https://twitter.com/cavewoman90</a><br>\nAnna
    Sherman on Instagram — <a href=\"https://www.instagram.com/annasherman100816/\"
    rel=\"nofollow\">https://www.instagram.com/annasherman100816/</a><br>\nAnna Sherman
    Email — <a href=\"mailto:anna@myzillion.com\" rel=\"nofollow\">anna@myzillion.com</a><br>\nCraig
    Lyons Email — <a href=\"mailto:craig@myzillion.com\" rel=\"nofollow\">craig@myzillion.com</a><br>\nZillion
    — <a href=\"https://www.myzillion.com/\" rel=\"nofollow\">https://www.myzillion.com/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nBrett
    Wise — <a href=\"https://twitter.com/brettwise\" rel=\"nofollow\">https://twitter.com/brettwise</a><br>\nGig
    City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nNervesConf
    — <a href=\"https://www.nervesconf.com/\" rel=\"nofollow\">https://www.nervesconf.com/</a><br>\nChili’s
    — <a href=\"https://www.chilis.com/\" rel=\"nofollow\">https://www.chilis.com/</a><br>\nGodTube
    — <a href=\"https://www.godtube.com/\" rel=\"nofollow\">https://www.godtube.com/</a><br>\nMagic:
    The Gathering — <a href=\"https://magic.wizards.com/en\" rel=\"nofollow\">https://magic.wizards.com/en</a><br>\nScryfall
    — <a href=\"https://scryfall.com/\" rel=\"nofollow\">https://scryfall.com/</a><br>\nCode
    BEAM SF Talk — <a href=\"https://www.youtube.com/watch?v=XgOJQAK6iHI\" rel=\"nofollow\">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>\nEvernote
    — <a href=\"https://evernote.com/\" rel=\"nofollow\">https://evernote.com/</a><br>\nNerves
    — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\n‘Repository
    and Services Pattern in a Multilayered architecture’ — <a href=\"https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/\"
    rel=\"nofollow\">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>\nA
    Handful of Stars — <a href=\"https://boardgamegeek.com/boardgame/197320/handful-stars\"
    rel=\"nofollow\">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>\nA
    Few Acres Of Snow — <a href=\"https://boardgamegeek.com/boardgame/79828/few-acres-snow\"
    rel=\"nofollow\">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special
    Guest: Anna Sherman.</p>\n      "
- title: 'Devon Estes on how Architecture Is a Myth and One-file Design '
  slug: s4e20-estes
  link: https://smartlogic.io/podcast/elixir-wizards/s4e20-estes
  guid: b59ac59d-736e-4581-b0c0-e04adeb1ba91
  pubDate: Thu, 01 Oct 2020 06:00:00 -0400
  pubDateFriendly: October  1, 2020
  description: "There is no difference between architecture and design. It's all engineering
    and creating a distinction between the two is a way for someone to get paid more
    and have a different title. That hot take comes from Devon Estes, today’s guest,
    who provides a novel way of seeing design and architecture. We open the episode
    by diving straight into the topic of design, with Devon exploring how good design
    might be less important than developing the right toolset. We then talk about
    how language servers can help you effortlessly define functions, meaning that
    in some cases, it doesn’t matter where you put your code — even if it’s all in
    one file. After touching on game-changing innovations in the world of design,
    such as GTP-3, Devon shares how our design options are limited by our editors.
    Considering the impact of human error on software, we discuss the value of convention
    and rulesets. As Elixir apps or apps that use Phoenix are open-ended, Devon talks
    about his middle-ground solution to help teams overcome this challenge. Near the
    end of the episode, Devon chats about why design and architecture, as elements
    of engineering, are different levels of abstraction and not separate entities.
    Following this, he highlights how domain-driven design can be used to avoid confusion
    and bugs by ensuring that people across departments all use the same language.
    Tune in to hear more of Devon’s unique and well-pondered insights. \nKey Points
    From This Episode:\nDevon’s take on design; “Where things go doesn’t matter if
    you have a language server.” \nDefining what a language server is and its incredible
    usefulness. \nHow ‘go to definition’ functions could render much of design as
    unnecessary. \nGame-changing innovations that will change the world of design.\nFunctional
    versus object-orientated languages and the challenge of finding files.\nWhy Devon
    uses Vim and what makes it attractive to other programmers.\nHow Elixir apps can
    be a challenge due to their open-ended nature.\nCreating primary and secondary
    contexts to give Phoenix more structure. \nThe human factor; why people are often
    the cause of many coding issues.\nHear how Devon has been structuring his Absinthe
    projects.\nDevon shares details about his Absinthe testing library, Assertions.\nDevon’s
    hot take that there is no difference between architecture and design.\nThe importance
    of domain-driven design in avoiding confusion and bugs.\nWhy engineers need to
    push to ensure the same language is used across departments. \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nDevon Estes —  http://www.devonestes.com/\nDevon
    Estes on GitHub — https://github.com/devonestes\nDevon Estes on Twitter — https://twitter.com/devoncestes\nJake
    Becker on GitHub — https://github.com/JakeBecker\nGPT-3 — https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\nElixir
    Is — https://github.com/elixir-lsp/elixir-ls\nAle — https://github.com/dense-analysis/ale\nMOO
    — https://lisdude.com/moo/\nErlang code — https://erlang.org/doc/man/code.html\n‘A
    Proposal for Some New Rules for Phoenix Contexts’ — http://www.devonestes.com/a-proposal-for-context-rules\n‘A
    proposal for an Absinthe application structure’ — http://www.devonestes.com/a-proposal-for-absinthe-project-structure\nElixir
    Radar — https://elixir-radar.com/\nAssertions.Absinthe — https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\nElixirConf
    EU — https://www.elixirconf.eu/\n‘Elixir testing from beginner to expert’ — https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/
    Special Guest: Devon Estes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+K3IqkLnV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b59ac59d-736e-4581-b0c0-e04adeb1ba91.mp3
    length: '70507362'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'There''s no difference between architecture and design. It''s all engineering
      and creating a distinction between the two. Today''s guest, Devon Estes provides
      a novel way of seeing design and architecture. '
    duration: '48:36'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b59ac59d-736e-4581-b0c0-e04adeb1ba91/cover.jpg?v=1
    summary: "\n        <p>There is no difference between architecture and design.
      It&#39;s all engineering and creating a distinction between the two is a way
      for someone to get paid more and have a different title. That hot take comes
      from Devon Estes, today’s guest, who provides a novel way of seeing design and
      architecture. We open the episode by diving straight into the topic of design,
      with Devon exploring how good design might be less important than developing
      the right toolset. We then talk about how language servers can help you effortlessly
      define functions, meaning that in some cases, it doesn’t matter where you put
      your code — even if it’s all in one file. After touching on game-changing innovations
      in the world of design, such as GTP-3, Devon shares how our design options are
      limited by our editors. Considering the impact of human error on software, we
      discuss the value of convention and rulesets. As Elixir apps or apps that use
      Phoenix are open-ended, Devon talks about his middle-ground solution to help
      teams overcome this challenge. Near the end of the episode, Devon chats about
      why design and architecture, as elements of engineering, are different levels
      of abstraction and not separate entities. Following this, he highlights how
      domain-driven design can be used to avoid confusion and bugs by ensuring that
      people across departments all use the same language. Tune in to hear more of
      Devon’s unique and well-pondered insights. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Devon’s
      take on design; “Where things go doesn’t matter if you have a language server.”
      </li>\n<li>Defining what a language server is and its incredible usefulness.
      </li>\n<li>How ‘go to definition’ functions could render much of design as unnecessary.
      </li>\n<li>Game-changing innovations that will change the world of design.</li>\n<li>Functional
      versus object-orientated languages and the challenge of finding files.</li>\n<li>Why
      Devon uses Vim and what makes it attractive to other programmers.</li>\n<li>How
      Elixir apps can be a challenge due to their open-ended nature.</li>\n<li>Creating
      primary and secondary contexts to give Phoenix more structure. </li>\n<li>The
      human factor; why people are often the cause of many coding issues.</li>\n<li>Hear
      how Devon has been structuring his Absinthe projects.</li>\n<li>Devon shares
      details about his Absinthe testing library, Assertions.</li>\n<li>Devon’s hot
      take that there is no difference between architecture and design.</li>\n<li>The
      importance of domain-driven design in avoiding confusion and bugs.</li>\n<li>Why
      engineers need to push to ensure the same language is used across departments.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nDevon Estes —  <a href=\"http://www.devonestes.com/\" rel=\"nofollow\">http://www.devonestes.com/</a><br>\nDevon
      Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\nDevon
      Estes on Twitter — <a href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a><br>\nJake
      Becker on GitHub — <a href=\"https://github.com/JakeBecker\" rel=\"nofollow\">https://github.com/JakeBecker</a><br>\nGPT-3
      — <a href=\"https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\"
      rel=\"nofollow\">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>\nElixir
      Is — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAle
      — <a href=\"https://github.com/dense-analysis/ale\" rel=\"nofollow\">https://github.com/dense-analysis/ale</a><br>\nMOO
      — <a href=\"https://lisdude.com/moo/\" rel=\"nofollow\">https://lisdude.com/moo/</a><br>\nErlang
      code — <a href=\"https://erlang.org/doc/man/code.html\" rel=\"nofollow\">https://erlang.org/doc/man/code.html</a><br>\n‘A
      Proposal for Some New Rules for Phoenix Contexts’ — <a href=\"http://www.devonestes.com/a-proposal-for-context-rules\"
      rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-context-rules</a><br>\n‘A
      proposal for an Absinthe application structure’ — <a href=\"http://www.devonestes.com/a-proposal-for-absinthe-project-structure\"
      rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>\nElixir
      Radar — <a href=\"https://elixir-radar.com/\" rel=\"nofollow\">https://elixir-radar.com/</a><br>\nAssertions.Absinthe
      — <a href=\"https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\"
      rel=\"nofollow\">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>\nElixirConf
      EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\n‘Elixir
      testing from beginner to expert’ — <a href=\"https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/\"
      rel=\"nofollow\">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special
      Guest: Devon Estes.</p>\n      "
  contentEncoded: "\n        <p>There is no difference between architecture and design.
    It&#39;s all engineering and creating a distinction between the two is a way for
    someone to get paid more and have a different title. That hot take comes from
    Devon Estes, today’s guest, who provides a novel way of seeing design and architecture.
    We open the episode by diving straight into the topic of design, with Devon exploring
    how good design might be less important than developing the right toolset. We
    then talk about how language servers can help you effortlessly define functions,
    meaning that in some cases, it doesn’t matter where you put your code — even if
    it’s all in one file. After touching on game-changing innovations in the world
    of design, such as GTP-3, Devon shares how our design options are limited by our
    editors. Considering the impact of human error on software, we discuss the value
    of convention and rulesets. As Elixir apps or apps that use Phoenix are open-ended,
    Devon talks about his middle-ground solution to help teams overcome this challenge.
    Near the end of the episode, Devon chats about why design and architecture, as
    elements of engineering, are different levels of abstraction and not separate
    entities. Following this, he highlights how domain-driven design can be used to
    avoid confusion and bugs by ensuring that people across departments all use the
    same language. Tune in to hear more of Devon’s unique and well-pondered insights.
    </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Devon’s take on design;
    “Where things go doesn’t matter if you have a language server.” </li>\n<li>Defining
    what a language server is and its incredible usefulness. </li>\n<li>How ‘go to
    definition’ functions could render much of design as unnecessary. </li>\n<li>Game-changing
    innovations that will change the world of design.</li>\n<li>Functional versus
    object-orientated languages and the challenge of finding files.</li>\n<li>Why
    Devon uses Vim and what makes it attractive to other programmers.</li>\n<li>How
    Elixir apps can be a challenge due to their open-ended nature.</li>\n<li>Creating
    primary and secondary contexts to give Phoenix more structure. </li>\n<li>The
    human factor; why people are often the cause of many coding issues.</li>\n<li>Hear
    how Devon has been structuring his Absinthe projects.</li>\n<li>Devon shares details
    about his Absinthe testing library, Assertions.</li>\n<li>Devon’s hot take that
    there is no difference between architecture and design.</li>\n<li>The importance
    of domain-driven design in avoiding confusion and bugs.</li>\n<li>Why engineers
    need to push to ensure the same language is used across departments. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDevon Estes —  <a href=\"http://www.devonestes.com/\"
    rel=\"nofollow\">http://www.devonestes.com/</a><br>\nDevon Estes on GitHub — <a
    href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\nDevon
    Estes on Twitter — <a href=\"https://twitter.com/devoncestes\" rel=\"nofollow\">https://twitter.com/devoncestes</a><br>\nJake
    Becker on GitHub — <a href=\"https://github.com/JakeBecker\" rel=\"nofollow\">https://github.com/JakeBecker</a><br>\nGPT-3
    — <a href=\"https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966\"
    rel=\"nofollow\">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>\nElixir
    Is — <a href=\"https://github.com/elixir-lsp/elixir-ls\" rel=\"nofollow\">https://github.com/elixir-lsp/elixir-ls</a><br>\nAle
    — <a href=\"https://github.com/dense-analysis/ale\" rel=\"nofollow\">https://github.com/dense-analysis/ale</a><br>\nMOO
    — <a href=\"https://lisdude.com/moo/\" rel=\"nofollow\">https://lisdude.com/moo/</a><br>\nErlang
    code — <a href=\"https://erlang.org/doc/man/code.html\" rel=\"nofollow\">https://erlang.org/doc/man/code.html</a><br>\n‘A
    Proposal for Some New Rules for Phoenix Contexts’ — <a href=\"http://www.devonestes.com/a-proposal-for-context-rules\"
    rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-context-rules</a><br>\n‘A
    proposal for an Absinthe application structure’ — <a href=\"http://www.devonestes.com/a-proposal-for-absinthe-project-structure\"
    rel=\"nofollow\">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>\nElixir
    Radar — <a href=\"https://elixir-radar.com/\" rel=\"nofollow\">https://elixir-radar.com/</a><br>\nAssertions.Absinthe
    — <a href=\"https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4\"
    rel=\"nofollow\">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>\nElixirConf
    EU — <a href=\"https://www.elixirconf.eu/\" rel=\"nofollow\">https://www.elixirconf.eu/</a><br>\n‘Elixir
    testing from beginner to expert’ — <a href=\"https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/\"
    rel=\"nofollow\">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special
    Guest: Devon Estes.</p>\n      "
- title: Lizzie Paquette on Compiling, Microliths, and Macros
  slug: s4e19-paquette
  link: https://smartlogic.io/podcast/elixir-wizards/s4e19-paquette
  guid: a61dcf3a-a8e5-45c7-a648-6994628ce9ec
  pubDate: Thu, 24 Sep 2020 06:00:00 -0400
  pubDateFriendly: September 24, 2020
  description: "Imagine being hired into a rocketship startup using Elixir as its
    primary language. And all this, straight out of college. Today, we speak with
    systems software engineer, Lizzie Paquette who works at Brex, the aforementioned
    rocketship. We start our conversation by talking about how Lizzie got into coding
    relatively late in her life, partly due to an ill-fated run-in with Java. She
    shares details about her role at Brex and how the company has evolved. With a
    love of compilers, Lizzie dives into what beginners can do to get into compiling
    before chatting about her top underrated Elixir resources. Following this topic,
    Lizzie discusses her experience liberally implementing macros at Brex — something
    that ended up being detrimental when onboarding new hires. After sharing how she
    develops herself as a professional and coder, Lizzie talks about her involvement
    in Code 2040, a career accelerator and mentorship program. \nReflecting this season’s
    theme, we ask for Lizzie’s take on what architecture, design, and domain-driven
    design means to her. She then reveals her coding process and emphasizes the value
    of creating thorough design docs to avoid bugs. We explore Brex’s architecture,
    how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench
    approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s
    learned from working with Brex’s architecture. \nAfter closing our discussion
    with Lizzie, we open with another edition Pattern Matching with Todd Resudek and
    special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite
    movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights,
    along with more on microliths and macros from Lizzie Paquette.\nKey Points From
    This Episode:\nLizzie shares how she got into coding and her start in the industry.\nHear
    about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir
    community.\nHow novices should approach learning how to code compilers. \nUnderrated
    Elixir resources that Lizzie makes the most out of.\nThe double-edged sword; why
    macros are an incredible yet dangerous tool.\nHow Lizzie develops herself as a
    professional and a coder. \nBoosting inclusivity in the software industry through
    programs like Code 2040.\nLizzie’s take on what architecture, design, and domain-driven
    design mean.\nThe value of design docs in catching bugs and laying out a clear
    process. \nMicroliths, microservices, and the nitty-gritty of Brex’s architecture.
    \nExploring ‘chaos engineering’; testing your system by purposefully creating
    problems.  \nLizzie’s pain points when either using or not using umbrella apps.
    \nWhat Lizzie would do if she could rewrite Brex’s architecture from scratch.
    \nUsing Brex.result to streamline code and handle common return values. \nFor
    this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.\nSophie’s
    journey from liberal arts to learning software at a code boot camp.\nTodd asks
    Sophie about her favorite movies, music, and what Elixir projects excite her.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nLizzie
    Paquette on LinkedIn — https://www.linkedin.com/in/lizzie-paquette/\nLizzie Paquette
    on GitHub — https://github.com/lizziepaquette\nBrex — https://www.brex.com/\nEric
    Meadows Jonssön — https://twitter.com/emjii\nHaskell — https://www.haskell.org/\nColumbia
    University — https://www.columbia.edu/\nClash — https://clash-lang.org/\nFramer
    — https://www.framer.com/\nElixir Protobuf on GitHub — https://github.com/brexhq/protobuf-elixir\nTony612
    on GitHub — https://github.com/tony612\nElixir Syntax Reference — https://hexdocs.pm/elixir/syntax-reference.html\nMetaprogramming
    Elixir: Write Less Code, Get More Done (and Have Fun!) — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\nMacros
    in Elixir: Responsible Code Generation — https://www.youtube.com/watch?v=55-X7rSw8M0\nCode
    2040 — http://www.code2040.org/\nErlpack — https://github.com/discord/erlpack\nPrinciples
    of Chaos Engineering — https://principlesofchaos.org/?lang=ENcontent\nREST Fest
    2019 | Lorinda Brandon — https://vimeo.com/364373007\n‘Building a rewards platform
    from scratch’ — https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\nBrex.result
    on GitHub— https://github.com/brexhq/result\nRabbitMQ — https://www.rabbitmq.com/\nNetflix
    Chaos Monkey on GitHub — https://github.com/Netflix/chaosmonkey\nMark Erickson
    — https://brainlid.org/\nJohanna Larsson — https://blog.jola.dev/\nTodd Resudek
    — https://twitter.com/sprsmpl\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nElixir
    School — https://elixirschool.com/en/\nGitHub — https://github.com/\nFlatiron
    School — https://flatironschool.com/\nBarnard College — https://barnard.edu/\nLaw
    and Order — https://www.imdb.com/title/tt0098844/\nSpotify — https://www.spotify.com/\nCeline
    Dion — https://www.celinedion.com/\nHill Street Blues — https://www.imdb.com/title/tt0081873/\nPerry
    Mason — https://en.wikipedia.org/wiki/PerryMason\nMatlock — https://www.imdb.com/title/tt0090481/\nTelemetry
    on GitHub — https://github.com/beam-telemetry/telemetry\nPhoenix LiveView on GitHub
    — https://github.com/phoenixframework/phoenixlive_view Special Guest: Lizzie Paquette.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Y-QFzcSQ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a61dcf3a-a8e5-45c7-a648-6994628ce9ec.mp3
    length: '34861006'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Imagine being hired into a rocketship startup using Elixir as its primary
      language. Today, we speak with Lizzie Paquette, a system software engineer,
      about how she got into coding and her role at Brex.
    duration: '48:24'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a61dcf3a-a8e5-45c7-a648-6994628ce9ec/cover.jpg?v=1
    summary: "\n        <p>Imagine being hired into a rocketship startup using Elixir
      as its primary language. And all this, straight out of college. Today, we speak
      with systems software engineer, Lizzie Paquette who works at Brex, the aforementioned
      rocketship. We start our conversation by talking about how Lizzie got into coding
      relatively late in her life, partly due to an ill-fated run-in with Java. She
      shares details about her role at Brex and how the company has evolved. With
      a love of compilers, Lizzie dives into what beginners can do to get into compiling
      before chatting about her top underrated Elixir resources. Following this topic,
      Lizzie discusses her experience liberally implementing macros at Brex — something
      that ended up being detrimental when onboarding new hires. After sharing how
      she develops herself as a professional and coder, Lizzie talks about her involvement
      in Code 2040, a career accelerator and mentorship program. </p>\n\n<p>Reflecting
      this season’s theme, we ask for Lizzie’s take on what architecture, design,
      and domain-driven design means to her. She then reveals her coding process and
      emphasizes the value of creating thorough design docs to avoid bugs. We explore
      Brex’s architecture, how it makes use of microliths, and applying ‘chaos engineering’
      — a monkey-wrench approach to testing your system. We touch on umbrella apps
      and lessons that Lizzie’s learned from working with Brex’s architecture. </p>\n\n<p>After
      closing our discussion with Lizzie, we open with another edition Pattern Matching
      with Todd Resudek and special guest Sophie DeBenedetto from GitHub. Todd asks
      Sophie about her favorite movies, music, and what Elixir projects excite her.
      Tune in to hear Sophie’s insights, along with more on microliths and macros
      from Lizzie Paquette.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Lizzie
      shares how she got into coding and her start in the industry.</li>\n<li>Hear
      about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir
      community.</li>\n<li>How novices should approach learning how to code compilers.
      </li>\n<li>Underrated Elixir resources that Lizzie makes the most out of.</li>\n<li>The
      double-edged sword; why macros are an incredible yet dangerous tool.</li>\n<li>How
      Lizzie develops herself as a professional and a coder. </li>\n<li>Boosting inclusivity
      in the software industry through programs like Code 2040.</li>\n<li>Lizzie’s
      take on what architecture, design, and domain-driven design mean.</li>\n<li>The
      value of design docs in catching bugs and laying out a clear process. </li>\n<li>Microliths,
      microservices, and the nitty-gritty of Brex’s architecture. </li>\n<li>Exploring
      ‘chaos engineering’; testing your system by purposefully creating problems.<br></li>\n<li>Lizzie’s
      pain points when either using or not using umbrella apps. </li>\n<li>What Lizzie
      would do if she could rewrite Brex’s architecture from scratch. </li>\n<li><p>Using
      Brex.result to streamline code and handle common return values. </p></li>\n<li><p>For
      this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>\n<li><p>Sophie’s
      journey from liberal arts to learning software at a code boot camp.</p></li>\n<li><p>Todd
      asks Sophie about her favorite movies, music, and what Elixir projects excite
      her. </p></li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nLizzie Paquette on LinkedIn — <a href=\"https://www.linkedin.com/in/lizzie-paquette/\"
      rel=\"nofollow\">https://www.linkedin.com/in/lizzie-paquette/</a><br>\nLizzie
      Paquette on GitHub — <a href=\"https://github.com/lizziepaquette\" rel=\"nofollow\">https://github.com/lizziepaquette</a><br>\nBrex
      — <a href=\"https://www.brex.com/\" rel=\"nofollow\">https://www.brex.com/</a><br>\nEric
      Meadows Jonssön — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nColumbia
      University — <a href=\"https://www.columbia.edu/\" rel=\"nofollow\">https://www.columbia.edu/</a><br>\nClash
      — <a href=\"https://clash-lang.org/\" rel=\"nofollow\">https://clash-lang.org/</a><br>\nFramer
      — <a href=\"https://www.framer.com/\" rel=\"nofollow\">https://www.framer.com/</a><br>\nElixir
      Protobuf on GitHub — <a href=\"https://github.com/brexhq/protobuf-elixir\" rel=\"nofollow\">https://github.com/brexhq/protobuf-elixir</a><br>\nTony612
      on GitHub — <a href=\"https://github.com/tony612\" rel=\"nofollow\">https://github.com/tony612</a><br>\nElixir
      Syntax Reference — <a href=\"https://hexdocs.pm/elixir/syntax-reference.html\"
      rel=\"nofollow\">https://hexdocs.pm/elixir/syntax-reference.html</a><br>\nMetaprogramming
      Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
      rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nMacros
      in Elixir: Responsible Code Generation — <a href=\"https://www.youtube.com/watch?v=55-X7rSw8M0\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>\nCode 2040
      — <a href=\"http://www.code2040.org/\" rel=\"nofollow\">http://www.code2040.org/</a><br>\nErlpack
      — <a href=\"https://github.com/discord/erlpack\" rel=\"nofollow\">https://github.com/discord/erlpack</a><br>\nPrinciples
      of Chaos Engineering — <a href=\"https://principlesofchaos.org/?lang=ENcontent\"
      rel=\"nofollow\">https://principlesofchaos.org/?lang=ENcontent</a><br>\nREST
      Fest 2019 | Lorinda Brandon — <a href=\"https://vimeo.com/364373007\" rel=\"nofollow\">https://vimeo.com/364373007</a><br>\n‘Building
      a rewards platform from scratch’ — <a href=\"https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\"
      rel=\"nofollow\">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>\nBrex.result
      on GitHub— <a href=\"https://github.com/brexhq/result\" rel=\"nofollow\">https://github.com/brexhq/result</a><br>\nRabbitMQ
      — <a href=\"https://www.rabbitmq.com/\" rel=\"nofollow\">https://www.rabbitmq.com/</a><br>\nNetflix
      Chaos Monkey on GitHub — <a href=\"https://github.com/Netflix/chaosmonkey\"
      rel=\"nofollow\">https://github.com/Netflix/chaosmonkey</a><br>\nMark Erickson
      — <a href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a><br>\nJohanna
      Larsson — <a href=\"https://blog.jola.dev/\" rel=\"nofollow\">https://blog.jola.dev/</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nBarnard
      College — <a href=\"https://barnard.edu/\" rel=\"nofollow\">https://barnard.edu/</a><br>\nLaw
      and Order — <a href=\"https://www.imdb.com/title/tt0098844/\" rel=\"nofollow\">https://www.imdb.com/title/tt0098844/</a><br>\nSpotify
      — <a href=\"https://www.spotify.com/\" rel=\"nofollow\">https://www.spotify.com/</a><br>\nCeline
      Dion — <a href=\"https://www.celinedion.com/\" rel=\"nofollow\">https://www.celinedion.com/</a><br>\nHill
      Street Blues — <a href=\"https://www.imdb.com/title/tt0081873/\" rel=\"nofollow\">https://www.imdb.com/title/tt0081873/</a><br>\nPerry
      Mason — <a href=\"https://en.wikipedia.org/wiki/Perry_Mason\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Perry_Mason</a><br>\nMatlock
      — <a href=\"https://www.imdb.com/title/tt0090481/\" rel=\"nofollow\">https://www.imdb.com/title/tt0090481/</a><br>\nTelemetry
      on GitHub — <a href=\"https://github.com/beam-telemetry/telemetry\" rel=\"nofollow\">https://github.com/beam-telemetry/telemetry</a><br>\nPhoenix
      LiveView on GitHub — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special
      Guest: Lizzie Paquette.</p>\n      "
  contentEncoded: "\n        <p>Imagine being hired into a rocketship startup using
    Elixir as its primary language. And all this, straight out of college. Today,
    we speak with systems software engineer, Lizzie Paquette who works at Brex, the
    aforementioned rocketship. We start our conversation by talking about how Lizzie
    got into coding relatively late in her life, partly due to an ill-fated run-in
    with Java. She shares details about her role at Brex and how the company has evolved.
    With a love of compilers, Lizzie dives into what beginners can do to get into
    compiling before chatting about her top underrated Elixir resources. Following
    this topic, Lizzie discusses her experience liberally implementing macros at Brex
    — something that ended up being detrimental when onboarding new hires. After sharing
    how she develops herself as a professional and coder, Lizzie talks about her involvement
    in Code 2040, a career accelerator and mentorship program. </p>\n\n<p>Reflecting
    this season’s theme, we ask for Lizzie’s take on what architecture, design, and
    domain-driven design means to her. She then reveals her coding process and emphasizes
    the value of creating thorough design docs to avoid bugs. We explore Brex’s architecture,
    how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench
    approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s
    learned from working with Brex’s architecture. </p>\n\n<p>After closing our discussion
    with Lizzie, we open with another edition Pattern Matching with Todd Resudek and
    special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite
    movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights,
    along with more on microliths and macros from Lizzie Paquette.</p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Lizzie shares how she got into coding and
    her start in the industry.</li>\n<li>Hear about Lizzie’s role at Brex, a rocketship
    startup and key member of the Elixir community.</li>\n<li>How novices should approach
    learning how to code compilers. </li>\n<li>Underrated Elixir resources that Lizzie
    makes the most out of.</li>\n<li>The double-edged sword; why macros are an incredible
    yet dangerous tool.</li>\n<li>How Lizzie develops herself as a professional and
    a coder. </li>\n<li>Boosting inclusivity in the software industry through programs
    like Code 2040.</li>\n<li>Lizzie’s take on what architecture, design, and domain-driven
    design mean.</li>\n<li>The value of design docs in catching bugs and laying out
    a clear process. </li>\n<li>Microliths, microservices, and the nitty-gritty of
    Brex’s architecture. </li>\n<li>Exploring ‘chaos engineering’; testing your system
    by purposefully creating problems.<br></li>\n<li>Lizzie’s pain points when either
    using or not using umbrella apps. </li>\n<li>What Lizzie would do if she could
    rewrite Brex’s architecture from scratch. </li>\n<li><p>Using Brex.result to streamline
    code and handle common return values. </p></li>\n<li><p>For this edition of Pattern
    Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>\n<li><p>Sophie’s
    journey from liberal arts to learning software at a code boot camp.</p></li>\n<li><p>Todd
    asks Sophie about her favorite movies, music, and what Elixir projects excite
    her. </p></li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nLizzie Paquette on LinkedIn — <a href=\"https://www.linkedin.com/in/lizzie-paquette/\"
    rel=\"nofollow\">https://www.linkedin.com/in/lizzie-paquette/</a><br>\nLizzie
    Paquette on GitHub — <a href=\"https://github.com/lizziepaquette\" rel=\"nofollow\">https://github.com/lizziepaquette</a><br>\nBrex
    — <a href=\"https://www.brex.com/\" rel=\"nofollow\">https://www.brex.com/</a><br>\nEric
    Meadows Jonssön — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nColumbia
    University — <a href=\"https://www.columbia.edu/\" rel=\"nofollow\">https://www.columbia.edu/</a><br>\nClash
    — <a href=\"https://clash-lang.org/\" rel=\"nofollow\">https://clash-lang.org/</a><br>\nFramer
    — <a href=\"https://www.framer.com/\" rel=\"nofollow\">https://www.framer.com/</a><br>\nElixir
    Protobuf on GitHub — <a href=\"https://github.com/brexhq/protobuf-elixir\" rel=\"nofollow\">https://github.com/brexhq/protobuf-elixir</a><br>\nTony612
    on GitHub — <a href=\"https://github.com/tony612\" rel=\"nofollow\">https://github.com/tony612</a><br>\nElixir
    Syntax Reference — <a href=\"https://hexdocs.pm/elixir/syntax-reference.html\"
    rel=\"nofollow\">https://hexdocs.pm/elixir/syntax-reference.html</a><br>\nMetaprogramming
    Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
    rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nMacros
    in Elixir: Responsible Code Generation — <a href=\"https://www.youtube.com/watch?v=55-X7rSw8M0\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>\nCode 2040
    — <a href=\"http://www.code2040.org/\" rel=\"nofollow\">http://www.code2040.org/</a><br>\nErlpack
    — <a href=\"https://github.com/discord/erlpack\" rel=\"nofollow\">https://github.com/discord/erlpack</a><br>\nPrinciples
    of Chaos Engineering — <a href=\"https://principlesofchaos.org/?lang=ENcontent\"
    rel=\"nofollow\">https://principlesofchaos.org/?lang=ENcontent</a><br>\nREST Fest
    2019 | Lorinda Brandon — <a href=\"https://vimeo.com/364373007\" rel=\"nofollow\">https://vimeo.com/364373007</a><br>\n‘Building
    a rewards platform from scratch’ — <a href=\"https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658\"
    rel=\"nofollow\">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>\nBrex.result
    on GitHub— <a href=\"https://github.com/brexhq/result\" rel=\"nofollow\">https://github.com/brexhq/result</a><br>\nRabbitMQ
    — <a href=\"https://www.rabbitmq.com/\" rel=\"nofollow\">https://www.rabbitmq.com/</a><br>\nNetflix
    Chaos Monkey on GitHub — <a href=\"https://github.com/Netflix/chaosmonkey\" rel=\"nofollow\">https://github.com/Netflix/chaosmonkey</a><br>\nMark
    Erickson — <a href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a><br>\nJohanna
    Larsson — <a href=\"https://blog.jola.dev/\" rel=\"nofollow\">https://blog.jola.dev/</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nBarnard
    College — <a href=\"https://barnard.edu/\" rel=\"nofollow\">https://barnard.edu/</a><br>\nLaw
    and Order — <a href=\"https://www.imdb.com/title/tt0098844/\" rel=\"nofollow\">https://www.imdb.com/title/tt0098844/</a><br>\nSpotify
    — <a href=\"https://www.spotify.com/\" rel=\"nofollow\">https://www.spotify.com/</a><br>\nCeline
    Dion — <a href=\"https://www.celinedion.com/\" rel=\"nofollow\">https://www.celinedion.com/</a><br>\nHill
    Street Blues — <a href=\"https://www.imdb.com/title/tt0081873/\" rel=\"nofollow\">https://www.imdb.com/title/tt0081873/</a><br>\nPerry
    Mason — <a href=\"https://en.wikipedia.org/wiki/Perry_Mason\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Perry_Mason</a><br>\nMatlock
    — <a href=\"https://www.imdb.com/title/tt0090481/\" rel=\"nofollow\">https://www.imdb.com/title/tt0090481/</a><br>\nTelemetry
    on GitHub — <a href=\"https://github.com/beam-telemetry/telemetry\" rel=\"nofollow\">https://github.com/beam-telemetry/telemetry</a><br>\nPhoenix
    LiveView on GitHub — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special
    Guest: Lizzie Paquette.</p>\n      "
- title: 'Eric Steen on Neuroevolution in AI '
  slug: s4e18-steen
  link: https://smartlogic.io/podcast/elixir-wizards/s4e18-steen
  guid: 7070efa5-519a-4d9b-ac5a-75cfc1882a31
  pubDate: Thu, 17 Sep 2020 06:00:00 -0400
  pubDateFriendly: September 17, 2020
  description: "Building a sophisticated AI that can evolve to fit our vast and diverse
    needs is a Herculean challenge. Today we speak with senior engineer Eric Steen
    about Automata, his experimental Elixir project that uses neuroevolution and cutting
    edge theory to create a multi-agent behavior tree — or really good AI in the common
    tongue. But before we tap into that rich topic, we talk with Eric about tech burnout,
    his background, and why Elixir is an excellent language for writing modern software.
    He then unpacks AI concepts like the need to develop backpropagation in your system,
    and the value of “neural diversity,” and Markov decision processes. \nAfter Eric
    gives his take on architecture versus design and the place of domain-driven design,
    we discuss Automata. A key breakthrough, Eric shares his enthusiasm for ‘novelty
    search,’ where machines learn from a variety of new behaviors and searches, as
    opposed to completing one task at a time. We touch on Automata’s progress, Eric’s
    long-term approach, and what his project might be used for. Near the end of our
    interview, we chat about CryptoWise, a collaborative analysis platform for cryptocurrency.
    \nTodd Resudek then opens with another edition of Pattern Matching, where he interviews
    Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
    and music that he enjoys, and the projects that excite him. Tune in to hear more
    about both Michał and neuroevolution in AI.\nKey Points From This Episode:\nExperiencing
    tech burnout and challenges around algorithms rendering you redundant.\nHear about
    Eric’s programming background and shifts in the industry. \nBackpropagation and
    using Elixir to build a neural evolutionary system.\nHow Markov decision processes
    help systems choose between possible actions. \nEric’s take on architecture versus
    design and the place of domain-driven design.\nExploring Automata — Eric’s ambitious
    multi-agent behavior tree.\nThe importance of neurodiversity when building AIs;
    they need to adapt to many needs. \nNovelty search; why learn through one task
    when you can learn through a variety of tasks at the same time?\nAutomata’s practical
    applications and why Eric sees it as a long-term project.\nEric shares a progress
    report on his work and using design processes like Sprint. \nWhat Eric would like
    people to use Automata for. \nA sense that Elixir is gaining in popularity within
    Silicon Valley.\nEric gives an elevator-pitch for CryptoWise, a collaborative
    analysis platform for cryptocurrency.\nTodd Resudek interviews Michał Muskała
    on another edition of Pattern Matching.\nMichał shares his background and his
    move from Poland to London. \nMovies and music that Michał enjoys, and details
    on projects that excite him.\nDifferences between Erlang and Elixir and why both
    communities would benefit from working together.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nEric Steen on LinkedIn — https://www.linkedin.com/in/ericsteen1/\nEric
    Steen — https://twitter.com/thesteener\nWebflow — https://webflow.com/\nAutomata
    GitHub — https://github.com/upstarter/automata\nAutomata on Slack — https://join.slack.com/t/automata-project/sharedinvite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\nCryptoWise
    — https://www.cryptowise.ai/\nHippo Insurance — https://www.hippo.com/\nCarl Hewitt
    — https://en.wikipedia.org/wiki/CarlHewitt\nStanford University — https://www.stanford.edu/\nMIT
    — https://web.mit.edu/\nActor Model — https://en.wikipedia.org/wiki/Actormodel\nMarvin
    Minsky — http://web.media.mit.edu/~minsky/\nTensorflex on GitHub— https://github.com/anshuman23/tensorflex\nMatrex
    on GitHub — https://github.com/versilov/matrex \nHandbook of Neuroevolution Through
    Erlang — \nhttps://www.springer.com/gp/book/9781461444626\nMarkov Decision Process
    — https://en.wikipedia.org/wiki/Markovdecisionprocess\nAmazon Web Services — https://aws.amazon.com/\nThe
    Little Elixir & OTP Guidebook — https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\nElon
    Musk — https://www.forbes.com/profile/elon-musk/\nWelcome to the Era of Deep Neuroevolution
    — https://eng.uber.com/deep-neuroevolution/\nKenneth O. Stanley — https://www.cs.ucf.edu/~kstanley/\nWhy
    Greatness Cannot Be Planned: The Myth of the Objective — https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\nUniversity
    of Florida — https://www.ufl.edu/\nUber Air — https://www.uber.com/us/es/elevate/\nJeff
    Bezos — https://www.forbes.com/profile/jeff-bezos/\nSprint — https://www.thesprintbook.com/
    \nAdobe — https://www.adobe.com/\nHorde — https://www.horde.org/development/\nLibcluster
    on GitHub — https://github.com/dsteinberg/libcluster\nSwift for Tensorflow — https://www.tensorflow.org/swift\nTriplebyte
    Blog — https://triplebyte.com/blog\nEquiTrader — https://coinmarketcap.com/currencies/equitrader/
    \nBloXroute Labs — https://bloxroute.com/\nHolochain — https://holochain.org/\nMichał
    Muskała on GitHub — https://github.com/michalmuskala\nJason on GitHub — https://github.com/michalmuskala/jason\nTodd
    Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek/\nWhatsapp — https://www.whatsapp.com/\nCERN
    — https://home.cern/\nRalph Kaminski — https://ralphkaminski.com/\nJayme Edwards
    — https://jaymeedwards.com/ Special Guest: Eric Steen.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+XcIINcx4
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7070efa5-519a-4d9b-ac5a-75cfc1882a31.mp3
    length: '71308642'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Today we speak with Eric Steen about Automata, his Elixir project that
      uses neuroevolution and cutting edge theory to create a multi-agent behavior
      tree — otherwise known as really good AI.
    duration: '49:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7070efa5-519a-4d9b-ac5a-75cfc1882a31/cover.jpg?v=1
    summary: "\n        <p>Building a sophisticated AI that can evolve to fit our
      vast and diverse needs is a Herculean challenge. Today we speak with senior
      engineer Eric Steen about Automata, his experimental Elixir project that uses
      neuroevolution and cutting edge theory to create a multi-agent behavior tree
      — or really good AI in the common tongue. But before we tap into that rich topic,
      we talk with Eric about tech burnout, his background, and why Elixir is an excellent
      language for writing modern software. He then unpacks AI concepts like the need
      to develop backpropagation in your system, and the value of “neural diversity,”
      and Markov decision processes. </p>\n\n<p>After Eric gives his take on architecture
      versus design and the place of domain-driven design, we discuss Automata. A
      key breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines
      learn from a variety of new behaviors and searches, as opposed to completing
      one task at a time. We touch on Automata’s progress, Eric’s long-term approach,
      and what his project might be used for. Near the end of our interview, we chat
      about CryptoWise, a collaborative analysis platform for cryptocurrency. </p>\n\n<p>Todd
      Resudek then opens with another edition of Pattern Matching, where he interviews
      Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
      and music that he enjoys, and the projects that excite him. Tune in to hear
      more about both Michał and neuroevolution in AI.</p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>Experiencing tech burnout and challenges around algorithms
      rendering you redundant.</li>\n<li>Hear about Eric’s programming background
      and shifts in the industry. </li>\n<li>Backpropagation and using Elixir to build
      a neural evolutionary system.</li>\n<li>How Markov decision processes help systems
      choose between possible actions. </li>\n<li>Eric’s take on architecture versus
      design and the place of domain-driven design.</li>\n<li>Exploring Automata —
      Eric’s ambitious multi-agent behavior tree.</li>\n<li>The importance of neurodiversity
      when building AIs; they need to adapt to many needs. </li>\n<li>Novelty search;
      why learn through one task when you can learn through a variety of tasks at
      the same time?</li>\n<li>Automata’s practical applications and why Eric sees
      it as a long-term project.</li>\n<li>Eric shares a progress report on his work
      and using design processes like Sprint. </li>\n<li>What Eric would like people
      to use Automata for. </li>\n<li>A sense that Elixir is gaining in popularity
      within Silicon Valley.</li>\n<li>Eric gives an elevator-pitch for CryptoWise,
      a collaborative analysis platform for cryptocurrency.</li>\n<li>Todd Resudek
      interviews Michał Muskała on another edition of Pattern Matching.</li>\n<li>Michał
      shares his background and his move from Poland to London. </li>\n<li>Movies
      and music that Michał enjoys, and details on projects that excite him.</li>\n<li>Differences
      between Erlang and Elixir and why both communities would benefit from working
      together.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nEric Steen on LinkedIn — <a href=\"https://www.linkedin.com/in/ericsteen1/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ericsteen1/</a><br>\nEric Steen
      — <a href=\"https://twitter.com/the_steener\" rel=\"nofollow\">https://twitter.com/the_steener</a><br>\nWebflow
      — <a href=\"https://webflow.com/\" rel=\"nofollow\">https://webflow.com/</a><br>\nAutomata
      GitHub — <a href=\"https://github.com/upstarter/automata\" rel=\"nofollow\">https://github.com/upstarter/automata</a><br>\nAutomata
      on Slack — <a href=\"https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\"
      rel=\"nofollow\">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>\nCryptoWise
      — <a href=\"https://www.cryptowise.ai/\" rel=\"nofollow\">https://www.cryptowise.ai/</a><br>\nHippo
      Insurance — <a href=\"https://www.hippo.com/\" rel=\"nofollow\">https://www.hippo.com/</a><br>\nCarl
      Hewitt — <a href=\"https://en.wikipedia.org/wiki/Carl_Hewitt\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>\nStanford
      University — <a href=\"https://www.stanford.edu/\" rel=\"nofollow\">https://www.stanford.edu/</a><br>\nMIT
      — <a href=\"https://web.mit.edu/\" rel=\"nofollow\">https://web.mit.edu/</a><br>\nActor
      Model — <a href=\"https://en.wikipedia.org/wiki/Actor_model\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Actor_model</a><br>\nMarvin
      Minsky — <a href=\"http://web.media.mit.edu/%7Eminsky/\" rel=\"nofollow\">http://web.media.mit.edu/~minsky/</a><br>\nTensorflex
      on GitHub— <a href=\"https://github.com/anshuman23/tensorflex\" rel=\"nofollow\">https://github.com/anshuman23/tensorflex</a><br>\nMatrex
      on GitHub — <a href=\"https://github.com/versilov/matrex\" rel=\"nofollow\">https://github.com/versilov/matrex</a>
      <br>\nHandbook of Neuroevolution Through Erlang — <br>\n<a href=\"https://www.springer.com/gp/book/9781461444626\"
      rel=\"nofollow\">https://www.springer.com/gp/book/9781461444626</a><br>\nMarkov
      Decision Process — <a href=\"https://en.wikipedia.org/wiki/Markov_decision_process\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>\nAmazon
      Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nThe
      Little Elixir &amp; OTP Guidebook — <a href=\"https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\"
      rel=\"nofollow\">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nWelcome
      to the Era of Deep Neuroevolution — <a href=\"https://eng.uber.com/deep-neuroevolution/\"
      rel=\"nofollow\">https://eng.uber.com/deep-neuroevolution/</a><br>\nKenneth
      O. Stanley — <a href=\"https://www.cs.ucf.edu/%7Ekstanley/\" rel=\"nofollow\">https://www.cs.ucf.edu/~kstanley/</a><br>\nWhy
      Greatness Cannot Be Planned: The Myth of the Objective — <a href=\"https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\"
      rel=\"nofollow\">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>\nUniversity
      of Florida — <a href=\"https://www.ufl.edu/\" rel=\"nofollow\">https://www.ufl.edu/</a><br>\nUber
      Air — <a href=\"https://www.uber.com/us/es/elevate/\" rel=\"nofollow\">https://www.uber.com/us/es/elevate/</a><br>\nJeff
      Bezos — <a href=\"https://www.forbes.com/profile/jeff-bezos/\" rel=\"nofollow\">https://www.forbes.com/profile/jeff-bezos/</a><br>\nSprint
      — <a href=\"https://www.thesprintbook.com/\" rel=\"nofollow\">https://www.thesprintbook.com/</a>
      <br>\nAdobe — <a href=\"https://www.adobe.com/\" rel=\"nofollow\">https://www.adobe.com/</a><br>\nHorde
      — <a href=\"https://www.horde.org/development/\" rel=\"nofollow\">https://www.horde.org/development/</a><br>\nLibcluster
      on GitHub — <a href=\"https://github.com/dsteinberg/libcluster\" rel=\"nofollow\">https://github.com/dsteinberg/libcluster</a><br>\nSwift
      for Tensorflow — <a href=\"https://www.tensorflow.org/swift\" rel=\"nofollow\">https://www.tensorflow.org/swift</a><br>\nTriplebyte
      Blog — <a href=\"https://triplebyte.com/blog\" rel=\"nofollow\">https://triplebyte.com/blog</a><br>\nEquiTrader
      — <a href=\"https://coinmarketcap.com/currencies/equitrader/\" rel=\"nofollow\">https://coinmarketcap.com/currencies/equitrader/</a>
      <br>\nBloXroute Labs — <a href=\"https://bloxroute.com/\" rel=\"nofollow\">https://bloxroute.com/</a><br>\nHolochain
      — <a href=\"https://holochain.org/\" rel=\"nofollow\">https://holochain.org/</a><br>\nMichał
      Muskała on GitHub — <a href=\"https://github.com/michalmuskala\" rel=\"nofollow\">https://github.com/michalmuskala</a><br>\nJason
      on GitHub — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a><br>\nTodd
      Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWhatsapp
      — <a href=\"https://www.whatsapp.com/\" rel=\"nofollow\">https://www.whatsapp.com/</a><br>\nCERN
      — <a href=\"https://home.cern/\" rel=\"nofollow\">https://home.cern/</a><br>\nRalph
      Kaminski — <a href=\"https://ralphkaminski.com/\" rel=\"nofollow\">https://ralphkaminski.com/</a><br>\nJayme
      Edwards — <a href=\"https://jaymeedwards.com/\" rel=\"nofollow\">https://jaymeedwards.com/</a></p><p>Special
      Guest: Eric Steen.</p>\n      "
  contentEncoded: "\n        <p>Building a sophisticated AI that can evolve to fit
    our vast and diverse needs is a Herculean challenge. Today we speak with senior
    engineer Eric Steen about Automata, his experimental Elixir project that uses
    neuroevolution and cutting edge theory to create a multi-agent behavior tree —
    or really good AI in the common tongue. But before we tap into that rich topic,
    we talk with Eric about tech burnout, his background, and why Elixir is an excellent
    language for writing modern software. He then unpacks AI concepts like the need
    to develop backpropagation in your system, and the value of “neural diversity,”
    and Markov decision processes. </p>\n\n<p>After Eric gives his take on architecture
    versus design and the place of domain-driven design, we discuss Automata. A key
    breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines
    learn from a variety of new behaviors and searches, as opposed to completing one
    task at a time. We touch on Automata’s progress, Eric’s long-term approach, and
    what his project might be used for. Near the end of our interview, we chat about
    CryptoWise, a collaborative analysis platform for cryptocurrency. </p>\n\n<p>Todd
    Resudek then opens with another edition of Pattern Matching, where he interviews
    Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies
    and music that he enjoys, and the projects that excite him. Tune in to hear more
    about both Michał and neuroevolution in AI.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Experiencing
    tech burnout and challenges around algorithms rendering you redundant.</li>\n<li>Hear
    about Eric’s programming background and shifts in the industry. </li>\n<li>Backpropagation
    and using Elixir to build a neural evolutionary system.</li>\n<li>How Markov decision
    processes help systems choose between possible actions. </li>\n<li>Eric’s take
    on architecture versus design and the place of domain-driven design.</li>\n<li>Exploring
    Automata — Eric’s ambitious multi-agent behavior tree.</li>\n<li>The importance
    of neurodiversity when building AIs; they need to adapt to many needs. </li>\n<li>Novelty
    search; why learn through one task when you can learn through a variety of tasks
    at the same time?</li>\n<li>Automata’s practical applications and why Eric sees
    it as a long-term project.</li>\n<li>Eric shares a progress report on his work
    and using design processes like Sprint. </li>\n<li>What Eric would like people
    to use Automata for. </li>\n<li>A sense that Elixir is gaining in popularity within
    Silicon Valley.</li>\n<li>Eric gives an elevator-pitch for CryptoWise, a collaborative
    analysis platform for cryptocurrency.</li>\n<li>Todd Resudek interviews Michał
    Muskała on another edition of Pattern Matching.</li>\n<li>Michał shares his background
    and his move from Poland to London. </li>\n<li>Movies and music that Michał enjoys,
    and details on projects that excite him.</li>\n<li>Differences between Erlang
    and Elixir and why both communities would benefit from working together.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Steen on LinkedIn — <a
    href=\"https://www.linkedin.com/in/ericsteen1/\" rel=\"nofollow\">https://www.linkedin.com/in/ericsteen1/</a><br>\nEric
    Steen — <a href=\"https://twitter.com/the_steener\" rel=\"nofollow\">https://twitter.com/the_steener</a><br>\nWebflow
    — <a href=\"https://webflow.com/\" rel=\"nofollow\">https://webflow.com/</a><br>\nAutomata
    GitHub — <a href=\"https://github.com/upstarter/automata\" rel=\"nofollow\">https://github.com/upstarter/automata</a><br>\nAutomata
    on Slack — <a href=\"https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA\"
    rel=\"nofollow\">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>\nCryptoWise
    — <a href=\"https://www.cryptowise.ai/\" rel=\"nofollow\">https://www.cryptowise.ai/</a><br>\nHippo
    Insurance — <a href=\"https://www.hippo.com/\" rel=\"nofollow\">https://www.hippo.com/</a><br>\nCarl
    Hewitt — <a href=\"https://en.wikipedia.org/wiki/Carl_Hewitt\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>\nStanford
    University — <a href=\"https://www.stanford.edu/\" rel=\"nofollow\">https://www.stanford.edu/</a><br>\nMIT
    — <a href=\"https://web.mit.edu/\" rel=\"nofollow\">https://web.mit.edu/</a><br>\nActor
    Model — <a href=\"https://en.wikipedia.org/wiki/Actor_model\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Actor_model</a><br>\nMarvin
    Minsky — <a href=\"http://web.media.mit.edu/%7Eminsky/\" rel=\"nofollow\">http://web.media.mit.edu/~minsky/</a><br>\nTensorflex
    on GitHub— <a href=\"https://github.com/anshuman23/tensorflex\" rel=\"nofollow\">https://github.com/anshuman23/tensorflex</a><br>\nMatrex
    on GitHub — <a href=\"https://github.com/versilov/matrex\" rel=\"nofollow\">https://github.com/versilov/matrex</a>
    <br>\nHandbook of Neuroevolution Through Erlang — <br>\n<a href=\"https://www.springer.com/gp/book/9781461444626\"
    rel=\"nofollow\">https://www.springer.com/gp/book/9781461444626</a><br>\nMarkov
    Decision Process — <a href=\"https://en.wikipedia.org/wiki/Markov_decision_process\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>\nAmazon
    Web Services — <a href=\"https://aws.amazon.com/\" rel=\"nofollow\">https://aws.amazon.com/</a><br>\nThe
    Little Elixir &amp; OTP Guidebook — <a href=\"https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111\"
    rel=\"nofollow\">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nWelcome
    to the Era of Deep Neuroevolution — <a href=\"https://eng.uber.com/deep-neuroevolution/\"
    rel=\"nofollow\">https://eng.uber.com/deep-neuroevolution/</a><br>\nKenneth O.
    Stanley — <a href=\"https://www.cs.ucf.edu/%7Ekstanley/\" rel=\"nofollow\">https://www.cs.ucf.edu/~kstanley/</a><br>\nWhy
    Greatness Cannot Be Planned: The Myth of the Objective — <a href=\"https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/\"
    rel=\"nofollow\">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>\nUniversity
    of Florida — <a href=\"https://www.ufl.edu/\" rel=\"nofollow\">https://www.ufl.edu/</a><br>\nUber
    Air — <a href=\"https://www.uber.com/us/es/elevate/\" rel=\"nofollow\">https://www.uber.com/us/es/elevate/</a><br>\nJeff
    Bezos — <a href=\"https://www.forbes.com/profile/jeff-bezos/\" rel=\"nofollow\">https://www.forbes.com/profile/jeff-bezos/</a><br>\nSprint
    — <a href=\"https://www.thesprintbook.com/\" rel=\"nofollow\">https://www.thesprintbook.com/</a>
    <br>\nAdobe — <a href=\"https://www.adobe.com/\" rel=\"nofollow\">https://www.adobe.com/</a><br>\nHorde
    — <a href=\"https://www.horde.org/development/\" rel=\"nofollow\">https://www.horde.org/development/</a><br>\nLibcluster
    on GitHub — <a href=\"https://github.com/dsteinberg/libcluster\" rel=\"nofollow\">https://github.com/dsteinberg/libcluster</a><br>\nSwift
    for Tensorflow — <a href=\"https://www.tensorflow.org/swift\" rel=\"nofollow\">https://www.tensorflow.org/swift</a><br>\nTriplebyte
    Blog — <a href=\"https://triplebyte.com/blog\" rel=\"nofollow\">https://triplebyte.com/blog</a><br>\nEquiTrader
    — <a href=\"https://coinmarketcap.com/currencies/equitrader/\" rel=\"nofollow\">https://coinmarketcap.com/currencies/equitrader/</a>
    <br>\nBloXroute Labs — <a href=\"https://bloxroute.com/\" rel=\"nofollow\">https://bloxroute.com/</a><br>\nHolochain
    — <a href=\"https://holochain.org/\" rel=\"nofollow\">https://holochain.org/</a><br>\nMichał
    Muskała on GitHub — <a href=\"https://github.com/michalmuskala\" rel=\"nofollow\">https://github.com/michalmuskala</a><br>\nJason
    on GitHub — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a><br>\nTodd
    Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWhatsapp
    — <a href=\"https://www.whatsapp.com/\" rel=\"nofollow\">https://www.whatsapp.com/</a><br>\nCERN
    — <a href=\"https://home.cern/\" rel=\"nofollow\">https://home.cern/</a><br>\nRalph
    Kaminski — <a href=\"https://ralphkaminski.com/\" rel=\"nofollow\">https://ralphkaminski.com/</a><br>\nJayme
    Edwards — <a href=\"https://jaymeedwards.com/\" rel=\"nofollow\">https://jaymeedwards.com/</a></p><p>Special
    Guest: Eric Steen.</p>\n      "
- title: Miki Rezentes on how it's APIs All the Way Down
  slug: s4e16-rezentes
  link: https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes
  guid: 441f7029-d8ab-4494-aa7b-cfb08e4ade23
  pubDate: Tue, 01 Sep 2020 06:00:00 -0400
  pubDateFriendly: September  1, 2020
  description: "According to an ancient myth, the world rests on the back of a turtle.
    And what does that turtle stand on? Another turtle. It turns out that it’s turtles
    all the way down. Miki Rezentes, today’s guest, believes that all software rests
    on the back of APIs. Similar to the myth, it’s APIs all the way down. We open
    our conversation by discussing how homeschooling her children did more to prepare
    Miki for a software career than anything else she’s encountered. Miki shares highlights
    from her talk, ‘APIs All the Way Down’. This set up this episode’s key theme,
    that the tech industry is too concerned with how its software interacts to focus
    on how the people in its organizations communicate — their ‘human APIs.’ Following
    this, we ask Miki how she learns people’s APIs and we talk about the benefits
    of observation and mirroring. Tracking her career, we touch on how Miki transitioned
    from a homemaker to a developer before diving into her recent work at the data
    science platform Mode. She provides unique insights into how she views architecture
    and design and why the concept of domain-driven design doesn’t go far enough.
    We chat about how you can see your team as customers to promote domain-driven
    design and then drill into what she does to create a ‘shared pool of knowledge’
    with her team. As Miki explains, ‘people problems’ are more difficult than technical
    ones and developers often make mistakes by not first developing common understanding.
    Especially when this relates to expectations within a company. Near the end of
    the episode, we explore what leaders can do to maintain productivity when growing
    their teams. Tune in to hear what you can do to deepen your team’s pool of understanding
    and improve the quality of your communication. \nNote: this episode was recorded
    in late July when Miki was working at Mode; she is now a Senior Software Engineer
    at Frame.io (https://frame.io).\nKey Points From This Episode:\nWhy homeschooling
    her kids better prepared Miki for software development than anything else.\nHow
    people within an organization express themselves through individual APIs. \nUnderstanding
    that people come from different backgrounds which influence their API.\nThe ‘shared
    pool of knowledge’ and figuring out how to communicate with people. \nMiki’s journey
    from homemaker to becoming a software engineer.\nHow nobody really knows what
    they’re doing.\nSecurity as a trade-off, privacy, and the power of two-factor
    authentication.\nHear about Miki’s work at the data science platform Mode.\nWhat
    Miki enjoys most about working in Elixir and what she uses it for. \nHow Miki
    sees architecture and the differences between architecture and design.\nDomain-driven
    design and the differences between data models and software. \nTreating your team
    ‘Agilely’ and seeing them as your customers.  \nMiki’s process of developing a
    shared pool of understanding before hammering out the end-to-end components. \nWhy
    ‘people problems’ are much more difficult than development problems. \nHow tech
    companies misdiagnose ‘people problems’ as bad design.\nConway’s Law and how code
    production reflects an organization’s structure. \nThe importance of setting expectations
    to maintain productivity as a team grows in size. \nThe danger of the Peter principle;
    when people are promoted to their level of incompetency.\nLinks Mentioned in Today’s
    Episode:\nMiki Rezentes LinkedIn —https://www.linkedin.com/in/miki-rezentes-823ba02a/\nMiki
    Rezentes GitHub — https://github.com/mrezentes\nMiki Rezentes Twitter — https://twitter.com/mikirez\nMode
    — https://mode.com/\nSmartLogic — https://smartlogic.io/ \nElixir Wizards Survey
    — smr.tl/podcastsurvey\nManning Publications — https://www.manning.com/\n‘APIs
    All the Way Down’ — https://www.youtube.com/watch?v=hBpbEsAG4es\nTurtles all the
    way down — https://en.wikipedia.org/wiki/Turtlesallthewaydown\nCrucial Conversations
    — https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\nThomas
    Edison State University — https://www.tesu.edu/academics/online-degrees\nXkcd
    — https://xkcd.com/\nToshiba Global Commerce Systems — https://commerce.toshiba.com/\nKroger
    — https://www.kroger.com/\nCA Technologies — https://www.ca.com/\nJira — https://www.atlassian.com/software/jira\nICFP
    2020 — https://icfp20.sigplan.org/\nJames Edward Gray II — https://github.com/JEG2\nHelix
    Data Engine - Mode — https://mode.com/helix/\nPractical Object-Oriented Design
    in Ruby — https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\nTanium
    — https://www.tanium.com/\nPoodr — https://www.poodr.com/\nGödel, Escher, Bach
    — https://en.wikipedia.org/wiki/G%C3%B6del,Escher,Bach\nD'Aulaires' Book of Greek
    Myths — https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\nThe
    Mythical Man-Month — https://en.wikipedia.org/wiki/TheMythicalMan-Month\nApplying
    Conway's Law to improve your software development — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\nPeter
    Principle — https://en.wikipedia.org/wiki/Peter_principle Special Guest: Miki
    Rezentes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Kj_RKzex
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/441f7029-d8ab-4494-aa7b-cfb08e4ade23.mp3
    length: '61712062'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: According to an ancient myth, the world rests on the back of a turtle.
      Miki Rezentes believes that all software rests on the back of APIs and shares
      highlights from her talk, ‘APIs All the Way Down’.
    duration: '42:29'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/441f7029-d8ab-4494-aa7b-cfb08e4ade23/cover.jpg?v=1
    summary: "\n        <p>According to an ancient myth, the world rests on the back
      of a turtle. And what does that turtle stand on? Another turtle. It turns out
      that it’s turtles all the way down. Miki Rezentes, today’s guest, believes that
      all software rests on the back of APIs. Similar to the myth, it’s APIs all the
      way down. We open our conversation by discussing how homeschooling her children
      did more to prepare Miki for a software career than anything else she’s encountered.
      Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this
      episode’s key theme, that the tech industry is too concerned with how its software
      interacts to focus on how the people in its organizations communicate — their
      ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we
      talk about the benefits of observation and mirroring. Tracking her career, we
      touch on how Miki transitioned from a homemaker to a developer before diving
      into her recent work at the data science platform Mode. She provides unique
      insights into how she views architecture and design and why the concept of domain-driven
      design doesn’t go far enough. We chat about how you can see your team as customers
      to promote domain-driven design and then drill into what she does to create
      a ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’
      are more difficult than technical ones and developers often make mistakes by
      not first developing common understanding. Especially when this relates to expectations
      within a company. Near the end of the episode, we explore what leaders can do
      to maintain productivity when growing their teams. Tune in to hear what you
      can do to deepen your team’s pool of understanding and improve the quality of
      your communication. </p>\n\n<p><em><strong>Note</strong>: this episode was recorded
      in late July when Miki was working at Mode; she is now a Senior Software Engineer
      at <a href=\"https://frame.io\" rel=\"nofollow\">Frame.io</a>.</em></p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Why homeschooling her kids better
      prepared Miki for software development than anything else.</li>\n<li>How people
      within an organization express themselves through individual APIs. </li>\n<li>Understanding
      that people come from different backgrounds which influence their API.</li>\n<li>The
      ‘shared pool of knowledge’ and figuring out how to communicate with people.
      </li>\n<li>Miki’s journey from homemaker to becoming a software engineer.</li>\n<li>How
      nobody really knows what they’re doing.</li>\n<li>Security as a trade-off, privacy,
      and the power of two-factor authentication.</li>\n<li>Hear about Miki’s work
      at the data science platform Mode.</li>\n<li>What Miki enjoys most about working
      in Elixir and what she uses it for. </li>\n<li>How Miki sees architecture and
      the differences between architecture and design.</li>\n<li>Domain-driven design
      and the differences between data models and software. </li>\n<li>Treating your
      team ‘Agilely’ and seeing them as your customers.<br></li>\n<li>Miki’s process
      of developing a shared pool of understanding before hammering out the end-to-end
      components. </li>\n<li>Why ‘people problems’ are much more difficult than development
      problems. </li>\n<li>How tech companies misdiagnose ‘people problems’ as bad
      design.</li>\n<li>Conway’s Law and how code production reflects an organization’s
      structure. </li>\n<li>The importance of setting expectations to maintain productivity
      as a team grows in size. </li>\n<li>The danger of the Peter principle; when
      people are promoted to their level of incompetency.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Miki Rezentes LinkedIn —<a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
      rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>\nMiki
      Rezentes GitHub — <a href=\"https://github.com/mrezentes\" rel=\"nofollow\">https://github.com/mrezentes</a><br>\nMiki
      Rezentes Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMode
      — <a href=\"https://mode.com/\" rel=\"nofollow\">https://mode.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir Wizards Survey — smr.tl/podcastsurvey<br>\nManning Publications
      — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\n‘APIs
      All the Way Down’ — <a href=\"https://www.youtube.com/watch?v=hBpbEsAG4es\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>\nTurtles
      all the way down — <a href=\"https://en.wikipedia.org/wiki/Turtles_all_the_way_down\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>\nCrucial
      Conversations — <a href=\"https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\"
      rel=\"nofollow\">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>\nThomas
      Edison State University — <a href=\"https://www.tesu.edu/academics/online-degrees\"
      rel=\"nofollow\">https://www.tesu.edu/academics/online-degrees</a><br>\nXkcd
      — <a href=\"https://xkcd.com/\" rel=\"nofollow\">https://xkcd.com/</a><br>\nToshiba
      Global Commerce Systems — <a href=\"https://commerce.toshiba.com/\" rel=\"nofollow\">https://commerce.toshiba.com/</a><br>\nKroger
      — <a href=\"https://www.kroger.com/\" rel=\"nofollow\">https://www.kroger.com/</a><br>\nCA
      Technologies — <a href=\"https://www.ca.com/\" rel=\"nofollow\">https://www.ca.com/</a><br>\nJira
      — <a href=\"https://www.atlassian.com/software/jira\" rel=\"nofollow\">https://www.atlassian.com/software/jira</a><br>\nICFP
      2020 — <a href=\"https://icfp20.sigplan.org/\" rel=\"nofollow\">https://icfp20.sigplan.org/</a><br>\nJames
      Edward Gray II — <a href=\"https://github.com/JEG2\" rel=\"nofollow\">https://github.com/JEG2</a><br>\nHelix
      Data Engine - Mode — <a href=\"https://mode.com/helix/\" rel=\"nofollow\">https://mode.com/helix/</a><br>\nPractical
      Object-Oriented Design in Ruby — <a href=\"https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\"
      rel=\"nofollow\">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>\nTanium
      — <a href=\"https://www.tanium.com/\" rel=\"nofollow\">https://www.tanium.com/</a><br>\nPoodr
      — <a href=\"https://www.poodr.com/\" rel=\"nofollow\">https://www.poodr.com/</a><br>\nGödel,
      Escher, Bach — <a href=\"https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>\nD&#39;Aulaires&#39;
      Book of Greek Myths — <a href=\"https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\"
      rel=\"nofollow\">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>\nThe
      Mythical Man-Month — <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>\nApplying
      Conway&#39;s Law to improve your software development — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
      rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nPeter
      Principle — <a href=\"https://en.wikipedia.org/wiki/Peter_principle\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special
      Guest: Miki Rezentes.</p>\n      "
  contentEncoded: "\n        <p>According to an ancient myth, the world rests on the
    back of a turtle. And what does that turtle stand on? Another turtle. It turns
    out that it’s turtles all the way down. Miki Rezentes, today’s guest, believes
    that all software rests on the back of APIs. Similar to the myth, it’s APIs all
    the way down. We open our conversation by discussing how homeschooling her children
    did more to prepare Miki for a software career than anything else she’s encountered.
    Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this
    episode’s key theme, that the tech industry is too concerned with how its software
    interacts to focus on how the people in its organizations communicate — their
    ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we
    talk about the benefits of observation and mirroring. Tracking her career, we
    touch on how Miki transitioned from a homemaker to a developer before diving into
    her recent work at the data science platform Mode. She provides unique insights
    into how she views architecture and design and why the concept of domain-driven
    design doesn’t go far enough. We chat about how you can see your team as customers
    to promote domain-driven design and then drill into what she does to create a
    ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’
    are more difficult than technical ones and developers often make mistakes by not
    first developing common understanding. Especially when this relates to expectations
    within a company. Near the end of the episode, we explore what leaders can do
    to maintain productivity when growing their teams. Tune in to hear what you can
    do to deepen your team’s pool of understanding and improve the quality of your
    communication. </p>\n\n<p><em><strong>Note</strong>: this episode was recorded
    in late July when Miki was working at Mode; she is now a Senior Software Engineer
    at <a href=\"https://frame.io\" rel=\"nofollow\">Frame.io</a>.</em></p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Why homeschooling her kids better prepared
    Miki for software development than anything else.</li>\n<li>How people within
    an organization express themselves through individual APIs. </li>\n<li>Understanding
    that people come from different backgrounds which influence their API.</li>\n<li>The
    ‘shared pool of knowledge’ and figuring out how to communicate with people. </li>\n<li>Miki’s
    journey from homemaker to becoming a software engineer.</li>\n<li>How nobody really
    knows what they’re doing.</li>\n<li>Security as a trade-off, privacy, and the
    power of two-factor authentication.</li>\n<li>Hear about Miki’s work at the data
    science platform Mode.</li>\n<li>What Miki enjoys most about working in Elixir
    and what she uses it for. </li>\n<li>How Miki sees architecture and the differences
    between architecture and design.</li>\n<li>Domain-driven design and the differences
    between data models and software. </li>\n<li>Treating your team ‘Agilely’ and
    seeing them as your customers.<br></li>\n<li>Miki’s process of developing a shared
    pool of understanding before hammering out the end-to-end components. </li>\n<li>Why
    ‘people problems’ are much more difficult than development problems. </li>\n<li>How
    tech companies misdiagnose ‘people problems’ as bad design.</li>\n<li>Conway’s
    Law and how code production reflects an organization’s structure. </li>\n<li>The
    importance of setting expectations to maintain productivity as a team grows in
    size. </li>\n<li>The danger of the Peter principle; when people are promoted to
    their level of incompetency.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Miki
    Rezentes LinkedIn —<a href=\"https://www.linkedin.com/in/miki-rezentes-823ba02a/\"
    rel=\"nofollow\">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>\nMiki
    Rezentes GitHub — <a href=\"https://github.com/mrezentes\" rel=\"nofollow\">https://github.com/mrezentes</a><br>\nMiki
    Rezentes Twitter — <a href=\"https://twitter.com/mikirez\" rel=\"nofollow\">https://twitter.com/mikirez</a><br>\nMode
    — <a href=\"https://mode.com/\" rel=\"nofollow\">https://mode.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir Wizards Survey — smr.tl/podcastsurvey<br>\nManning Publications —
    <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\n‘APIs
    All the Way Down’ — <a href=\"https://www.youtube.com/watch?v=hBpbEsAG4es\" rel=\"nofollow\">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>\nTurtles
    all the way down — <a href=\"https://en.wikipedia.org/wiki/Turtles_all_the_way_down\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>\nCrucial
    Conversations — <a href=\"https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822\"
    rel=\"nofollow\">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>\nThomas
    Edison State University — <a href=\"https://www.tesu.edu/academics/online-degrees\"
    rel=\"nofollow\">https://www.tesu.edu/academics/online-degrees</a><br>\nXkcd —
    <a href=\"https://xkcd.com/\" rel=\"nofollow\">https://xkcd.com/</a><br>\nToshiba
    Global Commerce Systems — <a href=\"https://commerce.toshiba.com/\" rel=\"nofollow\">https://commerce.toshiba.com/</a><br>\nKroger
    — <a href=\"https://www.kroger.com/\" rel=\"nofollow\">https://www.kroger.com/</a><br>\nCA
    Technologies — <a href=\"https://www.ca.com/\" rel=\"nofollow\">https://www.ca.com/</a><br>\nJira
    — <a href=\"https://www.atlassian.com/software/jira\" rel=\"nofollow\">https://www.atlassian.com/software/jira</a><br>\nICFP
    2020 — <a href=\"https://icfp20.sigplan.org/\" rel=\"nofollow\">https://icfp20.sigplan.org/</a><br>\nJames
    Edward Gray II — <a href=\"https://github.com/JEG2\" rel=\"nofollow\">https://github.com/JEG2</a><br>\nHelix
    Data Engine - Mode — <a href=\"https://mode.com/helix/\" rel=\"nofollow\">https://mode.com/helix/</a><br>\nPractical
    Object-Oriented Design in Ruby — <a href=\"https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330\"
    rel=\"nofollow\">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>\nTanium
    — <a href=\"https://www.tanium.com/\" rel=\"nofollow\">https://www.tanium.com/</a><br>\nPoodr
    — <a href=\"https://www.poodr.com/\" rel=\"nofollow\">https://www.poodr.com/</a><br>\nGödel,
    Escher, Bach — <a href=\"https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>\nD&#39;Aulaires&#39;
    Book of Greek Myths — <a href=\"https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943\"
    rel=\"nofollow\">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>\nThe
    Mythical Man-Month — <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>\nApplying
    Conway&#39;s Law to improve your software development — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
    rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nPeter
    Principle — <a href=\"https://en.wikipedia.org/wiki/Peter_principle\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special
    Guest: Miki Rezentes.</p>\n      "
- title: ElixirConf 2020 Preview
  slug: s4e15-elixirconf
  link: https://smartlogic.io/podcast/elixir-wizards/s4e15-elixirconf
  guid: a233d61f-e572-4479-a477-18b0d08fb053
  pubDate: Thu, 27 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 27, 2020
  description: "With ElixirConf 2020 just around the corner, today’s episode is a
    sneak peek where we talk with six of this year’s speakers. Each speaker gives
    listeners an elevator pitch of their talk while throwing in extra details about
    who their talk is aimed at, what they learned through the process, and which talks
    they’re excited about attending. \nOur first guest is Quinn Wilton, a developer
    at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with Gleam’. Quinn
    explains how she’s created a symbiosis between Elixir and Gleam that helps her
    create more consistent code while offsetting the disadvantages of dynamic typing.
    \nWe then chat with Dan Lindeman whose talk, ‘Short Circuit IoT Development Time
    with Nerves,’ is an overview of building custom hardware using Nerves and Elixir.
    \nAfter Dan’s plug on how you can start programming Nerves on your laptop, we
    welcome Jeffrey Utter to the show. His talk is a deep dive into ‘Debugging Live
    Systems on the Beam.’ Teasing out the topic, we discuss inefficiencies in the
    debugging process and how many developers adopt a ‘whack-a-mole’ approach to dealing
    with bugs. \nFrom debugging to UintSet, Luciano Ramalho, our next speaker, gives
    us a taste of his presentation, ‘UIntSet: enumerable, streamable, understandable.’
    Luciano shares how the Go language inspired him to experiment with leveraging
    protocols and streams to build new idiomatic Elixir data structures from scratch.
    He also touches on the importance of being humble when learning new languages
    and gearing Elixir to a non-engineer user base. \nAfter Luciano, we’re joined
    by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings
    his teaching experience to bear on the topic of ‘Teaching Functional Programming
    with Elixir.’ This is a key talk in growing our community, especially when considering
    the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited
    to teach it. \nLast but certainly not least, we speak with Japa Swadia from Podium
    about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s been a huge
    focus on the podcast. We chat about what domain-driven design means and why it’s
    an important foundational concept for beginners to learn. \nTune in for this tip-of-the-iceberg
    preview. It’s just a glimpse into the varied and wonderfully informative talks
    you can expect at ElixirConf 2020.\nKey Points From This Episode:\nIntroducing
    Quinn Wilton who is using Gleam to interact with Elixir. \nHow being acquired
    by Synopsys has given Tinfoil Security access to greater resources.\nBalancing
    the advantages of Elixir with its drawbacks when it comes to dynamic analysis.\nWhat
    Gleam is and how it makes static typing more approachable. \nTeasing Quinn’s ElixirConf
    talk — ‘Talk Type-Safe LiveView with Gleam’\nWhat Quinn has learned from the process
    of creating his presentation. \nBuilding a dissembler and the talk that Quinn
    is most looking forward to attending.\nDan Lindeman’s work at Very making solar
    micro-grids.\nThe benefits of Elixir and Nerves when building custom hardware.
    \nWho Dan’s talk is aimed at and why it’s appropriate for any experience level.
    \nWorking with smart minds and laboring through hardware docs that often lie.
    \nHow scary it can be to work with hardware and the value of having your talk
    appeal to entry-level Elixir users. \nJeffrey Utter unpacks his talk — ‘Debugging
    Live Systems on the Beam.’\nHow most people play ‘whack-a-mole’ when dealing with
    live system bugs.\nUsing match specs to hone in on your debugging process. \nWhy
    most Elixir coders should learn about Jeffrey’s debugging system. \nWhy is Recon
    Library is such an excellent tool and its potential uses in distributed systems.\nHear
    which talks Jeffrey is looking forward to attending.\nHow Go inspired Luciano
    Ramalho to explore applying different data structures to Elixir.\nWhat skill-level
    Luciano’s talk is aimed at and why.\nDeveloping a sense of how Elixir is idiomatic,
    despite being such a new language.  \nBeing humble when learning new languages
    and the importance of protocols in understanding idiomatic data structures. \nHow
    Elixir is geared towards engineers which can create barriers of entry. \nMark
    Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming
    with Elixir.’\nWhy knowing Elixir very well doesn’t mean that you can teach it.\nThe
    benefits of remote learning; it can make your teaching more organized and to-the-point.
    \nHear about the talks that Mark is excited about attending. \nJapa gives us a
    crash-course on domain-driven design.\nCreating a solid foundation for your app
    by considering the contexts in which it’s used.\nWhy beginners or those wanting
    to switch to domain-orientated coding should attend Japa’s talk.\nUsing schema
    to point to the same table in different contexts.\nWhich talks Japa is attending
    and how she got selected for ElixirConf 2020.\nLinks Mentioned in Today’s Episode:\nElixir
    Wizards Listener Survey — https://smr.tl/podcastsurvey\nSmartLogic — https://smartlogic.io/\nElixirConf
    2020 — https://2020.elixirconf.com/ \nQuinn Wilton — https://github.com/QuinnWilton/gleam-chip8\nQuinn
    Wilton Twitter — https://twitter.com/wiltonquinn\n‘Type-Safe LiveView with Gleam’
    — https://2020.elixirconf.com/speakers/128/talk\nTinfoil Security — https://www.tinfoilsecurity.com/\nSynopsys
    — https://www.synopsys.com/\nGleam — https://gleam.run/\nLouis Pilfold GitHub
    — https://github.com/lpil\nPhoenix LiveView — https://github.com/phoenixframework/phoenixliveview\nCHIP-8
    — https://en.wikipedia.org/wiki/CHIP-8\nStephen Bussey — https://github.com/sb8244\n‘The
    Joy of an Elixir Monolith’ — https://2020.elixirconf.com/speakers/121/talk\nCode
    BEAM / Code Sync — https://codesync.global/\nDan Lindeman — https://github.com/DanLindeman\nDan
    Lindeman Twitter — https://twitter.com/lindemda\n‘Short Circuit IoT Development
    Time with Nerves’ — https://2020.elixirconf.com/speakers/117/talk\nNerves Platform
    — https://www.nerves-project.org/\nVery — https://www.verypossible.com/\nJustin
    Schneck — https://www.linkedin.com/in/justinschneck/\nDaniel Stoppard — https://www.linkedin.com/in/daniel-spofford-2307a655/\nJenn
    Gamble — https://2020.elixirconf.com/speakers/115/bio\nJuliana Helena — https://2020.elixirconf.com/speakers/129/bio\n‘How
    Elixir made me a better Java programmer’ — https://2020.elixirconf.com/speakers/129/talk\nNerves
    Hub — https://www.nerves-hub.org/\nJeffrey Utter — https://github.com/jeffutter\nBleacher
    Report — https://bleacherreport.com/\n‘Debugging Live Systems on the Beam’ — https://2020.elixirconf.com/speakers/114/talk\nDatadog
    — https://www.datadoghq.com/\nErlang Sys Trace 2 — https://erlang.org/doc/man/sys.html#trace-2\nRecon
    Library — https://ferd.github.io/recon/\nErlang Debugger — http://erlang.org/doc/apps/debugger/debuggerchapter.html\nCatalina
    Astengo — https://github.com/castengo\ngRPC + Elixir Microservices = A Love Story?
    — https://2020.elixirconf.com/speakers/116/talk\nKC Elixir — https://www.kcelixir.com/\nLuciano
    Ramalho — https://github.com/ramalho/\nLuciano Ramalho Twitter — https://twitter.com/ramalhoorg\n‘UintSet:
    enumerable, streamable, understandable’ — https://2020.elixirconf.com/speakers/125/talk\nThoughtWorks
    — https://www.thoughtworks.com/\nGo — https://golang.org/\nThe Go Programming
    Language — https://www.gopl.io/\nBrian W. Kernighan — https://www.cs.princeton.edu/people/profile/bwk\nFluent
    Python — https://www.oreilly.com/library/view/fluent-python/9781491946237/\nSimon
    de Haan — https://github.com/smn\n‘Using Elixir and WhatsApp to launch WHO’s global
    COVID-19 response’ — https://2020.elixirconf.com/speakers/124/talk\nYutaka Kikuchi
    — https://github.com/kikuyuta\n‘Applying Elixir for driving small hydropower plants
    with Nerves’\n— https://2020.elixirconf.com/speakers/123/talk\nProcessing — https://processing.org/\nMelvin
    Cedeno — https://github.com/thecraftedgem\n‘Teaching Functional Programming With
    Elixir’ — https://2020.elixirconf.com/speakers/99/talk\nTuring — https://turing.io/\n
    Nicholas Henry — https://github.com/nicholasjhenry\n‘The Upside Dimension of Elixir
    - An Introduction to Metaprogramming’ —\nhttps://2020.elixirconf.com/speakers/120/talk\nBrian
    Marick — https://github.com/marick/\n‘Tricks and tools for writing Elixir tests’
    — https://2020.elixirconf.com/speakers/109/talk\nGerman Velasco — http://www.germanvelasco.com/\n‘Testing
    LiveView’ — https://2020.elixirconf.com/speakers/119/talk\nLonestar Elixir — https://lonestarelixir.com/\nJapa
    Swadia — https://github.com/japa-swadia\nPodium — https://www.podium.com\n‘Domain-Driven
    Design with Elixir’ — https://2020.elixirconf.com/speakers/105/talk\nDesign Patterns
    — https://en.wikipedia.org/wiki/Design_Patterns\nJustus Eapen Social Handle —
    @JustusEapen\nEric Oestrich Social Handle — @EricOestrich\nSundi Myint Social
    Handle — @SundiKhin Special Guests: Dan Lindeman, Japa Swadia, Jeffrey Utter,
    Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5KevXeMq
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a233d61f-e572-4479-a477-18b0d08fb053.mp3
    length: '55896497'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: With ElixirConf 2020 just around the corner, today’s episode is a sneak
      peek where we talk with six of this year’s speakers.
    duration: '1:17:12'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a233d61f-e572-4479-a477-18b0d08fb053/cover.jpg?v=1
    summary: "\n        <p>With ElixirConf 2020 just around the corner, today’s episode
      is a sneak peek where we talk with six of this year’s speakers. Each speaker
      gives listeners an elevator pitch of their talk while throwing in extra details
      about who their talk is aimed at, what they learned through the process, and
      which talks they’re excited about attending. </p>\n\n<p>Our first guest is Quinn
      Wilton, a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView
      with Gleam’. Quinn explains how she’s created a symbiosis between Elixir and
      Gleam that helps her create more consistent code while offsetting the disadvantages
      of dynamic typing. </p>\n\n<p>We then chat with Dan Lindeman whose talk, ‘Short
      Circuit IoT Development Time with Nerves,’ is an overview of building custom
      hardware using Nerves and Elixir. </p>\n\n<p>After Dan’s plug on how you can
      start programming Nerves on your laptop, we welcome Jeffrey Utter to the show.
      His talk is a deep dive into ‘Debugging Live Systems on the Beam.’ Teasing out
      the topic, we discuss inefficiencies in the debugging process and how many developers
      adopt a ‘whack-a-mole’ approach to dealing with bugs. </p>\n\n<p>From debugging
      to UintSet, Luciano Ramalho, our next speaker, gives us a taste of his presentation,
      ‘UIntSet: enumerable, streamable, understandable.’ Luciano shares how the Go
      language inspired him to experiment with leveraging protocols and streams to
      build new idiomatic Elixir data structures from scratch. He also touches on
      the importance of being humble when learning new languages and gearing Elixir
      to a non-engineer user base. </p>\n\n<p>After Luciano, we’re joined by Melvin
      Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings his
      teaching experience to bear on the topic of ‘Teaching Functional Programming
      with Elixir.’ This is a key talk in growing our community, especially when considering
      the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited
      to teach it. </p>\n\n<p>Last but certainly not least, we speak with Japa Swadia
      from Podium about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s
      been a huge focus on the podcast. We chat about what domain-driven design means
      and why it’s an important foundational concept for beginners to learn. </p>\n\n<p>Tune
      in for this tip-of-the-iceberg preview. It’s just a glimpse into the varied
      and wonderfully informative talks you can expect at ElixirConf 2020.</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Introducing Quinn Wilton who is using
      Gleam to interact with Elixir. </li>\n<li>How being acquired by Synopsys has
      given Tinfoil Security access to greater resources.</li>\n<li>Balancing the
      advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>\n<li>What
      Gleam is and how it makes static typing more approachable. </li>\n<li>Teasing
      Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>\n<li>What
      Quinn has learned from the process of creating his presentation. </li>\n<li>Building
      a dissembler and the talk that Quinn is most looking forward to attending.</li>\n<li>Dan
      Lindeman’s work at Very making solar micro-grids.</li>\n<li>The benefits of
      Elixir and Nerves when building custom hardware. </li>\n<li>Who Dan’s talk is
      aimed at and why it’s appropriate for any experience level. </li>\n<li>Working
      with smart minds and laboring through hardware docs that often lie. </li>\n<li>How
      scary it can be to work with hardware and the value of having your talk appeal
      to entry-level Elixir users. </li>\n<li>Jeffrey Utter unpacks his talk — ‘Debugging
      Live Systems on the Beam.’</li>\n<li>How most people play ‘whack-a-mole’ when
      dealing with live system bugs.</li>\n<li>Using match specs to hone in on your
      debugging process. </li>\n<li>Why most Elixir coders should learn about Jeffrey’s
      debugging system. </li>\n<li>Why is Recon Library is such an excellent tool
      and its potential uses in distributed systems.</li>\n<li>Hear which talks Jeffrey
      is looking forward to attending.</li>\n<li>How Go inspired Luciano Ramalho to
      explore applying different data structures to Elixir.</li>\n<li>What skill-level
      Luciano’s talk is aimed at and why.</li>\n<li>Developing a sense of how Elixir
      is idiomatic, despite being such a new language.<br></li>\n<li>Being humble
      when learning new languages and the importance of protocols in understanding
      idiomatic data structures. </li>\n<li>How Elixir is geared towards engineers
      which can create barriers of entry. </li>\n<li>Mark Cedeno gives an elevator
      pitch for his talk — ‘Teaching Functional Programming with Elixir.’</li>\n<li>Why
      knowing Elixir very well doesn’t mean that you can teach it.</li>\n<li>The benefits
      of remote learning; it can make your teaching more organized and to-the-point.
      </li>\n<li>Hear about the talks that Mark is excited about attending. </li>\n<li>Japa
      gives us a crash-course on domain-driven design.</li>\n<li>Creating a solid
      foundation for your app by considering the contexts in which it’s used.</li>\n<li>Why
      beginners or those wanting to switch to domain-orientated coding should attend
      Japa’s talk.</li>\n<li>Using schema to point to the same table in different
      contexts.</li>\n<li>Which talks Japa is attending and how she got selected for
      ElixirConf 2020.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Elixir
      Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\" rel=\"nofollow\">https://smr.tl/podcastsurvey</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixirConf
      2020 — <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a>
      <br>\nQuinn Wilton — <a href=\"https://github.com/QuinnWilton/gleam-chip8\"
      rel=\"nofollow\">https://github.com/QuinnWilton/gleam-chip8</a><br>\nQuinn Wilton
      Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\n‘Type-Safe
      LiveView with Gleam’ — <a href=\"https://2020.elixirconf.com/speakers/128/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/128/talk</a><br>\nTinfoil
      Security — <a href=\"https://www.tinfoilsecurity.com/\" rel=\"nofollow\">https://www.tinfoilsecurity.com/</a><br>\nSynopsys
      — <a href=\"https://www.synopsys.com/\" rel=\"nofollow\">https://www.synopsys.com/</a><br>\nGleam
      — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLouis
      Pilfold GitHub — <a href=\"https://github.com/lpil\" rel=\"nofollow\">https://github.com/lpil</a><br>\nPhoenix
      LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nCHIP-8
      — <a href=\"https://en.wikipedia.org/wiki/CHIP-8\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CHIP-8</a><br>\nStephen
      Bussey — <a href=\"https://github.com/sb8244\" rel=\"nofollow\">https://github.com/sb8244</a><br>\n‘The
      Joy of an Elixir Monolith’ — <a href=\"https://2020.elixirconf.com/speakers/121/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/121/talk</a><br>\nCode
      BEAM / Code Sync — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nDan
      Lindeman — <a href=\"https://github.com/DanLindeman\" rel=\"nofollow\">https://github.com/DanLindeman</a><br>\nDan
      Lindeman Twitter — <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\n‘Short
      Circuit IoT Development Time with Nerves’ — <a href=\"https://2020.elixirconf.com/speakers/117/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/117/talk</a><br>\nNerves
      Platform — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nVery
      — <a href=\"https://www.verypossible.com/\" rel=\"nofollow\">https://www.verypossible.com/</a><br>\nJustin
      Schneck — <a href=\"https://www.linkedin.com/in/justinschneck/\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck/</a><br>\nDaniel
      Stoppard — <a href=\"https://www.linkedin.com/in/daniel-spofford-2307a655/\"
      rel=\"nofollow\">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>\nJenn
      Gamble — <a href=\"https://2020.elixirconf.com/speakers/115/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/115/bio</a><br>\nJuliana
      Helena — <a href=\"https://2020.elixirconf.com/speakers/129/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/bio</a><br>\n‘How
      Elixir made me a better Java programmer’ — <a href=\"https://2020.elixirconf.com/speakers/129/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/talk</a><br>\nNerves
      Hub — <a href=\"https://www.nerves-hub.org/\" rel=\"nofollow\">https://www.nerves-hub.org/</a><br>\nJeffrey
      Utter — <a href=\"https://github.com/jeffutter\" rel=\"nofollow\">https://github.com/jeffutter</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\n‘Debugging
      Live Systems on the Beam’ — <a href=\"https://2020.elixirconf.com/speakers/114/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/114/talk</a><br>\nDatadog
      — <a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a><br>\nErlang
      Sys Trace 2 — <a href=\"https://erlang.org/doc/man/sys.html#trace-2\" rel=\"nofollow\">https://erlang.org/doc/man/sys.html#trace-2</a><br>\nRecon
      Library — <a href=\"https://ferd.github.io/recon/\" rel=\"nofollow\">https://ferd.github.io/recon/</a><br>\nErlang
      Debugger — <a href=\"http://erlang.org/doc/apps/debugger/debugger_chapter.html\"
      rel=\"nofollow\">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>\nCatalina
      Astengo — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a><br>\ngRPC
      + Elixir Microservices = A Love Story? — <a href=\"https://2020.elixirconf.com/speakers/116/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/116/talk</a><br>\nKC Elixir
      — <a href=\"https://www.kcelixir.com/\" rel=\"nofollow\">https://www.kcelixir.com/</a><br>\nLuciano
      Ramalho — <a href=\"https://github.com/ramalho/\" rel=\"nofollow\">https://github.com/ramalho/</a><br>\nLuciano
      Ramalho Twitter — <a href=\"https://twitter.com/ramalhoorg\" rel=\"nofollow\">https://twitter.com/ramalhoorg</a><br>\n‘UintSet:
      enumerable, streamable, understandable’ — <a href=\"https://2020.elixirconf.com/speakers/125/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/125/talk</a><br>\nThoughtWorks
      — <a href=\"https://www.thoughtworks.com/\" rel=\"nofollow\">https://www.thoughtworks.com/</a><br>\nGo
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nThe
      Go Programming Language — <a href=\"https://www.gopl.io/\" rel=\"nofollow\">https://www.gopl.io/</a><br>\nBrian
      W. Kernighan — <a href=\"https://www.cs.princeton.edu/people/profile/bwk\" rel=\"nofollow\">https://www.cs.princeton.edu/people/profile/bwk</a><br>\nFluent
      Python — <a href=\"https://www.oreilly.com/library/view/fluent-python/9781491946237/\"
      rel=\"nofollow\">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>\nSimon
      de Haan — <a href=\"https://github.com/smn\" rel=\"nofollow\">https://github.com/smn</a><br>\n‘Using
      Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href=\"https://2020.elixirconf.com/speakers/124/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/124/talk</a><br>\nYutaka
      Kikuchi — <a href=\"https://github.com/kikuyuta\" rel=\"nofollow\">https://github.com/kikuyuta</a><br>\n‘Applying
      Elixir for driving small hydropower plants with Nerves’<br>\n— <a href=\"https://2020.elixirconf.com/speakers/123/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/123/talk</a><br>\nProcessing
      — <a href=\"https://processing.org/\" rel=\"nofollow\">https://processing.org/</a><br>\nMelvin
      Cedeno — <a href=\"https://github.com/thecraftedgem\" rel=\"nofollow\">https://github.com/thecraftedgem</a><br>\n‘Teaching
      Functional Programming With Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/99/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/99/talk</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\n
      Nicholas Henry — <a href=\"https://github.com/nicholasjhenry\" rel=\"nofollow\">https://github.com/nicholasjhenry</a><br>\n‘The
      Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>\n<a href=\"https://2020.elixirconf.com/speakers/120/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/120/talk</a><br>\nBrian
      Marick — <a href=\"https://github.com/marick/\" rel=\"nofollow\">https://github.com/marick/</a><br>\n‘Tricks
      and tools for writing Elixir tests’ — <a href=\"https://2020.elixirconf.com/speakers/109/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/109/talk</a><br>\nGerman
      Velasco — <a href=\"http://www.germanvelasco.com/\" rel=\"nofollow\">http://www.germanvelasco.com/</a><br>\n‘Testing
      LiveView’ — <a href=\"https://2020.elixirconf.com/speakers/119/talk\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/119/talk</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJapa
      Swadia — <a href=\"https://github.com/japa-swadia\" rel=\"nofollow\">https://github.com/japa-swadia</a><br>\nPodium
      — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\n‘Domain-Driven
      Design with Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/105/talk\"
      rel=\"nofollow\">https://2020.elixirconf.com/speakers/105/talk</a><br>\nDesign
      Patterns — <a href=\"https://en.wikipedia.org/wiki/Design_Patterns\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Design_Patterns</a><br>\nJustus
      Eapen Social Handle — @JustusEapen<br>\nEric Oestrich Social Handle — @EricOestrich<br>\nSundi
      Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia,
      Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>\n      "
  contentEncoded: "\n        <p>With ElixirConf 2020 just around the corner, today’s
    episode is a sneak peek where we talk with six of this year’s speakers. Each speaker
    gives listeners an elevator pitch of their talk while throwing in extra details
    about who their talk is aimed at, what they learned through the process, and which
    talks they’re excited about attending. </p>\n\n<p>Our first guest is Quinn Wilton,
    a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with
    Gleam’. Quinn explains how she’s created a symbiosis between Elixir and Gleam
    that helps her create more consistent code while offsetting the disadvantages
    of dynamic typing. </p>\n\n<p>We then chat with Dan Lindeman whose talk, ‘Short
    Circuit IoT Development Time with Nerves,’ is an overview of building custom hardware
    using Nerves and Elixir. </p>\n\n<p>After Dan’s plug on how you can start programming
    Nerves on your laptop, we welcome Jeffrey Utter to the show. His talk is a deep
    dive into ‘Debugging Live Systems on the Beam.’ Teasing out the topic, we discuss
    inefficiencies in the debugging process and how many developers adopt a ‘whack-a-mole’
    approach to dealing with bugs. </p>\n\n<p>From debugging to UintSet, Luciano Ramalho,
    our next speaker, gives us a taste of his presentation, ‘UIntSet: enumerable,
    streamable, understandable.’ Luciano shares how the Go language inspired him to
    experiment with leveraging protocols and streams to build new idiomatic Elixir
    data structures from scratch. He also touches on the importance of being humble
    when learning new languages and gearing Elixir to a non-engineer user base. </p>\n\n<p>After
    Luciano, we’re joined by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic
    family. Melvin brings his teaching experience to bear on the topic of ‘Teaching
    Functional Programming with Elixir.’ This is a key talk in growing our community,
    especially when considering the point that being an Elixir genius doesn’t necessarily
    mean that you’re well-suited to teach it. </p>\n\n<p>Last but certainly not least,
    we speak with Japa Swadia from Podium about her talk, ‘Domain-Driven Design with
    Elixir’ — a subject that’s been a huge focus on the podcast. We chat about what
    domain-driven design means and why it’s an important foundational concept for
    beginners to learn. </p>\n\n<p>Tune in for this tip-of-the-iceberg preview. It’s
    just a glimpse into the varied and wonderfully informative talks you can expect
    at ElixirConf 2020.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    Quinn Wilton who is using Gleam to interact with Elixir. </li>\n<li>How being
    acquired by Synopsys has given Tinfoil Security access to greater resources.</li>\n<li>Balancing
    the advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>\n<li>What
    Gleam is and how it makes static typing more approachable. </li>\n<li>Teasing
    Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>\n<li>What
    Quinn has learned from the process of creating his presentation. </li>\n<li>Building
    a dissembler and the talk that Quinn is most looking forward to attending.</li>\n<li>Dan
    Lindeman’s work at Very making solar micro-grids.</li>\n<li>The benefits of Elixir
    and Nerves when building custom hardware. </li>\n<li>Who Dan’s talk is aimed at
    and why it’s appropriate for any experience level. </li>\n<li>Working with smart
    minds and laboring through hardware docs that often lie. </li>\n<li>How scary
    it can be to work with hardware and the value of having your talk appeal to entry-level
    Elixir users. </li>\n<li>Jeffrey Utter unpacks his talk — ‘Debugging Live Systems
    on the Beam.’</li>\n<li>How most people play ‘whack-a-mole’ when dealing with
    live system bugs.</li>\n<li>Using match specs to hone in on your debugging process.
    </li>\n<li>Why most Elixir coders should learn about Jeffrey’s debugging system.
    </li>\n<li>Why is Recon Library is such an excellent tool and its potential uses
    in distributed systems.</li>\n<li>Hear which talks Jeffrey is looking forward
    to attending.</li>\n<li>How Go inspired Luciano Ramalho to explore applying different
    data structures to Elixir.</li>\n<li>What skill-level Luciano’s talk is aimed
    at and why.</li>\n<li>Developing a sense of how Elixir is idiomatic, despite being
    such a new language.<br></li>\n<li>Being humble when learning new languages and
    the importance of protocols in understanding idiomatic data structures. </li>\n<li>How
    Elixir is geared towards engineers which can create barriers of entry. </li>\n<li>Mark
    Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming
    with Elixir.’</li>\n<li>Why knowing Elixir very well doesn’t mean that you can
    teach it.</li>\n<li>The benefits of remote learning; it can make your teaching
    more organized and to-the-point. </li>\n<li>Hear about the talks that Mark is
    excited about attending. </li>\n<li>Japa gives us a crash-course on domain-driven
    design.</li>\n<li>Creating a solid foundation for your app by considering the
    contexts in which it’s used.</li>\n<li>Why beginners or those wanting to switch
    to domain-orientated coding should attend Japa’s talk.</li>\n<li>Using schema
    to point to the same table in different contexts.</li>\n<li>Which talks Japa is
    attending and how she got selected for ElixirConf 2020.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\"
    rel=\"nofollow\">https://smr.tl/podcastsurvey</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a><br>\nElixirConf 2020 — <a href=\"https://2020.elixirconf.com/\"
    rel=\"nofollow\">https://2020.elixirconf.com/</a> <br>\nQuinn Wilton — <a href=\"https://github.com/QuinnWilton/gleam-chip8\"
    rel=\"nofollow\">https://github.com/QuinnWilton/gleam-chip8</a><br>\nQuinn Wilton
    Twitter — <a href=\"https://twitter.com/wilton_quinn\" rel=\"nofollow\">https://twitter.com/wilton_quinn</a><br>\n‘Type-Safe
    LiveView with Gleam’ — <a href=\"https://2020.elixirconf.com/speakers/128/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/128/talk</a><br>\nTinfoil
    Security — <a href=\"https://www.tinfoilsecurity.com/\" rel=\"nofollow\">https://www.tinfoilsecurity.com/</a><br>\nSynopsys
    — <a href=\"https://www.synopsys.com/\" rel=\"nofollow\">https://www.synopsys.com/</a><br>\nGleam
    — <a href=\"https://gleam.run/\" rel=\"nofollow\">https://gleam.run/</a><br>\nLouis
    Pilfold GitHub — <a href=\"https://github.com/lpil\" rel=\"nofollow\">https://github.com/lpil</a><br>\nPhoenix
    LiveView — <a href=\"https://github.com/phoenixframework/phoenix_live_view\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_view</a><br>\nCHIP-8
    — <a href=\"https://en.wikipedia.org/wiki/CHIP-8\" rel=\"nofollow\">https://en.wikipedia.org/wiki/CHIP-8</a><br>\nStephen
    Bussey — <a href=\"https://github.com/sb8244\" rel=\"nofollow\">https://github.com/sb8244</a><br>\n‘The
    Joy of an Elixir Monolith’ — <a href=\"https://2020.elixirconf.com/speakers/121/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/121/talk</a><br>\nCode BEAM
    / Code Sync — <a href=\"https://codesync.global/\" rel=\"nofollow\">https://codesync.global/</a><br>\nDan
    Lindeman — <a href=\"https://github.com/DanLindeman\" rel=\"nofollow\">https://github.com/DanLindeman</a><br>\nDan
    Lindeman Twitter — <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\n‘Short
    Circuit IoT Development Time with Nerves’ — <a href=\"https://2020.elixirconf.com/speakers/117/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/117/talk</a><br>\nNerves
    Platform — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nVery
    — <a href=\"https://www.verypossible.com/\" rel=\"nofollow\">https://www.verypossible.com/</a><br>\nJustin
    Schneck — <a href=\"https://www.linkedin.com/in/justinschneck/\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck/</a><br>\nDaniel
    Stoppard — <a href=\"https://www.linkedin.com/in/daniel-spofford-2307a655/\" rel=\"nofollow\">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>\nJenn
    Gamble — <a href=\"https://2020.elixirconf.com/speakers/115/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/115/bio</a><br>\nJuliana
    Helena — <a href=\"https://2020.elixirconf.com/speakers/129/bio\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/bio</a><br>\n‘How
    Elixir made me a better Java programmer’ — <a href=\"https://2020.elixirconf.com/speakers/129/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/129/talk</a><br>\nNerves
    Hub — <a href=\"https://www.nerves-hub.org/\" rel=\"nofollow\">https://www.nerves-hub.org/</a><br>\nJeffrey
    Utter — <a href=\"https://github.com/jeffutter\" rel=\"nofollow\">https://github.com/jeffutter</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\n‘Debugging
    Live Systems on the Beam’ — <a href=\"https://2020.elixirconf.com/speakers/114/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/114/talk</a><br>\nDatadog
    — <a href=\"https://www.datadoghq.com/\" rel=\"nofollow\">https://www.datadoghq.com/</a><br>\nErlang
    Sys Trace 2 — <a href=\"https://erlang.org/doc/man/sys.html#trace-2\" rel=\"nofollow\">https://erlang.org/doc/man/sys.html#trace-2</a><br>\nRecon
    Library — <a href=\"https://ferd.github.io/recon/\" rel=\"nofollow\">https://ferd.github.io/recon/</a><br>\nErlang
    Debugger — <a href=\"http://erlang.org/doc/apps/debugger/debugger_chapter.html\"
    rel=\"nofollow\">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>\nCatalina
    Astengo — <a href=\"https://github.com/castengo\" rel=\"nofollow\">https://github.com/castengo</a><br>\ngRPC
    + Elixir Microservices = A Love Story? — <a href=\"https://2020.elixirconf.com/speakers/116/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/116/talk</a><br>\nKC Elixir
    — <a href=\"https://www.kcelixir.com/\" rel=\"nofollow\">https://www.kcelixir.com/</a><br>\nLuciano
    Ramalho — <a href=\"https://github.com/ramalho/\" rel=\"nofollow\">https://github.com/ramalho/</a><br>\nLuciano
    Ramalho Twitter — <a href=\"https://twitter.com/ramalhoorg\" rel=\"nofollow\">https://twitter.com/ramalhoorg</a><br>\n‘UintSet:
    enumerable, streamable, understandable’ — <a href=\"https://2020.elixirconf.com/speakers/125/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/125/talk</a><br>\nThoughtWorks
    — <a href=\"https://www.thoughtworks.com/\" rel=\"nofollow\">https://www.thoughtworks.com/</a><br>\nGo
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nThe
    Go Programming Language — <a href=\"https://www.gopl.io/\" rel=\"nofollow\">https://www.gopl.io/</a><br>\nBrian
    W. Kernighan — <a href=\"https://www.cs.princeton.edu/people/profile/bwk\" rel=\"nofollow\">https://www.cs.princeton.edu/people/profile/bwk</a><br>\nFluent
    Python — <a href=\"https://www.oreilly.com/library/view/fluent-python/9781491946237/\"
    rel=\"nofollow\">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>\nSimon
    de Haan — <a href=\"https://github.com/smn\" rel=\"nofollow\">https://github.com/smn</a><br>\n‘Using
    Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href=\"https://2020.elixirconf.com/speakers/124/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/124/talk</a><br>\nYutaka
    Kikuchi — <a href=\"https://github.com/kikuyuta\" rel=\"nofollow\">https://github.com/kikuyuta</a><br>\n‘Applying
    Elixir for driving small hydropower plants with Nerves’<br>\n— <a href=\"https://2020.elixirconf.com/speakers/123/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/123/talk</a><br>\nProcessing
    — <a href=\"https://processing.org/\" rel=\"nofollow\">https://processing.org/</a><br>\nMelvin
    Cedeno — <a href=\"https://github.com/thecraftedgem\" rel=\"nofollow\">https://github.com/thecraftedgem</a><br>\n‘Teaching
    Functional Programming With Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/99/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/99/talk</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\n
    Nicholas Henry — <a href=\"https://github.com/nicholasjhenry\" rel=\"nofollow\">https://github.com/nicholasjhenry</a><br>\n‘The
    Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>\n<a href=\"https://2020.elixirconf.com/speakers/120/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/120/talk</a><br>\nBrian
    Marick — <a href=\"https://github.com/marick/\" rel=\"nofollow\">https://github.com/marick/</a><br>\n‘Tricks
    and tools for writing Elixir tests’ — <a href=\"https://2020.elixirconf.com/speakers/109/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/109/talk</a><br>\nGerman
    Velasco — <a href=\"http://www.germanvelasco.com/\" rel=\"nofollow\">http://www.germanvelasco.com/</a><br>\n‘Testing
    LiveView’ — <a href=\"https://2020.elixirconf.com/speakers/119/talk\" rel=\"nofollow\">https://2020.elixirconf.com/speakers/119/talk</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJapa
    Swadia — <a href=\"https://github.com/japa-swadia\" rel=\"nofollow\">https://github.com/japa-swadia</a><br>\nPodium
    — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\n‘Domain-Driven
    Design with Elixir’ — <a href=\"https://2020.elixirconf.com/speakers/105/talk\"
    rel=\"nofollow\">https://2020.elixirconf.com/speakers/105/talk</a><br>\nDesign
    Patterns — <a href=\"https://en.wikipedia.org/wiki/Design_Patterns\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Design_Patterns</a><br>\nJustus
    Eapen Social Handle — @JustusEapen<br>\nEric Oestrich Social Handle — @EricOestrich<br>\nSundi
    Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia,
    Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>\n      "
- title: Mark Windholtz on Domain-Driven Design (DDD)
  slug: s4e14-windholtz
  link: https://smartlogic.io/podcast/elixir-wizards/s4e14-windholtz
  guid: e18fef05-5ebe-42a1-9317-b193dfa84cd2
  pubDate: Thu, 20 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 20, 2020
  description: "Domain-driven design and extreme programming can help bridge the gap
    between development and business, and today we invite Mark Windholtz from Agile
    DNA to talk about how! Mark starts out by telling us about his early work in extreme
    programming before agile was a term and how he switched from Rails to Elixir after
    realizing its power for implementing domain-driven design. We take a deep dive
    with him into what these concepts mean, hearing him weigh in on how DDD can help
    architecture accommodate both development and business oriented complexities.
    For Mark, development and business teams must get a better understanding of each
    other’s jargon, and DDD is a way to accomplish this. The goal is to find a way
    of building a solid software core and to move away from features to systems thinking,
    whereby flexible software can make it more possible to do agile on the business
    side. We chat about some of the practices and principles that come into play when
    implementing DDD for Mark, and he details concepts like ubiquitous language, bounded
    contexts, and how to focus on the core domain by exploring models using tactical
    and strategic patterns. Along with this, Mark discusses users not being a domain
    concept, the challenges of getting new terms to stick in teams’ minds, and the
    task of refactoring code to reflect updated glossaries. Near the end of our conversation,
    Mark drills down on how DDD can optimize team efficiency. In closing, we get to
    know Chris Bell from ElixirTalk a little better in this week’s edition of Pattern
    Matching with Todd!\nKey Points From This Episode:\nThoughts on SpaceEx and their
    approach to engineering: system versus feature optimization.\nMark’s background
    in extreme programming, how he got started with AgileDNA, and the work they do
    there.\nA definition of extreme programming that adds engineering practices to
    Scrum.\nElixir’s superior ability to do DDD compared to Rails and how Mark got
    started using it.\nA brief introduction to domain-driven design, an approach to
    simplifying complex software.\nHow architecture needs to accommodate essential
    as well as accidental complexity.\nElixir’s ability to accommodate the building
    of domain models with well-separated code chunks.\nPrinciples of ubiquitous language
    and bounded contexts that make up DDD for Mark.\nUbiquitous language helps devs
    and businesspeople understand each other.\nBounded contexts: ‘Within this space,
    this world means this thing.’\nShifting focus from trying to make not all software,
    but core software, good.\nWhat patterns are applied to use principles of ubiquitous
    language and bounded contexts.\nFinding and focusing on the core domain by exploring
    models and how to do this using tactical and strategic patterns.\nThe consequences
    of users not being a domain concept which demands having a clearer language.\nChallenges
    of getting language and concepts to stick in business people’s minds.\nRefactoring
    code to reflect updated glossaries: Technical challenges teams doing DDD face.\nSwitching
    paradigms from feature-based optimizations to building an amazing code core.\nApproaches
    to modeling: the value of exploring multiple models.\nHow teams can become more
    efficient using DDD and extreme programming.\nFinal plugs from Mark and how Agile
    DNA can help use Elixir to implement DDD.\nPattern matching: Todd gets to know
    more about Chris Bell from ElixirTalk.\nHow Chris got into programming, what he’d
    do if not be a programmer, and more!\nWhy Chris loves history, dream pop, and
    what movie he’ll watch over and over.\nWhat project Chris is most excited about
    next: Building Settlers of Catan using LiveView.\nLinks Mentioned in Today’s Episode:\nElixir
    Wizards Listener Survey — https://smr.tl/podcastsurvey\nSmartLogic — https://smartlogic.io/
    \nMark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/\nMark Windholtz
    on Twitter — https://twitter.com/windholtz\nAgile DNA — http://www.agiledna.com\nChris
    Bell on Twitter — https://twitter.com/cjbell?lang=en\nElixirTalk — http://elixirtalk.com/\nChris
    Keathley — https://keathley.io/\nElon Musk — https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\nThe
    Everyday Astronaut — https://www.youtube.com/channel/UC6uKrUWqJ1R2HMTY3LIx5Q\nRob
    Martin — https://www.linkedin.com/in/version2beta/\nPerhap — https://github.com/Perhap/perhap\nAndrew
    Hao — https://github.com/andrewhao\nFred Brooks — http://www.cs.unc.edu/~brooks/\nThe
    Mythical Man-Month — https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\nZach
    Thomas — https://github.com/zdcthomas?language=elixir&tab=stars\n1917 — https://www.imdb.com/title/tt8579674/\nReal
    Estate — https://www.realestatetheband.com/\nGalaxie 500 — https://pitchfork.com/artists/1673-galaxie-500/\nStar
    Trek: First Contact — https://www.imdb.com/title/tt0117731/\nStar Trek: The Wrath
    of Khan — https://www.imdb.com/title/tt0084726/\nLiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nLonestar
    Elixir — https://lonestarelixir.com/\n Special Guest: Mark Windholtz.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+oBfiEP0c
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e18fef05-5ebe-42a1-9317-b193dfa84cd2.mp3
    length: '42382398'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Today we invite Mark Windholtz from Agile DNA to talk about how domain-driven
      design and extreme programming can help bridge the gap between development and
      business.
    duration: '58:51'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e18fef05-5ebe-42a1-9317-b193dfa84cd2/cover.jpg?v=1
    summary: "\n        <p>Domain-driven design and extreme programming can help bridge
      the gap between development and business, and today we invite Mark Windholtz
      from Agile DNA to talk about how! Mark starts out by telling us about his early
      work in extreme programming before agile was a term and how he switched from
      Rails to Elixir after realizing its power for implementing domain-driven design.
      We take a deep dive with him into what these concepts mean, hearing him weigh
      in on how DDD can help architecture accommodate both development and business
      oriented complexities. For Mark, development and business teams must get a better
      understanding of each other’s jargon, and DDD is a way to accomplish this. The
      goal is to find a way of building a solid software core and to move away from
      features to systems thinking, whereby flexible software can make it more possible
      to do agile on the business side. We chat about some of the practices and principles
      that come into play when implementing DDD for Mark, and he details concepts
      like ubiquitous language, bounded contexts, and how to focus on the core domain
      by exploring models using tactical and strategic patterns. Along with this,
      Mark discusses users not being a domain concept, the challenges of getting new
      terms to stick in teams’ minds, and the task of refactoring code to reflect
      updated glossaries. Near the end of our conversation, Mark drills down on how
      DDD can optimize team efficiency. In closing, we get to know Chris Bell from
      ElixirTalk a little better in this week’s edition of Pattern Matching with Todd!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Thoughts on SpaceEx and their approach
      to engineering: system versus feature optimization.</li>\n<li>Mark’s background
      in extreme programming, how he got started with AgileDNA, and the work they
      do there.</li>\n<li>A definition of extreme programming that adds engineering
      practices to Scrum.</li>\n<li>Elixir’s superior ability to do DDD compared to
      Rails and how Mark got started using it.</li>\n<li>A brief introduction to domain-driven
      design, an approach to simplifying complex software.</li>\n<li>How architecture
      needs to accommodate essential as well as accidental complexity.</li>\n<li>Elixir’s
      ability to accommodate the building of domain models with well-separated code
      chunks.</li>\n<li>Principles of ubiquitous language and bounded contexts that
      make up DDD for Mark.</li>\n<li>Ubiquitous language helps devs and businesspeople
      understand each other.</li>\n<li>Bounded contexts: ‘Within this space, this
      world means this thing.’</li>\n<li>Shifting focus from trying to make not all
      software, but core software, good.</li>\n<li>What patterns are applied to use
      principles of ubiquitous language and bounded contexts.</li>\n<li>Finding and
      focusing on the core domain by exploring models and how to do this using tactical
      and strategic patterns.</li>\n<li>The consequences of users not being a domain
      concept which demands having a clearer language.</li>\n<li>Challenges of getting
      language and concepts to stick in business people’s minds.</li>\n<li>Refactoring
      code to reflect updated glossaries: Technical challenges teams doing DDD face.</li>\n<li>Switching
      paradigms from feature-based optimizations to building an amazing code core.</li>\n<li>Approaches
      to modeling: the value of exploring multiple models.</li>\n<li>How teams can
      become more efficient using DDD and extreme programming.</li>\n<li>Final plugs
      from Mark and how Agile DNA can help use Elixir to implement DDD.</li>\n<li>Pattern
      matching: Todd gets to know more about Chris Bell from ElixirTalk.</li>\n<li>How
      Chris got into programming, what he’d do if not be a programmer, and more!</li>\n<li>Why
      Chris loves history, dream pop, and what movie he’ll watch over and over.</li>\n<li>What
      project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a
      href=\"https://smr.tl/podcastsurvey\" rel=\"nofollow\">https://smr.tl/podcastsurvey</a></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nMark Windholtz on LinkedIn — <a href=\"https://www.linkedin.com/in/mwindholtz/\"
      rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMark Windholtz
      on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nAgile
      DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nChris
      Bell on Twitter — <a href=\"https://twitter.com/cjbell_?lang=en\" rel=\"nofollow\">https://twitter.com/cjbell_?lang=en</a><br>\nElixirTalk
      — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>\nThe
      Everyday Astronaut — <a href=\"https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q\"
      rel=\"nofollow\">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>\nRob
      Martin — <a href=\"https://www.linkedin.com/in/version2beta/\" rel=\"nofollow\">https://www.linkedin.com/in/version2beta/</a><br>\nPerhap
      — <a href=\"https://github.com/Perhap/perhap\" rel=\"nofollow\">https://github.com/Perhap/perhap</a><br>\nAndrew
      Hao — <a href=\"https://github.com/andrewhao\" rel=\"nofollow\">https://github.com/andrewhao</a><br>\nFred
      Brooks — <a href=\"http://www.cs.unc.edu/%7Ebrooks/\" rel=\"nofollow\">http://www.cs.unc.edu/~brooks/</a><br>\nThe
      Mythical Man-Month — <a href=\"https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\"
      rel=\"nofollow\">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>\nZach
      Thomas — <a href=\"https://github.com/zdcthomas?language=elixir&tab=stars\"
      rel=\"nofollow\">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>\n1917
      — <a href=\"https://www.imdb.com/title/tt8579674/\" rel=\"nofollow\">https://www.imdb.com/title/tt8579674/</a><br>\nReal
      Estate — <a href=\"https://www.realestatetheband.com/\" rel=\"nofollow\">https://www.realestatetheband.com/</a><br>\nGalaxie
      500 — <a href=\"https://pitchfork.com/artists/1673-galaxie-500/\" rel=\"nofollow\">https://pitchfork.com/artists/1673-galaxie-500/</a><br>\nStar
      Trek: First Contact — <a href=\"https://www.imdb.com/title/tt0117731/\" rel=\"nofollow\">https://www.imdb.com/title/tt0117731/</a><br>\nStar
      Trek: The Wrath of Khan — <a href=\"https://www.imdb.com/title/tt0084726/\"
      rel=\"nofollow\">https://www.imdb.com/title/tt0084726/</a><br>\nLiveView — <a
      href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
      Guest: Mark Windholtz.</p>\n      "
  contentEncoded: "\n        <p>Domain-driven design and extreme programming can help
    bridge the gap between development and business, and today we invite Mark Windholtz
    from Agile DNA to talk about how! Mark starts out by telling us about his early
    work in extreme programming before agile was a term and how he switched from Rails
    to Elixir after realizing its power for implementing domain-driven design. We
    take a deep dive with him into what these concepts mean, hearing him weigh in
    on how DDD can help architecture accommodate both development and business oriented
    complexities. For Mark, development and business teams must get a better understanding
    of each other’s jargon, and DDD is a way to accomplish this. The goal is to find
    a way of building a solid software core and to move away from features to systems
    thinking, whereby flexible software can make it more possible to do agile on the
    business side. We chat about some of the practices and principles that come into
    play when implementing DDD for Mark, and he details concepts like ubiquitous language,
    bounded contexts, and how to focus on the core domain by exploring models using
    tactical and strategic patterns. Along with this, Mark discusses users not being
    a domain concept, the challenges of getting new terms to stick in teams’ minds,
    and the task of refactoring code to reflect updated glossaries. Near the end of
    our conversation, Mark drills down on how DDD can optimize team efficiency. In
    closing, we get to know Chris Bell from ElixirTalk a little better in this week’s
    edition of Pattern Matching with Todd!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Thoughts
    on SpaceEx and their approach to engineering: system versus feature optimization.</li>\n<li>Mark’s
    background in extreme programming, how he got started with AgileDNA, and the work
    they do there.</li>\n<li>A definition of extreme programming that adds engineering
    practices to Scrum.</li>\n<li>Elixir’s superior ability to do DDD compared to
    Rails and how Mark got started using it.</li>\n<li>A brief introduction to domain-driven
    design, an approach to simplifying complex software.</li>\n<li>How architecture
    needs to accommodate essential as well as accidental complexity.</li>\n<li>Elixir’s
    ability to accommodate the building of domain models with well-separated code
    chunks.</li>\n<li>Principles of ubiquitous language and bounded contexts that
    make up DDD for Mark.</li>\n<li>Ubiquitous language helps devs and businesspeople
    understand each other.</li>\n<li>Bounded contexts: ‘Within this space, this world
    means this thing.’</li>\n<li>Shifting focus from trying to make not all software,
    but core software, good.</li>\n<li>What patterns are applied to use principles
    of ubiquitous language and bounded contexts.</li>\n<li>Finding and focusing on
    the core domain by exploring models and how to do this using tactical and strategic
    patterns.</li>\n<li>The consequences of users not being a domain concept which
    demands having a clearer language.</li>\n<li>Challenges of getting language and
    concepts to stick in business people’s minds.</li>\n<li>Refactoring code to reflect
    updated glossaries: Technical challenges teams doing DDD face.</li>\n<li>Switching
    paradigms from feature-based optimizations to building an amazing code core.</li>\n<li>Approaches
    to modeling: the value of exploring multiple models.</li>\n<li>How teams can become
    more efficient using DDD and extreme programming.</li>\n<li>Final plugs from Mark
    and how Agile DNA can help use Elixir to implement DDD.</li>\n<li>Pattern matching:
    Todd gets to know more about Chris Bell from ElixirTalk.</li>\n<li>How Chris got
    into programming, what he’d do if not be a programmer, and more!</li>\n<li>Why
    Chris loves history, dream pop, and what movie he’ll watch over and over.</li>\n<li>What
    project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Elixir Wizards Listener Survey — <a href=\"https://smr.tl/podcastsurvey\"
    rel=\"nofollow\">https://smr.tl/podcastsurvey</a></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nMark Windholtz on LinkedIn —
    <a href=\"https://www.linkedin.com/in/mwindholtz/\" rel=\"nofollow\">https://www.linkedin.com/in/mwindholtz/</a><br>\nMark
    Windholtz on Twitter — <a href=\"https://twitter.com/windholtz\" rel=\"nofollow\">https://twitter.com/windholtz</a><br>\nAgile
    DNA — <a href=\"http://www.agiledna.com\" rel=\"nofollow\">http://www.agiledna.com</a><br>\nChris
    Bell on Twitter — <a href=\"https://twitter.com/cjbell_?lang=en\" rel=\"nofollow\">https://twitter.com/cjbell_?lang=en</a><br>\nElixirTalk
    — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/#5bbe73cc7999\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>\nThe
    Everyday Astronaut — <a href=\"https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q\"
    rel=\"nofollow\">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>\nRob
    Martin — <a href=\"https://www.linkedin.com/in/version2beta/\" rel=\"nofollow\">https://www.linkedin.com/in/version2beta/</a><br>\nPerhap
    — <a href=\"https://github.com/Perhap/perhap\" rel=\"nofollow\">https://github.com/Perhap/perhap</a><br>\nAndrew
    Hao — <a href=\"https://github.com/andrewhao\" rel=\"nofollow\">https://github.com/andrewhao</a><br>\nFred
    Brooks — <a href=\"http://www.cs.unc.edu/%7Ebrooks/\" rel=\"nofollow\">http://www.cs.unc.edu/~brooks/</a><br>\nThe
    Mythical Man-Month — <a href=\"https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959\"
    rel=\"nofollow\">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>\nZach
    Thomas — <a href=\"https://github.com/zdcthomas?language=elixir&tab=stars\" rel=\"nofollow\">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>\n1917
    — <a href=\"https://www.imdb.com/title/tt8579674/\" rel=\"nofollow\">https://www.imdb.com/title/tt8579674/</a><br>\nReal
    Estate — <a href=\"https://www.realestatetheband.com/\" rel=\"nofollow\">https://www.realestatetheband.com/</a><br>\nGalaxie
    500 — <a href=\"https://pitchfork.com/artists/1673-galaxie-500/\" rel=\"nofollow\">https://pitchfork.com/artists/1673-galaxie-500/</a><br>\nStar
    Trek: First Contact — <a href=\"https://www.imdb.com/title/tt0117731/\" rel=\"nofollow\">https://www.imdb.com/title/tt0117731/</a><br>\nStar
    Trek: The Wrath of Khan — <a href=\"https://www.imdb.com/title/tt0084726/\" rel=\"nofollow\">https://www.imdb.com/title/tt0084726/</a><br>\nLiveView
    — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
    Guest: Mark Windholtz.</p>\n      "
- title: 'Elixir Wizards Dojo: Nerves Part 2 with Connor Rigby and Todd Resudek'
  slug: s4e13b-dojo
  link: https://smartlogic.io/podcast/elixir-wizards/s4e13b-dojo
  guid: 6cf32d50-909b-4839-a690-0fdc8ec48a2f
  pubDate: Thu, 13 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 13, 2020
  description: "Welcome to the second part of our special Elixir Wizards Dojo. A mashup
    made in partnership with ElixirConf Japan. In today’s episode, we talk to Nerves
    core team members Todd Resudek and Connor Rigby about all things Nerves. But first,
    Todd leads us into a delightful digression about his enjoyment of heavy metal
    music. From metal back to Nerves, Todd chats about how he uses Nerves to monitor
    his internet connection and to automatically restart his router when certain conditions
    are met. After talking about using Flutter and Dart to build GUIs, we ask Todd
    to share another of his Nerves projects; the future of sprinklers — the Drizzle
    2000! We then explore Connor’s self-defined role in the Nerves team as the development
    head of networking libraries before discussing how easy it is to use Nerves if
    you are an Elixir user. Todd and Connor dive into their utopian visions for the
    future of Nerves and why no other IoT solutions can compete with the tooling that
    Nerves provides. We talk about FarmBot and the many features that its models have,
    including how they can pulverize weeds. This springboards the conversion into
    the increasing importance of IoT tech in the agriculture sector and how it’s likely
    to be the next billion-dollar industry. We round off the episode by giving our
    guests the space to plug themselves and they close with a request for listeners
    to Iron Maiden and Metallica’s first albums. A perfect compliment to the first
    installment of the Elixir Wizards Dojo, tune in to learn more about the Nerves
    Project.\nKey Points From This Episode:\nIntroducing our guests and this episode’s
    connection to ElixirConf Japan. \nConnor and Todd lead a chat on the history and
    subgenres of heavy metal music.\nTodd talks about using Nerves to monitor his
    internet connection and restart his router.\nBuilding a user interface for Nerves’s
    projects using Flutter; Google’s UI toolkit. \nBest practices for developing apps
    with a specific focus on GUI apps.\nHear about the Drizzle 2000! Todd’s sprinkler
    controller system that runs on Nerves.\nTodd and Connor’s respective roles as
    a part of the Nerves core team. \nThe benefit of using Nerves; once it’s booted
    it’s a regular Elixir app. \nWhat a kiosk terminal is and how you would go about
    internationalizing one.\nExploring the future of Nerves and hardware development.\nComparing
    Nerves to other IoT solutions; in conclusion, nothing can compete. \nDifferent
    FarmBot system models that all use Nerves to grow food for you.\nUsing Nerves
    to encode and record video or to create a live stream. \nWhy integrating IoT into
    the agricultural sector will be the next billion-dollar industry.\nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nElixirConf — https://elixirconf.com/2020\nConnor
    Rigby GitHub — https://github.com/ConnorRigby\nTodd Resudek Twitter — https://twitter.com/sprsmpl\nTodd
    Resudek GitHub — https://github.com/supersimple\nSimplebet — https://simplebet.io/\nFlutter
    — https://flutter.dev/\nBinary Noggin — https://binarynoggin.com/\nNerves Project
    — https://www.nerves-project.org/\nNerves Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution\nNerves
    Vintage Net GitHub — https://github.com/nerves-networking/vintagenet\nNerves Web
    Kiosk GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3\nRhapsody of
    Fire — https://www.rhapsodyoffire.com/\nRonnie James Dio — https://www.ronniejamesdio.com/\nDragonForce
    — https://dragonforce.com/\nBlack Sabbath — https://www.blacksabbath.com/\nDeep
    Purple — https://deeppurple.com/\nIron Maiden — https://ironmaiden.com\nJudas
    Priest — http://www.judaspriest.com/home/\nSam Dunn — https://www.imdb.com/name/nm0242757/\nRyan
    Holiday — https://ryanholiday.net/\nArjen Lucassen — https://www.arjenlucassen.com\nMetallica
    — https://www.metallica.com/\nSan Francisco Symphony — https://www.sfsymphony.org/\nFping
    — https://fping.org/\nDart — https://dart.dev/\nReact Native — https://reactnative.dev/\nScenic
    — https://kry10.com/\nPhoenix Framework — https://www.phoenixframework.org/\nDrizzler
    2000 GitHub — https://github.com/supersimple/drizzle\nDitch Witch — https://www.ditchwitch.com/\nJon
    Carstens — https://twitter.com/joncarstens?lang=en\nLe Tote — https://letote.com/\nElectron
    — https://www.electronjs.org/\nMatthew Ludwigs — https://www.linkedin.com/in/mattludwigs/\nSmartRent
    — https://smartrent.com/\nSophie Debenedetto — http://sophiedebenedetto.nyc/\nFarmBot
    — https://farm.bot/\nMembrane Framework — https://www.membraneframework.org/\nGreg
    Mefford — https://www.linkedin.com/in/ferggo/\nOmni-eye GitHub — https://github.com/GregMefford/omni_eye\nBowery
    Farming — https://boweryfarming.com/\nJohn Deere — https://www.deere.com\nShow
    Notes - Japanese\nElixir Wizards Dojo 第2部 Connor Rigby と Todd Resudek\nEpisode
    S4E13b: 概要\nElixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd
    Resudek と Connor Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
    2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
    Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。\nこのエピソードのみどころ\nゲストの紹介と、このエピソードとElixirConf
    JPとのコネクションについて\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の\nFultter
    というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス\nDrizzle
    2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム\nToddとConnorのNervesコアチームにおけるそれぞれの役割\nNervesを使う利点:
    一度起動すると通常のElixirアプリになる\nキオスク端末とは何か，どのようにキオスク端末を国際化するか\nNervesとハードウェア開発の将来の探求\nNervesと他のIoTソリューションの比較:
    結論としては，Nervesに敵うものはない\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法\nIoTを農業分野に統合することが次の10億ドル産業になる理由
    Special Guests: Connor Rigby and Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+JKHYdMz-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cf32d50-909b-4839-a690-0fdc8ec48a2f.mp3
    length: '61996266'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, in partnership with ElixirConf Japan, we talk to
      Nerves core team members about all things Nerves.
    duration: '42:41'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cf32d50-909b-4839-a690-0fdc8ec48a2f/cover.jpg?v=1
    summary: "\n        <p>Welcome to the second part of our special Elixir Wizards
      Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode,
      we talk to Nerves core team members Todd Resudek and Connor Rigby about all
      things Nerves. But first, Todd leads us into a delightful digression about his
      enjoyment of heavy metal music. From metal back to Nerves, Todd chats about
      how he uses Nerves to monitor his internet connection and to automatically restart
      his router when certain conditions are met. After talking about using Flutter
      and Dart to build GUIs, we ask Todd to share another of his Nerves projects;
      the future of sprinklers — the Drizzle 2000! We then explore Connor’s self-defined
      role in the Nerves team as the development head of networking libraries before
      discussing how easy it is to use Nerves if you are an Elixir user. Todd and
      Connor dive into their utopian visions for the future of Nerves and why no other
      IoT solutions can compete with the tooling that Nerves provides. We talk about
      FarmBot and the many features that its models have, including how they can pulverize
      weeds. This springboards the conversion into the increasing importance of IoT
      tech in the agriculture sector and how it’s likely to be the next billion-dollar
      industry. We round off the episode by giving our guests the space to plug themselves
      and they close with a request for listeners to Iron Maiden and Metallica’s first
      albums. A perfect compliment to the first installment of the Elixir Wizards
      Dojo, tune in to learn more about the Nerves Project.</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>Introducing our guests and this episode’s connection
      to ElixirConf Japan. </li>\n<li>Connor and Todd lead a chat on the history and
      subgenres of heavy metal music.</li>\n<li>Todd talks about using Nerves to monitor
      his internet connection and restart his router.</li>\n<li>Building a user interface
      for Nerves’s projects using Flutter; Google’s UI toolkit. </li>\n<li>Best practices
      for developing apps with a specific focus on GUI apps.</li>\n<li>Hear about
      the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>\n<li>Todd
      and Connor’s respective roles as a part of the Nerves core team. </li>\n<li>The
      benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>\n<li>What
      a kiosk terminal is and how you would go about internationalizing one.</li>\n<li>Exploring
      the future of Nerves and hardware development.</li>\n<li>Comparing Nerves to
      other IoT solutions; in conclusion, nothing can compete. </li>\n<li>Different
      FarmBot system models that all use Nerves to grow food for you.</li>\n<li>Using
      Nerves to encode and record video or to create a live stream. </li>\n<li>Why
      integrating IoT into the agricultural sector will be the next billion-dollar
      industry.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nConnor
      Rigby GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nTodd
      Resudek Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
      Resudek GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nSimplebet
      — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a><br>\nFlutter
      — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
      Project GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
      Vintage Net GitHub — <a href=\"https://github.com/nerves-networking/vintage_net\"
      rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nNerves
      Web Kiosk GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
      rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nRhapsody
      of Fire — <a href=\"https://www.rhapsodyoffire.com/\" rel=\"nofollow\">https://www.rhapsodyoffire.com/</a><br>\nRonnie
      James Dio — <a href=\"https://www.ronniejamesdio.com/\" rel=\"nofollow\">https://www.ronniejamesdio.com/</a><br>\nDragonForce
      — <a href=\"https://dragonforce.com/\" rel=\"nofollow\">https://dragonforce.com/</a><br>\nBlack
      Sabbath — <a href=\"https://www.blacksabbath.com/\" rel=\"nofollow\">https://www.blacksabbath.com/</a><br>\nDeep
      Purple — <a href=\"https://deeppurple.com/\" rel=\"nofollow\">https://deeppurple.com/</a><br>\nIron
      Maiden — <a href=\"https://ironmaiden.com\" rel=\"nofollow\">https://ironmaiden.com</a><br>\nJudas
      Priest — <a href=\"http://www.judaspriest.com/home/\" rel=\"nofollow\">http://www.judaspriest.com/home/</a><br>\nSam
      Dunn — <a href=\"https://www.imdb.com/name/nm0242757/\" rel=\"nofollow\">https://www.imdb.com/name/nm0242757/</a><br>\nRyan
      Holiday — <a href=\"https://ryanholiday.net/\" rel=\"nofollow\">https://ryanholiday.net/</a><br>\nArjen
      Lucassen — <a href=\"https://www.arjenlucassen.com\" rel=\"nofollow\">https://www.arjenlucassen.com</a><br>\nMetallica
      — <a href=\"https://www.metallica.com/\" rel=\"nofollow\">https://www.metallica.com/</a><br>\nSan
      Francisco Symphony — <a href=\"https://www.sfsymphony.org/\" rel=\"nofollow\">https://www.sfsymphony.org/</a><br>\nFping
      — <a href=\"https://fping.org/\" rel=\"nofollow\">https://fping.org/</a><br>\nDart
      — <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nReact
      Native — <a href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\nScenic
      — <a href=\"https://kry10.com/\" rel=\"nofollow\">https://kry10.com/</a><br>\nPhoenix
      Framework — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nDrizzler
      2000 GitHub — <a href=\"https://github.com/supersimple/drizzle\" rel=\"nofollow\">https://github.com/supersimple/drizzle</a><br>\nDitch
      Witch — <a href=\"https://www.ditchwitch.com/\" rel=\"nofollow\">https://www.ditchwitch.com/</a><br>\nJon
      Carstens — <a href=\"https://twitter.com/joncarstens?lang=en\" rel=\"nofollow\">https://twitter.com/joncarstens?lang=en</a><br>\nLe
      Tote — <a href=\"https://letote.com/\" rel=\"nofollow\">https://letote.com/</a><br>\nElectron
      — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\nMatthew
      Ludwigs — <a href=\"https://www.linkedin.com/in/mattludwigs/\" rel=\"nofollow\">https://www.linkedin.com/in/mattludwigs/</a><br>\nSmartRent
      — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nSophie
      Debenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFarmBot
      — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nMembrane
      Framework — <a href=\"https://www.membraneframework.org/\" rel=\"nofollow\">https://www.membraneframework.org/</a><br>\nGreg
      Mefford — <a href=\"https://www.linkedin.com/in/ferggo/\" rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nOmni-eye
      GitHub — <a href=\"https://github.com/GregMefford/omni_eye\" rel=\"nofollow\">https://github.com/GregMefford/omni_eye</a><br>\nBowery
      Farming — <a href=\"https://boweryfarming.com/\" rel=\"nofollow\">https://boweryfarming.com/</a><br>\nJohn
      Deere — <a href=\"https://www.deere.com\" rel=\"nofollow\">https://www.deere.com</a></p>\n\n<p><strong>Show
      Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd
      Resudek</p>\n\n<p>Episode S4E13b: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf
      JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor
      Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
      2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
      Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、このエピソードとElixirConf
      JPとのコネクションについて<br>\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>\nFultter
      というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>\nDrizzle
      2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>\nToddとConnorのNervesコアチームにおけるそれぞれの役割<br>\nNervesを使う利点:
      一度起動すると通常のElixirアプリになる<br>\nキオスク端末とは何か，どのようにキオスク端末を国際化するか<br>\nNervesとハードウェア開発の将来の探求<br>\nNervesと他のIoTソリューションの比較:
      結論としては，Nervesに敵うものはない<br>\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>\nIoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special
      Guests: Connor Rigby and Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the second part of our special Elixir Wizards
    Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode,
    we talk to Nerves core team members Todd Resudek and Connor Rigby about all things
    Nerves. But first, Todd leads us into a delightful digression about his enjoyment
    of heavy metal music. From metal back to Nerves, Todd chats about how he uses
    Nerves to monitor his internet connection and to automatically restart his router
    when certain conditions are met. After talking about using Flutter and Dart to
    build GUIs, we ask Todd to share another of his Nerves projects; the future of
    sprinklers — the Drizzle 2000! We then explore Connor’s self-defined role in the
    Nerves team as the development head of networking libraries before discussing
    how easy it is to use Nerves if you are an Elixir user. Todd and Connor dive into
    their utopian visions for the future of Nerves and why no other IoT solutions
    can compete with the tooling that Nerves provides. We talk about FarmBot and the
    many features that its models have, including how they can pulverize weeds. This
    springboards the conversion into the increasing importance of IoT tech in the
    agriculture sector and how it’s likely to be the next billion-dollar industry.
    We round off the episode by giving our guests the space to plug themselves and
    they close with a request for listeners to Iron Maiden and Metallica’s first albums.
    A perfect compliment to the first installment of the Elixir Wizards Dojo, tune
    in to learn more about the Nerves Project.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    our guests and this episode’s connection to ElixirConf Japan. </li>\n<li>Connor
    and Todd lead a chat on the history and subgenres of heavy metal music.</li>\n<li>Todd
    talks about using Nerves to monitor his internet connection and restart his router.</li>\n<li>Building
    a user interface for Nerves’s projects using Flutter; Google’s UI toolkit. </li>\n<li>Best
    practices for developing apps with a specific focus on GUI apps.</li>\n<li>Hear
    about the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>\n<li>Todd
    and Connor’s respective roles as a part of the Nerves core team. </li>\n<li>The
    benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>\n<li>What
    a kiosk terminal is and how you would go about internationalizing one.</li>\n<li>Exploring
    the future of Nerves and hardware development.</li>\n<li>Comparing Nerves to other
    IoT solutions; in conclusion, nothing can compete. </li>\n<li>Different FarmBot
    system models that all use Nerves to grow food for you.</li>\n<li>Using Nerves
    to encode and record video or to create a live stream. </li>\n<li>Why integrating
    IoT into the agricultural sector will be the next billion-dollar industry.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\"
    rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nConnor Rigby GitHub — <a
    href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nTodd
    Resudek Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nTodd
    Resudek GitHub — <a href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a><br>\nSimplebet
    — <a href=\"https://simplebet.io/\" rel=\"nofollow\">https://simplebet.io/</a><br>\nFlutter
    — <a href=\"https://flutter.dev/\" rel=\"nofollow\">https://flutter.dev/</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
    Project GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
    Vintage Net GitHub — <a href=\"https://github.com/nerves-networking/vintage_net\"
    rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nNerves
    Web Kiosk GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
    rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nRhapsody
    of Fire — <a href=\"https://www.rhapsodyoffire.com/\" rel=\"nofollow\">https://www.rhapsodyoffire.com/</a><br>\nRonnie
    James Dio — <a href=\"https://www.ronniejamesdio.com/\" rel=\"nofollow\">https://www.ronniejamesdio.com/</a><br>\nDragonForce
    — <a href=\"https://dragonforce.com/\" rel=\"nofollow\">https://dragonforce.com/</a><br>\nBlack
    Sabbath — <a href=\"https://www.blacksabbath.com/\" rel=\"nofollow\">https://www.blacksabbath.com/</a><br>\nDeep
    Purple — <a href=\"https://deeppurple.com/\" rel=\"nofollow\">https://deeppurple.com/</a><br>\nIron
    Maiden — <a href=\"https://ironmaiden.com\" rel=\"nofollow\">https://ironmaiden.com</a><br>\nJudas
    Priest — <a href=\"http://www.judaspriest.com/home/\" rel=\"nofollow\">http://www.judaspriest.com/home/</a><br>\nSam
    Dunn — <a href=\"https://www.imdb.com/name/nm0242757/\" rel=\"nofollow\">https://www.imdb.com/name/nm0242757/</a><br>\nRyan
    Holiday — <a href=\"https://ryanholiday.net/\" rel=\"nofollow\">https://ryanholiday.net/</a><br>\nArjen
    Lucassen — <a href=\"https://www.arjenlucassen.com\" rel=\"nofollow\">https://www.arjenlucassen.com</a><br>\nMetallica
    — <a href=\"https://www.metallica.com/\" rel=\"nofollow\">https://www.metallica.com/</a><br>\nSan
    Francisco Symphony — <a href=\"https://www.sfsymphony.org/\" rel=\"nofollow\">https://www.sfsymphony.org/</a><br>\nFping
    — <a href=\"https://fping.org/\" rel=\"nofollow\">https://fping.org/</a><br>\nDart
    — <a href=\"https://dart.dev/\" rel=\"nofollow\">https://dart.dev/</a><br>\nReact
    Native — <a href=\"https://reactnative.dev/\" rel=\"nofollow\">https://reactnative.dev/</a><br>\nScenic
    — <a href=\"https://kry10.com/\" rel=\"nofollow\">https://kry10.com/</a><br>\nPhoenix
    Framework — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nDrizzler
    2000 GitHub — <a href=\"https://github.com/supersimple/drizzle\" rel=\"nofollow\">https://github.com/supersimple/drizzle</a><br>\nDitch
    Witch — <a href=\"https://www.ditchwitch.com/\" rel=\"nofollow\">https://www.ditchwitch.com/</a><br>\nJon
    Carstens — <a href=\"https://twitter.com/joncarstens?lang=en\" rel=\"nofollow\">https://twitter.com/joncarstens?lang=en</a><br>\nLe
    Tote — <a href=\"https://letote.com/\" rel=\"nofollow\">https://letote.com/</a><br>\nElectron
    — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a><br>\nMatthew
    Ludwigs — <a href=\"https://www.linkedin.com/in/mattludwigs/\" rel=\"nofollow\">https://www.linkedin.com/in/mattludwigs/</a><br>\nSmartRent
    — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nSophie
    Debenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFarmBot
    — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nMembrane
    Framework — <a href=\"https://www.membraneframework.org/\" rel=\"nofollow\">https://www.membraneframework.org/</a><br>\nGreg
    Mefford — <a href=\"https://www.linkedin.com/in/ferggo/\" rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nOmni-eye
    GitHub — <a href=\"https://github.com/GregMefford/omni_eye\" rel=\"nofollow\">https://github.com/GregMefford/omni_eye</a><br>\nBowery
    Farming — <a href=\"https://boweryfarming.com/\" rel=\"nofollow\">https://boweryfarming.com/</a><br>\nJohn
    Deere — <a href=\"https://www.deere.com\" rel=\"nofollow\">https://www.deere.com</a></p>\n\n<p><strong>Show
    Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd
    Resudek</p>\n\n<p>Episode S4E13b: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf
    JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor Rigby
    とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle
    2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron
    Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、このエピソードとElixirConf
    JPとのコネクションについて<br>\nConnor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>\nToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>\nFultter
    というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>\nGUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>\nDrizzle
    2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>\nToddとConnorのNervesコアチームにおけるそれぞれの役割<br>\nNervesを使う利点:
    一度起動すると通常のElixirアプリになる<br>\nキオスク端末とは何か，どのようにキオスク端末を国際化するか<br>\nNervesとハードウェア開発の将来の探求<br>\nNervesと他のIoTソリューションの比較:
    結論としては，Nervesに敵うものはない<br>\nファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>\nNervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>\nIoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special
    Guests: Connor Rigby and Todd Resudek.</p>\n      "
- title: 'Elixir Wizards Dojo: Nerves Part 1 with Frank Hunleth and Justin Schneck'
  slug: s4e13a-dojo
  link: https://smartlogic.io/podcast/elixir-wizards/s4e13a-dojo
  guid: 96d50b65-bc90-434e-ae8b-96b7c9f3990d
  pubDate: Tue, 11 Aug 2020 06:00:00 -0400
  pubDateFriendly: August 11, 2020
  description: "Welcome to the first part of our extra special Elixir Wizards Dojo.
    A mashup made in partnership with ElixirConf Japan, in today’s episode, we pose
    questions asked by the Japanese Nerves community to Nerves core team members,
    Frank Hunleth and Justin Schneck. After introducing our guests, we talk about
    which companies make use of Nerve and explore its use cases by looking at FarmBot,
    an open source robotic farming tool. Justin and Frank take turns explaining the
    differences between soft and hard real-time — a springboard to show how Nerve
    excels within its ‘middle-ground of complexity’, production-orientated niche.
    From Halloween pranks to growing Sichuan chili peppers in the office, Justin and
    Frank share the projects that they’ve built using Nerves and emphasize its wide
    applicability. We discuss how Nerves has been both officially and unofficially
    ported to different devices, why people send Frank random pieces of hardware in
    the mail, and the differences between open-source and making your work publicly
    available. Justin and Frank commiserate over the challenge of working with Bluetooth
    and the beauty of the Nerves community in pushing innovation. We chat more about
    Nerves, including how you can extend the functionality of file systems, before
    Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more
    about the Nerves Project, a system that can add a great deal of agility to any
    development cycle. \nKey Points From This Episode:\nIntroducing our guests and
    this episode’s focus on the Japanese Elixir community. \nThe double-edge of broadcasting
    your excitement about Elixir projects. \nLooking at FarmBot as a practical use-case
    to show off what Nerve can do.\nDifferences between soft and hard real-time using
    FarmBot as an example.\nWhat Nerves excels at; acting as a gateway for other processors.
    \nJustin and Frank share the projects that they’ve built using Nerves.\nA brief
    digression where Justin shares his love of Chinese Sichuan cooking. \nWhat other
    markets are making use of Nerves in their product cycle.\nThe unique ‘middle-ground’
    of complexity that Nerves is best suited to address. \nPorting Nerves to different
    devices and what devices need to run Nerves. \nOpen-source versus making work
    public and how Justin took some of his Bluetooth work public.\nThe challenges
    of working with Bluetooth.\nHear how a group in the community is making a Nerves
    keyboard.  \nHow you can extend the functionality of a file system on Nerves.\nNerves’s
    features that make it such an excellent tool within a production environment.\nWhen
    deploying with Nerves Hub, learn how to configure Wi-Fi modules with different
    devices. \nStarting with a facelift, Frank and Justin share their roadmap for
    Nerves’s future. \nHow companies Vary and SmartRent have contributed to the longevity
    of Nerves.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixirConf — https://elixirconf.com/2020\nFrank Hunleth — https://www.linkedin.com/in/fhunleth/\nJustin
    Schneck — https://www.linkedin.com/in/justinschneck\nSusumu Yamazaki — https://twitter.com/zacky1972\nNerves
    Project — https://www.nerves-project.org/\nNerves Project Open Collective — https://opencollective.com/nerves-project\nNerves
    Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution\nNerves
    Kiosk System GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3\nFarmBot
    — https://farm.bot/\nRose Point — https://www.rosepoint.com/\nThe Food of Sichuan
    — https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\nLance Halvorsen
    — https://www.linkedin.com/in/lance-halvorsen-07a102/\nAtom VM GitHub — https://github.com/bettio/AtomVM\nLichee
    Pi Zero — https://licheepizero.us/\nPavlok — https://pavlok.com/\nHarald GitHub
    — https://github.com/verypossible-labs/harald\nBluetooth with Nerves Notes GitHub
    — https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\nFwup GitHub
    — https://github.com/fhunleth/fwup\n‘Building a keyboard with Elixir’ — https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\nVintage
    Net Wizard GitHub — https://github.com/nerves-networking/vintagenet_wizard\nGrizzly
    GitHub — https://github.com/smartrent/grizzly\nSmartRent Careers — https://smartrent.com/careers/\nVery
    Possible Careers — https://www.verypossible.com/careers\nShow Notes - Japanese\nElixir
    Wizards Dojo 第一部 Frank Hunleth と Justin Shneck\nEpisode S4E13a: 概要\nElixir Wizards
    Dojo スペシャル番組の第一部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
    Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
    プロジェクトについてより詳しく知りたいという人は、是非聴いてください。\nこのエピソードのみどころ\nゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点\nElixirプロジェクトについての興奮を広める上での「両刃」\nファームボットに見るNervesが実現できる実事例\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い\nNervesの何が優れているのか:
    他のプロセッサへのゲートウェイの役割\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々\nJustinが愛する四川料理についての軽い脱線\nNervesを製品サイクルに応用する他のマーケットや事例\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
    \nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか\nBluetoothの開発作業のチャレンジ\nコミュニティのグループがどのようにNervesキーボードを作っているか
    \nどのようにNervesのファイルシステムの機能性を拡張するか\n本番環境で優れたツールとなる上でのNervesの機能\n Special Guests:
    Frank Hunleth and Justin Schneck.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qeBvur8Z
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/96d50b65-bc90-434e-ae8b-96b7c9f3990d.mp3
    length: '78689808'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, in partnership with ElixirConf Japan, we pose questions
      asked by the Japanese Nerves community to Nerves core team members. Make sure
      to tune in today and stay tuned for part 2!
    duration: '54:17'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/96d50b65-bc90-434e-ae8b-96b7c9f3990d/cover.jpg?v=1
    summary: "\n        <p>Welcome to the first part of our extra special Elixir Wizards
      Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode,
      we pose questions asked by the Japanese Nerves community to Nerves core team
      members, Frank Hunleth and Justin Schneck. After introducing our guests, we
      talk about which companies make use of Nerve and explore its use cases by looking
      at FarmBot, an open source robotic farming tool. Justin and Frank take turns
      explaining the differences between soft and hard real-time — a springboard to
      show how Nerve excels within its ‘middle-ground of complexity’, production-orientated
      niche. From Halloween pranks to growing Sichuan chili peppers in the office,
      Justin and Frank share the projects that they’ve built using Nerves and emphasize
      its wide applicability. We discuss how Nerves has been both officially and unofficially
      ported to different devices, why people send Frank random pieces of hardware
      in the mail, and the differences between open-source and making your work publicly
      available. Justin and Frank commiserate over the challenge of working with Bluetooth
      and the beauty of the Nerves community in pushing innovation. We chat more about
      Nerves, including how you can extend the functionality of file systems, before
      Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn
      more about the Nerves Project, a system that can add a great deal of agility
      to any development cycle. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
      our guests and this episode’s focus on the Japanese Elixir community. </li>\n<li>The
      double-edge of broadcasting your excitement about Elixir projects. </li>\n<li>Looking
      at FarmBot as a practical use-case to show off what Nerve can do.</li>\n<li>Differences
      between soft and hard real-time using FarmBot as an example.</li>\n<li>What
      Nerves excels at; acting as a gateway for other processors. </li>\n<li>Justin
      and Frank share the projects that they’ve built using Nerves.</li>\n<li>A brief
      digression where Justin shares his love of Chinese Sichuan cooking. </li>\n<li>What
      other markets are making use of Nerves in their product cycle.</li>\n<li>The
      unique ‘middle-ground’ of complexity that Nerves is best suited to address.
      </li>\n<li>Porting Nerves to different devices and what devices need to run
      Nerves. </li>\n<li>Open-source versus making work public and how Justin took
      some of his Bluetooth work public.</li>\n<li>The challenges of working with
      Bluetooth.</li>\n<li>Hear how a group in the community is making a Nerves keyboard.<br></li>\n<li>How
      you can extend the functionality of a file system on Nerves.</li>\n<li>Nerves’s
      features that make it such an excellent tool within a production environment.</li>\n<li>When
      deploying with Nerves Hub, learn how to configure Wi-Fi modules with different
      devices. </li>\n<li>Starting with a facelift, Frank and Justin share their roadmap
      for Nerves’s future. </li>\n<li>How companies Vary and SmartRent have contributed
      to the longevity of Nerves.</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nFrank
      Hunleth — <a href=\"https://www.linkedin.com/in/fhunleth/\" rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nJustin
      Schneck — <a href=\"https://www.linkedin.com/in/justinschneck\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck</a><br>\nSusumu
      Yamazaki — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
      Project Open Collective — <a href=\"https://opencollective.com/nerves-project\"
      rel=\"nofollow\">https://opencollective.com/nerves-project</a><br>\nNerves Project
      GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
      rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
      Kiosk System GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
      rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nFarmBot
      — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nRose
      Point — <a href=\"https://www.rosepoint.com/\" rel=\"nofollow\">https://www.rosepoint.com/</a><br>\nThe
      Food of Sichuan — <a href=\"https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\"
      rel=\"nofollow\">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>\nLance
      Halvorsen — <a href=\"https://www.linkedin.com/in/lance-halvorsen-07a102/\"
      rel=\"nofollow\">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>\nAtom
      VM GitHub — <a href=\"https://github.com/bettio/AtomVM\" rel=\"nofollow\">https://github.com/bettio/AtomVM</a><br>\nLichee
      Pi Zero — <a href=\"https://licheepizero.us/\" rel=\"nofollow\">https://licheepizero.us/</a><br>\nPavlok
      — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nHarald
      GitHub — <a href=\"https://github.com/verypossible-labs/harald\" rel=\"nofollow\">https://github.com/verypossible-labs/harald</a><br>\nBluetooth
      with Nerves Notes GitHub — <a href=\"https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\"
      rel=\"nofollow\">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>\nFwup
      GitHub — <a href=\"https://github.com/fhunleth/fwup\" rel=\"nofollow\">https://github.com/fhunleth/fwup</a><br>\n‘Building
      a keyboard with Elixir’ — <a href=\"https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\"
      rel=\"nofollow\">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>\nVintage
      Net Wizard GitHub — <a href=\"https://github.com/nerves-networking/vintage_net_wizard\"
      rel=\"nofollow\">https://github.com/nerves-networking/vintage_net_wizard</a><br>\nGrizzly
      GitHub — <a href=\"https://github.com/smartrent/grizzly\" rel=\"nofollow\">https://github.com/smartrent/grizzly</a><br>\nSmartRent
      Careers — <a href=\"https://smartrent.com/careers/\" rel=\"nofollow\">https://smartrent.com/careers/</a><br>\nVery
      Possible Careers — <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a></p>\n\n<p><strong>Show
      Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第一部 Frank Hunleth と
      Justin Shneck</p>\n\n<p>Episode S4E13a: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf
      JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
      Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
      プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>\nElixirプロジェクトについての興奮を広める上での「両刃」<br>\nファームボットに見るNervesが実現できる実事例<br>\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>\nNervesの何が優れているのか:
      他のプロセッサへのゲートウェイの役割<br>\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>\nJustinが愛する四川料理についての軽い脱線<br>\nNervesを製品サイクルに応用する他のマーケットや事例<br>\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
      <br>\nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>\nBluetoothの開発作業のチャレンジ<br>\nコミュニティのグループがどのようにNervesキーボードを作っているか
      <br>\nどのようにNervesのファイルシステムの機能性を拡張するか<br>\n本番環境で優れたツールとなる上でのNervesの機能</p><p>Special
      Guests: Frank Hunleth and Justin Schneck.</p>\n      "
  contentEncoded: "\n        <p>Welcome to the first part of our extra special Elixir
    Wizards Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode,
    we pose questions asked by the Japanese Nerves community to Nerves core team members,
    Frank Hunleth and Justin Schneck. After introducing our guests, we talk about
    which companies make use of Nerve and explore its use cases by looking at FarmBot,
    an open source robotic farming tool. Justin and Frank take turns explaining the
    differences between soft and hard real-time — a springboard to show how Nerve
    excels within its ‘middle-ground of complexity’, production-orientated niche.
    From Halloween pranks to growing Sichuan chili peppers in the office, Justin and
    Frank share the projects that they’ve built using Nerves and emphasize its wide
    applicability. We discuss how Nerves has been both officially and unofficially
    ported to different devices, why people send Frank random pieces of hardware in
    the mail, and the differences between open-source and making your work publicly
    available. Justin and Frank commiserate over the challenge of working with Bluetooth
    and the beauty of the Nerves community in pushing innovation. We chat more about
    Nerves, including how you can extend the functionality of file systems, before
    Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more
    about the Nerves Project, a system that can add a great deal of agility to any
    development cycle. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Introducing
    our guests and this episode’s focus on the Japanese Elixir community. </li>\n<li>The
    double-edge of broadcasting your excitement about Elixir projects. </li>\n<li>Looking
    at FarmBot as a practical use-case to show off what Nerve can do.</li>\n<li>Differences
    between soft and hard real-time using FarmBot as an example.</li>\n<li>What Nerves
    excels at; acting as a gateway for other processors. </li>\n<li>Justin and Frank
    share the projects that they’ve built using Nerves.</li>\n<li>A brief digression
    where Justin shares his love of Chinese Sichuan cooking. </li>\n<li>What other
    markets are making use of Nerves in their product cycle.</li>\n<li>The unique
    ‘middle-ground’ of complexity that Nerves is best suited to address. </li>\n<li>Porting
    Nerves to different devices and what devices need to run Nerves. </li>\n<li>Open-source
    versus making work public and how Justin took some of his Bluetooth work public.</li>\n<li>The
    challenges of working with Bluetooth.</li>\n<li>Hear how a group in the community
    is making a Nerves keyboard.<br></li>\n<li>How you can extend the functionality
    of a file system on Nerves.</li>\n<li>Nerves’s features that make it such an excellent
    tool within a production environment.</li>\n<li>When deploying with Nerves Hub,
    learn how to configure Wi-Fi modules with different devices. </li>\n<li>Starting
    with a facelift, Frank and Justin share their roadmap for Nerves’s future. </li>\n<li>How
    companies Vary and SmartRent have contributed to the longevity of Nerves.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\"
    rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nFrank Hunleth — <a href=\"https://www.linkedin.com/in/fhunleth/\"
    rel=\"nofollow\">https://www.linkedin.com/in/fhunleth/</a><br>\nJustin Schneck
    — <a href=\"https://www.linkedin.com/in/justinschneck\" rel=\"nofollow\">https://www.linkedin.com/in/justinschneck</a><br>\nSusumu
    Yamazaki — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nNerves
    Project Open Collective — <a href=\"https://opencollective.com/nerves-project\"
    rel=\"nofollow\">https://opencollective.com/nerves-project</a><br>\nNerves Project
    GitHub — <a href=\"https://github.com/nerves-project/nerves_pack#erlang-distribution\"
    rel=\"nofollow\">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>\nNerves
    Kiosk System GitHub — <a href=\"https://github.com/nerves-web-kiosk/kiosk_system_rpi3\"
    rel=\"nofollow\">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>\nFarmBot
    — <a href=\"https://farm.bot/\" rel=\"nofollow\">https://farm.bot/</a><br>\nRose
    Point — <a href=\"https://www.rosepoint.com/\" rel=\"nofollow\">https://www.rosepoint.com/</a><br>\nThe
    Food of Sichuan — <a href=\"https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835\"
    rel=\"nofollow\">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>\nLance
    Halvorsen — <a href=\"https://www.linkedin.com/in/lance-halvorsen-07a102/\" rel=\"nofollow\">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>\nAtom
    VM GitHub — <a href=\"https://github.com/bettio/AtomVM\" rel=\"nofollow\">https://github.com/bettio/AtomVM</a><br>\nLichee
    Pi Zero — <a href=\"https://licheepizero.us/\" rel=\"nofollow\">https://licheepizero.us/</a><br>\nPavlok
    — <a href=\"https://pavlok.com/\" rel=\"nofollow\">https://pavlok.com/</a><br>\nHarald
    GitHub — <a href=\"https://github.com/verypossible-labs/harald\" rel=\"nofollow\">https://github.com/verypossible-labs/harald</a><br>\nBluetooth
    with Nerves Notes GitHub — <a href=\"https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188\"
    rel=\"nofollow\">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>\nFwup
    GitHub — <a href=\"https://github.com/fhunleth/fwup\" rel=\"nofollow\">https://github.com/fhunleth/fwup</a><br>\n‘Building
    a keyboard with Elixir’ — <a href=\"https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3\"
    rel=\"nofollow\">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>\nVintage
    Net Wizard GitHub — <a href=\"https://github.com/nerves-networking/vintage_net_wizard\"
    rel=\"nofollow\">https://github.com/nerves-networking/vintage_net_wizard</a><br>\nGrizzly
    GitHub — <a href=\"https://github.com/smartrent/grizzly\" rel=\"nofollow\">https://github.com/smartrent/grizzly</a><br>\nSmartRent
    Careers — <a href=\"https://smartrent.com/careers/\" rel=\"nofollow\">https://smartrent.com/careers/</a><br>\nVery
    Possible Careers — <a href=\"https://www.verypossible.com/careers\" rel=\"nofollow\">https://www.verypossible.com/careers</a></p>\n\n<p><strong>Show
    Notes - Japanese</strong></p>\n\n<p>Elixir Wizards Dojo 第一部 Frank Hunleth と Justin
    Shneck</p>\n\n<p>Episode S4E13a: 概要</p>\n\n<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf
    JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank
    Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves
    プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>\n\n<p>このエピソードのみどころ</p>\n\n<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>\nElixirプロジェクトについての興奮を広める上での「両刃」<br>\nファームボットに見るNervesが実現できる実事例<br>\nファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>\nNervesの何が優れているのか:
    他のプロセッサへのゲートウェイの役割<br>\nJustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>\nJustinが愛する四川料理についての軽い脱線<br>\nNervesを製品サイクルに応用する他のマーケットや事例<br>\nNervesが扱うのに手ごろな複雑さの独特の「中間基盤」
    <br>\nNervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>\nオープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>\nBluetoothの開発作業のチャレンジ<br>\nコミュニティのグループがどのようにNervesキーボードを作っているか
    <br>\nどのようにNervesのファイルシステムの機能性を拡張するか<br>\n本番環境で優れたツールとなる上でのNervesの機能</p><p>Special
    Guests: Frank Hunleth and Justin Schneck.</p>\n      "
- title: Greg Mefford on Nerves, Poncho vs Umbrella Apps, and Pre-Code Planning
  slug: s4e12-mefford
  link: https://smartlogic.io/podcast/elixir-wizards/s4e12-mefford
  guid: f66990d4-1466-41eb-aa79-c89d644f8d94
  pubDate: Thu, 06 Aug 2020 06:00:00 -0400
  pubDateFriendly: August  6, 2020
  description: "In today’s episode, we chat about system architecture, Ruby, Elixir,
    and everything in between with Greg Mefford, the senior back-end engineer for
    the Bleacher Report. We open the conversation by asking Greg about his start in
    coding, leading to a story about how Greg was that bored kid pressuring a math
    teacher to teach him QBasic. He shares how he fell in love with Ruby before discovering
    Elixir and Nerves. Having faced some challenges when learning Nerves, Greg talks
    about how he began documenting his pain points and writing documents to help onboard
    newcomers. We discuss Greg’s work with Nerves, his project aspirations, and his
    recommended resources for anyone looking to get into Nerves or Elixir. After providing
    his hot take on the latest Code BEAM V conference, we ask Greg what system architecture
    means to him. From there we get super meta about the meaning of architecture and
    what it means to translate design into practice. We touch on the struggle of understanding
    domain-driven design and Greg’s approach to pre-code planning before delving into
    how the Bleacher Report is set up. As Greg goes into details, you’ll hear why
    their servers now run on Elixir and not Ruby. Near the end of the episode, we
    talk about Poncho versus Umbrella apps, and Greg shares his passion for multi-user
    dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir and
    Nerves landscape.  \nKey Points From This Episode:\nGreg’s start in coding and
    his transition from electronics design into IT.\nWhy Greg loves Ruby and how he
    discovered the magic of Elixir. \nGreg’s contribution to the Elixir and Nerves
    community by helping onboard newcomers.\nWhat Greg’s job as a senior engineer
    for Bleacher Report looks like.\nGreg recommends resources for beginners getting
    into Nerves and Elixir.  \nCreating a kid’s game using Nerves and Greg’s Blinkchain
    library.\nGreg’s take on the Code BEAM V conference and hating on the Whova app.\nWhat
    architecture means to Greg. This one gets deep. \nHow translating designs into
    software has changed over the years. \nWhy Greg struggles with the idea of domain-driven
    design.\nThe state of Extreme Programming practices and how they synergize together.\nHow
    Greg views pre-code planning; something that’s become his specialty within his
    latest job.\nThe many elements that contribute to how the Bleacher Report’s IT
    is set up. \nRuby servers versus Elixir servers and why the Bleacher Report uses
    Elixir. \nWhy the Poncho system was designed to fix Nerves issues not covered
    by Umbrella apps. \nGreg’s history creating multi-user dungeons (MUDs) and playing
    DragonRealm.\nLinks Mentioned in Today’s Episode:\nGreg Mefford LinkedIn — https://www.linkedin.com/in/ferggo/\nSmartLogic
    — https://smartlogic.io/ \nSmartLogic Jobs — https://apply.workable.com/smartlogic/\nElixirConf
    — https://elixirconf.com/2020\nBlinkchain GitHub — https://github.com/GregMefford/blinkchain\nJustin
    Schneck GitHub — https://github.com/mobileoverlord \nLe Tote — https://www.letote.com/\nJames
    Smith — https://twitter.com/st23am\nGarth Hitchens, ElixirCof 2015 — https://www.youtube.com/watch?v=kpzQrFC55q4\nNerves
    Project — https://www.nerves-project.org/documentation\nBleacher Report — https://bleacherreport.com/\nProgramming
    Elixir — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\nChris
    Keathley — https://codesync.global/speaker/chris-keathley/\nCode BEAM V Conference
    — https://codesync.global/conferences/code-beam-sto/\nWhova App — https://whova.com/\nAmos
    King — https://twitter.com/adkron?lang=en\nChristopher Keele — https://github.com/christhekeele\nSteve
    Bussey Episode — https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\nMark
    Windholtz — https://github.com/mwindholtz\nExtreme Programming — http://www.extremeprogramming.org/\nAdopting
    Elixir: From Concept to Production — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nLive
    Elixir Wizards - Betweenisode — https://www.youtube.com/watch?v=kEwxhGYEGts\nTwirp
    GitHub — https://github.com/twitchtv/twirp\nFrank Hunleth — https://github.com/fhunleth\nElixir
    Supervisor Behavior — https://hexdocs.pm/elixir/Supervisor.html\nElixir Poncho
    Projects — https://embedded-elixir.com/post/2017-05-19-poncho-projects/\nTitans
    of Text — https://www.titansoftext.com/\nMiriani — https://www.toastsoft.net/\nDragonRealms
    — https://www.play.net/dr/\nJustus Eapen Twitter — https://twitter.com/justuseapen\nEric
    Oestrich — https://twitter.com/EricOestrich Special Guest: Greg Mefford.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+77w8wp5q
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f66990d4-1466-41eb-aa79-c89d644f8d94.mp3
    length: '60611782'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In today’s episode, we chat about system architecture, Ruby, Elixir,
      and everything in between with Greg Mefford, the senior back-end engineer for
      the Bleacher Report.
    duration: '41:43'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f66990d4-1466-41eb-aa79-c89d644f8d94/cover.jpg?v=1
    summary: "\n        <p>In today’s episode, we chat about system architecture,
      Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end
      engineer for the Bleacher Report. We open the conversation by asking Greg about
      his start in coding, leading to a story about how Greg was that bored kid pressuring
      a math teacher to teach him QBasic. He shares how he fell in love with Ruby
      before discovering Elixir and Nerves. Having faced some challenges when learning
      Nerves, Greg talks about how he began documenting his pain points and writing
      documents to help onboard newcomers. We discuss Greg’s work with Nerves, his
      project aspirations, and his recommended resources for anyone looking to get
      into Nerves or Elixir. After providing his hot take on the latest Code BEAM
      V conference, we ask Greg what system architecture means to him. From there
      we get super meta about the meaning of architecture and what it means to translate
      design into practice. We touch on the struggle of understanding domain-driven
      design and Greg’s approach to pre-code planning before delving into how the
      Bleacher Report is set up. As Greg goes into details, you’ll hear why their
      servers now run on Elixir and not Ruby. Near the end of the episode, we talk
      about Poncho versus Umbrella apps, and Greg shares his passion for multi-user
      dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir
      and Nerves landscape.  </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Greg’s
      start in coding and his transition from electronics design into IT.</li>\n<li>Why
      Greg loves Ruby and how he discovered the magic of Elixir. </li>\n<li>Greg’s
      contribution to the Elixir and Nerves community by helping onboard newcomers.</li>\n<li>What
      Greg’s job as a senior engineer for Bleacher Report looks like.</li>\n<li>Greg
      recommends resources for beginners getting into Nerves and Elixir.<br></li>\n<li>Creating
      a kid’s game using Nerves and Greg’s Blinkchain library.</li>\n<li>Greg’s take
      on the Code BEAM V conference and hating on the Whova app.</li>\n<li>What architecture
      means to Greg. This one gets deep. </li>\n<li>How translating designs into software
      has changed over the years. </li>\n<li>Why Greg struggles with the idea of domain-driven
      design.</li>\n<li>The state of Extreme Programming practices and how they synergize
      together.</li>\n<li>How Greg views pre-code planning; something that’s become
      his specialty within his latest job.</li>\n<li>The many elements that contribute
      to how the Bleacher Report’s IT is set up. </li>\n<li>Ruby servers versus Elixir
      servers and why the Bleacher Report uses Elixir. </li>\n<li>Why the Poncho system
      was designed to fix Nerves issues not covered by Umbrella apps. </li>\n<li>Greg’s
      history creating multi-user dungeons (MUDs) and playing DragonRealm.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Greg Mefford LinkedIn — <a href=\"https://www.linkedin.com/in/ferggo/\"
      rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nSmartLogic — <a
      href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic Jobs — <a href=\"https://apply.workable.com/smartlogic/\" rel=\"nofollow\">https://apply.workable.com/smartlogic/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nBlinkchain
      GitHub — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nJustin
      Schneck GitHub — <a href=\"https://github.com/mobileoverlord\" rel=\"nofollow\">https://github.com/mobileoverlord</a>
      <br>\nLe Tote — <a href=\"https://www.letote.com/\" rel=\"nofollow\">https://www.letote.com/</a><br>\nJames
      Smith — <a href=\"https://twitter.com/st23am\" rel=\"nofollow\">https://twitter.com/st23am</a><br>\nGarth
      Hitchens, ElixirCof 2015 — <a href=\"https://www.youtube.com/watch?v=kpzQrFC55q4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/documentation\" rel=\"nofollow\">https://www.nerves-project.org/documentation</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nProgramming
      Elixir — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>\nChris
      Keathley — <a href=\"https://codesync.global/speaker/chris-keathley/\" rel=\"nofollow\">https://codesync.global/speaker/chris-keathley/</a><br>\nCode
      BEAM V Conference — <a href=\"https://codesync.global/conferences/code-beam-sto/\"
      rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nWhova
      App — <a href=\"https://whova.com/\" rel=\"nofollow\">https://whova.com/</a><br>\nAmos
      King — <a href=\"https://twitter.com/adkron?lang=en\" rel=\"nofollow\">https://twitter.com/adkron?lang=en</a><br>\nChristopher
      Keele — <a href=\"https://github.com/christhekeele\" rel=\"nofollow\">https://github.com/christhekeele</a><br>\nSteve
      Bussey Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\"
      rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>\nMark
      Windholtz — <a href=\"https://github.com/mwindholtz\" rel=\"nofollow\">https://github.com/mwindholtz</a><br>\nExtreme
      Programming — <a href=\"http://www.extremeprogramming.org/\" rel=\"nofollow\">http://www.extremeprogramming.org/</a><br>\nAdopting
      Elixir: From Concept to Production — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nLive
      Elixir Wizards - Betweenisode — <a href=\"https://www.youtube.com/watch?v=kEwxhGYEGts\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>\nTwirp
      GitHub — <a href=\"https://github.com/twitchtv/twirp\" rel=\"nofollow\">https://github.com/twitchtv/twirp</a><br>\nFrank
      Hunleth — <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nElixir
      Supervisor Behavior — <a href=\"https://hexdocs.pm/elixir/Supervisor.html\"
      rel=\"nofollow\">https://hexdocs.pm/elixir/Supervisor.html</a><br>\nElixir Poncho
      Projects — <a href=\"https://embedded-elixir.com/post/2017-05-19-poncho-projects/\"
      rel=\"nofollow\">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>\nTitans
      of Text — <a href=\"https://www.titansoftext.com/\" rel=\"nofollow\">https://www.titansoftext.com/</a><br>\nMiriani
      — <a href=\"https://www.toastsoft.net/\" rel=\"nofollow\">https://www.toastsoft.net/</a><br>\nDragonRealms
      — <a href=\"https://www.play.net/dr/\" rel=\"nofollow\">https://www.play.net/dr/</a><br>\nJustus
      Eapen Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://twitter.com/EricOestrich\" rel=\"nofollow\">https://twitter.com/EricOestrich</a></p><p>Special
      Guest: Greg Mefford.</p>\n      "
  contentEncoded: "\n        <p>In today’s episode, we chat about system architecture,
    Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end
    engineer for the Bleacher Report. We open the conversation by asking Greg about
    his start in coding, leading to a story about how Greg was that bored kid pressuring
    a math teacher to teach him QBasic. He shares how he fell in love with Ruby before
    discovering Elixir and Nerves. Having faced some challenges when learning Nerves,
    Greg talks about how he began documenting his pain points and writing documents
    to help onboard newcomers. We discuss Greg’s work with Nerves, his project aspirations,
    and his recommended resources for anyone looking to get into Nerves or Elixir.
    After providing his hot take on the latest Code BEAM V conference, we ask Greg
    what system architecture means to him. From there we get super meta about the
    meaning of architecture and what it means to translate design into practice. We
    touch on the struggle of understanding domain-driven design and Greg’s approach
    to pre-code planning before delving into how the Bleacher Report is set up. As
    Greg goes into details, you’ll hear why their servers now run on Elixir and not
    Ruby. Near the end of the episode, we talk about Poncho versus Umbrella apps,
    and Greg shares his passion for multi-user dungeons (MUDs). Tune in to learn more
    about Greg and his role in the Elixir and Nerves landscape.  </p>\n\n<p>Key Points
    From This Episode:</p>\n\n<ul>\n<li>Greg’s start in coding and his transition
    from electronics design into IT.</li>\n<li>Why Greg loves Ruby and how he discovered
    the magic of Elixir. </li>\n<li>Greg’s contribution to the Elixir and Nerves community
    by helping onboard newcomers.</li>\n<li>What Greg’s job as a senior engineer for
    Bleacher Report looks like.</li>\n<li>Greg recommends resources for beginners
    getting into Nerves and Elixir.<br></li>\n<li>Creating a kid’s game using Nerves
    and Greg’s Blinkchain library.</li>\n<li>Greg’s take on the Code BEAM V conference
    and hating on the Whova app.</li>\n<li>What architecture means to Greg. This one
    gets deep. </li>\n<li>How translating designs into software has changed over the
    years. </li>\n<li>Why Greg struggles with the idea of domain-driven design.</li>\n<li>The
    state of Extreme Programming practices and how they synergize together.</li>\n<li>How
    Greg views pre-code planning; something that’s become his specialty within his
    latest job.</li>\n<li>The many elements that contribute to how the Bleacher Report’s
    IT is set up. </li>\n<li>Ruby servers versus Elixir servers and why the Bleacher
    Report uses Elixir. </li>\n<li>Why the Poncho system was designed to fix Nerves
    issues not covered by Umbrella apps. </li>\n<li>Greg’s history creating multi-user
    dungeons (MUDs) and playing DragonRealm.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Greg Mefford LinkedIn — <a href=\"https://www.linkedin.com/in/ferggo/\"
    rel=\"nofollow\">https://www.linkedin.com/in/ferggo/</a><br>\nSmartLogic — <a
    href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSmartLogic
    Jobs — <a href=\"https://apply.workable.com/smartlogic/\" rel=\"nofollow\">https://apply.workable.com/smartlogic/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nBlinkchain
    GitHub — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nJustin
    Schneck GitHub — <a href=\"https://github.com/mobileoverlord\" rel=\"nofollow\">https://github.com/mobileoverlord</a>
    <br>\nLe Tote — <a href=\"https://www.letote.com/\" rel=\"nofollow\">https://www.letote.com/</a><br>\nJames
    Smith — <a href=\"https://twitter.com/st23am\" rel=\"nofollow\">https://twitter.com/st23am</a><br>\nGarth
    Hitchens, ElixirCof 2015 — <a href=\"https://www.youtube.com/watch?v=kpzQrFC55q4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>\nNerves Project
    — <a href=\"https://www.nerves-project.org/documentation\" rel=\"nofollow\">https://www.nerves-project.org/documentation</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nProgramming
    Elixir — <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>\nChris
    Keathley — <a href=\"https://codesync.global/speaker/chris-keathley/\" rel=\"nofollow\">https://codesync.global/speaker/chris-keathley/</a><br>\nCode
    BEAM V Conference — <a href=\"https://codesync.global/conferences/code-beam-sto/\"
    rel=\"nofollow\">https://codesync.global/conferences/code-beam-sto/</a><br>\nWhova
    App — <a href=\"https://whova.com/\" rel=\"nofollow\">https://whova.com/</a><br>\nAmos
    King — <a href=\"https://twitter.com/adkron?lang=en\" rel=\"nofollow\">https://twitter.com/adkron?lang=en</a><br>\nChristopher
    Keele — <a href=\"https://github.com/christhekeele\" rel=\"nofollow\">https://github.com/christhekeele</a><br>\nSteve
    Bussey Episode — <a href=\"https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/\"
    rel=\"nofollow\">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>\nMark
    Windholtz — <a href=\"https://github.com/mwindholtz\" rel=\"nofollow\">https://github.com/mwindholtz</a><br>\nExtreme
    Programming — <a href=\"http://www.extremeprogramming.org/\" rel=\"nofollow\">http://www.extremeprogramming.org/</a><br>\nAdopting
    Elixir: From Concept to Production — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nLive
    Elixir Wizards - Betweenisode — <a href=\"https://www.youtube.com/watch?v=kEwxhGYEGts\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>\nTwirp GitHub
    — <a href=\"https://github.com/twitchtv/twirp\" rel=\"nofollow\">https://github.com/twitchtv/twirp</a><br>\nFrank
    Hunleth — <a href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a><br>\nElixir
    Supervisor Behavior — <a href=\"https://hexdocs.pm/elixir/Supervisor.html\" rel=\"nofollow\">https://hexdocs.pm/elixir/Supervisor.html</a><br>\nElixir
    Poncho Projects — <a href=\"https://embedded-elixir.com/post/2017-05-19-poncho-projects/\"
    rel=\"nofollow\">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>\nTitans
    of Text — <a href=\"https://www.titansoftext.com/\" rel=\"nofollow\">https://www.titansoftext.com/</a><br>\nMiriani
    — <a href=\"https://www.toastsoft.net/\" rel=\"nofollow\">https://www.toastsoft.net/</a><br>\nDragonRealms
    — <a href=\"https://www.play.net/dr/\" rel=\"nofollow\">https://www.play.net/dr/</a><br>\nJustus
    Eapen Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://twitter.com/EricOestrich\" rel=\"nofollow\">https://twitter.com/EricOestrich</a></p><p>Special
    Guest: Greg Mefford.</p>\n      "
- title: Johanna Larsson on Hex Diff, Domain Driven Design, Umbrella apps, and more
  slug: s4e11-larsson
  link: https://smartlogic.io/podcast/elixir-wizards/s4e11-larsson
  guid: 1b6e0936-69df-48a0-83aa-42c3302bcb0a
  pubDate: Mon, 27 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 27, 2020
  description: "Johanna Larsson is a community-minded software engineer whose project,
    Hex Diff, generates highlighted git diffs, right in your browser. In this episode,
    we talk to Johanna about how Hex Diff can benefit Elixir users, the differences
    between code architecture and code design, and the debatably under-appreciated
    role of Elixir umbrella apps. We start the conversation by chatting with Johanna
    about her recent move to London and her work for Duffel; a startup helping travel
    agencies book trips. After talking about how she got into software development,
    we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers
    greater security for your code. We ask Johanna about the origins of the Hex Diff
    project and she explores its aims and her experiences working on the project.
    In line with this month’s theme, we discuss what architecture means to Joanna
    and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving
    and she explains how her coding process emphasizes building an early prototype
    and constantly iterating on it. Despite hearing that umbrella apps are bad news,
    Joanna makes a case for their value while acknowledging how that they need greater
    tooling. We round off our conversation by asking Joanna how she tries to grow
    her skillset and what her favorite Elixir resource is. Following our discussion
    with Johanna, we open with another edition of Pattern Matching with Todd. This
    week, friend of the podcast Todd Resudek asks five questions of Elixir community
    member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist
    for the US Airforce, his software career, and the therapeutic uses of playing
    Animal Crossing during a pandemic. \nKey Points From This Episode:\nWe introduce
    Johanna Larsson and she shares how she is doing in London. \nHow Johanna developed
    a love for software and how Elixir brought her to London. \nDetails about Johanna’s
    job at Duffel; a startup that helps travel companies book trips. \nHow Hex Diff
    is solving problems that arise when using code from GitHub.\nJohanna’s experience
    working on Hex Diff and the problems that they aim to solve.\nHex Diff’s caching
    system and what Hex Diff does to counter malicious software uploads.\nThe disconnect
    between system architecture and implementation. \nJohanna’s view on the differences
    between code design and code architecture.\nWhy domain-driven design increases
    usefulness to the end-user.\nHow Johanna approaches a problem and her steps when
    building code. \nHear what key lesson Johanna learned from her latest big project.
    \nJohanna’s experience with umbrella apps and why they need tooling functions.
    \nHow working in a strong team can motivate you and help grow your skill set.\nWhy
    the Elixir Slack group is Johanna’s favorite tool.\nWhy you should check out Hex
    Diff; it’s a great introduction to Elixir. \nThis edition of Pattern Matching
    with Todd; Todd Resudek interviews Bruce Williams.\nLinks Mentioned in Today’s
    Episode:\nJohanna Larsson — https://blog.jola.dev/\nJohanna Larsson LinkedIn —
    https://www.linkedin.com/in/joladev/\nJohanna Larsson Twitter — https://twitter.com/joladev\nSmartLogic
    — https://smartlogic.io/ \nElixirConf — https://elixirconf.com/2020\nSharePoint
    — https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\nDuffel
    — https://duffel.com/\nStripe — https://stripe.com/\nHex Diff — https://diff.hex.pm/\nHex
    Diff GitHub — https://github.com/hexpm/diff\nMaciej Mensfeld — https://mensfeld.pl/\nDiffend
    — https://my.diffend.io/\nWojtek Mach — https://twitter.com/wojtekmach\nEric Meadows-Jönsson
    — https://twitter.com/emjii\nTodd Resudek — https://twitter.com/sprsmpl\nAnnouncing
    Hex Diff — https://hex.pm/blog/announcing-hex-diff\nHex Core GitHub — https://github.com/hexpm/hexcore\nHex
    Diff Phoenix — https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\nThe Design of Everyday
    Things — https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\nBrooklyn
    Zelenka LinkedIn— https://www.linkedin.com/in/brooklynzelenka/\nUnified Modeling
    Language — https://en.wikipedia.org/wiki/UnifiedModeling_Language\nElixir v. 1.10.4
    Mix CMD — https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\nElixir v1.11 Forum Post —
    https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\nRustler
    GitHub — https://github.com/rusterlium/rustler\nLive View —https://blog.codepen.io/documentation/live-view/\nBruce
    Williams — https://www.linkedin.com/in/wbruce/\nAbsinthe — https://absinthe-graphql.org/\nUntitled
    Goose Game — https://goose.game/\nStardew Valley — https://www.stardewvalley.net/\nMyst
    — https://cyan.com/games/myst/\nBlanco White — https://www.blancowhite.info/\nGroundhog
    Day — https://www.imdb.com/title/tt0107048/\nAnimal Crossing — https://www.animal-crossing.com/
    Special Guest: Johanna Larsson.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FHTJ3dLy
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b6e0936-69df-48a0-83aa-42c3302bcb0a.mp3
    length: '35460080'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: In this episode, we talk to Johanna Larsson about how Hex Diff can benefit
      Elixir users, the differences between code architecture and code design, and
      the role of Elixir umbrella apps
    duration: '49:14'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b6e0936-69df-48a0-83aa-42c3302bcb0a/cover.jpg?v=1
    summary: "\n        <p>Johanna Larsson is a community-minded software engineer
      whose project, Hex Diff, generates highlighted git diffs, right in your browser.
      In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users,
      the differences between code architecture and code design, and the debatably
      under-appreciated role of Elixir umbrella apps. We start the conversation by
      chatting with Johanna about her recent move to London and her work for Duffel;
      a startup helping travel agencies book trips. After talking about how she got
      into software development, we dive into Hex Diff versus GitHub, with Joanna
      detailing how Hex Diff offers greater security for your code. We ask Johanna
      about the origins of the Hex Diff project and she explores its aims and her
      experiences working on the project. In line with this month’s theme, we discuss
      what architecture means to Joanna and the need for domain-driven design. We
      quiz Joanna on her approaches to problem-solving and she explains how her coding
      process emphasizes building an early prototype and constantly iterating on it.
      Despite hearing that umbrella apps are bad news, Joanna makes a case for their
      value while acknowledging how that they need greater tooling. We round off our
      conversation by asking Joanna how she tries to grow her skillset and what her
      favorite Elixir resource is. Following our discussion with Johanna, we open
      with another edition of Pattern Matching with Todd. This week, friend of the
      podcast Todd Resudek asks five questions of Elixir community member Bruce Williams.
      They talk about Bruce’s work as an Arabic cryptologic linguist for the US Airforce,
      his software career, and the therapeutic uses of playing Animal Crossing during
      a pandemic. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We introduce
      Johanna Larsson and she shares how she is doing in London. </li>\n<li>How Johanna
      developed a love for software and how Elixir brought her to London. </li>\n<li>Details
      about Johanna’s job at Duffel; a startup that helps travel companies book trips.
      </li>\n<li>How Hex Diff is solving problems that arise when using code from
      GitHub.</li>\n<li>Johanna’s experience working on Hex Diff and the problems
      that they aim to solve.</li>\n<li>Hex Diff’s caching system and what Hex Diff
      does to counter malicious software uploads.</li>\n<li>The disconnect between
      system architecture and implementation. </li>\n<li>Johanna’s view on the differences
      between code design and code architecture.</li>\n<li>Why domain-driven design
      increases usefulness to the end-user.</li>\n<li>How Johanna approaches a problem
      and her steps when building code. </li>\n<li>Hear what key lesson Johanna learned
      from her latest big project. </li>\n<li>Johanna’s experience with umbrella apps
      and why they need tooling functions. </li>\n<li>How working in a strong team
      can motivate you and help grow your skill set.</li>\n<li>Why the Elixir Slack
      group is Johanna’s favorite tool.</li>\n<li>Why you should check out Hex Diff;
      it’s a great introduction to Elixir. </li>\n<li>This edition of Pattern Matching
      with Todd; Todd Resudek interviews Bruce Williams.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Johanna Larsson — <a href=\"https://blog.jola.dev/\"
      rel=\"nofollow\">https://blog.jola.dev/</a><br>\nJohanna Larsson LinkedIn —
      <a href=\"https://www.linkedin.com/in/joladev/\" rel=\"nofollow\">https://www.linkedin.com/in/joladev/</a><br>\nJohanna
      Larsson Twitter — <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nSharePoint
      — <a href=\"https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\"
      rel=\"nofollow\">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>\nDuffel
      — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nStripe
      — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nHex
      Diff — <a href=\"https://diff.hex.pm/\" rel=\"nofollow\">https://diff.hex.pm/</a><br>\nHex
      Diff GitHub — <a href=\"https://github.com/hexpm/diff\" rel=\"nofollow\">https://github.com/hexpm/diff</a><br>\nMaciej
      Mensfeld — <a href=\"https://mensfeld.pl/\" rel=\"nofollow\">https://mensfeld.pl/</a><br>\nDiffend
      — <a href=\"https://my.diffend.io/\" rel=\"nofollow\">https://my.diffend.io/</a><br>\nWojtek
      Mach — <a href=\"https://twitter.com/wojtekmach\" rel=\"nofollow\">https://twitter.com/wojtekmach</a><br>\nEric
      Meadows-Jönsson — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAnnouncing
      Hex Diff — <a href=\"https://hex.pm/blog/announcing-hex-diff\" rel=\"nofollow\">https://hex.pm/blog/announcing-hex-diff</a><br>\nHex
      Core GitHub — <a href=\"https://github.com/hexpm/hex_core\" rel=\"nofollow\">https://github.com/hexpm/hex_core</a><br>\nHex
      Diff Phoenix — <a href=\"https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\" rel=\"nofollow\">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>\nThe
      Design of Everyday Things — <a href=\"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"
      rel=\"nofollow\">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>\nBrooklyn
      Zelenka LinkedIn— <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nUnified
      Modeling Language — <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>\nElixir
      v. 1.10.4 Mix CMD — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>\nElixir
      v1.11 Forum Post — <a href=\"https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\"
      rel=\"nofollow\">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>\nRustler
      GitHub — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nLive
      View —<a href=\"https://blog.codepen.io/documentation/live-view/\" rel=\"nofollow\">https://blog.codepen.io/documentation/live-view/</a><br>\nBruce
      Williams — <a href=\"https://www.linkedin.com/in/wbruce/\" rel=\"nofollow\">https://www.linkedin.com/in/wbruce/</a><br>\nAbsinthe
      — <a href=\"https://absinthe-graphql.org/\" rel=\"nofollow\">https://absinthe-graphql.org/</a><br>\nUntitled
      Goose Game — <a href=\"https://goose.game/\" rel=\"nofollow\">https://goose.game/</a><br>\nStardew
      Valley — <a href=\"https://www.stardewvalley.net/\" rel=\"nofollow\">https://www.stardewvalley.net/</a><br>\nMyst
      — <a href=\"https://cyan.com/games/myst/\" rel=\"nofollow\">https://cyan.com/games/myst/</a><br>\nBlanco
      White — <a href=\"https://www.blancowhite.info/\" rel=\"nofollow\">https://www.blancowhite.info/</a><br>\nGroundhog
      Day — <a href=\"https://www.imdb.com/title/tt0107048/\" rel=\"nofollow\">https://www.imdb.com/title/tt0107048/</a><br>\nAnimal
      Crossing — <a href=\"https://www.animal-crossing.com/\" rel=\"nofollow\">https://www.animal-crossing.com/</a></p><p>Special
      Guest: Johanna Larsson.</p>\n      "
  contentEncoded: "\n        <p>Johanna Larsson is a community-minded software engineer
    whose project, Hex Diff, generates highlighted git diffs, right in your browser.
    In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users,
    the differences between code architecture and code design, and the debatably under-appreciated
    role of Elixir umbrella apps. We start the conversation by chatting with Johanna
    about her recent move to London and her work for Duffel; a startup helping travel
    agencies book trips. After talking about how she got into software development,
    we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers
    greater security for your code. We ask Johanna about the origins of the Hex Diff
    project and she explores its aims and her experiences working on the project.
    In line with this month’s theme, we discuss what architecture means to Joanna
    and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving
    and she explains how her coding process emphasizes building an early prototype
    and constantly iterating on it. Despite hearing that umbrella apps are bad news,
    Joanna makes a case for their value while acknowledging how that they need greater
    tooling. We round off our conversation by asking Joanna how she tries to grow
    her skillset and what her favorite Elixir resource is. Following our discussion
    with Johanna, we open with another edition of Pattern Matching with Todd. This
    week, friend of the podcast Todd Resudek asks five questions of Elixir community
    member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist
    for the US Airforce, his software career, and the therapeutic uses of playing
    Animal Crossing during a pandemic. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>We
    introduce Johanna Larsson and she shares how she is doing in London. </li>\n<li>How
    Johanna developed a love for software and how Elixir brought her to London. </li>\n<li>Details
    about Johanna’s job at Duffel; a startup that helps travel companies book trips.
    </li>\n<li>How Hex Diff is solving problems that arise when using code from GitHub.</li>\n<li>Johanna’s
    experience working on Hex Diff and the problems that they aim to solve.</li>\n<li>Hex
    Diff’s caching system and what Hex Diff does to counter malicious software uploads.</li>\n<li>The
    disconnect between system architecture and implementation. </li>\n<li>Johanna’s
    view on the differences between code design and code architecture.</li>\n<li>Why
    domain-driven design increases usefulness to the end-user.</li>\n<li>How Johanna
    approaches a problem and her steps when building code. </li>\n<li>Hear what key
    lesson Johanna learned from her latest big project. </li>\n<li>Johanna’s experience
    with umbrella apps and why they need tooling functions. </li>\n<li>How working
    in a strong team can motivate you and help grow your skill set.</li>\n<li>Why
    the Elixir Slack group is Johanna’s favorite tool.</li>\n<li>Why you should check
    out Hex Diff; it’s a great introduction to Elixir. </li>\n<li>This edition of
    Pattern Matching with Todd; Todd Resudek interviews Bruce Williams.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Johanna Larsson — <a href=\"https://blog.jola.dev/\"
    rel=\"nofollow\">https://blog.jola.dev/</a><br>\nJohanna Larsson LinkedIn — <a
    href=\"https://www.linkedin.com/in/joladev/\" rel=\"nofollow\">https://www.linkedin.com/in/joladev/</a><br>\nJohanna
    Larsson Twitter — <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixirConf — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nSharePoint
    — <a href=\"https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration\"
    rel=\"nofollow\">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>\nDuffel
    — <a href=\"https://duffel.com/\" rel=\"nofollow\">https://duffel.com/</a><br>\nStripe
    — <a href=\"https://stripe.com/\" rel=\"nofollow\">https://stripe.com/</a><br>\nHex
    Diff — <a href=\"https://diff.hex.pm/\" rel=\"nofollow\">https://diff.hex.pm/</a><br>\nHex
    Diff GitHub — <a href=\"https://github.com/hexpm/diff\" rel=\"nofollow\">https://github.com/hexpm/diff</a><br>\nMaciej
    Mensfeld — <a href=\"https://mensfeld.pl/\" rel=\"nofollow\">https://mensfeld.pl/</a><br>\nDiffend
    — <a href=\"https://my.diffend.io/\" rel=\"nofollow\">https://my.diffend.io/</a><br>\nWojtek
    Mach — <a href=\"https://twitter.com/wojtekmach\" rel=\"nofollow\">https://twitter.com/wojtekmach</a><br>\nEric
    Meadows-Jönsson — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAnnouncing
    Hex Diff — <a href=\"https://hex.pm/blog/announcing-hex-diff\" rel=\"nofollow\">https://hex.pm/blog/announcing-hex-diff</a><br>\nHex
    Core GitHub — <a href=\"https://github.com/hexpm/hex_core\" rel=\"nofollow\">https://github.com/hexpm/hex_core</a><br>\nHex
    Diff Phoenix — <a href=\"https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3\" rel=\"nofollow\">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>\nThe
    Design of Everyday Things — <a href=\"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"
    rel=\"nofollow\">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>\nBrooklyn
    Zelenka LinkedIn— <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nUnified
    Modeling Language — <a href=\"https://en.wikipedia.org/wiki/Unified_Modeling_Language\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>\nElixir
    v. 1.10.4 Mix CMD — <a href=\"https://hexdocs.pm/mix/Mix.Tasks.Cmd.html\" rel=\"nofollow\">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>\nElixir
    v1.11 Forum Post — <a href=\"https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535\"
    rel=\"nofollow\">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>\nRustler
    GitHub — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nLive
    View —<a href=\"https://blog.codepen.io/documentation/live-view/\" rel=\"nofollow\">https://blog.codepen.io/documentation/live-view/</a><br>\nBruce
    Williams — <a href=\"https://www.linkedin.com/in/wbruce/\" rel=\"nofollow\">https://www.linkedin.com/in/wbruce/</a><br>\nAbsinthe
    — <a href=\"https://absinthe-graphql.org/\" rel=\"nofollow\">https://absinthe-graphql.org/</a><br>\nUntitled
    Goose Game — <a href=\"https://goose.game/\" rel=\"nofollow\">https://goose.game/</a><br>\nStardew
    Valley — <a href=\"https://www.stardewvalley.net/\" rel=\"nofollow\">https://www.stardewvalley.net/</a><br>\nMyst
    — <a href=\"https://cyan.com/games/myst/\" rel=\"nofollow\">https://cyan.com/games/myst/</a><br>\nBlanco
    White — <a href=\"https://www.blancowhite.info/\" rel=\"nofollow\">https://www.blancowhite.info/</a><br>\nGroundhog
    Day — <a href=\"https://www.imdb.com/title/tt0107048/\" rel=\"nofollow\">https://www.imdb.com/title/tt0107048/</a><br>\nAnimal
    Crossing — <a href=\"https://www.animal-crossing.com/\" rel=\"nofollow\">https://www.animal-crossing.com/</a></p><p>Special
    Guest: Johanna Larsson.</p>\n      "
- title: Lau Taarnskov on the Trouble with Time Zones
  slug: s4e10-taarnskov
  link: https://smartlogic.io/podcast/elixir-wizards/s4e10-taarnskov
  guid: f39e6147-f6c0-4c1e-803f-d128bfbec255
  pubDate: Thu, 23 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 23, 2020
  description: "Handling date and time is a challenge in any language, but Lau Taarnskov
    is determined to solve that problem in Elixir. Lau is today’s guest on Elixir
    Wizards, and this episode is all about his contributions to Elixir. Lau has been
    involved with web development and e-commerce for decades. He started contributing
    to Elixir open source in 2014 and created the Calendar and tzdata libraries. Calendar
    is a datetime library for Elixir, that provides explicit types for datetimes,
    dates, and times, and full time zone support is provided via its sister package,
    tzdata. When it comes to the subject of date, time, and time zones, besides talking
    about it and writing software for it, Lau also writes about it on his blog, Creative
    Deletion. \nThis episode explores how Lau got started in programming, and what
    led him to creating Calendar and tzdata. Lau shares the resources that he found
    helpful when he started using Elixir, and why he was drawn to Elixir in the first
    place. We hear Lau’s opinions on time zones and daylight savings and whether or
    not they’re necessary, and he shares some advice for anyone working with time
    in Elixir. \nThen it’s time for another edition of Pattern Matching with Todd,
    in which Todd Resudek asks Brooklyn Zekanka five questions to help us get to know
    her better. Brooklyn talks about everything from she has lived, what jobs she
    did before becoming a programmer, and her education in classical music, to her
    favorite bands, movies, and TV shows, as well as some of the projects she is working
    on. For all this, and more, don’t miss today’s episode! \nKey Points From This
    Episode: \nLau explains what TLAs are and why they aren’t always helpful for explicit
    communication. \nLau introduces himself and shares how he got into programming
    and computer science. \nThe resources Lau found most useful when he started using
    Elixir, including books he read. \nWhat it means that Elixir’s source code is
    written in Elixir, and why that was helpful for Lau. \nLu talks about Calendar,
    a datetime library that Lau created for Elixir, and Tzdata, a parser and library
    he created for the tz database, and why he created them. \nHow Lau deconstructed
    the time zone problems and how his ideas have changed over time. \nLau’s opinions
    on time zones and daylight savings and whether or not they’re necessary. \nAdvice
    from Lau for anyone working with time in Elixir. \nAnother edition of Pattern
    Matching with Todd – today’s guest is Brooklyn Zelenka. \nWhere Brooklyn was born,
    where she has lived, and the jobs she did before programming. \nBrooklyn talks
    about her musical background and how it’s similar to programming. \nBrooklyn shares
    a pro tip about slides and reflects on her highlights as a speaker. \nWhat Brooklyn
    would be doing if she weren’t a programmer and the genre of music she likes. \nBrooklyn’s
    favorite TV shows and movies, including Amadeus and Mad Men. \nBrooklyn shares
    what she’s working on currently and the next project she’s excited about. \nLinks
    Mentioned in Today’s Episode: \nLau Taarnskov on Twitter – https://twitter.com/laut
    \nCreative Deletion Blog – http://www.creativedeletion.com/ \nLau Taarnskov on
    GitHub – https://github.com/lau \nCalendar on GitHub – https://github.com/lau/calendar
    \nTzdata on GitHub – https://github.com/lau/tzdata \nElixir in Action – https://www.amazon.com/Elixir-Action
    \nProgramming Elixir – https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/
    \nBrooklyn Zelenka on LinkedIn – https://www.linkedin.com/in/brooklynzelenka/
    Brooklyn Zelenka on \nTwitter – https://twitter.com/expede \nBrooklyn Zelenka
    on GitHub – https://github.com/expede \nFISSIONcodes Website – https://fission.codes/
    \nSmartLogic — https://smartlogic.io/ \nAmadeus — https://www.rottentomatoes.com/m/amadeus
    \nMad Men — https://www.rottentomatoes.com/tv/mad-men  Special Guest: Lau Taarnskov.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+uPrb-5ZK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f39e6147-f6c0-4c1e-803f-d128bfbec255.mp3
    length: '27035996'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Handling date and time is a challenge in any language, but today's guest,
      Lau Taarnskov is determined to solve that problem in Elixir.
    duration: '37:32'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f39e6147-f6c0-4c1e-803f-d128bfbec255/cover.jpg?v=1
    summary: "\n        <p>Handling date and time is a challenge in any language,
      but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s
      guest on Elixir Wizards, and this episode is all about his contributions to
      Elixir. Lau has been involved with web development and e-commerce for decades.
      He started contributing to Elixir open source in 2014 and created the Calendar
      and tzdata libraries. Calendar is a datetime library for Elixir, that provides
      explicit types for datetimes, dates, and times, and full time zone support is
      provided via its sister package, tzdata. When it comes to the subject of date,
      time, and time zones, besides talking about it and writing software for it,
      Lau also writes about it on his blog, Creative Deletion. </p>\n\n<p>This episode
      explores how Lau got started in programming, and what led him to creating Calendar
      and tzdata. Lau shares the resources that he found helpful when he started using
      Elixir, and why he was drawn to Elixir in the first place. We hear Lau’s opinions
      on time zones and daylight savings and whether or not they’re necessary, and
      he shares some advice for anyone working with time in Elixir. </p>\n\n<p>Then
      it’s time for another edition of Pattern Matching with Todd, in which Todd Resudek
      asks Brooklyn Zekanka five questions to help us get to know her better. Brooklyn
      talks about everything from she has lived, what jobs she did before becoming
      a programmer, and her education in classical music, to her favorite bands, movies,
      and TV shows, as well as some of the projects she is working on. For all this,
      and more, don’t miss today’s episode! </p>\n\n<p>Key Points From This Episode:
      </p>\n\n<ul>\n<li>Lau explains what TLAs are and why they aren’t always helpful
      for explicit communication. </li>\n<li>Lau introduces himself and shares how
      he got into programming and computer science. </li>\n<li>The resources Lau found
      most useful when he started using Elixir, including books he read. </li>\n<li>What
      it means that Elixir’s source code is written in Elixir, and why that was helpful
      for Lau. </li>\n<li>Lu talks about Calendar, a datetime library that Lau created
      for Elixir, and Tzdata, a parser and library he created for the tz database,
      and why he created them. </li>\n<li>How Lau deconstructed the time zone problems
      and how his ideas have changed over time. </li>\n<li>Lau’s opinions on time
      zones and daylight savings and whether or not they’re necessary. </li>\n<li>Advice
      from Lau for anyone working with time in Elixir. </li>\n<li>Another edition
      of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>\n<li>Where
      Brooklyn was born, where she has lived, and the jobs she did before programming.
      </li>\n<li>Brooklyn talks about her musical background and how it’s similar
      to programming. </li>\n<li>Brooklyn shares a pro tip about slides and reflects
      on her highlights as a speaker. </li>\n<li>What Brooklyn would be doing if she
      weren’t a programmer and the genre of music she likes. </li>\n<li>Brooklyn’s
      favorite TV shows and movies, including Amadeus and Mad Men. </li>\n<li>Brooklyn
      shares what she’s working on currently and the next project she’s excited about.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode: </p>\n\n<p>Lau Taarnskov
      on Twitter – <a href=\"https://twitter.com/laut\" rel=\"nofollow\">https://twitter.com/laut</a>
      <br>\nCreative Deletion Blog – <a href=\"http://www.creativedeletion.com/\"
      rel=\"nofollow\">http://www.creativedeletion.com/</a> <br>\nLau Taarnskov on
      GitHub – <a href=\"https://github.com/lau\" rel=\"nofollow\">https://github.com/lau</a>
      <br>\nCalendar on GitHub – <a href=\"https://github.com/lau/calendar\" rel=\"nofollow\">https://github.com/lau/calendar</a>
      <br>\nTzdata on GitHub – <a href=\"https://github.com/lau/tzdata\" rel=\"nofollow\">https://github.com/lau/tzdata</a>
      <br>\nElixir in Action – <a href=\"https://www.amazon.com/Elixir-Action\" rel=\"nofollow\">https://www.amazon.com/Elixir-Action</a>
      <br>\nProgramming Elixir – <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a>
      <br>\nBrooklyn Zelenka on LinkedIn – <a href=\"https://www.linkedin.com/in/brooklynzelenka/\"
      rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka
      on <br>\nTwitter – <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a>
      <br>\nBrooklyn Zelenka on GitHub – <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a>
      <br>\nFISSIONcodes Website – <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a>
      <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nAmadeus — <a href=\"https://www.rottentomatoes.com/m/amadeus\" rel=\"nofollow\">https://www.rottentomatoes.com/m/amadeus</a>
      <br>\nMad Men — <a href=\"https://www.rottentomatoes.com/tv/mad-men\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/mad-men</a>
      </p><p>Special Guest: Lau Taarnskov.</p>\n      "
  contentEncoded: "\n        <p>Handling date and time is a challenge in any language,
    but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s
    guest on Elixir Wizards, and this episode is all about his contributions to Elixir.
    Lau has been involved with web development and e-commerce for decades. He started
    contributing to Elixir open source in 2014 and created the Calendar and tzdata
    libraries. Calendar is a datetime library for Elixir, that provides explicit types
    for datetimes, dates, and times, and full time zone support is provided via its
    sister package, tzdata. When it comes to the subject of date, time, and time zones,
    besides talking about it and writing software for it, Lau also writes about it
    on his blog, Creative Deletion. </p>\n\n<p>This episode explores how Lau got started
    in programming, and what led him to creating Calendar and tzdata. Lau shares the
    resources that he found helpful when he started using Elixir, and why he was drawn
    to Elixir in the first place. We hear Lau’s opinions on time zones and daylight
    savings and whether or not they’re necessary, and he shares some advice for anyone
    working with time in Elixir. </p>\n\n<p>Then it’s time for another edition of
    Pattern Matching with Todd, in which Todd Resudek asks Brooklyn Zekanka five questions
    to help us get to know her better. Brooklyn talks about everything from she has
    lived, what jobs she did before becoming a programmer, and her education in classical
    music, to her favorite bands, movies, and TV shows, as well as some of the projects
    she is working on. For all this, and more, don’t miss today’s episode! </p>\n\n<p>Key
    Points From This Episode: </p>\n\n<ul>\n<li>Lau explains what TLAs are and why
    they aren’t always helpful for explicit communication. </li>\n<li>Lau introduces
    himself and shares how he got into programming and computer science. </li>\n<li>The
    resources Lau found most useful when he started using Elixir, including books
    he read. </li>\n<li>What it means that Elixir’s source code is written in Elixir,
    and why that was helpful for Lau. </li>\n<li>Lu talks about Calendar, a datetime
    library that Lau created for Elixir, and Tzdata, a parser and library he created
    for the tz database, and why he created them. </li>\n<li>How Lau deconstructed
    the time zone problems and how his ideas have changed over time. </li>\n<li>Lau’s
    opinions on time zones and daylight savings and whether or not they’re necessary.
    </li>\n<li>Advice from Lau for anyone working with time in Elixir. </li>\n<li>Another
    edition of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>\n<li>Where
    Brooklyn was born, where she has lived, and the jobs she did before programming.
    </li>\n<li>Brooklyn talks about her musical background and how it’s similar to
    programming. </li>\n<li>Brooklyn shares a pro tip about slides and reflects on
    her highlights as a speaker. </li>\n<li>What Brooklyn would be doing if she weren’t
    a programmer and the genre of music she likes. </li>\n<li>Brooklyn’s favorite
    TV shows and movies, including Amadeus and Mad Men. </li>\n<li>Brooklyn shares
    what she’s working on currently and the next project she’s excited about. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode: </p>\n\n<p>Lau Taarnskov on Twitter – <a href=\"https://twitter.com/laut\"
    rel=\"nofollow\">https://twitter.com/laut</a> <br>\nCreative Deletion Blog – <a
    href=\"http://www.creativedeletion.com/\" rel=\"nofollow\">http://www.creativedeletion.com/</a>
    <br>\nLau Taarnskov on GitHub – <a href=\"https://github.com/lau\" rel=\"nofollow\">https://github.com/lau</a>
    <br>\nCalendar on GitHub – <a href=\"https://github.com/lau/calendar\" rel=\"nofollow\">https://github.com/lau/calendar</a>
    <br>\nTzdata on GitHub – <a href=\"https://github.com/lau/tzdata\" rel=\"nofollow\">https://github.com/lau/tzdata</a>
    <br>\nElixir in Action – <a href=\"https://www.amazon.com/Elixir-Action\" rel=\"nofollow\">https://www.amazon.com/Elixir-Action</a>
    <br>\nProgramming Elixir – <a href=\"https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a>
    <br>\nBrooklyn Zelenka on LinkedIn – <a href=\"https://www.linkedin.com/in/brooklynzelenka/\"
    rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka
    on <br>\nTwitter – <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a>
    <br>\nBrooklyn Zelenka on GitHub – <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a>
    <br>\nFISSIONcodes Website – <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a>
    <br>\nSmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nAmadeus — <a href=\"https://www.rottentomatoes.com/m/amadeus\" rel=\"nofollow\">https://www.rottentomatoes.com/m/amadeus</a>
    <br>\nMad Men — <a href=\"https://www.rottentomatoes.com/tv/mad-men\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/mad-men</a>
    </p><p>Special Guest: Lau Taarnskov.</p>\n      "
- title: Council of Wizards Part 2 with Chris Bell, Desmond Bowe, Emily Maxie, Dan
    Lindeman, and Alan Voss
  slug: s4e9b-council
  link: https://smartlogic.io/podcast/elixir-wizards/s4e9b-council
  guid: e9769249-24cb-455c-9983-011f1c414d3d
  pubDate: Thu, 16 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 16, 2020
  description: "For part 2 of our Council of Wizards panel discussion, we are joined
    by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! Chris and
    Desmond run the ElixirTalk Podcast and we get in-depth on the intersection of
    the language and talking about it. They share the lessons they have learned in
    the podcasting space, making some pit stops to chat about aliens, Elixir beef,
    and marble flooring! We discuss the community during the pandemic and what the
    Elixir world might look like for the next year or two. Emily and Dan then step
    in to give us all the information about Very and their very functional remote
    work model. They talk us through the full departure that the company made from
    a physical hub and both share what they love and hate about working from home,
    before and during the COVID crisis. Dan and Emily talk about onboarding and team
    spirit in remote teams and the strategies that have best served Very in this regard.
    Lastly, we have a bonus section with Alan Voss, to discuss his game night competitions
    and more. He unpacks the games he has already hosted and some of the candidates
    for future events before we hear about his experiences in the pandemic, specifically
    as an extrovert and a father. For all of this make sure to join us on the show!\nKey
    Points From This Episode:\nThe exciting possibility of starting beef in the Elixir
    community! \nBooks and podcasts we have been reading and listening to. \nMarble
    flooring, glass blowing, aliens, conspiracy theories, and impersonations! \nTips,
    tricks, and lessons for the podcast space from Chris and Desmond.\nThoughts on
    the future of the Elixir community during and after the pandemic. \nThe array
    of projects that keep Chris and Desmond busy; startups, meetups, conferences!
    \nVery's fully remote-work setup and the decision to move away from a physical
    office.  \nChallenges and lessons in the work-from-home model; making do with
    less in-person interaction. \nPositive sides to a home workspace; making a mess
    and closing the door. \nEmployee socialization and familiarization at a remote
    company. \nThe applicability of Elixir across different projects and libraries.
    \ \nThe infinite amount of puns that are available when talking about Very! \nProgramming
    Connect Four and the future of bot competitions according to Alan.\nStrategy snobs
    and taking this to its logical conclusion with chess and Go. \nThe effect that
    the pandemic has had on extroverts and the adjustments that Alan has made.\nThe
    possibility of ElixirConf this year and the forms it could take.\nWork that has
    gone into Alan's game-night side project over the last months.\nThe growth of
    Postmates and their current need for new employees! \nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nElixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1\nElixirConf
    — https://elixirconf.com/2020\nGithub Repo for Transcript Corrections — https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\nChris
    Bell — https://cjbell.co/\nChris Bell on Twitter — https://twitter.com/cjbell\nDesmond
    Bowe on Twitter — https://twitter.com/desmondmonster\nElixirTalk — http://elixirtalk.com/\nEmily
    Maxie on Twitter  — https://twitter.com/emilymaxie\nDan Lindeman on Twitter— https://twitter.com/lindemda\nVery
    — http://verypossible.com/\nChris McCord — http://chrismccord.com/\nAlan Voss
    — http://www.alanvoss.org/\nAlan Voss on Twitter — https://twitter.com/alanvoss\nLonestar
    Elixir— https://lonestarelixir.com/\nMPex — https://mpex.com/\nPayitoff — https://www.payitoff.io/\nMeetup
    — https://www.meetup.com/\nOpenAI — https://openai.com/\nRisk — https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\nStrange
    Loop — https://www.thestrangeloop.com/\nPostmates — https://postmates.com/ Special
    Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Yi5vSoNZ
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e9769249-24cb-455c-9983-011f1c414d3d.mp3
    length: '80012368'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: For part 2 of our Council of Wizards panel discussion, we are joined
      by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! They
      share the lessons they have learned in the podcasting space and discuss strategies
      on working remotely.
    duration: '55:09'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e9769249-24cb-455c-9983-011f1c414d3d/cover.jpg?v=1
    summary: "\n        <p>For part 2 of our Council of Wizards panel discussion,
      we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan
      Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the
      intersection of the language and talking about it. They share the lessons they
      have learned in the podcasting space, making some pit stops to chat about aliens,
      Elixir beef, and marble flooring! We discuss the community during the pandemic
      and what the Elixir world might look like for the next year or two. Emily and
      Dan then step in to give us all the information about Very and their very functional
      remote work model. They talk us through the full departure that the company
      made from a physical hub and both share what they love and hate about working
      from home, before and during the COVID crisis. Dan and Emily talk about onboarding
      and team spirit in remote teams and the strategies that have best served Very
      in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his
      game night competitions and more. He unpacks the games he has already hosted
      and some of the candidates for future events before we hear about his experiences
      in the pandemic, specifically as an extrovert and a father. For all of this
      make sure to join us on the show!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
      exciting possibility of starting beef in the Elixir community! </li>\n<li>Books
      and podcasts we have been reading and listening to. </li>\n<li>Marble flooring,
      glass blowing, aliens, conspiracy theories, and impersonations! </li>\n<li>Tips,
      tricks, and lessons for the podcast space from Chris and Desmond.</li>\n<li>Thoughts
      on the future of the Elixir community during and after the pandemic. </li>\n<li>The
      array of projects that keep Chris and Desmond busy; startups, meetups, conferences!
      </li>\n<li>Very&#39;s fully remote-work setup and the decision to move away
      from a physical office.<br></li>\n<li>Challenges and lessons in the work-from-home
      model; making do with less in-person interaction. </li>\n<li>Positive sides
      to a home workspace; making a mess and closing the door. </li>\n<li>Employee
      socialization and familiarization at a remote company. </li>\n<li>The applicability
      of Elixir across different projects and libraries.<br></li>\n<li>The infinite
      amount of puns that are available when talking about Very! </li>\n<li>Programming
      Connect Four and the future of bot competitions according to Alan.</li>\n<li>Strategy
      snobs and taking this to its logical conclusion with chess and Go. </li>\n<li>The
      effect that the pandemic has had on extroverts and the adjustments that Alan
      has made.</li>\n<li>The possibility of ElixirConf this year and the forms it
      could take.</li>\n<li>Work that has gone into Alan&#39;s game-night side project
      over the last months.</li>\n<li>The growth of Postmates and their current need
      for new employees! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir Ecosystem Survey — <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\"
      rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nGithub
      Repo for Transcript Corrections — <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
      rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nChris
      Bell — <a href=\"https://cjbell.co/\" rel=\"nofollow\">https://cjbell.co/</a><br>\nChris
      Bell on Twitter — <a href=\"https://twitter.com/cjbell\" rel=\"nofollow\">https://twitter.com/cjbell</a><br>\nDesmond
      Bowe on Twitter — <a href=\"https://twitter.com/desmondmonster\" rel=\"nofollow\">https://twitter.com/desmondmonster</a><br>\nElixirTalk
      — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nEmily
      Maxie on Twitter  — <a href=\"https://twitter.com/emilymaxie\" rel=\"nofollow\">https://twitter.com/emilymaxie</a><br>\nDan
      Lindeman on Twitter— <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\nVery
      — <a href=\"http://verypossible.com/\" rel=\"nofollow\">http://verypossible.com/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nAlan
      Voss — <a href=\"http://www.alanvoss.org/\" rel=\"nofollow\">http://www.alanvoss.org/</a><br>\nAlan
      Voss on Twitter — <a href=\"https://twitter.com/alanvoss\" rel=\"nofollow\">https://twitter.com/alanvoss</a><br>\nLonestar
      Elixir— <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nMPex
      — <a href=\"https://mpex.com/\" rel=\"nofollow\">https://mpex.com/</a><br>\nPayitoff
      — <a href=\"https://www.payitoff.io/\" rel=\"nofollow\">https://www.payitoff.io/</a><br>\nMeetup
      — <a href=\"https://www.meetup.com/\" rel=\"nofollow\">https://www.meetup.com/</a><br>\nOpenAI
      — <a href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\nRisk
      — <a href=\"https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\" rel=\"nofollow\">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>\nStrange
      Loop — <a href=\"https://www.thestrangeloop.com/\" rel=\"nofollow\">https://www.thestrangeloop.com/</a><br>\nPostmates
      — <a href=\"https://postmates.com/\" rel=\"nofollow\">https://postmates.com/</a></p><p>Special
      Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>\n
      \     "
  contentEncoded: "\n        <p>For part 2 of our Council of Wizards panel discussion,
    we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan
    Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the
    intersection of the language and talking about it. They share the lessons they
    have learned in the podcasting space, making some pit stops to chat about aliens,
    Elixir beef, and marble flooring! We discuss the community during the pandemic
    and what the Elixir world might look like for the next year or two. Emily and
    Dan then step in to give us all the information about Very and their very functional
    remote work model. They talk us through the full departure that the company made
    from a physical hub and both share what they love and hate about working from
    home, before and during the COVID crisis. Dan and Emily talk about onboarding
    and team spirit in remote teams and the strategies that have best served Very
    in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his
    game night competitions and more. He unpacks the games he has already hosted and
    some of the candidates for future events before we hear about his experiences
    in the pandemic, specifically as an extrovert and a father. For all of this make
    sure to join us on the show!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    exciting possibility of starting beef in the Elixir community! </li>\n<li>Books
    and podcasts we have been reading and listening to. </li>\n<li>Marble flooring,
    glass blowing, aliens, conspiracy theories, and impersonations! </li>\n<li>Tips,
    tricks, and lessons for the podcast space from Chris and Desmond.</li>\n<li>Thoughts
    on the future of the Elixir community during and after the pandemic. </li>\n<li>The
    array of projects that keep Chris and Desmond busy; startups, meetups, conferences!
    </li>\n<li>Very&#39;s fully remote-work setup and the decision to move away from
    a physical office.<br></li>\n<li>Challenges and lessons in the work-from-home
    model; making do with less in-person interaction. </li>\n<li>Positive sides to
    a home workspace; making a mess and closing the door. </li>\n<li>Employee socialization
    and familiarization at a remote company. </li>\n<li>The applicability of Elixir
    across different projects and libraries.<br></li>\n<li>The infinite amount of
    puns that are available when talking about Very! </li>\n<li>Programming Connect
    Four and the future of bot competitions according to Alan.</li>\n<li>Strategy
    snobs and taking this to its logical conclusion with chess and Go. </li>\n<li>The
    effect that the pandemic has had on extroverts and the adjustments that Alan has
    made.</li>\n<li>The possibility of ElixirConf this year and the forms it could
    take.</li>\n<li>Work that has gone into Alan&#39;s game-night side project over
    the last months.</li>\n<li>The growth of Postmates and their current need for
    new employees! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir Ecosystem Survey — <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\"
    rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nGithub
    Repo for Transcript Corrections — <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
    rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nChris
    Bell — <a href=\"https://cjbell.co/\" rel=\"nofollow\">https://cjbell.co/</a><br>\nChris
    Bell on Twitter — <a href=\"https://twitter.com/cjbell\" rel=\"nofollow\">https://twitter.com/cjbell</a><br>\nDesmond
    Bowe on Twitter — <a href=\"https://twitter.com/desmondmonster\" rel=\"nofollow\">https://twitter.com/desmondmonster</a><br>\nElixirTalk
    — <a href=\"http://elixirtalk.com/\" rel=\"nofollow\">http://elixirtalk.com/</a><br>\nEmily
    Maxie on Twitter  — <a href=\"https://twitter.com/emilymaxie\" rel=\"nofollow\">https://twitter.com/emilymaxie</a><br>\nDan
    Lindeman on Twitter— <a href=\"https://twitter.com/lindemda\" rel=\"nofollow\">https://twitter.com/lindemda</a><br>\nVery
    — <a href=\"http://verypossible.com/\" rel=\"nofollow\">http://verypossible.com/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nAlan
    Voss — <a href=\"http://www.alanvoss.org/\" rel=\"nofollow\">http://www.alanvoss.org/</a><br>\nAlan
    Voss on Twitter — <a href=\"https://twitter.com/alanvoss\" rel=\"nofollow\">https://twitter.com/alanvoss</a><br>\nLonestar
    Elixir— <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nMPex
    — <a href=\"https://mpex.com/\" rel=\"nofollow\">https://mpex.com/</a><br>\nPayitoff
    — <a href=\"https://www.payitoff.io/\" rel=\"nofollow\">https://www.payitoff.io/</a><br>\nMeetup
    — <a href=\"https://www.meetup.com/\" rel=\"nofollow\">https://www.meetup.com/</a><br>\nOpenAI
    — <a href=\"https://openai.com/\" rel=\"nofollow\">https://openai.com/</a><br>\nRisk
    — <a href=\"https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG\" rel=\"nofollow\">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>\nStrange
    Loop — <a href=\"https://www.thestrangeloop.com/\" rel=\"nofollow\">https://www.thestrangeloop.com/</a><br>\nPostmates
    — <a href=\"https://postmates.com/\" rel=\"nofollow\">https://postmates.com/</a></p><p>Special
    Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>\n
    \     "
- title: Council of Wizards Part 1 with Andrea Leopardi and René Föhring
  slug: s4e9a-council
  link: https://smartlogic.io/podcast/elixir-wizards/s4e9a-council
  guid: 2e71b35e-54cc-4bfe-be34-6567c5fb448c
  pubDate: Tue, 14 Jul 2020 06:00:00 -0400
  pubDateFriendly: July 14, 2020
  description: "The Elixir community continues to flourish and evolve in these uncertain
    times and in honor of this we have put together a live show with a number of special
    guests! In part one today, we are joined by Andrea Leopardi and René Föhring,
    who we are so happy to welcome back. We get the lowdown from each of them in turn,
    discussing personal preferences, tips and tricks, and recommendations for Elixir
    and beyond. Andrea gets into some of his pet peeves and comments on the trend
    of slow interfaces. We then look at future possibilities for Elixir including
    the outside chance of it being run on mobile and for crypto-mining! Andrea also
    updates us on the book he is currently working on so keep an eye out for that
    in the future! René then steps in to talk about his work on Credo, his hopes for
    it in the future, and some suggestions for listeners using it. We do some comparisons
    between Elixir and Ruby before René offers some thoughts on Electron and functional
    programming concepts. So for all this and a whole lot more, make sure to tune
    in today and stay tuned for part 2!\nKey Points From This Episode:\nA reintroduction
    to Andrea and his current work in the Elixir space.\nAndrea's tool recommendations
    and what he uses most at the moment. \nUpdates, the short term future of the world
    of Elixir and Andrea's current focus.\nRSpec versus xUnit: Andrea's personal preferences.
    \nAndrea's limited experience of LiveView and early reactions.\nFeelings about
    computers and phones with slow interfaces!\nThe very slim chances of seeing Elixir
    run on mobile. \nCryptocurrency and Andrea's lack of experience and ambition in
    the space.  \nSome exciting information about Andrea's upcoming book to keep an
    eye out for. \nRené's current projects; Credo, Elixir weekly newsletter, and more!
    \nThe future of Elixir — will it be the next Ruby? \nElixir on a phone; René's
    thoughts on this possibility and its validity. \nUpdates for Credo — all the exciting
    news since our last conversation with René. \nImproving work that you are proud
    of and René's own feelings about Credo.\nThe objectives and vision for Credo and
    improving upon certain pain points. \nWriting and running in Electron and how
    to have fun while doing it!\nThe application of functional programming concepts
    in René's work in Electron.\nRené's suggestion for Credo — using the Credo master
    after it being reworked.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nElixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1\nElixirConf
    — https://elixirconf.com/2020 \nGithub Repo for Transcripts Corrections - https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\nAndrea
    Leopardi — https://andrealeopardi.com/\nAndrew Leopardi on Twitter — https://twitter.com/whatyouhide\nRene
    Föhring — http://rrrene.org/\nRene Föhring on Twitter — https://twitter.com/rrrene\nAlfred
    — https://www.alfredapp.com/\nTesla — https://www.tesla.com/\nTempleOS — https://templeos.org/\nElon
    Musk — https://www.forbes.com/profile/elon-musk/\nMint — https://www.mint.com/\nFinch
    — https://finch.io/\nRuby — https://www.ruby-lang.org/en/\nElectron — https://www.electronjs.org/\n
    Special Guests: Andrea Leopardi and René Föhring.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+elvags8f
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2e71b35e-54cc-4bfe-be34-6567c5fb448c.mp3
    length: '57422532'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: We are joined by Andrea Leopardi and René Föhring discussing personal
      preferences, tips and tricks, and recommendations for Elixir and beyond. Make
      sure to tune in today and stay tuned for part 2!
    duration: '39:28'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2e71b35e-54cc-4bfe-be34-6567c5fb448c/cover.jpg?v=1
    summary: "\n        <p>The Elixir community continues to flourish and evolve in
      these uncertain times and in honor of this we have put together a live show
      with a number of special guests! In part one today, we are joined by Andrea
      Leopardi and René Föhring, who we are so happy to welcome back. We get the lowdown
      from each of them in turn, discussing personal preferences, tips and tricks,
      and recommendations for Elixir and beyond. Andrea gets into some of his pet
      peeves and comments on the trend of slow interfaces. We then look at future
      possibilities for Elixir including the outside chance of it being run on mobile
      and for crypto-mining! Andrea also updates us on the book he is currently working
      on so keep an eye out for that in the future! René then steps in to talk about
      his work on Credo, his hopes for it in the future, and some suggestions for
      listeners using it. We do some comparisons between Elixir and Ruby before René
      offers some thoughts on Electron and functional programming concepts. So for
      all this and a whole lot more, make sure to tune in today and stay tuned for
      part 2!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A reintroduction
      to Andrea and his current work in the Elixir space.</li>\n<li>Andrea&#39;s tool
      recommendations and what he uses most at the moment. </li>\n<li>Updates, the
      short term future of the world of Elixir and Andrea&#39;s current focus.</li>\n<li>RSpec
      versus xUnit: Andrea&#39;s personal preferences. </li>\n<li>Andrea&#39;s limited
      experience of LiveView and early reactions.</li>\n<li>Feelings about computers
      and phones with slow interfaces!</li>\n<li>The very slim chances of seeing Elixir
      run on mobile. </li>\n<li>Cryptocurrency and Andrea&#39;s lack of experience
      and ambition in the space.<br></li>\n<li>Some exciting information about Andrea&#39;s
      upcoming book to keep an eye out for. </li>\n<li>René&#39;s current projects;
      Credo, Elixir weekly newsletter, and more! </li>\n<li>The future of Elixir —
      will it be the next Ruby? </li>\n<li>Elixir on a phone; René&#39;s thoughts
      on this possibility and its validity. </li>\n<li>Updates for Credo — all the
      exciting news since our last conversation with René. </li>\n<li>Improving work
      that you are proud of and René&#39;s own feelings about Credo.</li>\n<li>The
      objectives and vision for Credo and improving upon certain pain points. </li>\n<li>Writing
      and running in Electron and how to have fun while doing it!</li>\n<li>The application
      of functional programming concepts in René&#39;s work in Electron.</li>\n<li>René&#39;s
      suggestion for Credo — using the Credo master after it being reworked.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Ecosystem Survey —
      <a href=\"https://elixirsurvey.typeform.com/to/yYmJv1\" rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a>
      <br>\nGithub Repo for Transcripts Corrections - <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
      rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrew
      Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nRene
      Föhring — <a href=\"http://rrrene.org/\" rel=\"nofollow\">http://rrrene.org/</a><br>\nRene
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nAlfred
      — <a href=\"https://www.alfredapp.com/\" rel=\"nofollow\">https://www.alfredapp.com/</a><br>\nTesla
      — <a href=\"https://www.tesla.com/\" rel=\"nofollow\">https://www.tesla.com/</a><br>\nTempleOS
      — <a href=\"https://templeos.org/\" rel=\"nofollow\">https://templeos.org/</a><br>\nElon
      Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nMint
      — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nFinch
      — <a href=\"https://finch.io/\" rel=\"nofollow\">https://finch.io/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElectron
      — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a></p><p>Special
      Guests: Andrea Leopardi and René Föhring.</p>\n      "
  contentEncoded: "\n        <p>The Elixir community continues to flourish and evolve
    in these uncertain times and in honor of this we have put together a live show
    with a number of special guests! In part one today, we are joined by Andrea Leopardi
    and René Föhring, who we are so happy to welcome back. We get the lowdown from
    each of them in turn, discussing personal preferences, tips and tricks, and recommendations
    for Elixir and beyond. Andrea gets into some of his pet peeves and comments on
    the trend of slow interfaces. We then look at future possibilities for Elixir
    including the outside chance of it being run on mobile and for crypto-mining!
    Andrea also updates us on the book he is currently working on so keep an eye out
    for that in the future! René then steps in to talk about his work on Credo, his
    hopes for it in the future, and some suggestions for listeners using it. We do
    some comparisons between Elixir and Ruby before René offers some thoughts on Electron
    and functional programming concepts. So for all this and a whole lot more, make
    sure to tune in today and stay tuned for part 2!</p>\n\n<p>Key Points From This
    Episode:</p>\n\n<ul>\n<li>A reintroduction to Andrea and his current work in the
    Elixir space.</li>\n<li>Andrea&#39;s tool recommendations and what he uses most
    at the moment. </li>\n<li>Updates, the short term future of the world of Elixir
    and Andrea&#39;s current focus.</li>\n<li>RSpec versus xUnit: Andrea&#39;s personal
    preferences. </li>\n<li>Andrea&#39;s limited experience of LiveView and early
    reactions.</li>\n<li>Feelings about computers and phones with slow interfaces!</li>\n<li>The
    very slim chances of seeing Elixir run on mobile. </li>\n<li>Cryptocurrency and
    Andrea&#39;s lack of experience and ambition in the space.<br></li>\n<li>Some
    exciting information about Andrea&#39;s upcoming book to keep an eye out for.
    </li>\n<li>René&#39;s current projects; Credo, Elixir weekly newsletter, and more!
    </li>\n<li>The future of Elixir — will it be the next Ruby? </li>\n<li>Elixir
    on a phone; René&#39;s thoughts on this possibility and its validity. </li>\n<li>Updates
    for Credo — all the exciting news since our last conversation with René. </li>\n<li>Improving
    work that you are proud of and René&#39;s own feelings about Credo.</li>\n<li>The
    objectives and vision for Credo and improving upon certain pain points. </li>\n<li>Writing
    and running in Electron and how to have fun while doing it!</li>\n<li>The application
    of functional programming concepts in René&#39;s work in Electron.</li>\n<li>René&#39;s
    suggestion for Credo — using the Credo master after it being reworked.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixir Ecosystem Survey — <a
    href=\"https://elixirsurvey.typeform.com/to/yYmJv1\" rel=\"nofollow\">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a>
    <br>\nGithub Repo for Transcripts Corrections - <a href=\"https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts\"
    rel=\"nofollow\">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nAndrew
    Leopardi on Twitter — <a href=\"https://twitter.com/whatyouhide\" rel=\"nofollow\">https://twitter.com/whatyouhide</a><br>\nRene
    Föhring — <a href=\"http://rrrene.org/\" rel=\"nofollow\">http://rrrene.org/</a><br>\nRene
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nAlfred
    — <a href=\"https://www.alfredapp.com/\" rel=\"nofollow\">https://www.alfredapp.com/</a><br>\nTesla
    — <a href=\"https://www.tesla.com/\" rel=\"nofollow\">https://www.tesla.com/</a><br>\nTempleOS
    — <a href=\"https://templeos.org/\" rel=\"nofollow\">https://templeos.org/</a><br>\nElon
    Musk — <a href=\"https://www.forbes.com/profile/elon-musk/\" rel=\"nofollow\">https://www.forbes.com/profile/elon-musk/</a><br>\nMint
    — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nFinch
    — <a href=\"https://finch.io/\" rel=\"nofollow\">https://finch.io/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElectron
    — <a href=\"https://www.electronjs.org/\" rel=\"nofollow\">https://www.electronjs.org/</a></p><p>Special
    Guests: Andrea Leopardi and René Föhring.</p>\n      "
- title: Chris McCord with a Deep Dive on Phoenix
  slug: s4e8-mccord
  link: https://smartlogic.io/podcast/elixir-wizards/s4e8-mccord
  guid: c87149f2-e430-4fcb-8e22-e3242c625e1b
  pubDate: Thu, 09 Jul 2020 06:00:00 -0400
  pubDateFriendly: July  9, 2020
  description: "Although it’s taken him four seasons to make an appearance, we are
    so glad to finally welcome Chris McCord, creator of the Phoenix framework, onto
    the show. While this season’s focus is on system and application architecture,
    today’s discussion deviates to focus on Phoenix. We get started by hearing more
    about Chris’s programming journey, all the way from TI-Basic to where he is now.
    After this, we dive into LiveView, the project Chris is currently focusing most
    of his energy on. We get into some of the incredible changes that have been made
    including live navigation, deep change tracking optimizations, and static asset
    tracking. Chris shares which of the changes he is most excited about, along with
    why he enjoys seeing LiveView being misused. We then look at some of the critiques
    of LiveView and Phoenix generally. Chris offers counter-arguments to the most
    common criticisms of the framework. He shares how the title of 'framework' can
    be a double-edged sword, as well as why he is hesitant to extract channels prematurely.
    We wrap the show up with a look into the future, hearing more about what’s on
    the horizon for Phoenix and where Chris hopes the Elixir community is headed.
    This conversation was well worth the four season-long wait, so be sure to tune
    in today!\nKey Points From This Episode:\nWhy it took Chris four whole seasons
    to finally make an appearance on the show.\nChris’s programming journey from T-Basic
    all the way to Java, HTML, and PHP.\nHow a broken back landed Chris his first
    paid programming job.\nLearn more about Chris’s current project, LiveView, and
    some of the recent additions.\nWhy the optimizations were the most interesting
    changes for Chris to make on LiveView.\nSome of the most interesting use cases
    Chris has seen of LiveView.\nHow Chris plans to navigate laying LiveView out on
    a larger codebase.\nChris’s take on stateful applications and why the platform
    is so important.\nThe origins of the hilariously termed ‘dead view.’\nSome of
    the most pertinent critiques of LiveView and Phoenix generally.\nChris busts some
    of the invalid critiques of Phoenix.\nWhy the community feedback on LiveWire has
    been so surprising to Chris.\nPhoenix 1.6 changes and when we can expect its release.\nChris’s
    take on whether Elixir is likely to overthrow Rails in terms of popularity.\nThe
    systemic blockers that create adoption friction of Elixir and Phoenix.\nLooking
    into the future — Chris’s goals for Phoenix and his hopes for the Elixir community.\nLinks
    Mentioned in Today’s Episode:\nChris McCord — http://chrismccord.com/\nChris McCord
    on Twitter — https://twitter.com/chrismccord\nDockYard — https://dockyard.com/\nDave’s
    Site — https://www.davesite.com/\nHacking with PHP — http://www.hackingwithphp.com/\nPhoenix
    LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nPhoenix Phrenzy
    — https://groundstation.gigalixirapp.com/\nDashbit: An Upcoming Authentication
    Solution for Phoenix — https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\nAaron
    Renner on GitHub — https://github.com/aaronrenner/phxgenauth\nPhoenix Issues on
    GitHub —\nhttps://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\nPhoenix
    Fire Nest — https://github.com/phoenixframework/firenest\nPhoenix Pub/Sub — https://github.com/phoenixframework/phoenixpubsub\nElixirConf
    2020— https://2020.elixirconf.com/\nElixirConf 2020 Speaker Proposals — https://2020.elixirconf.com/#cfp\nTI-83
    Calculator — https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\nTeach
    Yourself C in 21 Days — https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\nRest
    Fest — https://www.restfest.org/\nJosé Valim on Twitter — https://twitter.com/josevalim\nJason
    Goldberger on LinkedIn — https://www.linkedin.com/in/jason-goldberger-84237392/\nSmartLogic
    — https://smartlogic.io/ \nSmartLogic Jobs — https://smartlogic.workable.com/
    Special Guest: Chris McCord.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+NVs1Q3t3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c87149f2-e430-4fcb-8e22-e3242c625e1b.mp3
    length: '31476646'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: We take a detour away from system and application architecture this
      week to talk with Chris McCord, creator of the Phoenix framework, onto the show.
      Listen in to hear Chris's programming journey from TI-Basic to where he is now.
    duration: '43:42'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c87149f2-e430-4fcb-8e22-e3242c625e1b/cover.jpg?v=1
    summary: "\n        <p>Although it’s taken him four seasons to make an appearance,
      we are so glad to finally welcome Chris McCord, creator of the Phoenix framework,
      onto the show. While this season’s focus is on system and application architecture,
      today’s discussion deviates to focus on Phoenix. We get started by hearing more
      about Chris’s programming journey, all the way from TI-Basic to where he is
      now. After this, we dive into LiveView, the project Chris is currently focusing
      most of his energy on. We get into some of the incredible changes that have
      been made including live navigation, deep change tracking optimizations, and
      static asset tracking. Chris shares which of the changes he is most excited
      about, along with why he enjoys seeing LiveView being misused. We then look
      at some of the critiques of LiveView and Phoenix generally. Chris offers counter-arguments
      to the most common criticisms of the framework. He shares how the title of &#39;framework&#39;
      can be a double-edged sword, as well as why he is hesitant to extract channels
      prematurely. We wrap the show up with a look into the future, hearing more about
      what’s on the horizon for Phoenix and where Chris hopes the Elixir community
      is headed. This conversation was well worth the four season-long wait, so be
      sure to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
      it took Chris four whole seasons to finally make an appearance on the show.</li>\n<li>Chris’s
      programming journey from T-Basic all the way to Java, HTML, and PHP.</li>\n<li>How
      a broken back landed Chris his first paid programming job.</li>\n<li>Learn more
      about Chris’s current project, LiveView, and some of the recent additions.</li>\n<li>Why
      the optimizations were the most interesting changes for Chris to make on LiveView.</li>\n<li>Some
      of the most interesting use cases Chris has seen of LiveView.</li>\n<li>How
      Chris plans to navigate laying LiveView out on a larger codebase.</li>\n<li>Chris’s
      take on stateful applications and why the platform is so important.</li>\n<li>The
      origins of the hilariously termed ‘dead view.’</li>\n<li>Some of the most pertinent
      critiques of LiveView and Phoenix generally.</li>\n<li>Chris busts some of the
      invalid critiques of Phoenix.</li>\n<li>Why the community feedback on LiveWire
      has been so surprising to Chris.</li>\n<li>Phoenix 1.6 changes and when we can
      expect its release.</li>\n<li>Chris’s take on whether Elixir is likely to overthrow
      Rails in terms of popularity.</li>\n<li>The systemic blockers that create adoption
      friction of Elixir and Phoenix.</li>\n<li>Looking into the future — Chris’s
      goals for Phoenix and his hopes for the Elixir community.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Chris McCord — <a href=\"http://chrismccord.com/\"
      rel=\"nofollow\">http://chrismccord.com/</a><br>\nChris McCord on Twitter —
      <a href=\"https://twitter.com/chris_mccord\" rel=\"nofollow\">https://twitter.com/chris_mccord</a><br>\nDockYard
      — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a><br>\nDave’s
      Site — <a href=\"https://www.davesite.com/\" rel=\"nofollow\">https://www.davesite.com/</a><br>\nHacking
      with PHP — <a href=\"http://www.hackingwithphp.com/\" rel=\"nofollow\">http://www.hackingwithphp.com/</a><br>\nPhoenix
      LiveView — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
      rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
      Phrenzy — <a href=\"https://groundstation.gigalixirapp.com/\" rel=\"nofollow\">https://groundstation.gigalixirapp.com/</a><br>\nDashbit:
      An Upcoming Authentication Solution for Phoenix — <a href=\"https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\"
      rel=\"nofollow\">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>\nAaron
      Renner on GitHub — <a href=\"https://github.com/aaronrenner/phx_gen_auth\" rel=\"nofollow\">https://github.com/aaronrenner/phx_gen_auth</a><br>\nPhoenix
      Issues on GitHub —<br>\n<a href=\"https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>\nPhoenix
      Fire Nest — <a href=\"https://github.com/phoenixframework/firenest\" rel=\"nofollow\">https://github.com/phoenixframework/firenest</a><br>\nPhoenix
      Pub/Sub — <a href=\"https://github.com/phoenixframework/phoenix_pubsub\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_pubsub</a><br>\nElixirConf
      2020— <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\nElixirConf
      2020 Speaker Proposals — <a href=\"https://2020.elixirconf.com/#cfp\" rel=\"nofollow\">https://2020.elixirconf.com/#cfp</a><br>\nTI-83
      Calculator — <a href=\"https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\"
      rel=\"nofollow\">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>\nTeach
      Yourself C in 21 Days — <a href=\"https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\"
      rel=\"nofollow\">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>\nRest
      Fest — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nJosé
      Valim on Twitter — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nJason
      Goldberger on LinkedIn — <a href=\"https://www.linkedin.com/in/jason-goldberger-84237392/\"
      rel=\"nofollow\">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.workable.com/\" rel=\"nofollow\">https://smartlogic.workable.com/</a></p><p>Special
      Guest: Chris McCord.</p>\n      "
  contentEncoded: "\n        <p>Although it’s taken him four seasons to make an appearance,
    we are so glad to finally welcome Chris McCord, creator of the Phoenix framework,
    onto the show. While this season’s focus is on system and application architecture,
    today’s discussion deviates to focus on Phoenix. We get started by hearing more
    about Chris’s programming journey, all the way from TI-Basic to where he is now.
    After this, we dive into LiveView, the project Chris is currently focusing most
    of his energy on. We get into some of the incredible changes that have been made
    including live navigation, deep change tracking optimizations, and static asset
    tracking. Chris shares which of the changes he is most excited about, along with
    why he enjoys seeing LiveView being misused. We then look at some of the critiques
    of LiveView and Phoenix generally. Chris offers counter-arguments to the most
    common criticisms of the framework. He shares how the title of &#39;framework&#39;
    can be a double-edged sword, as well as why he is hesitant to extract channels
    prematurely. We wrap the show up with a look into the future, hearing more about
    what’s on the horizon for Phoenix and where Chris hopes the Elixir community is
    headed. This conversation was well worth the four season-long wait, so be sure
    to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Why
    it took Chris four whole seasons to finally make an appearance on the show.</li>\n<li>Chris’s
    programming journey from T-Basic all the way to Java, HTML, and PHP.</li>\n<li>How
    a broken back landed Chris his first paid programming job.</li>\n<li>Learn more
    about Chris’s current project, LiveView, and some of the recent additions.</li>\n<li>Why
    the optimizations were the most interesting changes for Chris to make on LiveView.</li>\n<li>Some
    of the most interesting use cases Chris has seen of LiveView.</li>\n<li>How Chris
    plans to navigate laying LiveView out on a larger codebase.</li>\n<li>Chris’s
    take on stateful applications and why the platform is so important.</li>\n<li>The
    origins of the hilariously termed ‘dead view.’</li>\n<li>Some of the most pertinent
    critiques of LiveView and Phoenix generally.</li>\n<li>Chris busts some of the
    invalid critiques of Phoenix.</li>\n<li>Why the community feedback on LiveWire
    has been so surprising to Chris.</li>\n<li>Phoenix 1.6 changes and when we can
    expect its release.</li>\n<li>Chris’s take on whether Elixir is likely to overthrow
    Rails in terms of popularity.</li>\n<li>The systemic blockers that create adoption
    friction of Elixir and Phoenix.</li>\n<li>Looking into the future — Chris’s goals
    for Phoenix and his hopes for the Elixir community.</li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Chris McCord — <a href=\"http://chrismccord.com/\"
    rel=\"nofollow\">http://chrismccord.com/</a><br>\nChris McCord on Twitter — <a
    href=\"https://twitter.com/chris_mccord\" rel=\"nofollow\">https://twitter.com/chris_mccord</a><br>\nDockYard
    — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a><br>\nDave’s
    Site — <a href=\"https://www.davesite.com/\" rel=\"nofollow\">https://www.davesite.com/</a><br>\nHacking
    with PHP — <a href=\"http://www.hackingwithphp.com/\" rel=\"nofollow\">http://www.hackingwithphp.com/</a><br>\nPhoenix
    LiveView — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\"
    rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nPhoenix
    Phrenzy — <a href=\"https://groundstation.gigalixirapp.com/\" rel=\"nofollow\">https://groundstation.gigalixirapp.com/</a><br>\nDashbit:
    An Upcoming Authentication Solution for Phoenix — <a href=\"https://dashbit.co/blog/a-new-authentication-solution-for-phoenix\"
    rel=\"nofollow\">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>\nAaron
    Renner on GitHub — <a href=\"https://github.com/aaronrenner/phx_gen_auth\" rel=\"nofollow\">https://github.com/aaronrenner/phx_gen_auth</a><br>\nPhoenix
    Issues on GitHub —<br>\n<a href=\"https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>\nPhoenix
    Fire Nest — <a href=\"https://github.com/phoenixframework/firenest\" rel=\"nofollow\">https://github.com/phoenixframework/firenest</a><br>\nPhoenix
    Pub/Sub — <a href=\"https://github.com/phoenixframework/phoenix_pubsub\" rel=\"nofollow\">https://github.com/phoenixframework/phoenix_pubsub</a><br>\nElixirConf
    2020— <a href=\"https://2020.elixirconf.com/\" rel=\"nofollow\">https://2020.elixirconf.com/</a><br>\nElixirConf
    2020 Speaker Proposals — <a href=\"https://2020.elixirconf.com/#cfp\" rel=\"nofollow\">https://2020.elixirconf.com/#cfp</a><br>\nTI-83
    Calculator — <a href=\"https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU\"
    rel=\"nofollow\">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>\nTeach
    Yourself C in 21 Days — <a href=\"https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694\"
    rel=\"nofollow\">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>\nRest
    Fest — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nJosé
    Valim on Twitter — <a href=\"https://twitter.com/josevalim\" rel=\"nofollow\">https://twitter.com/josevalim</a><br>\nJason
    Goldberger on LinkedIn — <a href=\"https://www.linkedin.com/in/jason-goldberger-84237392/\"
    rel=\"nofollow\">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSmartLogic Jobs — <a href=\"https://smartlogic.workable.com/\" rel=\"nofollow\">https://smartlogic.workable.com/</a></p><p>Special
    Guest: Chris McCord.</p>\n      "
- title: Amos King on MUDs, Architecture, Domain-driven design, and Military Bases
  slug: s4e7-king
  link: https://smartlogic.io/podcast/elixir-wizards/s4e7-king
  guid: c4183a48-6039-4dc1-b54b-c43973086490
  pubDate: Thu, 02 Jul 2020 06:00:00 -0400
  pubDateFriendly: July  2, 2020
  description: "Today’s guest is Amos King, Principal CEO at Binary Noggin, and host
    on the Elixir Outlaws and This Agile Life podcasts. This episode is centered around
    a casual conversation about everything from programming, the military, sarcasm,
    and puns to systems and application architecture, domain-driven design, and bitmasks.
    Amos shares with us how he got into programming, after wanting to be a doctor
    or an engineer first, and tells us how he met Famous Amos. We talk about spectrum
    analyzers, Elixir resources, and MUDs, as well as type-first design and Haskell.
    Amos gives us his takes on domain-driven design, API, booleans, and enums, and
    even roasts his co-host Chris Keithley a little. Don’t miss this episode for everything
    you’ve ever wanted to know about the legendary Amos King (and a whole lot more)!\nKey
    Points From This Episode:\n* Amos explains what Adkron means, which is his gaming
    and social media handle.\n* Where the name Elixir Outlaws for the podcast came
    from.\n* How Amos got into programming as a career, after wanting to be a surgeon
    and an engineer.\n* What Amos’s first opportunity as a programmer was, and how
    he met Wally Amos.\n* Amos explains what a spectrum analyzer is, based on his
    experience in the military.\n* Amos shares why Steve Bussey’s book, Real-Time
    Phoenix, is his favorite Elixir resource.\n* Eric and Amos talk about the MUD
    engine that they worked on together.\n* What systems and application architecture
    means to Amos and how it differs from design.\n* What type-first design (TFD)
    is and Amos’s opinion on it as a thought exercise.\n* Amos talks about Haskell
    programming and domain-driven design.\n* Relating domain-driven design to a car
    dealership to describe types and terminology.\n* Amos talks a bit about his company
    and what they do.\n* Justus, Eric, and Amos debate the term “architect” and what
    it actually means.\n* Amos shares his take on API architecture, booleans, enums,
    and bitmasks.\n* Amos gives his hot take on his co-host Chris Keithley.\nLinks
    Mentioned in Today’s Episode:\nAmos King on Twitter — https://twitter.com/adkron\nElixir
    Outlaws Podcast — https://elixiroutlaws.com/\nWally Amos — https://en.wikipedia.org/wiki/WallyAmos\nWindows
    3.0 — https://en.wikipedia.org/wiki/Windows3.0\nReal-Time Phoenix on Pragmatic
    Bookshelf — https://pragprog.com/book/sbsockets/real-time-phoenix\nElixir School
    — https://elixirschool.com/en/\nElixir Inaction — https://twitter.com/gausby/status/986550202248187904\nThis
    Agile Life Podcast — https://www.thisagilelife.com/\nScreen — https://screen.so/#/home\nHaskell
    Book — https://haskellbook.com/\nBinary Noggin Website — https://binarynoggin.com/\nBinary
    Noggin on Twitter — https://twitter.com/BinaryNoggin\nSmartLogic — https://smartlogic.io/
    \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich — https://oestrich.org/\nKalevala
    — https://github.com/oestrich/kalevala\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nEric
    Oestrich on GitHub — https://github.com/oestrich Special Guest: Amos King.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+FoPa6y-U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c4183a48-6039-4dc1-b54b-c43973086490.mp3
    length: '80349782'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws
      and This Agile Life podcasts joins us to talk about everything from programming,
      the military, sarcasm, and puns to systems and application architecture, domain-driven
      design, and bitmasks.
    duration: '55:23'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c4183a48-6039-4dc1-b54b-c43973086490/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Amos King, Principal CEO at Binary Noggin,
      and host on the Elixir Outlaws and This Agile Life podcasts. This episode is
      centered around a casual conversation about everything from programming, the
      military, sarcasm, and puns to systems and application architecture, domain-driven
      design, and bitmasks. Amos shares with us how he got into programming, after
      wanting to be a doctor or an engineer first, and tells us how he met Famous
      Amos. We talk about spectrum analyzers, Elixir resources, and MUDs, as well
      as type-first design and Haskell. Amos gives us his takes on domain-driven design,
      API, booleans, and enums, and even roasts his co-host Chris Keithley a little.
      Don’t miss this episode for everything you’ve ever wanted to know about the
      legendary Amos King (and a whole lot more)!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Amos
      explains what Adkron means, which is his gaming and social media handle.</li>\n<li>Where
      the name Elixir Outlaws for the podcast came from.</li>\n<li>How Amos got into
      programming as a career, after wanting to be a surgeon and an engineer.</li>\n<li>What
      Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>\n<li>Amos
      explains what a spectrum analyzer is, based on his experience in the military.</li>\n<li>Amos
      shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>\n<li>Eric
      and Amos talk about the MUD engine that they worked on together.</li>\n<li>What
      systems and application architecture means to Amos and how it differs from design.</li>\n<li>What
      type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>\n<li>Amos
      talks about Haskell programming and domain-driven design.</li>\n<li>Relating
      domain-driven design to a car dealership to describe types and terminology.</li>\n<li>Amos
      talks a bit about his company and what they do.</li>\n<li>Justus, Eric, and
      Amos debate the term “architect” and what it actually means.</li>\n<li>Amos
      shares his take on API architecture, booleans, enums, and bitmasks.</li>\n<li>Amos
      gives his hot take on his co-host Chris Keithley.</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Amos King on Twitter — <a href=\"https://twitter.com/adkron\"
      rel=\"nofollow\">https://twitter.com/adkron</a><br>\nElixir Outlaws Podcast
      — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWally
      Amos — <a href=\"https://en.wikipedia.org/wiki/Wally_Amos\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Wally_Amos</a><br>\nWindows
      3.0 — <a href=\"https://en.wikipedia.org/wiki/Windows_3.0\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Windows_3.0</a><br>\nReal-Time
      Phoenix on Pragmatic Bookshelf — <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
      rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nElixir
      Inaction — <a href=\"https://twitter.com/gausby/status/986550202248187904\"
      rel=\"nofollow\">https://twitter.com/gausby/status/986550202248187904</a><br>\nThis
      Agile Life Podcast — <a href=\"https://www.thisagilelife.com/\" rel=\"nofollow\">https://www.thisagilelife.com/</a><br>\nScreen
      — <a href=\"https://screen.so/#/home\" rel=\"nofollow\">https://screen.so/#/home</a><br>\nHaskell
      Book — <a href=\"https://haskellbook.com/\" rel=\"nofollow\">https://haskellbook.com/</a><br>\nBinary
      Noggin Website — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
      Noggin on Twitter — <a href=\"https://twitter.com/BinaryNoggin\" rel=\"nofollow\">https://twitter.com/BinaryNoggin</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich — <a
      href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nKalevala
      — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Amos King.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Amos King, Principal CEO at Binary
    Noggin, and host on the Elixir Outlaws and This Agile Life podcasts. This episode
    is centered around a casual conversation about everything from programming, the
    military, sarcasm, and puns to systems and application architecture, domain-driven
    design, and bitmasks. Amos shares with us how he got into programming, after wanting
    to be a doctor or an engineer first, and tells us how he met Famous Amos. We talk
    about spectrum analyzers, Elixir resources, and MUDs, as well as type-first design
    and Haskell. Amos gives us his takes on domain-driven design, API, booleans, and
    enums, and even roasts his co-host Chris Keithley a little. Don’t miss this episode
    for everything you’ve ever wanted to know about the legendary Amos King (and a
    whole lot more)!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Amos
    explains what Adkron means, which is his gaming and social media handle.</li>\n<li>Where
    the name Elixir Outlaws for the podcast came from.</li>\n<li>How Amos got into
    programming as a career, after wanting to be a surgeon and an engineer.</li>\n<li>What
    Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>\n<li>Amos
    explains what a spectrum analyzer is, based on his experience in the military.</li>\n<li>Amos
    shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>\n<li>Eric
    and Amos talk about the MUD engine that they worked on together.</li>\n<li>What
    systems and application architecture means to Amos and how it differs from design.</li>\n<li>What
    type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>\n<li>Amos
    talks about Haskell programming and domain-driven design.</li>\n<li>Relating domain-driven
    design to a car dealership to describe types and terminology.</li>\n<li>Amos talks
    a bit about his company and what they do.</li>\n<li>Justus, Eric, and Amos debate
    the term “architect” and what it actually means.</li>\n<li>Amos shares his take
    on API architecture, booleans, enums, and bitmasks.</li>\n<li>Amos gives his hot
    take on his co-host Chris Keithley.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Amos King on Twitter — <a href=\"https://twitter.com/adkron\"
    rel=\"nofollow\">https://twitter.com/adkron</a><br>\nElixir Outlaws Podcast —
    <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nWally
    Amos — <a href=\"https://en.wikipedia.org/wiki/Wally_Amos\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Wally_Amos</a><br>\nWindows
    3.0 — <a href=\"https://en.wikipedia.org/wiki/Windows_3.0\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Windows_3.0</a><br>\nReal-Time
    Phoenix on Pragmatic Bookshelf — <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
    rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nElixir
    Inaction — <a href=\"https://twitter.com/gausby/status/986550202248187904\" rel=\"nofollow\">https://twitter.com/gausby/status/986550202248187904</a><br>\nThis
    Agile Life Podcast — <a href=\"https://www.thisagilelife.com/\" rel=\"nofollow\">https://www.thisagilelife.com/</a><br>\nScreen
    — <a href=\"https://screen.so/#/home\" rel=\"nofollow\">https://screen.so/#/home</a><br>\nHaskell
    Book — <a href=\"https://haskellbook.com/\" rel=\"nofollow\">https://haskellbook.com/</a><br>\nBinary
    Noggin Website — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nBinary
    Noggin on Twitter — <a href=\"https://twitter.com/BinaryNoggin\" rel=\"nofollow\">https://twitter.com/BinaryNoggin</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nKalevala
    — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Amos King.</p>\n      "
- title: Sundi Myint on The Visual Side of Elixir, the History of Emojis, and Test-
    and Domain-Driven Architecture
  slug: s4e6-myint
  link: https://smartlogic.io/podcast/elixir-wizards/s4e6-myint
  guid: f14188bd-903b-49eb-bc8b-f52429966e63
  pubDate: Thu, 25 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 25, 2020
  description: "Welcome to another episode of Elixir Wizards as we continue our journey
    into system and application architecture! Our featured guest today is Sundi Myint
    and she is here to share her journey with Elixir and her non-traditional path
    to programming. We hear about Sundi's interest in gaming, her role at Cava and
    a bit of the inspiration behind her amazing Instagram account! We discuss her
    first internship and how she found herself in the role quite suddenly before diving
    into the motivation behind her blog post on the history of emojis. Sundi did some
    serious research into this interesting subject and she shares some of the more
    technical aspects of the story with us on the show. We talk about architecture
    and both test and design-driven approaches. Sundi also explains her process and
    how mapping things out on a whiteboard has been her favored way to do things for
    some time. Andrea Leopardi then joins us for another edition of Pattern Matching
    with Todd! He answers Todd's questions about his home life, media favorites, future
    projects and more!\nKey Points From This Episode:\nSundi's Instagram aesthetic
    and her love of food and photography. \nHow Sundi got into programming and her
    first internship.  \nGetting hired at Cava and an introduction to Elixir and the
    community.\nVideo game programming and Sundi's thoughts on the possibility of
    pursuing this path. \nSundi's first paid job out of college and the tech stack
    at the company.\nThoughts on easily available learning resources and the power
    of Live View. \nSome background on Sundi's amazing blog post on the history of
    emojis.\nUnderstanding Unicode, how it works and its role in translation and interpretation.
    \nSundi's perspectives on architecture and domain-driven design.\nCode design
    strategies, workflow and the idea and practice of test-driven code. \nConversations
    with stakeholders and moving to the planning stage. \nHow Sundi uses whiteboards
    to map out her work graphically and Elixir's part in this. \nAndrea's travels
    and some of the amazing locations he has visited for conferences. \nHome life
    and lifestyle in quarantine for Andrea in Italy.\nAlternative career paths and
    Andrea's other interests; balancing creativity and logic. \nMusic, movies and
    television choices for Andrea.\nExciting new projects on the horizon for Andrea;
    a book, HTTP and more!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nSundi Myint on Twitter — https://twitter.com/sundikhin\nSundi Myint on Instagram
    — https://www.instagram.com/sundikhin\nCava — https://cava.com/\nHackers & Painters
    — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nLonestar
    Elixir — https://lonestarelixir.com/\nBruce Tate — https://codesync.global/speaker/bruce-tate/\nEA
    — https://www.ea.com\nGroxio Learning — https://grox.io/training/elixir/home\nLive
    View — https://support.google.com/maps/thread/11554255?hl=en\nBuild a real-time
    Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — https://www.youtube.com/watch?v=MZvmYaFkNJI\nThe
    History of Emojis Blog Post — https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\nBurgergate
    https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\nJoy
    of Coding — https://joyofcoding.org/\nTest-driven development — https://en.wikipedia.org/wiki/Test-drivendevelopment\nMox
    — https://hexdocs.pm/mox/Mox.html\nVenmo — https://venmo.com/\nMint — https://www.mint.com/\nAvengers
    — https://www.marvel.com/movies/avengers-endgame\nDC Elixir — https://www.meetup.com/DC-Elixir/\nTodd
    Resudek — https://medium.com/@toddresudek\nAndrea Leopardi — https://andrealeopardi.com/\nBrooklyn
    Zelenka — https://medium.com/@expede\nThe Lord of Rings — https://www.rottentomatoes.com/franchise/lordoftherings\nWes
    Anderson — https://www.imdb.com/name/nm0027572/\nScott Pilgrim vs. The World —
    https://www.rottentomatoes.com/m/scottpilgrimsvstheworld\nCommunity — https://www.rottentomatoes.com/tv/community\nThe
    Office — https://www.rottentomatoes.com/tv/theoffice\nRick and Morty — https://www.rottentomatoes.com/tv/rickand_morty\nJustus
    Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich on Twitter —
    https://twitter.com/ericoestrich Special Guests: Andrea Leopardi and Sundi Myint.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ssgk_8p1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f14188bd-903b-49eb-bc8b-f52429966e63.mp3
    length: '66791874'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: "Our featured guest today is Sundi Myint and she is here to share her
      journey with Elixir and her non-traditional path to programming. We hear about
      Sundi's interest in gaming, experience using Elixir at Cava, and the inspiration
      behind her amazing Instagram account.  Plus we dive into Sundi's History of
      Emojis technical blog posts - a favorite of Justus'. \n\nAnd Pattern Matching
      with Todd is back with a conversation with Andrea Leopardi."
    duration: '45:58'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f14188bd-903b-49eb-bc8b-f52429966e63/cover.jpg?v=1
    summary: "\n        <p>Welcome to another episode of Elixir Wizards as we continue
      our journey into system and application architecture! Our featured guest today
      is Sundi Myint and she is here to share her journey with Elixir and her non-traditional
      path to programming. We hear about Sundi&#39;s interest in gaming, her role
      at Cava and a bit of the inspiration behind her amazing Instagram account! We
      discuss her first internship and how she found herself in the role quite suddenly
      before diving into the motivation behind her blog post on the history of emojis.
      Sundi did some serious research into this interesting subject and she shares
      some of the more technical aspects of the story with us on the show. We talk
      about architecture and both test and design-driven approaches. Sundi also explains
      her process and how mapping things out on a whiteboard has been her favored
      way to do things for some time. Andrea Leopardi then joins us for another edition
      of Pattern Matching with Todd! He answers Todd&#39;s questions about his home
      life, media favorites, future projects and more!</p>\n\n<p>Key Points From This
      Episode:</p>\n\n<ul>\n<li>Sundi&#39;s Instagram aesthetic and her love of food
      and photography. </li>\n<li>How Sundi got into programming and her first internship.<br></li>\n<li>Getting
      hired at Cava and an introduction to Elixir and the community.</li>\n<li>Video
      game programming and Sundi&#39;s thoughts on the possibility of pursuing this
      path. </li>\n<li>Sundi&#39;s first paid job out of college and the tech stack
      at the company.</li>\n<li>Thoughts on easily available learning resources and
      the power of Live View. </li>\n<li>Some background on Sundi&#39;s amazing blog
      post on the history of emojis.</li>\n<li>Understanding Unicode, how it works
      and its role in translation and interpretation. </li>\n<li>Sundi&#39;s perspectives
      on architecture and domain-driven design.</li>\n<li>Code design strategies,
      workflow and the idea and practice of test-driven code. </li>\n<li>Conversations
      with stakeholders and moving to the planning stage. </li>\n<li>How Sundi uses
      whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>\n<li>Andrea&#39;s
      travels and some of the amazing locations he has visited for conferences. </li>\n<li>Home
      life and lifestyle in quarantine for Andrea in Italy.</li>\n<li>Alternative
      career paths and Andrea&#39;s other interests; balancing creativity and logic.
      </li>\n<li>Music, movies and television choices for Andrea.</li>\n<li>Exciting
      new projects on the horizon for Andrea; a book, HTTP and more!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSundi Myint on Twitter — <a
      href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nSundi
      Myint on Instagram — <a href=\"https://www.instagram.com/sundikhin\" rel=\"nofollow\">https://www.instagram.com/sundikhin</a><br>\nCava
      — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nHackers
      &amp; Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
      Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nEA
      — <a href=\"https://www.ea.com\" rel=\"nofollow\">https://www.ea.com</a><br>\nGroxio
      Learning — <a href=\"https://grox.io/training/elixir/home\" rel=\"nofollow\">https://grox.io/training/elixir/home</a><br>\nLive
      View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nBuild
      a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href=\"https://www.youtube.com/watch?v=MZvmYaFkNJI\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>\nThe History
      of Emojis Blog Post — <a href=\"https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\"
      rel=\"nofollow\">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>\nBurgergate
      <a href=\"https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\"
      rel=\"nofollow\">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>\nJoy
      of Coding — <a href=\"https://joyofcoding.org/\" rel=\"nofollow\">https://joyofcoding.org/</a><br>\nTest-driven
      development — <a href=\"https://en.wikipedia.org/wiki/Test-driven_development\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Test-driven_development</a><br>\nMox
      — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nVenmo
      — <a href=\"https://venmo.com/\" rel=\"nofollow\">https://venmo.com/</a><br>\nMint
      — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nAvengers
      — <a href=\"https://www.marvel.com/movies/avengers-endgame\" rel=\"nofollow\">https://www.marvel.com/movies/avengers-endgame</a><br>\nDC
      Elixir — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nTodd
      Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nAndrea
      Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nBrooklyn
      Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nThe
      Lord of Rings — <a href=\"https://www.rottentomatoes.com/franchise/lord_of_the_rings\"
      rel=\"nofollow\">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>\nWes
      Anderson — <a href=\"https://www.imdb.com/name/nm0027572/\" rel=\"nofollow\">https://www.imdb.com/name/nm0027572/</a><br>\nScott
      Pilgrim vs. The World — <a href=\"https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world\"
      rel=\"nofollow\">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>\nCommunity
      — <a href=\"https://www.rottentomatoes.com/tv/community\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/community</a><br>\nThe
      Office — <a href=\"https://www.rottentomatoes.com/tv/the_office\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/the_office</a><br>\nRick
      and Morty — <a href=\"https://www.rottentomatoes.com/tv/rick_and_morty\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>\nJustus
      Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guests: Andrea Leopardi and Sundi Myint.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another episode of Elixir Wizards as we
    continue our journey into system and application architecture! Our featured guest
    today is Sundi Myint and she is here to share her journey with Elixir and her
    non-traditional path to programming. We hear about Sundi&#39;s interest in gaming,
    her role at Cava and a bit of the inspiration behind her amazing Instagram account!
    We discuss her first internship and how she found herself in the role quite suddenly
    before diving into the motivation behind her blog post on the history of emojis.
    Sundi did some serious research into this interesting subject and she shares some
    of the more technical aspects of the story with us on the show. We talk about
    architecture and both test and design-driven approaches. Sundi also explains her
    process and how mapping things out on a whiteboard has been her favored way to
    do things for some time. Andrea Leopardi then joins us for another edition of
    Pattern Matching with Todd! He answers Todd&#39;s questions about his home life,
    media favorites, future projects and more!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Sundi&#39;s
    Instagram aesthetic and her love of food and photography. </li>\n<li>How Sundi
    got into programming and her first internship.<br></li>\n<li>Getting hired at
    Cava and an introduction to Elixir and the community.</li>\n<li>Video game programming
    and Sundi&#39;s thoughts on the possibility of pursuing this path. </li>\n<li>Sundi&#39;s
    first paid job out of college and the tech stack at the company.</li>\n<li>Thoughts
    on easily available learning resources and the power of Live View. </li>\n<li>Some
    background on Sundi&#39;s amazing blog post on the history of emojis.</li>\n<li>Understanding
    Unicode, how it works and its role in translation and interpretation. </li>\n<li>Sundi&#39;s
    perspectives on architecture and domain-driven design.</li>\n<li>Code design strategies,
    workflow and the idea and practice of test-driven code. </li>\n<li>Conversations
    with stakeholders and moving to the planning stage. </li>\n<li>How Sundi uses
    whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>\n<li>Andrea&#39;s
    travels and some of the amazing locations he has visited for conferences. </li>\n<li>Home
    life and lifestyle in quarantine for Andrea in Italy.</li>\n<li>Alternative career
    paths and Andrea&#39;s other interests; balancing creativity and logic. </li>\n<li>Music,
    movies and television choices for Andrea.</li>\n<li>Exciting new projects on the
    horizon for Andrea; a book, HTTP and more!</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSundi Myint on Twitter — <a href=\"https://twitter.com/sundikhin\" rel=\"nofollow\">https://twitter.com/sundikhin</a><br>\nSundi
    Myint on Instagram — <a href=\"https://www.instagram.com/sundikhin\" rel=\"nofollow\">https://www.instagram.com/sundikhin</a><br>\nCava
    — <a href=\"https://cava.com/\" rel=\"nofollow\">https://cava.com/</a><br>\nHackers
    &amp; Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
    Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nEA
    — <a href=\"https://www.ea.com\" rel=\"nofollow\">https://www.ea.com</a><br>\nGroxio
    Learning — <a href=\"https://grox.io/training/elixir/home\" rel=\"nofollow\">https://grox.io/training/elixir/home</a><br>\nLive
    View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nBuild
    a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href=\"https://www.youtube.com/watch?v=MZvmYaFkNJI\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>\nThe History
    of Emojis Blog Post — <a href=\"https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d\"
    rel=\"nofollow\">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>\nBurgergate
    <a href=\"https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple\"
    rel=\"nofollow\">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>\nJoy
    of Coding — <a href=\"https://joyofcoding.org/\" rel=\"nofollow\">https://joyofcoding.org/</a><br>\nTest-driven
    development — <a href=\"https://en.wikipedia.org/wiki/Test-driven_development\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Test-driven_development</a><br>\nMox
    — <a href=\"https://hexdocs.pm/mox/Mox.html\" rel=\"nofollow\">https://hexdocs.pm/mox/Mox.html</a><br>\nVenmo
    — <a href=\"https://venmo.com/\" rel=\"nofollow\">https://venmo.com/</a><br>\nMint
    — <a href=\"https://www.mint.com/\" rel=\"nofollow\">https://www.mint.com/</a><br>\nAvengers
    — <a href=\"https://www.marvel.com/movies/avengers-endgame\" rel=\"nofollow\">https://www.marvel.com/movies/avengers-endgame</a><br>\nDC
    Elixir — <a href=\"https://www.meetup.com/DC-Elixir/\" rel=\"nofollow\">https://www.meetup.com/DC-Elixir/</a><br>\nTodd
    Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nAndrea
    Leopardi — <a href=\"https://andrealeopardi.com/\" rel=\"nofollow\">https://andrealeopardi.com/</a><br>\nBrooklyn
    Zelenka — <a href=\"https://medium.com/@expede\" rel=\"nofollow\">https://medium.com/@expede</a><br>\nThe
    Lord of Rings — <a href=\"https://www.rottentomatoes.com/franchise/lord_of_the_rings\"
    rel=\"nofollow\">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>\nWes
    Anderson — <a href=\"https://www.imdb.com/name/nm0027572/\" rel=\"nofollow\">https://www.imdb.com/name/nm0027572/</a><br>\nScott
    Pilgrim vs. The World — <a href=\"https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world\"
    rel=\"nofollow\">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>\nCommunity
    — <a href=\"https://www.rottentomatoes.com/tv/community\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/community</a><br>\nThe
    Office — <a href=\"https://www.rottentomatoes.com/tv/the_office\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/the_office</a><br>\nRick
    and Morty — <a href=\"https://www.rottentomatoes.com/tv/rick_and_morty\" rel=\"nofollow\">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>\nJustus
    Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guests: Andrea Leopardi and Sundi Myint.</p>\n      "
- title: Dave Thomas on Learning How Things Work
  slug: s4e5-thomas
  link: https://smartlogic.io/podcast/elixir-wizards/s4e5-thomas
  guid: 9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f
  pubDate: Thu, 18 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 18, 2020
  description: "Dave Thomas is recognized internationally as an expert who develops
    high-quality software–accurate and highly flexible systems. He helped write the
    now-famous Agile Manifesto, and regularly gives inspiring and controversial speeches
    on new ways of producing software. He is the author of six books, including the
    best selling The Pragmatic Programmer: From Journeyman to Master and Programming
    Ruby: A Pragmatic Programmer's Guide. In this episode, we discuss everything from
    learning computer science in an academic setting, test-driven development, and
    state to architecture, libraries, and what Dave loves about what he does. Dave
    talks about his students, both those who are passionate and those who are just
    going through the motions, as well as his own experience of being a student. He
    explains to us what he means when he said he doesn’t write unit tests at an Elixir
    conference in Austin recently, we talk about his favorite and most rewarding books,
    and Dave gives us a really unique answer to our architecture question. We discuss
    domain-driven design, microservice architectures, and Elixir libraries, and Dave
    shares why is so passionate about what he does. Tune in to hear some of Dave’s
    strong opinions on programming!\nKey Points From This Episode:\nThe Coding Gnome
    and how it bridges the gap between learned and practical experience.\nDave talks
    about being a lecturer at SMU and why students aren’t prepared for the real world.\nWhy
    Dave stopped teaching Elixir at SMU.\nStudents who study computer science for
    passion versus those who study it to get a job.\nDave talks about his experience
    of studying computer science at university.\nThe inspiring and controversial keynote
    addresses Dave has given at conferences.\nWhat it means when Dave said he doesn’t
    write unit tests and the projects he’s working on.\nThe culture around test-driven
    development and writing tests when Dave was at university.\nDave tells a story
    about writing the incoming telex switch for the UK.\nWhy the first edition of
    Programming Ruby was Dave’s favorite book to write.\nWhy The Pragmatic Programmer
    is the book Dave is most proud of.\nDave isn’t currently writing a new book, so
    he can concentrate on pseudo-course material.\nDave explains the process of developing
    a narrative arc when writing a technical book.\nWhat the state of a system is
    and how it is distinct from data.\nDave describes why he believes architecture
    is a misunderstood and borrowed metaphor.\nDave’s opinions on buzzwords like domain-driven
    design and microservice architectures.\nThe status on The Component Library, as
    mentioned by Dave in his EMPEX 2018 keynote.\nGetting involved with publishing
    Elixir libraries and what his process looks like.\nHow Dave likes to receive product
    specification when dealing with clients.\nWhat Dave loves about the programming
    industry.\nWhy Dave doesn’t write Elixir anymore and why he became frustrated
    with it.\nWhere Dave is going from here to how best to express what he wants.\nFinal
    advice from Dave, not to abandon Elixir if it makes you happy.\nLinks Mentioned
    in Today’s Episode:\nDave Thomas on Twitter – https://twitter.com/pragdave\nThe
    Coding Gnome – https://pragdave.me/\nThe Coding Gnome Training — https://codestool.coding-gnome.com/\nAgile
    Manifesto – https://agilemanifesto.org/\nThe Pragmatic Programmer – https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\nProgramming
    Ruby – https://en.wikipedia.org/wiki/ProgrammingRuby\nRobert Kowalski on Wikipedia
    — https://en.wikipedia.org/wiki/RobertKowalski\nDave Thomas on Wikipedia — https://en.wikipedia.org/wiki/DaveThomas(programmer)\nSpace-state
    representation — https://en.wikipedia.org/wiki/State-spacerepresentation\nChristopher
    Alexander — https://en.wikipedia.org/wiki/ChristopherAlexander\nA Pattern Language
    — https://en.wikipedia.org/wiki/APatternLanguage\nDave Thomas Keynote at Empex
    NYC 2018 — https://www.youtube.com/watch?v=6U7cLUygMeI\nSmartLogic — https://smartlogic.io/
    \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich on
    Twitter — https://twitter.com/ericoestrich\n Special Guest: Dave Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+_-HB_kh-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f.mp3
    length: '100994010'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Dave Thomas is recognized internationally as an expert who develops
      high-quality software–accurate and highly flexible systems. Today we pick his
      brain on everything from learning computer science in an academic setting, test-driven
      development, and state to architecture, libraries, and what Dave loves about
      what he does. '
    duration: '1:09:43'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f/cover.jpg?v=1
    summary: "\n        <p>Dave Thomas is recognized internationally as an expert
      who develops high-quality software–accurate and highly flexible systems. He
      helped write the now-famous Agile Manifesto, and regularly gives inspiring and
      controversial speeches on new ways of producing software. He is the author of
      six books, including the best selling The Pragmatic Programmer: From Journeyman
      to Master and Programming Ruby: A Pragmatic Programmer&#39;s Guide. In this
      episode, we discuss everything from learning computer science in an academic
      setting, test-driven development, and state to architecture, libraries, and
      what Dave loves about what he does. Dave talks about his students, both those
      who are passionate and those who are just going through the motions, as well
      as his own experience of being a student. He explains to us what he means when
      he said he doesn’t write unit tests at an Elixir conference in Austin recently,
      we talk about his favorite and most rewarding books, and Dave gives us a really
      unique answer to our architecture question. We discuss domain-driven design,
      microservice architectures, and Elixir libraries, and Dave shares why is so
      passionate about what he does. Tune in to hear some of Dave’s strong opinions
      on programming!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
      Coding Gnome and how it bridges the gap between learned and practical experience.</li>\n<li>Dave
      talks about being a lecturer at SMU and why students aren’t prepared for the
      real world.</li>\n<li>Why Dave stopped teaching Elixir at SMU.</li>\n<li>Students
      who study computer science for passion versus those who study it to get a job.</li>\n<li>Dave
      talks about his experience of studying computer science at university.</li>\n<li>The
      inspiring and controversial keynote addresses Dave has given at conferences.</li>\n<li>What
      it means when Dave said he doesn’t write unit tests and the projects he’s working
      on.</li>\n<li>The culture around test-driven development and writing tests when
      Dave was at university.</li>\n<li>Dave tells a story about writing the incoming
      telex switch for the UK.</li>\n<li>Why the first edition of Programming Ruby
      was Dave’s favorite book to write.</li>\n<li>Why The Pragmatic Programmer is
      the book Dave is most proud of.</li>\n<li>Dave isn’t currently writing a new
      book, so he can concentrate on pseudo-course material.</li>\n<li>Dave explains
      the process of developing a narrative arc when writing a technical book.</li>\n<li>What
      the state of a system is and how it is distinct from data.</li>\n<li>Dave describes
      why he believes architecture is a misunderstood and borrowed metaphor.</li>\n<li>Dave’s
      opinions on buzzwords like domain-driven design and microservice architectures.</li>\n<li>The
      status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>\n<li>Getting
      involved with publishing Elixir libraries and what his process looks like.</li>\n<li>How
      Dave likes to receive product specification when dealing with clients.</li>\n<li>What
      Dave loves about the programming industry.</li>\n<li>Why Dave doesn’t write
      Elixir anymore and why he became frustrated with it.</li>\n<li>Where Dave is
      going from here to how best to express what he wants.</li>\n<li>Final advice
      from Dave, not to abandon Elixir if it makes you happy.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Dave Thomas on Twitter – <a href=\"https://twitter.com/pragdave\"
      rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nThe Coding Gnome – <a
      href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nThe
      Coding Gnome Training — <a href=\"https://codestool.coding-gnome.com/\" rel=\"nofollow\">https://codestool.coding-gnome.com/</a><br>\nAgile
      Manifesto – <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a><br>\nThe
      Pragmatic Programmer – <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
      rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nProgramming
      Ruby – <a href=\"https://en.wikipedia.org/wiki/Programming_Ruby\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>\nRobert
      Kowalski on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Robert_Kowalski\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>\nDave
      Thomas on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>\nSpace-state
      representation — <a href=\"https://en.wikipedia.org/wiki/State-space_representation\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/State-space_representation</a><br>\nChristopher
      Alexander — <a href=\"https://en.wikipedia.org/wiki/Christopher_Alexander\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>\nA
      Pattern Language — <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"
      rel=\"nofollow\">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>\nDave
      Thomas Keynote at Empex NYC 2018 — <a href=\"https://www.youtube.com/watch?v=6U7cLUygMeI\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich on Twitter
      — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
      Guest: Dave Thomas.</p>\n      "
  contentEncoded: "\n        <p>Dave Thomas is recognized internationally as an expert
    who develops high-quality software–accurate and highly flexible systems. He helped
    write the now-famous Agile Manifesto, and regularly gives inspiring and controversial
    speeches on new ways of producing software. He is the author of six books, including
    the best selling The Pragmatic Programmer: From Journeyman to Master and Programming
    Ruby: A Pragmatic Programmer&#39;s Guide. In this episode, we discuss everything
    from learning computer science in an academic setting, test-driven development,
    and state to architecture, libraries, and what Dave loves about what he does.
    Dave talks about his students, both those who are passionate and those who are
    just going through the motions, as well as his own experience of being a student.
    He explains to us what he means when he said he doesn’t write unit tests at an
    Elixir conference in Austin recently, we talk about his favorite and most rewarding
    books, and Dave gives us a really unique answer to our architecture question.
    We discuss domain-driven design, microservice architectures, and Elixir libraries,
    and Dave shares why is so passionate about what he does. Tune in to hear some
    of Dave’s strong opinions on programming!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>The
    Coding Gnome and how it bridges the gap between learned and practical experience.</li>\n<li>Dave
    talks about being a lecturer at SMU and why students aren’t prepared for the real
    world.</li>\n<li>Why Dave stopped teaching Elixir at SMU.</li>\n<li>Students who
    study computer science for passion versus those who study it to get a job.</li>\n<li>Dave
    talks about his experience of studying computer science at university.</li>\n<li>The
    inspiring and controversial keynote addresses Dave has given at conferences.</li>\n<li>What
    it means when Dave said he doesn’t write unit tests and the projects he’s working
    on.</li>\n<li>The culture around test-driven development and writing tests when
    Dave was at university.</li>\n<li>Dave tells a story about writing the incoming
    telex switch for the UK.</li>\n<li>Why the first edition of Programming Ruby was
    Dave’s favorite book to write.</li>\n<li>Why The Pragmatic Programmer is the book
    Dave is most proud of.</li>\n<li>Dave isn’t currently writing a new book, so he
    can concentrate on pseudo-course material.</li>\n<li>Dave explains the process
    of developing a narrative arc when writing a technical book.</li>\n<li>What the
    state of a system is and how it is distinct from data.</li>\n<li>Dave describes
    why he believes architecture is a misunderstood and borrowed metaphor.</li>\n<li>Dave’s
    opinions on buzzwords like domain-driven design and microservice architectures.</li>\n<li>The
    status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>\n<li>Getting
    involved with publishing Elixir libraries and what his process looks like.</li>\n<li>How
    Dave likes to receive product specification when dealing with clients.</li>\n<li>What
    Dave loves about the programming industry.</li>\n<li>Why Dave doesn’t write Elixir
    anymore and why he became frustrated with it.</li>\n<li>Where Dave is going from
    here to how best to express what he wants.</li>\n<li>Final advice from Dave, not
    to abandon Elixir if it makes you happy.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Dave Thomas on Twitter – <a href=\"https://twitter.com/pragdave\"
    rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nThe Coding Gnome – <a href=\"https://pragdave.me/\"
    rel=\"nofollow\">https://pragdave.me/</a><br>\nThe Coding Gnome Training — <a
    href=\"https://codestool.coding-gnome.com/\" rel=\"nofollow\">https://codestool.coding-gnome.com/</a><br>\nAgile
    Manifesto – <a href=\"https://agilemanifesto.org/\" rel=\"nofollow\">https://agilemanifesto.org/</a><br>\nThe
    Pragmatic Programmer – <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
    rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nProgramming
    Ruby – <a href=\"https://en.wikipedia.org/wiki/Programming_Ruby\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>\nRobert
    Kowalski on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Robert_Kowalski\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>\nDave Thomas
    on Wikipedia — <a href=\"https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>\nSpace-state
    representation — <a href=\"https://en.wikipedia.org/wiki/State-space_representation\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/State-space_representation</a><br>\nChristopher
    Alexander — <a href=\"https://en.wikipedia.org/wiki/Christopher_Alexander\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>\nA
    Pattern Language — <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"
    rel=\"nofollow\">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>\nDave
    Thomas Keynote at Empex NYC 2018 — <a href=\"https://www.youtube.com/watch?v=6U7cLUygMeI\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a></p><p>Special
    Guest: Dave Thomas.</p>\n      "
- title: Ben Marx on the Launch and Architecture of SubSpace
  slug: s4e4-marx
  link: https://smartlogic.io/podcast/elixir-wizards/s4e4-marx
  guid: e711fb4d-502b-4733-b5e2-01ff002b836a
  pubDate: Thu, 11 Jun 2020 06:00:00 -0400
  pubDateFriendly: June 11, 2020
  description: "Joining us on the show for this episode is Ben Marx, author of Adopting
    Elixir and Principal Control Plane Engineer at the recently launched SubSpace!
    We continue our Season 4 journey into system and application architecture with
    Ben and he unpacks what he can about the somewhat still under wraps work at the
    new company. Ben is all about plain-spoken and easy to understand conversations
    on these topics, preferring to avoid highfalutin and confusing terms with multiple
    interpretations. He really drills down on his understanding of the fundamentals
    of his work and we also get to hear about his previous position at Bleacher Report.
    He unpacks the lessons he took away from the company, and the changes he witnessed
    while there. Ben explains how Elixir fits into the work at SubSpace and what a
    perfect fit it is for their low-latency service. We also spend a bit of time talking
    about life as an introverted programmer, attending conferences and meeting people,
    and remote work and family life during the pandemic. For all this and then some,
    tune in today!\nKey Points From This Episode:\n* Ben's exciting new position at
    SubSpace, and how the company reduces latency.\n* The increasing need for more
    reliable internet speeds during the pandemic.\n* Use of Elixir for SubSpace and
    how well it fits the needs of the company.\n* The engineering team at SubSpace
    and some of the basic system architecture. \n* Meeting people, giving talks and
    life at conferences as an introvert.  \n* The meaning of architecture to Ben;
    more dynamic than static. \n* Differentiating between architecture and design;
    the abstract and reality.\n* The idea of domain-driven design what the concept
    means to Ben.\n* Placement of the authentication and authorization systems.\n*
    Ben's time working at Bleacher Report and the development of the company during
    his time there.\n* Thoughts on Kafka and its baffling name! \n* Ben's new role
    at SubSpace and major areas of learning for him so far.\n* Adapting to a new role
    during the work from home era; life under quarantine. \n* Project management and
    helpful processes for remote work in a new world. \n* Ideas for another book from
    Ben, his belief in Elixir and getting in contact! \nLinks Mentioned in Today’s
    Episode:\nSmartLogic — https://smartlogic.io/ \nBen Marx — https://bgmarx.com/\nSubSpace
    — https://www.subspace.com/\nBen Marx on Twitter — https://twitter.com/bgmarx\nAdopting
    Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nBleacher
    Report — https://bleacherreport.com/\nSubspace article at the Wall Street Journal
    — https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\nSubspace
    article at VentureBeat — https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\nKafka
    — https://kafka.apache.org/coding-guide\nFranz Kafka — https://www.biography.com/writer/franz-kafka\nMax
    Brod — https://www.britannica.com/biography/Max-Brod\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nJustus
    Eapen on Twitter — https://twitter.com/justuseapen\nEric Oestrich — https://oestrich.org/\nEric
    Oestrich on Twitter — https://twitter.com/ericoestrich\nEric Oestrich on GitHub
    — https://github.com/oestrich Special Guest: Ben Marx.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+poHi9Gg5
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e711fb4d-502b-4733-b5e2-01ff002b836a.mp3
    length: '55964578'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Joining us on the show for this episode is Ben Marx, author of Adopting
      Elixir and Principal Control Plane Engineer at the recently launched SubSpace.
      We continue our Season 4 journey into system and application architecture with
      Ben and he unpacks tech lingo, understanding of the fundamentals, and how Elixir
      fits into his work at SubSpace. '
    duration: '38:27'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e711fb4d-502b-4733-b5e2-01ff002b836a/cover.jpg?v=1
    summary: "\n        <p>Joining us on the show for this episode is Ben Marx, author
      of Adopting Elixir and Principal Control Plane Engineer at the recently launched
      SubSpace! We continue our Season 4 journey into system and application architecture
      with Ben and he unpacks what he can about the somewhat still under wraps work
      at the new company. Ben is all about plain-spoken and easy to understand conversations
      on these topics, preferring to avoid highfalutin and confusing terms with multiple
      interpretations. He really drills down on his understanding of the fundamentals
      of his work and we also get to hear about his previous position at Bleacher
      Report. He unpacks the lessons he took away from the company, and the changes
      he witnessed while there. Ben explains how Elixir fits into the work at SubSpace
      and what a perfect fit it is for their low-latency service. We also spend a
      bit of time talking about life as an introverted programmer, attending conferences
      and meeting people, and remote work and family life during the pandemic. For
      all this and then some, tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Ben&#39;s
      exciting new position at SubSpace, and how the company reduces latency.</li>\n<li>The
      increasing need for more reliable internet speeds during the pandemic.</li>\n<li>Use
      of Elixir for SubSpace and how well it fits the needs of the company.</li>\n<li>The
      engineering team at SubSpace and some of the basic system architecture. </li>\n<li>Meeting
      people, giving talks and life at conferences as an introvert.<br></li>\n<li>The
      meaning of architecture to Ben; more dynamic than static. </li>\n<li>Differentiating
      between architecture and design; the abstract and reality.</li>\n<li>The idea
      of domain-driven design what the concept means to Ben.</li>\n<li>Placement of
      the authentication and authorization systems.</li>\n<li>Ben&#39;s time working
      at Bleacher Report and the development of the company during his time there.</li>\n<li>Thoughts
      on Kafka and its baffling name! </li>\n<li>Ben&#39;s new role at SubSpace and
      major areas of learning for him so far.</li>\n<li>Adapting to a new role during
      the work from home era; life under quarantine. </li>\n<li>Project management
      and helpful processes for remote work in a new world. </li>\n<li>Ideas for another
      book from Ben, his belief in Elixir and getting in contact! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBen Marx — <a href=\"https://bgmarx.com/\"
      rel=\"nofollow\">https://bgmarx.com/</a><br>\nSubSpace — <a href=\"https://www.subspace.com/\"
      rel=\"nofollow\">https://www.subspace.com/</a><br>\nBen Marx on Twitter — <a
      href=\"https://twitter.com/bgmarx\" rel=\"nofollow\">https://twitter.com/bgmarx</a><br>\nAdopting
      Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nSubspace
      article at the Wall Street Journal — <a href=\"https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\"
      rel=\"nofollow\">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>\nSubspace
      article at VentureBeat — <a href=\"https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\"
      rel=\"nofollow\">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>\nKafka
      — <a href=\"https://kafka.apache.org/coding-guide\" rel=\"nofollow\">https://kafka.apache.org/coding-guide</a><br>\nFranz
      Kafka — <a href=\"https://www.biography.com/writer/franz-kafka\" rel=\"nofollow\">https://www.biography.com/writer/franz-kafka</a><br>\nMax
      Brod — <a href=\"https://www.britannica.com/biography/Max-Brod\" rel=\"nofollow\">https://www.britannica.com/biography/Max-Brod</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nJustus
      Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Ben Marx.</p>\n      "
  contentEncoded: "\n        <p>Joining us on the show for this episode is Ben Marx,
    author of Adopting Elixir and Principal Control Plane Engineer at the recently
    launched SubSpace! We continue our Season 4 journey into system and application
    architecture with Ben and he unpacks what he can about the somewhat still under
    wraps work at the new company. Ben is all about plain-spoken and easy to understand
    conversations on these topics, preferring to avoid highfalutin and confusing terms
    with multiple interpretations. He really drills down on his understanding of the
    fundamentals of his work and we also get to hear about his previous position at
    Bleacher Report. He unpacks the lessons he took away from the company, and the
    changes he witnessed while there. Ben explains how Elixir fits into the work at
    SubSpace and what a perfect fit it is for their low-latency service. We also spend
    a bit of time talking about life as an introverted programmer, attending conferences
    and meeting people, and remote work and family life during the pandemic. For all
    this and then some, tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Ben&#39;s
    exciting new position at SubSpace, and how the company reduces latency.</li>\n<li>The
    increasing need for more reliable internet speeds during the pandemic.</li>\n<li>Use
    of Elixir for SubSpace and how well it fits the needs of the company.</li>\n<li>The
    engineering team at SubSpace and some of the basic system architecture. </li>\n<li>Meeting
    people, giving talks and life at conferences as an introvert.<br></li>\n<li>The
    meaning of architecture to Ben; more dynamic than static. </li>\n<li>Differentiating
    between architecture and design; the abstract and reality.</li>\n<li>The idea
    of domain-driven design what the concept means to Ben.</li>\n<li>Placement of
    the authentication and authorization systems.</li>\n<li>Ben&#39;s time working
    at Bleacher Report and the development of the company during his time there.</li>\n<li>Thoughts
    on Kafka and its baffling name! </li>\n<li>Ben&#39;s new role at SubSpace and
    major areas of learning for him so far.</li>\n<li>Adapting to a new role during
    the work from home era; life under quarantine. </li>\n<li>Project management and
    helpful processes for remote work in a new world. </li>\n<li>Ideas for another
    book from Ben, his belief in Elixir and getting in contact! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBen Marx — <a href=\"https://bgmarx.com/\"
    rel=\"nofollow\">https://bgmarx.com/</a><br>\nSubSpace — <a href=\"https://www.subspace.com/\"
    rel=\"nofollow\">https://www.subspace.com/</a><br>\nBen Marx on Twitter — <a href=\"https://twitter.com/bgmarx\"
    rel=\"nofollow\">https://twitter.com/bgmarx</a><br>\nAdopting Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nSubspace
    article at the Wall Street Journal — <a href=\"https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201\"
    rel=\"nofollow\">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>\nSubspace
    article at VentureBeat — <a href=\"https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/\"
    rel=\"nofollow\">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>\nKafka
    — <a href=\"https://kafka.apache.org/coding-guide\" rel=\"nofollow\">https://kafka.apache.org/coding-guide</a><br>\nFranz
    Kafka — <a href=\"https://www.biography.com/writer/franz-kafka\" rel=\"nofollow\">https://www.biography.com/writer/franz-kafka</a><br>\nMax
    Brod — <a href=\"https://www.britannica.com/biography/Max-Brod\" rel=\"nofollow\">https://www.britannica.com/biography/Max-Brod</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nJustus
    Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Ben Marx.</p>\n      "
- title: Pattern Matching  - Johanna Larsson
  slug: s4e4b-pattern-matching-larsson
  link: https://smartlogic.io/podcast/elixir-wizards/s4e4b-pattern-matching-larsson
  guid: ac3f0d31-f498-4d6a-ba69-3dbae9d0510f
  pubDate: Tue, 09 Jun 2020 06:00:00 -0400
  pubDateFriendly: June  9, 2020
  description: "A special episode of Elixir Wizards highlighting Pattern Matching
    with Todd - a short format interview where our friend, Todd Resudek, asks different
    guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna
    is active on the Elixir scene and is currently working as a Software Engineer
    at Duffel.\nKey Points From This Episode:\n* Living in Malmo, Sweden.\n* Johanna's
    love of languages.\n* The complexities of written Japanese.  \n* How Johanna uses
    music to set the soundtrack to her work. \n* Todd missing the boat on a cinematic
    and cultural masterpiece.\n* Integrating and improving upon the hex diff project.\nLinks
    Mentioned in Today’s Episode:\nJohanna Larsson on GitHub - https://github.com/joladev\nJohanna
    Larsson on Twitter - https://twitter.com/joladev\nTodd Resudek on Twitter — https://twitter.com/sprsmpl\nSmartLogic
    — https://smartlogic.io/  Special Guest: Johanna Larsson.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+lFYLJIym
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f.mp3
    length: '21303933'
    type: audio/mpeg
  itunes:
    episodeType: bonus
    season: '4'
    author: SmartLogic LLC
    subtitle: A special episode of Elixir Wizards highlighting Pattern Matching with
      Todd - a short format interview where our friend, Todd Resudek, asks different
      guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna
      is active on the Elixir scene and is currently working as a Software Engineer
      at Duffel.
    duration: '14:46'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f/cover.jpg?v=1
    summary: "\n        <p>A special episode of Elixir Wizards highlighting Pattern
      Matching with Todd - a short format interview where our friend, Todd Resudek,
      asks different guests the same five questions. This week Todd spoke with Johanna
      Larsson. Johanna is active on the Elixir scene and is currently working as a
      Software Engineer at Duffel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Living
      in Malmo, Sweden.</li>\n<li>Johanna&#39;s love of languages.</li>\n<li>The complexities
      of written Japanese.<br></li>\n<li>How Johanna uses music to set the soundtrack
      to her work. </li>\n<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>\n<li>Integrating
      and improving upon the hex diff project.</li>\n</ul>\n\n<p>Links Mentioned in
      Today’s Episode:</p>\n\n<p>Johanna Larsson on GitHub - <a href=\"https://github.com/joladev\"
      rel=\"nofollow\">https://github.com/joladev</a><br>\nJohanna Larsson on Twitter
      - <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Johanna Larsson.</p>\n      "
  contentEncoded: "\n        <p>A special episode of Elixir Wizards highlighting Pattern
    Matching with Todd - a short format interview where our friend, Todd Resudek,
    asks different guests the same five questions. This week Todd spoke with Johanna
    Larsson. Johanna is active on the Elixir scene and is currently working as a Software
    Engineer at Duffel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Living
    in Malmo, Sweden.</li>\n<li>Johanna&#39;s love of languages.</li>\n<li>The complexities
    of written Japanese.<br></li>\n<li>How Johanna uses music to set the soundtrack
    to her work. </li>\n<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>\n<li>Integrating
    and improving upon the hex diff project.</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>Johanna Larsson on GitHub - <a href=\"https://github.com/joladev\"
    rel=\"nofollow\">https://github.com/joladev</a><br>\nJohanna Larsson on Twitter
    - <a href=\"https://twitter.com/joladev\" rel=\"nofollow\">https://twitter.com/joladev</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Johanna Larsson.</p>\n      "
- title: Steve Bussey on Real-Time Applications
  slug: s4e3-bussey
  link: https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey
  guid: b07768d6-b987-496e-87d3-483eedd42fa5
  pubDate: Thu, 28 May 2020 06:00:00 -0400
  pubDateFriendly: May 28, 2020
  description: "Real-time applications come with real challenges—persistent connections,
    multi-server deployment, and strict performance requirements are just a few. Our
    guest today is Steve Bussey, a software architect at SalesLoft and author of the
    new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels. In this
    episode, Steve shares with us what he has written on real-time Elixir applications
    and how he has led development in the field. We discuss how Steve found Elixir,
    what system and application architecture means to him, and what he considers the
    differences between architecting and designing a system. Steve gives us his opinions
    on domain-driven design, umbrella apps, and Phoenix LiveView, and shares some
    of his personal processes when working on new real-time features, as well as what
    he believes are the toughest parts of developing and rolling out real-time applications.
    Finally, we talk about testing, security, and performance issues, and Steve sells
    us on his book. Tune in today!\nKey Points From This Episode:\nWhat Steve’s favorite
    pair of shoes is and how he got into sneakers.\nWhere Steve is from and how long
    he has been doing programming.\nWhat system and application architecture means
    to Steve.\nThe difference between architecting and designing a system.\nSteve’s
    opinions on domain-driven design.\nEric’s opinion on umbrella apps and Steve’s
    response.\nWhere Steve starts when he works on a new real-time feature.\nSteve’s
    personal and professional pre-code design processes.\nThe toughest parts of developing
    and rolling out real-time applications.\nTesting real-time features and Steve’s
    thoughts on Phoenix LiveView.\nHow Steve incorporates security into the architecture
    when designing applications.\nMulti-tenant applications and how Steve deals with
    performance issues.\nDeployment considerations when going into production with
    a real-time application.\nSteve sells us on his book and gives his final plugs
    and asks for the audience.\nLinks Mentioned in Today’s Episode:\nSteve Bussey
    on Twitter – https://twitter.com/YOOOODAAAA\nSteven Bussey’s Website – https://stevenbussey.com/\nReal-Time
    Phoenix on Pragmatic Bookshelf – https://pragprog.com/book/sbsockets/real-time-phoenix\nSmartLogic
    — https://smartlogic.io/ \nJustus Eapen on Twitter — https://twitter.com/justuseapen\nEric
    Oestrich — https://oestrich.org/\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nEric
    Oestrich on GitHub — https://github.com/oestrich Special Guest: Steve Bussey.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+BulaMkUf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b07768d6-b987-496e-87d3-483eedd42fa5.mp3
    length: '71781094'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Real-time applications come with real challenges—persistent connections,
      multi-server deployment, and strict performance requirements are just a few.
      Our guest Steve Bussey, a software architect at SalesLoft and author of the
      new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels, talks
      with us about how he has led development in the field. '
    duration: '49:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b07768d6-b987-496e-87d3-483eedd42fa5/cover.jpg?v=1
    summary: "\n        <p>Real-time applications come with real challenges—persistent
      connections, multi-server deployment, and strict performance requirements are
      just a few. Our guest today is Steve Bussey, a software architect at SalesLoft
      and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems
      with Channels. In this episode, Steve shares with us what he has written on
      real-time Elixir applications and how he has led development in the field. We
      discuss how Steve found Elixir, what system and application architecture means
      to him, and what he considers the differences between architecting and designing
      a system. Steve gives us his opinions on domain-driven design, umbrella apps,
      and Phoenix LiveView, and shares some of his personal processes when working
      on new real-time features, as well as what he believes are the toughest parts
      of developing and rolling out real-time applications. Finally, we talk about
      testing, security, and performance issues, and Steve sells us on his book. Tune
      in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What Steve’s
      favorite pair of shoes is and how he got into sneakers.</li>\n<li>Where Steve
      is from and how long he has been doing programming.</li>\n<li>What system and
      application architecture means to Steve.</li>\n<li>The difference between architecting
      and designing a system.</li>\n<li>Steve’s opinions on domain-driven design.</li>\n<li>Eric’s
      opinion on umbrella apps and Steve’s response.</li>\n<li>Where Steve starts
      when he works on a new real-time feature.</li>\n<li>Steve’s personal and professional
      pre-code design processes.</li>\n<li>The toughest parts of developing and rolling
      out real-time applications.</li>\n<li>Testing real-time features and Steve’s
      thoughts on Phoenix LiveView.</li>\n<li>How Steve incorporates security into
      the architecture when designing applications.</li>\n<li>Multi-tenant applications
      and how Steve deals with performance issues.</li>\n<li>Deployment considerations
      when going into production with a real-time application.</li>\n<li>Steve sells
      us on his book and gives his final plugs and asks for the audience.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Steve Bussey on Twitter – <a href=\"https://twitter.com/YOOOODAAAA\"
      rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nSteven Bussey’s Website
      – <a href=\"https://stevenbussey.com/\" rel=\"nofollow\">https://stevenbussey.com/</a><br>\nReal-Time
      Phoenix on Pragmatic Bookshelf – <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
      rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric Oestrich — <a
      href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
      Guest: Steve Bussey.</p>\n      "
  contentEncoded: "\n        <p>Real-time applications come with real challenges—persistent
    connections, multi-server deployment, and strict performance requirements are
    just a few. Our guest today is Steve Bussey, a software architect at SalesLoft
    and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with
    Channels. In this episode, Steve shares with us what he has written on real-time
    Elixir applications and how he has led development in the field. We discuss how
    Steve found Elixir, what system and application architecture means to him, and
    what he considers the differences between architecting and designing a system.
    Steve gives us his opinions on domain-driven design, umbrella apps, and Phoenix
    LiveView, and shares some of his personal processes when working on new real-time
    features, as well as what he believes are the toughest parts of developing and
    rolling out real-time applications. Finally, we talk about testing, security,
    and performance issues, and Steve sells us on his book. Tune in today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>What Steve’s favorite pair of shoes
    is and how he got into sneakers.</li>\n<li>Where Steve is from and how long he
    has been doing programming.</li>\n<li>What system and application architecture
    means to Steve.</li>\n<li>The difference between architecting and designing a
    system.</li>\n<li>Steve’s opinions on domain-driven design.</li>\n<li>Eric’s opinion
    on umbrella apps and Steve’s response.</li>\n<li>Where Steve starts when he works
    on a new real-time feature.</li>\n<li>Steve’s personal and professional pre-code
    design processes.</li>\n<li>The toughest parts of developing and rolling out real-time
    applications.</li>\n<li>Testing real-time features and Steve’s thoughts on Phoenix
    LiveView.</li>\n<li>How Steve incorporates security into the architecture when
    designing applications.</li>\n<li>Multi-tenant applications and how Steve deals
    with performance issues.</li>\n<li>Deployment considerations when going into production
    with a real-time application.</li>\n<li>Steve sells us on his book and gives his
    final plugs and asks for the audience.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Steve Bussey on Twitter – <a href=\"https://twitter.com/YOOOODAAAA\"
    rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nSteven Bussey’s Website
    – <a href=\"https://stevenbussey.com/\" rel=\"nofollow\">https://stevenbussey.com/</a><br>\nReal-Time
    Phoenix on Pragmatic Bookshelf – <a href=\"https://pragprog.com/book/sbsockets/real-time-phoenix\"
    rel=\"nofollow\">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nJustus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a></p><p>Special
    Guest: Steve Bussey.</p>\n      "
- title: Mohd Maqbool Alam on System and Application Architecture
  slug: s4e2-alam
  link: https://smartlogic.io/podcast/elixir-wizards/s4e2-alam
  guid: a3a16821-cb7c-4c88-be0e-c2b412ad7bee
  pubDate: Thu, 21 May 2020 06:00:00 -0400
  pubDateFriendly: May 21, 2020
  description: |
    Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi. He enjoys learning about programming language theory, distributed systems, Cloud Native technologies, and open source. As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world, and what drew him to programming in the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir has changed the way he thinks about architecture applications, as well as his opinions on microservices, APIs, and static typing. We talk about the real-world consequences of programming, using Neil Ferguson’s pandemic simulation model as an example, and Maqbool shares his favorite RPC (when we actually meant to ask him his favorite RFC)! The episode concludes with Pattern Matching with Todd. In this edition, he discusses Kubernetes and Beam with Principal Software Architect Cory O’Daniel.
    Key Points From This Episode:
    Maqbool tells us a bit about himself and how he came to be part of the Elixir community.
    What enticed Maqbool to programming.
    Maqbool’s favorite resources from Elixir.
    How Elixir has changed the way Maqbool thinks about architecting applications.
    Maqbool’s ‘aha’ moment in distributed programming and how he got into pattern matching.
    Phoenix Live Dashboard and why Maqbool and the team are excited about it.
    How Maqbool approaches the design process when building an application from scratch.
    The tools and methods Maqbool uses when designing information architecture and APIs.
    Maqbool’s opinions on microservices, Kubernetes, and Amazon Lambda.
    Protocols and non-standard protocols.
    Neil Ferguson’s pandemic simulation model using undocumented C-code.
    How we should think about the real world consequences of high-stakes programming.
    Maqbool’s opinion on static typing.
    Macbool’s favorite RPC and RFC.
    Pattern Matching with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.
    Links Mentioned in Today’s Episode:
    Justus Eapen on LinkedIn — https://www.linkedin.com/in/justuseapen/
    Justus Eapen on Twitter — https://twitter.com/justuseapen
    Eric Oestrich — https://oestrich.org/
    Eric Oestrich on Twitter — https://twitter.com/ericoestrich
    Eric Oestrich on GitHub — https://github.com/oestrich
    Mohd Maqbool Alam on Twitter – https://twitter.com/Maqboolism
    Elixir Forum – https://elixirforum.com/
    Elixir in Action – https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X
    Phoenix Live Dashboard – https://github.com/phoenixframework/phoenixlivedashboard
    Absinthe – https://github.com/absinthe-graphql/absinthe
    Kubeless – https://kubeless.io/
    Kubernetes — https://kubernetes.io/
    Amazon Lambda – https://aws.amazon.com/lambda/
    Groxio – https://grox.io/
    Todd Resudek on Twitter — https://twitter.com/sprsmpl
    Cory O’Daniel on Twitter – https://twitter.com/coryodaniel
    Ziggy O’Doodle on Instagram – https://www.instagram.com/ziggy.odoodle/
    SmartLogic — https://smartlogic.io/  Special Guests: Cory O'Daniel and Mohd Maqbool Alam.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+kaRyq5P7
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a3a16821-cb7c-4c88-be0e-c2b412ad7bee.mp3
    length: '63044638'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'Today’s guest is Mohd Maqbool Alam, a software developer and Elixir
      fan from Delhi.  As he is working towards building an Elixir community in Delhi,
      we caught up with him to find out how he came to be part of the Elixir world
      and how Elixir has changed the way he thinks about architecture applications.
      Our new segment Pattern Matching with Todd Resudek features Principal Software
      Architect Cory O''Daniel discussing Kubernetes and Beam. '
    duration: '43:22'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a3a16821-cb7c-4c88-be0e-c2b412ad7bee/cover.jpg?v=1
    summary: "\n        <p>Today’s guest is Mohd Maqbool Alam, a software developer
      and Elixir fan from Delhi. He enjoys learning about programming language theory,
      distributed systems, Cloud Native technologies, and open source. As he is working
      towards building an Elixir community in Delhi, we caught up with him to find
      out how he came to be part of the Elixir world, and what drew him to programming
      in the first place. We also discuss Maqbool’s favorite Elixir resources and
      how Elixir has changed the way he thinks about architecture applications, as
      well as his opinions on microservices, APIs, and static typing. We talk about
      the real-world consequences of programming, using Neil Ferguson’s pandemic simulation
      model as an example, and Maqbool shares his favorite RPC (when we actually meant
      to ask him his favorite RFC)! The episode concludes with Pattern Matching with
      Todd. In this edition, he discusses Kubernetes and Beam with Principal Software
      Architect Cory O’Daniel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Maqbool
      tells us a bit about himself and how he came to be part of the Elixir community.</li>\n<li>What
      enticed Maqbool to programming.</li>\n<li>Maqbool’s favorite resources from
      Elixir.</li>\n<li>How Elixir has changed the way Maqbool thinks about architecting
      applications.</li>\n<li>Maqbool’s ‘aha’ moment in distributed programming and
      how he got into pattern matching.</li>\n<li>Phoenix Live Dashboard and why Maqbool
      and the team are excited about it.</li>\n<li>How Maqbool approaches the design
      process when building an application from scratch.</li>\n<li>The tools and methods
      Maqbool uses when designing information architecture and APIs.</li>\n<li>Maqbool’s
      opinions on microservices, Kubernetes, and Amazon Lambda.</li>\n<li>Protocols
      and non-standard protocols.</li>\n<li>Neil Ferguson’s pandemic simulation model
      using undocumented C-code.</li>\n<li>How we should think about the real world
      consequences of high-stakes programming.</li>\n<li>Maqbool’s opinion on static
      typing.</li>\n<li>Macbool’s favorite RPC and RFC.</li>\n<li>Pattern Matching
      with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\"
      rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nJustus Eapen
      on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
      Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a><br>\nMohd
      Maqbool Alam on Twitter – <a href=\"https://twitter.com/Maqboolism\" rel=\"nofollow\">https://twitter.com/Maqboolism</a><br>\nElixir
      Forum – <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir
      in Action – <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nPhoenix
      Live Dashboard – <a href=\"https://github.com/phoenixframework/phoenix_live_dashboard\"
      rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>\nAbsinthe
      – <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nKubeless
      – <a href=\"https://kubeless.io/\" rel=\"nofollow\">https://kubeless.io/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nAmazon
      Lambda – <a href=\"https://aws.amazon.com/lambda/\" rel=\"nofollow\">https://aws.amazon.com/lambda/</a><br>\nGroxio
      – <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nCory
      O’Daniel on Twitter – <a href=\"https://twitter.com/coryodaniel\" rel=\"nofollow\">https://twitter.com/coryodaniel</a><br>\nZiggy
      O’Doodle on Instagram – <a href=\"https://www.instagram.com/ziggy.odoodle/\"
      rel=\"nofollow\">https://www.instagram.com/ziggy.odoodle/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>\n      "
  contentEncoded: "\n        <p>Today’s guest is Mohd Maqbool Alam, a software developer
    and Elixir fan from Delhi. He enjoys learning about programming language theory,
    distributed systems, Cloud Native technologies, and open source. As he is working
    towards building an Elixir community in Delhi, we caught up with him to find out
    how he came to be part of the Elixir world, and what drew him to programming in
    the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir
    has changed the way he thinks about architecture applications, as well as his
    opinions on microservices, APIs, and static typing. We talk about the real-world
    consequences of programming, using Neil Ferguson’s pandemic simulation model as
    an example, and Maqbool shares his favorite RPC (when we actually meant to ask
    him his favorite RFC)! The episode concludes with Pattern Matching with Todd.
    In this edition, he discusses Kubernetes and Beam with Principal Software Architect
    Cory O’Daniel.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Maqbool
    tells us a bit about himself and how he came to be part of the Elixir community.</li>\n<li>What
    enticed Maqbool to programming.</li>\n<li>Maqbool’s favorite resources from Elixir.</li>\n<li>How
    Elixir has changed the way Maqbool thinks about architecting applications.</li>\n<li>Maqbool’s
    ‘aha’ moment in distributed programming and how he got into pattern matching.</li>\n<li>Phoenix
    Live Dashboard and why Maqbool and the team are excited about it.</li>\n<li>How
    Maqbool approaches the design process when building an application from scratch.</li>\n<li>The
    tools and methods Maqbool uses when designing information architecture and APIs.</li>\n<li>Maqbool’s
    opinions on microservices, Kubernetes, and Amazon Lambda.</li>\n<li>Protocols
    and non-standard protocols.</li>\n<li>Neil Ferguson’s pandemic simulation model
    using undocumented C-code.</li>\n<li>How we should think about the real world
    consequences of high-stakes programming.</li>\n<li>Maqbool’s opinion on static
    typing.</li>\n<li>Macbool’s favorite RPC and RFC.</li>\n<li>Pattern Matching with
    Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\"
    rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nJustus Eapen
    on Twitter — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nEric
    Oestrich on GitHub — <a href=\"https://github.com/oestrich\" rel=\"nofollow\">https://github.com/oestrich</a><br>\nMohd
    Maqbool Alam on Twitter – <a href=\"https://twitter.com/Maqboolism\" rel=\"nofollow\">https://twitter.com/Maqboolism</a><br>\nElixir
    Forum – <a href=\"https://elixirforum.com/\" rel=\"nofollow\">https://elixirforum.com/</a><br>\nElixir
    in Action – <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nPhoenix
    Live Dashboard – <a href=\"https://github.com/phoenixframework/phoenix_live_dashboard\"
    rel=\"nofollow\">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>\nAbsinthe
    – <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nKubeless
    – <a href=\"https://kubeless.io/\" rel=\"nofollow\">https://kubeless.io/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nAmazon
    Lambda – <a href=\"https://aws.amazon.com/lambda/\" rel=\"nofollow\">https://aws.amazon.com/lambda/</a><br>\nGroxio
    – <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nCory
    O’Daniel on Twitter – <a href=\"https://twitter.com/coryodaniel\" rel=\"nofollow\">https://twitter.com/coryodaniel</a><br>\nZiggy
    O’Doodle on Instagram – <a href=\"https://www.instagram.com/ziggy.odoodle/\" rel=\"nofollow\">https://www.instagram.com/ziggy.odoodle/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>\n      "
- title: Season Four Launchisode
  slug: s4e1-launchisode
  link: https://smartlogic.io/podcast/elixir-wizards/s4e1-launchisode
  guid: 34c3c1af-3f50-4e83-be65-e7420d65eada
  pubDate: Thu, 14 May 2020 06:00:00 -0400
  pubDateFriendly: May 14, 2020
  description: "As our first trilogy comes to a close, and we embark on the next one,
    we’re doing what all great trilogies do: Upending everything that made the initial
    one great and starting afresh. We have taken on board some excellent listener
    feedback to keep this the highest quality Elixir related podcast. So, for this
    launchisode, rather than doing a trailer, we are diving in headfirst with a full
    episode on system and application architecture, this season’s theme, with Justus
    Eapen, Dan Ivovich, and Eric Oestrich. \nWe kick off the show by getting to know
    Dan and Eric a bit better. This season, as per listener requests, we will spend
    more time on our guests' personal lives. We learn about Dan and Eric’s time at
    SmartLogic, their experience working with Elixir, and their approaches to learning
    it. From there, we move onto tackling clients’ projects. We discuss the importance
    of letting ideas flow free as well as how to break projects down into manageable
    sized segments to work on. Following this, we touch on flexible architecture.
    As the world changes, sometimes at a pace faster than we anticipate, it is more
    important than ever to design systems that we can iterate on. Then, we discuss
    the future of applications and architecture and the exciting possibilities in-store.
    \nThe show rounds off with our new segment, Pattern Matching with Todd, where
    our friend Todd Resudek gets to know someone in the community a bit better. Today,
    he talks with Connor Rigby of Binary Noggin, finding out more about his programing
    journey, his favorite music and movies, and his WiFi meshing project. We're so
    excited for this season, and we hope you join us on the journey. Tune in today!\nKey
    Points From This Episode:\nDan’s background and how he came to be Director of
    Development Operations.\nHow Eric started at SmartLogic and what his journey at
    the company has been like.\nLearn what convinced Dan to go all-in on Elixir and
    make the move from Rails\nSome of the educational materials and tools Dan and
    Eric used to learn Elixir.\nDan’s preferred style of design and why he enjoys
    TDD.\nWhy we think that Cucumber falls short and chose to move away from it.\nFind
    out what we think domain-driven design is.\nHow Dan and Eric approach deconstructing
    clients’ projects.\nPre-coding: Why it’s best to do free-form planning, with no
    constraints.\nInsights into the broad-reaching term of ‘API’ and what we mean
    by it.\nSOAP and REST APIs: What they are and the differences between them.\nHow
    Dan, Eric, and Justus’s thinking about designing and application architecture
    has evolved.\nObject-oriented programming versus functional: Our take on the age-old
    debate.\nIs this finally the year that we get to kill micro-services?\nThe relationship
    between team size and micro-services and some other constraints.\nWhat the future
    has in store for applications and architecting.\nPattern-matching with Todd: Five
    questions to get to know Connor Rigby a bit better.\nLinks Mentioned in Today’s
    Episode:\nJustus Eapen on Twitter — https://twitter.com/justuseapen\nDan Ivovich
    on Twitter — https://twitter.com/danivovich\nEric Oestrich on Twitter — https://twitter.com/ericoestrich\nKalevala
    on GitHub — https://github.com/oestrich/kalevala\nValve — https://www.valvesoftware.com/en/\nEcto
    — https://hexdocs.pm/ecto/Ecto.html\nPhoenix Elixir books — https://pragprog.com/book/phoenix14/programming-phoenix-1-4\nRuby
    on Rails — https://rubyonrails.org/\nDesigning for Scalability with Erlang — http://shop.oreilly.com/product/0636920024149.do\nMike
    Amundsen on O’Reily Media — https://www.oreilly.com/pub/au/1192\nDesigning Elixir
    Systems With OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\nCucumber
    — https://cucumber.io/\nVisual Studio Code — https://code.visualstudio.com/\nSOAP
    vs REST APIs — https://www.soapui.org/learn/api/soap-vs-rest-api/\nRESTFest —
    https://www.restfest.org/\nExVenture — https://exventure.org/\nKubernetes — https://kubernetes.io/\nPhoenix
    — https://phoenixframework.org/\nNerves Project — https://www.nerves-project.org/\nTodd
    Resudek on Twitter — https://twitter.com/sprsmpl\nBinary Noggin — https://binarynoggin.com/\nConnor
    Rigby on GitHub — https://github.com/ConnorRigby\nThe Big Lebowski — https://www.imdb.com/title/tt0118715/\nAesop
    Rock on Twitter — https://twitter.com/AesopRockWins\nAll That Remains on Twitter
    — https://twitter.com/ATRhq\nKorn — https://www.kornofficial.com/\nEric Meadows-Jönsson
    on Twitter — https://twitter.com/emjii\nDonnie Darko — https://www.imdb.com/title/tt0246578/\nRichard
    Kelly — https://www.imdb.com/name/nm0446819/\nFrank Hunleth on Twitter — https://twitter.com/fhunleth\nSmartLogic
    — https://smartlogic.io/  Special Guests: Connor Rigby and Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+pqaMg-ck
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/34c3c1af-3f50-4e83-be65-e7420d65eada.mp3
    length: '100537910'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'As our first trilogy comes to a close, and we embark on the next one,
      we’re doing what all great trilogies do: Upending everything that made the initial
      one great and starting afresh. We''ve incorporated listener feedback, hear more
      about our guests'' personal lives, dive into architecture, and debut a new segment!'
    duration: '1:09:36'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/34c3c1af-3f50-4e83-be65-e7420d65eada/cover.jpg?v=2
    summary: "\n        <p>As our first trilogy comes to a close, and we embark on
      the next one, we’re doing what all great trilogies do: Upending everything that
      made the initial one great and starting afresh. We have taken on board some
      excellent listener feedback to keep this the highest quality Elixir related
      podcast. So, for this launchisode, rather than doing a trailer, we are diving
      in headfirst with a full episode on system and application architecture, this
      season’s theme, with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>\n\n<p>We
      kick off the show by getting to know Dan and Eric a bit better. This season,
      as per listener requests, we will spend more time on our guests&#39; personal
      lives. We learn about Dan and Eric’s time at SmartLogic, their experience working
      with Elixir, and their approaches to learning it. From there, we move onto tackling
      clients’ projects. We discuss the importance of letting ideas flow free as well
      as how to break projects down into manageable sized segments to work on. Following
      this, we touch on flexible architecture. As the world changes, sometimes at
      a pace faster than we anticipate, it is more important than ever to design systems
      that we can iterate on. Then, we discuss the future of applications and architecture
      and the exciting possibilities in-store. </p>\n\n<p>The show rounds off with
      our new segment, Pattern Matching with Todd, where our friend Todd Resudek gets
      to know someone in the community a bit better. Today, he talks with Connor Rigby
      of Binary Noggin, finding out more about his programing journey, his favorite
      music and movies, and his WiFi meshing project. We&#39;re so excited for this
      season, and we hope you join us on the journey. Tune in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Dan’s background and how he came
      to be Director of Development Operations.</li>\n<li>How Eric started at SmartLogic
      and what his journey at the company has been like.</li>\n<li>Learn what convinced
      Dan to go all-in on Elixir and make the move from Rails</li>\n<li>Some of the
      educational materials and tools Dan and Eric used to learn Elixir.</li>\n<li>Dan’s
      preferred style of design and why he enjoys TDD.</li>\n<li>Why we think that
      Cucumber falls short and chose to move away from it.</li>\n<li>Find out what
      we think domain-driven design is.</li>\n<li>How Dan and Eric approach deconstructing
      clients’ projects.</li>\n<li>Pre-coding: Why it’s best to do free-form planning,
      with no constraints.</li>\n<li>Insights into the broad-reaching term of ‘API’
      and what we mean by it.</li>\n<li>SOAP and REST APIs: What they are and the
      differences between them.</li>\n<li>How Dan, Eric, and Justus’s thinking about
      designing and application architecture has evolved.</li>\n<li>Object-oriented
      programming versus functional: Our take on the age-old debate.</li>\n<li>Is
      this finally the year that we get to kill micro-services?</li>\n<li>The relationship
      between team size and micro-services and some other constraints.</li>\n<li>What
      the future has in store for applications and architecting.</li>\n<li>Pattern-matching
      with Todd: Five questions to get to know Connor Rigby a bit better.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
      rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nDan Ivovich on Twitter
      — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nEric
      Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nKalevala
      on GitHub — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nValve
      — <a href=\"https://www.valvesoftware.com/en/\" rel=\"nofollow\">https://www.valvesoftware.com/en/</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nPhoenix
      Elixir books — <a href=\"https://pragprog.com/book/phoenix14/programming-phoenix-1-4\"
      rel=\"nofollow\">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>\nRuby
      on Rails — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nDesigning
      for Scalability with Erlang — <a href=\"http://shop.oreilly.com/product/0636920024149.do\"
      rel=\"nofollow\">http://shop.oreilly.com/product/0636920024149.do</a><br>\nMike
      Amundsen on O’Reily Media — <a href=\"https://www.oreilly.com/pub/au/1192\"
      rel=\"nofollow\">https://www.oreilly.com/pub/au/1192</a><br>\nDesigning Elixir
      Systems With OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>\nCucumber
      — <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nVisual
      Studio Code — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nSOAP
      vs REST APIs — <a href=\"https://www.soapui.org/learn/api/soap-vs-rest-api/\"
      rel=\"nofollow\">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>\nRESTFest
      — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nExVenture
      — <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nPhoenix
      — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
      Rigby on GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nThe
      Big Lebowski — <a href=\"https://www.imdb.com/title/tt0118715/\" rel=\"nofollow\">https://www.imdb.com/title/tt0118715/</a><br>\nAesop
      Rock on Twitter — <a href=\"https://twitter.com/AesopRockWins\" rel=\"nofollow\">https://twitter.com/AesopRockWins</a><br>\nAll
      That Remains on Twitter — <a href=\"https://twitter.com/ATRhq\" rel=\"nofollow\">https://twitter.com/ATRhq</a><br>\nKorn
      — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nEric
      Meadows-Jönsson on Twitter — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nDonnie
      Darko — <a href=\"https://www.imdb.com/title/tt0246578/\" rel=\"nofollow\">https://www.imdb.com/title/tt0246578/</a><br>\nRichard
      Kelly — <a href=\"https://www.imdb.com/name/nm0446819/\" rel=\"nofollow\">https://www.imdb.com/name/nm0446819/</a><br>\nFrank
      Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>As our first trilogy comes to a close, and we embark
    on the next one, we’re doing what all great trilogies do: Upending everything
    that made the initial one great and starting afresh. We have taken on board some
    excellent listener feedback to keep this the highest quality Elixir related podcast.
    So, for this launchisode, rather than doing a trailer, we are diving in headfirst
    with a full episode on system and application architecture, this season’s theme,
    with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>\n\n<p>We kick off the
    show by getting to know Dan and Eric a bit better. This season, as per listener
    requests, we will spend more time on our guests&#39; personal lives. We learn
    about Dan and Eric’s time at SmartLogic, their experience working with Elixir,
    and their approaches to learning it. From there, we move onto tackling clients’
    projects. We discuss the importance of letting ideas flow free as well as how
    to break projects down into manageable sized segments to work on. Following this,
    we touch on flexible architecture. As the world changes, sometimes at a pace faster
    than we anticipate, it is more important than ever to design systems that we can
    iterate on. Then, we discuss the future of applications and architecture and the
    exciting possibilities in-store. </p>\n\n<p>The show rounds off with our new segment,
    Pattern Matching with Todd, where our friend Todd Resudek gets to know someone
    in the community a bit better. Today, he talks with Connor Rigby of Binary Noggin,
    finding out more about his programing journey, his favorite music and movies,
    and his WiFi meshing project. We&#39;re so excited for this season, and we hope
    you join us on the journey. Tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Dan’s
    background and how he came to be Director of Development Operations.</li>\n<li>How
    Eric started at SmartLogic and what his journey at the company has been like.</li>\n<li>Learn
    what convinced Dan to go all-in on Elixir and make the move from Rails</li>\n<li>Some
    of the educational materials and tools Dan and Eric used to learn Elixir.</li>\n<li>Dan’s
    preferred style of design and why he enjoys TDD.</li>\n<li>Why we think that Cucumber
    falls short and chose to move away from it.</li>\n<li>Find out what we think domain-driven
    design is.</li>\n<li>How Dan and Eric approach deconstructing clients’ projects.</li>\n<li>Pre-coding:
    Why it’s best to do free-form planning, with no constraints.</li>\n<li>Insights
    into the broad-reaching term of ‘API’ and what we mean by it.</li>\n<li>SOAP and
    REST APIs: What they are and the differences between them.</li>\n<li>How Dan,
    Eric, and Justus’s thinking about designing and application architecture has evolved.</li>\n<li>Object-oriented
    programming versus functional: Our take on the age-old debate.</li>\n<li>Is this
    finally the year that we get to kill micro-services?</li>\n<li>The relationship
    between team size and micro-services and some other constraints.</li>\n<li>What
    the future has in store for applications and architecting.</li>\n<li>Pattern-matching
    with Todd: Five questions to get to know Connor Rigby a bit better.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Justus Eapen on Twitter — <a href=\"https://twitter.com/justuseapen\"
    rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nDan Ivovich on Twitter
    — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nEric
    Oestrich on Twitter — <a href=\"https://twitter.com/ericoestrich\" rel=\"nofollow\">https://twitter.com/ericoestrich</a><br>\nKalevala
    on GitHub — <a href=\"https://github.com/oestrich/kalevala\" rel=\"nofollow\">https://github.com/oestrich/kalevala</a><br>\nValve
    — <a href=\"https://www.valvesoftware.com/en/\" rel=\"nofollow\">https://www.valvesoftware.com/en/</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nPhoenix
    Elixir books — <a href=\"https://pragprog.com/book/phoenix14/programming-phoenix-1-4\"
    rel=\"nofollow\">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>\nRuby
    on Rails — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nDesigning
    for Scalability with Erlang — <a href=\"http://shop.oreilly.com/product/0636920024149.do\"
    rel=\"nofollow\">http://shop.oreilly.com/product/0636920024149.do</a><br>\nMike
    Amundsen on O’Reily Media — <a href=\"https://www.oreilly.com/pub/au/1192\" rel=\"nofollow\">https://www.oreilly.com/pub/au/1192</a><br>\nDesigning
    Elixir Systems With OTP — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>\nCucumber
    — <a href=\"https://cucumber.io/\" rel=\"nofollow\">https://cucumber.io/</a><br>\nVisual
    Studio Code — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nSOAP
    vs REST APIs — <a href=\"https://www.soapui.org/learn/api/soap-vs-rest-api/\"
    rel=\"nofollow\">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>\nRESTFest
    — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nExVenture
    — <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nPhoenix
    — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
    Rigby on GitHub — <a href=\"https://github.com/ConnorRigby\" rel=\"nofollow\">https://github.com/ConnorRigby</a><br>\nThe
    Big Lebowski — <a href=\"https://www.imdb.com/title/tt0118715/\" rel=\"nofollow\">https://www.imdb.com/title/tt0118715/</a><br>\nAesop
    Rock on Twitter — <a href=\"https://twitter.com/AesopRockWins\" rel=\"nofollow\">https://twitter.com/AesopRockWins</a><br>\nAll
    That Remains on Twitter — <a href=\"https://twitter.com/ATRhq\" rel=\"nofollow\">https://twitter.com/ATRhq</a><br>\nKorn
    — <a href=\"https://www.kornofficial.com/\" rel=\"nofollow\">https://www.kornofficial.com/</a><br>\nEric
    Meadows-Jönsson on Twitter — <a href=\"https://twitter.com/emjii\" rel=\"nofollow\">https://twitter.com/emjii</a><br>\nDonnie
    Darko — <a href=\"https://www.imdb.com/title/tt0246578/\" rel=\"nofollow\">https://www.imdb.com/title/tt0246578/</a><br>\nRichard
    Kelly — <a href=\"https://www.imdb.com/name/nm0446819/\" rel=\"nofollow\">https://www.imdb.com/name/nm0446819/</a><br>\nFrank
    Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>\n      "
- title: Betweenisode Part 2!  Featuring Amos King, Chris Keathley, Anna Neyzberg,
    Paul Schoenfelder, Sophie DeBenedetto, Meryl Dakin, and Dave Thomas
  slug: s4e0b-betweenisode-part-2
  link: https://smartlogic.io/podcast/elixir-wizards/s4e0b-betweenisode-part-2
  guid: dbe34c01-2361-41a8-ab85-dab81699cc7e
  pubDate: Thu, 23 Apr 2020 06:00:00 -0400
  pubDateFriendly: April 23, 2020
  description: |
    Welcome back to part two of our betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life after social distancing! The show is a back-to-back of four different conversations, the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas. Our four conversations cover the same broad themes, and we mostly share our thoughts about what is happening in the world right now, how we are coping with working remotely, and what particular projects have been keeping us busy. Our guests share varying perspectives about what it means that we are restructuring the way we do things. We talk about how even if you worked remotely before, things feel different now, and we also consider the extra burdens of being a remote software developer. Other topics include the line between complaints and constructive criticism, wild animals roaming the streets, and the general atmosphere in our different locations. From a tech point of view, we touch on IoT development, various GitHub projects to get involved with, why students aren’t learning how to program properly anymore, and a lot more. Get it all here and make sure you stay tuned for episode one of season four!
    Key Points From This Episode:
    Scaling up the NFL Draft website for remote screening.
    Home life and side projects in the quarantine: Mogde Podge, a baby, and game development.
    Shameless plugs from everybody: Binary Noggin, ElixirBridge, and Finch.
    Isolation, low supplies and trying to stay positive at present.
    Imagining roaming wild animals now that humans are in quarantine.
    Advice from Paul who works at home for surviving social distancing.
    What Paul is doing for Ockam to secure IoT devices.
    The danger of starting hack vulnerable tech companies.
    A plug from Paul to get involved with Lumen.
    Nature taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right now.
    Working from home versus working from home due to a global crisis.
    Domestic squabbles over bandwidth between Meryl and her software developer brother.
    Lessons learned to stay sane during quarantine: getting dressed.
    Extra tasks remote developers are having to do remotely; becoming project managers.
    The difference between complaints and legitimate critiques of work systems.
    Dave’s amazing remote communications setup 40 miles north of Dallas.
    The situation where Dave is with regard to coronavirus and freedom.
    How COBOL has not become too broad despite not using libraries.
    The history of programming languages that Dave teaches.
    That PDP-11 runs better emulated in Javascript than in its original hardware.
    A drawback of modern development: not understanding hardware.
    How Dave is digitizing his SMU courses due to teaching them online at present.
    All the effort Dave puts into grading his students’ exercises.
    Issues that coding is not taught rigorously enough; students can’t ‘program’.
    How well the human race is doing to mobilize en masse right now.
    Whether tech caused the crisis and humanity could manage this crisis 100 years ago.
    Links Mentioned in Today’s Episode:
    Eric Oestrich — https://oestrich.org/
    Justus Eapen — https://www.linkedin.com/in/justuseapen/
    Amos King — https://www.linkedin.com/in/amosking/
    Chris Keathley — https://keathley.io/
    Anna Neyzberg — https://www.linkedin.com/in/anna-neyzberg-93545316/
    Elixir Outlaws — https://elixiroutlaws.com/
    NFL Draft — https://www.nfl.com/draft/home
    Modge Podge — https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O
    Star Trek — https://intl.startrek.com/
    Sublime — https://www.sublimetext.com/
    VSCode — https://code.visualstudio.com/
    Binary Noggin — https://binarynoggin.com/
    Connor Rigby — https://binarynoggin.com/author/connor/
    ElixirBridge — http://elixirbridge.org/
    Nico Piderman — https://github.com/sneako
    Quinn Wilton — https://github.com/QuinnWilton
    Jose Valim — https://github.com/josevalim
    Finch Library— https://github.com/keathley/finch
    Paul Schoenfelder — https://www.linkedin.com/in/gotbones/
    Ockam — https://www.ockam.io/
    Lumen — https://github.com/lumen/lumen
    Timex — https://github.com/bitwalker/timex
    Sophie DeBenedetto — https://www.linkedin.com/in/sophiedebenedetto/
    Meryl Dakin — https://github.com/meryldakin
    Flatiron — https://flatironschool.com/
    Sophie DeBenedetto’s GitHub Post — https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/
    Elixir School — https://elixirschool.com/en/
    Meryl Dakin’s Watch if Your Dare Episode — https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true
    Luigi’s Mansion — https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html
    Dave Thomas — https://pragdave.me/
    COBOL — https://www.tutorialspoint.com/cobol/index.htm
    PD-11 — https://history-computer.com/ModernComputer/Electronic/PDP-11.html
    SMU — https://www.smu.edu/lyle
    Elixir Wizards Podcast — https://podcast.smartlogic.io
    SmartLogic — https://smartlogic.io/  Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas, Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Q1zm3CKU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe34c01-2361-41a8-ab85-dab81699cc7e.mp3
    length: '77474023'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: Welcome back to part two of our Betweenisode! Everybody is working remotely
      now including ourselves, so today we continue the catch ups we were having with
      a number of longstanding buddies and chat about life during social distancing.
    duration: '53:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/dbe34c01-2361-41a8-ab85-dab81699cc7e/cover.jpg?v=1
    summary: "\n        <p>Welcome back to part two of our betweenisode! Everybody
      is working remotely now including ourselves, so today we continue the catch
      ups we were having with a number of longstanding buddies and chat about life
      after social distancing! The show is a back-to-back of four different conversations,
      the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir
      Outlaws. After that we talk to Paul Schoenfelder, before getting on the line
      with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with
      Dave Thomas. Our four conversations cover the same broad themes, and we mostly
      share our thoughts about what is happening in the world right now, how we are
      coping with working remotely, and what particular projects have been keeping
      us busy. Our guests share varying perspectives about what it means that we are
      restructuring the way we do things. We talk about how even if you worked remotely
      before, things feel different now, and we also consider the extra burdens of
      being a remote software developer. Other topics include the line between complaints
      and constructive criticism, wild animals roaming the streets, and the general
      atmosphere in our different locations. From a tech point of view, we touch on
      IoT development, various GitHub projects to get involved with, why students
      aren’t learning how to program properly anymore, and a lot more. Get it all
      here and make sure you stay tuned for episode one of season four!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Scaling up the NFL Draft website
      for remote screening.</li>\n<li>Home life and side projects in the quarantine:
      Mogde Podge, a baby, and game development.</li>\n<li>Shameless plugs from everybody:
      Binary Noggin, ElixirBridge, and Finch.</li>\n<li>Isolation, low supplies and
      trying to stay positive at present.</li>\n<li>Imagining roaming wild animals
      now that humans are in quarantine.</li>\n<li>Advice from Paul who works at home
      for surviving social distancing.</li>\n<li>What Paul is doing for Ockam to secure
      IoT devices.</li>\n<li>The danger of starting hack vulnerable tech companies.</li>\n<li>A
      plug from Paul to get involved with Lumen.</li>\n<li>Nature taking over; Meryl
      and Sophie’s experiences in Brooklyn and Westchester right now.</li>\n<li>Working
      from home versus working from home due to a global crisis.</li>\n<li>Domestic
      squabbles over bandwidth between Meryl and her software developer brother.</li>\n<li>Lessons
      learned to stay sane during quarantine: getting dressed.</li>\n<li>Extra tasks
      remote developers are having to do remotely; becoming project managers.</li>\n<li>The
      difference between complaints and legitimate critiques of work systems.</li>\n<li>Dave’s
      amazing remote communications setup 40 miles north of Dallas.</li>\n<li>The
      situation where Dave is with regard to coronavirus and freedom.</li>\n<li>How
      COBOL has not become too broad despite not using libraries.</li>\n<li>The history
      of programming languages that Dave teaches.</li>\n<li>That PDP-11 runs better
      emulated in Javascript than in its original hardware.</li>\n<li>A drawback of
      modern development: not understanding hardware.</li>\n<li>How Dave is digitizing
      his SMU courses due to teaching them online at present.</li>\n<li>All the effort
      Dave puts into grading his students’ exercises.</li>\n<li>Issues that coding
      is not taught rigorously enough; students can’t ‘program’.</li>\n<li>How well
      the human race is doing to mobilize en masse right now.</li>\n<li>Whether tech
      caused the crisis and humanity could manage this crisis 100 years ago.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Eric Oestrich — <a href=\"https://oestrich.org/\"
      rel=\"nofollow\">https://oestrich.org/</a><br>\nJustus Eapen — <a href=\"https://www.linkedin.com/in/justuseapen/\"
      rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nAmos King
      — <a href=\"https://www.linkedin.com/in/amosking/\" rel=\"nofollow\">https://www.linkedin.com/in/amosking/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nAnna
      Neyzberg — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nElixir
      Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNFL
      Draft — <a href=\"https://www.nfl.com/draft/home\" rel=\"nofollow\">https://www.nfl.com/draft/home</a><br>\nModge
      Podge — <a href=\"https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O\"
      rel=\"nofollow\">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>\nStar
      Trek — <a href=\"https://intl.startrek.com/\" rel=\"nofollow\">https://intl.startrek.com/</a><br>\nSublime
      — <a href=\"https://www.sublimetext.com/\" rel=\"nofollow\">https://www.sublimetext.com/</a><br>\nVSCode
      — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nBinary
      Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
      Rigby — <a href=\"https://binarynoggin.com/author/connor/\" rel=\"nofollow\">https://binarynoggin.com/author/connor/</a><br>\nElixirBridge
      — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nNico
      Piderman — <a href=\"https://github.com/sneako\" rel=\"nofollow\">https://github.com/sneako</a><br>\nQuinn
      Wilton — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nJose
      Valim — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nFinch
      Library— <a href=\"https://github.com/keathley/finch\" rel=\"nofollow\">https://github.com/keathley/finch</a><br>\nPaul
      Schoenfelder — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nOckam
      — <a href=\"https://www.ockam.io/\" rel=\"nofollow\">https://www.ockam.io/</a><br>\nLumen
      — <a href=\"https://github.com/lumen/lumen\" rel=\"nofollow\">https://github.com/lumen/lumen</a><br>\nTimex
      — <a href=\"https://github.com/bitwalker/timex\" rel=\"nofollow\">https://github.com/bitwalker/timex</a><br>\nSophie
      DeBenedetto — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\" rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nMeryl
      Dakin — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nSophie
      DeBenedetto’s GitHub Post — <a href=\"https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/\"
      rel=\"nofollow\">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nMeryl
      Dakin’s Watch if Your Dare Episode — <a href=\"https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true\"
      rel=\"nofollow\">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>\nLuigi’s
      Mansion — <a href=\"https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html\"
      rel=\"nofollow\">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>\nDave
      Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nCOBOL
      — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nPD-11
      — <a href=\"https://history-computer.com/ModernComputer/Electronic/PDP-11.html\"
      rel=\"nofollow\">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>\nSMU
      — <a href=\"https://www.smu.edu/lyle\" rel=\"nofollow\">https://www.smu.edu/lyle</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas,
      Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to part two of our betweenisode! Everybody
    is working remotely now including ourselves, so today we continue the catch ups
    we were having with a number of longstanding buddies and chat about life after
    social distancing! The show is a back-to-back of four different conversations,
    the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir
    Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with
    Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas.
    Our four conversations cover the same broad themes, and we mostly share our thoughts
    about what is happening in the world right now, how we are coping with working
    remotely, and what particular projects have been keeping us busy. Our guests share
    varying perspectives about what it means that we are restructuring the way we
    do things. We talk about how even if you worked remotely before, things feel different
    now, and we also consider the extra burdens of being a remote software developer.
    Other topics include the line between complaints and constructive criticism, wild
    animals roaming the streets, and the general atmosphere in our different locations.
    From a tech point of view, we touch on IoT development, various GitHub projects
    to get involved with, why students aren’t learning how to program properly anymore,
    and a lot more. Get it all here and make sure you stay tuned for episode one of
    season four!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Scaling
    up the NFL Draft website for remote screening.</li>\n<li>Home life and side projects
    in the quarantine: Mogde Podge, a baby, and game development.</li>\n<li>Shameless
    plugs from everybody: Binary Noggin, ElixirBridge, and Finch.</li>\n<li>Isolation,
    low supplies and trying to stay positive at present.</li>\n<li>Imagining roaming
    wild animals now that humans are in quarantine.</li>\n<li>Advice from Paul who
    works at home for surviving social distancing.</li>\n<li>What Paul is doing for
    Ockam to secure IoT devices.</li>\n<li>The danger of starting hack vulnerable
    tech companies.</li>\n<li>A plug from Paul to get involved with Lumen.</li>\n<li>Nature
    taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right
    now.</li>\n<li>Working from home versus working from home due to a global crisis.</li>\n<li>Domestic
    squabbles over bandwidth between Meryl and her software developer brother.</li>\n<li>Lessons
    learned to stay sane during quarantine: getting dressed.</li>\n<li>Extra tasks
    remote developers are having to do remotely; becoming project managers.</li>\n<li>The
    difference between complaints and legitimate critiques of work systems.</li>\n<li>Dave’s
    amazing remote communications setup 40 miles north of Dallas.</li>\n<li>The situation
    where Dave is with regard to coronavirus and freedom.</li>\n<li>How COBOL has
    not become too broad despite not using libraries.</li>\n<li>The history of programming
    languages that Dave teaches.</li>\n<li>That PDP-11 runs better emulated in Javascript
    than in its original hardware.</li>\n<li>A drawback of modern development: not
    understanding hardware.</li>\n<li>How Dave is digitizing his SMU courses due to
    teaching them online at present.</li>\n<li>All the effort Dave puts into grading
    his students’ exercises.</li>\n<li>Issues that coding is not taught rigorously
    enough; students can’t ‘program’.</li>\n<li>How well the human race is doing to
    mobilize en masse right now.</li>\n<li>Whether tech caused the crisis and humanity
    could manage this crisis 100 years ago.</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>Eric Oestrich — <a href=\"https://oestrich.org/\" rel=\"nofollow\">https://oestrich.org/</a><br>\nJustus
    Eapen — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nAmos
    King — <a href=\"https://www.linkedin.com/in/amosking/\" rel=\"nofollow\">https://www.linkedin.com/in/amosking/</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nAnna
    Neyzberg — <a href=\"https://www.linkedin.com/in/anna-neyzberg-93545316/\" rel=\"nofollow\">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>\nElixir
    Outlaws — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNFL
    Draft — <a href=\"https://www.nfl.com/draft/home\" rel=\"nofollow\">https://www.nfl.com/draft/home</a><br>\nModge
    Podge — <a href=\"https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O\"
    rel=\"nofollow\">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>\nStar
    Trek — <a href=\"https://intl.startrek.com/\" rel=\"nofollow\">https://intl.startrek.com/</a><br>\nSublime
    — <a href=\"https://www.sublimetext.com/\" rel=\"nofollow\">https://www.sublimetext.com/</a><br>\nVSCode
    — <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">https://code.visualstudio.com/</a><br>\nBinary
    Noggin — <a href=\"https://binarynoggin.com/\" rel=\"nofollow\">https://binarynoggin.com/</a><br>\nConnor
    Rigby — <a href=\"https://binarynoggin.com/author/connor/\" rel=\"nofollow\">https://binarynoggin.com/author/connor/</a><br>\nElixirBridge
    — <a href=\"http://elixirbridge.org/\" rel=\"nofollow\">http://elixirbridge.org/</a><br>\nNico
    Piderman — <a href=\"https://github.com/sneako\" rel=\"nofollow\">https://github.com/sneako</a><br>\nQuinn
    Wilton — <a href=\"https://github.com/QuinnWilton\" rel=\"nofollow\">https://github.com/QuinnWilton</a><br>\nJose
    Valim — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nFinch
    Library— <a href=\"https://github.com/keathley/finch\" rel=\"nofollow\">https://github.com/keathley/finch</a><br>\nPaul
    Schoenfelder — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nOckam
    — <a href=\"https://www.ockam.io/\" rel=\"nofollow\">https://www.ockam.io/</a><br>\nLumen
    — <a href=\"https://github.com/lumen/lumen\" rel=\"nofollow\">https://github.com/lumen/lumen</a><br>\nTimex
    — <a href=\"https://github.com/bitwalker/timex\" rel=\"nofollow\">https://github.com/bitwalker/timex</a><br>\nSophie
    DeBenedetto — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\" rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nMeryl
    Dakin — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nSophie
    DeBenedetto’s GitHub Post — <a href=\"https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/\"
    rel=\"nofollow\">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nMeryl
    Dakin’s Watch if Your Dare Episode — <a href=\"https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true\"
    rel=\"nofollow\">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>\nLuigi’s
    Mansion — <a href=\"https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html\"
    rel=\"nofollow\">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>\nDave
    Thomas — <a href=\"https://pragdave.me/\" rel=\"nofollow\">https://pragdave.me/</a><br>\nCOBOL
    — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nPD-11
    — <a href=\"https://history-computer.com/ModernComputer/Electronic/PDP-11.html\"
    rel=\"nofollow\">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>\nSMU
    — <a href=\"https://www.smu.edu/lyle\" rel=\"nofollow\">https://www.smu.edu/lyle</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas,
    Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>\n      "
- title: 'Betweenisode Part 1: Saša Jurić, Bruce and Maggie Tate, James Edward Gray
    II, Jim and Chris Freeze, and Frank Hunleth'
  slug: s4e0a-betweenisode-part-1
  link: https://smartlogic.io/podcast/elixir-wizards/s4e0a-betweenisode-part-1
  guid: 1b54b0cf-efaa-46fa-90b5-e40411069750
  pubDate: Tue, 21 Apr 2020 06:00:00 -0400
  pubDateFriendly: April 21, 2020
  description: "The world has changed so much since the end of season 3, that we thought
    we’d put together a special Betweenisode to tide you over until Season 4 launches.
    In this episode, we talk to several friends and respected members of the Elixir
    community, about how they’re coping and tips they have for retaining some normalcy
    in your life if you’re suddenly having to work from home. Our first guest, Saša
    Jurić, of Very Big Things, and author of the unrivaled Elixir in Action, has had
    the privilege of working from home for several years. He shares the importance
    of having a routine, connecting with people, and why you should get out of your
    pajamas and into some real clothes when you work. He also shares what it’s been
    like in his home city of Zagreb, and how previous devastating events have in some
    way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio,
    an educational platform to learn languages, also join us. Maggie shares more on
    her culinary adventures, and the importance of having a definite start and finish
    time to your day. Bruce talks about some of the professional projects he’s working
    on, and why he believes it’s crucial to tackle difficult technical skills outside
    of developing. Other guests include James Edward Gray II, who shares more about
    the incredible way he and his daughter have been bonding, Jim Freeze, founder
    of ElixirConf, and his son Chris, who share some of the benefits of working from
    home, and show us how to see the silver lining during this difficult time, and
    Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have
    certainly been more changes in the world than we could have anticipated, so it
    was wonderful to catch up and see how people in our community have been coping.
    Be sure to tune in today!\nKey Points From This Episode:\nLearn what’s happening
    in Saša’s home city, Zagreb, and what he’s doing to keep busy.\nSaša’s advice
    for coping during the pandemic and preventing information overload.\nThe transition
    to remote work in Saša’s company and the impacts it’s had on workload.\nHow Saša
    started working remotely and the main lessons he has learned from doing it.\nWhat
    Saša believes the future of virtual events and conferences will be.\nFind out
    how Bruce and Maggie are dealing with these strange times. \nGroxio’s mission
    in terms of learning and Bruce and Maggie’s tip for working from home.\nCurrent
    projects that Bruce and Maggie are working on both at Groxio and personally.\nWhat’s
    in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.\nHow
    James is holding up and his take on the COBOL debacle. \nFind out what motivated
    James to transition from Ruby to Elixir and what it’s been like. \nJames’s experience
    working from home and tips for people who are new to it.\nSpecific versus general
    solutions: The difference and how James thinks we can tackle this.\nHear James’s
    ExVenture plug, which is Eric’s project.\nJim’s and Chris’s experience of the
    lockdown and the silver linings that have come from it\nFind out Jim and Chris’s
    necessities for working from home and being productive. \nJim’s plans for ElixirConf
    for this year and 2021, and Chris and Jim’s final plug. \nFrank’s tips for working
    from home and his product plugs. \nLinks Mentioned in Today’s Episode:\nSaša Jurić
    on Twitter — https://twitter.com/sasajuric\nSaša Jurić on LinkedIn — https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\nErlangelist
    — https://www.theerlangelist.com/\nVery Big Things — https://verybigthings.com/\nElixir
    in Action — https://www.manning.com/books/elixir-in-action-second-edition\nBruce
    Tate — https://www.linkedin.com/in/bruce-tate-a836b\nBruce Tate on Twitter — https://twitter.com/redrapids\nMaggie
    Tate on LinkedIn — https://www.linkedin.com/in/maggie-tate-230234171\nGroxio —
    https://grox.io/\nProgrammer Passport — https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\nLonestar
    Elixir — https://lonestarelixir.com/\nJames Edward Gray II — https://twitter.com/JEG2\nCOBOL
    — https://www.tutorialspoint.com/cobol/index.htm\nGray Inc — http://graysoftinc.com/\nProgramming
    Erlang — https://pragprog.com/book/jaerlang2/programming-erlang\nNathan Long —
    https://twitter.com/sleeplessgeek\nPOV-Ray — http://www.povray.org/\nElixir Wizards
    S02 Eric on ExVenture — https://podcast.smartlogic.io/season-two-oestrich\nJesse
    Link — http://www.jesselink.com/\nJim Freeze on Twitter— https://twitter.com/jimfreeze\nElixirConf
    — https://elixirconf.com/2020\nChris Freeze on Twitter— https://twitter.com/chrisfreeze_\nTesla
    Car Lot — https://teslacarlot.com/\nDavid Antaramian — https://www.linkedin.com/in/davidantaramian/\nPepsiCo
    — https://www.pepsico.com/\nNerves Project — https://www.nerves-project.org/\nFrank
    Hunleth on Twitter — https://twitter.com/fhunleth\nSmartLogic — https://smartlogic.io/
    \ Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth, James
    Gray, Maggie Tate, and Saša Jurić.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+pwHjjtQA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b54b0cf-efaa-46fa-90b5-e40411069750.mp3
    length: '77231497'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '4'
    author: SmartLogic LLC
    subtitle: 'The world has changed so much since the end of season 3, that we thought
      we’d put together a special Betweenisode to tide you over until Season 4 launches.
      In this episode, we talk to several friends and respected members of the Elixir
      community, about how they’re coping and tips they have for retaining some normalcy
      in your life if you’re suddenly having to work from home. '
    duration: '53:16'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b54b0cf-efaa-46fa-90b5-e40411069750/cover.jpg?v=1
    summary: "\n        <p>The world has changed so much since the end of season 3,
      that we thought we’d put together a special Betweenisode to tide you over until
      Season 4 launches. In this episode, we talk to several friends and respected
      members of the Elixir community, about how they’re coping and tips they have
      for retaining some normalcy in your life if you’re suddenly having to work from
      home. Our first guest, Saša Jurić, of Very Big Things, and author of the unrivaled
      Elixir in Action, has had the privilege of working from home for several years.
      He shares the importance of having a routine, connecting with people, and why
      you should get out of your pajamas and into some real clothes when you work.
      He also shares what it’s been like in his home city of Zagreb, and how previous
      devastating events have in some way prepared him for what’s currently happening.
      Bruce and Maggie Tate of Groxio, an educational platform to learn languages,
      also join us. Maggie shares more on her culinary adventures, and the importance
      of having a definite start and finish time to your day. Bruce talks about some
      of the professional projects he’s working on, and why he believes it’s crucial
      to tackle difficult technical skills outside of developing. Other guests include
      James Edward Gray II, who shares more about the incredible way he and his daughter
      have been bonding, Jim Freeze, founder of ElixirConf, and his son Chris, who
      share some of the benefits of working from home, and show us how to see the
      silver lining during this difficult time, and Frank Hunleth, of Nerves Project,
      who talks about what he’s up to. There have certainly been more changes in the
      world than we could have anticipated, so it was wonderful to catch up and see
      how people in our community have been coping. Be sure to tune in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Learn what’s happening in Saša’s
      home city, Zagreb, and what he’s doing to keep busy.</li>\n<li>Saša’s advice
      for coping during the pandemic and preventing information overload.</li>\n<li>The
      transition to remote work in Saša’s company and the impacts it’s had on workload.</li>\n<li>How
      Saša started working remotely and the main lessons he has learned from doing
      it.</li>\n<li>What Saša believes the future of virtual events and conferences
      will be.</li>\n<li>Find out how Bruce and Maggie are dealing with these strange
      times. </li>\n<li>Groxio’s mission in terms of learning and Bruce and Maggie’s
      tip for working from home.</li>\n<li>Current projects that Bruce and Maggie
      are working on both at Groxio and personally.</li>\n<li>What’s in the pipeline
      with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>\n<li>How James
      is holding up and his take on the COBOL debacle. </li>\n<li>Find out what motivated
      James to transition from Ruby to Elixir and what it’s been like. </li>\n<li>James’s
      experience working from home and tips for people who are new to it.</li>\n<li>Specific
      versus general solutions: The difference and how James thinks we can tackle
      this.</li>\n<li>Hear James’s ExVenture plug, which is Eric’s project.</li>\n<li>Jim’s
      and Chris’s experience of the lockdown and the silver linings that have come
      from it</li>\n<li>Find out Jim and Chris’s necessities for working from home
      and being productive. </li>\n<li>Jim’s plans for ElixirConf for this year and
      2021, and Chris and Jim’s final plug. </li>\n<li>Frank’s tips for working from
      home and his product plugs. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Saša
      Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nSaša
      Jurić on LinkedIn — <a href=\"https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\"
      rel=\"nofollow\">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>\nErlangelist
      — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nVery
      Big Things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nElixir
      in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nBruce
      Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b</a><br>\nBruce
      Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
      Tate on LinkedIn — <a href=\"https://www.linkedin.com/in/maggie-tate-230234171\"
      rel=\"nofollow\">https://www.linkedin.com/in/maggie-tate-230234171</a><br>\nGroxio
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nProgrammer
      Passport — <a href=\"https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\"
      rel=\"nofollow\">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJames
      Edward Gray II — <a href=\"https://twitter.com/JEG2\" rel=\"nofollow\">https://twitter.com/JEG2</a><br>\nCOBOL
      — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nGray
      Inc — <a href=\"http://graysoftinc.com/\" rel=\"nofollow\">http://graysoftinc.com/</a><br>\nProgramming
      Erlang — <a href=\"https://pragprog.com/book/jaerlang2/programming-erlang\"
      rel=\"nofollow\">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>\nNathan
      Long — <a href=\"https://twitter.com/sleeplessgeek\" rel=\"nofollow\">https://twitter.com/sleeplessgeek</a><br>\nPOV-Ray
      — <a href=\"http://www.povray.org/\" rel=\"nofollow\">http://www.povray.org/</a><br>\nElixir
      Wizards S02 Eric on ExVenture — <a href=\"https://podcast.smartlogic.io/season-two-oestrich\"
      rel=\"nofollow\">https://podcast.smartlogic.io/season-two-oestrich</a><br>\nJesse
      Link — <a href=\"http://www.jesselink.com/\" rel=\"nofollow\">http://www.jesselink.com/</a><br>\nJim
      Freeze on Twitter— <a href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">https://twitter.com/jimfreeze</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nChris
      Freeze on Twitter— <a href=\"https://twitter.com/chrisfreeze_\" rel=\"nofollow\">https://twitter.com/chrisfreeze_</a><br>\nTesla
      Car Lot — <a href=\"https://teslacarlot.com/\" rel=\"nofollow\">https://teslacarlot.com/</a><br>\nDavid
      Antaramian — <a href=\"https://www.linkedin.com/in/davidantaramian/\" rel=\"nofollow\">https://www.linkedin.com/in/davidantaramian/</a><br>\nPepsiCo
      — <a href=\"https://www.pepsico.com/\" rel=\"nofollow\">https://www.pepsico.com/</a><br>\nNerves
      Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFrank
      Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth,
      James Gray, Maggie Tate, and Saša Jurić.</p>\n      "
  contentEncoded: "\n        <p>The world has changed so much since the end of season
    3, that we thought we’d put together a special Betweenisode to tide you over until
    Season 4 launches. In this episode, we talk to several friends and respected members
    of the Elixir community, about how they’re coping and tips they have for retaining
    some normalcy in your life if you’re suddenly having to work from home. Our first
    guest, Saša Jurić, of Very Big Things, and author of the unrivaled Elixir in Action,
    has had the privilege of working from home for several years. He shares the importance
    of having a routine, connecting with people, and why you should get out of your
    pajamas and into some real clothes when you work. He also shares what it’s been
    like in his home city of Zagreb, and how previous devastating events have in some
    way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio,
    an educational platform to learn languages, also join us. Maggie shares more on
    her culinary adventures, and the importance of having a definite start and finish
    time to your day. Bruce talks about some of the professional projects he’s working
    on, and why he believes it’s crucial to tackle difficult technical skills outside
    of developing. Other guests include James Edward Gray II, who shares more about
    the incredible way he and his daughter have been bonding, Jim Freeze, founder
    of ElixirConf, and his son Chris, who share some of the benefits of working from
    home, and show us how to see the silver lining during this difficult time, and
    Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have
    certainly been more changes in the world than we could have anticipated, so it
    was wonderful to catch up and see how people in our community have been coping.
    Be sure to tune in today!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Learn
    what’s happening in Saša’s home city, Zagreb, and what he’s doing to keep busy.</li>\n<li>Saša’s
    advice for coping during the pandemic and preventing information overload.</li>\n<li>The
    transition to remote work in Saša’s company and the impacts it’s had on workload.</li>\n<li>How
    Saša started working remotely and the main lessons he has learned from doing it.</li>\n<li>What
    Saša believes the future of virtual events and conferences will be.</li>\n<li>Find
    out how Bruce and Maggie are dealing with these strange times. </li>\n<li>Groxio’s
    mission in terms of learning and Bruce and Maggie’s tip for working from home.</li>\n<li>Current
    projects that Bruce and Maggie are working on both at Groxio and personally.</li>\n<li>What’s
    in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>\n<li>How
    James is holding up and his take on the COBOL debacle. </li>\n<li>Find out what
    motivated James to transition from Ruby to Elixir and what it’s been like. </li>\n<li>James’s
    experience working from home and tips for people who are new to it.</li>\n<li>Specific
    versus general solutions: The difference and how James thinks we can tackle this.</li>\n<li>Hear
    James’s ExVenture plug, which is Eric’s project.</li>\n<li>Jim’s and Chris’s experience
    of the lockdown and the silver linings that have come from it</li>\n<li>Find out
    Jim and Chris’s necessities for working from home and being productive. </li>\n<li>Jim’s
    plans for ElixirConf for this year and 2021, and Chris and Jim’s final plug. </li>\n<li>Frank’s
    tips for working from home and his product plugs. </li>\n</ul>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Saša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\"
    rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nSaša Jurić on LinkedIn
    — <a href=\"https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186\" rel=\"nofollow\">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>\nErlangelist
    — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nVery
    Big Things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nElixir
    in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition</a><br>\nBruce
    Tate — <a href=\"https://www.linkedin.com/in/bruce-tate-a836b\" rel=\"nofollow\">https://www.linkedin.com/in/bruce-tate-a836b</a><br>\nBruce
    Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
    Tate on LinkedIn — <a href=\"https://www.linkedin.com/in/maggie-tate-230234171\"
    rel=\"nofollow\">https://www.linkedin.com/in/maggie-tate-230234171</a><br>\nGroxio
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nProgrammer
    Passport — <a href=\"https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253\"
    rel=\"nofollow\">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nJames
    Edward Gray II — <a href=\"https://twitter.com/JEG2\" rel=\"nofollow\">https://twitter.com/JEG2</a><br>\nCOBOL
    — <a href=\"https://www.tutorialspoint.com/cobol/index.htm\" rel=\"nofollow\">https://www.tutorialspoint.com/cobol/index.htm</a><br>\nGray
    Inc — <a href=\"http://graysoftinc.com/\" rel=\"nofollow\">http://graysoftinc.com/</a><br>\nProgramming
    Erlang — <a href=\"https://pragprog.com/book/jaerlang2/programming-erlang\" rel=\"nofollow\">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>\nNathan
    Long — <a href=\"https://twitter.com/sleeplessgeek\" rel=\"nofollow\">https://twitter.com/sleeplessgeek</a><br>\nPOV-Ray
    — <a href=\"http://www.povray.org/\" rel=\"nofollow\">http://www.povray.org/</a><br>\nElixir
    Wizards S02 Eric on ExVenture — <a href=\"https://podcast.smartlogic.io/season-two-oestrich\"
    rel=\"nofollow\">https://podcast.smartlogic.io/season-two-oestrich</a><br>\nJesse
    Link — <a href=\"http://www.jesselink.com/\" rel=\"nofollow\">http://www.jesselink.com/</a><br>\nJim
    Freeze on Twitter— <a href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">https://twitter.com/jimfreeze</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2020\" rel=\"nofollow\">https://elixirconf.com/2020</a><br>\nChris
    Freeze on Twitter— <a href=\"https://twitter.com/chrisfreeze_\" rel=\"nofollow\">https://twitter.com/chrisfreeze_</a><br>\nTesla
    Car Lot — <a href=\"https://teslacarlot.com/\" rel=\"nofollow\">https://teslacarlot.com/</a><br>\nDavid
    Antaramian — <a href=\"https://www.linkedin.com/in/davidantaramian/\" rel=\"nofollow\">https://www.linkedin.com/in/davidantaramian/</a><br>\nPepsiCo
    — <a href=\"https://www.pepsico.com/\" rel=\"nofollow\">https://www.pepsico.com/</a><br>\nNerves
    Project — <a href=\"https://www.nerves-project.org/\" rel=\"nofollow\">https://www.nerves-project.org/</a><br>\nFrank
    Hunleth on Twitter — <a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth,
    James Gray, Maggie Tate, and Saša Jurić.</p>\n      "
- title: Season Three Wrap and Remote Work Tips
  slug: s3e19-season-wrap
  link: https://smartlogic.io/podcast/elixir-wizards/s3e19-season-wrap
  guid: 36812119-eef7-40f5-8aba-3fd7b3bebb09
  pubDate: Thu, 02 Apr 2020 06:00:00 -0400
  pubDateFriendly: April  2, 2020
  description: "In this episode, we take a look into the current contexts and home
    lives many of us find ourselves in today, offering top tips for working remotely
    from home during these challenging times. The lockdowns have caused many of us
    to reflect. To reflect on our lives, our work, what we’re grateful for, and in
    this case, our epic last season of Elixir Wizards! Here, we take you through the
    highlights, the lowlights, our biggest lessons, our juiciest debates, and what
    you can expect for Season 4 – in sickness and in health. Stay safe, listen, and
    enjoy!\nKey Points from This Episode:\nThe importance of demarcating your workspace,
    especially when the kids are home!\nAlways put your pants on: Why sticking to
    your morning schedule helps productivity.\nWays to eliminate the potential for
    distraction when working from home.\nHow working from home is enabling programmers
    to see one another’s human side.\nTaking a break from conferences, cognition,
    and learning how to birth a baby Oestrich.\nThird dimensions and entering the
    tangential learning plane with Brooklyn Zelenka.\nThe Surprise Toddcast: Why the
    improvised episode was a hit.\nWhat it was like interviewing entrepreneurial couple,
    Bruce & Maggie Tate.\nRemember the time the father and son roasted each other
    on the podcast mic?\nWhy your podcast audience wants to know your guests on a
    more personal level.\nA recap of the numbers from Season 1-3 and the 40,000+ Elixir
    Wizards downloads.\nA sneak peek into the new Elixir Wizards theme for the upcoming
    Season 4.\nLib versus Web and other essential tips for the lazy Phoenix users
    out there.\nWhy we need a whole season on application architecture and one-letter
    module names.\nThe debate sparked by the disagreement between Chris Keathley and
    Brooklyn Zelenka.\nHackers, painters, Paul Graham, and the argument made in favor
    of dynamic typing.\nFind out more about Sophie and Meryl’s epic takeover of Elixir
    Wizards!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nEric Oestrich — https://twitter.com/ericoestrich?lang=en\nJustus Eapen — https://twitter.com/justuseapen\nBrooklyn
    Zelenka on Witchcraft — https://podcast.smartlogic.io/season-two-zelenka\nBrooklyn
    Zelenka — https://twitter.com/expede?lang=en\nBruce and Maggie Tate from Groxio
    on Training — https://podcast.smartlogic.io/s3e8-groxio\nSaša Jurić — https://twitter.com/sasajuric\nBonus
    Toddcast & Lonestar Preview — https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\nThe
    Lonestar Lunchisode — https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\nDave
    Thomas — https://www.davethomas.net/talks_index.html\nBonus Episode: Outlaws and
    The Wizards — https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\nChris
    Keathley — https://twitter.com/ChrisKeathley\nPaul Graham — http://www.paulgraham.com/\nSean
    Lewis from Divvy on Performance, Hiring and Training — https://podcast.smartlogic.io/s3e12-divvy\nDevin
    C. Estes — https://twitter.com/devoncestes?lang=en\nMuzak — https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang
    Special Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+m8r0rcT6
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/36812119-eef7-40f5-8aba-3fd7b3bebb09.mp3
    length: '73896690'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Todd Resudek joins us to take a look into the current contexts and home
      lives many of us find ourselves in today, offering top tips for working remotely
      from home during these challenging times. The lockdowns have forced many of
      us to reflect. To reflect on our lives, our work, what we’re grateful for, and
      in this case, our epic last season of Elixir Wizards!
    duration: '50:45'
    explicit: 'no'
    keywords: elixir,phoenix,erlang
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/36812119-eef7-40f5-8aba-3fd7b3bebb09/cover.jpg?v=2
    summary: "\n        <p>In this episode, we take a look into the current contexts
      and home lives many of us find ourselves in today, offering top tips for working
      remotely from home during these challenging times. The lockdowns have caused
      many of us to reflect. To reflect on our lives, our work, what we’re grateful
      for, and in this case, our epic last season of Elixir Wizards! Here, we take
      you through the highlights, the lowlights, our biggest lessons, our juiciest
      debates, and what you can expect for Season 4 – in sickness and in health. Stay
      safe, listen, and enjoy!</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>The
      importance of demarcating your workspace, especially when the kids are home!</li>\n<li>Always
      put your pants on: Why sticking to your morning schedule helps productivity.</li>\n<li>Ways
      to eliminate the potential for distraction when working from home.</li>\n<li>How
      working from home is enabling programmers to see one another’s human side.</li>\n<li>Taking
      a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>\n<li>Third
      dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>\n<li>The
      Surprise Toddcast: Why the improvised episode was a hit.</li>\n<li>What it was
      like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>\n<li>Remember
      the time the father and son roasted each other on the podcast mic?</li>\n<li>Why
      your podcast audience wants to know your guests on a more personal level.</li>\n<li>A
      recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>\n<li>A
      sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>\n<li>Lib
      versus Web and other essential tips for the lazy Phoenix users out there.</li>\n<li>Why
      we need a whole season on application architecture and one-letter module names.</li>\n<li>The
      debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>\n<li>Hackers,
      painters, Paul Graham, and the argument made in favor of dynamic typing.</li>\n<li>Find
      out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Oestrich — <a href=\"https://twitter.com/ericoestrich?lang=en\"
      rel=\"nofollow\">https://twitter.com/ericoestrich?lang=en</a><br>\nJustus Eapen
      — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nBrooklyn
      Zelenka on Witchcraft — <a href=\"https://podcast.smartlogic.io/season-two-zelenka\"
      rel=\"nofollow\">https://podcast.smartlogic.io/season-two-zelenka</a><br>\nBrooklyn
      Zelenka — <a href=\"https://twitter.com/expede?lang=en\" rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nBruce
      and Maggie Tate from Groxio on Training — <a href=\"https://podcast.smartlogic.io/s3e8-groxio\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e8-groxio</a><br>\nSaša Jurić
      — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nBonus
      Toddcast &amp; Lonestar Preview — <a href=\"https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>\nThe
      Lonestar Lunchisode — <a href=\"https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>\nDave
      Thomas — <a href=\"https://www.davethomas.net/talks_index.html\" rel=\"nofollow\">https://www.davethomas.net/talks_index.html</a><br>\nBonus
      Episode: Outlaws and The Wizards — <a href=\"https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>\nChris
      Keathley — <a href=\"https://twitter.com/ChrisKeathley\" rel=\"nofollow\">https://twitter.com/ChrisKeathley</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nSean
      Lewis from Divvy on Performance, Hiring and Training — <a href=\"https://podcast.smartlogic.io/s3e12-divvy\"
      rel=\"nofollow\">https://podcast.smartlogic.io/s3e12-divvy</a><br>\nDevin C.
      Estes — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nMuzak
      — <a href=\"https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang\"
      rel=\"nofollow\">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>In this episode, we take a look into the current contexts
    and home lives many of us find ourselves in today, offering top tips for working
    remotely from home during these challenging times. The lockdowns have caused many
    of us to reflect. To reflect on our lives, our work, what we’re grateful for,
    and in this case, our epic last season of Elixir Wizards! Here, we take you through
    the highlights, the lowlights, our biggest lessons, our juiciest debates, and
    what you can expect for Season 4 – in sickness and in health. Stay safe, listen,
    and enjoy!</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>The importance
    of demarcating your workspace, especially when the kids are home!</li>\n<li>Always
    put your pants on: Why sticking to your morning schedule helps productivity.</li>\n<li>Ways
    to eliminate the potential for distraction when working from home.</li>\n<li>How
    working from home is enabling programmers to see one another’s human side.</li>\n<li>Taking
    a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>\n<li>Third
    dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>\n<li>The
    Surprise Toddcast: Why the improvised episode was a hit.</li>\n<li>What it was
    like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>\n<li>Remember
    the time the father and son roasted each other on the podcast mic?</li>\n<li>Why
    your podcast audience wants to know your guests on a more personal level.</li>\n<li>A
    recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>\n<li>A
    sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>\n<li>Lib
    versus Web and other essential tips for the lazy Phoenix users out there.</li>\n<li>Why
    we need a whole season on application architecture and one-letter module names.</li>\n<li>The
    debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>\n<li>Hackers,
    painters, Paul Graham, and the argument made in favor of dynamic typing.</li>\n<li>Find
    out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Oestrich — <a href=\"https://twitter.com/ericoestrich?lang=en\"
    rel=\"nofollow\">https://twitter.com/ericoestrich?lang=en</a><br>\nJustus Eapen
    — <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">https://twitter.com/justuseapen</a><br>\nBrooklyn
    Zelenka on Witchcraft — <a href=\"https://podcast.smartlogic.io/season-two-zelenka\"
    rel=\"nofollow\">https://podcast.smartlogic.io/season-two-zelenka</a><br>\nBrooklyn
    Zelenka — <a href=\"https://twitter.com/expede?lang=en\" rel=\"nofollow\">https://twitter.com/expede?lang=en</a><br>\nBruce
    and Maggie Tate from Groxio on Training — <a href=\"https://podcast.smartlogic.io/s3e8-groxio\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e8-groxio</a><br>\nSaša Jurić
    — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nBonus
    Toddcast &amp; Lonestar Preview — <a href=\"https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>\nThe
    Lonestar Lunchisode — <a href=\"https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>\nDave
    Thomas — <a href=\"https://www.davethomas.net/talks_index.html\" rel=\"nofollow\">https://www.davethomas.net/talks_index.html</a><br>\nBonus
    Episode: Outlaws and The Wizards — <a href=\"https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>\nChris
    Keathley — <a href=\"https://twitter.com/ChrisKeathley\" rel=\"nofollow\">https://twitter.com/ChrisKeathley</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nSean
    Lewis from Divvy on Performance, Hiring and Training — <a href=\"https://podcast.smartlogic.io/s3e12-divvy\"
    rel=\"nofollow\">https://podcast.smartlogic.io/s3e12-divvy</a><br>\nDevin C. Estes
    — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nMuzak
    — <a href=\"https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang\"
    rel=\"nofollow\">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: 'Sophie and Meryl Takeover: Sean Callan and Steven Nunez on Elixir Education'
  slug: s3e18-nunez-callan
  link: https://smartlogic.io/podcast/elixir-wizards/s3e18-nunez-callan
  guid: 19db794e-cf88-4320-969b-ea0ccbe0949d
  pubDate: Thu, 26 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 26, 2020
  description: "Welcome to another extra special episode of Elixir Wizards! We have
    guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and
    they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan,
    creator of Elixir School, to the show. Where some would see the fact that Elixir
    doesn’t have a ton of readily available answers out there as a restriction to
    mastering the language, our guests argue that this is the best educational environment.
    Writing about challenges and teaching others how you overcame them are some of
    the best ways to learn. We also discuss concurrency and other contrasts with prominent
    languages. Our guests weigh in on dealing with students and how far enthusiasm
    and openness can go in helping inspire other minds. Steven stresses the need for
    greater resources, especially at a beginner level, as this will lower the barrier
    to entry for new programmers and ultimately benefit the entire Elixir community.\nKey
    Points From This Episode:\nAn introduction to Sean and Steven, their work and
    experience with Elixir. \nWork and professional horoscopes for the panel of today's
    podcast!\nThe accidental path that led Sean to Elixir and the translations that
    affirmed his work.\nThe use of writing and blogging in your own education; teaching
    is learning twice!\nSteven's early attraction to Elixir and the obsession and
    evangelism that followed. \nConcurrency visibility and differences between Elixir
    and other languages.\nDifferent tracks for learning; coming into Elixir as a beginner
    or as someone with experience. \nThe evolution of thought around education and
    things that have changed at Elixir School. \nLearning that includes reasons why;
    you don't know what you don't know! \nKnowing your students and keeping them excited
    to maintain a passion for learning. \nGrowing confidence and the benefits of great
    resources for the spread of increasing skills.  \nScratching your own itch; write
    the educational information that you cannot find yourself.\nOur guest's Elixir
    wish lists; more learning opportunities, widespread adoption and beginner-friendly
    content.  \nRequests about Elixir from our guests, a few plugs and how to connect
    with them!\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nSophie DeBenedetto — https://twitter.com/smdebenedetto\nMeryl Dakin — https://twitter.com/meryldakin\nSteven
    Nunez — https://twitter.com/stevennunez\nSean Callan — https://twitter.com/doomspork\nSystem
    76 — https://system76.com/\nFlatiron — https://flatironschool.com/\nElixir School
    — https://elixirschool.com\nGitHub — https://github.com/\nErlang — https://www.erlang.org/\nPhoenix
    — https://www.phoenixframework.org/\nKubernetes — https://kubernetes.io/\nThe
    Developer's Guide to Content Creation — https://www.developersguidetocontent.com/\nStephanie
    Morillo — https://www.stephaniemorillo.co/\nElixir and The Beam: How Concurrency
    Really Works https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/
    Special Guests: Sean Callan and Steven Nunez.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+8UOYjwBG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/19db794e-cf88-4320-969b-ea0ccbe0949d.mp3
    length: '78565642'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Today we have special guest hosts: Meryl Dakin of Frame.io and Sophie
      DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the
      Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where
      some would see the fact that Elixir doesn’t have a ton of readily available
      answers out there as a restriction to mastering the language, our guests argue
      that this is the best educational environment.'
    duration: '53:54'
    explicit: 'no'
    keywords: elixir,phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/19db794e-cf88-4320-969b-ea0ccbe0949d/cover.jpg?v=2
    summary: "\n        <p>Welcome to another extra special episode of Elixir Wizards!
      We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of
      Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School,
      and Sean Callan, creator of Elixir School, to the show. Where some would see
      the fact that Elixir doesn’t have a ton of readily available answers out there
      as a restriction to mastering the language, our guests argue that this is the
      best educational environment. Writing about challenges and teaching others how
      you overcame them are some of the best ways to learn. We also discuss concurrency
      and other contrasts with prominent languages. Our guests weigh in on dealing
      with students and how far enthusiasm and openness can go in helping inspire
      other minds. Steven stresses the need for greater resources, especially at a
      beginner level, as this will lower the barrier to entry for new programmers
      and ultimately benefit the entire Elixir community.</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>An introduction to Sean and Steven, their work
      and experience with Elixir. </li>\n<li>Work and professional horoscopes for
      the panel of today&#39;s podcast!</li>\n<li>The accidental path that led Sean
      to Elixir and the translations that affirmed his work.</li>\n<li>The use of
      writing and blogging in your own education; teaching is learning twice!</li>\n<li>Steven&#39;s
      early attraction to Elixir and the obsession and evangelism that followed. </li>\n<li>Concurrency
      visibility and differences between Elixir and other languages.</li>\n<li>Different
      tracks for learning; coming into Elixir as a beginner or as someone with experience.
      </li>\n<li>The evolution of thought around education and things that have changed
      at Elixir School. </li>\n<li>Learning that includes reasons why; you don&#39;t
      know what you don&#39;t know! </li>\n<li>Knowing your students and keeping them
      excited to maintain a passion for learning. </li>\n<li>Growing confidence and
      the benefits of great resources for the spread of increasing skills.<br></li>\n<li>Scratching
      your own itch; write the educational information that you cannot find yourself.</li>\n<li>Our
      guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption
      and beginner-friendly content.<br></li>\n<li>Requests about Elixir from our
      guests, a few plugs and how to connect with them!</li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nSophie DeBenedetto — <a href=\"https://twitter.com/sm_debenedetto\"
      rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl Dakin — <a
      href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nSteven
      Nunez — <a href=\"https://twitter.com/_stevennunez\" rel=\"nofollow\">https://twitter.com/_stevennunez</a><br>\nSean
      Callan — <a href=\"https://twitter.com/doomspork\" rel=\"nofollow\">https://twitter.com/doomspork</a><br>\nSystem
      76 — <a href=\"https://system76.com/\" rel=\"nofollow\">https://system76.com/</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com\" rel=\"nofollow\">https://elixirschool.com</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nPhoenix
      — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nThe
      Developer&#39;s Guide to Content Creation — <a href=\"https://www.developersguidetocontent.com/\"
      rel=\"nofollow\">https://www.developersguidetocontent.com/</a><br>\nStephanie
      Morillo — <a href=\"https://www.stephaniemorillo.co/\" rel=\"nofollow\">https://www.stephaniemorillo.co/</a><br>\nElixir
      and The Beam: How Concurrency Really Works <a href=\"https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/\"
      rel=\"nofollow\">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special
      Guests: Sean Callan and Steven Nunez.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another extra special episode of Elixir
    Wizards! We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto
    of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School,
    and Sean Callan, creator of Elixir School, to the show. Where some would see the
    fact that Elixir doesn’t have a ton of readily available answers out there as
    a restriction to mastering the language, our guests argue that this is the best
    educational environment. Writing about challenges and teaching others how you
    overcame them are some of the best ways to learn. We also discuss concurrency
    and other contrasts with prominent languages. Our guests weigh in on dealing with
    students and how far enthusiasm and openness can go in helping inspire other minds.
    Steven stresses the need for greater resources, especially at a beginner level,
    as this will lower the barrier to entry for new programmers and ultimately benefit
    the entire Elixir community.</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>An
    introduction to Sean and Steven, their work and experience with Elixir. </li>\n<li>Work
    and professional horoscopes for the panel of today&#39;s podcast!</li>\n<li>The
    accidental path that led Sean to Elixir and the translations that affirmed his
    work.</li>\n<li>The use of writing and blogging in your own education; teaching
    is learning twice!</li>\n<li>Steven&#39;s early attraction to Elixir and the obsession
    and evangelism that followed. </li>\n<li>Concurrency visibility and differences
    between Elixir and other languages.</li>\n<li>Different tracks for learning; coming
    into Elixir as a beginner or as someone with experience. </li>\n<li>The evolution
    of thought around education and things that have changed at Elixir School. </li>\n<li>Learning
    that includes reasons why; you don&#39;t know what you don&#39;t know! </li>\n<li>Knowing
    your students and keeping them excited to maintain a passion for learning. </li>\n<li>Growing
    confidence and the benefits of great resources for the spread of increasing skills.<br></li>\n<li>Scratching
    your own itch; write the educational information that you cannot find yourself.</li>\n<li>Our
    guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption
    and beginner-friendly content.<br></li>\n<li>Requests about Elixir from our guests,
    a few plugs and how to connect with them!</li>\n</ul>\n\n<p>Links Mentioned in
    Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSophie DeBenedetto — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
    Dakin — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nSteven
    Nunez — <a href=\"https://twitter.com/_stevennunez\" rel=\"nofollow\">https://twitter.com/_stevennunez</a><br>\nSean
    Callan — <a href=\"https://twitter.com/doomspork\" rel=\"nofollow\">https://twitter.com/doomspork</a><br>\nSystem
    76 — <a href=\"https://system76.com/\" rel=\"nofollow\">https://system76.com/</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com\" rel=\"nofollow\">https://elixirschool.com</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nPhoenix
    — <a href=\"https://www.phoenixframework.org/\" rel=\"nofollow\">https://www.phoenixframework.org/</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io/\" rel=\"nofollow\">https://kubernetes.io/</a><br>\nThe
    Developer&#39;s Guide to Content Creation — <a href=\"https://www.developersguidetocontent.com/\"
    rel=\"nofollow\">https://www.developersguidetocontent.com/</a><br>\nStephanie
    Morillo — <a href=\"https://www.stephaniemorillo.co/\" rel=\"nofollow\">https://www.stephaniemorillo.co/</a><br>\nElixir
    and The Beam: How Concurrency Really Works <a href=\"https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/\"
    rel=\"nofollow\">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special
    Guests: Sean Callan and Steven Nunez.</p>\n      "
- title: Saša Jurić on Training
  slug: s3e17-juric
  link: https://smartlogic.io/podcast/elixir-wizards/s3e17-juric
  guid: 75204e87-33b5-4a39-833c-d2a7f5ae1931
  pubDate: Thu, 19 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 19, 2020
  description: "Saša Jurić is a household name in the Elixir and Erlang space and
    we are so glad to finally welcome him on to the show today! Author of Elixir in
    Action, Saša is here to discuss training and his thoughts on getting a team up
    to speed with regards to testing and beyond. We hear from our guest about his
    discovery of Elixir, his uncharacteristic early adoption of the language, and
    why he chose it. From there, Saša talks a bit about his book, the opportunity
    that arose for him to write it after Manning approached him and how he views its
    place among other prominent pieces of literature on the subject. We discuss early
    steps in the process of learning Elixir for new programmers and old, and Saša
    weighs in on when it might be a good idea to put in the effort. We also get to
    hear about very big things, where Saša works and the central work and services
    of the agency. The last part of our conversation is spent on more technical aspects
    of Saša's work, his approach to coding in general and then approaches to testing
    and the training side of this. Join us today for this great conversation!\nKey
    Points From This Episode:\nSaša's discovery of Elixir and his first experiences
    of the language.\nA lucky opportunity to write a book that presented itself to
    Saša!\nThe complementary nature of Elixir in Action; reading it in conjunction
    with other books.   \nIdeas on how to introduce the concepts of Elixir to new
    programmers and the unfamiliar. \nThe effort needed in order to understand and
    adopt the new paradigm of Elixir.\nSaša's work at very big things and the services
    that the agency offers.\nThe most useful idioms that Saša uses and the modes
    of operation at that agency. \nSaša's use of Dialyzer for debugging despite its
    imperfections.\nThe exploratory nature of good coding and finding solutions as
    you go. \nHelper libraries and comparing functions from Saša's own one!\nTraining
    for unit, feature and integration testing; Saša's approach for his team.\nDifferentiating
    between the different types of testing and the importance of naming. \nClarifying
    Saša's philosophy on testing and his understanding of the term 'unit'. \nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nSaša Jurić
    on Twitter — https://twitter.com/sasajuric\nThe Erlangerist — https://www.theerlangelist.com/\nElixir
    in Action — https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a
    - use special code podexwizards20 for 40% off your purchase at Manning Publications!\nMichael
    Stevens — https://www.linkedin.com/in/michaelstephens2\nManning — https://www.manning.com/\nProgramming
    Elixir — https://pragprog.com/book/elixir16/programming-elixir-1-6\nLearn Functional
    Programming with Elixir — https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\nvery
    big things — https://verybigthings.com/\nDialyzer — https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\nHackers
    & Painters — http://shop.oreilly.com/product/9780596006624.do\nPaul Graham — http://www.paulgraham.com/\nJustin
    Searls Blog - https://blog.testdouble.com/\nMarie Kondo — https://konmari.com/\n
    Special Guest: Saša Jurić.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+AhSmdJ4b
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/75204e87-33b5-4a39-833c-d2a7f5ae1931.mp3
    length: '74231314'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Saša Jurić is a household name in the Elixir and Erlang space and
      we are so glad to finally welcome him on to the show today! Author of Elixir
      in Action, Saša is here to discuss training and his thoughts on getting a team
      up to speed with regards to testing and beyond. '
    duration: '51:01'
    explicit: 'no'
    keywords: elixir, phoenix, erlang
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/75204e87-33b5-4a39-833c-d2a7f5ae1931/cover.jpg?v=2
    summary: "\n        <p>Saša Jurić is a household name in the Elixir and Erlang
      space and we are so glad to finally welcome him on to the show today! Author
      of Elixir in Action, Saša is here to discuss training and his thoughts on getting
      a team up to speed with regards to testing and beyond. We hear from our guest
      about his discovery of Elixir, his uncharacteristic early adoption of the language,
      and why he chose it. From there, Saša talks a bit about his book, the opportunity
      that arose for him to write it after Manning approached him and how he views
      its place among other prominent pieces of literature on the subject. We discuss
      early steps in the process of learning Elixir for new programmers and old, and
      Saša weighs in on when it might be a good idea to put in the effort. We also
      get to hear about very big things, where Saša works and the central work and
      services of the agency. The last part of our conversation is spent on more technical
      aspects of Saša&#39;s work, his approach to coding in general and then approaches
      to testing and the training side of this. Join us today for this great conversation!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Saša&#39;s discovery of Elixir and
      his first experiences of the language.</li>\n<li>A lucky opportunity to write
      a book that presented itself to Saša!</li>\n<li>The complementary nature of
      Elixir in Action; reading it in conjunction with other books.<br></li>\n<li>Ideas
      on how to introduce the concepts of Elixir to new programmers and the unfamiliar.
      </li>\n<li>The effort needed in order to understand and adopt the new paradigm
      of Elixir.</li>\n<li>Saša&#39;s work at very big things and the services that
      the agency offers.</li>\n<li>The most useful idioms that Saša uses and the
      modes of operation at that agency. </li>\n<li>Saša&#39;s use of Dialyzer for
      debugging despite its imperfections.</li>\n<li>The exploratory nature of good
      coding and finding solutions as you go. </li>\n<li>Helper libraries and comparing
      functions from Saša&#39;s own one!</li>\n<li>Training for unit, feature and
      integration testing; Saša&#39;s approach for his team.</li>\n<li>Differentiating
      between the different types of testing and the importance of naming. </li>\n<li>Clarifying
      Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSaša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nThe
      Erlangerist — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nElixir
      in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a\"
      rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a>
      - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>\nMichael
      Stevens — <a href=\"https://www.linkedin.com/in/michaelstephens2\" rel=\"nofollow\">https://www.linkedin.com/in/michaelstephens2</a><br>\nManning
      — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\nProgramming
      Elixir — <a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
      rel=\"nofollow\">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>\nLearn
      Functional Programming with Elixir — <a href=\"https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\"
      rel=\"nofollow\">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>\nvery
      big things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nDialyzer
      — <a href=\"https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\" rel=\"nofollow\">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>\nHackers
      &amp; Painters — <a href=\"http://shop.oreilly.com/product/9780596006624.do\"
      rel=\"nofollow\">http://shop.oreilly.com/product/9780596006624.do</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nJustin
      Searls Blog - <a href=\"https://blog.testdouble.com/\" rel=\"nofollow\">https://blog.testdouble.com/</a><br>\nMarie
      Kondo — <a href=\"https://konmari.com/\" rel=\"nofollow\">https://konmari.com/</a></p><p>Special
      Guest: Saša Jurić.</p>\n      "
  contentEncoded: "\n        <p>Saša Jurić is a household name in the Elixir and
    Erlang space and we are so glad to finally welcome him on to the show today! Author
    of Elixir in Action, Saša is here to discuss training and his thoughts on getting
    a team up to speed with regards to testing and beyond. We hear from our guest
    about his discovery of Elixir, his uncharacteristic early adoption of the language,
    and why he chose it. From there, Saša talks a bit about his book, the opportunity
    that arose for him to write it after Manning approached him and how he views its
    place among other prominent pieces of literature on the subject. We discuss early
    steps in the process of learning Elixir for new programmers and old, and Saša
    weighs in on when it might be a good idea to put in the effort. We also get to
    hear about very big things, where Saša works and the central work and services
    of the agency. The last part of our conversation is spent on more technical aspects
    of Saša&#39;s work, his approach to coding in general and then approaches to testing
    and the training side of this. Join us today for this great conversation!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Saša&#39;s discovery of Elixir and
    his first experiences of the language.</li>\n<li>A lucky opportunity to write
    a book that presented itself to Saša!</li>\n<li>The complementary nature of Elixir
    in Action; reading it in conjunction with other books.<br></li>\n<li>Ideas on
    how to introduce the concepts of Elixir to new programmers and the unfamiliar.
    </li>\n<li>The effort needed in order to understand and adopt the new paradigm
    of Elixir.</li>\n<li>Saša&#39;s work at very big things and the services that
    the agency offers.</li>\n<li>The most useful idioms that Saša uses and the modes
    of operation at that agency. </li>\n<li>Saša&#39;s use of Dialyzer for debugging
    despite its imperfections.</li>\n<li>The exploratory nature of good coding and
    finding solutions as you go. </li>\n<li>Helper libraries and comparing functions
    from Saša&#39;s own one!</li>\n<li>Training for unit, feature and integration
    testing; Saša&#39;s approach for his team.</li>\n<li>Differentiating between
    the different types of testing and the importance of naming. </li>\n<li>Clarifying
    Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;.
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic —
    <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSaša Jurić on Twitter — <a href=\"https://twitter.com/sasajuric\" rel=\"nofollow\">https://twitter.com/sasajuric</a><br>\nThe
    Erlangerist — <a href=\"https://www.theerlangelist.com/\" rel=\"nofollow\">https://www.theerlangelist.com/</a><br>\nElixir
    in Action — <a href=\"https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a\"
    rel=\"nofollow\">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a>
    - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>\nMichael
    Stevens — <a href=\"https://www.linkedin.com/in/michaelstephens2\" rel=\"nofollow\">https://www.linkedin.com/in/michaelstephens2</a><br>\nManning
    — <a href=\"https://www.manning.com/\" rel=\"nofollow\">https://www.manning.com/</a><br>\nProgramming
    Elixir — <a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
    rel=\"nofollow\">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>\nLearn
    Functional Programming with Elixir — <a href=\"https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir\"
    rel=\"nofollow\">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>\nvery
    big things — <a href=\"https://verybigthings.com/\" rel=\"nofollow\">https://verybigthings.com/</a><br>\nDialyzer
    — <a href=\"https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html\" rel=\"nofollow\">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>\nHackers
    &amp; Painters — <a href=\"http://shop.oreilly.com/product/9780596006624.do\"
    rel=\"nofollow\">http://shop.oreilly.com/product/9780596006624.do</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a><br>\nJustin
    Searls Blog - <a href=\"https://blog.testdouble.com/\" rel=\"nofollow\">https://blog.testdouble.com/</a><br>\nMarie
    Kondo — <a href=\"https://konmari.com/\" rel=\"nofollow\">https://konmari.com/</a></p><p>Special
    Guest: Saša Jurić.</p>\n      "
- title: 'Bonus Episode: Outlaws and Wizards'
  slug: s3-bonus-outlaws-and-wizards
  link: https://smartlogic.io/podcast/elixir-wizards/s3-bonus-outlaws-and-wizards
  guid: dbe0827c-2449-477d-bb59-3a189d039ad0
  pubDate: Fri, 13 Mar 2020 12:00:00 -0400
  pubDateFriendly: March 13, 2020
  description: |
    Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.
    Guests / Hosts
    Justus Eapen @justuseapen (https://twitter.com/justuseapen)
    Anna Neyzberg @ANeyzb (https://twitter.com/ANeyzb)
    Amos King @adkron (https://twitter.com/Adkron)
    Bruce Tate @redrapids (https://twitter.com/redrapids)
    Susumu Yamazaki @zacky1972 (https://twitter.com/zacky1972)
    Melvin Cedeno @TheCraftedGem (https://twitter.com/TheCraftedGem)
    Tim Mecklem @tim_mecklem (https://twitter.com/tim_mecklem)
    Elixir Outlaws https://elixiroutlaws.com/
    Lonestar Elixir https://lonestarelixir.com/ Special Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu Yamazaki, and Tim Mecklem.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+PlJMiLNK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe0827c-2449-477d-bb59-3a189d039ad0.mp3
    length: '44875455'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Elixir Outlaws invited us to join them for a special crossover episode,
      recorded live at Lonestar Elixir 2020. Join us for a conversation around fun
      and learning in development, highlights from day one of the conference, remembering
      Joe Armstrong, and more.
    duration: '46:44'
    explicit: 'no'
    keywords: elixir, phoenix, lonestar elixir
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Elixir Outlaws invited us to join them for a special crossover
      episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around
      fun and learning in development, highlights from day one of the conference,
      remembering Joe Armstrong, and more.</p>\n\n<p><strong>Guests / Hosts</strong><br>\nJustus
      Eapen <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">@justuseapen</a><br>\nAnna
      Neyzberg <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">@ANeyzb</a><br>\nAmos
      King <a href=\"https://twitter.com/Adkron\" rel=\"nofollow\">@adkron</a><br>\nBruce
      Tate <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">@redrapids</a><br>\nSusumu
      Yamazaki <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">@zacky1972</a><br>\nMelvin
      Cedeno <a href=\"https://twitter.com/TheCraftedGem\" rel=\"nofollow\">@TheCraftedGem</a><br>\nTim
      Mecklem <a href=\"https://twitter.com/tim_mecklem\" rel=\"nofollow\">@tim_mecklem</a></p>\n\n<p>Elixir
      Outlaws <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nLonestar
      Elixir <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
      Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno,
      Susumu Yamazaki, and Tim Mecklem.</p>\n      "
  contentEncoded: "\n        <p>Elixir Outlaws invited us to join them for a special
    crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation
    around fun and learning in development, highlights from day one of the conference,
    remembering Joe Armstrong, and more.</p>\n\n<p><strong>Guests / Hosts</strong><br>\nJustus
    Eapen <a href=\"https://twitter.com/justuseapen\" rel=\"nofollow\">@justuseapen</a><br>\nAnna
    Neyzberg <a href=\"https://twitter.com/ANeyzb\" rel=\"nofollow\">@ANeyzb</a><br>\nAmos
    King <a href=\"https://twitter.com/Adkron\" rel=\"nofollow\">@adkron</a><br>\nBruce
    Tate <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">@redrapids</a><br>\nSusumu
    Yamazaki <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">@zacky1972</a><br>\nMelvin
    Cedeno <a href=\"https://twitter.com/TheCraftedGem\" rel=\"nofollow\">@TheCraftedGem</a><br>\nTim
    Mecklem <a href=\"https://twitter.com/tim_mecklem\" rel=\"nofollow\">@tim_mecklem</a></p>\n\n<p>Elixir
    Outlaws <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nLonestar
    Elixir <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a></p><p>Special
    Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu
    Yamazaki, and Tim Mecklem.</p>\n      "
- title: Devon Estes from Sketch on Benchee,  Performance and Training
  slug: s3e16-estes
  link: https://smartlogic.io/podcast/elixir-wizards/s3e16-estes
  guid: 65360c15-6a60-4c48-be76-94f642cb6869
  pubDate: Thu, 12 Mar 2020 06:00:00 -0400
  pubDateFriendly: March 12, 2020
  description: "Our guest today, Devon Estes, approached us about the possible opportunity
    for Elixir to optimize and build out the pandas data analysis and manipulation
    tool, sharing why he thinks it would be a valuable addition to the Elixir open
    source ecosystem. But Devon joins us to contribute to our ongoing discussion about
    performance and training in the Elixir world, sharing about his current work on
    the beta for Sketch Cloud, his previous Erlang consultancy role at one of the
    largest banks in Europe, and the massive responsibility he carried while working
    on the bottom line application. He continues to advise listeners on the considerations
    for optimizing Erlang performance and solving database-specific problems, and
    the memory constraints he comes up against in the Sketch Cloud application. Devon
    talks about Benchee, a benchmarking library created by his friend, and how the
    two of them have continued to develop this tool, including its performance testing
    capabilities and how they deconstructed the benchmarking steps to build out the
    library. He also talks more broadly about the importance of considering the data
    when distinguishing between facts and opinions in conversations about performance.
    \nKey Points From This Episode:\nWhat Devon believes would be a valuable addition
    to the Elixir open source ecosystem. \nWhy optimizing and building out the pandas
    tool will be worth a company’s time and effort.\nDevon’s experience with pandas
    and Python, and recognizing the opportunity for Elixir. \nWorking on the beta
    for Sketch’s Cloud that will allow real-time collaboration. \nDevon’s consultancy
    role at Klarna, one of the largest banks in Europe. \nThe responsibility involved
    in working on the bottom-of-the-stack application at Klarna.  \nConsiderations
    for optimizing Erlang performance and why you should look at the tail. \nSolving
    the database performance problems – running queries and searches – at Klarna.
    \nThe unique memory constraints of Sketch Cloud and the problem with receiving
    large files. \nMore about Benchee, a benchmarking library, and all its performance
    testing capabilities. \nDeciding whether a function is responsible for other things
    when benchmarking. \nThe time Devon spends on optimizing performance and the first
    two steps in the process. \nThe profiling process of determining which function
    is slow and writing a benchmark for it. \nDistinguish between a fact and an opinion
    by considering the data (or lack thereof). \nKeeping in mind that truth is time-bound,
    and it also applies to benchmarking.\nDeconstructing the steps in the process
    of further developing Benchee.\nHow Devon became a maintainer of the Elixir track
    for Exercism, and what the role involves. \nLinks Mentioned in Today’s Episode:\nDevon
    Estes — http://www.devonestes.com\nDevon Estes on Twitter — https://twitter.com/devoncestes?lang=en\nDevon
    Estes on GitHub — https://github.com/devonestes\npandas — https://pandas.pydata.org\nPython
    — https://www.python.org\nSketch — https://www.sketch.com\nKlarna — https://www.klarna.com/international/\nErlang
    — https://www.erlang.org\nPostgreSQL — https://www.postgresql.org\nRuby  — https://www.ruby-lang.org/en/\nAdopting
    Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\nExercism
    — https://exercism.io\nJavaScript — https://www.javascript.com\nBenchee — https://github.com/bencheeorg\nSmartLogic
    — https://smartlogic.io/ \nElixir — https://elixir-lang.org\nElixir Wizards Podcast
    — https://podcast.smartlogic.io\nUpdate:\nWhat's Inside a Reduction? http://www.devonestes.com/inside-a-reduction
    Special Guest: Devon Estes.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+9e23Ic3j
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/65360c15-6a60-4c48-be76-94f642cb6869.mp3
    length: '70759385'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Devon Estes joins our ongoing discussion about performance and training
      in the Elixir world, shares about his current work on the beta for Sketch Cloud,
      his previous Erlang consultancy role at one of the largest banks in Europe,
      and the massive responsibility he carried while working on the bottom line application.
    duration: '48:34'
    explicit: 'no'
    keywords: elixir, ruby, benchee, pandas, erlang
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/65360c15-6a60-4c48-be76-94f642cb6869/cover.jpg?v=2
    summary: "\n        <p>Our guest today, Devon Estes, approached us about the possible
      opportunity for Elixir to optimize and build out the pandas data analysis and
      manipulation tool, sharing why he thinks it would be a valuable addition to
      the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing
      discussion about performance and training in the Elixir world, sharing about
      his current work on the beta for Sketch Cloud, his previous Erlang consultancy
      role at one of the largest banks in Europe, and the massive responsibility he
      carried while working on the bottom line application. He continues to advise
      listeners on the considerations for optimizing Erlang performance and solving
      database-specific problems, and the memory constraints he comes up against in
      the Sketch Cloud application. Devon talks about Benchee, a benchmarking library
      created by his friend, and how the two of them have continued to develop this
      tool, including its performance testing capabilities and how they deconstructed
      the benchmarking steps to build out the library. He also talks more broadly
      about the importance of considering the data when distinguishing between facts
      and opinions in conversations about performance. </p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>What Devon believes would be a valuable addition
      to the Elixir open source ecosystem. </li>\n<li>Why optimizing and building
      out the pandas tool will be worth a company’s time and effort.</li>\n<li>Devon’s
      experience with pandas and Python, and recognizing the opportunity for Elixir.
      </li>\n<li>Working on the beta for Sketch’s Cloud that will allow real-time
      collaboration. </li>\n<li>Devon’s consultancy role at Klarna, one of the largest
      banks in Europe. </li>\n<li>The responsibility involved in working on the bottom-of-the-stack
      application at Klarna.<br></li>\n<li>Considerations for optimizing Erlang performance
      and why you should look at the tail. </li>\n<li>Solving the database performance
      problems – running queries and searches – at Klarna. </li>\n<li>The unique memory
      constraints of Sketch Cloud and the problem with receiving large files. </li>\n<li>More
      about Benchee, a benchmarking library, and all its performance testing capabilities.
      </li>\n<li>Deciding whether a function is responsible for other things when
      benchmarking. </li>\n<li>The time Devon spends on optimizing performance and
      the first two steps in the process. </li>\n<li>The profiling process of determining
      which function is slow and writing a benchmark for it. </li>\n<li>Distinguish
      between a fact and an opinion by considering the data (or lack thereof). </li>\n<li>Keeping
      in mind that truth is time-bound, and it also applies to benchmarking.</li>\n<li>Deconstructing
      the steps in the process of further developing Benchee.</li>\n<li>How Devon
      became a maintainer of the Elixir track for Exercism, and what the role involves.
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Devon Estes
      — <a href=\"http://www.devonestes.com\" rel=\"nofollow\">http://www.devonestes.com</a><br>\nDevon
      Estes on Twitter — <a href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nDevon
      Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\npandas
      — <a href=\"https://pandas.pydata.org\" rel=\"nofollow\">https://pandas.pydata.org</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nSketch
      — <a href=\"https://www.sketch.com\" rel=\"nofollow\">https://www.sketch.com</a><br>\nKlarna
      — <a href=\"https://www.klarna.com/international/\" rel=\"nofollow\">https://www.klarna.com/international/</a><br>\nErlang
      — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nPostgreSQL
      — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nRuby
      \ — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nAdopting
      Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
      rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nExercism
      — <a href=\"https://exercism.io\" rel=\"nofollow\">https://exercism.io</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nBenchee
      — <a href=\"https://github.com/bencheeorg\" rel=\"nofollow\">https://github.com/bencheeorg</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a></p>\n\n<p>Update:<br>\nWhat&#39;s
      Inside a Reduction? <a href=\"http://www.devonestes.com/inside-a-reduction\"
      rel=\"nofollow\">http://www.devonestes.com/inside-a-reduction</a></p><p>Special
      Guest: Devon Estes.</p>\n      "
  contentEncoded: "\n        <p>Our guest today, Devon Estes, approached us about
    the possible opportunity for Elixir to optimize and build out the pandas data
    analysis and manipulation tool, sharing why he thinks it would be a valuable addition
    to the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing
    discussion about performance and training in the Elixir world, sharing about his
    current work on the beta for Sketch Cloud, his previous Erlang consultancy role
    at one of the largest banks in Europe, and the massive responsibility he carried
    while working on the bottom line application. He continues to advise listeners
    on the considerations for optimizing Erlang performance and solving database-specific
    problems, and the memory constraints he comes up against in the Sketch Cloud application.
    Devon talks about Benchee, a benchmarking library created by his friend, and how
    the two of them have continued to develop this tool, including its performance
    testing capabilities and how they deconstructed the benchmarking steps to build
    out the library. He also talks more broadly about the importance of considering
    the data when distinguishing between facts and opinions in conversations about
    performance. </p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>What Devon
    believes would be a valuable addition to the Elixir open source ecosystem. </li>\n<li>Why
    optimizing and building out the pandas tool will be worth a company’s time and
    effort.</li>\n<li>Devon’s experience with pandas and Python, and recognizing the
    opportunity for Elixir. </li>\n<li>Working on the beta for Sketch’s Cloud that
    will allow real-time collaboration. </li>\n<li>Devon’s consultancy role at Klarna,
    one of the largest banks in Europe. </li>\n<li>The responsibility involved in
    working on the bottom-of-the-stack application at Klarna.<br></li>\n<li>Considerations
    for optimizing Erlang performance and why you should look at the tail. </li>\n<li>Solving
    the database performance problems – running queries and searches – at Klarna.
    </li>\n<li>The unique memory constraints of Sketch Cloud and the problem with
    receiving large files. </li>\n<li>More about Benchee, a benchmarking library,
    and all its performance testing capabilities. </li>\n<li>Deciding whether a function
    is responsible for other things when benchmarking. </li>\n<li>The time Devon spends
    on optimizing performance and the first two steps in the process. </li>\n<li>The
    profiling process of determining which function is slow and writing a benchmark
    for it. </li>\n<li>Distinguish between a fact and an opinion by considering the
    data (or lack thereof). </li>\n<li>Keeping in mind that truth is time-bound, and
    it also applies to benchmarking.</li>\n<li>Deconstructing the steps in the process
    of further developing Benchee.</li>\n<li>How Devon became a maintainer of the
    Elixir track for Exercism, and what the role involves. </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Devon Estes — <a href=\"http://www.devonestes.com\"
    rel=\"nofollow\">http://www.devonestes.com</a><br>\nDevon Estes on Twitter — <a
    href=\"https://twitter.com/devoncestes?lang=en\" rel=\"nofollow\">https://twitter.com/devoncestes?lang=en</a><br>\nDevon
    Estes on GitHub — <a href=\"https://github.com/devonestes\" rel=\"nofollow\">https://github.com/devonestes</a><br>\npandas
    — <a href=\"https://pandas.pydata.org\" rel=\"nofollow\">https://pandas.pydata.org</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nSketch
    — <a href=\"https://www.sketch.com\" rel=\"nofollow\">https://www.sketch.com</a><br>\nKlarna
    — <a href=\"https://www.klarna.com/international/\" rel=\"nofollow\">https://www.klarna.com/international/</a><br>\nErlang
    — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nPostgreSQL
    — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nRuby
    \ — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nAdopting
    Elixir — <a href=\"https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522\"
    rel=\"nofollow\">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>\nExercism
    — <a href=\"https://exercism.io\" rel=\"nofollow\">https://exercism.io</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nBenchee
    — <a href=\"https://github.com/bencheeorg\" rel=\"nofollow\">https://github.com/bencheeorg</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a></p>\n\n<p>Update:<br>\nWhat&#39;s
    Inside a Reduction? <a href=\"http://www.devonestes.com/inside-a-reduction\" rel=\"nofollow\">http://www.devonestes.com/inside-a-reduction</a></p><p>Special
    Guest: Devon Estes.</p>\n      "
- title: Second Annual Lonestar Lunchisode
  slug: s3-lonestar-lunchisode-2020
  link: https://smartlogic.io/podcast/elixir-wizards/s3-lonestar-lunchisode-2020
  guid: 49808f09-dc08-407e-9d3b-9db8f0bbff97
  pubDate: Thu, 05 Mar 2020 06:00:00 -0500
  pubDateFriendly: March  5, 2020
  description: "Welcome back to the show for this special edition Lunchisode, coming
    to you live from the Lonestar Elixir 2020 Conference! We have a revolving door
    of speakers at this informal roundtable and a few friends and associates stop
    by to introduce themselves, share their thoughts on the conference so far and
    subjects that they care about. We follow up on some of the ideas raised in the
    Lonestar preview episode as well as hear about new and interesting ways that Elixir
    is being used at a variety of companies, including SalesLoft, ActiveProspect,
    SmartRent and more! We also consider the place of Elixir education and go deeper
    on the topic of finding fun and meaning in our programming pursuits and beyond.
    Join us for this special edition and stay tuned for the next installment soon.\nKey
    Points From This Episode:\nThoughts on the conference so far — the talks and venue.
    \ \nSalesLoft's Elixir adoption and how the decision was made by those in power.
    \nBruce Williams' current work at GitHub and his project on Absinthe. \nElixir
    usage in Mexico and the prominent organizations and companies that use it.\nSome
    information on the Observability Working Group and what they are currently busy
    with. \nDifferences between tracing and logging; tracing is essentially distributed
    logging. \nWhat it means for the programmer when they bump up against a challenge!\nThe
    amount of effort that should go into developing entry points for new Elixir developers.\nEducation
    in the Elixir space and the success of the bootcamp model. \nConsidering the ongoing
    utility of unit tests and changing up training strategies. \nThe work done by
    SmartRent in real estate and how Elixir fits into their tech stack. \nLinks Mentioned
    in Today’s Episode:\nLonestar Elixir — https://lonestarelixir.com/\nBruce Tate
    — https://twitter.com/redrapids\nSteve Bussey — https://twitter.com/YOOOODAAAA\nBruce
    Williams — https://twitter.com/wbruce\nRicardo Echavarria — https://twitter.com/ricarus\nBrain
    Naegele — https://twitter.com/bsidebryan\nFrank Kumro — https://twitter.com/frigidcode\nZach
    Thomas — https://twitter.com/ZachDCThom\nDave Thomas — https://twitter.com/pragdave\nJon
    Carstens — https://twitter.com/JonCarstens\nTodd Resudek — https://twitter.com/sprsmpl\nSmartLogic
    — https://smartlogic.io/ \nSalesLoft — https://salesloft.com/\nAbsinthe — https://github.com/absinthe-graphql/absinthe\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nRestFest — https://www.restfest.org/\nObservability
    Working Group — https://erlef.org/wg/observability\nGigCity Elixir Conference
    — https://www.gigcityelixir.com/\nActiveProspect — https://activeprospect.com/\nThe
    Pragmatic Programmer — https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\nSmartRent
    — https://smartrent.com/\nBlinker — https://www.blinker.com/ Special Guests: Brain
    Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon Carstens, Ricardo
    Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zA4kPFSi
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49808f09-dc08-407e-9d3b-9db8f0bbff97.mp3
    length: '77678258'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Recorded live at Lonestar Elixir 2020! Tune in for our conversation
      with many great guests, including Bruce Tate, Steve Bussey, Bruce Williams,
      Ricardo Echavarria, Brian Naegele, Frank Kumro, Zach Thomas, Dave Thomas, Jon
      Carstens, and guest co-host Todd Resudek.
    duration: '53:38'
    explicit: 'no'
    keywords: lonestar elixir, elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49808f09-dc08-407e-9d3b-9db8f0bbff97/cover.jpg?v=2
    summary: "\n        <p>Welcome back to the show for this special edition Lunchisode,
      coming to you live from the Lonestar Elixir 2020 Conference! We have a revolving
      door of speakers at this informal roundtable and a few friends and associates
      stop by to introduce themselves, share their thoughts on the conference so far
      and subjects that they care about. We follow up on some of the ideas raised
      in the Lonestar preview episode as well as hear about new and interesting ways
      that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect,
      SmartRent and more! We also consider the place of Elixir education and go deeper
      on the topic of finding fun and meaning in our programming pursuits and beyond.
      Join us for this special edition and stay tuned for the next installment soon.</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Thoughts on the conference
      so far — the talks and venue.<br></li>\n<li>SalesLoft&#39;s Elixir adoption
      and how the decision was made by those in power. </li>\n<li>Bruce Williams&#39;
      current work at GitHub and his project on Absinthe. </li>\n<li>Elixir usage
      in Mexico and the prominent organizations and companies that use it.</li>\n<li>Some
      information on the Observability Working Group and what they are currently busy
      with. </li>\n<li>Differences between tracing and logging; tracing is essentially
      distributed logging. </li>\n<li>What it means for the programmer when they bump
      up against a challenge!</li>\n<li>The amount of effort that should go into developing
      entry points for new Elixir developers.</li>\n<li>Education in the Elixir space
      and the success of the bootcamp model. </li>\n<li>Considering the ongoing utility
      of unit tests and changing up training strategies. </li>\n<li>The work done
      by SmartRent in real estate and how Elixir fits into their tech stack. </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Lonestar Elixir — <a href=\"https://lonestarelixir.com/\"
      rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce Tate — <a href=\"https://twitter.com/redrapids\"
      rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nSteve Bussey — <a href=\"https://twitter.com/YOOOODAAAA\"
      rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nBruce Williams — <a
      href=\"https://twitter.com/wbruce\" rel=\"nofollow\">https://twitter.com/wbruce</a><br>\nRicardo
      Echavarria — <a href=\"https://twitter.com/r_icarus\" rel=\"nofollow\">https://twitter.com/r_icarus</a><br>\nBrain
      Naegele — <a href=\"https://twitter.com/bside_bryan\" rel=\"nofollow\">https://twitter.com/bside_bryan</a><br>\nFrank
      Kumro — <a href=\"https://twitter.com/frigidcode\" rel=\"nofollow\">https://twitter.com/frigidcode</a><br>\nZach
      Thomas — <a href=\"https://twitter.com/ZachDCThom\" rel=\"nofollow\">https://twitter.com/ZachDCThom</a><br>\nDave
      Thomas — <a href=\"https://twitter.com/pragdave\" rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nJon
      Carstens — <a href=\"https://twitter.com/JonCarstens\" rel=\"nofollow\">https://twitter.com/JonCarstens</a><br>\nTodd
      Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nSalesLoft — <a href=\"https://salesloft.com/\" rel=\"nofollow\">https://salesloft.com/</a><br>\nAbsinthe
      — <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nRestFest
      — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nObservability
      Working Group — <a href=\"https://erlef.org/wg/observability\" rel=\"nofollow\">https://erlef.org/wg/observability</a><br>\nGigCity
      Elixir Conference — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nActiveProspect
      — <a href=\"https://activeprospect.com/\" rel=\"nofollow\">https://activeprospect.com/</a><br>\nThe
      Pragmatic Programmer — <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
      rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nSmartRent
      — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a></p><p>Special
      Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro,
      Jon Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>\n
      \     "
  contentEncoded: "\n        <p>Welcome back to the show for this special edition
    Lunchisode, coming to you live from the Lonestar Elixir 2020 Conference! We have
    a revolving door of speakers at this informal roundtable and a few friends and
    associates stop by to introduce themselves, share their thoughts on the conference
    so far and subjects that they care about. We follow up on some of the ideas raised
    in the Lonestar preview episode as well as hear about new and interesting ways
    that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect,
    SmartRent and more! We also consider the place of Elixir education and go deeper
    on the topic of finding fun and meaning in our programming pursuits and beyond.
    Join us for this special edition and stay tuned for the next installment soon.</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Thoughts on the conference
    so far — the talks and venue.<br></li>\n<li>SalesLoft&#39;s Elixir adoption and
    how the decision was made by those in power. </li>\n<li>Bruce Williams&#39; current
    work at GitHub and his project on Absinthe. </li>\n<li>Elixir usage in Mexico
    and the prominent organizations and companies that use it.</li>\n<li>Some information
    on the Observability Working Group and what they are currently busy with. </li>\n<li>Differences
    between tracing and logging; tracing is essentially distributed logging. </li>\n<li>What
    it means for the programmer when they bump up against a challenge!</li>\n<li>The
    amount of effort that should go into developing entry points for new Elixir developers.</li>\n<li>Education
    in the Elixir space and the success of the bootcamp model. </li>\n<li>Considering
    the ongoing utility of unit tests and changing up training strategies. </li>\n<li>The
    work done by SmartRent in real estate and how Elixir fits into their tech stack.
    </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Lonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nBruce
    Tate — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nSteve
    Bussey — <a href=\"https://twitter.com/YOOOODAAAA\" rel=\"nofollow\">https://twitter.com/YOOOODAAAA</a><br>\nBruce
    Williams — <a href=\"https://twitter.com/wbruce\" rel=\"nofollow\">https://twitter.com/wbruce</a><br>\nRicardo
    Echavarria — <a href=\"https://twitter.com/r_icarus\" rel=\"nofollow\">https://twitter.com/r_icarus</a><br>\nBrain
    Naegele — <a href=\"https://twitter.com/bside_bryan\" rel=\"nofollow\">https://twitter.com/bside_bryan</a><br>\nFrank
    Kumro — <a href=\"https://twitter.com/frigidcode\" rel=\"nofollow\">https://twitter.com/frigidcode</a><br>\nZach
    Thomas — <a href=\"https://twitter.com/ZachDCThom\" rel=\"nofollow\">https://twitter.com/ZachDCThom</a><br>\nDave
    Thomas — <a href=\"https://twitter.com/pragdave\" rel=\"nofollow\">https://twitter.com/pragdave</a><br>\nJon
    Carstens — <a href=\"https://twitter.com/JonCarstens\" rel=\"nofollow\">https://twitter.com/JonCarstens</a><br>\nTodd
    Resudek — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nSalesLoft — <a href=\"https://salesloft.com/\" rel=\"nofollow\">https://salesloft.com/</a><br>\nAbsinthe
    — <a href=\"https://github.com/absinthe-graphql/absinthe\" rel=\"nofollow\">https://github.com/absinthe-graphql/absinthe</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nRestFest
    — <a href=\"https://www.restfest.org/\" rel=\"nofollow\">https://www.restfest.org/</a><br>\nObservability
    Working Group — <a href=\"https://erlef.org/wg/observability\" rel=\"nofollow\">https://erlef.org/wg/observability</a><br>\nGigCity
    Elixir Conference — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nActiveProspect
    — <a href=\"https://activeprospect.com/\" rel=\"nofollow\">https://activeprospect.com/</a><br>\nThe
    Pragmatic Programmer — <a href=\"https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition\"
    rel=\"nofollow\">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>\nSmartRent
    — <a href=\"https://smartrent.com/\" rel=\"nofollow\">https://smartrent.com/</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a></p><p>Special
    Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon
    Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>\n
    \     "
- title: Bonus Toddcast & Lonestar Preview
  slug: s3e14-bonus-toddcast-and-lonestar-preview
  link: https://smartlogic.io/podcast/elixir-wizards/s3e14-bonus-toddcast-and-lonestar-preview
  guid: 10fa47c2-0223-46ac-a69d-465fd1393edb
  pubDate: Thu, 27 Feb 2020 07:30:00 -0500
  pubDateFriendly: February 27, 2020
  description: "This week we're delighted to share a special format bonus episode!
    \nWe are joined by guest co-host Todd Resudek as well as a number of guests who
    each share a little bit about what they're working on and in many cases their
    upcoming presentations at Lonestar Elixir. \nSpecial episode guests: \n* Angel
    Jose, Senior Platform Engineer at Cars.com\n* Dave Lucia, VP of Engineering at
    SimpleBet\n* Greg Mefford, Senior Back-End Engineer at Bleacher Report\n* Melvin
    Cedeno, Elixir Developer at SplitGyms\n* Zach Thomas, API Developer at Blinker\nMost
    of our guests weigh in about their upcoming presentations at the event and we
    also get to chat about a few near and dear topics with our rotating cast. We hear
    about where they are working, their experiences with Elixir and their thoughts
    on education and company culture. It's an unusual episode but one we are so glad
    to have had the chance to make! We also find time to touch on our focus for the
    next season of the podcast, which is very exciting for all of us over here at
    the show. Remember to stay plugged in for more on Lonestar Elixir and attend if
    you can!\nKey Points From This Episode:\nSome thoughts on LiveView and its adoption
    by new developers. \nAngel's work at Cars and how they are using Elixir and LiveView
    to rewrite everything.\nChatbots and the immediate benefits of using Elixir to
    rewrite them.\nThe elevator pitch on SimpleBet and the tech stack, skillset and
    ecosystem of the company.\nWhy Dave and his team have moved away from Rust! \nA
    quick tease of what to expect for Season 4 of the podcast: Architecture of Applications!
    \ \nHow Bleacher Report is using Elixir to build the 'third space' for sports
    fans.\nTeam building and expansion at Bleacher Report and the stages of scaling.
    \ \nA sneak preview of Greg's upcoming talk at Lonestar!\nHow Greg got started
    with Nerves and why it has a special place in his heart.  \nThe theme of Melvin's
    talk at Lonestar; untraditional routes and emotions in tech. \nConsidering the
    usefulness of boot camps, the value of ISAs and CS programs.\nZach's background
    in Elixir and his current work at Blinker with the language.\nExperiences at Turing
    and in liberal arts during college.\nZach's Lonestar talk elevator pitch: 'Getting
    the Frog out of the Well'. \nThe allegory of the cave, 'what is water' and how
    this differs from Zach's idea. \nWhy don't we like statically typed things as
    much as we should?\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nLonestar Elixir 2020 — https://lonestarelixir.com/\nTodd Resudek — https://medium.com/@toddresudek\nTodd
    Resudek on Twitter — https://twitter.com/sprsmpl\nAngel Jose — https://github.com/ajose01\nDave
    Lucia — https://github.com/davydog187\nGreg Mefford — https://github.com/GregMefford/blinkchain\nMelvin
    Cedeno — https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\nZack
    Thomas — https://github.com/zeam-vm/pelemay\nSophie DeBenedetto — http://sophiedebenedetto.nyc/\nLiveView
    — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html\nElixirConf — https://elixirconf.com/events\nCars
    — https://www.cars.com/\nSimpleBet — https://www.simplebet.io/\nFull Stack Developer
    Horse Drawing Meme — https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\nConway's
    Law — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\nElixirConf
    2019 - Lighting Talk - Are There Benefits Of Crying In Tech — https://www.youtube.com/watch?v=oW5Plkroyxk\nTRON
    — https://www.rottentomatoes.com/m/tron\nSmart Mirror Blog Post — https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\nBleacher
    Report — https://bleacherreport.com/\nTeam Topologies — https://teamtopologies.com/\nNerves
    — https://nerves-project.org/\nTuring — https://turing.io/\nCIRR — https://cirr.org/\nDavid
    Heinemeier Hansson — https://dhh.dk/\nBlinker — https://www.blinker.com/\nDavid
    Foster Wallace — http://www.davidfosterwallacebooks.com/\nGödel, Escher, Bach
    — https://www.goodreads.com/book/show/24113.GdelEscher_Bach Special Guests: Angel
    Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and Zach Thomas.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+J96ymiGR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10fa47c2-0223-46ac-a69d-465fd1393edb.mp3
    length: '103019643'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: "Special format bonus episode! This week we are joined by bonus co-host
      Todd Resudek as well as a number of guests who each share a little bit about
      what they're working on, and in many cases their upcoming presentations at Lonestar
      Elixir. \n\nSpecial guests: Angel Jose of Cars.com, Dave Lucia of SimpleBet,
      Greg Mefford from Bleacher Report, Melvin Cedeno of SplitGyms, Zach Thomas of
      Blinker"
    duration: '1:10:46'
    explicit: 'no'
    keywords: elixir, phoenix, lonestar
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10fa47c2-0223-46ac-a69d-465fd1393edb/cover.jpg?v=2
    summary: "\n        <p>This week we&#39;re delighted to share a special format
      bonus episode! </p>\n\n<p>We are joined by guest co-host Todd Resudek as well
      as a number of guests who each share a little bit about what they&#39;re working
      on and in many cases their upcoming presentations at Lonestar Elixir. </p>\n\n<p>Special
      episode guests: </p>\n\n<ul>\n<li>Angel Jose, Senior Platform Engineer at Cars.com</li>\n<li>Dave
      Lucia, VP of Engineering at SimpleBet</li>\n<li>Greg Mefford, Senior Back-End
      Engineer at Bleacher Report</li>\n<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>\n<li>Zach
      Thomas, API Developer at Blinker</li>\n</ul>\n\n<p>Most of our guests weigh
      in about their upcoming presentations at the event and we also get to chat about
      a few near and dear topics with our rotating cast. We hear about where they
      are working, their experiences with Elixir and their thoughts on education and
      company culture. It&#39;s an unusual episode but one we are so glad to have
      had the chance to make! We also find time to touch on our focus for the next
      season of the podcast, which is very exciting for all of us over here at the
      show. Remember to stay plugged in for more on Lonestar Elixir and attend if
      you can!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>Some thoughts
      on LiveView and its adoption by new developers. </li>\n<li>Angel&#39;s work
      at Cars and how they are using Elixir and LiveView to rewrite everything.</li>\n<li>Chatbots
      and the immediate benefits of using Elixir to rewrite them.</li>\n<li>The elevator
      pitch on SimpleBet and the tech stack, skillset and ecosystem of the company.</li>\n<li>Why
      Dave and his team have moved away from Rust! </li>\n<li>A quick tease of what
      to expect for Season 4 of the podcast: Architecture of Applications!<br></li>\n<li>How
      Bleacher Report is using Elixir to build the &#39;third space&#39; for sports
      fans.</li>\n<li>Team building and expansion at Bleacher Report and the stages
      of scaling.<br></li>\n<li>A sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>\n<li>How
      Greg got started with Nerves and why it has a special place in his heart.<br></li>\n<li>The
      theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in
      tech. </li>\n<li>Considering the usefulness of boot camps, the value of ISAs
      and CS programs.</li>\n<li>Zach&#39;s background in Elixir and his current work
      at Blinker with the language.</li>\n<li>Experiences at Turing and in liberal
      arts during college.</li>\n<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting
      the Frog out of the Well&#39;. </li>\n<li>The allegory of the cave, &#39;what
      is water&#39; and how this differs from Zach&#39;s idea. </li>\n<li>Why don&#39;t
      we like statically typed things as much as we should?</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nLonestar Elixir 2020 — <a
      href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTodd
      Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nTodd
      Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAngel
      Jose — <a href=\"https://github.com/ajose01\" rel=\"nofollow\">https://github.com/ajose01</a><br>\nDave
      Lucia — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a><br>\nGreg
      Mefford — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nMelvin
      Cedeno — <a href=\"https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\"
      rel=\"nofollow\">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>\nZack
      Thomas — <a href=\"https://github.com/zeam-vm/pelemay\" rel=\"nofollow\">https://github.com/zeam-vm/pelemay</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nLiveView
      — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nCars
      — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nSimpleBet
      — <a href=\"https://www.simplebet.io/\" rel=\"nofollow\">https://www.simplebet.io/</a><br>\nFull
      Stack Developer Horse Drawing Meme — <a href=\"https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\"
      rel=\"nofollow\">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>\nConway&#39;s
      Law — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
      rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nElixirConf
      2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href=\"https://www.youtube.com/watch?v=oW5Plkroyxk\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>\nTRON —
      <a href=\"https://www.rottentomatoes.com/m/tron\" rel=\"nofollow\">https://www.rottentomatoes.com/m/tron</a><br>\nSmart
      Mirror Blog Post — <a href=\"https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\"
      rel=\"nofollow\">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nTeam
      Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nNerves
      — <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nTuring
      — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nCIRR
      — <a href=\"https://cirr.org/\" rel=\"nofollow\">https://cirr.org/</a><br>\nDavid
      Heinemeier Hansson — <a href=\"https://dhh.dk/\" rel=\"nofollow\">https://dhh.dk/</a><br>\nBlinker
      — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nDavid
      Foster Wallace — <a href=\"http://www.davidfosterwallacebooks.com/\" rel=\"nofollow\">http://www.davidfosterwallacebooks.com/</a><br>\nGödel,
      Escher, Bach — <a href=\"https://www.goodreads.com/book/show/24113.G_del_Escher_Bach\"
      rel=\"nofollow\">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special
      Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and
      Zach Thomas.</p>\n      "
  contentEncoded: "\n        <p>This week we&#39;re delighted to share a special format
    bonus episode! </p>\n\n<p>We are joined by guest co-host Todd Resudek as well
    as a number of guests who each share a little bit about what they&#39;re working
    on and in many cases their upcoming presentations at Lonestar Elixir. </p>\n\n<p>Special
    episode guests: </p>\n\n<ul>\n<li>Angel Jose, Senior Platform Engineer at Cars.com</li>\n<li>Dave
    Lucia, VP of Engineering at SimpleBet</li>\n<li>Greg Mefford, Senior Back-End
    Engineer at Bleacher Report</li>\n<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>\n<li>Zach
    Thomas, API Developer at Blinker</li>\n</ul>\n\n<p>Most of our guests weigh in
    about their upcoming presentations at the event and we also get to chat about
    a few near and dear topics with our rotating cast. We hear about where they are
    working, their experiences with Elixir and their thoughts on education and company
    culture. It&#39;s an unusual episode but one we are so glad to have had the chance
    to make! We also find time to touch on our focus for the next season of the podcast,
    which is very exciting for all of us over here at the show. Remember to stay plugged
    in for more on Lonestar Elixir and attend if you can!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>Some thoughts on LiveView and its adoption by new
    developers. </li>\n<li>Angel&#39;s work at Cars and how they are using Elixir
    and LiveView to rewrite everything.</li>\n<li>Chatbots and the immediate benefits
    of using Elixir to rewrite them.</li>\n<li>The elevator pitch on SimpleBet and
    the tech stack, skillset and ecosystem of the company.</li>\n<li>Why Dave and
    his team have moved away from Rust! </li>\n<li>A quick tease of what to expect
    for Season 4 of the podcast: Architecture of Applications!<br></li>\n<li>How Bleacher
    Report is using Elixir to build the &#39;third space&#39; for sports fans.</li>\n<li>Team
    building and expansion at Bleacher Report and the stages of scaling.<br></li>\n<li>A
    sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>\n<li>How Greg got
    started with Nerves and why it has a special place in his heart.<br></li>\n<li>The
    theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in tech.
    </li>\n<li>Considering the usefulness of boot camps, the value of ISAs and CS
    programs.</li>\n<li>Zach&#39;s background in Elixir and his current work at Blinker
    with the language.</li>\n<li>Experiences at Turing and in liberal arts during
    college.</li>\n<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting the Frog
    out of the Well&#39;. </li>\n<li>The allegory of the cave, &#39;what is water&#39;
    and how this differs from Zach&#39;s idea. </li>\n<li>Why don&#39;t we like statically
    typed things as much as we should?</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nLonestar Elixir 2020 — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nTodd
    Resudek — <a href=\"https://medium.com/@toddresudek\" rel=\"nofollow\">https://medium.com/@toddresudek</a><br>\nTodd
    Resudek on Twitter — <a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\nAngel
    Jose — <a href=\"https://github.com/ajose01\" rel=\"nofollow\">https://github.com/ajose01</a><br>\nDave
    Lucia — <a href=\"https://github.com/davydog187\" rel=\"nofollow\">https://github.com/davydog187</a><br>\nGreg
    Mefford — <a href=\"https://github.com/GregMefford/blinkchain\" rel=\"nofollow\">https://github.com/GregMefford/blinkchain</a><br>\nMelvin
    Cedeno — <a href=\"https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27\"
    rel=\"nofollow\">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>\nZack
    Thomas — <a href=\"https://github.com/zeam-vm/pelemay\" rel=\"nofollow\">https://github.com/zeam-vm/pelemay</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nLiveView
    — <a href=\"https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html\" rel=\"nofollow\">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nCars
    — <a href=\"https://www.cars.com/\" rel=\"nofollow\">https://www.cars.com/</a><br>\nSimpleBet
    — <a href=\"https://www.simplebet.io/\" rel=\"nofollow\">https://www.simplebet.io/</a><br>\nFull
    Stack Developer Horse Drawing Meme — <a href=\"https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing\"
    rel=\"nofollow\">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>\nConway&#39;s
    Law — <a href=\"https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development\"
    rel=\"nofollow\">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>\nElixirConf
    2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href=\"https://www.youtube.com/watch?v=oW5Plkroyxk\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>\nTRON — <a
    href=\"https://www.rottentomatoes.com/m/tron\" rel=\"nofollow\">https://www.rottentomatoes.com/m/tron</a><br>\nSmart
    Mirror Blog Post — <a href=\"https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f\"
    rel=\"nofollow\">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nTeam
    Topologies — <a href=\"https://teamtopologies.com/\" rel=\"nofollow\">https://teamtopologies.com/</a><br>\nNerves
    — <a href=\"https://nerves-project.org/\" rel=\"nofollow\">https://nerves-project.org/</a><br>\nTuring
    — <a href=\"https://turing.io/\" rel=\"nofollow\">https://turing.io/</a><br>\nCIRR
    — <a href=\"https://cirr.org/\" rel=\"nofollow\">https://cirr.org/</a><br>\nDavid
    Heinemeier Hansson — <a href=\"https://dhh.dk/\" rel=\"nofollow\">https://dhh.dk/</a><br>\nBlinker
    — <a href=\"https://www.blinker.com/\" rel=\"nofollow\">https://www.blinker.com/</a><br>\nDavid
    Foster Wallace — <a href=\"http://www.davidfosterwallacebooks.com/\" rel=\"nofollow\">http://www.davidfosterwallacebooks.com/</a><br>\nGödel,
    Escher, Bach — <a href=\"https://www.goodreads.com/book/show/24113.G_del_Escher_Bach\"
    rel=\"nofollow\">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special
    Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and
    Zach Thomas.</p>\n      "
- title: Alex Garibay and Mike Binns from DockYard on Hiring and Training
  slug: s3e13-binns-garibay
  link: https://smartlogic.io/podcast/elixir-wizards/s3e13-binns-garibay
  guid: 1cd7d8f6-8965-4bd2-b159-1580e133bb6f
  pubDate: Thu, 20 Feb 2020 06:00:00 -0500
  pubDateFriendly: February 20, 2020
  description: "Today on the show, we’re joined by Mike Binns and Alex Garibay of
    DockYard. In this episode, Mike and Alex share their journeys of how they came
    to work at DockYard and give us a view into DockYard’s hiring and training processes,
    systems, and philosophies. Here they share what they enjoy most about working
    at DockYard and their emphasis on being supported in your continual growth as
    an employee and human being.\nKey Points from This Episode:\nFind out how Mike
    and Alex both got their jobs at DockYard in 2016.\nWorking for a fully remote
    company: Mike and Alex share their experiences.\nThe amount of languages used
    at DockYard and what the day-to-day looks like.\nReact VS Ember: Find out DockYard’s
    opinion on the debate between the two.\nHow to know whether you should be using
    JavaScript or Live View on your projects.\nThe importance of inclusion and empowerment
    in the onboarding process at DockYard.\nHow to support and train new employees
    in “soft” skills, such as communication.\nPersonal strategies Mike and Alex use
    to help “soften the blow” of feedback and criticism. \nDiscover what DockYard
    does to support the learning growth of their employees.\nLearn more about DockYard
    Friday and the exciting projects that have emerged from it.\nHelpful resources
    for learning Elixir and how to remain a curious learner as a developer.\nFind
    out the top skills that make a great engineering manager at DockYard today.\nLinks
    Mentioned in Today’s Episode:\nMike Binns on Twitter — https://twitter.com/1stAvenger\nMike
    Binns on LinkedIn — https://www.linkedin.com/in/mikebinns\nAlex Garibay — https://alexgaribay.com/\nAlex
    Garibay on Twitter — https://twitter.com/AlexGaribay\nAlex Garibay on LinkedIn
    — https://www.linkedin.com/in/alexandergaribay/\nDockYard — https://DockYard.com/\nSmartLogic
    — https://smartlogic.io/ \nRailsConf — https://railsconf.com/\nChris McCord —
    http://chrismccord.com/\nEmber — https://emberjs.com/\nLive View — https://support.google.com/maps/thread/11554255?hl=en\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027
    \nElixir Conf 2014 Keynote by Dave Thomas — https://www.youtube.com/watch?v=5hDVftaPQwY\nSarah
    Drasner — https://sarahdrasnerdesign.com/\nLonestar Elixir — https://lonestarelixir.com/\nProgramming
    Phoenix — https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\nJason
    Goldberger — https://twitter.com/jsonlouis Special Guests: Alex Garibay and Mike
    Binns.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+1nUg3zGs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1cd7d8f6-8965-4bd2-b159-1580e133bb6f.mp3
    length: '38709213'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Mike Binns and Alex Garibay of DockYard share their journeys of how
      they came to work at DockYard and give us a fascinating peek behind-the-scenes
      into DockYard’s hiring and training processes, systems, and philosophies.
    duration: '26:11'
    explicit: 'no'
    keywords: DockYard, elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1cd7d8f6-8965-4bd2-b159-1580e133bb6f/cover.jpg?v=2
    summary: "\n        <p>Today on the show, we’re joined by Mike Binns and Alex
      Garibay of DockYard. In this episode, Mike and Alex share their journeys of
      how they came to work at DockYard and give us a view into DockYard’s hiring
      and training processes, systems, and philosophies. Here they share what they
      enjoy most about working at DockYard and their emphasis on being supported in
      your continual growth as an employee and human being.</p>\n\n<p>Key Points from
      This Episode:</p>\n\n<ul>\n<li>Find out how Mike and Alex both got their jobs
      at DockYard in 2016.</li>\n<li>Working for a fully remote company: Mike and
      Alex share their experiences.</li>\n<li>The amount of languages used at DockYard
      and what the day-to-day looks like.</li>\n<li>React VS Ember: Find out DockYard’s
      opinion on the debate between the two.</li>\n<li>How to know whether you should
      be using JavaScript or Live View on your projects.</li>\n<li>The importance
      of inclusion and empowerment in the onboarding process at DockYard.</li>\n<li>How
      to support and train new employees in “soft” skills, such as communication.</li>\n<li>Personal
      strategies Mike and Alex use to help “soften the blow” of feedback and criticism.
      </li>\n<li>Discover what DockYard does to support the learning growth of their
      employees.</li>\n<li>Learn more about DockYard Friday and the exciting projects
      that have emerged from it.</li>\n<li>Helpful resources for learning Elixir and
      how to remain a curious learner as a developer.</li>\n<li>Find out the top skills
      that make a great engineering manager at DockYard today.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Mike Binns on Twitter — <a href=\"https://twitter.com/1stAvenger\"
      rel=\"nofollow\">https://twitter.com/1stAvenger</a><br>\nMike Binns on LinkedIn
      — <a href=\"https://www.linkedin.com/in/mikebinns\" rel=\"nofollow\">https://www.linkedin.com/in/mikebinns</a><br>\nAlex
      Garibay — <a href=\"https://alexgaribay.com/\" rel=\"nofollow\">https://alexgaribay.com/</a><br>\nAlex
      Garibay on Twitter — <a href=\"https://twitter.com/_AlexGaribay\" rel=\"nofollow\">https://twitter.com/_AlexGaribay</a><br>\nAlex
      Garibay on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandergaribay/\"
      rel=\"nofollow\">https://www.linkedin.com/in/alexandergaribay/</a><br>\nDockYard
      — <a href=\"https://DockYard.com/\" rel=\"nofollow\">https://DockYard.com/</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nRailsConf — <a href=\"https://railsconf.com/\" rel=\"nofollow\">https://railsconf.com/</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nEmber
      — <a href=\"https://emberjs.com/\" rel=\"nofollow\">https://emberjs.com/</a><br>\nLive
      View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a>
      <br>\nElixir Conf 2014 Keynote by Dave Thomas — <a href=\"https://www.youtube.com/watch?v=5hDVftaPQwY\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>\nSarah
      Drasner — <a href=\"https://sarahdrasnerdesign.com/\" rel=\"nofollow\">https://sarahdrasnerdesign.com/</a><br>\nLonestar
      Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nProgramming
      Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
      rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nJason
      Goldberger — <a href=\"https://twitter.com/jsonlouis_\" rel=\"nofollow\">https://twitter.com/jsonlouis_</a></p><p>Special
      Guests: Alex Garibay and Mike Binns.</p>\n      "
  contentEncoded: "\n        <p>Today on the show, we’re joined by Mike Binns and
    Alex Garibay of DockYard. In this episode, Mike and Alex share their journeys
    of how they came to work at DockYard and give us a view into DockYard’s hiring
    and training processes, systems, and philosophies. Here they share what they enjoy
    most about working at DockYard and their emphasis on being supported in your continual
    growth as an employee and human being.</p>\n\n<p>Key Points from This Episode:</p>\n\n<ul>\n<li>Find
    out how Mike and Alex both got their jobs at DockYard in 2016.</li>\n<li>Working
    for a fully remote company: Mike and Alex share their experiences.</li>\n<li>The
    amount of languages used at DockYard and what the day-to-day looks like.</li>\n<li>React
    VS Ember: Find out DockYard’s opinion on the debate between the two.</li>\n<li>How
    to know whether you should be using JavaScript or Live View on your projects.</li>\n<li>The
    importance of inclusion and empowerment in the onboarding process at DockYard.</li>\n<li>How
    to support and train new employees in “soft” skills, such as communication.</li>\n<li>Personal
    strategies Mike and Alex use to help “soften the blow” of feedback and criticism.
    </li>\n<li>Discover what DockYard does to support the learning growth of their
    employees.</li>\n<li>Learn more about DockYard Friday and the exciting projects
    that have emerged from it.</li>\n<li>Helpful resources for learning Elixir and
    how to remain a curious learner as a developer.</li>\n<li>Find out the top skills
    that make a great engineering manager at DockYard today.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Mike Binns on Twitter — <a href=\"https://twitter.com/1stAvenger\"
    rel=\"nofollow\">https://twitter.com/1stAvenger</a><br>\nMike Binns on LinkedIn
    — <a href=\"https://www.linkedin.com/in/mikebinns\" rel=\"nofollow\">https://www.linkedin.com/in/mikebinns</a><br>\nAlex
    Garibay — <a href=\"https://alexgaribay.com/\" rel=\"nofollow\">https://alexgaribay.com/</a><br>\nAlex
    Garibay on Twitter — <a href=\"https://twitter.com/_AlexGaribay\" rel=\"nofollow\">https://twitter.com/_AlexGaribay</a><br>\nAlex
    Garibay on LinkedIn — <a href=\"https://www.linkedin.com/in/alexandergaribay/\"
    rel=\"nofollow\">https://www.linkedin.com/in/alexandergaribay/</a><br>\nDockYard
    — <a href=\"https://DockYard.com/\" rel=\"nofollow\">https://DockYard.com/</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nRailsConf — <a href=\"https://railsconf.com/\" rel=\"nofollow\">https://railsconf.com/</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nEmber
    — <a href=\"https://emberjs.com/\" rel=\"nofollow\">https://emberjs.com/</a><br>\nLive
    View — <a href=\"https://support.google.com/maps/thread/11554255?hl=en\" rel=\"nofollow\">https://support.google.com/maps/thread/11554255?hl=en</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a>
    <br>\nElixir Conf 2014 Keynote by Dave Thomas — <a href=\"https://www.youtube.com/watch?v=5hDVftaPQwY\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>\nSarah Drasner
    — <a href=\"https://sarahdrasnerdesign.com/\" rel=\"nofollow\">https://sarahdrasnerdesign.com/</a><br>\nLonestar
    Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nProgramming
    Phoenix — <a href=\"https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453\"
    rel=\"nofollow\">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>\nJason
    Goldberger — <a href=\"https://twitter.com/jsonlouis_\" rel=\"nofollow\">https://twitter.com/jsonlouis_</a></p><p>Special
    Guests: Alex Garibay and Mike Binns.</p>\n      "
- title: Sean Lewis from Divvy on Performance, Hiring and Training
  slug: s3e12-divvy
  link: https://smartlogic.io/podcast/elixir-wizards/s3e12-divvy
  guid: 37389f65-249a-4e59-bdac-c71a646d2b23
  pubDate: Thu, 13 Feb 2020 06:00:00 -0500
  pubDateFriendly: February 13, 2020
  description: "Today on Elixir Wizards we are delighted to be joined by Sean Lewis,
    a senior backend architect at Divvy. One of the many impressive facts about Sean
    is that he is entirely self-taught, from dabbling in Python and coding to eventually
    writing a bunch of Ruby tests and working his way up in the product development
    sphere. In his free time, he likes to play around with electronics and work on
    other tech-related projects such as developing custom smart home devices. In this
    episode, Sean discusses his recent Meetup talk on the implementation of Broadway
    and explains Divvy’s tech stack choices that include React, Elixir, and Python.
    He dives into the topic of hiring for Elixir, outlining the challenges and providing
    strategies and resources to equip new developers in the area of functional programming.
    For Sean, the most important aspect of onboarding is teaching newcomers to ask
    the right questions since this is the foundation of the problem-solving process.
    He shares about Divvy’s approach to recruitment, his role as mentor, how they
    go about retaining and continuously growing their developers, the importance of
    being teachable, and then Sean concludes by giving listeners practical advice
    for ensuring data fidelity.\nKey Points From This Episode:\nSean’s self-taught
    journey and role as senior backend architect at Divvy. \nThe smart home projects
    he has recently worked on, including a smart garage. \nAn overview of Broadway
    and Sean’s Meetup talk regarding implementation. \nThe straightforward tech stack
    at Divvy: React, Elixir, and Python. \nThe difficulty of hiring for Elixir and
    finding fintech companies that use Elixir. \nStrategies and resources for training
    new engineers on Elixir and functional programming. \nWhy fintech works well with
    functional programming in the context of authorization. \nTraining state-minimization
    as a primary concern.\nOnboarding: a process of teaching developers to ask the
    right questions. \nDivvy’s approach to finding and recruiting new employees. \nThoughts
    on why so many Utahn companies use Elixir and the city’s exponential growth. \nHow
    Sean was recruited by Divvy, his progression to architect, and his role as a mentor.
    \nCritical practices for onboarding developers, including assimilating them into
    the culture. \nHow Devvy continues to grow and retain its engineers. \nThe importance
    of challenging yourself, constantly learning, and staying teachable. \nImplementing
    high-quality checkpoints and other advice for ensuring data fidelity. \nLinks
    Mentioned in Today’s Episode:\nSean Lewis on LinkedIn — https://www.linkedin.com/in/sean-lewis-40375077/\nSean
    Lewis on Twitter — https://twitter.com/fricsean?lang=en\nSean Lewis on GitHub
    — https://github.com/SophisticaSean\nDivvy — https://getdivvy.com\nRuby — https://www.ruby-lang.org/en/\nBroadway
    — https://hexdocs.pm/broadway/amazon-sqs.html\nUtah Elixir Meetup — https://www.meetup.com/utah-elixir\nReact
    — https://reactjs.org\nElixir — https://elixir-lang.org\nSusumu Yamazaki on Twitter
    — https://twitter.com/zacky1972\nDomain Modeling Made Functional — https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\nSlack
    — https://slack.com/\nMongoDB — https://www.mongodb.com\nPostgreSQL — https://www.postgresql.org\nElixir
    Wizards Podcast — https://podcast.smartlogic.io\nSmartLogic — https://smartlogic.io/
    \n Special Guest: Sean Lewis.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+8xhggMcK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37389f65-249a-4e59-bdac-c71a646d2b23.mp3
    length: '50451167'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards we are delighted to be joined by Sean Lewis,
      a senior backend architect at Divvy. One of the many impressive facts about
      Sean is that he is entirely self-taught, from dabbling in Python and coding
      to eventually writing a bunch of Ruby tests and working his way up in the product
      development sphere. In his free time, he likes to play around with electronics
      and work on other tech-related projects such as developing custom smart home
      devices. In this episode, Sean discusses his recent Meetup talk on the implementation
      of Broadway and explains Divvy’s tech stack choices that include React, Elixir,
      and Python. He dives into the topic of hiring for Elixir, outlining the challenges
      and providing strategies and resources to equip new developers in the area of
      functional programming.
    duration: '34:34'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37389f65-249a-4e59-bdac-c71a646d2b23/cover.jpg?v=2
    summary: "\n        <p>Today on Elixir Wizards we are delighted to be joined by
      Sean Lewis, a senior backend architect at Divvy. One of the many impressive
      facts about Sean is that he is entirely self-taught, from dabbling in Python
      and coding to eventually writing a bunch of Ruby tests and working his way up
      in the product development sphere. In his free time, he likes to play around
      with electronics and work on other tech-related projects such as developing
      custom smart home devices. In this episode, Sean discusses his recent Meetup
      talk on the implementation of Broadway and explains Divvy’s tech stack choices
      that include React, Elixir, and Python. He dives into the topic of hiring for
      Elixir, outlining the challenges and providing strategies and resources to equip
      new developers in the area of functional programming. For Sean, the most important
      aspect of onboarding is teaching newcomers to ask the right questions since
      this is the foundation of the problem-solving process. He shares about Divvy’s
      approach to recruitment, his role as mentor, how they go about retaining and
      continuously growing their developers, the importance of being teachable, and
      then Sean concludes by giving listeners practical advice for ensuring data fidelity.</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Sean’s self-taught journey
      and role as senior backend architect at Divvy. </li>\n<li>The smart home projects
      he has recently worked on, including a smart garage. </li>\n<li>An overview
      of Broadway and Sean’s Meetup talk regarding implementation. </li>\n<li>The
      straightforward tech stack at Divvy: React, Elixir, and Python. </li>\n<li>The
      difficulty of hiring for Elixir and finding fintech companies that use Elixir.
      </li>\n<li>Strategies and resources for training new engineers on Elixir and
      functional programming. </li>\n<li>Why fintech works well with functional programming
      in the context of authorization. </li>\n<li>Training state-minimization as a
      primary concern.</li>\n<li>Onboarding: a process of teaching developers to ask
      the right questions. </li>\n<li>Divvy’s approach to finding and recruiting new
      employees. </li>\n<li>Thoughts on why so many Utahn companies use Elixir and
      the city’s exponential growth. </li>\n<li>How Sean was recruited by Divvy, his
      progression to architect, and his role as a mentor. </li>\n<li>Critical practices
      for onboarding developers, including assimilating them into the culture. </li>\n<li>How
      Devvy continues to grow and retain its engineers. </li>\n<li>The importance
      of challenging yourself, constantly learning, and staying teachable. </li>\n<li>Implementing
      high-quality checkpoints and other advice for ensuring data fidelity. </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Sean Lewis on LinkedIn — <a
      href=\"https://www.linkedin.com/in/sean-lewis-40375077/\" rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nSean
      Lewis on Twitter — <a href=\"https://twitter.com/fricsean?lang=en\" rel=\"nofollow\">https://twitter.com/fricsean?lang=en</a><br>\nSean
      Lewis on GitHub — <a href=\"https://github.com/SophisticaSean\" rel=\"nofollow\">https://github.com/SophisticaSean</a><br>\nDivvy
      — <a href=\"https://getdivvy.com\" rel=\"nofollow\">https://getdivvy.com</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nBroadway
      — <a href=\"https://hexdocs.pm/broadway/amazon-sqs.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>\nUtah
      Elixir Meetup — <a href=\"https://www.meetup.com/utah-elixir\" rel=\"nofollow\">https://www.meetup.com/utah-elixir</a><br>\nReact
      — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nSusumu
      Yamazaki on Twitter — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nDomain
      Modeling Made Functional — <a href=\"https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\"
      rel=\"nofollow\">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nMongoDB
      — <a href=\"https://www.mongodb.com\" rel=\"nofollow\">https://www.mongodb.com</a><br>\nPostgreSQL
      — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nElixir
      Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guest: Sean Lewis.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards we are delighted to be joined
    by Sean Lewis, a senior backend architect at Divvy. One of the many impressive
    facts about Sean is that he is entirely self-taught, from dabbling in Python and
    coding to eventually writing a bunch of Ruby tests and working his way up in the
    product development sphere. In his free time, he likes to play around with electronics
    and work on other tech-related projects such as developing custom smart home devices.
    In this episode, Sean discusses his recent Meetup talk on the implementation of
    Broadway and explains Divvy’s tech stack choices that include React, Elixir, and
    Python. He dives into the topic of hiring for Elixir, outlining the challenges
    and providing strategies and resources to equip new developers in the area of
    functional programming. For Sean, the most important aspect of onboarding is teaching
    newcomers to ask the right questions since this is the foundation of the problem-solving
    process. He shares about Divvy’s approach to recruitment, his role as mentor,
    how they go about retaining and continuously growing their developers, the importance
    of being teachable, and then Sean concludes by giving listeners practical advice
    for ensuring data fidelity.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Sean’s
    self-taught journey and role as senior backend architect at Divvy. </li>\n<li>The
    smart home projects he has recently worked on, including a smart garage. </li>\n<li>An
    overview of Broadway and Sean’s Meetup talk regarding implementation. </li>\n<li>The
    straightforward tech stack at Divvy: React, Elixir, and Python. </li>\n<li>The
    difficulty of hiring for Elixir and finding fintech companies that use Elixir.
    </li>\n<li>Strategies and resources for training new engineers on Elixir and functional
    programming. </li>\n<li>Why fintech works well with functional programming in
    the context of authorization. </li>\n<li>Training state-minimization as a primary
    concern.</li>\n<li>Onboarding: a process of teaching developers to ask the right
    questions. </li>\n<li>Divvy’s approach to finding and recruiting new employees.
    </li>\n<li>Thoughts on why so many Utahn companies use Elixir and the city’s exponential
    growth. </li>\n<li>How Sean was recruited by Divvy, his progression to architect,
    and his role as a mentor. </li>\n<li>Critical practices for onboarding developers,
    including assimilating them into the culture. </li>\n<li>How Devvy continues to
    grow and retain its engineers. </li>\n<li>The importance of challenging yourself,
    constantly learning, and staying teachable. </li>\n<li>Implementing high-quality
    checkpoints and other advice for ensuring data fidelity. </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Sean Lewis on LinkedIn — <a href=\"https://www.linkedin.com/in/sean-lewis-40375077/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>\nSean
    Lewis on Twitter — <a href=\"https://twitter.com/fricsean?lang=en\" rel=\"nofollow\">https://twitter.com/fricsean?lang=en</a><br>\nSean
    Lewis on GitHub — <a href=\"https://github.com/SophisticaSean\" rel=\"nofollow\">https://github.com/SophisticaSean</a><br>\nDivvy
    — <a href=\"https://getdivvy.com\" rel=\"nofollow\">https://getdivvy.com</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nBroadway
    — <a href=\"https://hexdocs.pm/broadway/amazon-sqs.html\" rel=\"nofollow\">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>\nUtah
    Elixir Meetup — <a href=\"https://www.meetup.com/utah-elixir\" rel=\"nofollow\">https://www.meetup.com/utah-elixir</a><br>\nReact
    — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nSusumu
    Yamazaki on Twitter — <a href=\"https://twitter.com/zacky1972\" rel=\"nofollow\">https://twitter.com/zacky1972</a><br>\nDomain
    Modeling Made Functional — <a href=\"https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB\"
    rel=\"nofollow\">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>\nSlack
    — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nMongoDB
    — <a href=\"https://www.mongodb.com\" rel=\"nofollow\">https://www.mongodb.com</a><br>\nPostgreSQL
    — <a href=\"https://www.postgresql.org\" rel=\"nofollow\">https://www.postgresql.org</a><br>\nElixir
    Wizards Podcast — <a href=\"https://podcast.smartlogic.io\" rel=\"nofollow\">https://podcast.smartlogic.io</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guest: Sean Lewis.</p>\n      "
- title: Paul Schoenfelder and Hans Elias Josephsen on Lumen and Performance
  slug: s3e11-lumen
  link: https://smartlogic.io/podcast/elixir-wizards/s3e11-lumen
  guid: 5c493edc-c294-4fdd-b9f9-86a091800d96
  pubDate: Thu, 06 Feb 2020 06:00:00 -0500
  pubDateFriendly: February  6, 2020
  description: "In line with our current working-with-Elixir theme, today we’re talking
    about performance with Paul Schoenfelder and Hans Elias Josephsen from DockYard.
    The two have been working on Lumen, and in this episode, they discuss how this
    project is incorporated with WebAssembly, a binary instruction format that ultimately
    allows Elixir to be run in the browser and preserve the semantics of the language.
    Paul and Hans talk about the specific aspects of Lumen they are working on; the
    data flow and process of writing Elixir; and the compiler, interpreter and run-time
    functions involved. Joining in this conversation, you will also hear how they
    approached starting developing Lumen as a brand new compiler, researching, the
    aspects Paul wanted to tackle first, and when users can expect Lumen to be released.
    We also talk about the performance concerns they encountered along the way, the
    many reasons why Rust was their programming language of choice, and their thoughts
    on generic associated types in Rust. \nKey Points From This Episode:\n• How Paul
    and Hans got introduced to Elixir and working for DockYard.\n• An overview of
    what Lumen is and how it relates to WebAssembly. \n• WebAssembly code to run Elixir
    in the browser and preserve the semantics of the language. \n• The different aspects
    of the Lumen project that Paul and Hans are involved in. \n• The data flow and
    process when writing Elixir and how the compiler function features.\n• Taking
    advantage of optimizations that can be performed on the code that is generated.
    \n• An explanation of the interpreter and run-time parts of the project. \n• How
    they approached the major task of starting with a brand new compiler. \n• The
    process of researching and why Paul wanted to get a frontend in place first. \n•
    The production readiness of Lumen and when they expect to release it. \n• Performance
    concerns they encountered during development. \n• The relevance of code size for
    the WebAssembly backend to be usable.  \n• Why Rust was the best choice for building
    the compiler. \n• Using Elixir to generate a standard binary that can run on any
    machine. \n• A description of generic associated types in Rust and why they are
    controversial. \nLinks Mentioned in Today’s Episode:\nPaul Schoenfelder on LinkedIn
    — https://www.linkedin.com/in/gotbones/\nPaul Schoenfelder on Twitter — https://twitter.com/gotbones?lang=en\nHans
    Elias Josephsen on Twitter — https://twitter.com/hansihe\nDockYard — https://dockyard.com\nElixir
    — https://elixir-lang.org\nWebAssembly — https://webassembly.org\nRust — https://www.rust-lang.org\nJavaScript
    — https://www.javascript.com\nC++ — http://www.cplusplus.com\nSmartLogic — https://smartlogic.io/
    \n Special Guests: Hans Elias Josephsen and Paul Schoenfelder.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+p3SQItBs
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5c493edc-c294-4fdd-b9f9-86a091800d96.mp3
    length: '75674955'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Paul Schoenfelder and Hans Elias Josephsen from DockYard have been working
      on Lumen, and in this episode, we discuss how this project is incorporated with
      WebAssembly, a binary instruction format that ultimately allows Elixir to be
      run in the browser and preserve the semantics of the language. We talk specifics
      - the data flow and process of writing Elixir, the compiler, interpreter, and
      run-time functions involved, Rust as the programming language of choice, and
      when users can expect Lumen to be released.
    duration: '51:59'
    explicit: 'no'
    keywords: elixir, lumen, rust
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5c493edc-c294-4fdd-b9f9-86a091800d96/cover.jpg?v=2
    summary: "\n        <p>In line with our current working-with-Elixir theme, today
      we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen
      from DockYard. The two have been working on Lumen, and in this episode, they
      discuss how this project is incorporated with WebAssembly, a binary instruction
      format that ultimately allows Elixir to be run in the browser and preserve the
      semantics of the language. Paul and Hans talk about the specific aspects of
      Lumen they are working on; the data flow and process of writing Elixir; and
      the compiler, interpreter and run-time functions involved. Joining in this conversation,
      you will also hear how they approached starting developing Lumen as a brand
      new compiler, researching, the aspects Paul wanted to tackle first, and when
      users can expect Lumen to be released. We also talk about the performance concerns
      they encountered along the way, the many reasons why Rust was their programming
      language of choice, and their thoughts on generic associated types in Rust.
      </p>\n\n<p>Key Points From This Episode:</p>\n\n<p>• How Paul and Hans got introduced
      to Elixir and working for DockYard.<br>\n• An overview of what Lumen is and
      how it relates to WebAssembly. <br>\n• WebAssembly code to run Elixir in the
      browser and preserve the semantics of the language. <br>\n• The different aspects
      of the Lumen project that Paul and Hans are involved in. <br>\n• The data flow
      and process when writing Elixir and how the compiler function features.<br>\n•
      Taking advantage of optimizations that can be performed on the code that is
      generated. <br>\n• An explanation of the interpreter and run-time parts of the
      project. <br>\n• How they approached the major task of starting with a brand
      new compiler. <br>\n• The process of researching and why Paul wanted to get
      a frontend in place first. <br>\n• The production readiness of Lumen and when
      they expect to release it. <br>\n• Performance concerns they encountered during
      development. <br>\n• The relevance of code size for the WebAssembly backend
      to be usable.<br><br>\n• Why Rust was the best choice for building the compiler.
      <br>\n• Using Elixir to generate a standard binary that can run on any machine.
      <br>\n• A description of generic associated types in Rust and why they are controversial.
      </p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Paul Schoenfelder on
      LinkedIn — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nPaul
      Schoenfelder on Twitter — <a href=\"https://twitter.com/gotbones?lang=en\" rel=\"nofollow\">https://twitter.com/gotbones?lang=en</a><br>\nHans
      Elias Josephsen on Twitter — <a href=\"https://twitter.com/hansihe\" rel=\"nofollow\">https://twitter.com/hansihe</a><br>\nDockYard
      — <a href=\"https://dockyard.com\" rel=\"nofollow\">https://dockyard.com</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nWebAssembly
      — <a href=\"https://webassembly.org\" rel=\"nofollow\">https://webassembly.org</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nC++
      — <a href=\"http://www.cplusplus.com\" rel=\"nofollow\">http://www.cplusplus.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>\n      "
  contentEncoded: "\n        <p>In line with our current working-with-Elixir theme,
    today we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen
    from DockYard. The two have been working on Lumen, and in this episode, they discuss
    how this project is incorporated with WebAssembly, a binary instruction format
    that ultimately allows Elixir to be run in the browser and preserve the semantics
    of the language. Paul and Hans talk about the specific aspects of Lumen they are
    working on; the data flow and process of writing Elixir; and the compiler, interpreter
    and run-time functions involved. Joining in this conversation, you will also hear
    how they approached starting developing Lumen as a brand new compiler, researching,
    the aspects Paul wanted to tackle first, and when users can expect Lumen to be
    released. We also talk about the performance concerns they encountered along the
    way, the many reasons why Rust was their programming language of choice, and their
    thoughts on generic associated types in Rust. </p>\n\n<p>Key Points From This
    Episode:</p>\n\n<p>• How Paul and Hans got introduced to Elixir and working for
    DockYard.<br>\n• An overview of what Lumen is and how it relates to WebAssembly.
    <br>\n• WebAssembly code to run Elixir in the browser and preserve the semantics
    of the language. <br>\n• The different aspects of the Lumen project that Paul
    and Hans are involved in. <br>\n• The data flow and process when writing Elixir
    and how the compiler function features.<br>\n• Taking advantage of optimizations
    that can be performed on the code that is generated. <br>\n• An explanation of
    the interpreter and run-time parts of the project. <br>\n• How they approached
    the major task of starting with a brand new compiler. <br>\n• The process of researching
    and why Paul wanted to get a frontend in place first. <br>\n• The production readiness
    of Lumen and when they expect to release it. <br>\n• Performance concerns they
    encountered during development. <br>\n• The relevance of code size for the WebAssembly
    backend to be usable.<br><br>\n• Why Rust was the best choice for building the
    compiler. <br>\n• Using Elixir to generate a standard binary that can run on any
    machine. <br>\n• A description of generic associated types in Rust and why they
    are controversial. </p>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Paul
    Schoenfelder on LinkedIn — <a href=\"https://www.linkedin.com/in/gotbones/\" rel=\"nofollow\">https://www.linkedin.com/in/gotbones/</a><br>\nPaul
    Schoenfelder on Twitter — <a href=\"https://twitter.com/gotbones?lang=en\" rel=\"nofollow\">https://twitter.com/gotbones?lang=en</a><br>\nHans
    Elias Josephsen on Twitter — <a href=\"https://twitter.com/hansihe\" rel=\"nofollow\">https://twitter.com/hansihe</a><br>\nDockYard
    — <a href=\"https://dockyard.com\" rel=\"nofollow\">https://dockyard.com</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nWebAssembly
    — <a href=\"https://webassembly.org\" rel=\"nofollow\">https://webassembly.org</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nC++
    — <a href=\"http://www.cplusplus.com\" rel=\"nofollow\">http://www.cplusplus.com</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>\n      "
- title: Sophie DeBenedetto and Meryl Dakin on Training and Building Elixir Projects
    Under Constraints
  slug: s3e10-debenedetto-dakin
  link: https://smartlogic.io/podcast/elixir-wizards/s3e10-debenedetto-dakin
  guid: 37d41249-7185-40c3-a4c3-3d761103ed16
  pubDate: Thu, 30 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 30, 2020
  description: "Today on the show we are joined by Sophie DeBenedetto from GitHub
    and Meryl Dakin from Frame.io to talk about the processes involved in training
    others and building Elixir projects. They share about studying and working together
    at the Flatiron School and what they do now in their respective new roles at Github
    and Frame.io. During their time at Flatiron, they worked on various projects,
    often collaborating with engineering teams from other companies and having to
    train these team members in Elixir. They talk about how they managed to develop
    new features while simultaneously onboarding new people and getting everyone on
    the same page. For them, the pair programming model had been most beneficial,
    and they discuss the habits and practices they implemented to encourage team members,
    optimize each learning experience, and share knowledge during training events.
    Sophie and Meryl also share the Elixir-specific challenges they encountered while
    developing applications for 2U, how Elixir’s failure-first programming capability
    guided them, how they prepare for training workshops, and the productivity hacks
    that keep them focused and energized. \nKey Points From This Episode:\n• How Sophie
    and Meryl know each other from working and studying at the Flatiron School. \n•
    Frame.io as a tool that facilitates the communication between video editors and
    clients. \n• Meryl’s new role as a full-stack developer working with Elixir and
    React. \n• The projects they worked on at Flatiron and partnering with various
    companies like 2U. \n• Their secret to developing new features while also introducing
    new team members to Elixir.  \n• The benefits of pair programming and teaching
    a programming language to others. \n• Reserving time to celebrate wins and knowledge
    share during training events. \n• Key lessons they learned from their collaboration
    with the 2U team. \n• Elixir-specific challenges during the development of the
    applications project with 2U. \n• How Elixir’s failure-first programming capability
    ultimately helps developers. \n• Sophie and Meryl’s experience using LiveView
    at Flatiron and the problems encountered. \n• The work that went into preparing
    for training workshops. \n• Advice for teaching someone who is not technical to
    become a working developer.\n• Productivity hacks to stay focused and regain energy.
    \nLinks Mentioned in Today’s Episode:\nSophie DeBenedetto on LinkedIn — https://www.linkedin.com/in/sophiedebenedetto/\nSophie
    DeBenedetto on Twitter — https://twitter.com/sm_debenedetto\nMeryl Dakin in LinkedIn
    — https://www.linkedin.com/in/meryldakin/\nMeryl Dakin on Twitter — https://twitter.com/meryldakin\nEric
    Oestrich — https://oestrich.org\nFrame.io — https://frame.io\nGitHub — https://github.com\nFlatiron
    School — https://flatironschool.com\nElixir — https://elixir-lang.org\nReact —
    https://reactjs.org\n2U — https://2u.com\nKubernetes — https://kubernetes.io\nRuby
    — https://www.ruby-lang.org/en/\nElixir School — https://elixirschool.com/en/\nDrawing
    on the Right Side of the Brain — https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\nEtsy
    — https://www.etsy.com\nEMPEX NYC Conference — https://empex.co/nyc.html\nSmartLogic
    — https://smartlogic.io/ \n Special Guests: Meryl Dakin and Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vvRIuKz3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37d41249-7185-40c3-a4c3-3d761103ed16.mp3
    length: '65953230'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io talk about
      specific ways to develop new features while simultaneously managing team members
      and other projects. We discuss Elixir-specific challenges encountered while
      developing applications for 2U, how Elixir’s failure-first programming capability
      guided them, how they prepare for training workshops, and the productivity hacks
      that keep them focused and energized. '
    duration: '45:12'
    explicit: 'no'
    keywords: elixir, 2U,Frame.io,github
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37d41249-7185-40c3-a4c3-3d761103ed16/cover.jpg?v=2
    summary: "\n        <p>Today on the show we are joined by Sophie DeBenedetto from
      GitHub and Meryl Dakin from Frame.io to talk about the processes involved in
      training others and building Elixir projects. They share about studying and
      working together at the Flatiron School and what they do now in their respective
      new roles at Github and Frame.io. During their time at Flatiron, they worked
      on various projects, often collaborating with engineering teams from other companies
      and having to train these team members in Elixir. They talk about how they managed
      to develop new features while simultaneously onboarding new people and getting
      everyone on the same page. For them, the pair programming model had been most
      beneficial, and they discuss the habits and practices they implemented to encourage
      team members, optimize each learning experience, and share knowledge during
      training events. Sophie and Meryl also share the Elixir-specific challenges
      they encountered while developing applications for 2U, how Elixir’s failure-first
      programming capability guided them, how they prepare for training workshops,
      and the productivity hacks that keep them focused and energized. </p>\n\n<p>Key
      Points From This Episode:</p>\n\n<p>• How Sophie and Meryl know each other from
      working and studying at the Flatiron School. <br>\n• Frame.io as a tool that
      facilitates the communication between video editors and clients. <br>\n• Meryl’s
      new role as a full-stack developer working with Elixir and React. <br>\n• The
      projects they worked on at Flatiron and partnering with various companies like
      2U. <br>\n• Their secret to developing new features while also introducing new
      team members to Elixir.<br><br>\n• The benefits of pair programming and teaching
      a programming language to others. <br>\n• Reserving time to celebrate wins and
      knowledge share during training events. <br>\n• Key lessons they learned from
      their collaboration with the 2U team. <br>\n• Elixir-specific challenges during
      the development of the applications project with 2U. <br>\n• How Elixir’s failure-first
      programming capability ultimately helps developers. <br>\n• Sophie and Meryl’s
      experience using LiveView at Flatiron and the problems encountered. <br>\n•
      The work that went into preparing for training workshops. <br>\n• Advice for
      teaching someone who is not technical to become a working developer.<br>\n•
      Productivity hacks to stay focused and regain energy. </p>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
      rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
      DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
      Dakin in LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
      Dakin on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nEric
      Oestrich — <a href=\"https://oestrich.org\" rel=\"nofollow\">https://oestrich.org</a><br>\nFrame.io
      — <a href=\"https://frame.io\" rel=\"nofollow\">https://frame.io</a><br>\nGitHub
      — <a href=\"https://github.com\" rel=\"nofollow\">https://github.com</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com\" rel=\"nofollow\">https://flatironschool.com</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nReact
      — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\n2U
      — <a href=\"https://2u.com\" rel=\"nofollow\">https://2u.com</a><br>\nKubernetes
      — <a href=\"https://kubernetes.io\" rel=\"nofollow\">https://kubernetes.io</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nDrawing
      on the Right Side of the Brain — <a href=\"https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\"
      rel=\"nofollow\">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>\nEtsy
      — <a href=\"https://www.etsy.com\" rel=\"nofollow\">https://www.etsy.com</a><br>\nEMPEX
      NYC Conference — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we are joined by Sophie DeBenedetto
    from GitHub and Meryl Dakin from Frame.io to talk about the processes involved
    in training others and building Elixir projects. They share about studying and
    working together at the Flatiron School and what they do now in their respective
    new roles at Github and Frame.io. During their time at Flatiron, they worked on
    various projects, often collaborating with engineering teams from other companies
    and having to train these team members in Elixir. They talk about how they managed
    to develop new features while simultaneously onboarding new people and getting
    everyone on the same page. For them, the pair programming model had been most
    beneficial, and they discuss the habits and practices they implemented to encourage
    team members, optimize each learning experience, and share knowledge during training
    events. Sophie and Meryl also share the Elixir-specific challenges they encountered
    while developing applications for 2U, how Elixir’s failure-first programming capability
    guided them, how they prepare for training workshops, and the productivity hacks
    that keep them focused and energized. </p>\n\n<p>Key Points From This Episode:</p>\n\n<p>•
    How Sophie and Meryl know each other from working and studying at the Flatiron
    School. <br>\n• Frame.io as a tool that facilitates the communication between
    video editors and clients. <br>\n• Meryl’s new role as a full-stack developer
    working with Elixir and React. <br>\n• The projects they worked on at Flatiron
    and partnering with various companies like 2U. <br>\n• Their secret to developing
    new features while also introducing new team members to Elixir.<br><br>\n• The
    benefits of pair programming and teaching a programming language to others. <br>\n•
    Reserving time to celebrate wins and knowledge share during training events. <br>\n•
    Key lessons they learned from their collaboration with the 2U team. <br>\n• Elixir-specific
    challenges during the development of the applications project with 2U. <br>\n•
    How Elixir’s failure-first programming capability ultimately helps developers.
    <br>\n• Sophie and Meryl’s experience using LiveView at Flatiron and the problems
    encountered. <br>\n• The work that went into preparing for training workshops.
    <br>\n• Advice for teaching someone who is not technical to become a working developer.<br>\n•
    Productivity hacks to stay focused and regain energy. </p>\n\n<p>Links Mentioned
    in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto on LinkedIn — <a href=\"https://www.linkedin.com/in/sophiedebenedetto/\"
    rel=\"nofollow\">https://www.linkedin.com/in/sophiedebenedetto/</a><br>\nSophie
    DeBenedetto on Twitter — <a href=\"https://twitter.com/sm_debenedetto\" rel=\"nofollow\">https://twitter.com/sm_debenedetto</a><br>\nMeryl
    Dakin in LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
    Dakin on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nEric
    Oestrich — <a href=\"https://oestrich.org\" rel=\"nofollow\">https://oestrich.org</a><br>\nFrame.io
    — <a href=\"https://frame.io\" rel=\"nofollow\">https://frame.io</a><br>\nGitHub
    — <a href=\"https://github.com\" rel=\"nofollow\">https://github.com</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com\" rel=\"nofollow\">https://flatironschool.com</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nReact
    — <a href=\"https://reactjs.org\" rel=\"nofollow\">https://reactjs.org</a><br>\n2U
    — <a href=\"https://2u.com\" rel=\"nofollow\">https://2u.com</a><br>\nKubernetes
    — <a href=\"https://kubernetes.io\" rel=\"nofollow\">https://kubernetes.io</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nElixir
    School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nDrawing
    on the Right Side of the Brain — <a href=\"https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201\"
    rel=\"nofollow\">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>\nEtsy
    — <a href=\"https://www.etsy.com\" rel=\"nofollow\">https://www.etsy.com</a><br>\nEMPEX
    NYC Conference — <a href=\"https://empex.co/nyc.html\" rel=\"nofollow\">https://empex.co/nyc.html</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>\n      "
- title: Brooklyn Zelenka on Functional Programming
  slug: s3e9-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka
  guid: 590ef7b4-3a91-4c74-9325-2568d7adecdb
  pubDate: Thu, 23 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 23, 2020
  description: "In today’s episode we have one of our favorite recurring guests, Brooklyn
    Zelenka, joining us once again! Brooklyn has been on the show in both the first
    and second seasons to speak about Elixir and functional programming. In those
    conversations, it came up that this topic is far from exhausted, and since Season
    3's theme is working with Elixir, we thought it would be great to have Brooklyn
    on for a third time. Today, Brooklyn does not speak to Elixir specifically though,
    but on functional programming more broadly. Fission, her company which is working
    on developing next-generation hostless apps, actually uses Haskel, but Brooklyn
    has a ton of experience across the board. She gives us some great insights into
    what makes the functional versus OOP paradigm great and helps us to understand
    some of the inner workings of both worlds, talking about abstraction, application,
    data orientation, and more. Interestingly, Brooklyn does employ some imperative
    programming in her company through the use of Typescript, but uses a functional
    style to get around the context switch. We spend some time toward the end of the
    show digging deeper into macros, and Brooklyn helps to revise understandings of
    them as code which writes more code as well as clarifies the term 'homoiconic'
    as it relates to ASTs. Brooklyn covers a whole lot more today so hop on for a
    deep dive into functional programming with today's great guest.\nKey Points From
    This Episode:\n• Why Brooklyn uses FPE: it can be reused and reasoned about.\n•
    Two things that functions provide: abstraction and application.\n• Data orientation
    and hiding information: imperative vs functional paradigms.\n• Understanding imperative
    programming: it’s less structured and hard to reason about.\n• Challenges experienced
    imperative programmers face with functional programming.\n• Differences between
    Elixir, Erlang, Haskel, Elm, and Clojure.\n• Using Clojure: tradeoffs, distinctions,
    tooling, flexibility, and compatibility with Java.\n• The language Brooklyn could
    use if only one existed: Racket.\n• Bridging functional and imperative paradigms
    through disciplined use of style.\n• Segfaults in Haskell related to its compatibility
    with lib C.\n• How to use Musl instead of lib C by employing docker files.\n•
    Algebraic types and why static types aren’t hindrances in functional languages.\n•
    Preferences for tests or proofs and their role in finding types valuable.\n• Macros
    as compile-time functions that are difficult to debug.\n• A definition of a ‘homoiconic’:
    high-level syntax which represents the AST.\n• What makes C macros different from
    Lisp ones.\n• Architecture in Elixir and the need for a more user-friendly Haskell.\nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nBrooklyn
    Zelenka on LinkedIn — https://www.linkedin.com/in/brooklynzelenka/\nFission —
    https://fission.codes/\nSeven Languages in Seven Weeks — https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\nChris
    Keathley — https://keathley.io/\nHackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\nPaul
    Graham — http://www.paulgraham.com/\n Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+P6UbhHVA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/590ef7b4-3a91-4c74-9325-2568d7adecdb.mp3
    length: '57610524'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: In today’s episode we have one of our favorite recurring guests, Brooklyn
      Zelenka, joining us once again! Brooklyn has been on the show in both the first
      and second seasons to speak about Elixir and functional programming. In those
      conversations, it came up that this topic is far from exhausted, and since Season
      3's theme is working with Elixir, we thought it would be great to have Brooklyn
      on for a third time. Today, Brooklyn does not speak to Elixir specifically though,
      but on functional programming more broadly.
    duration: '39:26'
    explicit: 'no'
    keywords: elixir, phoenix, fission
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/590ef7b4-3a91-4c74-9325-2568d7adecdb/cover.jpg?v=2
    summary: "\n        <p>In today’s episode we have one of our favorite recurring
      guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show
      in both the first and second seasons to speak about Elixir and functional programming.
      In those conversations, it came up that this topic is far from exhausted, and
      since Season 3&#39;s theme is working with Elixir, we thought it would be great
      to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir
      specifically though, but on functional programming more broadly. Fission, her
      company which is working on developing next-generation hostless apps, actually
      uses Haskel, but Brooklyn has a ton of experience across the board. She gives
      us some great insights into what makes the functional versus OOP paradigm great
      and helps us to understand some of the inner workings of both worlds, talking
      about abstraction, application, data orientation, and more. Interestingly, Brooklyn
      does employ some imperative programming in her company through the use of Typescript,
      but uses a functional style to get around the context switch. We spend some
      time toward the end of the show digging deeper into macros, and Brooklyn helps
      to revise understandings of them as code which writes more code as well as clarifies
      the term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole
      lot more today so hop on for a deep dive into functional programming with today&#39;s
      great guest.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>•
      Why Brooklyn uses FPE: it can be reused and reasoned about.<br>\n• Two things
      that functions provide: abstraction and application.<br>\n• Data orientation
      and hiding information: imperative vs functional paradigms.<br>\n• Understanding
      imperative programming: it’s less structured and hard to reason about.<br>\n•
      Challenges experienced imperative programmers face with functional programming.<br>\n•
      Differences between Elixir, Erlang, Haskel, Elm, and Clojure.<br>\n• Using Clojure:
      tradeoffs, distinctions, tooling, flexibility, and compatibility with Java.<br>\n•
      The language Brooklyn could use if only one existed: Racket.<br>\n• Bridging
      functional and imperative paradigms through disciplined use of style.<br>\n•
      Segfaults in Haskell related to its compatibility with lib C.<br>\n• How to
      use Musl instead of lib C by employing docker files.<br>\n• Algebraic types
      and why static types aren’t hindrances in functional languages.<br>\n• Preferences
      for tests or proofs and their role in finding types valuable.<br>\n• Macros
      as compile-time functions that are difficult to debug.<br>\n• A definition of
      a ‘homoiconic’: high-level syntax which represents the AST.<br>\n• What makes
      C macros different from Lisp ones.<br>\n• Architecture in Elixir and the need
      for a more user-friendly Haskell.</p>\n\n<p><strong>Links Mentioned in Today’s
      Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBrooklyn Zelenka on LinkedIn
      — <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nFission
      — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nSeven
      Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
      rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nHackers
      and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
      rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nPaul
      Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a></p><p>Special
      Guest: Brooklyn Zelenka.</p>\n      "
  contentEncoded: "\n        <p>In today’s episode we have one of our favorite recurring
    guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show
    in both the first and second seasons to speak about Elixir and functional programming.
    In those conversations, it came up that this topic is far from exhausted, and
    since Season 3&#39;s theme is working with Elixir, we thought it would be great
    to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir
    specifically though, but on functional programming more broadly. Fission, her
    company which is working on developing next-generation hostless apps, actually
    uses Haskel, but Brooklyn has a ton of experience across the board. She gives
    us some great insights into what makes the functional versus OOP paradigm great
    and helps us to understand some of the inner workings of both worlds, talking
    about abstraction, application, data orientation, and more. Interestingly, Brooklyn
    does employ some imperative programming in her company through the use of Typescript,
    but uses a functional style to get around the context switch. We spend some time
    toward the end of the show digging deeper into macros, and Brooklyn helps to revise
    understandings of them as code which writes more code as well as clarifies the
    term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole lot more
    today so hop on for a deep dive into functional programming with today&#39;s great
    guest.</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>• Why
    Brooklyn uses FPE: it can be reused and reasoned about.<br>\n• Two things that
    functions provide: abstraction and application.<br>\n• Data orientation and hiding
    information: imperative vs functional paradigms.<br>\n• Understanding imperative
    programming: it’s less structured and hard to reason about.<br>\n• Challenges
    experienced imperative programmers face with functional programming.<br>\n• Differences
    between Elixir, Erlang, Haskel, Elm, and Clojure.<br>\n• Using Clojure: tradeoffs,
    distinctions, tooling, flexibility, and compatibility with Java.<br>\n• The language
    Brooklyn could use if only one existed: Racket.<br>\n• Bridging functional and
    imperative paradigms through disciplined use of style.<br>\n• Segfaults in Haskell
    related to its compatibility with lib C.<br>\n• How to use Musl instead of lib
    C by employing docker files.<br>\n• Algebraic types and why static types aren’t
    hindrances in functional languages.<br>\n• Preferences for tests or proofs and
    their role in finding types valuable.<br>\n• Macros as compile-time functions
    that are difficult to debug.<br>\n• A definition of a ‘homoiconic’: high-level
    syntax which represents the AST.<br>\n• What makes C macros different from Lisp
    ones.<br>\n• Architecture in Elixir and the need for a more user-friendly Haskell.</p>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nBrooklyn Zelenka on LinkedIn
    — <a href=\"https://www.linkedin.com/in/brooklynzelenka/\" rel=\"nofollow\">https://www.linkedin.com/in/brooklynzelenka/</a><br>\nFission
    — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nSeven
    Languages in Seven Weeks — <a href=\"https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X\"
    rel=\"nofollow\">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>\nChris
    Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nHackers
    and Painters — <a href=\"https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554\"
    rel=\"nofollow\">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>\nPaul
    Graham — <a href=\"http://www.paulgraham.com/\" rel=\"nofollow\">http://www.paulgraham.com/</a></p><p>Special
    Guest: Brooklyn Zelenka.</p>\n      "
- title: Bruce and Maggie Tate from Groxio on Training
  slug: s3e8-groxio
  link: https://smartlogic.io/podcast/elixir-wizards/s3e8-groxio
  guid: f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b
  pubDate: Thu, 16 Jan 2020 06:00:00 -0500
  pubDateFriendly: January 16, 2020
  description: "Groxio is a great platform that allows programmers to learn new languages
    easily and broaden their horizons. Our guests today are the team behind Groxio,
    Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics
    of what they do, from how they got into the Elixir world and founded Groxio to
    the conferences they run and the books they have published. We also talk about
    the benefits of learning multiple languages and Bruce makes a strong argument
    for the influence that smaller coding languages have had on his Elixir skills.
    Maggie and Bruce open up about having a professional and personal partnership
    and how they manage their marriage and businesses side by side. To finish off
    we hear about all the exciting things to expect at the Lonestar Conference this
    year and how it is going to be even better than last year's!\nKey Points From
    This Episode:\n• Bruce and Maggie's background in Elixir and how they started
    Groxio. \n• What sets Groxio apart from similar technical education companies.
    \ \n• The inspiration that Bruce got from the Crystal and Pony languages.\n• How
    curiosity and dopamine are linked; following new and interesting pathways. \n•
    Maggie and Bruce's personal and professional partnership and how they manage it.
    \n• The Elixir books that still need to be written and under-appreciated published
    ones.\n• A guide to Bruce's books and which to read for particular applications.
    \n• Running a conference; the stressful and fun parts for Maggie and Bruce.\n•
    Aspirations for the conferences and what to expect at this year's events. \n•
    Exciting speakers that will be appearing at the Lone Star Conference. \n• The
    controversy around the new Lone Star bat logo! \n• A few special plugs from our
    guests for things they are passionate about.\nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://smartlogic.io/ \nBruce and Maggie Tate — https://grox.io/about\nBruce
    Tate on Twitter — https://twitter.com/redrapids\nMaggie Tate on Twitter — https://twitter.com/gardenertate\nGroxio
    — https://grox.io/\nGig City Elixir — https://www.gigcityelixir.com/\nLone Star
    Elixir — https://lonestarelixir.com/\nCrystal — https://crystal-lang.org/\nPony
    — https://www.ponylang.io/\nJoe Armstrong — https://joearms.github.io/\nElixir
    in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\nDesigning
    Elixir Systems — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\nAndrea
    Leopardi — https://confengine.com/user/andrea-leopardi\n Special Guests: Bruce
    Tate and Maggie Tate.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+6Uk0QuoV
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b.mp3
    length: '55994278'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'Groxio is a great platform that allows programmers to learn new languages
      easily and broaden their horizons. Our guests today are the team behind Groxio,
      Bruce and Maggie Tate! In our discussion, we cover the basics and the not so
      basics of what they do, from how they got into the Elixir world and founded
      Groxio to the conferences they run and the books they have published. '
    duration: '38:04'
    explicit: 'no'
    keywords: elixir, phoenix, groxio, lonestar elixir
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b/cover.jpg?v=2
    summary: "\n        <p>Groxio is a great platform that allows programmers to learn
      new languages easily and broaden their horizons. Our guests today are the team
      behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics
      and the not so basics of what they do, from how they got into the Elixir world
      and founded Groxio to the conferences they run and the books they have published.
      We also talk about the benefits of learning multiple languages and Bruce makes
      a strong argument for the influence that smaller coding languages have had on
      his Elixir skills. Maggie and Bruce open up about having a professional and
      personal partnership and how they manage their marriage and businesses side
      by side. To finish off we hear about all the exciting things to expect at the
      Lonestar Conference this year and how it is going to be even better than last
      year&#39;s!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<p>•
      Bruce and Maggie&#39;s background in Elixir and how they started Groxio. <br>\n•
      What sets Groxio apart from similar technical education companies.<br><br>\n•
      The inspiration that Bruce got from the Crystal and Pony languages.<br>\n• How
      curiosity and dopamine are linked; following new and interesting pathways. <br>\n•
      Maggie and Bruce&#39;s personal and professional partnership and how they manage
      it. <br>\n• The Elixir books that still need to be written and under-appreciated
      published ones.<br>\n• A guide to Bruce&#39;s books and which to read for particular
      applications. <br>\n• Running a conference; the stressful and fun parts for
      Maggie and Bruce.<br>\n• Aspirations for the conferences and what to expect
      at this year&#39;s events. <br>\n• Exciting speakers that will be appearing
      at the Lone Star Conference. <br>\n• The controversy around the new Lone Star
      bat logo! <br>\n• A few special plugs from our guests for things they are passionate
      about.</p>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nBruce and Maggie Tate — <a href=\"https://grox.io/about\" rel=\"nofollow\">https://grox.io/about</a><br>\nBruce
      Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
      Tate on Twitter — <a href=\"https://twitter.com/gardenertate\" rel=\"nofollow\">https://twitter.com/gardenertate</a><br>\nGroxio
      — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nGig
      City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nLone
      Star Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nCrystal
      — <a href=\"https://crystal-lang.org/\" rel=\"nofollow\">https://crystal-lang.org/</a><br>\nPony
      — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nJoe
      Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nElixir
      in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
      rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nDesigning
      Elixir Systems — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
      rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nAndrea
      Leopardi — <a href=\"https://confengine.com/user/andrea-leopardi\" rel=\"nofollow\">https://confengine.com/user/andrea-leopardi</a></p><p>Special
      Guests: Bruce Tate and Maggie Tate.</p>\n      "
  contentEncoded: "\n        <p>Groxio is a great platform that allows programmers
    to learn new languages easily and broaden their horizons. Our guests today are
    the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the
    basics and the not so basics of what they do, from how they got into the Elixir
    world and founded Groxio to the conferences they run and the books they have published.
    We also talk about the benefits of learning multiple languages and Bruce makes
    a strong argument for the influence that smaller coding languages have had on
    his Elixir skills. Maggie and Bruce open up about having a professional and personal
    partnership and how they manage their marriage and businesses side by side. To
    finish off we hear about all the exciting things to expect at the Lonestar Conference
    this year and how it is going to be even better than last year&#39;s!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<p>• Bruce and Maggie&#39;s background
    in Elixir and how they started Groxio. <br>\n• What sets Groxio apart from similar
    technical education companies.<br><br>\n• The inspiration that Bruce got from
    the Crystal and Pony languages.<br>\n• How curiosity and dopamine are linked;
    following new and interesting pathways. <br>\n• Maggie and Bruce&#39;s personal
    and professional partnership and how they manage it. <br>\n• The Elixir books
    that still need to be written and under-appreciated published ones.<br>\n• A guide
    to Bruce&#39;s books and which to read for particular applications. <br>\n• Running
    a conference; the stressful and fun parts for Maggie and Bruce.<br>\n• Aspirations
    for the conferences and what to expect at this year&#39;s events. <br>\n• Exciting
    speakers that will be appearing at the Lone Star Conference. <br>\n• The controversy
    around the new Lone Star bat logo! <br>\n• A few special plugs from our guests
    for things they are passionate about.</p>\n\n<p><strong>Links Mentioned in Today’s
    Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nBruce and Maggie Tate — <a href=\"https://grox.io/about\" rel=\"nofollow\">https://grox.io/about</a><br>\nBruce
    Tate on Twitter — <a href=\"https://twitter.com/redrapids\" rel=\"nofollow\">https://twitter.com/redrapids</a><br>\nMaggie
    Tate on Twitter — <a href=\"https://twitter.com/gardenertate\" rel=\"nofollow\">https://twitter.com/gardenertate</a><br>\nGroxio
    — <a href=\"https://grox.io/\" rel=\"nofollow\">https://grox.io/</a><br>\nGig
    City Elixir — <a href=\"https://www.gigcityelixir.com/\" rel=\"nofollow\">https://www.gigcityelixir.com/</a><br>\nLone
    Star Elixir — <a href=\"https://lonestarelixir.com/\" rel=\"nofollow\">https://lonestarelixir.com/</a><br>\nCrystal
    — <a href=\"https://crystal-lang.org/\" rel=\"nofollow\">https://crystal-lang.org/</a><br>\nPony
    — <a href=\"https://www.ponylang.io/\" rel=\"nofollow\">https://www.ponylang.io/</a><br>\nJoe
    Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nElixir
    in Action — <a href=\"https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X\"
    rel=\"nofollow\">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>\nDesigning
    Elixir Systems — <a href=\"https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/\"
    rel=\"nofollow\">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>\nAndrea
    Leopardi — <a href=\"https://confengine.com/user/andrea-leopardi\" rel=\"nofollow\">https://confengine.com/user/andrea-leopardi</a></p><p>Special
    Guests: Bruce Tate and Maggie Tate.</p>\n      "
- title: Dan Ivovich from SmartLogic on Hiring and Training
  slug: s3e7-ivovich
  link: https://smartlogic.io/podcast/elixir-wizards/s3e7-ivovich
  guid: ea443f10-25a6-4570-9fe8-20e7f6624671
  pubDate: Thu, 09 Jan 2020 06:00:00 -0500
  pubDateFriendly: January  9, 2020
  description: "On today's show, we are joined by Dan Ivovich from our team here at
    SmartLogic! Dan is the Director of Development Operations and has already been
    a guest and cohost a few times on the show. Today we are talking about hiring
    and training and his experience with these tasks at the company and especially
    concerning Elixir. We discuss the challenges Dan has faced in recruiting and the
    ways in which SmartLogic has lined up resumes and possible candidates through
    events and meetups. Dan explains some of the difficulties that are common for
    programmers transitioning into Elixir and how the company approaches the tasks
    of onboarding and ongoing support. We also get into Dan's favorite resources and
    tools for staying abreast of Elixir and his recommendations for practices to learn
    fast as a newcomer before he explains how he thinks about continual learning and
    expanding his own skillset. The conversation finishes with some thoughts and reflections
    on functional programming from our guest, so make sure to tune in for all of that
    and more!\nKey Points From This Episode:\nDan's role at SmartLogic and how he
    leads the team. \nRecruiting new employees; collecting resumes and attending events.
    \nChallenges posed by recruiting good Elixir programmers and who to look for.
    \ \nSticking points for people transitioning into Elixir from other languages.
    \nThe stack at SmartLogic and the number of projects based in Elixir. \nOnboarding
    at the company; skills that are transferable to Elixir. \nProfessional development
    and ongoing support for team members. \nDan's favorite tools and resources for
    learning Elixir. \nContinual learning and Dan's strategies for growing his skillset.\nA
    simple definition of functional programming and Dan's early experiences with it.
    \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nDan
    Ivovich — https://www.danivovich.com/\nDan Ivovich on Twitter — https://twitter.com/danivovich\nElixirConf
    — https://elixirconf.com/events\nJava — https://www.java.com/\nRuby — https://www.ruby-lang.org/\nPython
    — https://www.python.org/\nRails — https://rubyonrails.org/\nRust — https://www.rust-lang.org/\nGO
    — https://golang.org/\nTwitch — https://www.twitch.tv/\nBruce Tate — https://codesync.global/speaker/bruce-tate/\nScala
    — https://www.scala-lang.org/ Special Guest: Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+HQLyl-6U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ea443f10-25a6-4570-9fe8-20e7f6624671.mp3
    length: '33899406'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'On today''s show, we are joined by Dan Ivovich from our team here at
      SmartLogic! Dan is the Director of Development Operations and has already been
      a guest and cohost a few times on the show. Today we are talking about hiring
      and training and his experience with these tasks at the company and especially
      concerning Elixir. '
    duration: '22:39'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ea443f10-25a6-4570-9fe8-20e7f6624671/cover.jpg?v=2
    summary: "\n        <p>On today&#39;s show, we are joined by Dan Ivovich from
      our team here at SmartLogic! Dan is the Director of Development Operations and
      has already been a guest and cohost a few times on the show. Today we are talking
      about hiring and training and his experience with these tasks at the company
      and especially concerning Elixir. We discuss the challenges Dan has faced in
      recruiting and the ways in which SmartLogic has lined up resumes and possible
      candidates through events and meetups. Dan explains some of the difficulties
      that are common for programmers transitioning into Elixir and how the company
      approaches the tasks of onboarding and ongoing support. We also get into Dan&#39;s
      favorite resources and tools for staying abreast of Elixir and his recommendations
      for practices to learn fast as a newcomer before he explains how he thinks about
      continual learning and expanding his own skillset. The conversation finishes
      with some thoughts and reflections on functional programming from our guest,
      so make sure to tune in for all of that and more!</p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>Dan&#39;s role at SmartLogic and
      how he leads the team. </li>\n<li>Recruiting new employees; collecting resumes
      and attending events. </li>\n<li>Challenges posed by recruiting good Elixir
      programmers and who to look for.<br></li>\n<li>Sticking points for people transitioning
      into Elixir from other languages. </li>\n<li>The stack at SmartLogic and the
      number of projects based in Elixir. </li>\n<li>Onboarding at the company; skills
      that are transferable to Elixir. </li>\n<li>Professional development and ongoing
      support for team members. </li>\n<li>Dan&#39;s favorite tools and resources
      for learning Elixir. </li>\n<li>Continual learning and Dan&#39;s strategies
      for growing his skillset.</li>\n<li>A simple definition of functional programming
      and Dan&#39;s early experiences with it. </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDan Ivovich — <a href=\"https://www.danivovich.com/\"
      rel=\"nofollow\">https://www.danivovich.com/</a><br>\nDan Ivovich on Twitter
      — <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nJava
      — <a href=\"https://www.java.com/\" rel=\"nofollow\">https://www.java.com/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/\" rel=\"nofollow\">https://www.ruby-lang.org/</a><br>\nPython
      — <a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a><br>\nRails
      — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nRust
      — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nGO
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nTwitch
      — <a href=\"https://www.twitch.tv/\" rel=\"nofollow\">https://www.twitch.tv/</a><br>\nBruce
      Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nScala
      — <a href=\"https://www.scala-lang.org/\" rel=\"nofollow\">https://www.scala-lang.org/</a></p><p>Special
      Guest: Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>On today&#39;s show, we are joined by Dan Ivovich
    from our team here at SmartLogic! Dan is the Director of Development Operations
    and has already been a guest and cohost a few times on the show. Today we are
    talking about hiring and training and his experience with these tasks at the company
    and especially concerning Elixir. We discuss the challenges Dan has faced in recruiting
    and the ways in which SmartLogic has lined up resumes and possible candidates
    through events and meetups. Dan explains some of the difficulties that are common
    for programmers transitioning into Elixir and how the company approaches the tasks
    of onboarding and ongoing support. We also get into Dan&#39;s favorite resources
    and tools for staying abreast of Elixir and his recommendations for practices
    to learn fast as a newcomer before he explains how he thinks about continual learning
    and expanding his own skillset. The conversation finishes with some thoughts and
    reflections on functional programming from our guest, so make sure to tune in
    for all of that and more!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Dan&#39;s
    role at SmartLogic and how he leads the team. </li>\n<li>Recruiting new employees;
    collecting resumes and attending events. </li>\n<li>Challenges posed by recruiting
    good Elixir programmers and who to look for.<br></li>\n<li>Sticking points for
    people transitioning into Elixir from other languages. </li>\n<li>The stack at
    SmartLogic and the number of projects based in Elixir. </li>\n<li>Onboarding at
    the company; skills that are transferable to Elixir. </li>\n<li>Professional development
    and ongoing support for team members. </li>\n<li>Dan&#39;s favorite tools and
    resources for learning Elixir. </li>\n<li>Continual learning and Dan&#39;s strategies
    for growing his skillset.</li>\n<li>A simple definition of functional programming
    and Dan&#39;s early experiences with it. </li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nDan Ivovich — <a href=\"https://www.danivovich.com/\"
    rel=\"nofollow\">https://www.danivovich.com/</a><br>\nDan Ivovich on Twitter —
    <a href=\"https://twitter.com/danivovich\" rel=\"nofollow\">https://twitter.com/danivovich</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nJava
    — <a href=\"https://www.java.com/\" rel=\"nofollow\">https://www.java.com/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/\" rel=\"nofollow\">https://www.ruby-lang.org/</a><br>\nPython
    — <a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a><br>\nRails
    — <a href=\"https://rubyonrails.org/\" rel=\"nofollow\">https://rubyonrails.org/</a><br>\nRust
    — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nGO
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nTwitch
    — <a href=\"https://www.twitch.tv/\" rel=\"nofollow\">https://www.twitch.tv/</a><br>\nBruce
    Tate — <a href=\"https://codesync.global/speaker/bruce-tate/\" rel=\"nofollow\">https://codesync.global/speaker/bruce-tate/</a><br>\nScala
    — <a href=\"https://www.scala-lang.org/\" rel=\"nofollow\">https://www.scala-lang.org/</a></p><p>Special
    Guest: Dan Ivovich.</p>\n      "
- title: Eric Meadows Jönsson on Hex and Working with Elixir
  slug: s3e6-jonsson
  link: https://smartlogic.io/podcast/elixir-wizards/s3e6-jonsson
  guid: ef0d105d-13f1-4803-8837-341f56782510
  pubDate: Thu, 02 Jan 2020 06:00:00 -0500
  pubDateFriendly: January  2, 2020
  description: "We are happy to be joined in this episode by Eric Meadows Jönsson,
    creator of the hexpm package manager, and an amazing resource who works tirelessly
    to build the Elixir community. Eric presently works at Brex and was part of the
    core team at Forza previously. In keeping with our current topic of all things
    working with Elixir, Eric takes a deep dive into the work he is doing to optimize
    various interfaces at Brex. He gives us the rundown on the static compile-time
    checking project he is working on, talking about his aims to build in different
    warnings and what we can expect from the new release in that regard. You’ll also
    hear about Eric’s journey learning Elixir and how he had to change his OOP mindset
    when he got introduced to functional programming at university. He shares the
    story behind hexpm and Mint, his thoughts about the future of Hex, and some of
    the processes around accessing the private repositories on its website. We also
    hear more about Eric’s hiring procedure while working at Forza, how he teaches
    functional programming to students at ElixirConf, and some of the major performance
    bottlenecks he experiences using Hex. Tap into the incredible resource that is
    Eric and hear more about how you can link with him online to learn further in
    the future by tuning in!\nKey Points From This Episode:\nJose Valim, the Ecto
    library, and Eric’s journey with Elixir since 2012 at a coding camp.\nEarly-stage
    static compile-time checks that Eric is adding to the compiler at Brex.\nWhether
    the static compile-time checks Eric is adding constitute a type system or not.\nStatic
    compile-time checks in the current system such as undefined function warnings.\nFeatures
    of the new static compile-time check release: refactored checks, etc.\nCurrently,
    these checks happen at compile-time, or when Elixir compiles into the byte code.\nWhether
    these checks will move into BEAM: currently it’s in Elixir and at an early stage.\nThe
    Erlang compiler already does type inference during compilation. \nEric’s Erlang
    proficiency and why he had to brush up on it through using Elixir.\nWhat makes
    Eric helpful with Hex: his debugging skills and availability to answer questions.\nHow
    Eric got started with Hex adding an intake for Git packages.\nThe story behind
    Hex regarding ties to Elixir and Devinus from Pool Boy.\nTodd’s perspective on
    Eric as a smart and nice mentor who sleeps very little.\nChanges that Eric sees
    happening in Elixir.\nHex will no longer support older Elixir versions so that
    it can enable better maintenance.\nAnother change will be a refactoring of the
    resolution version algorithm.\nSecurity-related updates that Todd has been working
    on.\nPrivate versus public repositories on the hex.pm website.\nHiring challenges
    at Forza and how Eric found the right team out of scarce people.\nEric looks for
    people who love being programmers and have a passion for learning.\nTactics Eric
    uses to train functional programming such as hosting ElixirConf workshops.\nImportant
    fundamentals in functional programming: using data structures to model data, etc.\nDifferences
    between functional and object-oriented programming: data vs classes.\nThe role
    of types in Eric coming to understand functional programming better.\nPerformance
    bottlenecks in Hex such as dependency resolution.\nHow every package manager/resolver
    compromises, exemplified by NPM and Rebar3.\nOrigins of Mint: wanting http2 support
    for Hex, and more.\nLinks Mentioned in Today’s Episode:\nSmartLogic — https://smartlogic.io/
    \nEric Meadows Jönsson on GitHub – https://github.com/ericmj\nEric Meadows Jönsson
    on Hexpm — https://hex.pm/users/ericmj\nBrex — https://brex.com/\nTodd Resudek
    on LinkedIn — https://www.linkedin.com/in/toddresudek\nJustus Eapen on LinkedIn
    — https://www.linkedin.com/in/justuseapen/\nEric Oestreich on LinkedIn — https://www.linkedin.com/in/eric-oestreich-8b55aab/\nhexpm
    on GitHub — https://github.com/hexpm\nGoogle Summer of Code — https://summerofcode.withgoogle.com/\nJose
    Valim on GitHib — https://github.com/josevalim\nPool Boy — https://github.com/devinus/poolboy\nDevin
    Alexander Torres — https://github.com/devinus\nVoitech — https://www.voitech.biz/\nHex
    — https://hex.pm/\nhexpm specifications — https://github.com/hexpm/specifications\nSlack
    — https://slack.com\nIRC —https://hexchat.github.io/\nForza — https://www.forzafootball.com/women\nElixirConf
    — https://elixirconf.com/events\nChalmers University — https://www.chalmers.se/en/Pages/default.aspx\nFastly
    — https://www.fastly.com/\nNPM — https://www.npmjs.com/\nRebar 3 — https://github.com/erlang/rebar3\nMint
    — https://www.mint-lang.com/\nRuby Gems — https://rubygems.org/\nAndrea Leopardi
    on GitHub — https://github.com/whatyouhide?tab=overview&org=ForzaElixir\n Special
    Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+qKoOcl1H
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ef0d105d-13f1-4803-8837-341f56782510.mp3
    length: '54173956'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: 'We are happy to be joined in this episode by Eric Meadows Jönsson,
      creator of the hexpm package manager, and an amazing resource who works tirelessly
      to build the Elixir community. Eric presently works at Brex and was part of
      the core team at Forza previously. In keeping with our current topic of all
      things working with Elixir, Eric takes a deep dive into the work he is doing
      to optimize various interfaces at Brex. '
    duration: '37:10'
    explicit: 'no'
    keywords: hex, elixir, mint
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ef0d105d-13f1-4803-8837-341f56782510/cover.jpg?v=2
    summary: "\n        <p>We are happy to be joined in this episode by Eric Meadows
      Jönsson, creator of the hexpm package manager, and an amazing resource who works
      tirelessly to build the Elixir community. Eric presently works at Brex and was
      part of the core team at Forza previously. In keeping with our current topic
      of all things working with Elixir, Eric takes a deep dive into the work he is
      doing to optimize various interfaces at Brex. He gives us the rundown on the
      static compile-time checking project he is working on, talking about his aims
      to build in different warnings and what we can expect from the new release in
      that regard. You’ll also hear about Eric’s journey learning Elixir and how he
      had to change his OOP mindset when he got introduced to functional programming
      at university. He shares the story behind hexpm and Mint, his thoughts about
      the future of Hex, and some of the processes around accessing the private repositories
      on its website. We also hear more about Eric’s hiring procedure while working
      at Forza, how he teaches functional programming to students at ElixirConf, and
      some of the major performance bottlenecks he experiences using Hex. Tap into
      the incredible resource that is Eric and hear more about how you can link with
      him online to learn further in the future by tuning in!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>Jose Valim, the Ecto library,
      and Eric’s journey with Elixir since 2012 at a coding camp.</li>\n<li>Early-stage
      static compile-time checks that Eric is adding to the compiler at Brex.</li>\n<li>Whether
      the static compile-time checks Eric is adding constitute a type system or not.</li>\n<li>Static
      compile-time checks in the current system such as undefined function warnings.</li>\n<li>Features
      of the new static compile-time check release: refactored checks, etc.</li>\n<li>Currently,
      these checks happen at compile-time, or when Elixir compiles into the byte code.</li>\n<li>Whether
      these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>\n<li>The
      Erlang compiler already does type inference during compilation. </li>\n<li>Eric’s
      Erlang proficiency and why he had to brush up on it through using Elixir.</li>\n<li>What
      makes Eric helpful with Hex: his debugging skills and availability to answer
      questions.</li>\n<li>How Eric got started with Hex adding an intake for Git
      packages.</li>\n<li>The story behind Hex regarding ties to Elixir and Devinus
      from Pool Boy.</li>\n<li>Todd’s perspective on Eric as a smart and nice mentor
      who sleeps very little.</li>\n<li>Changes that Eric sees happening in Elixir.</li>\n<li>Hex
      will no longer support older Elixir versions so that it can enable better maintenance.</li>\n<li>Another
      change will be a refactoring of the resolution version algorithm.</li>\n<li>Security-related
      updates that Todd has been working on.</li>\n<li>Private versus public repositories
      on the hex.pm website.</li>\n<li>Hiring challenges at Forza and how Eric found
      the right team out of scarce people.</li>\n<li>Eric looks for people who love
      being programmers and have a passion for learning.</li>\n<li>Tactics Eric uses
      to train functional programming such as hosting ElixirConf workshops.</li>\n<li>Important
      fundamentals in functional programming: using data structures to model data,
      etc.</li>\n<li>Differences between functional and object-oriented programming:
      data vs classes.</li>\n<li>The role of types in Eric coming to understand functional
      programming better.</li>\n<li>Performance bottlenecks in Hex such as dependency
      resolution.</li>\n<li>How every package manager/resolver compromises, exemplified
      by NPM and Rebar3.</li>\n<li>Origins of Mint: wanting http2 support for Hex,
      and more.</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nEric Meadows Jönsson on GitHub – <a href=\"https://github.com/ericmj\"
      rel=\"nofollow\">https://github.com/ericmj</a><br>\nEric Meadows Jönsson on
      Hexpm — <a href=\"https://hex.pm/users/ericmj\" rel=\"nofollow\">https://hex.pm/users/ericmj</a><br>\nBrex
      — <a href=\"https://brex.com/\" rel=\"nofollow\">https://brex.com/</a><br>\nTodd
      Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek</a><br>\nJustus
      Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nEric
      Oestreich on LinkedIn — <a href=\"https://www.linkedin.com/in/eric-oestreich-8b55aab/\"
      rel=\"nofollow\">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>\nhexpm
      on GitHub — <a href=\"https://github.com/hexpm\" rel=\"nofollow\">https://github.com/hexpm</a><br>\nGoogle
      Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\" rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nJose
      Valim on GitHib — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nPool
      Boy — <a href=\"https://github.com/devinus/poolboy\" rel=\"nofollow\">https://github.com/devinus/poolboy</a><br>\nDevin
      Alexander Torres — <a href=\"https://github.com/devinus\" rel=\"nofollow\">https://github.com/devinus</a><br>\nVoitech
      — <a href=\"https://www.voitech.biz/\" rel=\"nofollow\">https://www.voitech.biz/</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nhexpm
      specifications — <a href=\"https://github.com/hexpm/specifications\" rel=\"nofollow\">https://github.com/hexpm/specifications</a><br>\nSlack
      — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nIRC
      —<a href=\"https://hexchat.github.io/\" rel=\"nofollow\">https://hexchat.github.io/</a><br>\nForza
      — <a href=\"https://www.forzafootball.com/women\" rel=\"nofollow\">https://www.forzafootball.com/women</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nChalmers
      University — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\" rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nFastly
      — <a href=\"https://www.fastly.com/\" rel=\"nofollow\">https://www.fastly.com/</a><br>\nNPM
      — <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">https://www.npmjs.com/</a><br>\nRebar
      3 — <a href=\"https://github.com/erlang/rebar3\" rel=\"nofollow\">https://github.com/erlang/rebar3</a><br>\nMint
      — <a href=\"https://www.mint-lang.com/\" rel=\"nofollow\">https://www.mint-lang.com/</a><br>\nRuby
      Gems — <a href=\"https://rubygems.org/\" rel=\"nofollow\">https://rubygems.org/</a><br>\nAndrea
      Leopardi on GitHub — <a href=\"https://github.com/whatyouhide?tab=overview&org=ForzaElixir\"
      rel=\"nofollow\">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>We are happy to be joined in this episode by Eric
    Meadows Jönsson, creator of the hexpm package manager, and an amazing resource
    who works tirelessly to build the Elixir community. Eric presently works at Brex
    and was part of the core team at Forza previously. In keeping with our current
    topic of all things working with Elixir, Eric takes a deep dive into the work
    he is doing to optimize various interfaces at Brex. He gives us the rundown on
    the static compile-time checking project he is working on, talking about his aims
    to build in different warnings and what we can expect from the new release in
    that regard. You’ll also hear about Eric’s journey learning Elixir and how he
    had to change his OOP mindset when he got introduced to functional programming
    at university. He shares the story behind hexpm and Mint, his thoughts about the
    future of Hex, and some of the processes around accessing the private repositories
    on its website. We also hear more about Eric’s hiring procedure while working
    at Forza, how he teaches functional programming to students at ElixirConf, and
    some of the major performance bottlenecks he experiences using Hex. Tap into the
    incredible resource that is Eric and hear more about how you can link with him
    online to learn further in the future by tuning in!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>Jose Valim, the Ecto library, and
    Eric’s journey with Elixir since 2012 at a coding camp.</li>\n<li>Early-stage
    static compile-time checks that Eric is adding to the compiler at Brex.</li>\n<li>Whether
    the static compile-time checks Eric is adding constitute a type system or not.</li>\n<li>Static
    compile-time checks in the current system such as undefined function warnings.</li>\n<li>Features
    of the new static compile-time check release: refactored checks, etc.</li>\n<li>Currently,
    these checks happen at compile-time, or when Elixir compiles into the byte code.</li>\n<li>Whether
    these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>\n<li>The
    Erlang compiler already does type inference during compilation. </li>\n<li>Eric’s
    Erlang proficiency and why he had to brush up on it through using Elixir.</li>\n<li>What
    makes Eric helpful with Hex: his debugging skills and availability to answer questions.</li>\n<li>How
    Eric got started with Hex adding an intake for Git packages.</li>\n<li>The story
    behind Hex regarding ties to Elixir and Devinus from Pool Boy.</li>\n<li>Todd’s
    perspective on Eric as a smart and nice mentor who sleeps very little.</li>\n<li>Changes
    that Eric sees happening in Elixir.</li>\n<li>Hex will no longer support older
    Elixir versions so that it can enable better maintenance.</li>\n<li>Another change
    will be a refactoring of the resolution version algorithm.</li>\n<li>Security-related
    updates that Todd has been working on.</li>\n<li>Private versus public repositories
    on the hex.pm website.</li>\n<li>Hiring challenges at Forza and how Eric found
    the right team out of scarce people.</li>\n<li>Eric looks for people who love
    being programmers and have a passion for learning.</li>\n<li>Tactics Eric uses
    to train functional programming such as hosting ElixirConf workshops.</li>\n<li>Important
    fundamentals in functional programming: using data structures to model data, etc.</li>\n<li>Differences
    between functional and object-oriented programming: data vs classes.</li>\n<li>The
    role of types in Eric coming to understand functional programming better.</li>\n<li>Performance
    bottlenecks in Hex such as dependency resolution.</li>\n<li>How every package
    manager/resolver compromises, exemplified by NPM and Rebar3.</li>\n<li>Origins
    of Mint: wanting http2 support for Hex, and more.</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nEric Meadows Jönsson on GitHub
    – <a href=\"https://github.com/ericmj\" rel=\"nofollow\">https://github.com/ericmj</a><br>\nEric
    Meadows Jönsson on Hexpm — <a href=\"https://hex.pm/users/ericmj\" rel=\"nofollow\">https://hex.pm/users/ericmj</a><br>\nBrex
    — <a href=\"https://brex.com/\" rel=\"nofollow\">https://brex.com/</a><br>\nTodd
    Resudek on LinkedIn — <a href=\"https://www.linkedin.com/in/toddresudek\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek</a><br>\nJustus
    Eapen on LinkedIn — <a href=\"https://www.linkedin.com/in/justuseapen/\" rel=\"nofollow\">https://www.linkedin.com/in/justuseapen/</a><br>\nEric
    Oestreich on LinkedIn — <a href=\"https://www.linkedin.com/in/eric-oestreich-8b55aab/\"
    rel=\"nofollow\">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>\nhexpm
    on GitHub — <a href=\"https://github.com/hexpm\" rel=\"nofollow\">https://github.com/hexpm</a><br>\nGoogle
    Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\" rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nJose
    Valim on GitHib — <a href=\"https://github.com/josevalim\" rel=\"nofollow\">https://github.com/josevalim</a><br>\nPool
    Boy — <a href=\"https://github.com/devinus/poolboy\" rel=\"nofollow\">https://github.com/devinus/poolboy</a><br>\nDevin
    Alexander Torres — <a href=\"https://github.com/devinus\" rel=\"nofollow\">https://github.com/devinus</a><br>\nVoitech
    — <a href=\"https://www.voitech.biz/\" rel=\"nofollow\">https://www.voitech.biz/</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nhexpm
    specifications — <a href=\"https://github.com/hexpm/specifications\" rel=\"nofollow\">https://github.com/hexpm/specifications</a><br>\nSlack
    — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nIRC
    —<a href=\"https://hexchat.github.io/\" rel=\"nofollow\">https://hexchat.github.io/</a><br>\nForza
    — <a href=\"https://www.forzafootball.com/women\" rel=\"nofollow\">https://www.forzafootball.com/women</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/events\" rel=\"nofollow\">https://elixirconf.com/events</a><br>\nChalmers
    University — <a href=\"https://www.chalmers.se/en/Pages/default.aspx\" rel=\"nofollow\">https://www.chalmers.se/en/Pages/default.aspx</a><br>\nFastly
    — <a href=\"https://www.fastly.com/\" rel=\"nofollow\">https://www.fastly.com/</a><br>\nNPM
    — <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">https://www.npmjs.com/</a><br>\nRebar
    3 — <a href=\"https://github.com/erlang/rebar3\" rel=\"nofollow\">https://github.com/erlang/rebar3</a><br>\nMint
    — <a href=\"https://www.mint-lang.com/\" rel=\"nofollow\">https://www.mint-lang.com/</a><br>\nRuby
    Gems — <a href=\"https://rubygems.org/\" rel=\"nofollow\">https://rubygems.org/</a><br>\nAndrea
    Leopardi on GitHub — <a href=\"https://github.com/whatyouhide?tab=overview&org=ForzaElixir\"
    rel=\"nofollow\">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: Chris Keathley on Performance and Functional Programming
  slug: s3e5-keathley
  link: https://smartlogic.io/podcast/elixir-wizards/s3e5-keathley
  guid: b26cdd89-0d68-4466-9714-44c278932651
  pubDate: Thu, 19 Dec 2019 06:00:00 -0500
  pubDateFriendly: December 19, 2019
  description: "Our guest on the show today is blogger, software cowboy, and podcast
    host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of
    Elixir Outlaws, and writer of an assemblage of open-source software. He joins
    us today to speak about his new projects, his journey with functional programming,
    and what it is like to run Bleacher Report’s infrastructure on Elixir. Chris gives
    us the lowdown on Norm, a data validating interface he recently completed, weighing
    in on how it is different from Dialyzer and what it can offer as far as scalability.
    We hear more about how Chris got introduced to Elixir through Haskell, why he
    wishes he learned Clojure sooner, and why Ruby on Rails isn’t going anywhere soon.
    \nChris also gets into the tradeoffs these languages make to correlate with Erlang.
    He argues that Elixir can only be more widely adopted if more people build cool
    things in it, and then lays out some of its power in supporting Bleacher Report’s
    user interface. We pick Chris’s brain about what his company is trying to optimize
    at the moment and hear about their preference for capacity over speed, and their
    techniques for failing gracefully during traffic spikes. Chris tells us how much
    he loves Elixir due to its use of ETS and other functionality which allows Bleacher
    Report to keep running even above capacity. Finally, we hear about some of the
    observability practices that Bleacher Report uses when deploying new systems and
    predicting future spikes. Plug in for a great conversation and hear why you should
    get building with Elixir now!\nKey Points From This Episode:\nChris’s explanation
    of Norm, his new software that describes data moving through a system.\nChris’s
    introduction to functional programming through learning Haskell, Clojure, and
    Elixir.\nWhat makes a great functional language: immutable data and first class
    functions.\nThings that make Clojure great, such as its thought out, holistic
    design.\nCharacteristics of Cons lists versus RRB trees, and what makes the latter
    better.\nAn acknowledgment of the necessity of the tradeoffs Elixir makes to interact
    with Erlang.\nA little bit about the language Chris wrote to do the admin of code
    challenges in.\nWhy Ruby (on Rails) will not be replaced by Elixir due to commoditization
    that surrounds it.\nAn argument that Elixir can only be more widely adopted if
    more people build with it.\nWhy any language can build any program thus comparisons
    between them are arbitrary.\nWhere Chris sets the bar as to when something is
    performant.\nChris’s preference for high user capacity capability over speed of
    delivery at Bleacher Report.\nOptimization projects at Bleacher Report such as
    using few boxes and handling traffic spikes.\nThings Chris loves about Elixir
    such as its ability to deliver more from its boxes.\nElixir’s use of ETS and how
    Chris coded a complex problem in half a day using it.\nHow Chris detects spikes
    using time series, StatsD, and other observability tools.\nLinks Mentioned in
    Today’s Episode:\nSmartLogic — https://smartlogic.io/ \nChris Keathley on GitHub
    — https://github.com/keathley\nChris Keathley Blog — https://keathley.io/\nElixirConf
    2019, Contracts for Building Reliable Systems presented by Chris Keathley — https://www.youtube.com/watch?v=tpo3JUyVIjQ\nThe
    Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — https://www.youtube.com/watch?v=ghpIiQKRfQ4\nBleacher
    Report — https://bleacherreport.com/\nElixir Outlaws Podcast — https://elixiroutlaws.com/\nNorm
    — https://github.com/keathley/norm\nDialyzer — http://erlang.org/doc/man/dialyzer.html\nHaskell
    — https://www.haskell.org/\nClojure — https://clojure.org/\nErlang — https://www.erlang.org/\nChris
    Okasaki — https://github.com/chrisokasaki\nDiscord — https://discordapp.com/company\nStatsD
    — https://www.datadoghq.com/blog/statsd/\nPrometheus — https://prometheus.io/\nOpentracing
    — https://opentracing.io/ Special Guest: Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KPLckMEA
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b26cdd89-0d68-4466-9714-44c278932651.mp3
    length: '51632917'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Our guest on the show today is blogger, software cowboy, and podcast
      host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host
      of Elixir Outlaws, and writer of an assemblage of open-source software. He joins
      us today to speak about his new projects, his journey with functional programming,
      and what it is like to run Bleacher Report’s infrastructure on Elixir.
    duration: '35:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b26cdd89-0d68-4466-9714-44c278932651/cover.jpg?v=2
    summary: "\n        <p>Our guest on the show today is blogger, software cowboy,
      and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report,
      co-host of Elixir Outlaws, and writer of an assemblage of open-source software.
      He joins us today to speak about his new projects, his journey with functional
      programming, and what it is like to run Bleacher Report’s infrastructure on
      Elixir. Chris gives us the lowdown on Norm, a data validating interface he recently
      completed, weighing in on how it is different from Dialyzer and what it can
      offer as far as scalability. We hear more about how Chris got introduced to
      Elixir through Haskell, why he wishes he learned Clojure sooner, and why Ruby
      on Rails isn’t going anywhere soon. </p>\n\n<p>Chris also gets into the tradeoffs
      these languages make to correlate with Erlang. He argues that Elixir can only
      be more widely adopted if more people build cool things in it, and then lays
      out some of its power in supporting Bleacher Report’s user interface. We pick
      Chris’s brain about what his company is trying to optimize at the moment and
      hear about their preference for capacity over speed, and their techniques for
      failing gracefully during traffic spikes. Chris tells us how much he loves Elixir
      due to its use of ETS and other functionality which allows Bleacher Report to
      keep running even above capacity. Finally, we hear about some of the observability
      practices that Bleacher Report uses when deploying new systems and predicting
      future spikes. Plug in for a great conversation and hear why you should get
      building with Elixir now!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris’s
      explanation of Norm, his new software that describes data moving through a system.</li>\n<li>Chris’s
      introduction to functional programming through learning Haskell, Clojure, and
      Elixir.</li>\n<li>What makes a great functional language: immutable data and
      first class functions.</li>\n<li>Things that make Clojure great, such as its
      thought out, holistic design.</li>\n<li>Characteristics of Cons lists versus
      RRB trees, and what makes the latter better.</li>\n<li>An acknowledgment of
      the necessity of the tradeoffs Elixir makes to interact with Erlang.</li>\n<li>A
      little bit about the language Chris wrote to do the admin of code challenges
      in.</li>\n<li>Why Ruby (on Rails) will not be replaced by Elixir due to commoditization
      that surrounds it.</li>\n<li>An argument that Elixir can only be more widely
      adopted if more people build with it.</li>\n<li>Why any language can build any
      program thus comparisons between them are arbitrary.</li>\n<li>Where Chris sets
      the bar as to when something is performant.</li>\n<li>Chris’s preference for
      high user capacity capability over speed of delivery at Bleacher Report.</li>\n<li>Optimization
      projects at Bleacher Report such as using few boxes and handling traffic spikes.</li>\n<li>Things
      Chris loves about Elixir such as its ability to deliver more from its boxes.</li>\n<li>Elixir’s
      use of ETS and how Chris coded a complex problem in half a day using it.</li>\n<li>How
      Chris detects spikes using time series, StatsD, and other observability tools.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on GitHub —
      <a href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nChris
      Keathley Blog — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElixirConf
      2019, Contracts for Building Reliable Systems presented by Chris Keathley —
      <a href=\"https://www.youtube.com/watch?v=tpo3JUyVIjQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>\nThe
      Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href=\"https://www.youtube.com/watch?v=ghpIiQKRfQ4\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nElixir
      Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNorm
      — <a href=\"https://github.com/keathley/norm\" rel=\"nofollow\">https://github.com/keathley/norm</a><br>\nDialyzer
      — <a href=\"http://erlang.org/doc/man/dialyzer.html\" rel=\"nofollow\">http://erlang.org/doc/man/dialyzer.html</a><br>\nHaskell
      — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nClojure
      — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nChris
      Okasaki — <a href=\"https://github.com/chrisokasaki\" rel=\"nofollow\">https://github.com/chrisokasaki</a><br>\nDiscord
      — <a href=\"https://discordapp.com/company\" rel=\"nofollow\">https://discordapp.com/company</a><br>\nStatsD
      — <a href=\"https://www.datadoghq.com/blog/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/blog/statsd/</a><br>\nPrometheus
      — <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nOpentracing
      — <a href=\"https://opentracing.io/\" rel=\"nofollow\">https://opentracing.io/</a></p><p>Special
      Guest: Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>Our guest on the show today is blogger, software cowboy,
    and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report,
    co-host of Elixir Outlaws, and writer of an assemblage of open-source software.
    He joins us today to speak about his new projects, his journey with functional
    programming, and what it is like to run Bleacher Report’s infrastructure on Elixir.
    Chris gives us the lowdown on Norm, a data validating interface he recently completed,
    weighing in on how it is different from Dialyzer and what it can offer as far
    as scalability. We hear more about how Chris got introduced to Elixir through
    Haskell, why he wishes he learned Clojure sooner, and why Ruby on Rails isn’t
    going anywhere soon. </p>\n\n<p>Chris also gets into the tradeoffs these languages
    make to correlate with Erlang. He argues that Elixir can only be more widely adopted
    if more people build cool things in it, and then lays out some of its power in
    supporting Bleacher Report’s user interface. We pick Chris’s brain about what
    his company is trying to optimize at the moment and hear about their preference
    for capacity over speed, and their techniques for failing gracefully during traffic
    spikes. Chris tells us how much he loves Elixir due to its use of ETS and other
    functionality which allows Bleacher Report to keep running even above capacity.
    Finally, we hear about some of the observability practices that Bleacher Report
    uses when deploying new systems and predicting future spikes. Plug in for a great
    conversation and hear why you should get building with Elixir now!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris’s explanation of Norm,
    his new software that describes data moving through a system.</li>\n<li>Chris’s
    introduction to functional programming through learning Haskell, Clojure, and
    Elixir.</li>\n<li>What makes a great functional language: immutable data and first
    class functions.</li>\n<li>Things that make Clojure great, such as its thought
    out, holistic design.</li>\n<li>Characteristics of Cons lists versus RRB trees,
    and what makes the latter better.</li>\n<li>An acknowledgment of the necessity
    of the tradeoffs Elixir makes to interact with Erlang.</li>\n<li>A little bit
    about the language Chris wrote to do the admin of code challenges in.</li>\n<li>Why
    Ruby (on Rails) will not be replaced by Elixir due to commoditization that surrounds
    it.</li>\n<li>An argument that Elixir can only be more widely adopted if more
    people build with it.</li>\n<li>Why any language can build any program thus comparisons
    between them are arbitrary.</li>\n<li>Where Chris sets the bar as to when something
    is performant.</li>\n<li>Chris’s preference for high user capacity capability
    over speed of delivery at Bleacher Report.</li>\n<li>Optimization projects at
    Bleacher Report such as using few boxes and handling traffic spikes.</li>\n<li>Things
    Chris loves about Elixir such as its ability to deliver more from its boxes.</li>\n<li>Elixir’s
    use of ETS and how Chris coded a complex problem in half a day using it.</li>\n<li>How
    Chris detects spikes using time series, StatsD, and other observability tools.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nChris Keathley on GitHub — <a
    href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nChris
    Keathley Blog — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nElixirConf
    2019, Contracts for Building Reliable Systems presented by Chris Keathley — <a
    href=\"https://www.youtube.com/watch?v=tpo3JUyVIjQ\" rel=\"nofollow\">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>\nThe
    Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href=\"https://www.youtube.com/watch?v=ghpIiQKRfQ4\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>\nBleacher
    Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nElixir
    Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a><br>\nNorm
    — <a href=\"https://github.com/keathley/norm\" rel=\"nofollow\">https://github.com/keathley/norm</a><br>\nDialyzer
    — <a href=\"http://erlang.org/doc/man/dialyzer.html\" rel=\"nofollow\">http://erlang.org/doc/man/dialyzer.html</a><br>\nHaskell
    — <a href=\"https://www.haskell.org/\" rel=\"nofollow\">https://www.haskell.org/</a><br>\nClojure
    — <a href=\"https://clojure.org/\" rel=\"nofollow\">https://clojure.org/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nChris
    Okasaki — <a href=\"https://github.com/chrisokasaki\" rel=\"nofollow\">https://github.com/chrisokasaki</a><br>\nDiscord
    — <a href=\"https://discordapp.com/company\" rel=\"nofollow\">https://discordapp.com/company</a><br>\nStatsD
    — <a href=\"https://www.datadoghq.com/blog/statsd/\" rel=\"nofollow\">https://www.datadoghq.com/blog/statsd/</a><br>\nPrometheus
    — <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nOpentracing
    — <a href=\"https://opentracing.io/\" rel=\"nofollow\">https://opentracing.io/</a></p><p>Special
    Guest: Chris Keathley.</p>\n      "
- title: Justin Schneck & Frank Hunleth on Nerves and Performance – Working with Elixir
  slug: s3e4-schneck-hunleth-nerves
  link: https://smartlogic.io/podcast/elixir-wizards/s3e4-schneck-hunleth-nerves
  guid: 2be72d78-cfcc-46e2-a0a5-753fc8a0c280
  pubDate: Thu, 12 Dec 2019 06:00:00 -0500
  pubDateFriendly: December 12, 2019
  description: "On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries
    from the Nerves team! We take a dive into the world of Nerves with them, covering
    themes of performance, problem-solving, transitioning to hardware, and breakthroughs
    in the field. We begin with a conversation on how Elixir handles performance issues
    on the range of devices they support and Frank gets into how the team solved an
    early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes
    for today are ironing out the kinks in the system registry model and merging Erlang
    and into hard real-time. After squeezing some information out of the guys about
    their use of ugly code hacks we get into some visionary decisions as well as things
    the team wished they could have done differently at Elixir (see the release of
    the new networking stack). Finally, we end off with what Frank and Justin are
    excited about as far as developments in the Nerves community, so be sure to plug
    into this one!\n**Key Points From This Episode:\nWhat Justin did in Tokyo, from
    soaking in hot springs to debugging in Kanji.\nAn explanation of The Erlang Ecosystem
    Foundation, an embedded systems working group.\nThe use of the VintageNet library
    for setting up multi-hold nerve networks.\nHow Elixir handles performance issues
    on the range of devices they support.\nA breakdown of troubleshooting processes
    as far as acceleration with FPGAs.\nIssues with dependencies that occur when starting
    a network node on a Nerves device.\nHow Elixir is trying to evolve past the system
    registry model.\nIdentifying the challenge of reconfiguring early boot time which
    Elixir is facing.\nHow Elixir solved a load time discrepancy between a PC and
    the Raspberry Pi board.\nWhich situations require hardware when Elixir is too
    slow, such as video encoding.\nJapanese research into GPU, FPGA and SIMD optimization
    involving wrapping code blocks.\nMerging Erlang which is soft real-time into hard
    real-time.\nExamples of ugly but fast code hacks in Elixir.\nHacks and the pitfalls
    of system registry such as returning to a prompt when an app crashes.\nThings
    Elixir would have done differently in working with Nerves if could they rewind
    time.\nWhy releasing a new networking stack means Elixir could have done things
    differently.\nLessons Justin and Frank learned moving from OTP to functional programming
    at Elixir.\nExciting new developments and releases in the Nerves community.\nLinks
    Mentioned in Today’s Episode:\nNerves Project — https://nerves-project.org/\nSmartLogic
    — https://smartlogic.io/ \nElixirConf US — https://elixirconf.com/events\nThe
    Erlang Ecosystem Foundation — https://erlef.org/\nGRiSP — https://www.grisp.org/\nVintage
    Net — https://github.com/nerves-networking/vintage_net\nJoe Armstrong — https://joearms.github.io/\nErlang
    — https://www.erlang.org/\nLinux — https://www.linux.org/ Special Guest: Frank
    Hunleth.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Y13lFMdG
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2be72d78-cfcc-46e2-a0a5-753fc8a0c280.mp3
    length: '56833898'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries
      from the Nerves team! We take a dive into the world of Nerves with them, covering
      themes of performance, problem-solving, transitioning to hardware, and breakthroughs
      in the field. We begin with a conversation on how Elixir handles performance
      issues on the range of devices they support and Frank gets into how the team
      solved an early boot time discrepancy between a PC and a Raspberry Pi board.
      Other big themes for today are ironing out the kinks in the system registry
      model and merging Erlang and into hard real-time. After squeezing some information
      out of the guys about their use of ugly code hacks we get into some visionary
      decisions as well as things the team wished they could have done differently
      at Elixir (see the release of the new networking stack). Finally, we end off
      with what Frank and Justin are excited about as far as developments in the Nerves
      community, so be sure to plug into this one!
    duration: '38:47'
    explicit: 'no'
    keywords: elixir, nerves, erlang
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2be72d78-cfcc-46e2-a0a5-753fc8a0c280/cover.jpg?v=2
    summary: "\n        <p>On today’s show, we welcome Justin Schneck and Frank Hunleth,
      luminaries from the Nerves team! We take a dive into the world of Nerves with
      them, covering themes of performance, problem-solving, transitioning to hardware,
      and breakthroughs in the field. We begin with a conversation on how Elixir handles
      performance issues on the range of devices they support and Frank gets into
      how the team solved an early boot time discrepancy between a PC and a Raspberry
      Pi board. Other big themes for today are ironing out the kinks in the system
      registry model and merging Erlang and into hard real-time. After squeezing some
      information out of the guys about their use of ugly code hacks we get into some
      visionary decisions as well as things the team wished they could have done differently
      at Elixir (see the release of the new networking stack). Finally, we end off
      with what Frank and Justin are excited about as far as developments in the Nerves
      community, so be sure to plug into this one!</p>\n\n<p>**Key Points From This
      Episode:</p>\n\n<ul>\n<li>What Justin did in Tokyo, from soaking in hot springs
      to debugging in Kanji.</li>\n<li>An explanation of The Erlang Ecosystem Foundation,
      an embedded systems working group.</li>\n<li>The use of the VintageNet library
      for setting up multi-hold nerve networks.</li>\n<li>How Elixir handles performance
      issues on the range of devices they support.</li>\n<li>A breakdown of troubleshooting
      processes as far as acceleration with FPGAs.</li>\n<li>Issues with dependencies
      that occur when starting a network node on a Nerves device.</li>\n<li>How Elixir
      is trying to evolve past the system registry model.</li>\n<li>Identifying the
      challenge of reconfiguring early boot time which Elixir is facing.</li>\n<li>How
      Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>\n<li>Which
      situations require hardware when Elixir is too slow, such as video encoding.</li>\n<li>Japanese
      research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>\n<li>Merging
      Erlang which is soft real-time into hard real-time.</li>\n<li>Examples of ugly
      but fast code hacks in Elixir.</li>\n<li>Hacks and the pitfalls of system registry
      such as returning to a prompt when an app crashes.</li>\n<li>Things Elixir would
      have done differently in working with Nerves if could they rewind time.</li>\n<li>Why
      releasing a new networking stack means Elixir could have done things differently.</li>\n<li>Lessons
      Justin and Frank learned moving from OTP to functional programming at Elixir.</li>\n<li>Exciting
      new developments and releases in the Nerves community.</li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Nerves Project — <a href=\"https://nerves-project.org/\"
      rel=\"nofollow\">https://nerves-project.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
      rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf US — <a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">https://elixirconf.com/events</a><br>\nThe Erlang Ecosystem
      Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nGRiSP
      — <a href=\"https://www.grisp.org/\" rel=\"nofollow\">https://www.grisp.org/</a><br>\nVintage
      Net — <a href=\"https://github.com/nerves-networking/vintage_net\" rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nJoe
      Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nLinux
      — <a href=\"https://www.linux.org/\" rel=\"nofollow\">https://www.linux.org/</a></p><p>Special
      Guest: Frank Hunleth.</p>\n      "
  contentEncoded: "\n        <p>On today’s show, we welcome Justin Schneck and Frank
    Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves
    with them, covering themes of performance, problem-solving, transitioning to hardware,
    and breakthroughs in the field. We begin with a conversation on how Elixir handles
    performance issues on the range of devices they support and Frank gets into how
    the team solved an early boot time discrepancy between a PC and a Raspberry Pi
    board. Other big themes for today are ironing out the kinks in the system registry
    model and merging Erlang and into hard real-time. After squeezing some information
    out of the guys about their use of ugly code hacks we get into some visionary
    decisions as well as things the team wished they could have done differently at
    Elixir (see the release of the new networking stack). Finally, we end off with
    what Frank and Justin are excited about as far as developments in the Nerves community,
    so be sure to plug into this one!</p>\n\n<p>**Key Points From This Episode:</p>\n\n<ul>\n<li>What
    Justin did in Tokyo, from soaking in hot springs to debugging in Kanji.</li>\n<li>An
    explanation of The Erlang Ecosystem Foundation, an embedded systems working group.</li>\n<li>The
    use of the VintageNet library for setting up multi-hold nerve networks.</li>\n<li>How
    Elixir handles performance issues on the range of devices they support.</li>\n<li>A
    breakdown of troubleshooting processes as far as acceleration with FPGAs.</li>\n<li>Issues
    with dependencies that occur when starting a network node on a Nerves device.</li>\n<li>How
    Elixir is trying to evolve past the system registry model.</li>\n<li>Identifying
    the challenge of reconfiguring early boot time which Elixir is facing.</li>\n<li>How
    Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>\n<li>Which
    situations require hardware when Elixir is too slow, such as video encoding.</li>\n<li>Japanese
    research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>\n<li>Merging
    Erlang which is soft real-time into hard real-time.</li>\n<li>Examples of ugly
    but fast code hacks in Elixir.</li>\n<li>Hacks and the pitfalls of system registry
    such as returning to a prompt when an app crashes.</li>\n<li>Things Elixir would
    have done differently in working with Nerves if could they rewind time.</li>\n<li>Why
    releasing a new networking stack means Elixir could have done things differently.</li>\n<li>Lessons
    Justin and Frank learned moving from OTP to functional programming at Elixir.</li>\n<li>Exciting
    new developments and releases in the Nerves community.</li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Nerves Project — <a href=\"https://nerves-project.org/\"
    rel=\"nofollow\">https://nerves-project.org/</a><br>\nSmartLogic — <a href=\"https://smartlogic.io/\"
    rel=\"nofollow\">https://smartlogic.io/</a> <br>\nElixirConf US — <a href=\"https://elixirconf.com/events\"
    rel=\"nofollow\">https://elixirconf.com/events</a><br>\nThe Erlang Ecosystem Foundation
    — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nGRiSP
    — <a href=\"https://www.grisp.org/\" rel=\"nofollow\">https://www.grisp.org/</a><br>\nVintage
    Net — <a href=\"https://github.com/nerves-networking/vintage_net\" rel=\"nofollow\">https://github.com/nerves-networking/vintage_net</a><br>\nJoe
    Armstrong — <a href=\"https://joearms.github.io/\" rel=\"nofollow\">https://joearms.github.io/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nLinux
    — <a href=\"https://www.linux.org/\" rel=\"nofollow\">https://www.linux.org/</a></p><p>Special
    Guest: Frank Hunleth.</p>\n      "
- title: Brad Traylor of Podium on Training & Hiring – Working with Elixir
  slug: s3e3-brad-traylor
  link: https://smartlogic.io/podcast/elixir-wizards/s3e3-brad-traylor
  guid: f816f14f-9675-4d38-a622-24dd6eb29cd1
  pubDate: Thu, 05 Dec 2019 06:00:00 -0500
  pubDateFriendly: December  5, 2019
  description: "Our theme this season is working with Elixir, and joining in the conversation
    today is Brad Traylor from Podium. Brad shares his expertise in hiring and training
    for Podium, a position he is passionate about since it gives him the opportunity
    to work on the people and tech side of things. We begin by hearing a bit of Brad’s
    background, when and how he was first introduced to Elixir and the standout qualities
    that attracted him to Podium. He discusses the hiring process, including what
    he looks for in an engineer, why they don’t recruit much but rather work with
    referrals, the step-by-step of onboarding new devs and the resources he recommends
    to anyone in the industry. Another great talk with a stand-up guy — be sure to
    tune in! \nKey Points From This Episode:\nWhen Brad was first exposed to Elixir
    and how he became the engineering manager. \nSearching for rocket ship startups
    and what specifically drew him to Podium. \nHaving a desire to work with the people
    and the tech side of the industry. \nThe growth trajectory of Podium from a management
    perspective. \nHiring predominantly from referrals rather than recruiting developers.
    \nThe biggest challenge with hiring Elixir devs, including the scarcity of good
    ones! \nTwo things Brad looks for when hiring engineers: the drive to learn and
    a cultural fit. \nThe benefit of hiring younger developers. \nThoughts on training
    different languages and adding them to Podium’s tech stack.\nAn overview of the
    typical onboarding process for a new engineer.\nElixir 101 and other ways they
    keep training and refining the skills of developers.  \nResources that Brad has
    recently learned and those he always recommends to devs. \n**Links Mentioned in
    Today’s Episode:\nBrad Traylor on LinkedIn — https://www.linkedin.com/in/bradtraylor\nBrad
    Traylor on Twitter — https://twitter.com/btjordan23\nPodium — https://www.podium.com\nSmartLogic
    — https://smartlogic.io/ \nElixir — https://elixir-lang.org\nUniversity of Michigan
    — https://umich.edu\nJava — https://www.java.com/en/\nPython — https://www.python.org\nRust
    — https://www.rust-lang.org\nRuby — https://www.ruby-lang.org/en/\nTypeScript
    — https://www.typescriptlang.org\nPragmatic Institute — https://www.pragmaticinstitute.com/courses\nThe
    Manager’s Path — https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\nCamile
    Fournier — https://twitter.com/skamille\n Special Guest: Brad Traylor.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DMwuDAMm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f816f14f-9675-4d38-a622-24dd6eb29cd1.mp3
    length: '40086893'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Our theme this season is working with Elixir, and joining in the conversation
      today is Brad Traylor from Podium. Brad shares his expertise in hiring and training
      for Podium, a position he is passionate about since it gives him the opportunity
      to work on the people and tech side of things. We begin by hearing a bit of
      Brad’s background, when and how he was first introduced to Elixir and the standout
      qualities that attracted him to Podium. He discusses the hiring process, including
      what he looks for in an engineer, why they don’t recruit much but rather work
      with referrals, the step-by-step of onboarding new devs and the resources he
      recommends to anyone in the industry.
    duration: '27:21'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f816f14f-9675-4d38-a622-24dd6eb29cd1/cover.jpg?v=2
    summary: "\n        <p>Our theme this season is working with Elixir, and joining
      in the conversation today is Brad Traylor from Podium. Brad shares his expertise
      in hiring and training for Podium, a position he is passionate about since it
      gives him the opportunity to work on the people and tech side of things. We
      begin by hearing a bit of Brad’s background, when and how he was first introduced
      to Elixir and the standout qualities that attracted him to Podium. He discusses
      the hiring process, including what he looks for in an engineer, why they don’t
      recruit much but rather work with referrals, the step-by-step of onboarding
      new devs and the resources he recommends to anyone in the industry. Another
      great talk with a stand-up guy — be sure to tune in! </p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>When Brad was first exposed
      to Elixir and how he became the engineering manager. </li>\n<li>Searching for
      rocket ship startups and what specifically drew him to Podium. </li>\n<li>Having
      a desire to work with the people and the tech side of the industry. </li>\n<li>The
      growth trajectory of Podium from a management perspective. </li>\n<li>Hiring
      predominantly from referrals rather than recruiting developers. </li>\n<li>The
      biggest challenge with hiring Elixir devs, including the scarcity of good ones!
      </li>\n<li>Two things Brad looks for when hiring engineers: the drive to learn
      and a cultural fit. </li>\n<li>The benefit of hiring younger developers. </li>\n<li>Thoughts
      on training different languages and adding them to Podium’s tech stack.</li>\n<li>An
      overview of the typical onboarding process for a new engineer.</li>\n<li>Elixir
      101 and other ways they keep training and refining the skills of developers.<br></li>\n<li>Resources
      that Brad has recently learned and those he always recommends to devs. </li>\n</ul>\n\n<p>**Links
      Mentioned in Today’s Episode:</p>\n\n<p>Brad Traylor on LinkedIn — <a href=\"https://www.linkedin.com/in/bradtraylor\"
      rel=\"nofollow\">https://www.linkedin.com/in/bradtraylor</a><br>\nBrad Traylor
      on Twitter — <a href=\"https://twitter.com/btjordan23\" rel=\"nofollow\">https://twitter.com/btjordan23</a><br>\nPodium
      — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\nSmartLogic
      — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
      <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nUniversity
      of Michigan — <a href=\"https://umich.edu\" rel=\"nofollow\">https://umich.edu</a><br>\nJava
      — <a href=\"https://www.java.com/en/\" rel=\"nofollow\">https://www.java.com/en/</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nTypeScript
      — <a href=\"https://www.typescriptlang.org\" rel=\"nofollow\">https://www.typescriptlang.org</a><br>\nPragmatic
      Institute — <a href=\"https://www.pragmaticinstitute.com/courses\" rel=\"nofollow\">https://www.pragmaticinstitute.com/courses</a><br>\nThe
      Manager’s Path — <a href=\"https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\"
      rel=\"nofollow\">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>\nCamile
      Fournier — <a href=\"https://twitter.com/skamille\" rel=\"nofollow\">https://twitter.com/skamille</a></p><p>Special
      Guest: Brad Traylor.</p>\n      "
  contentEncoded: "\n        <p>Our theme this season is working with Elixir, and
    joining in the conversation today is Brad Traylor from Podium. Brad shares his
    expertise in hiring and training for Podium, a position he is passionate about
    since it gives him the opportunity to work on the people and tech side of things.
    We begin by hearing a bit of Brad’s background, when and how he was first introduced
    to Elixir and the standout qualities that attracted him to Podium. He discusses
    the hiring process, including what he looks for in an engineer, why they don’t
    recruit much but rather work with referrals, the step-by-step of onboarding new
    devs and the resources he recommends to anyone in the industry. Another great
    talk with a stand-up guy — be sure to tune in! </p>\n\n<p><strong>Key Points From
    This Episode:</strong></p>\n\n<ul>\n<li>When Brad was first exposed to Elixir
    and how he became the engineering manager. </li>\n<li>Searching for rocket ship
    startups and what specifically drew him to Podium. </li>\n<li>Having a desire
    to work with the people and the tech side of the industry. </li>\n<li>The growth
    trajectory of Podium from a management perspective. </li>\n<li>Hiring predominantly
    from referrals rather than recruiting developers. </li>\n<li>The biggest challenge
    with hiring Elixir devs, including the scarcity of good ones! </li>\n<li>Two things
    Brad looks for when hiring engineers: the drive to learn and a cultural fit. </li>\n<li>The
    benefit of hiring younger developers. </li>\n<li>Thoughts on training different
    languages and adding them to Podium’s tech stack.</li>\n<li>An overview of the
    typical onboarding process for a new engineer.</li>\n<li>Elixir 101 and other
    ways they keep training and refining the skills of developers.<br></li>\n<li>Resources
    that Brad has recently learned and those he always recommends to devs. </li>\n</ul>\n\n<p>**Links
    Mentioned in Today’s Episode:</p>\n\n<p>Brad Traylor on LinkedIn — <a href=\"https://www.linkedin.com/in/bradtraylor\"
    rel=\"nofollow\">https://www.linkedin.com/in/bradtraylor</a><br>\nBrad Traylor
    on Twitter — <a href=\"https://twitter.com/btjordan23\" rel=\"nofollow\">https://twitter.com/btjordan23</a><br>\nPodium
    — <a href=\"https://www.podium.com\" rel=\"nofollow\">https://www.podium.com</a><br>\nSmartLogic
    — <a href=\"https://smartlogic.io/\" rel=\"nofollow\">https://smartlogic.io/</a>
    <br>\nElixir — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nUniversity
    of Michigan — <a href=\"https://umich.edu\" rel=\"nofollow\">https://umich.edu</a><br>\nJava
    — <a href=\"https://www.java.com/en/\" rel=\"nofollow\">https://www.java.com/en/</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nTypeScript
    — <a href=\"https://www.typescriptlang.org\" rel=\"nofollow\">https://www.typescriptlang.org</a><br>\nPragmatic
    Institute — <a href=\"https://www.pragmaticinstitute.com/courses\" rel=\"nofollow\">https://www.pragmaticinstitute.com/courses</a><br>\nThe
    Manager’s Path — <a href=\"https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F\"
    rel=\"nofollow\">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>\nCamile
    Fournier — <a href=\"https://twitter.com/skamille\" rel=\"nofollow\">https://twitter.com/skamille</a></p><p>Special
    Guest: Brad Traylor.</p>\n      "
- title: José Valim, Creator of Elixir
  slug: s3-e2-jose-valim
  link: https://smartlogic.io/podcast/elixir-wizards/s3-e2-jose-valim
  guid: 13faacd6-6639-4fe7-a552-5f58e3dc2f3d
  pubDate: Tue, 26 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 26, 2019
  description: "Today on Elixir Wizards we are joined by none other than José Valim,
    the inventor of Elixir! Coming from the Ruby on Rails world, José found his way
    to functional programming and we hear all about the evolution of his philosophy
    and thought process around the time of the creation of the language. He gives
    us some great insight into why functional programming is so appealing to him and
    the problems he wanted to solve by creating Elixir. We chat about other languages
    and his use of Erlang, Elixir's three biggest influences and some important characters
    in the story. José also shares a bit of personal, behind the scenes stuff about
    his schedule and how he tries to stay as productive as possible. We finish off
    the chat, talking about performance and the measures José has taken in this regard.
    For all this and more from a true Elixir wizard, be sure to tune in!\nKey Points
    From This Episode:\nJosé's thoughts on our recent podcast name-change!\nThe first
    steps for José in the process of writing a language.\nReason for José's decision
    to step out of the Ruby on Rails world. \nThe 'aha' moment that José had when
    moving into functional programming. \nSome of the inspiration for Elixir from
    other languages.\nA few of the people that have mentored and inspired José in
    his career. \nThe research and development phase for Elixir and José strategy
    for this. \nJosé's work habits, his typical day and the influence of his kids
    on his flow. \nWhy José still considers himself an Elixir programmer despite his
    proximity. \nElixir and machine learning; why the two are not more closely linked.
    \nSteps in the measurement process for José and Elixir. \nThe time that José has
    spent on the performance side of the language. \nSacrifices and substitution in
    optimizing Elixir's performance. \nSome of the things on the horizon that are
    exciting José. \nLinks Mentioned in Today’s Episode:\nSmartLogic (https://www.smartlogic.com)\nJosé
    Valim (https://github.com/josevalim)\nPlataformatec (http://plataformatec)\nHarry
    Potter (https://www.wizardingworld.com/)\nErlang (https://www.erlang.org/)\nRuby
    (https://www.ruby-lang.org/en/)\nClojure (https://clojure.org/)\nElixirConf (https://elixirconf.com/events)
    Special Guest: José Valim.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+5_ewBeuK
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/13faacd6-6639-4fe7-a552-5f58e3dc2f3d.mp3
    length: '63704527'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Today on Elixir Wizards we are joined by none other than José Valim,
      the inventor of Elixir! Coming from the Ruby on Rails world, José found his
      way to functional programming and we hear all about the evolution of his philosophy
      and thought process around the time of the creation of the language. He gives
      us some great insight into why functional programming is so appealing to him
      and the problems he wanted to solve by creating Elixir. We chat about other
      languages and his use of Erlang, Elixir's three biggest influences and some
      important characters in the story. José also shares a bit of personal, behind
      the scenes stuff about his schedule and how he tries to stay as productive as
      possible. We finish off the chat, talking about performance and the measures
      José has taken in this regard. For all this and more from a true Elixir wizard,
      be sure to tune in!
    duration: '43:40'
    explicit: 'no'
    keywords: elixir
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/13faacd6-6639-4fe7-a552-5f58e3dc2f3d/cover.jpg?v=3
    summary: "\n        <p>Today on Elixir Wizards we are joined by none other than
      José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José
      found his way to functional programming and we hear all about the evolution
      of his philosophy and thought process around the time of the creation of the
      language. He gives us some great insight into why functional programming is
      so appealing to him and the problems he wanted to solve by creating Elixir.
      We chat about other languages and his use of Erlang, Elixir&#39;s three biggest
      influences and some important characters in the story. José also shares a bit
      of personal, behind the scenes stuff about his schedule and how he tries to
      stay as productive as possible. We finish off the chat, talking about performance
      and the measures José has taken in this regard. For all this and more from a
      true Elixir wizard, be sure to tune in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>José&#39;s
      thoughts on our recent podcast name-change!</li>\n<li>The first steps for José
      in the process of writing a language.</li>\n<li>Reason for José&#39;s decision
      to step out of the Ruby on Rails world. </li>\n<li>The &#39;aha&#39; moment
      that José had when moving into functional programming. </li>\n<li>Some of the
      inspiration for Elixir from other languages.</li>\n<li>A few of the people that
      have mentored and inspired José in his career. </li>\n<li>The research and development
      phase for Elixir and José strategy for this. </li>\n<li>José&#39;s work habits,
      his typical day and the influence of his kids on his flow. </li>\n<li>Why José
      still considers himself an Elixir programmer despite his proximity. </li>\n<li>Elixir
      and machine learning; why the two are not more closely linked. </li>\n<li>Steps
      in the measurement process for José and Elixir. </li>\n<li>The time that José
      has spent on the performance side of the language. </li>\n<li>Sacrifices and
      substitution in optimizing Elixir&#39;s performance. </li>\n<li>Some of the
      things on the horizon that are exciting José. </li>\n</ul>\n\n<p>Links Mentioned
      in Today’s Episode:</p>\n\n<p><a href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a><br>\n<a
      href=\"https://github.com/josevalim\" rel=\"nofollow\">José Valim</a><br>\n<a
      href=\"http://plataformatec\" rel=\"nofollow\">Plataformatec</a><br>\n<a href=\"https://www.wizardingworld.com/\"
      rel=\"nofollow\">Harry Potter</a><br>\n<a href=\"https://www.erlang.org/\" rel=\"nofollow\">Erlang</a><br>\n<a
      href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">Ruby</a><br>\n<a href=\"https://clojure.org/\"
      rel=\"nofollow\">Clojure</a><br>\n<a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">ElixirConf</a></p><p>Special Guest: José Valim.</p>\n      "
  contentEncoded: "\n        <p>Today on Elixir Wizards we are joined by none other
    than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world,
    José found his way to functional programming and we hear all about the evolution
    of his philosophy and thought process around the time of the creation of the language.
    He gives us some great insight into why functional programming is so appealing
    to him and the problems he wanted to solve by creating Elixir. We chat about other
    languages and his use of Erlang, Elixir&#39;s three biggest influences and some
    important characters in the story. José also shares a bit of personal, behind
    the scenes stuff about his schedule and how he tries to stay as productive as
    possible. We finish off the chat, talking about performance and the measures José
    has taken in this regard. For all this and more from a true Elixir wizard, be
    sure to tune in!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>José&#39;s
    thoughts on our recent podcast name-change!</li>\n<li>The first steps for José
    in the process of writing a language.</li>\n<li>Reason for José&#39;s decision
    to step out of the Ruby on Rails world. </li>\n<li>The &#39;aha&#39; moment that
    José had when moving into functional programming. </li>\n<li>Some of the inspiration
    for Elixir from other languages.</li>\n<li>A few of the people that have mentored
    and inspired José in his career. </li>\n<li>The research and development phase
    for Elixir and José strategy for this. </li>\n<li>José&#39;s work habits, his
    typical day and the influence of his kids on his flow. </li>\n<li>Why José still
    considers himself an Elixir programmer despite his proximity. </li>\n<li>Elixir
    and machine learning; why the two are not more closely linked. </li>\n<li>Steps
    in the measurement process for José and Elixir. </li>\n<li>The time that José
    has spent on the performance side of the language. </li>\n<li>Sacrifices and substitution
    in optimizing Elixir&#39;s performance. </li>\n<li>Some of the things on the horizon
    that are exciting José. </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p><a
    href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a><br>\n<a href=\"https://github.com/josevalim\"
    rel=\"nofollow\">José Valim</a><br>\n<a href=\"http://plataformatec\" rel=\"nofollow\">Plataformatec</a><br>\n<a
    href=\"https://www.wizardingworld.com/\" rel=\"nofollow\">Harry Potter</a><br>\n<a
    href=\"https://www.erlang.org/\" rel=\"nofollow\">Erlang</a><br>\n<a href=\"https://www.ruby-lang.org/en/\"
    rel=\"nofollow\">Ruby</a><br>\n<a href=\"https://clojure.org/\" rel=\"nofollow\">Clojure</a><br>\n<a
    href=\"https://elixirconf.com/events\" rel=\"nofollow\">ElixirConf</a></p><p>Special
    Guest: José Valim.</p>\n      "
- title: Dr Jim Freeze on Hiring, Training, and Functional Programming – Working with
    Elixir
  slug: s3e1-dr-freeze
  link: https://smartlogic.io/podcast/elixir-wizards/s3e1-dr-freeze
  guid: 7f21096c-8f00-4f06-9b4a-a0a8b554e28b
  pubDate: Thu, 21 Nov 2019 06:00:00 -0500
  pubDateFriendly: November 21, 2019
  description: "Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to
    talk about his passion for and history in Elixir and functional programming. Dr.
    Freeze is one of the organizers of one of our favorite things in the world, Elixir
    Conf! He shares his story of coming to functional programming and his early days
    with Elixir, what he sees as the most important aspects of the conference before
    diving into what is on offer for those that attend. We talk about how employers
    can get Elixir newcomers up to speed on the language and the most effective ways
    Dr. Freeze stays abreast of developments in the field. Our guest also recommends
    a few resources for those wanting an introduction to Elixir and makes a great
    argument for the usefulness of a functional approach to programming. For all this
    and a whole bunch more, join us today!\nKey Points From This Episode:\nHow Dr.
    Freeze got started with Elixir and his programming background.\nA little bit about
    the early days of Elixir Conf and what the first events were like.  \nThe particulars
    of Dr. Freeze's doctorate and his title. \nEducation, networking and how Elixir
    Conf fits into the developer hiring game. \nThe training that is offered at the
    conference and the philosophy to serving attendees. \nDr. Freeze's recommendations
    for employers bringing newbies up to speed with Elixir. \nHow our guest continues
    his learning and stays focused on what is necessary.\nUseful resources and materials
    for Elixir, according to Dr. Freeze.\nContemplating functional programming and
    its key components. \nWhy to consider functional programming coming from an object-based
    background.\nThe biggest hurdles in moving over to functional programming and
    Elixir. \nFollowing the data and how much the simplicity of this directive can
    help. \nDr. Freeze's favorite thing in the functional world!\nLinks Mentioned
    in Today’s Episode:\nSmartLogic (https://www.smartlogic.com) \nDr. Jim Freeze
    on Twitter (https://twitter.com/jimfreeze)\nElixirConf (https://elixirconf.com/events) \nSophie
    DeBenedetto (http://sophiedebenedetto.nyc/)\nElixir Radar (https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir)\nPhoenix
    In Action (https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043)\nGeoffrey
    Lessel (http://www.apple.com)\nSaša Jurić (https://codesync.global/speaker/sasa-juric/)\nSandi
    Metz (https://www.sandimetz.com) Special Guest: Dr. Jim Freeze.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LD8PImGu
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7f21096c-8f00-4f06-9b4a-a0a8b554e28b.mp3
    length: '37471629'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '3'
    author: SmartLogic LLC
    subtitle: Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to
      talk about his passion for and history in Elixir and functional programming.
      Dr. Freeze is one of the organizers of one of our favorite things in the world,
      Elixir Conf! He shares his story of coming to functional programming and his
      early days with Elixir, what he sees as the most important aspects of the conference
      before diving into what is on offer for those that attend. We talk about how
      employers can get Elixir newcomers up to speed on the language and the most
      effective ways Dr. Freeze stays abreast of developments in the field. Our guest
      also recommends a few resources for those wanting an introduction to Elixir
      and makes a great argument for the usefulness of a functional approach to programming.
      For all this and a whole bunch more, join us today!
    duration: '25:40'
    explicit: 'no'
    keywords: elixirconf, functional programming, elixir
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7f21096c-8f00-4f06-9b4a-a0a8b554e28b/cover.jpg?v=2
    summary: "\n        <p>Welcome to Elixir Wizards, today we are joined by Dr. Jim
      Freeze to talk about his passion for and history in Elixir and functional programming.
      Dr. Freeze is one of the organizers of one of our favorite things in the world,
      Elixir Conf! He shares his story of coming to functional programming and his
      early days with Elixir, what he sees as the most important aspects of the conference
      before diving into what is on offer for those that attend. We talk about how
      employers can get Elixir newcomers up to speed on the language and the most
      effective ways Dr. Freeze stays abreast of developments in the field. Our guest
      also recommends a few resources for those wanting an introduction to Elixir
      and makes a great argument for the usefulness of a functional approach to programming.
      For all this and a whole bunch more, join us today!</p>\n\n<p>Key Points From
      This Episode:</p>\n\n<ul>\n<li>How Dr. Freeze got started with Elixir and his
      programming background.</li>\n<li>A little bit about the early days of Elixir
      Conf and what the first events were like.<br></li>\n<li>The particulars of Dr.
      Freeze&#39;s doctorate and his title. </li>\n<li>Education, networking and how
      Elixir Conf fits into the developer hiring game. </li>\n<li>The training that
      is offered at the conference and the philosophy to serving attendees. </li>\n<li>Dr.
      Freeze&#39;s recommendations for employers bringing newbies up to speed with
      Elixir. </li>\n<li>How our guest continues his learning and stays focused on
      what is necessary.</li>\n<li>Useful resources and materials for Elixir, according
      to Dr. Freeze.</li>\n<li>Contemplating functional programming and its key components.
      </li>\n<li>Why to consider functional programming coming from an object-based
      background.</li>\n<li>The biggest hurdles in moving over to functional programming
      and Elixir. </li>\n<li>Following the data and how much the simplicity of this
      directive can help. </li>\n<li>Dr. Freeze&#39;s favorite thing in the functional
      world!</li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:<br>\n<a href=\"https://www.smartlogic.com\"
      rel=\"nofollow\">SmartLogic</a> <br>\n<a href=\"https://twitter.com/jimfreeze\"
      rel=\"nofollow\">Dr. Jim Freeze on Twitter</a><br>\n<a href=\"https://elixirconf.com/events\"
      rel=\"nofollow\">ElixirConf</a> <br>\n<a href=\"http://sophiedebenedetto.nyc/\"
      rel=\"nofollow\">Sophie DeBenedetto</a><br>\n<a href=\"https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir\"
      rel=\"nofollow\">Elixir Radar</a><br>\n<a href=\"https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043\"
      rel=\"nofollow\">Phoenix In Action</a><br>\n<a href=\"http://www.apple.com\"
      rel=\"nofollow\">Geoffrey Lessel</a><br>\n<a href=\"https://codesync.global/speaker/sasa-juric/\"
      rel=\"nofollow\">Saša Jurić</a><br>\n<a href=\"https://www.sandimetz.com\" rel=\"nofollow\">Sandi
      Metz</a></p><p>Special Guest: Dr. Jim Freeze.</p>\n      "
  contentEncoded: "\n        <p>Welcome to Elixir Wizards, today we are joined by
    Dr. Jim Freeze to talk about his passion for and history in Elixir and functional
    programming. Dr. Freeze is one of the organizers of one of our favorite things
    in the world, Elixir Conf! He shares his story of coming to functional programming
    and his early days with Elixir, what he sees as the most important aspects of
    the conference before diving into what is on offer for those that attend. We talk
    about how employers can get Elixir newcomers up to speed on the language and the
    most effective ways Dr. Freeze stays abreast of developments in the field. Our
    guest also recommends a few resources for those wanting an introduction to Elixir
    and makes a great argument for the usefulness of a functional approach to programming.
    For all this and a whole bunch more, join us today!</p>\n\n<p>Key Points From
    This Episode:</p>\n\n<ul>\n<li>How Dr. Freeze got started with Elixir and his
    programming background.</li>\n<li>A little bit about the early days of Elixir
    Conf and what the first events were like.<br></li>\n<li>The particulars of Dr.
    Freeze&#39;s doctorate and his title. </li>\n<li>Education, networking and how
    Elixir Conf fits into the developer hiring game. </li>\n<li>The training that
    is offered at the conference and the philosophy to serving attendees. </li>\n<li>Dr.
    Freeze&#39;s recommendations for employers bringing newbies up to speed with Elixir.
    </li>\n<li>How our guest continues his learning and stays focused on what is necessary.</li>\n<li>Useful
    resources and materials for Elixir, according to Dr. Freeze.</li>\n<li>Contemplating
    functional programming and its key components. </li>\n<li>Why to consider functional
    programming coming from an object-based background.</li>\n<li>The biggest hurdles
    in moving over to functional programming and Elixir. </li>\n<li>Following the
    data and how much the simplicity of this directive can help. </li>\n<li>Dr. Freeze&#39;s
    favorite thing in the functional world!</li>\n</ul>\n\n<p>Links Mentioned in Today’s
    Episode:<br>\n<a href=\"https://www.smartlogic.com\" rel=\"nofollow\">SmartLogic</a> <br>\n<a
    href=\"https://twitter.com/jimfreeze\" rel=\"nofollow\">Dr. Jim Freeze on Twitter</a><br>\n<a
    href=\"https://elixirconf.com/events\" rel=\"nofollow\">ElixirConf</a> <br>\n<a
    href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">Sophie DeBenedetto</a><br>\n<a
    href=\"https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir\"
    rel=\"nofollow\">Elixir Radar</a><br>\n<a href=\"https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043\"
    rel=\"nofollow\">Phoenix In Action</a><br>\n<a href=\"http://www.apple.com\" rel=\"nofollow\">Geoffrey
    Lessel</a><br>\n<a href=\"https://codesync.global/speaker/sasa-juric/\" rel=\"nofollow\">Saša
    Jurić</a><br>\n<a href=\"https://www.sandimetz.com\" rel=\"nofollow\">Sandi Metz</a></p><p>Special
    Guest: Dr. Jim Freeze.</p>\n      "
- title: Season Two Wrap
  slug: season-two-wrap
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-wrap
  guid: e472382c-8b12-4b39-9e07-365dbdb8d77d
  pubDate: Thu, 03 Oct 2019 06:00:00 -0400
  pubDateFriendly: October  3, 2019
  description: "Welcome to the last episode of Season 2 of the podcast! We are taking
    this opportunity to recap what we covered in the season and talk about what we
    liked and what we didn't like so much. We do not have a guest for today's show
    so it is just Eric and Justus doing some reflection. We do want to take this opportunity
    to thank all of our guests that have appeared on this season and shared their
    expertise with us, we definitely feel we learned a lot during this time! In Season
    3 we will be focussing on functional programming, performance and teaching Elixir,
    so make sure to keep an eye out for when that drops in the future!\nKey Points
    From This Episode:\nThe possibility of longer episodes for next season \nReflections
    on ElixirConf and the time we spent there this year. \nThe upcoming conference
    in New Orleans that Eric is keynoting.  \nThoughts on the future of the podcast
    and the promise of Season 3. \nReach out! We want to hear from you! \nAnd much
    more! \nLinks Mentioned in Today’s Episode:\nSmartLogic — https://www.smartlogic.io\nBrooklyn
    Zelenka — https://github.com/expede\nBryan Joseph — https://github.com/bryanjos\nPaul
    Schoenfelder — https://github.com/bitwalker\nMeryl Dakin— https://github.com/meryldakin\nRené
    Föhring— https://twitter.com/rrrene\nMichal Muskala — https://michal.muskala.eu/\nTodd
    Resudek — https://www.linkedin.com/in/toddresudek/\nShanti Chellaram— https://github.com/shantiii\nSophie
    DeBenedetto — http://sophiedebenedetto.nyc/\nDave Lucia — https://www.linkedin.com/in/david-lucia-a395441b\nElixirConf
    — https://elixirconf.com/2019\nThe Big Elixir — https://www.thebigelixir.com/\nLe
    Petit Theatre — http://www.lepetittheatre.com\nLone Star Elixir — https://www.lonestarelixir.com\nThe
    Empire Strikes Back — https://www.rottentomatoes.com/m/empirestrikesback\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DB2DklG3
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e472382c-8b12-4b39-9e07-365dbdb8d77d.mp3
    length: '17799716'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome to the last episode of Season 2 of the podcast! We are taking
      this opportunity to recap what we covered in the season and talk about what
      we liked and what we didn't like so much. We do not have a guest for today's
      show so it is just Eric and Justus doing some reflection. We do want to take
      this opportunity to thank all of our guests that have appeared on this season
      and shared their expertise with us, we definitely feel we learned a lot during
      this time! In Season 3 we will be focussing on functional programming, performance
      and teaching Elixir, so make sure to keep an eye out for when that drops in
      the future!
    duration: '11:53'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>Welcome to the last episode of Season 2 of the podcast!
      We are taking this opportunity to recap what we covered in the season and talk
      about what we liked and what we didn&#39;t like so much. We do not have a guest
      for today&#39;s show so it is just Eric and Justus doing some reflection. We
      do want to take this opportunity to thank all of our guests that have appeared
      on this season and shared their expertise with us, we definitely feel we learned
      a lot during this time! In Season 3 we will be focussing on functional programming,
      performance and teaching Elixir, so make sure to keep an eye out for when that
      drops in the future!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>The
      possibility of longer episodes for next season </li>\n<li>Reflections on ElixirConf
      and the time we spent there this year. </li>\n<li>The upcoming conference in
      New Orleans that Eric is keynoting.<br></li>\n<li>Thoughts on the future of
      the podcast and the promise of Season 3. </li>\n<li>Reach out! We want to hear
      from you! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io\"
      rel=\"nofollow\">https://www.smartlogic.io</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
      rel=\"nofollow\">https://github.com/expede</a><br>\nBryan Joseph — <a href=\"https://github.com/bryanjos\"
      rel=\"nofollow\">https://github.com/bryanjos</a><br>\nPaul Schoenfelder — <a
      href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a><br>\nMeryl
      Dakin— <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nRené
      Föhring— <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nMichal
      Muskala — <a href=\"https://michal.muskala.eu/\" rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nTodd
      Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nShanti
      Chellaram— <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nSophie
      DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nDave
      Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nThe
      Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nLe
      Petit Theatre — <a href=\"http://www.lepetittheatre.com\" rel=\"nofollow\">http://www.lepetittheatre.com</a><br>\nLone
      Star Elixir — <a href=\"https://www.lonestarelixir.com\" rel=\"nofollow\">https://www.lonestarelixir.com</a><br>\nThe
      Empire Strikes Back — <a href=\"https://www.rottentomatoes.com/m/empire_strikes_back\"
      rel=\"nofollow\">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>\n
      \     "
  contentEncoded: "\n        <p>Welcome to the last episode of Season 2 of the podcast!
    We are taking this opportunity to recap what we covered in the season and talk
    about what we liked and what we didn&#39;t like so much. We do not have a guest
    for today&#39;s show so it is just Eric and Justus doing some reflection. We do
    want to take this opportunity to thank all of our guests that have appeared on
    this season and shared their expertise with us, we definitely feel we learned
    a lot during this time! In Season 3 we will be focussing on functional programming,
    performance and teaching Elixir, so make sure to keep an eye out for when that
    drops in the future!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>The
    possibility of longer episodes for next season </li>\n<li>Reflections on ElixirConf
    and the time we spent there this year. </li>\n<li>The upcoming conference in New
    Orleans that Eric is keynoting.<br></li>\n<li>Thoughts on the future of the podcast
    and the promise of Season 3. </li>\n<li>Reach out! We want to hear from you! </li>\n<li>And
    much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
    — <a href=\"https://www.smartlogic.io\" rel=\"nofollow\">https://www.smartlogic.io</a><br>\nBrooklyn
    Zelenka — <a href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a><br>\nBryan
    Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nPaul
    Schoenfelder — <a href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a><br>\nMeryl
    Dakin— <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nRené
    Föhring— <a href=\"https://twitter.com/rrrene\" rel=\"nofollow\">https://twitter.com/rrrene</a><br>\nMichal
    Muskala — <a href=\"https://michal.muskala.eu/\" rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nTodd
    Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\" rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nShanti
    Chellaram— <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nSophie
    DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nDave
    Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nThe
    Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nLe
    Petit Theatre — <a href=\"http://www.lepetittheatre.com\" rel=\"nofollow\">http://www.lepetittheatre.com</a><br>\nLone
    Star Elixir — <a href=\"https://www.lonestarelixir.com\" rel=\"nofollow\">https://www.lonestarelixir.com</a><br>\nThe
    Empire Strikes Back — <a href=\"https://www.rottentomatoes.com/m/empire_strikes_back\"
    rel=\"nofollow\">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>\n
    \     "
- title: Dave Lucia on Rustler – Elixir Internals
  slug: season-two-lucia
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-lucia
  guid: 1f938053-676b-4137-ad82-f104ebda9488
  pubDate: Thu, 26 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 26, 2019
  description: "Our guest today on the show is Dave Lucia, who is currently the Vice
    President of Engineering at SimpleBet. He is here as part of Elixir Internals
    series, to talk to us and all our listeners about Rustler and the contribution
    he made to the library! According to our guest, Rustler acts as a bridge between
    Rust and Elixir and allows users to employ the power of Rust within Elixir and
    a great example of this can be found in Dave's work at SimpleBet. He explains
    some of this application and the functionality and improvement it offers and the
    big difference the machine learning models make to this work. Dave also gives
    us some background to his work and career, previous employment and early explorations
    of open-source software. He also shares some great tips for problem-solving and
    learning and improving at programming in Rust. We unpack some of the biggest challenges
    that faced the creation of Rustler, notable differences between Rust and Elixir
    and the technical components of the library that the team created. For all this
    and then some, join us for this great episode!\nKey Points From This Episode:\nMore
    about our guest and his current work at SimpleBet. \nHow Dave got started with
    Elixir while at Bloomberg.\nThe interesting and beautiful way in which The Outline
    used Elixir. \nDave's early forays and experiences with open source software.
    \nProblem finding and solving; Dave's tips to those wanting to improve. \nDave's
    employers' contribution and allowance for open source projects.  \nIntroducing
    Rustler and what users can do with it! \nThe biggest challenges of using multiple
    languages in the backend. \nHow Rustler works; the core, the code generator and
    more.\nThe most important differences between Rust and Elixir.\nDave's best advice
    and resources for learning and mastering Rust.\nAnd much more! \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://www.smartlogic.io\nDave Lucia — https://www.linkedin.com/in/david-lucia-a395441b\nRustler
    — https://github.com/rusterlium/rustler\nSimpleBet — https://simplebet.io\nDave
    Lucia on Twitter — https://twitter.com/davydog187\nDave Lucia Email — dave@simplebet.io\nElixir
    — https://elixir-lang.org\nPython — https://www.python.org\nJavaScript — https://www.javascript.com\nRust
    — https://www.rust-lang.org\nBloomberg — https://www.bloomberg.com\nSlack — https://slack.com\nVox
    Media — https://www.voxmedia.com\nThe Outline — https://theoutline.com\nThe Rust
    Programming Language — https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\nRust
    Playground — https://play.rust-lang.org\nElm Compiler — https://github.com/elm/compiler\n
    Special Guest: Dave Lucia.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+KDEDJSet
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1f938053-676b-4137-ad82-f104ebda9488.mp3
    length: '32008356'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Our guest today on the show is Dave Lucia, who is currently the Vice
      President of Engineering at SimpleBet. He is here as part of Elixir Internals
      series, to talk to us and all our listeners about Rustler and the contribution
      he made to the library! According to our guest, Rustler acts as a bridge between
      Rust and Elixir and allows users to employ the power of Rust within Elixir and
      a great example of this can be found in Dave's work at SimpleBet. He explains
      some of this application and the functionality and improvement it offers and
      the big difference the machine learning models make to this work.
    duration: '32:31'
    explicit: 'no'
    keywords: elixir, rustler, rust, elm, simplebet
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1f938053-676b-4137-ad82-f104ebda9488/cover.jpg?v=3
    summary: "\n        <p>Our guest today on the show is Dave Lucia, who is currently
      the Vice President of Engineering at SimpleBet. He is here as part of Elixir
      Internals series, to talk to us and all our listeners about Rustler and the
      contribution he made to the library! According to our guest, Rustler acts as
      a bridge between Rust and Elixir and allows users to employ the power of Rust
      within Elixir and a great example of this can be found in Dave&#39;s work at
      SimpleBet. He explains some of this application and the functionality and improvement
      it offers and the big difference the machine learning models make to this work.
      Dave also gives us some background to his work and career, previous employment
      and early explorations of open-source software. He also shares some great tips
      for problem-solving and learning and improving at programming in Rust. We unpack
      some of the biggest challenges that faced the creation of Rustler, notable differences
      between Rust and Elixir and the technical components of the library that the
      team created. For all this and then some, join us for this great episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>More about our guest and
      his current work at SimpleBet. </li>\n<li>How Dave got started with Elixir while
      at Bloomberg.</li>\n<li>The interesting and beautiful way in which The Outline
      used Elixir. </li>\n<li>Dave&#39;s early forays and experiences with open source
      software. </li>\n<li>Problem finding and solving; Dave&#39;s tips to those wanting
      to improve. </li>\n<li>Dave&#39;s employers&#39; contribution and allowance
      for open source projects.<br></li>\n<li>Introducing Rustler and what users can
      do with it! </li>\n<li>The biggest challenges of using multiple languages in
      the backend. </li>\n<li>How Rustler works; the core, the code generator and
      more.</li>\n<li>The most important differences between Rust and Elixir.</li>\n<li>Dave&#39;s
      best advice and resources for learning and mastering Rust.</li>\n<li>And much
      more! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic
      — <a href=\"https://www.smartlogic.io\" rel=\"nofollow\">https://www.smartlogic.io</a><br>\nDave
      Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\" rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nRustler
      — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nSimpleBet
      — <a href=\"https://simplebet.io\" rel=\"nofollow\">https://simplebet.io</a><br>\nDave
      Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a><br>\nDave
      Lucia Email — <a href=\"mailto:dave@simplebet.io\" rel=\"nofollow\">dave@simplebet.io</a><br>\nElixir
      — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nPython
      — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nJavaScript
      — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nRust
      — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nBloomberg
      — <a href=\"https://www.bloomberg.com\" rel=\"nofollow\">https://www.bloomberg.com</a><br>\nSlack
      — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nVox
      Media — <a href=\"https://www.voxmedia.com\" rel=\"nofollow\">https://www.voxmedia.com</a><br>\nThe
      Outline — <a href=\"https://theoutline.com\" rel=\"nofollow\">https://theoutline.com</a><br>\nThe
      Rust Programming Language — <a href=\"https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\"
      rel=\"nofollow\">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>\nRust
      Playground — <a href=\"https://play.rust-lang.org\" rel=\"nofollow\">https://play.rust-lang.org</a><br>\nElm
      Compiler — <a href=\"https://github.com/elm/compiler\" rel=\"nofollow\">https://github.com/elm/compiler</a></p><p>Special
      Guest: Dave Lucia.</p>\n      "
  contentEncoded: "\n        <p>Our guest today on the show is Dave Lucia, who is
    currently the Vice President of Engineering at SimpleBet. He is here as part of
    Elixir Internals series, to talk to us and all our listeners about Rustler and
    the contribution he made to the library! According to our guest, Rustler acts
    as a bridge between Rust and Elixir and allows users to employ the power of Rust
    within Elixir and a great example of this can be found in Dave&#39;s work at SimpleBet.
    He explains some of this application and the functionality and improvement it
    offers and the big difference the machine learning models make to this work. Dave
    also gives us some background to his work and career, previous employment and
    early explorations of open-source software. He also shares some great tips for
    problem-solving and learning and improving at programming in Rust. We unpack some
    of the biggest challenges that faced the creation of Rustler, notable differences
    between Rust and Elixir and the technical components of the library that the team
    created. For all this and then some, join us for this great episode!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>More about our guest and his
    current work at SimpleBet. </li>\n<li>How Dave got started with Elixir while at
    Bloomberg.</li>\n<li>The interesting and beautiful way in which The Outline used
    Elixir. </li>\n<li>Dave&#39;s early forays and experiences with open source software.
    </li>\n<li>Problem finding and solving; Dave&#39;s tips to those wanting to improve.
    </li>\n<li>Dave&#39;s employers&#39; contribution and allowance for open source
    projects.<br></li>\n<li>Introducing Rustler and what users can do with it! </li>\n<li>The
    biggest challenges of using multiple languages in the backend. </li>\n<li>How
    Rustler works; the core, the code generator and more.</li>\n<li>The most important
    differences between Rust and Elixir.</li>\n<li>Dave&#39;s best advice and resources
    for learning and mastering Rust.</li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io\"
    rel=\"nofollow\">https://www.smartlogic.io</a><br>\nDave Lucia — <a href=\"https://www.linkedin.com/in/david-lucia-a395441b\"
    rel=\"nofollow\">https://www.linkedin.com/in/david-lucia-a395441b</a><br>\nRustler
    — <a href=\"https://github.com/rusterlium/rustler\" rel=\"nofollow\">https://github.com/rusterlium/rustler</a><br>\nSimpleBet
    — <a href=\"https://simplebet.io\" rel=\"nofollow\">https://simplebet.io</a><br>\nDave
    Lucia on Twitter — <a href=\"https://twitter.com/davydog187\" rel=\"nofollow\">https://twitter.com/davydog187</a><br>\nDave
    Lucia Email — <a href=\"mailto:dave@simplebet.io\" rel=\"nofollow\">dave@simplebet.io</a><br>\nElixir
    — <a href=\"https://elixir-lang.org\" rel=\"nofollow\">https://elixir-lang.org</a><br>\nPython
    — <a href=\"https://www.python.org\" rel=\"nofollow\">https://www.python.org</a><br>\nJavaScript
    — <a href=\"https://www.javascript.com\" rel=\"nofollow\">https://www.javascript.com</a><br>\nRust
    — <a href=\"https://www.rust-lang.org\" rel=\"nofollow\">https://www.rust-lang.org</a><br>\nBloomberg
    — <a href=\"https://www.bloomberg.com\" rel=\"nofollow\">https://www.bloomberg.com</a><br>\nSlack
    — <a href=\"https://slack.com\" rel=\"nofollow\">https://slack.com</a><br>\nVox
    Media — <a href=\"https://www.voxmedia.com\" rel=\"nofollow\">https://www.voxmedia.com</a><br>\nThe
    Outline — <a href=\"https://theoutline.com\" rel=\"nofollow\">https://theoutline.com</a><br>\nThe
    Rust Programming Language — <a href=\"https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284\"
    rel=\"nofollow\">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>\nRust
    Playground — <a href=\"https://play.rust-lang.org\" rel=\"nofollow\">https://play.rust-lang.org</a><br>\nElm
    Compiler — <a href=\"https://github.com/elm/compiler\" rel=\"nofollow\">https://github.com/elm/compiler</a></p><p>Special
    Guest: Dave Lucia.</p>\n      "
- title: Eric Oestrich on ExVenture – Elixir Internals
  slug: season-two-oestrich
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-oestrich
  guid: 0a947a18-82f2-4b2e-8c0c-69696c5980d9
  pubDate: Thu, 19 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 19, 2019
  description: "This season on Smart Software Season 2, we are focused on the inner
    workings of Elixir and the inner workings of popular Elixir libraries, or Elixir
    internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich
    who's responsible for the wildly successful Elixir MUD framework ExVenture.\nExVenture
    - https://exventure.org/\nMUDs - https://en.wikipedia.org/wiki/MUD\nEcto - https://github.com/elixir-ecto/ecto\nEric's
    Going Multi-Node presentation at ElixirConf - https://www.youtube.com/watch?v=lCUKQnkjajo\nThe
    Big Elixir - https://www.thebigelixir.com/\nEric's Prometheus presentation at
    Lonestar Elixir - https://www.youtube.com/watch?v=ETUD9SaRCjY\nPrometheus - https://prometheus.io/\nGo
    - https://golang.org/\nCelluloid - https://celluloid.io/\nPhoenix - https://phoenixframework.org/\nGrapevine
    - https://grapevine.haus/\nGossip - https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+tquuIWGm
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0a947a18-82f2-4b2e-8c0c-69696c5980d9.mp3
    length: '29316603'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: This season on Smart Software Season 2, we are focused on the inner
      workings of Elixir and the inner workings of popular Elixir libraries, or Elixir
      internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich
      who's responsible for the wildly successful Elixir MUD framework ExVenture.
    duration: '29:26'
    explicit: 'no'
    keywords: exventure
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0a947a18-82f2-4b2e-8c0c-69696c5980d9/cover.jpg?v=3
    summary: "\n        <p>This season on Smart Software Season 2, we are focused
      on the inner workings of Elixir and the inner workings of popular Elixir libraries,
      or Elixir internals. Today, I have the pleasure of interviewing my colleague,
      Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework
      ExVenture.</p>\n\n<p>ExVenture - <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nMUDs
      - <a href=\"https://en.wikipedia.org/wiki/MUD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/MUD</a><br>\nEcto
      - <a href=\"https://github.com/elixir-ecto/ecto\" rel=\"nofollow\">https://github.com/elixir-ecto/ecto</a><br>\nEric&#39;s
      Going Multi-Node presentation at ElixirConf - <a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>\nThe Big
      Elixir - <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nEric&#39;s
      Prometheus presentation at Lonestar Elixir - <a href=\"https://www.youtube.com/watch?v=ETUD9SaRCjY\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>\nPrometheus
      - <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nGo
      - <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCelluloid
      - <a href=\"https://celluloid.io/\" rel=\"nofollow\">https://celluloid.io/</a><br>\nPhoenix
      - <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nGrapevine
      - <a href=\"https://grapevine.haus/\" rel=\"nofollow\">https://grapevine.haus/</a><br>\nGossip
      - <a href=\"https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\"
      rel=\"nofollow\">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p>\n      "
  contentEncoded: "\n        <p>This season on Smart Software Season 2, we are focused
    on the inner workings of Elixir and the inner workings of popular Elixir libraries,
    or Elixir internals. Today, I have the pleasure of interviewing my colleague,
    Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework
    ExVenture.</p>\n\n<p>ExVenture - <a href=\"https://exventure.org/\" rel=\"nofollow\">https://exventure.org/</a><br>\nMUDs
    - <a href=\"https://en.wikipedia.org/wiki/MUD\" rel=\"nofollow\">https://en.wikipedia.org/wiki/MUD</a><br>\nEcto
    - <a href=\"https://github.com/elixir-ecto/ecto\" rel=\"nofollow\">https://github.com/elixir-ecto/ecto</a><br>\nEric&#39;s
    Going Multi-Node presentation at ElixirConf - <a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>\nThe Big
    Elixir - <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nEric&#39;s
    Prometheus presentation at Lonestar Elixir - <a href=\"https://www.youtube.com/watch?v=ETUD9SaRCjY\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>\nPrometheus
    - <a href=\"https://prometheus.io/\" rel=\"nofollow\">https://prometheus.io/</a><br>\nGo
    - <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCelluloid
    - <a href=\"https://celluloid.io/\" rel=\"nofollow\">https://celluloid.io/</a><br>\nPhoenix
    - <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a><br>\nGrapevine
    - <a href=\"https://grapevine.haus/\" rel=\"nofollow\">https://grapevine.haus/</a><br>\nGossip
    - <a href=\"https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/\" rel=\"nofollow\">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p>\n      "
- title: Sophie DeBenedetto on Excrypt and Railway – Elixir Internals
  slug: season-two-debenedetto
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-debenedetto
  guid: 7b360fac-dde4-44a4-b637-762e19a0274b
  pubDate: Thu, 12 Sep 2019 06:00:00 -0400
  pubDateFriendly: September 12, 2019
  description: "Welcome to another episode of the podcast everybody! As we continue
    our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to
    tell us about the two libraries she and the Flatiron School created! We talk about
    Encrypt and Railway and a bunch of other great stuff from the world of Elixir
    and open source and Sophie shares so much about why she is particularly excited
    about things at the moment. She talks about the maturation of the Elixir community
    and her first and most important open-source experiences before diving into her
    hopes for the future of these platforms. We also discuss the ins and out of the
    two libraries and our guest does a fantastic job of explaining their functions
    and the reasons they were built. Sophie shares the major challenges that faced
    her and the team in creating them and a whole lot more, so make sure to tune in
    today for all this great information!\nKey Points From This Episode:\nA brief
    introduction to Sophie's career, the Flatiron School and her Elixir work.\nSophie's
    first experiences with open source, contributing to the Elixir School. \nFlatiron's
    support of open source and their attitude towards the growth of engineers. \nWhy
    Elixir and Ruby are such important languages to Sophie and Flatiron. \nSophie's
    wishes for Elixir and what she wants to see more of in the community. \nIntroducing
    Encrypt and Excrypt for Elixir and why Flatiron chose to build them.\nThe hardest
    parts of building the library, the challenges of encryption.\nElixir's built-in
    option parser; convenience and accessing data easily.\nThe Railway hex package
    and what it enables users to do. \nBreaking down the functions of RabbitMQ for
    Erlang. \nThe two things that Sophie is most excited about in the Elixir space
    right now!\nAnd much more! \nLinks Mentioned in Today’s Episode:\nSophie DeBenedetto
    — http://sophiedebenedetto.nyc/\nFlatiron School — http://sophiedebenedetto.nyc/\nElixir
    School — https://elixirschool.com/en/\nEncrypt — https://github.com/flatiron-labs/encrypt\nEscript
    — https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\nRuby — https://www.ruby-lang.org/en/\nKafka
    — https://kafka.apache.org\nEcto — https://hexdocs.pm/ecto/Ecto.html\nErlang —
    https://www.erlang.org\nRabbitMQ — https://www.rabbitmq.com\nPhoenix — https://phoenixframework.org\nLiveView
    — https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\nElixir
    Conf — https://elixirconf.com/2019 Special Guest: Sophie DeBenedetto.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+08mfuqOk
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7b360fac-dde4-44a4-b637-762e19a0274b.mp3
    length: '44914201'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome to another episode of the podcast everybody! As we continue
      our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto
      to tell us about the two libraries she and the Flatiron School created! We talk
      about Encrypt and Railway and a bunch of other great stuff from the world of
      Elixir and open source and Sophie shares so much about why she is particularly
      excited about things at the moment.
    duration: '30:42'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7b360fac-dde4-44a4-b637-762e19a0274b/cover.jpg?v=3
    summary: "\n        <p>Welcome to another episode of the podcast everybody! As
      we continue our journey into Elixir internals in Season 2, we welcome Sophie
      DeBenedetto to tell us about the two libraries she and the Flatiron School created!
      We talk about Encrypt and Railway and a bunch of other great stuff from the
      world of Elixir and open source and Sophie shares so much about why she is particularly
      excited about things at the moment. She talks about the maturation of the Elixir
      community and her first and most important open-source experiences before diving
      into her hopes for the future of these platforms. We also discuss the ins and
      out of the two libraries and our guest does a fantastic job of explaining their
      functions and the reasons they were built. Sophie shares the major challenges
      that faced her and the team in creating them and a whole lot more, so make sure
      to tune in today for all this great information!</p>\n\n<p><strong>Key Points
      From This Episode:</strong></p>\n\n<ul>\n<li>A brief introduction to Sophie&#39;s
      career, the Flatiron School and her Elixir work.</li>\n<li>Sophie&#39;s first
      experiences with open source, contributing to the Elixir School. </li>\n<li>Flatiron&#39;s
      support of open source and their attitude towards the growth of engineers. </li>\n<li>Why
      Elixir and Ruby are such important languages to Sophie and Flatiron. </li>\n<li>Sophie&#39;s
      wishes for Elixir and what she wants to see more of in the community. </li>\n<li>Introducing
      Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>\n<li>The
      hardest parts of building the library, the challenges of encryption.</li>\n<li>Elixir&#39;s
      built-in option parser; convenience and accessing data easily.</li>\n<li>The
      Railway hex package and what it enables users to do. </li>\n<li>Breaking down
      the functions of RabbitMQ for Erlang. </li>\n<li>The two things that Sophie
      is most excited about in the Elixir space right now!</li>\n<li>And much more!
      </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto
      — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFlatiron
      School — <a href=\"http://sophiedebenedetto.nyc/\" rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir
      School — <a href=\"https://elixirschool.com/en/\" rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nEncrypt
      — <a href=\"https://github.com/flatiron-labs/encrypt\" rel=\"nofollow\">https://github.com/flatiron-labs/encrypt</a><br>\nEscript
      — <a href=\"https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\" rel=\"nofollow\">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nKafka
      — <a href=\"https://kafka.apache.org\" rel=\"nofollow\">https://kafka.apache.org</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nErlang
      — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nRabbitMQ
      — <a href=\"https://www.rabbitmq.com\" rel=\"nofollow\">https://www.rabbitmq.com</a><br>\nPhoenix
      — <a href=\"https://phoenixframework.org\" rel=\"nofollow\">https://phoenixframework.org</a><br>\nLiveView
      — <a href=\"https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\"
      rel=\"nofollow\">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>\nElixir
      Conf — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a></p><p>Special
      Guest: Sophie DeBenedetto.</p>\n      "
  contentEncoded: "\n        <p>Welcome to another episode of the podcast everybody!
    As we continue our journey into Elixir internals in Season 2, we welcome Sophie
    DeBenedetto to tell us about the two libraries she and the Flatiron School created!
    We talk about Encrypt and Railway and a bunch of other great stuff from the world
    of Elixir and open source and Sophie shares so much about why she is particularly
    excited about things at the moment. She talks about the maturation of the Elixir
    community and her first and most important open-source experiences before diving
    into her hopes for the future of these platforms. We also discuss the ins and
    out of the two libraries and our guest does a fantastic job of explaining their
    functions and the reasons they were built. Sophie shares the major challenges
    that faced her and the team in creating them and a whole lot more, so make sure
    to tune in today for all this great information!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>A brief introduction to Sophie&#39;s
    career, the Flatiron School and her Elixir work.</li>\n<li>Sophie&#39;s first
    experiences with open source, contributing to the Elixir School. </li>\n<li>Flatiron&#39;s
    support of open source and their attitude towards the growth of engineers. </li>\n<li>Why
    Elixir and Ruby are such important languages to Sophie and Flatiron. </li>\n<li>Sophie&#39;s
    wishes for Elixir and what she wants to see more of in the community. </li>\n<li>Introducing
    Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>\n<li>The
    hardest parts of building the library, the challenges of encryption.</li>\n<li>Elixir&#39;s
    built-in option parser; convenience and accessing data easily.</li>\n<li>The Railway
    hex package and what it enables users to do. </li>\n<li>Breaking down the functions
    of RabbitMQ for Erlang. </li>\n<li>The two things that Sophie is most excited
    about in the Elixir space right now!</li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Sophie DeBenedetto — <a href=\"http://sophiedebenedetto.nyc/\"
    rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nFlatiron School — <a href=\"http://sophiedebenedetto.nyc/\"
    rel=\"nofollow\">http://sophiedebenedetto.nyc/</a><br>\nElixir School — <a href=\"https://elixirschool.com/en/\"
    rel=\"nofollow\">https://elixirschool.com/en/</a><br>\nEncrypt — <a href=\"https://github.com/flatiron-labs/encrypt\"
    rel=\"nofollow\">https://github.com/flatiron-labs/encrypt</a><br>\nEscript — <a
    href=\"https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html\" rel=\"nofollow\">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nKafka
    — <a href=\"https://kafka.apache.org\" rel=\"nofollow\">https://kafka.apache.org</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\nErlang
    — <a href=\"https://www.erlang.org\" rel=\"nofollow\">https://www.erlang.org</a><br>\nRabbitMQ
    — <a href=\"https://www.rabbitmq.com\" rel=\"nofollow\">https://www.rabbitmq.com</a><br>\nPhoenix
    — <a href=\"https://phoenixframework.org\" rel=\"nofollow\">https://phoenixframework.org</a><br>\nLiveView
    — <a href=\"https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\"
    rel=\"nofollow\">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>\nElixir
    Conf — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a></p><p>Special
    Guest: Sophie DeBenedetto.</p>\n      "
- title: Shanti Chellaram on Pri-Queue and raft_erl – Elixir Internals
  slug: season-two-chellaram
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-chellaram
  guid: ec6a1593-38d7-48b0-8494-9dd83f8f6cff
  pubDate: Thu, 05 Sep 2019 06:00:00 -0400
  pubDateFriendly: September  5, 2019
  description: "Today on the show we welcome Shanti Chellaram to talk about a couple
    of Erlang libraries she has created! We hear from her about Pri-Queue and rafterl,
    and her motivation behind making them and some of the things we wishes she did
    differently! Shanti shares some of her background, early coding experiences, affinity
    for open source and her current work situation. From there we look at Pri-Queue,
    the problem it addresses and what a priority queue is. A highlight of the show
    is Shanti giving the best explanation of a bootstrapped skew binomial heap we
    have heard before explaining some of the main issues she faced in creating Pri-Queue.
    We then turn to rafterl, how she got started with it and her hopes for its future.
    Throughout the conversation Shanti shares her philosophy towards open source and
    coding going forward as well as offering advice for newcomers to Erlang. Make
    you you join us for this fantastic episode!\nKey Points From This Episode:\nA
    little bit about Shanti's background and current employment.\nShanti's early experiences
    and what got her into open source software. \nSome coding decisions that Shanti
    would make differently in retrospect. \nThe problem that Pri-Queue solves; the
    dearth of data efficient libraries. \nWhat is a priority queue? Ordering your
    data with scores.\nShanti explains a bootstrapped skew binomial heap!\nSome of
    the hurdles that Shanti faced in writing Pri-Queue. \nHow Shanti got started on
    her other library, raft_erl. \nThe three Raft protocols and how much of it is
    implemented in the library. \nShanti's next goals for raft_erl; bug free and widely
    used.\nThe importance of distributed systems and Shanti's philosophy looking to
    the future.\nAdvice for someone just starting out in Elixir!\nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nSmartLogic — https://www.smartlogic.io/\nShanti
    Chellaram Linkedin— https://www.linkedin.com/in/shanti-chellaram-495444187\nShanti
    Chellaram on Twitter — https://twitter.com/theccoder\nShanti Chellaram on github
    — https://github.com/shantiii\nErlang — https://www.erlang.org/\nElixir — https://elixir-lang.org/\nPri-Queue
    — https://github.com/okeuday/pqueue\nrafterl — https://github.com/shantiii/rafterl\nMailChimp
    — https://mailchimp.com\nTeachers Pay Teachers — https://www.teacherspayteachers.com/\nPurely
    Functional Data Structures — https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\nRust
    — https://www.rust-lang.org/\nRaft — https://raft.github.io/\nRaspberry Pi — https://www.raspberrypi.org/\nElixirConf
    — https://elixirconf.com/2019\nPartisan — https://partisan.cloud/\n Special Guests:
    Dan Ivovich and Shanti Chellaram.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+t4R4xiHv
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff.mp3
    length: '42603379'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we welcome Shanti Chellaram to talk about a couple
      of Erlang libraries she has created! We hear from her about Pri-Queue and raft_erl,
      and her motivation behind making them and some of the things we wishes she did
      differently! Shanti shares some of her background, early coding experiences,
      affinity for open source and her current work situation. From there we look
      at Pri-Queue, the problem it addresses and what a priority queue is.
    duration: '28:57'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff/cover.jpg?v=3
    summary: "\n        <p>Today on the show we welcome Shanti Chellaram to talk about
      a couple of Erlang libraries she has created! We hear from her about Pri-Queue
      and raft_erl, and her motivation behind making them and some of the things we
      wishes she did differently! Shanti shares some of her background, early coding
      experiences, affinity for open source and her current work situation. From there
      we look at Pri-Queue, the problem it addresses and what a priority queue is.
      A highlight of the show is Shanti giving the best explanation of a bootstrapped
      skew binomial heap we have heard before explaining some of the main issues she
      faced in creating Pri-Queue. We then turn to raft_erl, how she got started with
      it and her hopes for its future. Throughout the conversation Shanti shares her
      philosophy towards open source and coding going forward as well as offering
      advice for newcomers to Erlang. Make you you join us for this fantastic episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Shanti&#39;s
      background and current employment.</li>\n<li>Shanti&#39;s early experiences
      and what got her into open source software. </li>\n<li>Some coding decisions
      that Shanti would make differently in retrospect. </li>\n<li>The problem that
      Pri-Queue solves; the dearth of data efficient libraries. </li>\n<li>What is
      a priority queue? Ordering your data with scores.</li>\n<li>Shanti explains
      a bootstrapped skew binomial heap!</li>\n<li>Some of the hurdles that Shanti
      faced in writing Pri-Queue. </li>\n<li>How Shanti got started on her other library,
      raft_erl. </li>\n<li>The three Raft protocols and how much of it is implemented
      in the library. </li>\n<li>Shanti&#39;s next goals for raft_erl; bug free and
      widely used.</li>\n<li>The importance of distributed systems and Shanti&#39;s
      philosophy looking to the future.</li>\n<li>Advice for someone just starting
      out in Elixir!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
      in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nShanti Chellaram Linkedin—
      <a href=\"https://www.linkedin.com/in/shanti-chellaram-495444187\" rel=\"nofollow\">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>\nShanti
      Chellaram on Twitter — <a href=\"https://twitter.com/theccoder\" rel=\"nofollow\">https://twitter.com/theccoder</a><br>\nShanti
      Chellaram on github — <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nPri-Queue
      — <a href=\"https://github.com/okeuday/pqueue\" rel=\"nofollow\">https://github.com/okeuday/pqueue</a><br>\nraft_erl
      — <a href=\"https://github.com/shantiii/raft_erl\" rel=\"nofollow\">https://github.com/shantiii/raft_erl</a><br>\nMailChimp
      — <a href=\"https://mailchimp.com\" rel=\"nofollow\">https://mailchimp.com</a><br>\nTeachers
      Pay Teachers — <a href=\"https://www.teacherspayteachers.com/\" rel=\"nofollow\">https://www.teacherspayteachers.com/</a><br>\nPurely
      Functional Data Structures — <a href=\"https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\"
      rel=\"nofollow\">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>\nRust
      — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nRaft
      — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nRaspberry
      Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nElixirConf
      — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nPartisan
      — <a href=\"https://partisan.cloud/\" rel=\"nofollow\">https://partisan.cloud/</a></p><p>Special
      Guests: Dan Ivovich and Shanti Chellaram.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we welcome Shanti Chellaram to talk
    about a couple of Erlang libraries she has created! We hear from her about Pri-Queue
    and raft_erl, and her motivation behind making them and some of the things we
    wishes she did differently! Shanti shares some of her background, early coding
    experiences, affinity for open source and her current work situation. From there
    we look at Pri-Queue, the problem it addresses and what a priority queue is. A
    highlight of the show is Shanti giving the best explanation of a bootstrapped
    skew binomial heap we have heard before explaining some of the main issues she
    faced in creating Pri-Queue. We then turn to raft_erl, how she got started with
    it and her hopes for its future. Throughout the conversation Shanti shares her
    philosophy towards open source and coding going forward as well as offering advice
    for newcomers to Erlang. Make you you join us for this fantastic episode!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Shanti&#39;s
    background and current employment.</li>\n<li>Shanti&#39;s early experiences and
    what got her into open source software. </li>\n<li>Some coding decisions that
    Shanti would make differently in retrospect. </li>\n<li>The problem that Pri-Queue
    solves; the dearth of data efficient libraries. </li>\n<li>What is a priority
    queue? Ordering your data with scores.</li>\n<li>Shanti explains a bootstrapped
    skew binomial heap!</li>\n<li>Some of the hurdles that Shanti faced in writing
    Pri-Queue. </li>\n<li>How Shanti got started on her other library, raft_erl. </li>\n<li>The
    three Raft protocols and how much of it is implemented in the library. </li>\n<li>Shanti&#39;s
    next goals for raft_erl; bug free and widely used.</li>\n<li>The importance of
    distributed systems and Shanti&#39;s philosophy looking to the future.</li>\n<li>Advice
    for someone just starting out in Elixir!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nShanti Chellaram Linkedin—
    <a href=\"https://www.linkedin.com/in/shanti-chellaram-495444187\" rel=\"nofollow\">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>\nShanti
    Chellaram on Twitter — <a href=\"https://twitter.com/theccoder\" rel=\"nofollow\">https://twitter.com/theccoder</a><br>\nShanti
    Chellaram on github — <a href=\"https://github.com/shantiii\" rel=\"nofollow\">https://github.com/shantiii</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nPri-Queue
    — <a href=\"https://github.com/okeuday/pqueue\" rel=\"nofollow\">https://github.com/okeuday/pqueue</a><br>\nraft_erl
    — <a href=\"https://github.com/shantiii/raft_erl\" rel=\"nofollow\">https://github.com/shantiii/raft_erl</a><br>\nMailChimp
    — <a href=\"https://mailchimp.com\" rel=\"nofollow\">https://mailchimp.com</a><br>\nTeachers
    Pay Teachers — <a href=\"https://www.teacherspayteachers.com/\" rel=\"nofollow\">https://www.teacherspayteachers.com/</a><br>\nPurely
    Functional Data Structures — <a href=\"https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04\"
    rel=\"nofollow\">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>\nRust
    — <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">https://www.rust-lang.org/</a><br>\nRaft
    — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nRaspberry
    Pi — <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow\">https://www.raspberrypi.org/</a><br>\nElixirConf
    — <a href=\"https://elixirconf.com/2019\" rel=\"nofollow\">https://elixirconf.com/2019</a><br>\nPartisan
    — <a href=\"https://partisan.cloud/\" rel=\"nofollow\">https://partisan.cloud/</a></p><p>Special
    Guests: Dan Ivovich and Shanti Chellaram.</p>\n      "
- title: Michał Muskała on Ecto and jason – Elixir Internals
  slug: season-two-muskala
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-muskala
  guid: d20c39c5-2b6c-44a9-96ff-0dff754dd08f
  pubDate: Thu, 29 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 29, 2019
  description: "Today on the show we are joined by Michal Muskala, who is currently
    a freelance software engineer and he is here to talk to us about his work on the
    Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal
    explain how he became involved in the project and the work he did on it. He explains
    a little of its inner workings, issues and what excited him about it initially.
    We then turn to jason, a widely popular library that Michal created for parsing
    JSON. Michal unpacks its particulars, differentiating for us between the driver
    and adapter and the lessons he learned working on them. The last bit of our conversation
    is spent talking about open source and Michal's commitment to its philosophy.
    We discuss making time to work on projects, buy in from employers and and why
    getting involved can be scary yet is so important! For all this and more, join
    us for this great episode!\nKey Points From This Episode:\nA little bit about
    Michal's work background and how he got started on Elixir. \nThe parts of Ecto
    that Michal worked on at Google Summer of Code.\nDifferentiating between the driver
    and the adapter; communicating with the database.\nStructuring the code and what
    Michal would do differently now. \nCreating jason, the default JSON parser and
    the impetus behind it. \nUnderstanding lexing and tokenizing; largely the same
    thing with different names.\nMacros on jason and forcing the VM to use optimizations
    in particular cases. \nPerformance on jason; how Michal achieved the speeds he
    did.\nMichal's path to open source software and what followed his work in MongoDB.
    \nFinding time to work on open source projects while employed.   \nBEAM, alternative
    implementations and why they are important. \nMichal's call to action for our
    listeners! \nAnd much more! \nLinks Mentioned in Today’s Episode:\nSmartLogic
    — https://www.smartlogic.io/\nElixir — https://elixir-lang.org/\nMichal Muskala
    — https://michal.muskala.eu/\nMichal Muskala on Twitter — https://twitter.com/michalmuskala?lang=en\nEcto
    — https://hexdocs.pm/ecto/Ecto.html\njason — https://github.com/michalmuskala/jason
    \nGoogle Summer of Code — https://summerofcode.withgoogle.com/\nMondoDB — https://www.mongodb.com/\nErlang
    — https://www.erlang.org/\nBinary Optimization in Erlang Documentation — https://rhye.org/post/erlang-binary-matching-performance/
    (Please verify link)\nBEAM  — https://blog.stenmans.org/theBeamBook/\nErjang —
    https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\nAtom VM
    — http://atomvm.sourceforge.net/ Special Guest: Michał Muskała.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+LU8nIARa
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d20c39c5-2b6c-44a9-96ff-0dff754dd08f.mp3
    length: '40484007'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we are joined by Michal Muskala, who is currently
      a freelance software engineer and he is here to talk to us about his work on
      the Ecto and jason libraries. With Ecto we continue our journey into Elixir
      and Michal explain how he became involved in the project and the work he did
      on it. He explains a little of its inner workings, issues and what excited him
      about it initially. We then turn to jason, a widely popular library that Michal
      created for parsing JSON. Michal unpacks its particulars, differentiating for
      us between the driver and adapter and the lessons he learned working on them.
      The last bit of our conversation is spent talking about open source and Michal's
      commitment to its philosophy. We discuss making time to work on projects, buy
      in from employers and and why getting involved can be scary yet is so important!
      For all this and more, join us for this great episode!
    duration: '27:31'
    explicit: 'no'
    keywords: elixir, erlang, ecto, jason
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d20c39c5-2b6c-44a9-96ff-0dff754dd08f/cover.jpg?v=3
    summary: "\n        <p>Today on the show we are joined by Michal Muskala, who
      is currently a freelance software engineer and he is here to talk to us about
      his work on the Ecto and jason libraries. With Ecto we continue our journey
      into Elixir and Michal explain how he became involved in the project and the
      work he did on it. He explains a little of its inner workings, issues and what
      excited him about it initially. We then turn to jason, a widely popular library
      that Michal created for parsing JSON. Michal unpacks its particulars, differentiating
      for us between the driver and adapter and the lessons he learned working on
      them. The last bit of our conversation is spent talking about open source and
      Michal&#39;s commitment to its philosophy. We discuss making time to work on
      projects, buy in from employers and and why getting involved can be scary yet
      is so important! For all this and more, join us for this great episode!</p>\n\n<p><strong>Key
      Points From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Michal&#39;s
      work background and how he got started on Elixir. </li>\n<li>The parts of Ecto
      that Michal worked on at Google Summer of Code.</li>\n<li>Differentiating between
      the driver and the adapter; communicating with the database.</li>\n<li>Structuring
      the code and what Michal would do differently now. </li>\n<li>Creating jason,
      the default JSON parser and the impetus behind it. </li>\n<li>Understanding
      lexing and tokenizing; largely the same thing with different names.</li>\n<li>Macros
      on jason and forcing the VM to use optimizations in particular cases. </li>\n<li>Performance
      on jason; how Michal achieved the speeds he did.</li>\n<li>Michal&#39;s path
      to open source software and what followed his work in MongoDB. </li>\n<li>Finding
      time to work on open source projects while employed.<br></li>\n<li>BEAM, alternative
      implementations and why they are important. </li>\n<li>Michal&#39;s call to
      action for our listeners! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixir — <a href=\"https://elixir-lang.org/\"
      rel=\"nofollow\">https://elixir-lang.org/</a><br>\nMichal Muskala — <a href=\"https://michal.muskala.eu/\"
      rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nMichal Muskala on Twitter
      — <a href=\"https://twitter.com/michalmuskala?lang=en\" rel=\"nofollow\">https://twitter.com/michalmuskala?lang=en</a><br>\nEcto
      — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\njason
      — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a>
      <br>\nGoogle Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\"
      rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nMondoDB — <a
      href=\"https://www.mongodb.com/\" rel=\"nofollow\">https://www.mongodb.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nBinary
      Optimization in Erlang Documentation — <a href=\"https://rhye.org/post/erlang-binary-matching-performance/\"
      rel=\"nofollow\">https://rhye.org/post/erlang-binary-matching-performance/</a>
      (Please verify link)<br>\nBEAM  — <a href=\"https://blog.stenmans.org/theBeamBook/\"
      rel=\"nofollow\">https://blog.stenmans.org/theBeamBook/</a><br>\nErjang — <a
      href=\"https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\"
      rel=\"nofollow\">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>\nAtom
      VM — <a href=\"http://atomvm.sourceforge.net/\" rel=\"nofollow\">http://atomvm.sourceforge.net/</a></p><p>Special
      Guest: Michał Muskała.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we are joined by Michal Muskala,
    who is currently a freelance software engineer and he is here to talk to us about
    his work on the Ecto and jason libraries. With Ecto we continue our journey into
    Elixir and Michal explain how he became involved in the project and the work he
    did on it. He explains a little of its inner workings, issues and what excited
    him about it initially. We then turn to jason, a widely popular library that Michal
    created for parsing JSON. Michal unpacks its particulars, differentiating for
    us between the driver and adapter and the lessons he learned working on them.
    The last bit of our conversation is spent talking about open source and Michal&#39;s
    commitment to its philosophy. We discuss making time to work on projects, buy
    in from employers and and why getting involved can be scary yet is so important!
    For all this and more, join us for this great episode!</p>\n\n<p><strong>Key Points
    From This Episode:</strong></p>\n\n<ul>\n<li>A little bit about Michal&#39;s work
    background and how he got started on Elixir. </li>\n<li>The parts of Ecto that
    Michal worked on at Google Summer of Code.</li>\n<li>Differentiating between the
    driver and the adapter; communicating with the database.</li>\n<li>Structuring
    the code and what Michal would do differently now. </li>\n<li>Creating jason,
    the default JSON parser and the impetus behind it. </li>\n<li>Understanding lexing
    and tokenizing; largely the same thing with different names.</li>\n<li>Macros
    on jason and forcing the VM to use optimizations in particular cases. </li>\n<li>Performance
    on jason; how Michal achieved the speeds he did.</li>\n<li>Michal&#39;s path to
    open source software and what followed his work in MongoDB. </li>\n<li>Finding
    time to work on open source projects while employed.<br></li>\n<li>BEAM, alternative
    implementations and why they are important. </li>\n<li>Michal&#39;s call to action
    for our listeners! </li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixir — <a href=\"https://elixir-lang.org/\"
    rel=\"nofollow\">https://elixir-lang.org/</a><br>\nMichal Muskala — <a href=\"https://michal.muskala.eu/\"
    rel=\"nofollow\">https://michal.muskala.eu/</a><br>\nMichal Muskala on Twitter
    — <a href=\"https://twitter.com/michalmuskala?lang=en\" rel=\"nofollow\">https://twitter.com/michalmuskala?lang=en</a><br>\nEcto
    — <a href=\"https://hexdocs.pm/ecto/Ecto.html\" rel=\"nofollow\">https://hexdocs.pm/ecto/Ecto.html</a><br>\njason
    — <a href=\"https://github.com/michalmuskala/jason\" rel=\"nofollow\">https://github.com/michalmuskala/jason</a>
    <br>\nGoogle Summer of Code — <a href=\"https://summerofcode.withgoogle.com/\"
    rel=\"nofollow\">https://summerofcode.withgoogle.com/</a><br>\nMondoDB — <a href=\"https://www.mongodb.com/\"
    rel=\"nofollow\">https://www.mongodb.com/</a><br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a><br>\nBinary Optimization in Erlang
    Documentation — <a href=\"https://rhye.org/post/erlang-binary-matching-performance/\"
    rel=\"nofollow\">https://rhye.org/post/erlang-binary-matching-performance/</a>
    (Please verify link)<br>\nBEAM  — <a href=\"https://blog.stenmans.org/theBeamBook/\"
    rel=\"nofollow\">https://blog.stenmans.org/theBeamBook/</a><br>\nErjang — <a href=\"https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html\"
    rel=\"nofollow\">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>\nAtom
    VM — <a href=\"http://atomvm.sourceforge.net/\" rel=\"nofollow\">http://atomvm.sourceforge.net/</a></p><p>Special
    Guest: Michał Muskała.</p>\n      "
- title: Todd Resudek on Hex – Elixir Internals
  slug: season-two-resudek
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-resudek
  guid: 2ebfdc2e-d967-4324-bcbe-de67bccb57e6
  pubDate: Thu, 22 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 22, 2019
  description: "Today on the show we get stuck into the inner workings of Hex 1.0
    and are happy to be joined by returning guest, Todd Resudek. As you might already
    know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the
    conference scene, and one of the three core team members at Hex. With the total
    downloads sitting at 641 million, the Hex community is growing rapidly and shows
    no signs of slowing down. In this episode, we discover what makes the Hex packages
    some of the most popular packages out there today, as well as the new and improved
    features currently in the pipeline. In addition, we find out how Todd first got
    involved with the Hex team and how the team makes decisions and problem solves.
    \nKey Points From This Episode:\nTransferring a new library into an old ecosystem.\nTodd’s
    challenges learning Elixir and Hex.\nLearn more about the functions of Alphabetify.\nAn
    introduction to the uses of ETS storage.\nContributing to Open Source while working
    at Weedmaps.\nDiscover how Todd got involved with the Hex team.\nLearn more about
    the different faces of Hex.\nFind out how decisions are made within the Hex team.\nJust
    how busy is the Hex community right now?\nThe top five underground features of
    Hex.\nDiscover the latest features now available on Hex.\nFind out what new Hex
    features are in the pipeline.\nAnd much more!\nLinks Mentioned in Today’s Episode:\nTodd
    Resudek — https://www.linkedin.com/in/toddresudek/\nWeedmaps — https://weedmaps.com/\nHex
    — https://hex.pm/\nrebar3 — https://www.rebar3.org/\nAlphabetify — https://hex.pm/packages/alphabetify\nETS
    — https://elixirschool.com/en/lessons/specifics/ets/\nElixir Mix Podcast — https://devchat.tv/elixir-mix/\nVoitek
    — https://voitekk.com/\nErlef Erlang Ecosystem Foundation — https://erlef.org/\nCrates
    — https://crates.io/crates/hex\nSmart Software with SmartLogic — https://podcast.smartlogic.io/\nNerves
    MeetUp on Twitter — https://twitter.com/nervesmeetup\nThe Big Elixir — https://www.thebigelixir.com/\n
    Special Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+DkjUR79U
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2ebfdc2e-d967-4324-bcbe-de67bccb57e6.mp3
    length: '33365100'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we get stuck into the inner workings of Hex 1.0 and
      are happy to be joined by returning guest, Todd Resudek. As you might already
      know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on
      the conference scene, and one of the three core team members at Hex. With the
      total downloads sitting at 641 million, the Hex community is growing rapidly
      and shows no signs of slowing down. In this episode, we discover what makes
      the Hex packages some of the most popular packages out there today, as well
      as the new and improved features currently in the pipeline. In addition, we
      find out how Todd first got involved with the Hex team and how the team makes
      decisions and problem solves.
    duration: '34:00'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2ebfdc2e-d967-4324-bcbe-de67bccb57e6/cover.jpg?v=3
    summary: "\n        <p>Today on the show we get stuck into the inner workings
      of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you
      might already know, Todd is the Senior Software Engineer at Weedmaps, a regular
      speaker on the conference scene, and one of the three core team members at Hex.
      With the total downloads sitting at 641 million, the Hex community is growing
      rapidly and shows no signs of slowing down. In this episode, we discover what
      makes the Hex packages some of the most popular packages out there today, as
      well as the new and improved features currently in the pipeline. In addition,
      we find out how Todd first got involved with the Hex team and how the team makes
      decisions and problem solves. </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Transferring
      a new library into an old ecosystem.</li>\n<li>Todd’s challenges learning Elixir
      and Hex.</li>\n<li>Learn more about the functions of Alphabetify.</li>\n<li>An
      introduction to the uses of ETS storage.</li>\n<li>Contributing to Open Source
      while working at Weedmaps.</li>\n<li>Discover how Todd got involved with the
      Hex team.</li>\n<li>Learn more about the different faces of Hex.</li>\n<li>Find
      out how decisions are made within the Hex team.</li>\n<li>Just how busy is the
      Hex community right now?</li>\n<li>The top five underground features of Hex.</li>\n<li>Discover
      the latest features now available on Hex.</li>\n<li>Find out what new Hex features
      are in the pipeline.</li>\n<li>And much more!</li>\n</ul>\n\n<p><strong>Links
      Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\"
      rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWeedmaps
      — <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nrebar3
      — <a href=\"https://www.rebar3.org/\" rel=\"nofollow\">https://www.rebar3.org/</a><br>\nAlphabetify
      — <a href=\"https://hex.pm/packages/alphabetify\" rel=\"nofollow\">https://hex.pm/packages/alphabetify</a><br>\nETS
      — <a href=\"https://elixirschool.com/en/lessons/specifics/ets/\" rel=\"nofollow\">https://elixirschool.com/en/lessons/specifics/ets/</a><br>\nElixir
      Mix Podcast — <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">https://devchat.tv/elixir-mix/</a><br>\nVoitek
      — <a href=\"https://voitekk.com/\" rel=\"nofollow\">https://voitekk.com/</a><br>\nErlef
      Erlang Ecosystem Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nCrates
      — <a href=\"https://crates.io/crates/hex\" rel=\"nofollow\">https://crates.io/crates/hex</a><br>\nSmart
      Software with SmartLogic — <a href=\"https://podcast.smartlogic.io/\" rel=\"nofollow\">https://podcast.smartlogic.io/</a><br>\nNerves
      MeetUp on Twitter — <a href=\"https://twitter.com/nervesmeetup\" rel=\"nofollow\">https://twitter.com/nervesmeetup</a><br>\nThe
      Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a></p><p>Special
      Guest: Todd Resudek.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we get stuck into the inner workings
    of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you
    might already know, Todd is the Senior Software Engineer at Weedmaps, a regular
    speaker on the conference scene, and one of the three core team members at Hex.
    With the total downloads sitting at 641 million, the Hex community is growing
    rapidly and shows no signs of slowing down. In this episode, we discover what
    makes the Hex packages some of the most popular packages out there today, as well
    as the new and improved features currently in the pipeline. In addition, we find
    out how Todd first got involved with the Hex team and how the team makes decisions
    and problem solves. </p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Transferring
    a new library into an old ecosystem.</li>\n<li>Todd’s challenges learning Elixir
    and Hex.</li>\n<li>Learn more about the functions of Alphabetify.</li>\n<li>An
    introduction to the uses of ETS storage.</li>\n<li>Contributing to Open Source
    while working at Weedmaps.</li>\n<li>Discover how Todd got involved with the Hex
    team.</li>\n<li>Learn more about the different faces of Hex.</li>\n<li>Find out
    how decisions are made within the Hex team.</li>\n<li>Just how busy is the Hex
    community right now?</li>\n<li>The top five underground features of Hex.</li>\n<li>Discover
    the latest features now available on Hex.</li>\n<li>Find out what new Hex features
    are in the pipeline.</li>\n<li>And much more!</li>\n</ul>\n\n<p><strong>Links
    Mentioned in Today’s Episode:</strong></p>\n\n<p>Todd Resudek — <a href=\"https://www.linkedin.com/in/toddresudek/\"
    rel=\"nofollow\">https://www.linkedin.com/in/toddresudek/</a><br>\nWeedmaps —
    <a href=\"https://weedmaps.com/\" rel=\"nofollow\">https://weedmaps.com/</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a><br>\nrebar3
    — <a href=\"https://www.rebar3.org/\" rel=\"nofollow\">https://www.rebar3.org/</a><br>\nAlphabetify
    — <a href=\"https://hex.pm/packages/alphabetify\" rel=\"nofollow\">https://hex.pm/packages/alphabetify</a><br>\nETS
    — <a href=\"https://elixirschool.com/en/lessons/specifics/ets/\" rel=\"nofollow\">https://elixirschool.com/en/lessons/specifics/ets/</a><br>\nElixir
    Mix Podcast — <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">https://devchat.tv/elixir-mix/</a><br>\nVoitek
    — <a href=\"https://voitekk.com/\" rel=\"nofollow\">https://voitekk.com/</a><br>\nErlef
    Erlang Ecosystem Foundation — <a href=\"https://erlef.org/\" rel=\"nofollow\">https://erlef.org/</a><br>\nCrates
    — <a href=\"https://crates.io/crates/hex\" rel=\"nofollow\">https://crates.io/crates/hex</a><br>\nSmart
    Software with SmartLogic — <a href=\"https://podcast.smartlogic.io/\" rel=\"nofollow\">https://podcast.smartlogic.io/</a><br>\nNerves
    MeetUp on Twitter — <a href=\"https://twitter.com/nervesmeetup\" rel=\"nofollow\">https://twitter.com/nervesmeetup</a><br>\nThe
    Big Elixir — <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a></p><p>Special
    Guest: Todd Resudek.</p>\n      "
- title: Chris Keathley on Wallaby and Raft – Elixir Internals
  slug: season-two-keathley
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-keathley
  guid: 37e3efb0-85b7-4dd9-bbf9-a997b01c6437
  pubDate: Thu, 15 Aug 2019 06:00:00 -0400
  pubDateFriendly: August 15, 2019
  description: "In this episode of the podcast we are joined by Chris Keathley to
    continue our exploration of Elixir internals as he tells us about two very popular
    libraries that he developed, Wallaby and Raft. We start off with some background
    and his initial experiences with Elixir and open source projects before diving
    into Wallaby and some of the biggest lessons that Chris learned during and after
    his work on the library. \nChris does a great job of explaining concurrent tests
    and the Sandbox and some of the reasons he has pretty much stopped working on
    the front end of projects. From there we move onto another one of Chris' exciting
    projects, Raft! In order to introduce the library, Chris explains more about consensus
    algorithms, Leslie Lamport and his groundbreaking work on Paxos. Raft is, in some
    ways, a simplified, more accessible version of Paxos for Elixir and Chris goes
    on to give a brief rundown of its inner workings. For this great conversation
    with a great guest, join us today!\nKey Points From This Episode:\nChris' background,
    history with Elixir and his current employment. \nHow Chris got started with open
    source work. \nWhy Chris has moved away from front end work in the last while.
    \nThe major lessons Chris learned while building Wallaby.\nHow the concurrent
    tests work on Wallaby and the Sandbox. \nWhy Chris is still excited about Raft,
    even though he hasn't touched it in a while.  \nExplaining Raft, consensus algorithms
    and Paxos. \nHow the Raft library actually works; building Raft systems and processes.
    \ \nWhere to find and connect with Chris online!\nAnd much more! \nLinks Mentioned
    in Today’s Episode:\nSmartLogic — https://www.smartlogic.io/\nChris Keathley —
    https://keathley.io/\nChris Keathley on github — https://github.com/keathley\nBleacher
    Report — https://bleacherreport.com/\nWallaby — https://hexdocs.pm/wallaby/Wallaby.html\nRaft
    — https://raft.github.io/\nErlang — https://www.erlang.org/\nSlack — https://slack.com/\nLeslie
    Lamport — http://www.lamport.org/\nPaxos Made Live — https://blog.acolyer.org/2015/03/05/paxos-made-live/\nElixir
    Outlaws Podcast — https://elixiroutlaws.com/ Special Guest: Chris Keathley.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+vWL3K9QS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37e3efb0-85b7-4dd9-bbf9-a997b01c6437.mp3
    length: '26280117'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: In this episode of the podcast we are joined by Chris Keathley to continue
      our exploration of Elixir internals as he tells us about two very popular libraries
      that he developed, Wallaby and Raft. We start off with some background and his
      initial experiences with Elixir and open source projects before diving into
      Wallaby and some of the biggest lessons that Chris learned during and after
      his work on the library.
    duration: '26:46'
    explicit: 'no'
    keywords: ''
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37e3efb0-85b7-4dd9-bbf9-a997b01c6437/cover.jpg?v=3
    summary: "\n        <p>In this episode of the podcast we are joined by Chris Keathley
      to continue our exploration of Elixir internals as he tells us about two very
      popular libraries that he developed, Wallaby and Raft. We start off with some
      background and his initial experiences with Elixir and open source projects
      before diving into Wallaby and some of the biggest lessons that Chris learned
      during and after his work on the library. </p>\n\n<p>Chris does a great job
      of explaining concurrent tests and the Sandbox and some of the reasons he has
      pretty much stopped working on the front end of projects. From there we move
      onto another one of Chris&#39; exciting projects, Raft! In order to introduce
      the library, Chris explains more about consensus algorithms, Leslie Lamport
      and his groundbreaking work on Paxos. Raft is, in some ways, a simplified, more
      accessible version of Paxos for Elixir and Chris goes on to give a brief rundown
      of its inner workings. For this great conversation with a great guest, join
      us today!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris&#39;
      background, history with Elixir and his current employment. </li>\n<li>How Chris
      got started with open source work. </li>\n<li>Why Chris has moved away from
      front end work in the last while. </li>\n<li>The major lessons Chris learned
      while building Wallaby.</li>\n<li>How the concurrent tests work on Wallaby and
      the Sandbox. </li>\n<li>Why Chris is still excited about Raft, even though he
      hasn&#39;t touched it in a while.<br></li>\n<li>Explaining Raft, consensus algorithms
      and Paxos. </li>\n<li>How the Raft library actually works; building Raft systems
      and processes.<br></li>\n<li>Where to find and connect with Chris online!</li>\n<li>And
      much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>SmartLogic
      — <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nChris
      Keathley — <a href=\"https://keathley.io/\" rel=\"nofollow\">https://keathley.io/</a><br>\nChris
      Keathley on github — <a href=\"https://github.com/keathley\" rel=\"nofollow\">https://github.com/keathley</a><br>\nBleacher
      Report — <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">https://bleacherreport.com/</a><br>\nWallaby
      — <a href=\"https://hexdocs.pm/wallaby/Wallaby.html\" rel=\"nofollow\">https://hexdocs.pm/wallaby/Wallaby.html</a><br>\nRaft
      — <a href=\"https://raft.github.io/\" rel=\"nofollow\">https://raft.github.io/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nSlack
      — <a href=\"https://slack.com/\" rel=\"nofollow\">https://slack.com/</a><br>\nLeslie
      Lamport — <a href=\"http://www.lamport.org/\" rel=\"nofollow\">http://www.lamport.org/</a><br>\nPaxos
      Made Live — <a href=\"https://blog.acolyer.org/2015/03/05/paxos-made-live/\"
      rel=\"nofollow\">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>\nElixir
      Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a></p><p>Special
      Guest: Chris Keathley.</p>\n      "
  contentEncoded: "\n        <p>In this episode of the podcast we are joined by Chris
    Keathley to continue our exploration of Elixir internals as he tells us about
    two very popular libraries that he developed, Wallaby and Raft. We start off with
    some background and his initial experiences with Elixir and open source projects
    before diving into Wallaby and some of the biggest lessons that Chris learned
    during and after his work on the library. </p>\n\n<p>Chris does a great job of
    explaining concurrent tests and the Sandbox and some of the reasons he has pretty
    much stopped working on the front end of projects. From there we move onto another
    one of Chris&#39; exciting projects, Raft! In order to introduce the library,
    Chris explains more about consensus algorithms, Leslie Lamport and his groundbreaking
    work on Paxos. Raft is, in some ways, a simplified, more accessible version of
    Paxos for Elixir and Chris goes on to give a brief rundown of its inner workings.
    For this great conversation with a great guest, join us today!</p>\n\n<p><strong>Key
    Points From This Episode:</strong></p>\n\n<ul>\n<li>Chris&#39; background, history
    with Elixir and his current employment. </li>\n<li>How Chris got started with
    open source work. </li>\n<li>Why Chris has moved away from front end work in the
    last while. </li>\n<li>The major lessons Chris learned while building Wallaby.</li>\n<li>How
    the concurrent tests work on Wallaby and the Sandbox. </li>\n<li>Why Chris is
    still excited about Raft, even though he hasn&#39;t touched it in a while.<br></li>\n<li>Explaining
    Raft, consensus algorithms and Paxos. </li>\n<li>How the Raft library actually
    works; building Raft systems and processes.<br></li>\n<li>Where to find and connect
    with Chris online!</li>\n<li>And much more! </li>\n</ul>\n\n<p><strong>Links Mentioned
    in Today’s Episode:</strong></p>\n\n<p>SmartLogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nChris Keathley — <a href=\"https://keathley.io/\"
    rel=\"nofollow\">https://keathley.io/</a><br>\nChris Keathley on github — <a href=\"https://github.com/keathley\"
    rel=\"nofollow\">https://github.com/keathley</a><br>\nBleacher Report — <a href=\"https://bleacherreport.com/\"
    rel=\"nofollow\">https://bleacherreport.com/</a><br>\nWallaby — <a href=\"https://hexdocs.pm/wallaby/Wallaby.html\"
    rel=\"nofollow\">https://hexdocs.pm/wallaby/Wallaby.html</a><br>\nRaft — <a href=\"https://raft.github.io/\"
    rel=\"nofollow\">https://raft.github.io/</a><br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a><br>\nSlack — <a href=\"https://slack.com/\"
    rel=\"nofollow\">https://slack.com/</a><br>\nLeslie Lamport — <a href=\"http://www.lamport.org/\"
    rel=\"nofollow\">http://www.lamport.org/</a><br>\nPaxos Made Live — <a href=\"https://blog.acolyer.org/2015/03/05/paxos-made-live/\"
    rel=\"nofollow\">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>\nElixir
    Outlaws Podcast — <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">https://elixiroutlaws.com/</a></p><p>Special
    Guest: Chris Keathley.</p>\n      "
- title: René Föhring on Credo – Elixir Internals
  slug: season-two-fohring
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-fohring
  guid: 9532d3dd-1d07-4ac9-b4c8-3f1580deff11
  pubDate: Thu, 08 Aug 2019 06:00:00 -0400
  pubDateFriendly: August  8, 2019
  description: "Welcome back to the SmartLogic Podcast where we talk about the latest
    developments and best practices in the web and mobile software industry. In continuing
    with our theme of Elixir Internals, we’re having a conversation about the inner
    workings of one of the most popular Elixir libraries, Credo, and we are joined
    by the author René Föhring. \nRené shares the story of how he was introduced
    to Elixir while doing his PhD and looking for a new programming language and then
    shares the philosophy and inspiration Credo was developed on. Wanting Credo to
    be a less rule-based, authoritative code analysis tool and more user friendly,
    René focused on creating it to act as a type of digital mentor to the many developers
    out there who do not have a human mentor. He also shares about some of the launching
    hiccups, what he would have done differently had he been given another opportunity
    and some of the most important lessons that he has learned working in the open
    source community. Be sure to join us for all the inside info! \nKey Points from
    This Episode:\nMore about René’s job as head of product development at 5 Minds
    and what they do. \nWhat he does in his free time: open source maintenance and
    conference speaking. \nHow he got started with Elixir and wanting to learn a new
    programming language.\nWhat Credo is all about, why you’d want to use it and what
    makes it different.  \nThe inspiration behind writing Credo and wanting a more
    positive, less dogmatic tool.  \nStarting off building on Dogma but then pivoting
    and going in an independent direction. \nThe hiccups René experienced when first
    releasing Credo and what he’d do differently. \nThe different checks in Credo
    and how they function and respond to issues. \nHow Elixir 1.6 impacted the development
    of Credo.  \nWhat’s new with the Credo 1.1 release?\nRené’s experience working
    with open source and the first library he contributed to.  \nImportant lessons
    he has learned by being part of the open source community. \nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nElixir — https://elixir-lang.org/\nCredo — http://credo-ci.org/\nRené
    Föhring on Twitter — https://twitter.com/rrrene?lang=en\n5 Minds IT – Solutions
    — https://www.5minds.de/\nGitHub — https://github.com/\nRuby — https://www.ruby-lang.org/en/\nGo
    — https://golang.org/\nCplusplus — http://www.cplusplus.com/\nStyleCop — https://github.com/StyleCop/StyleCop\nDogma
    — https://github.com/lpil/dogma\nHex — https://hex.pm/\nLearn more about how SmartLogic
    uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: René Föhring.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+7CuvZa48
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9532d3dd-1d07-4ac9-b4c8-3f1580deff11.mp3
    length: '29222045'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Welcome back to the SmartLogic Podcast where we talk about the latest
      developments and best practices in the web and mobile software industry. In
      continuing with our theme of Elixir Internals, we’re having a conversation about
      the inner workings of one of the most popular Elixir libraries, Credo, and we
      are joined by the author René Föhring. René shares the story of how he was
      introduced to Elixir while doing his PhD and looking for a new programming language
      and then shares the philosophy and inspiration Credo was developed on.
    duration: '29:36'
    explicit: 'no'
    keywords: elixir, credo
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9532d3dd-1d07-4ac9-b4c8-3f1580deff11/cover.jpg?v=3
    summary: "\n        <p>Welcome back to the SmartLogic Podcast where we talk about
      the latest developments and best practices in the web and mobile software industry.
      In continuing with our theme of Elixir Internals, we’re having a conversation
      about the inner workings of one of the most popular Elixir libraries, Credo,
      and we are joined by the author René Föhring. </p>\n\n<p>René shares the story
      of how he was introduced to Elixir while doing his PhD and looking for a new
      programming language and then shares the philosophy and inspiration Credo was
      developed on. Wanting Credo to be a less rule-based, authoritative code analysis
      tool and more user friendly, René focused on creating it to act as a type of
      digital mentor to the many developers out there who do not have a human mentor.
      He also shares about some of the launching hiccups, what he would have done
      differently had he been given another opportunity and some of the most important
      lessons that he has learned working in the open source community. Be sure to
      join us for all the inside info! </p>\n\n<p><strong>Key Points from This Episode:</strong></p>\n\n<ul>\n<li>More
      about René’s job as head of product development at 5 Minds and what they do.
      </li>\n<li>What he does in his free time: open source maintenance and conference
      speaking. </li>\n<li>How he got started with Elixir and wanting to learn a new
      programming language.</li>\n<li>What Credo is all about, why you’d want to use
      it and what makes it different.<br></li>\n<li>The inspiration behind writing
      Credo and wanting a more positive, less dogmatic tool.<br></li>\n<li>Starting
      off building on Dogma but then pivoting and going in an independent direction.
      </li>\n<li>The hiccups René experienced when first releasing Credo and what
      he’d do differently. </li>\n<li>The different checks in Credo and how they function
      and respond to issues. </li>\n<li>How Elixir 1.6 impacted the development of
      Credo.<br></li>\n<li>What’s new with the Credo 1.1 release?</li>\n<li>René’s
      experience working with open source and the first library he contributed to.<br></li>\n<li>Important
      lessons he has learned by being part of the open source community. </li>\n<li>And
      much more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Elixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nCredo
      — <a href=\"http://credo-ci.org/\" rel=\"nofollow\">http://credo-ci.org/</a><br>\nRené
      Föhring on Twitter — <a href=\"https://twitter.com/rrrene?lang=en\" rel=\"nofollow\">https://twitter.com/rrrene?lang=en</a><br>\n5
      Minds IT – Solutions — <a href=\"https://www.5minds.de/\" rel=\"nofollow\">https://www.5minds.de/</a><br>\nGitHub
      — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nGo
      — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCplusplus
      — <a href=\"http://www.cplusplus.com/\" rel=\"nofollow\">http://www.cplusplus.com/</a><br>\nStyleCop
      — <a href=\"https://github.com/StyleCop/StyleCop\" rel=\"nofollow\">https://github.com/StyleCop/StyleCop</a><br>\nDogma
      — <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a><br>\nHex
      — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: René Föhring.</p>\n      "
  contentEncoded: "\n        <p>Welcome back to the SmartLogic Podcast where we talk
    about the latest developments and best practices in the web and mobile software
    industry. In continuing with our theme of Elixir Internals, we’re having a conversation
    about the inner workings of one of the most popular Elixir libraries, Credo, and
    we are joined by the author René Föhring. </p>\n\n<p>René shares the story of
    how he was introduced to Elixir while doing his PhD and looking for a new programming
    language and then shares the philosophy and inspiration Credo was developed on.
    Wanting Credo to be a less rule-based, authoritative code analysis tool and more
    user friendly, René focused on creating it to act as a type of digital mentor
    to the many developers out there who do not have a human mentor. He also shares
    about some of the launching hiccups, what he would have done differently had he
    been given another opportunity and some of the most important lessons that he
    has learned working in the open source community. Be sure to join us for all the
    inside info! </p>\n\n<p><strong>Key Points from This Episode:</strong></p>\n\n<ul>\n<li>More
    about René’s job as head of product development at 5 Minds and what they do. </li>\n<li>What
    he does in his free time: open source maintenance and conference speaking. </li>\n<li>How
    he got started with Elixir and wanting to learn a new programming language.</li>\n<li>What
    Credo is all about, why you’d want to use it and what makes it different.<br></li>\n<li>The
    inspiration behind writing Credo and wanting a more positive, less dogmatic tool.<br></li>\n<li>Starting
    off building on Dogma but then pivoting and going in an independent direction.
    </li>\n<li>The hiccups René experienced when first releasing Credo and what he’d
    do differently. </li>\n<li>The different checks in Credo and how they function
    and respond to issues. </li>\n<li>How Elixir 1.6 impacted the development of Credo.<br></li>\n<li>What’s
    new with the Credo 1.1 release?</li>\n<li>René’s experience working with open
    source and the first library he contributed to.<br></li>\n<li>Important lessons
    he has learned by being part of the open source community. </li>\n<li>And much
    more! </li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>Elixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nCredo
    — <a href=\"http://credo-ci.org/\" rel=\"nofollow\">http://credo-ci.org/</a><br>\nRené
    Föhring on Twitter — <a href=\"https://twitter.com/rrrene?lang=en\" rel=\"nofollow\">https://twitter.com/rrrene?lang=en</a><br>\n5
    Minds IT – Solutions — <a href=\"https://www.5minds.de/\" rel=\"nofollow\">https://www.5minds.de/</a><br>\nGitHub
    — <a href=\"https://github.com/\" rel=\"nofollow\">https://github.com/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nGo
    — <a href=\"https://golang.org/\" rel=\"nofollow\">https://golang.org/</a><br>\nCplusplus
    — <a href=\"http://www.cplusplus.com/\" rel=\"nofollow\">http://www.cplusplus.com/</a><br>\nStyleCop
    — <a href=\"https://github.com/StyleCop/StyleCop\" rel=\"nofollow\">https://github.com/StyleCop/StyleCop</a><br>\nDogma
    — <a href=\"https://github.com/lpil/dogma\" rel=\"nofollow\">https://github.com/lpil/dogma</a><br>\nHex
    — <a href=\"https://hex.pm/\" rel=\"nofollow\">https://hex.pm/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: René Föhring.</p>\n      "
- title: Meryl Dakin on Token Alchemist – Elixir Internals
  slug: season-two-dakin
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-dakin
  guid: 3050865c-0418-42d6-ade9-9605af11fee6
  pubDate: Thu, 01 Aug 2019 06:00:00 -0400
  pubDateFriendly: August  1, 2019
  description: "Today on the show we continue our series on the inner workings of
    several different Elixir libraries and are happy to be joined by Meryl Dakin,
    Software Engineer at the Flatiron School and author of Token Alchemist. In this
    episode, we discover how Meryl got started with Elixir and what the process was
    like for her transitioning from Ruby to Elixir. We learn more about the internal
    functions of Token Alchemist within the school context and discuss the unique
    opportunities Meryl has discovered in Elixir, as well as the trickier language
    features that programmers are likely to experience in their learning process.
    Meryl also shares the challenges that Token Alchemist attempts to overcome – delving
    deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more,
    be sure to click play!\nKey Points From This Episode:\nDiscover why Meryl first
    got started with Elixir.\nLearn more about the Flatiron Bootcamp for coders.\nMeryl’s
    experience in transitioning from Ruby to Elixir.\nThe opportunities for concurrency
    and fault tolerance in Elixir.\nDiscover the top three tricky language features
    in Elixir.\nThe benefits of going back to the basics of Elixir.\nFind out the
    problems that Token Alchemist attempts to solve.\nMeryl explains LTI and the Learn.co
    platform for students. \nLearn more about custom parameters in Token Alchemist.\nThe
    process of learning OAuth in Token Alchemist.\nWhat to consider when using LTI
    in Elixir.\nThe benefits of resource link history ID’s in the LTI spec.\nOpportunities
    for you with Token Alchemist.\nAnd much more!\nLinks Mentioned in Today’s Episode:\nWe
    Work — https://www.wework.com/\nFlatiron School — https://flatironschool.com/\nElixir
    — https://elixir-lang.org/\nRuby — https://www.ruby-lang.org/en/\nLearn.co — https://learn.co/\nMeryl
    on LinkedIn — https://www.linkedin.com/in/meryldakin/\nMeryl on Twitter — https://twitter.com/meryldakin\nMeryl
    on GitHub — https://github.com/meryldakin\nToken Alchemist on GitHub — https://github.com/meryldakin/token_alchemist\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Meryl Dakin.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gPjajuW1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3050865c-0418-42d6-ade9-9605af11fee6.mp3
    length: '27206406'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we continue our series on the inner workings of several
      different Elixir libraries and are happy to be joined by Meryl Dakin, Software
      Engineer at the Flatiron School and author of Token Alchemist. In this episode,
      we discover how Meryl got started with Elixir and what the process was like
      for her transitioning from Ruby to Elixir. We learn more about the internal
      functions of Token Alchemist within the school context and discuss the unique
      opportunities Meryl has discovered in Elixir, as well as the trickier language
      features that programmers are likely to experience in their learning process.
      Meryl also shares the challenges that Token Alchemist attempts to overcome –
      delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this
      and more, be sure to click play!
    duration: '27:31'
    explicit: 'no'
    keywords: elixir, wework, flatiron school, token alchemist
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3050865c-0418-42d6-ade9-9605af11fee6/cover.jpg?v=3
    summary: "\n        <p>Today on the show we continue our series on the inner workings
      of several different Elixir libraries and are happy to be joined by Meryl Dakin,
      Software Engineer at the Flatiron School and author of Token Alchemist. In this
      episode, we discover how Meryl got started with Elixir and what the process
      was like for her transitioning from Ruby to Elixir. We learn more about the
      internal functions of Token Alchemist within the school context and discuss
      the unique opportunities Meryl has discovered in Elixir, as well as the trickier
      language features that programmers are likely to experience in their learning
      process. Meryl also shares the challenges that Token Alchemist attempts to overcome
      – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this
      and more, be sure to click play!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Discover
      why Meryl first got started with Elixir.</li>\n<li>Learn more about the Flatiron
      Bootcamp for coders.</li>\n<li>Meryl’s experience in transitioning from Ruby
      to Elixir.</li>\n<li>The opportunities for concurrency and fault tolerance in
      Elixir.</li>\n<li>Discover the top three tricky language features in Elixir.</li>\n<li>The
      benefits of going back to the basics of Elixir.</li>\n<li>Find out the problems
      that Token Alchemist attempts to solve.</li>\n<li>Meryl explains LTI and the
      Learn.co platform for students. </li>\n<li>Learn more about custom parameters
      in Token Alchemist.</li>\n<li>The process of learning OAuth in Token Alchemist.</li>\n<li>What
      to consider when using LTI in Elixir.</li>\n<li>The benefits of resource link
      history ID’s in the LTI spec.</li>\n<li>Opportunities for you with Token Alchemist.</li>\n<li>And
      much more!</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>We
      Work — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nFlatiron
      School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nRuby
      — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nLearn.co
      — <a href=\"https://learn.co/\" rel=\"nofollow\">https://learn.co/</a><br>\nMeryl
      on LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
      on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nMeryl
      on GitHub — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nToken
      Alchemist on GitHub — <a href=\"https://github.com/meryldakin/token_alchemist\"
      rel=\"nofollow\">https://github.com/meryldakin/token_alchemist</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we continue our series on the inner
    workings of several different Elixir libraries and are happy to be joined by Meryl
    Dakin, Software Engineer at the Flatiron School and author of Token Alchemist.
    In this episode, we discover how Meryl got started with Elixir and what the process
    was like for her transitioning from Ruby to Elixir. We learn more about the internal
    functions of Token Alchemist within the school context and discuss the unique
    opportunities Meryl has discovered in Elixir, as well as the trickier language
    features that programmers are likely to experience in their learning process.
    Meryl also shares the challenges that Token Alchemist attempts to overcome – delving
    deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more,
    be sure to click play!</p>\n\n<p><strong>Key Points From This Episode:</strong></p>\n\n<ul>\n<li>Discover
    why Meryl first got started with Elixir.</li>\n<li>Learn more about the Flatiron
    Bootcamp for coders.</li>\n<li>Meryl’s experience in transitioning from Ruby to
    Elixir.</li>\n<li>The opportunities for concurrency and fault tolerance in Elixir.</li>\n<li>Discover
    the top three tricky language features in Elixir.</li>\n<li>The benefits of going
    back to the basics of Elixir.</li>\n<li>Find out the problems that Token Alchemist
    attempts to solve.</li>\n<li>Meryl explains LTI and the Learn.co platform for
    students. </li>\n<li>Learn more about custom parameters in Token Alchemist.</li>\n<li>The
    process of learning OAuth in Token Alchemist.</li>\n<li>What to consider when
    using LTI in Elixir.</li>\n<li>The benefits of resource link history ID’s in the
    LTI spec.</li>\n<li>Opportunities for you with Token Alchemist.</li>\n<li>And
    much more!</li>\n</ul>\n\n<p><strong>Links Mentioned in Today’s Episode:</strong></p>\n\n<p>We
    Work — <a href=\"https://www.wework.com/\" rel=\"nofollow\">https://www.wework.com/</a><br>\nFlatiron
    School — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nRuby
    — <a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow\">https://www.ruby-lang.org/en/</a><br>\nLearn.co
    — <a href=\"https://learn.co/\" rel=\"nofollow\">https://learn.co/</a><br>\nMeryl
    on LinkedIn — <a href=\"https://www.linkedin.com/in/meryldakin/\" rel=\"nofollow\">https://www.linkedin.com/in/meryldakin/</a><br>\nMeryl
    on Twitter — <a href=\"https://twitter.com/meryldakin\" rel=\"nofollow\">https://twitter.com/meryldakin</a><br>\nMeryl
    on GitHub — <a href=\"https://github.com/meryldakin\" rel=\"nofollow\">https://github.com/meryldakin</a><br>\nToken
    Alchemist on GitHub — <a href=\"https://github.com/meryldakin/token_alchemist\"
    rel=\"nofollow\">https://github.com/meryldakin/token_alchemist</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>\n      "
- title: Paul Schoenfelder on Distillery – Elixir Internals
  slug: season-two-schoenfelder
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-schoenfelder
  guid: bd39f088-71c3-4425-b78e-8fc4a5324a1c
  pubDate: Thu, 25 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 25, 2019
  description: "Welcome back to show everyone and today in our exploration of Elixir
    libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery,
    his own creation from the world of Elixir and tell us about how it works. We also
    discuss how Paul made the transition from bigger corporations into the startup
    world, his early experiences of different coding languages and the initial steps
    he took in writing Distillery. Paul is very honest about the unclear future of
    the library and he shares his hopes for it for the short term as well as clarifying
    its key concepts and functions. He gives great advice and directions for learning
    more about the resource and how you can help him and his projects out if you use
    them. For all this and then some, be sure to join us today for the show! \n Key
    Points From This Episode: \n* Paul's work background, language history and the
    last few years working Elixir. \n* The first library that Paul contributed to
    and created on his own! \n* What brought about the creation of Distillery. \n*
    Clarifying releases, compiling, generating, deployment and more. \n* Where to
    learn more and find out details about the library. \n* The first steps Paul took
    when writing this latest version of the Distillery. \n* Looking to the future
    of Distillery and its current best use cases. \n* Hot upgrades and who they can
    be useful to when it comes to Elixir. \n* Let Paul know if you are using or want
    to contribute to a project of his! \n* And much more! \nLinks Mentioned in Today’s
    Episode: \nSmartlogic — https://www.smartlogic.io/ \nPaul Schoenfelder — https://github.com/bitwalker
    \nBitwalker — http://bitwalker.org/ \nDistillery — https://hex.pm/packages/distillery
    \nDockYard — https://dockyard.com/ \nErlang — https://www.erlang.org/ \nPhoenix
    — https://phoenixframework.org/ \nLearn more about how SmartLogic uses Phoenix
    and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Paul Schoenfelder.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+RIfQ8UW-
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bd39f088-71c3-4425-b78e-8fc4a5324a1c.mp3
    length: '29247478'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: 'Welcome back to show everyone and today in our exploration of Elixir
      libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery,
      his own creation from the world of Elixir and tell us about how it works. We
      also discuss how Paul made the transition from bigger corporations into the
      startup world, his early experiences of different coding languages and the initial
      steps he took in writing Distillery. Paul is very honest about the unclear future
      of the library and he shares his hopes for it for the short term as well as
      clarifying its key concepts and functions. He gives great advice and directions
      for learning more about the resource and how you can help him and his projects
      out if you use them. For all this and then some, be sure to join us today for
      the show! '
    duration: '29:45'
    explicit: 'no'
    keywords: elixir, distillery
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bd39f088-71c3-4425-b78e-8fc4a5324a1c/cover.jpg?v=3
    summary: "\n        <p>Welcome back to show everyone and today in our exploration
      of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack
      Distillery, his own creation from the world of Elixir and tell us about how
      it works. We also discuss how Paul made the transition from bigger corporations
      into the startup world, his early experiences of different coding languages
      and the initial steps he took in writing Distillery. Paul is very honest about
      the unclear future of the library and he shares his hopes for it for the short
      term as well as clarifying its key concepts and functions. He gives great advice
      and directions for learning more about the resource and how you can help him
      and his projects out if you use them. For all this and then some, be sure to
      join us today for the show! </p>\n\n<p>Key Points From This Episode: </p>\n\n<ul>\n<li>Paul&#39;s
      work background, language history and the last few years working Elixir. </li>\n<li>The
      first library that Paul contributed to and created on his own! </li>\n<li>What
      brought about the creation of Distillery. </li>\n<li>Clarifying releases, compiling,
      generating, deployment and more. </li>\n<li>Where to learn more and find out
      details about the library. </li>\n<li>The first steps Paul took when writing
      this latest version of the Distillery. </li>\n<li>Looking to the future of Distillery
      and its current best use cases. </li>\n<li>Hot upgrades and who they can be
      useful to when it comes to Elixir. </li>\n<li>Let Paul know if you are using
      or want to contribute to a project of his! </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode: <br>\nSmartlogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a> <br>\nPaul Schoenfelder — <a
      href=\"https://github.com/bitwalker\" rel=\"nofollow\">https://github.com/bitwalker</a>
      <br>\nBitwalker — <a href=\"http://bitwalker.org/\" rel=\"nofollow\">http://bitwalker.org/</a>
      <br>\nDistillery — <a href=\"https://hex.pm/packages/distillery\" rel=\"nofollow\">https://hex.pm/packages/distillery</a>
      <br>\nDockYard — <a href=\"https://dockyard.com/\" rel=\"nofollow\">https://dockyard.com/</a>
      <br>\nErlang — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a>
      <br>\nPhoenix — <a href=\"https://phoenixframework.org/\" rel=\"nofollow\">https://phoenixframework.org/</a>
      </p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>\n
      \     "
  contentEncoded: "\n        <p>Welcome back to show everyone and today in our exploration
    of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack
    Distillery, his own creation from the world of Elixir and tell us about how it
    works. We also discuss how Paul made the transition from bigger corporations into
    the startup world, his early experiences of different coding languages and the
    initial steps he took in writing Distillery. Paul is very honest about the unclear
    future of the library and he shares his hopes for it for the short term as well
    as clarifying its key concepts and functions. He gives great advice and directions
    for learning more about the resource and how you can help him and his projects
    out if you use them. For all this and then some, be sure to join us today for
    the show! </p>\n\n<p>Key Points From This Episode: </p>\n\n<ul>\n<li>Paul&#39;s
    work background, language history and the last few years working Elixir. </li>\n<li>The
    first library that Paul contributed to and created on his own! </li>\n<li>What
    brought about the creation of Distillery. </li>\n<li>Clarifying releases, compiling,
    generating, deployment and more. </li>\n<li>Where to learn more and find out details
    about the library. </li>\n<li>The first steps Paul took when writing this latest
    version of the Distillery. </li>\n<li>Looking to the future of Distillery and
    its current best use cases. </li>\n<li>Hot upgrades and who they can be useful
    to when it comes to Elixir. </li>\n<li>Let Paul know if you are using or want
    to contribute to a project of his! </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode: <br>\nSmartlogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a> <br>\nPaul Schoenfelder — <a href=\"https://github.com/bitwalker\"
    rel=\"nofollow\">https://github.com/bitwalker</a> <br>\nBitwalker — <a href=\"http://bitwalker.org/\"
    rel=\"nofollow\">http://bitwalker.org/</a> <br>\nDistillery — <a href=\"https://hex.pm/packages/distillery\"
    rel=\"nofollow\">https://hex.pm/packages/distillery</a> <br>\nDockYard — <a href=\"https://dockyard.com/\"
    rel=\"nofollow\">https://dockyard.com/</a> <br>\nErlang — <a href=\"https://www.erlang.org/\"
    rel=\"nofollow\">https://www.erlang.org/</a> <br>\nPhoenix — <a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">https://phoenixframework.org/</a> </p>\n\n<p>Learn more about
    how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>\n      "
- title: Bryan Joseph on ElixirScript – Elixir Internals
  slug: season-two-joseph
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-joseph
  guid: ed1a46a8-a3ac-4808-b1e5-91e950b2791a
  pubDate: Thu, 18 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 18, 2019
  description: "Today on the show we continue our series on the inner workings and
    various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry
    to talk about his very own ElixirScript. ElixirScript is essentially an Elixir
    to JavaScript compiler, allowing users to run Elixir online more easily. We ask
    Bryan what inspired this project and about some of the major challenges that have
    faced it. We also talk about the role of his company, Revelry in his career and
    work in open source. Bryan tells us about his very own conference, The Big Elixir
    and why you should be traveling to New Orleans to check it out! Other topics covered
    include the architecture of ElixirScript, binary pattern matching, Bryan's other
    experiences of libraries and his hopes for ElixirScript's future. For all this
    and then some, be sure to listen in today!\nKey Points From This Episode:\nSome
    background on Bryan, his work and how he got started with Elixir. \nWhat is ElixirScript?
    What does it do? How Brian got the idea!\nElixirScript's architecture; the inner
    workings of the compiler.\nThe major problems and challenges that face this task
    with JavaScript. \nStep one in the process; the conversion of concepts.\nBinary
    pattern matching and the implementation of strings. \nThe things Bryan would do
    differently looking back on the product.   \nBryan's other experiences of libraries,
    contributions and fixes. \nMarketing, posting and getting the word out on ElixirScript.\nThe
    current state of the project and hopes for the future. \nA little bit about The
    Big Elixir and what sets it apart from other conferences.  \nAnd much more! \nLinks
    Mentioned in Today’s Episode:\nSmartlogic — https://www.smartlogic.io/\nElixirScript
    — https://elixirscript.github.io/\nBryan Joseph — https://github.com/bryanjos\nRevelry
    — https://revelry.co/\nThe Big Elixir— https://www.thebigelixir.com/\nMetaprogramming
    Elixir — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\nChris
    McCord — http://chrismccord.com/\nErlang — https://www.erlang.org/\nElixirCon
    — https://www.elixirlabs.net/events/elixircon-2018\nLonestar Elixir — https://www.lonestarelixir.com/\nOperation
    Spark — https://operationspark.org/\nFlatiron — https://flatironschool.com/\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Bryan Joseph.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+x9zPXyrf
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a.mp3
    length: '23874493'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Today on the show we continue our series on the inner workings and various
      libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to
      talk about his very own ElixirScript. ElixirScript is essentially an Elixir
      to JavaScript compiler, allowing users to run Elixir online more easily.
    duration: '23:56'
    explicit: 'no'
    keywords: elixir, elixirscript, the big elixir
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a/cover.jpg?v=3
    summary: "\n        <p>Today on the show we continue our series on the inner workings
      and various libraries of Elixir and are very happy to welcome Bryan Joseph of
      Revelry to talk about his very own ElixirScript. ElixirScript is essentially
      an Elixir to JavaScript compiler, allowing users to run Elixir online more easily.
      We ask Bryan what inspired this project and about some of the major challenges
      that have faced it. We also talk about the role of his company, Revelry in his
      career and work in open source. Bryan tells us about his very own conference,
      The Big Elixir and why you should be traveling to New Orleans to check it out!
      Other topics covered include the architecture of ElixirScript, binary pattern
      matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s
      future. For all this and then some, be sure to listen in today!</p>\n\n<p>Key
      Points From This Episode:</p>\n\n<ul>\n<li>Some background on Bryan, his work
      and how he got started with Elixir. </li>\n<li>What is ElixirScript? What does
      it do? How Brian got the idea!</li>\n<li>ElixirScript&#39;s architecture; the
      inner workings of the compiler.</li>\n<li>The major problems and challenges
      that face this task with JavaScript. </li>\n<li>Step one in the process; the
      conversion of concepts.</li>\n<li>Binary pattern matching and the implementation
      of strings. </li>\n<li>The things Bryan would do differently looking back on
      the product.<br></li>\n<li>Bryan&#39;s other experiences of libraries, contributions
      and fixes. </li>\n<li>Marketing, posting and getting the word out on ElixirScript.</li>\n<li>The
      current state of the project and hopes for the future. </li>\n<li>A little bit
      about The Big Elixir and what sets it apart from other conferences.<br></li>\n<li>And
      much more! </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic
      — <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixirScript
      — <a href=\"https://elixirscript.github.io/\" rel=\"nofollow\">https://elixirscript.github.io/</a><br>\nBryan
      Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nRevelry
      — <a href=\"https://revelry.co/\" rel=\"nofollow\">https://revelry.co/</a><br>\nThe
      Big Elixir— <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nMetaprogramming
      Elixir — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
      rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nChris
      McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nErlang
      — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixirCon
      — <a href=\"https://www.elixirlabs.net/events/elixircon-2018\" rel=\"nofollow\">https://www.elixirlabs.net/events/elixircon-2018</a><br>\nLonestar
      Elixir — <a href=\"https://www.lonestarelixir.com/\" rel=\"nofollow\">https://www.lonestarelixir.com/</a><br>\nOperation
      Spark — <a href=\"https://operationspark.org/\" rel=\"nofollow\">https://operationspark.org/</a><br>\nFlatiron
      — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>\n      "
  contentEncoded: "\n        <p>Today on the show we continue our series on the inner
    workings and various libraries of Elixir and are very happy to welcome Bryan Joseph
    of Revelry to talk about his very own ElixirScript. ElixirScript is essentially
    an Elixir to JavaScript compiler, allowing users to run Elixir online more easily.
    We ask Bryan what inspired this project and about some of the major challenges
    that have faced it. We also talk about the role of his company, Revelry in his
    career and work in open source. Bryan tells us about his very own conference,
    The Big Elixir and why you should be traveling to New Orleans to check it out!
    Other topics covered include the architecture of ElixirScript, binary pattern
    matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s
    future. For all this and then some, be sure to listen in today!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>Some background on Bryan, his work
    and how he got started with Elixir. </li>\n<li>What is ElixirScript? What does
    it do? How Brian got the idea!</li>\n<li>ElixirScript&#39;s architecture; the
    inner workings of the compiler.</li>\n<li>The major problems and challenges that
    face this task with JavaScript. </li>\n<li>Step one in the process; the conversion
    of concepts.</li>\n<li>Binary pattern matching and the implementation of strings.
    </li>\n<li>The things Bryan would do differently looking back on the product.<br></li>\n<li>Bryan&#39;s
    other experiences of libraries, contributions and fixes. </li>\n<li>Marketing,
    posting and getting the word out on ElixirScript.</li>\n<li>The current state
    of the project and hopes for the future. </li>\n<li>A little bit about The Big
    Elixir and what sets it apart from other conferences.<br></li>\n<li>And much more!
    </li>\n</ul>\n\n<p>Links Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic —
    <a href=\"https://www.smartlogic.io/\" rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nElixirScript
    — <a href=\"https://elixirscript.github.io/\" rel=\"nofollow\">https://elixirscript.github.io/</a><br>\nBryan
    Joseph — <a href=\"https://github.com/bryanjos\" rel=\"nofollow\">https://github.com/bryanjos</a><br>\nRevelry
    — <a href=\"https://revelry.co/\" rel=\"nofollow\">https://revelry.co/</a><br>\nThe
    Big Elixir— <a href=\"https://www.thebigelixir.com/\" rel=\"nofollow\">https://www.thebigelixir.com/</a><br>\nMetaprogramming
    Elixir — <a href=\"https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414\"
    rel=\"nofollow\">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>\nChris
    McCord — <a href=\"http://chrismccord.com/\" rel=\"nofollow\">http://chrismccord.com/</a><br>\nErlang
    — <a href=\"https://www.erlang.org/\" rel=\"nofollow\">https://www.erlang.org/</a><br>\nElixirCon
    — <a href=\"https://www.elixirlabs.net/events/elixircon-2018\" rel=\"nofollow\">https://www.elixirlabs.net/events/elixircon-2018</a><br>\nLonestar
    Elixir — <a href=\"https://www.lonestarelixir.com/\" rel=\"nofollow\">https://www.lonestarelixir.com/</a><br>\nOperation
    Spark — <a href=\"https://operationspark.org/\" rel=\"nofollow\">https://operationspark.org/</a><br>\nFlatiron
    — <a href=\"https://flatironschool.com/\" rel=\"nofollow\">https://flatironschool.com/</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>\n      "
- title: Brooklyn Zelenka on Witchcraft - Elixir Internals
  slug: season-two-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/season-two-zelenka
  guid: 490b7cc3-44d7-4917-9688-2450d18de62a
  pubDate: Thu, 11 Jul 2019 06:00:00 -0400
  pubDateFriendly: July 11, 2019
  description: "Hey everybody and welcome back to Season 2 of the podcast! This season
    we will be talking about Elixir internals, libraries and the inner workings of
    the language. In our first episode we are very happy to be joined by Brooklyn
    Zelenka to start off our journey on the subject with an exploration of her very
    own Witchcraft.\nIn this episode we talk to Brooklyn about her history with Elixir,
    how she got started and what attracts her to it. Brooklyn explains the influence
    that open source philosophy has had on her career in developing and from there
    she gives a pretty comprehensive introduction to what Witchcraft is, expanding
    its key concepts. Although this is quite a high level discussion about Elixir
    and Witchcraft, we are confident that with Brooklyn's expert help even our most
    uninitiated listener can get some benefit from our conversation. We also talk
    about type systems, property-based checking and Dialyzer, so for all of this and
    more make sure to join us as we kick things off for Season 2!\nKey Points From
    This Episode:\nA quick introduction to Brooklyn, where she works and how she got
    started with Elixir.  \nThe influence of open source and library contributions
    on Brooklyn's development.\nGetting to grips with Witchcraft; defining monads
    and functors.\nWhy some of these scary terms do not need to frighten you. \nA
    few little things that differentiate Witchcraft and some surprising elements.\nThe
    convenient guarantees that Witchcraft provides around your data structure. \nWhy
    there is no type system baked into Elixir; overheads, inputs and outputs. \nProperty-based
    checking and compile times in Witchcraft.\nMerging of Elixir and Dialyzer; benefits
    and problems. \nGetting in touch with Brooklyn and getting involved with Witchcraft
    and Elixir. \nAnd much more! \nLinks Mentioned in Today’s Episode:\nSmartlogic
    — https://www.smartlogic.io/\nBrooklyn Zelenka — https://github.com/expede\nBrooklyn
    Zelenka on Twitter — https://twitter.com/expede\nBrooklyn Zelenka Email — hello@brooklynzelenka.com\nFission
    — https://fission.codes/\nElixir — https://elixir-lang.org/\nWitchcraft — https://hex.pm/packages/witchcraft\nDialyzer
    — https://github.com/jeremyjh/dialyxir\nLearn more about how SmartLogic uses Phoenix
    and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+BeykEzKP
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/490b7cc3-44d7-4917-9688-2450d18de62a.mp3
    length: '29867258'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '2'
    author: SmartLogic LLC
    subtitle: Hey everybody and welcome back to Season 2 of the podcast! This season
      we will be talking about Elixir internals, libraries and the inner workings
      of the language. In our first episode we are very happy to be joined by Brooklyn
      Zelenka to start off our journey on the subject with an exploration of her very
      own Witchcraft.
    duration: '30:15'
    explicit: 'no'
    keywords: elixir, witchcraft, dialyzer
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/490b7cc3-44d7-4917-9688-2450d18de62a/cover.jpg?v=3
    summary: "\n        <p>Hey everybody and welcome back to Season 2 of the podcast!
      This season we will be talking about Elixir internals, libraries and the inner
      workings of the language. In our first episode we are very happy to be joined
      by Brooklyn Zelenka to start off our journey on the subject with an exploration
      of her very own Witchcraft.</p>\n\n<p>In this episode we talk to Brooklyn about
      her history with Elixir, how she got started and what attracts her to it. Brooklyn
      explains the influence that open source philosophy has had on her career in
      developing and from there she gives a pretty comprehensive introduction to what
      Witchcraft is, expanding its key concepts. Although this is quite a high level
      discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s
      expert help even our most uninitiated listener can get some benefit from our
      conversation. We also talk about type systems, property-based checking and Dialyzer,
      so for all of this and more make sure to join us as we kick things off for Season
      2!</p>\n\n<p>Key Points From This Episode:</p>\n\n<ul>\n<li>A quick introduction
      to Brooklyn, where she works and how she got started with Elixir.<br></li>\n<li>The
      influence of open source and library contributions on Brooklyn&#39;s development.</li>\n<li>Getting
      to grips with Witchcraft; defining monads and functors.</li>\n<li>Why some of
      these scary terms do not need to frighten you. </li>\n<li>A few little things
      that differentiate Witchcraft and some surprising elements.</li>\n<li>The convenient
      guarantees that Witchcraft provides around your data structure. </li>\n<li>Why
      there is no type system baked into Elixir; overheads, inputs and outputs. </li>\n<li>Property-based
      checking and compile times in Witchcraft.</li>\n<li>Merging of Elixir and Dialyzer;
      benefits and problems. </li>\n<li>Getting in touch with Brooklyn and getting
      involved with Witchcraft and Elixir. </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
      Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic — <a href=\"https://www.smartlogic.io/\"
      rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
      rel=\"nofollow\">https://github.com/expede</a><br>\nBrooklyn Zelenka on Twitter
      — <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\nBrooklyn
      Zelenka Email — <a href=\"mailto:hello@brooklynzelenka.com\" rel=\"nofollow\">hello@brooklynzelenka.com</a><br>\nFission
      — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nElixir
      — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nWitchcraft
      — <a href=\"https://hex.pm/packages/witchcraft\" rel=\"nofollow\">https://hex.pm/packages/witchcraft</a><br>\nDialyzer
      — <a href=\"https://github.com/jeremyjh/dialyxir\" rel=\"nofollow\">https://github.com/jeremyjh/dialyxir</a></p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>\n      "
  contentEncoded: "\n        <p>Hey everybody and welcome back to Season 2 of the
    podcast! This season we will be talking about Elixir internals, libraries and
    the inner workings of the language. In our first episode we are very happy to
    be joined by Brooklyn Zelenka to start off our journey on the subject with an
    exploration of her very own Witchcraft.</p>\n\n<p>In this episode we talk to Brooklyn
    about her history with Elixir, how she got started and what attracts her to it.
    Brooklyn explains the influence that open source philosophy has had on her career
    in developing and from there she gives a pretty comprehensive introduction to
    what Witchcraft is, expanding its key concepts. Although this is quite a high
    level discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s
    expert help even our most uninitiated listener can get some benefit from our conversation.
    We also talk about type systems, property-based checking and Dialyzer, so for
    all of this and more make sure to join us as we kick things off for Season 2!</p>\n\n<p>Key
    Points From This Episode:</p>\n\n<ul>\n<li>A quick introduction to Brooklyn, where
    she works and how she got started with Elixir.<br></li>\n<li>The influence of
    open source and library contributions on Brooklyn&#39;s development.</li>\n<li>Getting
    to grips with Witchcraft; defining monads and functors.</li>\n<li>Why some of
    these scary terms do not need to frighten you. </li>\n<li>A few little things
    that differentiate Witchcraft and some surprising elements.</li>\n<li>The convenient
    guarantees that Witchcraft provides around your data structure. </li>\n<li>Why
    there is no type system baked into Elixir; overheads, inputs and outputs. </li>\n<li>Property-based
    checking and compile times in Witchcraft.</li>\n<li>Merging of Elixir and Dialyzer;
    benefits and problems. </li>\n<li>Getting in touch with Brooklyn and getting involved
    with Witchcraft and Elixir. </li>\n<li>And much more! </li>\n</ul>\n\n<p>Links
    Mentioned in Today’s Episode:</p>\n\n<p>Smartlogic — <a href=\"https://www.smartlogic.io/\"
    rel=\"nofollow\">https://www.smartlogic.io/</a><br>\nBrooklyn Zelenka — <a href=\"https://github.com/expede\"
    rel=\"nofollow\">https://github.com/expede</a><br>\nBrooklyn Zelenka on Twitter
    — <a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\nBrooklyn
    Zelenka Email — <a href=\"mailto:hello@brooklynzelenka.com\" rel=\"nofollow\">hello@brooklynzelenka.com</a><br>\nFission
    — <a href=\"https://fission.codes/\" rel=\"nofollow\">https://fission.codes/</a><br>\nElixir
    — <a href=\"https://elixir-lang.org/\" rel=\"nofollow\">https://elixir-lang.org/</a><br>\nWitchcraft
    — <a href=\"https://hex.pm/packages/witchcraft\" rel=\"nofollow\">https://hex.pm/packages/witchcraft</a><br>\nDialyzer
    — <a href=\"https://github.com/jeremyjh/dialyxir\" rel=\"nofollow\">https://github.com/jeremyjh/dialyxir</a></p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>\n      "
- title: Elixir in Production Recap
  slug: season-1-recap
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-recap
  guid: e81d239d-448f-4244-884a-f5f972277713
  pubDate: Thu, 18 Apr 2019 06:00:00 -0400
  pubDateFriendly: April 18, 2019
  description: |
    With this season over, we bring Dan Ivovich back to talk about what we learned.
    Dan Ivovich - Director of Development Operations @ SmartLogic
    00:43 - Why are you using Elixir in production?
    01:20 - Advantages / disadvantages of Elixir
    02:38 - How do you deploy?
    03:48 - Zero downtime deploys
    05:40 - Clustering
    06:56 - Elixir App performance
    09:00 - Background task processing
    10:36 - Common Libraries
    14:40 - 3rd Party Services
    16:16 - Do you have a story where Elixir saved the day in production?
    17:56 - OTP features
    18:31 - Tip to developers
    Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Dan Ivovich.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+QNebX_LU
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e81d239d-448f-4244-884a-f5f972277713.mp3
    length: '19256966'
    type: audio/mp3
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: With this season over, we bring Dan Ivovich back to talk about what
      we learned.
    duration: '20:03'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
    summary: "\n        <p>With this season over, we bring Dan Ivovich back to talk
      about what we learned.</p>\n\n<p>Dan Ivovich - Director of Development Operations
      @ SmartLogic</p>\n\n<p>00:43 - Why are you using Elixir in production?<br>\n01:20
      - Advantages / disadvantages of Elixir<br>\n02:38 - How do you deploy?<br>\n03:48
      - Zero downtime deploys<br>\n05:40 - Clustering<br>\n06:56 - Elixir App performance<br>\n09:00
      - Background task processing<br>\n10:36 - Common Libraries<br>\n14:40 - 3rd
      Party Services<br>\n16:16 - Do you have a story where Elixir saved the day in
      production?<br>\n17:56 - OTP features<br>\n18:31 - Tip to developers</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p>\n      "
  contentEncoded: "\n        <p>With this season over, we bring Dan Ivovich back to
    talk about what we learned.</p>\n\n<p>Dan Ivovich - Director of Development Operations
    @ SmartLogic</p>\n\n<p>00:43 - Why are you using Elixir in production?<br>\n01:20
    - Advantages / disadvantages of Elixir<br>\n02:38 - How do you deploy?<br>\n03:48
    - Zero downtime deploys<br>\n05:40 - Clustering<br>\n06:56 - Elixir App performance<br>\n09:00
    - Background task processing<br>\n10:36 - Common Libraries<br>\n14:40 - 3rd Party
    Services<br>\n16:16 - Do you have a story where Elixir saved the day in production?<br>\n17:56
    - OTP features<br>\n18:31 - Tip to developers</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Dan Ivovich.</p>\n      "
- title: Jeffrey Matthias from Community - Elixir in Production
  slug: season-1-community
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-community
  guid: 7bd99e2e-cba0-4c94-904a-5486ce48c517
  pubDate: Thu, 11 Apr 2019 06:00:00 -0400
  pubDateFriendly: April 11, 2019
  description: "We talk with Jeffrey Matthias from Community about their current and
    past Elixir projects and how they are deployed.\nJeffrey Matthias - Community
    (https://www.community.com/)\nFind Jeffrey elsewhere online:\nhttp://github.com/idlehands\nhttps://twitter.com/idlehands\n0:47
    - Give us a quick overview of the Elixir projects you have in production.\n3:29
    - Why are you using Elixir in production?\n6:04 - What are some of the high level
    advantages / disadvantages of Elixir, from your perspective?\n10:14 - What do
    you use to host your Elixir app?\nLinode, AWS, DO \nHeroku \nEnmesos \nmesos  \nHow
    do you deploy your application?\nAnsible \nDeploy scripts \nDistillery \n14:19
    - Are you able to get zero downtime deploys?\nIf so, how? \n17:06 - Do you cluster
    the application?\nIf so, how? \n22:53 - How does your Elixir App perform compared
    to others in your environment?\nResponse time \nThroughput \nJobs/hr \n25:01 -
    How are you solving background task processing?\n29:17 - What libraries are you
    using?\nPhoenix \n33:53 - Third party apps \n37:28 - Do you have a story where
    Elixir saved the day in production?\n40:42 - If you could give one tip to developers
    out there who are or may soon be running Elixir in production, what would it be?\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Jeffrey Matthias.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zDmDU2aS
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7bd99e2e-cba0-4c94-904a-5486ce48c517.mp3
    length: '42795517'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Jeffrey Matthias from Community about their current and
      past Elixir projects and how they are deployed.
    duration: '43:54'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7bd99e2e-cba0-4c94-904a-5486ce48c517/cover.jpg?v=2
    summary: "\n        <p>We talk with Jeffrey Matthias from Community about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Jeffrey
      Matthias - <a href=\"https://www.community.com/\" rel=\"nofollow\">Community</a></p>\n\n<p>Find
      Jeffrey elsewhere online:<br>\n<a href=\"http://github.com/idlehands\" rel=\"nofollow\">http://github.com/idlehands</a><br>\n<a
      href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a></p>\n\n<p>0:47
      - Give us a quick overview of the Elixir projects you have in production.</p>\n\n<p>3:29
      - Why are you using Elixir in production?</p>\n\n<p>6:04 - What are some of
      the high level advantages / disadvantages of Elixir, from your perspective?</p>\n\n<p>10:14
      - What do you use to host your Elixir app?</p>\n\n<ul>\n<li>Linode, AWS, DO
      </li>\n<li>Heroku </li>\n<li>Enmesos </li>\n<li>mesos<br></li>\n</ul>\n\n<p>How
      do you deploy your application?</p>\n\n<ul>\n<li>Ansible </li>\n<li>Deploy scripts
      </li>\n<li>Distillery </li>\n</ul>\n\n<p>14:19 - Are you able to get zero downtime
      deploys?</p>\n\n<ul>\n<li>If so, how? </li>\n</ul>\n\n<p>17:06 - Do you cluster
      the application?</p>\n\n<ul>\n<li>If so, how? </li>\n</ul>\n\n<p>22:53 - How
      does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>Response
      time </li>\n<li>Throughput </li>\n<li>Jobs/hr </li>\n</ul>\n\n<p>25:01 - How
      are you solving background task processing?</p>\n\n<p>29:17 - What libraries
      are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n</ul>\n\n<p>33:53 - Third party
      apps </p>\n\n<p>37:28 - Do you have a story where Elixir saved the day in production?</p>\n\n<p>40:42
      - If you could give one tip to developers out there who are or may soon be running
      Elixir in production, what would it be?</p>\n\n<p>Learn more about how SmartLogic
      uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
      Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a href=\"https://www.enbala.com/\"
      title=\"Enbala\" rel=\"nofollow\">Enbala</a></li><li><a href=\"https://weedmaps.com/\"
      title=\"Weedmaps\" rel=\"nofollow\">Weedmaps</a></li><li><a href=\"https://shop.oreilly.com/product/0636920153566.do\"
      title=\"Docker: Up & Running\" rel=\"nofollow\">Docker: Up & Running</a></li><li><a
      href=\"https://www.asyncapi.com/\" title=\"Async API\" rel=\"nofollow\">Async
      API</a></li><li><a href=\"https://www.rabbitmq.com/\" title=\"RabbitMQ\" rel=\"nofollow\">RabbitMQ</a></li><li><a
      href=\"https://github.com/pma/amqp\" title=\"AMQP Elixir Client\" rel=\"nofollow\">AMQP
      Elixir Client</a></li><li><a href=\"https://github.com/silviucpp/erlcass\" title=\"erlcass\"
      rel=\"nofollow\">erlcass</a></li><li><a href=\"https://www.erlang-in-anger.com/\"
      title=\"Erlang in Anger\" rel=\"nofollow\">Erlang in Anger</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Jeffrey Matthias from Community about
    their current and past Elixir projects and how they are deployed.</p>\n\n<p>Jeffrey
    Matthias - <a href=\"https://www.community.com/\" rel=\"nofollow\">Community</a></p>\n\n<p>Find
    Jeffrey elsewhere online:<br>\n<a href=\"http://github.com/idlehands\" rel=\"nofollow\">http://github.com/idlehands</a><br>\n<a
    href=\"https://twitter.com/idlehands\" rel=\"nofollow\">https://twitter.com/idlehands</a></p>\n\n<p>0:47
    - Give us a quick overview of the Elixir projects you have in production.</p>\n\n<p>3:29
    - Why are you using Elixir in production?</p>\n\n<p>6:04 - What are some of the
    high level advantages / disadvantages of Elixir, from your perspective?</p>\n\n<p>10:14
    - What do you use to host your Elixir app?</p>\n\n<ul>\n<li>Linode, AWS, DO </li>\n<li>Heroku
    </li>\n<li>Enmesos </li>\n<li>mesos<br></li>\n</ul>\n\n<p>How do you deploy your
    application?</p>\n\n<ul>\n<li>Ansible </li>\n<li>Deploy scripts </li>\n<li>Distillery
    </li>\n</ul>\n\n<p>14:19 - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>If
    so, how? </li>\n</ul>\n\n<p>17:06 - Do you cluster the application?</p>\n\n<ul>\n<li>If
    so, how? </li>\n</ul>\n\n<p>22:53 - How does your Elixir App perform compared
    to others in your environment?</p>\n\n<ul>\n<li>Response time </li>\n<li>Throughput
    </li>\n<li>Jobs/hr </li>\n</ul>\n\n<p>25:01 - How are you solving background task
    processing?</p>\n\n<p>29:17 - What libraries are you using?</p>\n\n<ul>\n<li>Phoenix
    </li>\n</ul>\n\n<p>33:53 - Third party apps </p>\n\n<p>37:28 - Do you have a story
    where Elixir saved the day in production?</p>\n\n<p>40:42 - If you could give
    one tip to developers out there who are or may soon be running Elixir in production,
    what would it be?</p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a
    href=\"https://www.enbala.com/\" title=\"Enbala\" rel=\"nofollow\">Enbala</a></li><li><a
    href=\"https://weedmaps.com/\" title=\"Weedmaps\" rel=\"nofollow\">Weedmaps</a></li><li><a
    href=\"https://shop.oreilly.com/product/0636920153566.do\" title=\"Docker: Up
    & Running\" rel=\"nofollow\">Docker: Up & Running</a></li><li><a href=\"https://www.asyncapi.com/\"
    title=\"Async API\" rel=\"nofollow\">Async API</a></li><li><a href=\"https://www.rabbitmq.com/\"
    title=\"RabbitMQ\" rel=\"nofollow\">RabbitMQ</a></li><li><a href=\"https://github.com/pma/amqp\"
    title=\"AMQP Elixir Client\" rel=\"nofollow\">AMQP Elixir Client</a></li><li><a
    href=\"https://github.com/silviucpp/erlcass\" title=\"erlcass\" rel=\"nofollow\">erlcass</a></li><li><a
    href=\"https://www.erlang-in-anger.com/\" title=\"Erlang in Anger\" rel=\"nofollow\">Erlang
    in Anger</a></li></ul>\n      "
- title: Jay Ashe from Cava - Elixir in Production
  slug: season-1-cava
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-cava
  guid: c300841a-d5b9-4957-950f-ce0f6bc3af68
  pubDate: Thu, 04 Apr 2019 06:00:00 -0400
  pubDateFriendly: April  4, 2019
  description: "We talk with Jay Ashe from Cava about their current and past Elixir
    projects and how they are deployed.\nJay Ashe - Cava (https://cava.com/)\nFind
    Jay elsewhere online:\nhttps://twitter.com/jgashe\n0:40 - Give us a quick overview
    of the Elixir projects you have in production.\nCAVA is a fast-casual mediterranean
    restaurant chain with 75 stores across the US. Elixir and phoenix power CAVA’s
    online ordering platform (order.cava.com and the CAVA app). We’ve got a REST (and
    websockets) api sitting behind react and our mobile apps, and we use phoenix templates
    for some of our back of house systems.\n1:11 - Why are you using Elixir in production?\nWe
    have from the start! The application was originally implemented by Chris Bell
    and his team at madebymany. Chris, by the way, has a fantastic talk from ElixirConf
    2016 that goes into our architecture and how we use elixir and OTP constructs
    to model our business logic. Chris will occasionally talk about the CAVA project
    on his Elixir podcast, ElixirTalk.\nChris’ Talk - https://www.youtube.com/watch?v=fkDhU-2NWJ8
    (https://www.youtube.com/watch?v=fkDhU-2NWJ8)\n1:58 - What are some of the high
    level advantages / disadvantages of Elixir, from your perspective?\nAdvantages:
    Elixir and Phoenix gives you rails-esque productivity/developer experience that
    scales. I think phoenix channels are a great example of this. Build a channel
    with complex real-time functionality and let it scale effortlessly. \nDisadvantages:
    \nHiring and onboarding, depending on your mindset, can be difficult. If you’re
    used to hiring for experience in  your stack, its just going to be more difficult.
    Lately we’ve started doing one-hour weekly knowledge shares that cover elixir
    basics and are closely tied to our usage of them. So, here’s a test case, and
    here are all of the test helpers that we have set up that will help you write
    that test. We also just sent a new Elixir dev to lonestar elixir \n3:59 - What
    do you use to host your Elixir app?\nHeroku \nHow do you deploy your application?
    \nHeroku-buildpack-elixir https://github.com/HashNuke/heroku-buildpack-elixir
    (https://github.com/HashNuke/heroku-buildpack-elixir) \n4:44 - Are you able to
    get zero downtime deploys?\n- As close as possible! We get that out of the box
    with heroku. When we deploy, heroku won’t point traffic to the new dyno until
    the app is healthy. We make extensive use of Phoenix channels over websockets,
    and our clients will reconnect automatically and transparently.  \n5:10 - Do you
    cluster the application?\nNope.  \n5:52 - How does your Elixir App perform compared
    to others in your environment?\nI can’t really talk about numbers here, but Elixir
    is not at all our bottleneck. We don’t have other production applications \n6:25
    - How are you solving background task processing?\nQuantum for cron jobs, genservers
    for everything else. We’re running a single elixir application that handles all
    synchronous and async processing  \n7:07 - What libraries are you using?\nPhoenix
    \nPhoenix_swagger for API documentation that integrates with controller tests
    https://github.com/xerions/phoenix_swagger (https://github.com/xerions/phoenix_swagger)
    \nEx_rated for rate limiting calls to our integrations https://github.com/grempe/ex_rated
    (https://github.com/grempe/ex_rated) \nTimex and calendar for datetime support
    with timezones https://github.com/bitwalker/timex (https://github.com/bitwalker/timex)
    \nA combination of httpotion and httpoison for HTTP clients, but im interested
    in trying Mint https://github.com/ericmj/mint (https://github.com/ericmj/mint)https://github.com/appcues/mojito
    (https://github.com/appcues/mojito) \nBamboo for transactional emails, like order
    confirmations etc https://github.com/thoughtbot/bamboo (https://github.com/thoughtbot/bamboo)
    \n8:59 - 3rd Party Services (i.e. Email, Payment Processing, etc)\nSendgrid for
    email, Google for geocoding, slack for some internal alerting of application health,
    LevelUp for payments. https://www.thelevelup.com/ (https://www.thelevelup.com/)
    \n10:07 - Do you have a story where Elixir saved the day in production?\nYes and
    no. So I could tell this story by explaining the issue we saw and the underlying
    cause at the same time, but I think it would be more fun to tell it like our team
    experienced it. \nOne day at lunch our application started going down. Lots of
    500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time of day,
    so 1) we thought it was load related and 2) we really needed to fix it \nNone
    of our traditional resources (database, cpu, memory) were constrained and our
    integrations that were synchronous were fine.  \nOur logs were littered with errors
    from an analytics integration that ran asynchronously on genservers, but it didn’t
    seem related because we could see the error logs at times when our application
    was otherwise healthy. The team that used the analytics didn’t have a pressing
    need for them, and we deprioritized fixing the issue because the bug we were working
    on was so much more important (that’s foreshadowing). \nI spent a little time
    looking at websockets, but I was easily able to match the load of the websocket
    portion of our application on my local machine with no degradations in performance
    (thanks, phoenix), so that was out. \nAt this point the issue was going on every
    day at lunch and I was getting annoyed at seeing the logs from the analytics integration
    when debugging, so I spent like 15 minutes finding and fixing the issue (a bad
    API key, basically) \nVoila, issue gone. Time to grab some lunch. \nWe spent a
    while coming up with an explanation for this. Eventually we learned about max_restarts
    on a supervisor. By default, if a process crashes 3 times in 5 seconds, the process
    won’t be restarted again. So if another process (like the one handling a web request)
    tries to call that process that wasn’t restarted, the caller would crash, and
    we’d start to get 500 errors, customers couldn’t log in, mass confusion. \nSo
    there are a few takeaways from this story: For a while, elixir saved the day in
    production.  \n    - A supervision tree prevented failures from the analytics
    process from affecting customers, until the scale of our failures exceeded the
    max_restart level.  \n    - Our supervision tree needed some love though, clearly.
    \n    - Monitor your resources. CPU is a resource, but calls to another API are
    also a resource and can get unhealthy too.  \n15:00 - Are you using any cool OTP
    features?\nGenServers, definitely. There’s lots we can do asynchronously especially
    in terms of our integrations. One process per store is a cool model that scales
    well and keeps issues isolated to a single store. \n15:50 - If you could give
    one tip to developers out there who are or may soon be running Elixir in production,
    what would it be?\nIf you’re on a small team, Heroku or a similar provider might
    give you a lot of value in terms of infrastructure you can set up and forget.\nLearn
    more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Jay Ashe.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gv-OH0jo
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c300841a-d5b9-4957-950f-ce0f6bc3af68.mp3
    length: '17639405'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Jay Ashe from Cava about their current and past Elixir
      projects and how they are deployed.
    duration: '17:25'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c300841a-d5b9-4957-950f-ce0f6bc3af68/cover.jpg?v=2
    summary: "\n        <p>We talk with Jay Ashe from Cava about their current and
      past Elixir projects and how they are deployed.</p>\n\n<p>Jay Ashe - <a href=\"https://cava.com/\"
      rel=\"nofollow\">Cava</a></p>\n\n<p>Find Jay elsewhere online:<br>\n<a href=\"https://twitter.com/jgashe\"
      rel=\"nofollow\">https://twitter.com/jgashe</a></p>\n\n<p>0:40 - Give us a quick
      overview of the Elixir projects you have in production.</p>\n\n<p>CAVA is a
      fast-casual mediterranean restaurant chain with 75 stores across the US. Elixir
      and phoenix power CAVA’s online ordering platform (order.cava.com and the CAVA
      app). We’ve got a REST (and websockets) api sitting behind react and our mobile
      apps, and we use phoenix templates for some of our back of house systems.</p>\n\n<p>1:11
      - Why are you using Elixir in production?</p>\n\n<p>We have from the start!
      The application was originally implemented by Chris Bell and his team at madebymany.
      Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into
      our architecture and how we use elixir and OTP constructs to model our business
      logic. Chris will occasionally talk about the CAVA project on his Elixir podcast,
      ElixirTalk.</p>\n\n<p>Chris’ Talk - <a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\"
      rel=\"nofollow\">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>\n\n<p>1:58
      - What are some of the high level advantages / disadvantages of Elixir, from
      your perspective?</p>\n\n<p>Advantages: Elixir and Phoenix gives you rails-esque
      productivity/developer experience that scales. I think phoenix channels are
      a great example of this. Build a channel with complex real-time functionality
      and let it scale effortlessly. </p>\n\n<p>Disadvantages: </p>\n\n<ul>\n<li>Hiring
      and onboarding, depending on your mindset, can be difficult. If you’re used
      to hiring for experience in  your stack, its just going to be more difficult.
      Lately we’ve started doing one-hour weekly knowledge shares that cover elixir
      basics and are closely tied to our usage of them. So, here’s a test case, and
      here are all of the test helpers that we have set up that will help you write
      that test. We also just sent a new Elixir dev to lonestar elixir </li>\n</ul>\n\n<p>3:59
      - What do you use to host your Elixir app?</p>\n\n<ul>\n<li><p>Heroku </p></li>\n<li><p>How
      do you deploy your application? </p>\n\n<ul>\n<li>Heroku-buildpack-elixir <a
      href=\"https://github.com/HashNuke/heroku-buildpack-elixir\" rel=\"nofollow\">https://github.com/HashNuke/heroku-buildpack-elixir</a>
      </li>\n</ul></li>\n</ul>\n\n<p>4:44 - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>As
      close as possible! We get that out of the box with heroku. When we deploy, heroku
      won’t point traffic to the new dyno until the app is healthy. We make extensive
      use of Phoenix channels over websockets, and our clients will reconnect automatically
      and transparently.<br></li>\n</ul>\n\n<p>5:10 - Do you cluster the application?</p>\n\n<ul>\n<li>Nope.<br></li>\n</ul>\n\n<p>5:52
      - How does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>I
      can’t really talk about numbers here, but Elixir is not at all our bottleneck.
      We don’t have other production applications </li>\n</ul>\n\n<p>6:25 - How are
      you solving background task processing?</p>\n\n<ul>\n<li>Quantum for cron jobs,
      genservers for everything else. We’re running a single elixir application that
      handles all synchronous and async processing<br></li>\n</ul>\n\n<p>7:07 - What
      libraries are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n<li>Phoenix_swagger
      for API documentation that integrates with controller tests <a href=\"https://github.com/xerions/phoenix_swagger\"
      rel=\"nofollow\">https://github.com/xerions/phoenix_swagger</a> </li>\n<li>Ex_rated
      for rate limiting calls to our integrations <a href=\"https://github.com/grempe/ex_rated\"
      rel=\"nofollow\">https://github.com/grempe/ex_rated</a> </li>\n<li>Timex and
      calendar for datetime support with timezones <a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">https://github.com/bitwalker/timex</a> </li>\n<li>A combination
      of httpotion and httpoison for HTTP clients, but im interested in trying Mint
      <a href=\"https://github.com/ericmj/mint\" rel=\"nofollow\">https://github.com/ericmj/mint</a><a
      href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a>
      </li>\n<li>Bamboo for transactional emails, like order confirmations etc <a
      href=\"https://github.com/thoughtbot/bamboo\" rel=\"nofollow\">https://github.com/thoughtbot/bamboo</a>
      </li>\n</ul>\n\n<p>8:59 - 3rd Party Services (i.e. Email, Payment Processing,
      etc)</p>\n\n<ul>\n<li>Sendgrid for email, Google for geocoding, slack for some
      internal alerting of application health, LevelUp for payments. <a href=\"https://www.thelevelup.com/\"
      rel=\"nofollow\">https://www.thelevelup.com/</a> </li>\n</ul>\n\n<p>10:07 -
      Do you have a story where Elixir saved the day in production?</p>\n\n<ul>\n<li>Yes
      and no. So I could tell this story by explaining the issue we saw and the underlying
      cause at the same time, but I think it would be more fun to tell it like our
      team experienced it. </li>\n<li>One day at lunch our application started going
      down. Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest
      time of day, so 1) we thought it was load related and 2) we really needed to
      fix it </li>\n<li>None of our traditional resources (database, cpu, memory)
      were constrained and our integrations that were synchronous were fine.<br></li>\n<li>Our
      logs were littered with errors from an analytics integration that ran asynchronously
      on genservers, but it didn’t seem related because we could see the error logs
      at times when our application was otherwise healthy. The team that used the
      analytics didn’t have a pressing need for them, and we deprioritized fixing
      the issue because the bug we were working on was so much more important (that’s
      foreshadowing). </li>\n<li>I spent a little time looking at websockets, but
      I was easily able to match the load of the websocket portion of our application
      on my local machine with no degradations in performance (thanks, phoenix), so
      that was out. </li>\n<li>At this point the issue was going on every day at lunch
      and I was getting annoyed at seeing the logs from the analytics integration
      when debugging, so I spent like 15 minutes finding and fixing the issue (a bad
      API key, basically) </li>\n<li>Voila, issue gone. Time to grab some lunch. </li>\n<li>We
      spent a while coming up with an explanation for this. Eventually we learned
      about max_restarts on a supervisor. By default, if a process crashes 3 times
      in 5 seconds, the process won’t be restarted again. So if another process (like
      the one handling a web request) tries to call that process that wasn’t restarted,
      the caller would crash, and we’d start to get 500 errors, customers couldn’t
      log in, mass confusion. </li>\n<li>So there are a few takeaways from this story:
      For a while, elixir saved the day in production.<br>\n    - A supervision tree
      prevented failures from the analytics process from affecting customers, until
      the scale of our failures exceeded the max_restart level.<br>\n    - Our supervision
      tree needed some love though, clearly. \n    - Monitor your resources. CPU is
      a resource, but calls to another API are also a resource and can get unhealthy
      too.<br></li>\n</ul>\n\n<p>15:00 - Are you using any cool OTP features?</p>\n\n<ul>\n<li>GenServers,
      definitely. There’s lots we can do asynchronously especially in terms of our
      integrations. One process per store is a cool model that scales well and keeps
      issues isolated to a single store. </li>\n</ul>\n\n<p>15:50 - If you could give
      one tip to developers out there who are or may soon be running Elixir in production,
      what would it be?</p>\n\n<ul>\n<li>If you’re on a small team, Heroku or a similar
      provider might give you a lot of value in terms of infrastructure you can set
      up and forget.</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Jay Ashe.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\" title=\"ElixirConf 2016
      - Selling Food With Elixir by Chris Bell\" rel=\"nofollow\">ElixirConf 2016
      - Selling Food With Elixir by Chris Bell</a></li><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
      title=\"Heroku-buildpack-elixir\" rel=\"nofollow\">Heroku-buildpack-elixir</a></li><li><a
      href=\"https://github.com/xerions/phoenix_swagger\" title=\"Phoenix Swagger\"
      rel=\"nofollow\">Phoenix Swagger</a></li><li><a href=\"https://github.com/grempe/ex_rated\"
      title=\"Ex_rated\" rel=\"nofollow\">Ex_rated</a></li><li><a href=\"https://github.com/bitwalker/timex\"
      title=\"Timex\" rel=\"nofollow\">Timex</a></li><li><a href=\"https://github.com/ericmj/mint\"
      title=\"Mint\" rel=\"nofollow\">Mint</a></li><li><a href=\"https://github.com/appcues/mojito\"
      title=\"Mojito\" rel=\"nofollow\">Mojito</a></li><li><a href=\"https://www.thelevelup.com/\"
      title=\"LevelUp\" rel=\"nofollow\">LevelUp</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Jay Ashe from Cava about their current
    and past Elixir projects and how they are deployed.</p>\n\n<p>Jay Ashe - <a href=\"https://cava.com/\"
    rel=\"nofollow\">Cava</a></p>\n\n<p>Find Jay elsewhere online:<br>\n<a href=\"https://twitter.com/jgashe\"
    rel=\"nofollow\">https://twitter.com/jgashe</a></p>\n\n<p>0:40 - Give us a quick
    overview of the Elixir projects you have in production.</p>\n\n<p>CAVA is a fast-casual
    mediterranean restaurant chain with 75 stores across the US. Elixir and phoenix
    power CAVA’s online ordering platform (order.cava.com and the CAVA app). We’ve
    got a REST (and websockets) api sitting behind react and our mobile apps, and
    we use phoenix templates for some of our back of house systems.</p>\n\n<p>1:11
    - Why are you using Elixir in production?</p>\n\n<p>We have from the start! The
    application was originally implemented by Chris Bell and his team at madebymany.
    Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into our
    architecture and how we use elixir and OTP constructs to model our business logic.
    Chris will occasionally talk about the CAVA project on his Elixir podcast, ElixirTalk.</p>\n\n<p>Chris’
    Talk - <a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\" rel=\"nofollow\">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>\n\n<p>1:58
    - What are some of the high level advantages / disadvantages of Elixir, from your
    perspective?</p>\n\n<p>Advantages: Elixir and Phoenix gives you rails-esque productivity/developer
    experience that scales. I think phoenix channels are a great example of this.
    Build a channel with complex real-time functionality and let it scale effortlessly.
    </p>\n\n<p>Disadvantages: </p>\n\n<ul>\n<li>Hiring and onboarding, depending on
    your mindset, can be difficult. If you’re used to hiring for experience in  your
    stack, its just going to be more difficult. Lately we’ve started doing one-hour
    weekly knowledge shares that cover elixir basics and are closely tied to our usage
    of them. So, here’s a test case, and here are all of the test helpers that we
    have set up that will help you write that test. We also just sent a new Elixir
    dev to lonestar elixir </li>\n</ul>\n\n<p>3:59 - What do you use to host your
    Elixir app?</p>\n\n<ul>\n<li><p>Heroku </p></li>\n<li><p>How do you deploy your
    application? </p>\n\n<ul>\n<li>Heroku-buildpack-elixir <a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    rel=\"nofollow\">https://github.com/HashNuke/heroku-buildpack-elixir</a> </li>\n</ul></li>\n</ul>\n\n<p>4:44
    - Are you able to get zero downtime deploys?</p>\n\n<ul>\n<li>As close as possible!
    We get that out of the box with heroku. When we deploy, heroku won’t point traffic
    to the new dyno until the app is healthy. We make extensive use of Phoenix channels
    over websockets, and our clients will reconnect automatically and transparently.<br></li>\n</ul>\n\n<p>5:10
    - Do you cluster the application?</p>\n\n<ul>\n<li>Nope.<br></li>\n</ul>\n\n<p>5:52
    - How does your Elixir App perform compared to others in your environment?</p>\n\n<ul>\n<li>I
    can’t really talk about numbers here, but Elixir is not at all our bottleneck.
    We don’t have other production applications </li>\n</ul>\n\n<p>6:25 - How are
    you solving background task processing?</p>\n\n<ul>\n<li>Quantum for cron jobs,
    genservers for everything else. We’re running a single elixir application that
    handles all synchronous and async processing<br></li>\n</ul>\n\n<p>7:07 - What
    libraries are you using?</p>\n\n<ul>\n<li>Phoenix </li>\n<li>Phoenix_swagger for
    API documentation that integrates with controller tests <a href=\"https://github.com/xerions/phoenix_swagger\"
    rel=\"nofollow\">https://github.com/xerions/phoenix_swagger</a> </li>\n<li>Ex_rated
    for rate limiting calls to our integrations <a href=\"https://github.com/grempe/ex_rated\"
    rel=\"nofollow\">https://github.com/grempe/ex_rated</a> </li>\n<li>Timex and calendar
    for datetime support with timezones <a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">https://github.com/bitwalker/timex</a> </li>\n<li>A combination
    of httpotion and httpoison for HTTP clients, but im interested in trying Mint
    <a href=\"https://github.com/ericmj/mint\" rel=\"nofollow\">https://github.com/ericmj/mint</a><a
    href=\"https://github.com/appcues/mojito\" rel=\"nofollow\">https://github.com/appcues/mojito</a>
    </li>\n<li>Bamboo for transactional emails, like order confirmations etc <a href=\"https://github.com/thoughtbot/bamboo\"
    rel=\"nofollow\">https://github.com/thoughtbot/bamboo</a> </li>\n</ul>\n\n<p>8:59
    - 3rd Party Services (i.e. Email, Payment Processing, etc)</p>\n\n<ul>\n<li>Sendgrid
    for email, Google for geocoding, slack for some internal alerting of application
    health, LevelUp for payments. <a href=\"https://www.thelevelup.com/\" rel=\"nofollow\">https://www.thelevelup.com/</a>
    </li>\n</ul>\n\n<p>10:07 - Do you have a story where Elixir saved the day in production?</p>\n\n<ul>\n<li>Yes
    and no. So I could tell this story by explaining the issue we saw and the underlying
    cause at the same time, but I think it would be more fun to tell it like our team
    experienced it. </li>\n<li>One day at lunch our application started going down.
    Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time
    of day, so 1) we thought it was load related and 2) we really needed to fix it
    </li>\n<li>None of our traditional resources (database, cpu, memory) were constrained
    and our integrations that were synchronous were fine.<br></li>\n<li>Our logs were
    littered with errors from an analytics integration that ran asynchronously on
    genservers, but it didn’t seem related because we could see the error logs at
    times when our application was otherwise healthy. The team that used the analytics
    didn’t have a pressing need for them, and we deprioritized fixing the issue because
    the bug we were working on was so much more important (that’s foreshadowing).
    </li>\n<li>I spent a little time looking at websockets, but I was easily able
    to match the load of the websocket portion of our application on my local machine
    with no degradations in performance (thanks, phoenix), so that was out. </li>\n<li>At
    this point the issue was going on every day at lunch and I was getting annoyed
    at seeing the logs from the analytics integration when debugging, so I spent like
    15 minutes finding and fixing the issue (a bad API key, basically) </li>\n<li>Voila,
    issue gone. Time to grab some lunch. </li>\n<li>We spent a while coming up with
    an explanation for this. Eventually we learned about max_restarts on a supervisor.
    By default, if a process crashes 3 times in 5 seconds, the process won’t be restarted
    again. So if another process (like the one handling a web request) tries to call
    that process that wasn’t restarted, the caller would crash, and we’d start to
    get 500 errors, customers couldn’t log in, mass confusion. </li>\n<li>So there
    are a few takeaways from this story: For a while, elixir saved the day in production.<br>\n
    \   - A supervision tree prevented failures from the analytics process from affecting
    customers, until the scale of our failures exceeded the max_restart level.<br>\n
    \   - Our supervision tree needed some love though, clearly. \n    - Monitor your
    resources. CPU is a resource, but calls to another API are also a resource and
    can get unhealthy too.<br></li>\n</ul>\n\n<p>15:00 - Are you using any cool OTP
    features?</p>\n\n<ul>\n<li>GenServers, definitely. There’s lots we can do asynchronously
    especially in terms of our integrations. One process per store is a cool model
    that scales well and keeps issues isolated to a single store. </li>\n</ul>\n\n<p>15:50
    - If you could give one tip to developers out there who are or may soon be running
    Elixir in production, what would it be?</p>\n\n<ul>\n<li>If you’re on a small
    team, Heroku or a similar provider might give you a lot of value in terms of infrastructure
    you can set up and forget.</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses
    <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Jay Ashe.</p><p>Links:</p><ul><li><a href=\"https://www.youtube.com/watch?v=fkDhU-2NWJ8\"
    title=\"ElixirConf 2016 - Selling Food With Elixir by Chris Bell\" rel=\"nofollow\">ElixirConf
    2016 - Selling Food With Elixir by Chris Bell</a></li><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    title=\"Heroku-buildpack-elixir\" rel=\"nofollow\">Heroku-buildpack-elixir</a></li><li><a
    href=\"https://github.com/xerions/phoenix_swagger\" title=\"Phoenix Swagger\"
    rel=\"nofollow\">Phoenix Swagger</a></li><li><a href=\"https://github.com/grempe/ex_rated\"
    title=\"Ex_rated\" rel=\"nofollow\">Ex_rated</a></li><li><a href=\"https://github.com/bitwalker/timex\"
    title=\"Timex\" rel=\"nofollow\">Timex</a></li><li><a href=\"https://github.com/ericmj/mint\"
    title=\"Mint\" rel=\"nofollow\">Mint</a></li><li><a href=\"https://github.com/appcues/mojito\"
    title=\"Mojito\" rel=\"nofollow\">Mojito</a></li><li><a href=\"https://www.thelevelup.com/\"
    title=\"LevelUp\" rel=\"nofollow\">LevelUp</a></li></ul>\n      "
- title: Frank Hunleth - Elixir in Production
  slug: season-1-hunleth
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-hunleth
  guid: ad538aa5-ad67-418b-b07f-0be38fff2f6b
  pubDate: Thu, 28 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 28, 2019
  description: "We talk with Frank Hunleth from the Nerves core team about their current
    and past Elixir projects and how they are deployed.\nFrank Hunleth - Nerves (https://nerves-project.org/)\nFind
    Frank elsewhere online:\nhttps://twitter.com/fhunleth\nhttps://github.com/fhunleth\n0:53
    \   Frank intro\n2:02    Give us a quick overview of the Elixir projects you have
    in production.\n4:25    Why are you using Elixir in production?\n8:00    What
    are some of the high level advantages / disadvantages of Elixir, from your perspective?\n9:25
    \   What hardware do you deploy to?\n12:05   How do you get code to hardware after
    deployment?\n13:47   How do you secure the code?\n18:12   Do you cluster?\nIf
    so, how?\nHow does your Elixir App perform compared to others in your environment?\n22:45
    \  How does Elixir compare to other languages? \n26:15   More information about
    Nerves \nLearn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8)
    Special Guest: Frank Hunleth.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Eao_WrT8
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ad538aa5-ad67-418b-b07f-0be38fff2f6b.mp3
    length: '28464534'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Frank Hunleth from the Nerves core team about their current
      and past Elixir projects and how they are deployed.
    duration: '28:47'
    explicit: 'no'
    keywords: elixir, nerves, production
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ad538aa5-ad67-418b-b07f-0be38fff2f6b/cover.jpg?v=2
    summary: "\n        <p>We talk with Frank Hunleth from the Nerves core team about
      their current and past Elixir projects and how they are deployed.</p>\n\n<p>Frank
      Hunleth - <a href=\"https://nerves-project.org/\" rel=\"nofollow\">Nerves</a></p>\n\n<p>Find
      Frank elsewhere online:<br>\n<a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\n<a
      href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a></p>\n\n<p>0:53
      \   Frank intro<br>\n2:02    Give us a quick overview of the Elixir projects
      you have in production.<br>\n4:25    Why are you using Elixir in production?<br>\n8:00
      \   What are some of the high level advantages / disadvantages of Elixir, from
      your perspective?<br>\n9:25    What hardware do you deploy to?<br>\n12:05   How
      do you get code to hardware after deployment?<br>\n13:47   How do you secure
      the code?<br>\n18:12   Do you cluster?<br>\nIf so, how?<br>\nHow does your Elixir
      App perform compared to others in your environment?<br>\n22:45   How does Elixir
      compare to other languages? <br>\n26:15   More information about Nerves </p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a
      href=\"https://www.grisp.org/\" title=\"Grisp\" rel=\"nofollow\">Grisp</a></li><li><a
      href=\"https://github.com/grisp\" title=\"Grisp GitHub\" rel=\"nofollow\">Grisp
      GitHub</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Frank Hunleth from the Nerves core team
    about their current and past Elixir projects and how they are deployed.</p>\n\n<p>Frank
    Hunleth - <a href=\"https://nerves-project.org/\" rel=\"nofollow\">Nerves</a></p>\n\n<p>Find
    Frank elsewhere online:<br>\n<a href=\"https://twitter.com/fhunleth\" rel=\"nofollow\">https://twitter.com/fhunleth</a><br>\n<a
    href=\"https://github.com/fhunleth\" rel=\"nofollow\">https://github.com/fhunleth</a></p>\n\n<p>0:53
    \   Frank intro<br>\n2:02    Give us a quick overview of the Elixir projects you
    have in production.<br>\n4:25    Why are you using Elixir in production?<br>\n8:00
    \   What are some of the high level advantages / disadvantages of Elixir, from
    your perspective?<br>\n9:25    What hardware do you deploy to?<br>\n12:05   How
    do you get code to hardware after deployment?<br>\n13:47   How do you secure the
    code?<br>\n18:12   Do you cluster?<br>\nIf so, how?<br>\nHow does your Elixir
    App perform compared to others in your environment?<br>\n22:45   How does Elixir
    compare to other languages? <br>\n26:15   More information about Nerves </p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a
    href=\"https://www.grisp.org/\" title=\"Grisp\" rel=\"nofollow\">Grisp</a></li><li><a
    href=\"https://github.com/grisp\" title=\"Grisp GitHub\" rel=\"nofollow\">Grisp
    GitHub</a></li></ul>\n      "
- title: Mark Ericksen - Elixir in Production
  slug: season-1-ericksen
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-ericksen
  guid: 4a5a2fb4-c1a0-437a-9001-9b981312ecab
  pubDate: Thu, 21 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 21, 2019
  description: "We talk with Mark Ericksen from Elixir Mix about their current and
    past Elixir projects and how they are deployed.\nMark Ericksen - Elixir Mix (https://devchat.tv/elixir-mix/)\nFind
    Mark elsewhere online:\nhttps://twitter.com/brainlid\nhttps://brainlid.org/\n00:32
    Intro\n0:58 Mark intro\nDeveloping a long time. C#, then Rails. Webforms were
    terrible. Rails is “Wow, this is how web development should be… I moved across
    the country to work with this technology”\nThe Rails Community is strong. Dave
    Thomas got Mark into Elixir\n2:48     What Elixir projects do you have in production?\nA
    Rails app and a number of Elixir Micro-liths\n4:29     Why do you use Elixir \n6:45
    \   Trends in moving from Ruby and Rails to Elixir\nRuby Syntax\nPattern Matching\nConcurrency
    primitives\nFault Tolerance and a functional paradigm\nErlang/OTP\n6:48    Comparing
    Elixir community to Ruby community to C# community\n8:27     Any disadvantages
    to using Elixir?\nBuilding releases. Configuring releases.\nmix.release\n10:13
    \   Where are you hosting these bad boys?\nAWS\nKubernetes in Production. So Fresh.\nDocker
    and Distillery 2.0 Releases\nYaml files and Bash Scripts\nMakefiles\n10:53    What
    else are you using besides docker\n12:36    Helm and Ksonnet. \n13:55   Deploys\n14:39
    \  Clustering\n17:50   How do your Elixir apps compare to the Ruby apps?\nBig
    Elixir Apps\n20:00    How Mark handles background jobs\nEasy to write yourself
    with BEAM primitives\n21:27    Libraries - Quantum, Bamboo, exmachina, prometheusex
    via Eric’s influence\n23:29   Third party integrations. Major ones were easy.
    Banks were bad.\nLiterally had to FTP files. Had to use java to write xml spreadsheets.
    The horror.\n25:26     Has Elixir ever saved the day for you in Production?\n29:42:
    Cool OTP features\n30:57 Tips to developers\n35:36 Where to find Mark\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Mark Ericksen.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+ywF-Ju7p
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a5a2fb4-c1a0-437a-9001-9b981312ecab.mp3
    length: '35899109'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Mark Ericksen about their current and past Elixir projects
      and how they are deployed.
    duration: '36:34'
    explicit: 'no'
    keywords: elixir, phoenix, production
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a5a2fb4-c1a0-437a-9001-9b981312ecab/cover.jpg?v=2
    summary: "\n        <p>We talk with Mark Ericksen from Elixir Mix about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Mark Ericksen
      - <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">Elixir Mix</a></p>\n\n<p>Find
      Mark elsewhere online:<br>\n<a href=\"https://twitter.com/brainlid\" rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n<a
      href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a></p>\n\n<p>00:32
      Intro<br>\n0:58 Mark intro<br>\nDeveloping a long time. C#, then Rails. Webforms
      were terrible. Rails is “Wow, this is how web development should be… I moved
      across the country to work with this technology”<br>\nThe Rails Community is
      strong. Dave Thomas got Mark into Elixir</p>\n\n<p>2:48     What Elixir projects
      do you have in production?<br>\nA Rails app and a number of Elixir Micro-liths</p>\n\n<p>4:29
      \    Why do you use Elixir </p>\n\n<p>6:45    Trends in moving from Ruby and
      Rails to Elixir<br>\nRuby Syntax<br>\nPattern Matching<br>\nConcurrency primitives<br>\nFault
      Tolerance and a functional paradigm<br>\nErlang/OTP</p>\n\n<p>6:48    Comparing
      Elixir community to Ruby community to C# community</p>\n\n<p>8:27     Any disadvantages
      to using Elixir?<br>\nBuilding releases. Configuring releases.<br>\nmix.release</p>\n\n<p>10:13
      \   Where are you hosting these bad boys?<br>\nAWS<br>\nKubernetes in Production.
      So Fresh.<br>\nDocker and Distillery 2.0 Releases<br>\nYaml files and Bash Scripts<br>\nMakefiles</p>\n\n<p>10:53
      \   What else are you using besides docker</p>\n\n<p>12:36    Helm and Ksonnet.
      </p>\n\n<p>13:55   Deploys</p>\n\n<p>14:39   Clustering</p>\n\n<p>17:50   How
      do your Elixir apps compare to the Ruby apps?<br>\nBig Elixir Apps</p>\n\n<p>20:00
      \   How Mark handles background jobs<br>\nEasy to write yourself with BEAM primitives</p>\n\n<p>21:27
      \   Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>\n\n<p>23:29
      \  Third party integrations. Major ones were easy. Banks were bad.<br>\nLiterally
      had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>\n\n<p>25:26
      \    Has Elixir ever saved the day for you in Production?</p>\n\n<p>29:42: Cool
      OTP features<br>\n30:57 Tips to developers<br>\n35:36 Where to find Mark</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a
      href=\"https://github.com/bitwalker/libcluster\" title=\"libcluster\" rel=\"nofollow\">libcluster</a></li><li><a
      href=\"https://github.com/akira/exq\" title=\"Exq\" rel=\"nofollow\">Exq</a></li><li><a
      href=\"https://absinthe-graphql.org/\" title=\"absinthe\" rel=\"nofollow\">absinthe</a></li><li><a
      href=\"https://github.com/absinthe-graphql/dataloader\" title=\"dataloader\"
      rel=\"nofollow\">dataloader</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Mark Ericksen from Elixir Mix about their
    current and past Elixir projects and how they are deployed.</p>\n\n<p>Mark Ericksen
    - <a href=\"https://devchat.tv/elixir-mix/\" rel=\"nofollow\">Elixir Mix</a></p>\n\n<p>Find
    Mark elsewhere online:<br>\n<a href=\"https://twitter.com/brainlid\" rel=\"nofollow\">https://twitter.com/brainlid</a><br>\n<a
    href=\"https://brainlid.org/\" rel=\"nofollow\">https://brainlid.org/</a></p>\n\n<p>00:32
    Intro<br>\n0:58 Mark intro<br>\nDeveloping a long time. C#, then Rails. Webforms
    were terrible. Rails is “Wow, this is how web development should be… I moved across
    the country to work with this technology”<br>\nThe Rails Community is strong.
    Dave Thomas got Mark into Elixir</p>\n\n<p>2:48     What Elixir projects do you
    have in production?<br>\nA Rails app and a number of Elixir Micro-liths</p>\n\n<p>4:29
    \    Why do you use Elixir </p>\n\n<p>6:45    Trends in moving from Ruby and Rails
    to Elixir<br>\nRuby Syntax<br>\nPattern Matching<br>\nConcurrency primitives<br>\nFault
    Tolerance and a functional paradigm<br>\nErlang/OTP</p>\n\n<p>6:48    Comparing
    Elixir community to Ruby community to C# community</p>\n\n<p>8:27     Any disadvantages
    to using Elixir?<br>\nBuilding releases. Configuring releases.<br>\nmix.release</p>\n\n<p>10:13
    \   Where are you hosting these bad boys?<br>\nAWS<br>\nKubernetes in Production.
    So Fresh.<br>\nDocker and Distillery 2.0 Releases<br>\nYaml files and Bash Scripts<br>\nMakefiles</p>\n\n<p>10:53
    \   What else are you using besides docker</p>\n\n<p>12:36    Helm and Ksonnet.
    </p>\n\n<p>13:55   Deploys</p>\n\n<p>14:39   Clustering</p>\n\n<p>17:50   How
    do your Elixir apps compare to the Ruby apps?<br>\nBig Elixir Apps</p>\n\n<p>20:00
    \   How Mark handles background jobs<br>\nEasy to write yourself with BEAM primitives</p>\n\n<p>21:27
    \   Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>\n\n<p>23:29
    \  Third party integrations. Major ones were easy. Banks were bad.<br>\nLiterally
    had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>\n\n<p>25:26
    \    Has Elixir ever saved the day for you in Production?</p>\n\n<p>29:42: Cool
    OTP features<br>\n30:57 Tips to developers<br>\n35:36 Where to find Mark</p>\n\n<p>Learn
    more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
    and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a
    href=\"https://github.com/bitwalker/libcluster\" title=\"libcluster\" rel=\"nofollow\">libcluster</a></li><li><a
    href=\"https://github.com/akira/exq\" title=\"Exq\" rel=\"nofollow\">Exq</a></li><li><a
    href=\"https://absinthe-graphql.org/\" title=\"absinthe\" rel=\"nofollow\">absinthe</a></li><li><a
    href=\"https://github.com/absinthe-graphql/dataloader\" title=\"dataloader\" rel=\"nofollow\">dataloader</a></li></ul>\n
    \     "
- title: Brooklyn Zelenka from SPADE Co. - Elixir in Production
  slug: season-1-zelenka
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-zelenka
  guid: 0cef68be-a246-4ba6-bdc7-a6835c05fe72
  pubDate: Thu, 14 Mar 2019 06:00:00 -0400
  pubDateFriendly: March 14, 2019
  description: "We talk with Brooklyn Zelenka from SPADE Co. about their current and
    past Elixir projects and how they are deployed.\nBrooklyn Zelenka - SPADE Co.
    (https://spade.builders/)\nFind Brooklyn elsewhere online:\nhttps://twitter.com/expede\nhttps://github.com/expede\n1:08
    \   - Brooklyn’s Background\nBrooklyn's background and experience with Elixir
    is deep. Huge open source contributor. \nGot started in Elixir just after Phoenix
    got to 1.0. \n1:53     - Worked on several Elixir projects in production.\n2:43
    \    - Why she got into Elixir.\n- Real Time\n- More performant than Rails.\n-
    Great documentation\n- Industrial-grade\n4:38     - When you wouldn't use Elixir.
    \nEasy to get stakeholder buy-in. Just point to WhatsApp.\nElixir is made for
    2019\nCLI tools\nRepl-driven development \nTDD tools built in by default \nAll
    the best practices we have today are built in.\n7:14     - Where has Brooklyn
    hosted her apps?\nHeroku for POC's. AWS for production. Dockerized because \"kubernetes
    is the new hotness\"\n9:40    - Do you do any clustering?\nLoad balanced above.
    AWS load balancing is very standard. They're well understood and have a nice developer
    experience.\n10:29   Are you able to get any zero downtime deploys?\nZero downtime
    deploys. Awesome but impractical. Rolling deploys are easier and usually more
    appropriate. Some requirements make it valuable.\nErlang error states. Exceptional.
    Allows you to build for the happy path. Don't worry about error handling all the
    time.\nWitchcraft and dark magic. Monads.\nPoke around the standard library.\n12:50
    \   - How does Elixir compare to Rails in terms of response times, and other aspects?\n15:32
    \   - What libraries do you use and what have  you built?\n22:41    - Any cool
    features of OTP you are using? \n25:36   - One tip to developers new to Elixir\nBuild
    up a peer-to-peer cli chat from scratch in one GenServer.\nFind her at @expede
    everywhere on the internet.\nLearn more about how SmartLogic uses Phoenix and
    Elixir. (https://smr.tl/2Hyslu8)\n Special Guest: Brooklyn Zelenka.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+bzKl4PYr
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0cef68be-a246-4ba6-bdc7-a6835c05fe72.mp3
    length: '27483795'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Brooklyn Zelenka from SPADE Co. about their current and
      past Elixir projects and how they are deployed.
    duration: '27:46'
    explicit: 'no'
    keywords: elixir, phoenix, spade co
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0cef68be-a246-4ba6-bdc7-a6835c05fe72/cover.jpg?v=2
    summary: "\n        <p>We talk with Brooklyn Zelenka from SPADE Co. about their
      current and past Elixir projects and how they are deployed.</p>\n\n<p>Brooklyn
      Zelenka - <a href=\"https://spade.builders/\" rel=\"nofollow\">SPADE Co.</a></p>\n\n<p>Find
      Brooklyn elsewhere online:<br>\n<a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\n<a
      href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a></p>\n\n<p>1:08
      \   - Brooklyn’s Background</p>\n\n<p>Brooklyn&#39;s background and experience
      with Elixir is deep. Huge open source contributor. <br>\nGot started in Elixir
      just after Phoenix got to 1.0. </p>\n\n<p>1:53     - Worked on several Elixir
      projects in production.</p>\n\n<p>2:43     - Why she got into Elixir.</p>\n\n<ul>\n<li>Real
      Time</li>\n<li>More performant than Rails.</li>\n<li>Great documentation</li>\n<li>Industrial-grade</li>\n</ul>\n\n<p>4:38
      \    - When you wouldn&#39;t use Elixir. </p>\n\n<p>Easy to get stakeholder
      buy-in. Just point to WhatsApp.</p>\n\n<p>Elixir is made for 2019<br>\nCLI tools<br>\nRepl-driven
      development <br>\nTDD tools built in by default </p>\n\n<p>All the best practices
      we have today are built in.</p>\n\n<p>7:14     - Where has Brooklyn hosted her
      apps?</p>\n\n<p>Heroku for POC&#39;s. AWS for production. Dockerized because
      &quot;kubernetes is the new hotness&quot;</p>\n\n<p>9:40    - Do you do any
      clustering?</p>\n\n<p>Load balanced above. AWS load balancing is very standard.
      They&#39;re well understood and have a nice developer experience.</p>\n\n<p>10:29
      \  Are you able to get any zero downtime deploys?<br>\nZero downtime deploys.
      Awesome but impractical. Rolling deploys are easier and usually more appropriate.
      Some requirements make it valuable.</p>\n\n<p>Erlang error states. Exceptional.
      Allows you to build for the happy path. Don&#39;t worry about error handling
      all the time.</p>\n\n<p>Witchcraft and dark magic. Monads.</p>\n\n<p>Poke around
      the standard library.</p>\n\n<p>12:50    - How does Elixir compare to Rails
      in terms of response times, and other aspects?</p>\n\n<p>15:32    - What libraries
      do you use and what have  you built?</p>\n\n<p>22:41    - Any cool features
      of OTP you are using? </p>\n\n<p>25:36   - One tip to developers new to Elixir</p>\n\n<p>Build
      up a peer-to-peer cli chat from scratch in one GenServer.</p>\n\n<p>Find her
      at @expede everywhere on the internet.</p>\n\n<p>Learn more about how SmartLogic
      uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
      Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
      title=\"Heroku Elixir Buildpack\" rel=\"nofollow\">Heroku Elixir Buildpack</a></li><li><a
      href=\"https://github.com/gjaldon/heroku-buildpack-phoenix-static\" title=\"Heroku
      Phoenix Static Buildpack\" rel=\"nofollow\">Heroku Phoenix Static Buildpack</a></li><li><a
      href=\"https://github.com/expede/exceptional\" title=\"Exceptional\" rel=\"nofollow\">Exceptional</a></li><li><a
      href=\"https://github.com/expede/witchcraft\" title=\"Witchcraft\" rel=\"nofollow\">Witchcraft</a></li><li><a
      href=\"https://github.com/expede/quick_chat\" title=\"QuickChat\" rel=\"nofollow\">QuickChat</a></li></ul>\n
      \     "
  contentEncoded: "\n        <p>We talk with Brooklyn Zelenka from SPADE Co. about
    their current and past Elixir projects and how they are deployed.</p>\n\n<p>Brooklyn
    Zelenka - <a href=\"https://spade.builders/\" rel=\"nofollow\">SPADE Co.</a></p>\n\n<p>Find
    Brooklyn elsewhere online:<br>\n<a href=\"https://twitter.com/expede\" rel=\"nofollow\">https://twitter.com/expede</a><br>\n<a
    href=\"https://github.com/expede\" rel=\"nofollow\">https://github.com/expede</a></p>\n\n<p>1:08
    \   - Brooklyn’s Background</p>\n\n<p>Brooklyn&#39;s background and experience
    with Elixir is deep. Huge open source contributor. <br>\nGot started in Elixir
    just after Phoenix got to 1.0. </p>\n\n<p>1:53     - Worked on several Elixir
    projects in production.</p>\n\n<p>2:43     - Why she got into Elixir.</p>\n\n<ul>\n<li>Real
    Time</li>\n<li>More performant than Rails.</li>\n<li>Great documentation</li>\n<li>Industrial-grade</li>\n</ul>\n\n<p>4:38
    \    - When you wouldn&#39;t use Elixir. </p>\n\n<p>Easy to get stakeholder buy-in.
    Just point to WhatsApp.</p>\n\n<p>Elixir is made for 2019<br>\nCLI tools<br>\nRepl-driven
    development <br>\nTDD tools built in by default </p>\n\n<p>All the best practices
    we have today are built in.</p>\n\n<p>7:14     - Where has Brooklyn hosted her
    apps?</p>\n\n<p>Heroku for POC&#39;s. AWS for production. Dockerized because &quot;kubernetes
    is the new hotness&quot;</p>\n\n<p>9:40    - Do you do any clustering?</p>\n\n<p>Load
    balanced above. AWS load balancing is very standard. They&#39;re well understood
    and have a nice developer experience.</p>\n\n<p>10:29   Are you able to get any
    zero downtime deploys?<br>\nZero downtime deploys. Awesome but impractical. Rolling
    deploys are easier and usually more appropriate. Some requirements make it valuable.</p>\n\n<p>Erlang
    error states. Exceptional. Allows you to build for the happy path. Don&#39;t worry
    about error handling all the time.</p>\n\n<p>Witchcraft and dark magic. Monads.</p>\n\n<p>Poke
    around the standard library.</p>\n\n<p>12:50    - How does Elixir compare to Rails
    in terms of response times, and other aspects?</p>\n\n<p>15:32    - What libraries
    do you use and what have  you built?</p>\n\n<p>22:41    - Any cool features of
    OTP you are using? </p>\n\n<p>25:36   - One tip to developers new to Elixir</p>\n\n<p>Build
    up a peer-to-peer cli chat from scratch in one GenServer.</p>\n\n<p>Find her at
    @expede everywhere on the internet.</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href=\"https://github.com/HashNuke/heroku-buildpack-elixir\"
    title=\"Heroku Elixir Buildpack\" rel=\"nofollow\">Heroku Elixir Buildpack</a></li><li><a
    href=\"https://github.com/gjaldon/heroku-buildpack-phoenix-static\" title=\"Heroku
    Phoenix Static Buildpack\" rel=\"nofollow\">Heroku Phoenix Static Buildpack</a></li><li><a
    href=\"https://github.com/expede/exceptional\" title=\"Exceptional\" rel=\"nofollow\">Exceptional</a></li><li><a
    href=\"https://github.com/expede/witchcraft\" title=\"Witchcraft\" rel=\"nofollow\">Witchcraft</a></li><li><a
    href=\"https://github.com/expede/quick_chat\" title=\"QuickChat\" rel=\"nofollow\">QuickChat</a></li></ul>\n
    \     "
- title: Todd Resudek from Weedmaps - Elixir in Production
  slug: season-1-weedmaps
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-weedmaps
  guid: d949b81e-39c5-4474-8605-89062b8dc543
  pubDate: Thu, 07 Mar 2019 06:00:00 -0500
  pubDateFriendly: March  7, 2019
  description: "We talk with Todd Resudek from Weedmaps about their current Elixir
    projects and how they are deployed.\nTodd Resudek - Weedmaps (https://weedmaps.com/)\nFind
    Todd elsewhere online:\nhttps://twitter.com/sprsmpl\nhttps://github.com/supersimple\n00:00
    - Intro\n01:06 - Tom introduces himself\n02:54 - What is Weedmaps?\n04:33 - Overview
    of the Elixir projects you have in production.\n06:25 - Why are you using Elixir
    in production?\n07:21 - Advantages / disadvantages of Elixir\n10:37   - What do
    you use to host your Elixir app?\n10:50 - How do you deploy your application?\n11:22
    - Are you able to get zero downtime deploys? \n12:00 - Do you cluster the application?
    \n13:00 - How does your Elixir App perform compared to others in your environment?\n14:15
    - How are you solving background task processing?\n16:40 - What libraries are
    you using?\n21:09 - 3rd Party Services\n23:56 - Do you have a story where Elixir
    saved the day in production?\n24:22 - Are you using any cool OTP features?\n24:39
    - Tip to developers\n25:12 - Where you can find him\n25:32 - Outro\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Todd Resudek.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+gdseP1yY
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d949b81e-39c5-4474-8605-89062b8dc543.mp3
    length: '25689488'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Todd Resudek from Weedmaps about their current Elixir projects
      and how they are deployed.
    duration: '26:01'
    explicit: 'no'
    keywords: elixir, phoenix, weedmaps
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d949b81e-39c5-4474-8605-89062b8dc543/cover.jpg?v=2
    summary: "\n        <p>We talk with Todd Resudek from Weedmaps about their current
      Elixir projects and how they are deployed.</p>\n\n<p>Todd Resudek - <a href=\"https://weedmaps.com/\"
      rel=\"nofollow\">Weedmaps</a></p>\n\n<p>Find Todd elsewhere online:<br>\n<a
      href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\n<a
      href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a></p>\n\n<p>00:00
      - Intro<br>\n01:06 - Tom introduces himself<br>\n02:54 - What is Weedmaps?<br>\n04:33
      - Overview of the Elixir projects you have in production.<br>\n06:25 - Why are
      you using Elixir in production?<br>\n07:21 - Advantages / disadvantages of Elixir<br>\n10:37
      \  - What do you use to host your Elixir app?<br>\n10:50 - How do you deploy
      your application?<br>\n11:22 - Are you able to get zero downtime deploys? <br>\n12:00
      - Do you cluster the application? <br>\n13:00 - How does your Elixir App perform
      compared to others in your environment?<br>\n14:15 - How are you solving background
      task processing?<br>\n16:40 - What libraries are you using?<br>\n21:09 - 3rd
      Party Services<br>\n23:56 - Do you have a story where Elixir saved the day in
      production?<br>\n24:22 - Are you using any cool OTP features?<br>\n24:39 - Tip
      to developers<br>\n25:12 - Where you can find him<br>\n25:32 - Outro</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Todd Resudek.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=cbCnTKVLuu8\" title=\"A Deep Dive into
      Hex - ElixirConf talk\" rel=\"nofollow\">A Deep Dive into Hex - ElixirConf talk</a></li><li><a
      href=\"https://github.com/rrrene/credo\" title=\"Credo\" rel=\"nofollow\">Credo</a></li><li><a
      href=\"https://github.com/jeremyjh/dialyxir\" title=\"Dialyxir\" rel=\"nofollow\">Dialyxir</a></li><li><a
      href=\"https://github.com/swoosh/swoosh\" title=\"Swoosh\" rel=\"nofollow\">Swoosh</a></li></ul>\n
      \     "
  contentEncoded: "\n        <p>We talk with Todd Resudek from Weedmaps about their
    current Elixir projects and how they are deployed.</p>\n\n<p>Todd Resudek - <a
    href=\"https://weedmaps.com/\" rel=\"nofollow\">Weedmaps</a></p>\n\n<p>Find Todd
    elsewhere online:<br>\n<a href=\"https://twitter.com/sprsmpl\" rel=\"nofollow\">https://twitter.com/sprsmpl</a><br>\n<a
    href=\"https://github.com/supersimple\" rel=\"nofollow\">https://github.com/supersimple</a></p>\n\n<p>00:00
    - Intro<br>\n01:06 - Tom introduces himself<br>\n02:54 - What is Weedmaps?<br>\n04:33
    - Overview of the Elixir projects you have in production.<br>\n06:25 - Why are
    you using Elixir in production?<br>\n07:21 - Advantages / disadvantages of Elixir<br>\n10:37
    \  - What do you use to host your Elixir app?<br>\n10:50 - How do you deploy your
    application?<br>\n11:22 - Are you able to get zero downtime deploys? <br>\n12:00
    - Do you cluster the application? <br>\n13:00 - How does your Elixir App perform
    compared to others in your environment?<br>\n14:15 - How are you solving background
    task processing?<br>\n16:40 - What libraries are you using?<br>\n21:09 - 3rd Party
    Services<br>\n23:56 - Do you have a story where Elixir saved the day in production?<br>\n24:22
    - Are you using any cool OTP features?<br>\n24:39 - Tip to developers<br>\n25:12
    - Where you can find him<br>\n25:32 - Outro</p>\n\n<p>Learn more about how SmartLogic
    uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Todd Resudek.</p><p>Links:</p><ul><li><a href=\"https://www.youtube.com/watch?v=cbCnTKVLuu8\"
    title=\"A Deep Dive into Hex - ElixirConf talk\" rel=\"nofollow\">A Deep Dive
    into Hex - ElixirConf talk</a></li><li><a href=\"https://github.com/rrrene/credo\"
    title=\"Credo\" rel=\"nofollow\">Credo</a></li><li><a href=\"https://github.com/jeremyjh/dialyxir\"
    title=\"Dialyxir\" rel=\"nofollow\">Dialyxir</a></li><li><a href=\"https://github.com/swoosh/swoosh\"
    title=\"Swoosh\" rel=\"nofollow\">Swoosh</a></li></ul>\n      "
- title: Lonestar ElixirConf 2019 Lunchisode
  slug: special-lonestar-elixir-2019
  link: https://smartlogic.io/podcast/elixir-wizards/special-lonestar-elixir-2019
  guid: 4646981d-f12c-479e-a5cc-7629570962ed
  pubDate: Wed, 06 Mar 2019 03:15:00 -0500
  pubDateFriendly: March  6, 2019
  description: "We sat down with numerous developers, including José Valim and Chris
    McCord, during the Saturday lunch at Lonestar ElixirConf 2019 (https://lonestarelixir.com/2019/).
    Hear what they had to say about the state of Elixir!\nGuests:\nJosé Valim - Creator
    of Elixir (https://elixir-lang.org/)\nChris McCord - Creator of Phoenix (https://phoenixframework.org/)\nPaul
    Schoenfelder - Creator of Distillery (https://github.com/bitwalker/distillery),
    Timex (https://github.com/bitwalker/timex), Libcluster (https://github.com/bitwalker/libcluster),
    and many others\nChris Keathley - Host of Elixir Outlaws (https://elixiroutlaws.com/),
    developer at Bleacher Report (https://bleacherreport.com/)\nAmos King - Host of
    Elixir Outlaws (https://elixiroutlaws.com/)\nJim Freeze - Organizer of ElixirConf
    (https://elixirconf.com/), ElixirConf EU (http://www.elixirconf.eu/), and others\nSusumu
    Yamazaki - Creator of Hastega (https://github.com/zeam-vm/hastega)\nBrian Cardarella
    - CEO of Dockyard (https://dockyard.com/)\nOsa Gaius - Engineer at Mailchimp (https://mailchimp.com/)\nSpectating:\nBruce
    Tate and Ben Marx\n00:00   - Intro\n01:47   - LoneStar begins\n02:03   - Panelists
    introduce themselves\n09:15   - Where is Elixir going?\n10:14   - Releases\n19:04
    \  - The issue with hype\n26:30   - Osa Intro\n29:00 - Define lists\n40:00 - How
    can Elixir displace Java?\nLearn more about how SmartLogic uses Phoenix and Elixir.
    (https://smr.tl/2Hyslu8) \n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+Dtb3wso1
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4646981d-f12c-479e-a5cc-7629570962ed.mp3
    length: '47881563'
    type: audio/mpeg
  itunes:
    episodeType: bonus
    season: '1'
    author: SmartLogic LLC
    subtitle: We sat down with numerous developers, including José Valim and Chris
      McCord, during the Saturday lunch at Lonestar ElixirConf 2019. Hear what they
      had to say about the state of Elixir!
    duration: '49:26'
    explicit: 'no'
    keywords: elixir, phoenix
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4646981d-f12c-479e-a5cc-7629570962ed/cover.jpg?v=1
    summary: "\n        <p>We sat down with numerous developers, including José Valim
      and Chris McCord, during the Saturday lunch at <a href=\"https://lonestarelixir.com/2019/\"
      rel=\"nofollow\">Lonestar ElixirConf 2019</a>. Hear what they had to say about
      the state of Elixir!</p>\n\n<p>Guests:<br>\nJosé Valim - Creator of <a href=\"https://elixir-lang.org/\"
      rel=\"nofollow\">Elixir</a><br>\nChris McCord - Creator of <a href=\"https://phoenixframework.org/\"
      rel=\"nofollow\">Phoenix</a><br>\nPaul Schoenfelder - Creator of <a href=\"https://github.com/bitwalker/distillery\"
      rel=\"nofollow\">Distillery</a>, <a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">Timex</a>, <a href=\"https://github.com/bitwalker/libcluster\"
      rel=\"nofollow\">Libcluster</a>, and many others<br>\nChris Keathley - Host
      of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir Outlaws</a>,
      developer at <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">Bleacher
      Report</a><br>\nAmos King - Host of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir
      Outlaws</a><br>\nJim Freeze - Organizer of <a href=\"https://elixirconf.com/\"
      rel=\"nofollow\">ElixirConf</a>, <a href=\"http://www.elixirconf.eu/\" rel=\"nofollow\">ElixirConf
      EU</a>, and others<br>\nSusumu Yamazaki - Creator of <a href=\"https://github.com/zeam-vm/hastega\"
      rel=\"nofollow\">Hastega</a><br>\nBrian Cardarella - CEO of <a href=\"https://dockyard.com/\"
      rel=\"nofollow\">Dockyard</a><br>\nOsa Gaius - Engineer at <a href=\"https://mailchimp.com/\"
      rel=\"nofollow\">Mailchimp</a></p>\n\n<p>Spectating:<br>\nBruce Tate and Ben
      Marx</p>\n\n<p>00:00   - Intro<br>\n01:47   - LoneStar begins<br>\n02:03   -
      Panelists introduce themselves<br>\n09:15   - Where is Elixir going?<br>\n10:14
      \  - Releases<br>\n19:04   - The issue with hype<br>\n26:30   - Osa Intro<br>\n29:00
      - Define lists<br>\n40:00 - How can Elixir displace Java?</p>\n\n<p>Learn more
      about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p>\n      "
  contentEncoded: "\n        <p>We sat down with numerous developers, including José
    Valim and Chris McCord, during the Saturday lunch at <a href=\"https://lonestarelixir.com/2019/\"
    rel=\"nofollow\">Lonestar ElixirConf 2019</a>. Hear what they had to say about
    the state of Elixir!</p>\n\n<p>Guests:<br>\nJosé Valim - Creator of <a href=\"https://elixir-lang.org/\"
    rel=\"nofollow\">Elixir</a><br>\nChris McCord - Creator of <a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">Phoenix</a><br>\nPaul Schoenfelder - Creator of <a href=\"https://github.com/bitwalker/distillery\"
    rel=\"nofollow\">Distillery</a>, <a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">Timex</a>, <a href=\"https://github.com/bitwalker/libcluster\"
    rel=\"nofollow\">Libcluster</a>, and many others<br>\nChris Keathley - Host of
    <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir Outlaws</a>, developer
    at <a href=\"https://bleacherreport.com/\" rel=\"nofollow\">Bleacher Report</a><br>\nAmos
    King - Host of <a href=\"https://elixiroutlaws.com/\" rel=\"nofollow\">Elixir
    Outlaws</a><br>\nJim Freeze - Organizer of <a href=\"https://elixirconf.com/\"
    rel=\"nofollow\">ElixirConf</a>, <a href=\"http://www.elixirconf.eu/\" rel=\"nofollow\">ElixirConf
    EU</a>, and others<br>\nSusumu Yamazaki - Creator of <a href=\"https://github.com/zeam-vm/hastega\"
    rel=\"nofollow\">Hastega</a><br>\nBrian Cardarella - CEO of <a href=\"https://dockyard.com/\"
    rel=\"nofollow\">Dockyard</a><br>\nOsa Gaius - Engineer at <a href=\"https://mailchimp.com/\"
    rel=\"nofollow\">Mailchimp</a></p>\n\n<p>Spectating:<br>\nBruce Tate and Ben Marx</p>\n\n<p>00:00
    \  - Intro<br>\n01:47   - LoneStar begins<br>\n02:03   - Panelists introduce themselves<br>\n09:15
    \  - Where is Elixir going?<br>\n10:14   - Releases<br>\n19:04   - The issue with
    hype<br>\n26:30   - Osa Intro<br>\n29:00 - Define lists<br>\n40:00 - How can Elixir
    displace Java?</p>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p>\n      "
- title: Ryan Billingsley from ClusterTruck - Elixir in Production
  slug: season-1-clustertruck
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-clustertruck
  guid: 9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b
  pubDate: Thu, 28 Feb 2019 06:15:00 -0500
  pubDateFriendly: February 28, 2019
  description: |
    We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.
    Ryan Billingsley - ClusterTruck (https://www.clustertruck.com/)
    Find Ryan elsewhere online:
    https://twitter.com/ryanbillingsley
    https://horriblenight.com/
    00:00 - Fade In
    00:50 - Ryan introduces us to ClusterTruck.
    02:00 - How did Ryan get into Elixir?
    03:12 - Where does the name ClusterTruck come from?
    04:17 - Tell us about the projects you have in production.
    05:50 - Why are you using Elixir in these projects.
    08:11 - Disadvantages of using Elixir
    09:22 - Comparing Elixir with Ruby, Node, Go.
    11:38 - Where is ClusterTruck hosting their applications?
    15:03 - Kubernetes?
    16:03 - Zero Downtime Deployments?
    16:42 - Do you do any clustering?
    18:06 - How does Elixir perform compared to other project environments you’ve worked in?
    19:52 - How are you solving background task processing?
    21:09 - Other libraries?
    23:34 - Other third party integrations?
    25:46 - Is there a time Elixir has saved the day in Production?
    27:47 - Cool OTP Features!
    29:45 - Tips to devs thinking about running Elixir in Production.
    31:17 - Outro
    Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Ryan Billingsley.
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+anWWbRpR
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b.mp3
    length: '32066995'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with Ryan Billingsley from ClusterTruck about their current
      Elixir projects and how they are deployed.
    duration: '32:34'
    explicit: 'no'
    keywords: elixir, phoenix, clustertruck
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b/cover.jpg?v=3
    summary: "\n        <p>We talk with Ryan Billingsley from ClusterTruck about their
      current Elixir projects and how they are deployed.</p>\n\n<p>Ryan Billingsley
      - <a href=\"https://www.clustertruck.com/\" rel=\"nofollow\">ClusterTruck</a></p>\n\n<p>Find
      Ryan elsewhere online:<br>\n<a href=\"https://twitter.com/ryanbillingsley\"
      rel=\"nofollow\">https://twitter.com/ryanbillingsley</a><br>\n<a href=\"https://horriblenight.com/\"
      rel=\"nofollow\">https://horriblenight.com/</a></p>\n\n<p>00:00 - Fade In<br>\n00:50
      - Ryan introduces us to ClusterTruck.<br>\n02:00 - How did Ryan get into Elixir?<br>\n03:12
      - Where does the name ClusterTruck come from?<br>\n04:17 - Tell us about the
      projects you have in production.<br>\n05:50 - Why are you using Elixir in these
      projects.<br>\n08:11 - Disadvantages of using Elixir<br>\n09:22 - Comparing
      Elixir with Ruby, Node, Go.<br>\n11:38 - Where is ClusterTruck hosting their
      applications?<br>\n15:03 - Kubernetes?<br>\n16:03 - Zero Downtime Deployments?<br>\n16:42
      - Do you do any clustering?<br>\n18:06 - How does Elixir perform compared to
      other project environments you’ve worked in?<br>\n19:52 - How are you solving
      background task processing?<br>\n21:09 - Other libraries?<br>\n23:34 - Other
      third party integrations?<br>\n25:46 - Is there a time Elixir has saved the
      day in Production?<br>\n27:47 - Cool OTP Features!<br>\n29:45 - Tips to devs
      thinking about running Elixir in Production.<br>\n31:17 - Outro</p>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a
      href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\" title=\"Programming
      Elixir\" rel=\"nofollow\">Programming Elixir</a></li><li><a href=\"https://docs.saltstack.com/en/latest/\"
      title=\"Salt Stack\" rel=\"nofollow\">Salt Stack</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
      title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/zorbash/opus\"
      title=\"Opus\" rel=\"nofollow\">Opus</a></li><li><a href=\"https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2\"
      title=\"handle_continue\" rel=\"nofollow\">handle_continue</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with Ryan Billingsley from ClusterTruck about
    their current Elixir projects and how they are deployed.</p>\n\n<p>Ryan Billingsley
    - <a href=\"https://www.clustertruck.com/\" rel=\"nofollow\">ClusterTruck</a></p>\n\n<p>Find
    Ryan elsewhere online:<br>\n<a href=\"https://twitter.com/ryanbillingsley\" rel=\"nofollow\">https://twitter.com/ryanbillingsley</a><br>\n<a
    href=\"https://horriblenight.com/\" rel=\"nofollow\">https://horriblenight.com/</a></p>\n\n<p>00:00
    - Fade In<br>\n00:50 - Ryan introduces us to ClusterTruck.<br>\n02:00 - How did
    Ryan get into Elixir?<br>\n03:12 - Where does the name ClusterTruck come from?<br>\n04:17
    - Tell us about the projects you have in production.<br>\n05:50 - Why are you
    using Elixir in these projects.<br>\n08:11 - Disadvantages of using Elixir<br>\n09:22
    - Comparing Elixir with Ruby, Node, Go.<br>\n11:38 - Where is ClusterTruck hosting
    their applications?<br>\n15:03 - Kubernetes?<br>\n16:03 - Zero Downtime Deployments?<br>\n16:42
    - Do you do any clustering?<br>\n18:06 - How does Elixir perform compared to other
    project environments you’ve worked in?<br>\n19:52 - How are you solving background
    task processing?<br>\n21:09 - Other libraries?<br>\n23:34 - Other third party
    integrations?<br>\n25:46 - Is there a time Elixir has saved the day in Production?<br>\n27:47
    - Cool OTP Features!<br>\n29:45 - Tips to devs thinking about running Elixir in
    Production.<br>\n31:17 - Outro</p>\n\n<p>Learn more about how SmartLogic uses
    <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special
    Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a href=\"https://pragprog.com/book/elixir16/programming-elixir-1-6\"
    title=\"Programming Elixir\" rel=\"nofollow\">Programming Elixir</a></li><li><a
    href=\"https://docs.saltstack.com/en/latest/\" title=\"Salt Stack\" rel=\"nofollow\">Salt
    Stack</a></li><li><a href=\"https://github.com/bitwalker/swarm\" title=\"Swarm\"
    rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/zorbash/opus\"
    title=\"Opus\" rel=\"nofollow\">Opus</a></li><li><a href=\"https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2\"
    title=\"handle_continue\" rel=\"nofollow\">handle_continue</a></li></ul>\n      "
- title: Dan Ivovich from SmartLogic - Elixir in Production
  slug: season-1-smartlogic
  link: https://smartlogic.io/podcast/elixir-wizards/season-1-smartlogic
  guid: f71af757-ce4c-44a0-8e78-5766711fd7d4
  pubDate: Thu, 28 Feb 2019 06:00:00 -0500
  pubDateFriendly: February 28, 2019
  description: "We talk with developers from the team here at SmartLogic about our
    current practices on deploying Elixir and Phoenix in production.\nDan Ivovich
    - Director of Development Operations @ SmartLogic\nLearn more about how SmartLogic
    uses Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir)\n00:00 - Fade
    In\n00:30 - Introductions to Eric, Dan and SmartLogic\nDan Ivovich - Director
    of Development Operations @ SmartLogic\nEric Oestrich - Developer, Elixir Lead
    @ SmartLogic\nJustus Eapen - Full stack developer @ SmartLogic\nIntroduced to
    Elixir by an old colleague. \n1:20 - What Elixir projects do you have in production?
    \nSeveral client projects in production. Several Mobile Apps with APIs powered
    by Phoenix and Elixir. \nBaltimore Water Taxi. \nA digital marketplace.\nAnd more!\n1:57
    - Advantages and disadvantages to using Elixir.\nWe made the switch when a colleague
    was stoked about Functional Programming and introduced us to Elixir. We were won
    over by the performance and rich feature sets, OTP, etc.\n2:43 - Where are we
    hosting our Elixir Apps?\nHeroku \nAWS \nLinode \nDigital Ocean \n6:20Deployment
    process, tools, scripting\nAnsible - for underlying VPS’s, servers, and more recently
    deployment itself. (Similar to Capistrano).  \nDistillery  \nMix.release \n7:18
    - Zero Downtime Deployments\nOld school load balancers and rolling restarts \n7:46
    - What are the performance metrics like? Comparatively.\nRuby ends up with memory
    leaks. That doesn’t happen with Elixir. \nMemory utilization is flat and low no
    matter what. \n“Phenomenal response times” \n8:54 - How does Eric think about
    clustered applications in Elixir?\nGoing Multi Node (https://www.youtube.com/watch?v=lCUKQnkjajo
    (https://www.youtube.com/watch?v=lCUKQnkjajo)) \nPg2 (http://erlang.org/doc/man/pg2.html)
    - process groups \nMnesia (http://erlang.org/doc/man/mnesia.html) distributed
    database (beware!) \n“Just sending messages to pids because Erlang is great” \nSwarm
    (https://github.com/bitwalker/swarm) / Horde (https://github.com/derekkraan/horde)
    \n12:40 - How do we handle background tasks?\nStarted with verk (https://github.com/edgurgel/verk)
    \nRecently becoming more comfortable with spinning up GenServers (https://hexdocs.pm/elixir/GenServer.html)
    \n“The language itself is built to be concurrent.” \n15:06 What libraries are
    we using in prod?\nFirst thing: You don’t need a whole lot because the language
    is so well designed. \nPhoenix (https://phoenixframework.org/) - web framework
    \nEcto (https://hexdocs.pm/ecto/Ecto.html) - sort of an ORM \nDistillery (https://github.com/bitwalker/distillery)
    - for releases \nBamboo (https://github.com/thoughtbot/bamboo) - for sending emails
    \nQuantum (https://github.com/c-rack/quantum-elixir) - for task scheduling \nTimex
    (https://github.com/bitwalker/timex) - for dates and times, and timezones \nCachex
    (https://github.com/whitfin/cachex) - for caching \n18:20- What third party integrations
    have we attempted\nStripe \nSquare \nTwilio \nMindbody \nAlways building our own
    clients.  Using HTTPoison (https://github.com/edgurgel/httpoison)\n19:58Has Elixir
    ever saved the day in production?\nIt’s saved many days by PREVENTING ISSUES.
    Systems are architected for reliability and fault-tolerance.\n21:48 - Where do
    supervision trees come from? What is OTP?\nOTP is an Erlang standard lib \nIncludes
    supervision trees, genservers, ETS, and a lot of stuff we don’t even know about!
    \ngen_tcp (http://erlang.org/doc/man/gen_tcp.html) \nMnesia \ndets (http://erlang.org/doc/man/dets.html)
    \n23:43- Tips for devs considering running elixir in production.\nJump in and
    read the docs \nUnderstand how systems boot, distillery releases, config providers,
    etc. \n“Good server monitoring hygiene” \n“DIVE IN!” \n19:54 Outro\nLearn more
    about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special
    Guest: Dan Ivovich.\n"
  author: SmartLogic LLC
  embedUrl: https://fireside.fm/player/v2/IAs5ixts+zPzz9EC9
  enclosure:
    url: https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f71af757-ce4c-44a0-8e78-5766711fd7d4.mp3
    length: '28610193'
    type: audio/mpeg
  itunes:
    episodeType: full
    season: '1'
    author: SmartLogic LLC
    subtitle: We talk with developers from here at SmartLogic about our current practices
      on deploying Elixir and Phoenix in production.
    duration: '28:28'
    explicit: 'no'
    keywords: elixir, phoenix, smartlogic
    image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f71af757-ce4c-44a0-8e78-5766711fd7d4/cover.jpg?v=2
    summary: "\n        <p>We talk with developers from the team here at SmartLogic
      about our current practices on deploying Elixir and Phoenix in production.</p>\n\n<p>Dan
      Ivovich - Director of Development Operations @ SmartLogic</p>\n\n<p>Learn more
      about how SmartLogic uses <a href=\"https://smartlogic.io/phoenix-and-elixir\"
      rel=\"nofollow\">Phoenix and Elixir.</a></p>\n\n<p>00:00 - Fade In</p>\n\n<p>00:30
      - Introductions to Eric, Dan and SmartLogic</p>\n\n<p>Dan Ivovich - Director
      of Development Operations @ SmartLogic</p>\n\n<p>Eric Oestrich - Developer,
      Elixir Lead @ SmartLogic</p>\n\n<p>Justus Eapen - Full stack developer @ SmartLogic</p>\n\n<p>Introduced
      to Elixir by an old colleague. </p>\n\n<p>1:20 - What Elixir projects do you
      have in production? </p>\n\n<p>Several client projects in production. Several
      Mobile Apps with APIs powered by Phoenix and Elixir. </p>\n\n<p>Baltimore Water
      Taxi. </p>\n\n<p>A digital marketplace.</p>\n\n<p>And more!</p>\n\n<p>1:57 -
      Advantages and disadvantages to using Elixir.</p>\n\n<p>We made the switch when
      a colleague was stoked about Functional Programming and introduced us to Elixir.
      We were won over by the performance and rich feature sets, OTP, etc.</p>\n\n<p>2:43
      - Where are we hosting our Elixir Apps?</p>\n\n<ul>\n<li>Heroku </li>\n<li>AWS
      </li>\n<li>Linode </li>\n<li>Digital Ocean </li>\n</ul>\n\n<p>6:20Deployment
      process, tools, scripting</p>\n\n<ul>\n<li>Ansible - for underlying VPS’s, servers,
      and more recently deployment itself. (Similar to Capistrano).<br></li>\n<li>Distillery<br></li>\n<li>Mix.release
      </li>\n</ul>\n\n<p>7:18 - Zero Downtime Deployments</p>\n\n<ul>\n<li>Old school
      load balancers and rolling restarts </li>\n</ul>\n\n<p>7:46 - What are the performance
      metrics like? Comparatively.</p>\n\n<ul>\n<li>Ruby ends up with memory leaks.
      That doesn’t happen with Elixir. </li>\n<li>Memory utilization is flat and low
      no matter what. </li>\n<li>“Phenomenal response times” </li>\n</ul>\n\n<p>8:54
      - How does Eric think about clustered applications in Elixir?</p>\n\n<ul>\n<li>Going
      Multi Node (<a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a>)
      </li>\n<li><a href=\"http://erlang.org/doc/man/pg2.html\" rel=\"nofollow\">Pg2</a>
      - process groups </li>\n<li><a href=\"http://erlang.org/doc/man/mnesia.html\"
      rel=\"nofollow\">Mnesia</a> distributed database (beware!) </li>\n<li>“Just
      sending messages to pids because Erlang is great” </li>\n<li><a href=\"https://github.com/bitwalker/swarm\"
      rel=\"nofollow\">Swarm</a> / <a href=\"https://github.com/derekkraan/horde\"
      rel=\"nofollow\">Horde</a> </li>\n</ul>\n\n<p>12:40 - How do we handle background
      tasks?</p>\n\n<ul>\n<li>Started with <a href=\"https://github.com/edgurgel/verk\"
      rel=\"nofollow\">verk</a> </li>\n<li>Recently becoming more comfortable with
      spinning up <a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">GenServers</a>
      </li>\n<li>“The language itself is built to be concurrent.” </li>\n</ul>\n\n<p>15:06
      What libraries are we using in prod?</p>\n\n<ul>\n<li>First thing: You don’t
      need a whole lot because the language is so well designed. </li>\n<li><a href=\"https://phoenixframework.org/\"
      rel=\"nofollow\">Phoenix</a> - web framework </li>\n<li><a href=\"https://hexdocs.pm/ecto/Ecto.html\"
      rel=\"nofollow\">Ecto</a> - sort of an ORM </li>\n<li><a href=\"https://github.com/bitwalker/distillery\"
      rel=\"nofollow\">Distillery</a> - for releases </li>\n<li><a href=\"https://github.com/thoughtbot/bamboo\"
      rel=\"nofollow\">Bamboo</a> - for sending emails </li>\n<li><a href=\"https://github.com/c-rack/quantum-elixir\"
      rel=\"nofollow\">Quantum</a> - for task scheduling </li>\n<li><a href=\"https://github.com/bitwalker/timex\"
      rel=\"nofollow\">Timex</a> - for dates and times, and timezones </li>\n<li><a
      href=\"https://github.com/whitfin/cachex\" rel=\"nofollow\">Cachex</a> - for
      caching </li>\n</ul>\n\n<p>18:20- What third party integrations have we attempted</p>\n\n<ul>\n<li>Stripe
      </li>\n<li>Square </li>\n<li>Twilio </li>\n<li>Mindbody </li>\n</ul>\n\n<p>Always
      building our own clients.  Using <a href=\"https://github.com/edgurgel/httpoison\"
      rel=\"nofollow\">HTTPoison</a></p>\n\n<p>19:58Has Elixir ever saved the day
      in production?</p>\n\n<p>It’s saved many days by PREVENTING ISSUES. Systems
      are architected for reliability and fault-tolerance.</p>\n\n<p>21:48 - Where
      do supervision trees come from? What is OTP?</p>\n\n<ul>\n<li>OTP is an Erlang
      standard lib </li>\n<li>Includes supervision trees, genservers, ETS, and a lot
      of stuff we don’t even know about! </li>\n<li><a href=\"http://erlang.org/doc/man/gen_tcp.html\"
      rel=\"nofollow\">gen_tcp</a> </li>\n<li>Mnesia </li>\n<li><a href=\"http://erlang.org/doc/man/dets.html\"
      rel=\"nofollow\">dets</a> </li>\n</ul>\n\n<p>23:43- Tips for devs considering
      running elixir in production.</p>\n\n<ul>\n<li>Jump in and read the docs </li>\n<li>Understand
      how systems boot, distillery releases, config providers, etc. </li>\n<li>“Good
      server monitoring hygiene” </li>\n<li>“DIVE IN!” \n19:54 Outro</li>\n</ul>\n\n<p>Learn
      more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\" rel=\"nofollow\">Phoenix
      and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a
      href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" title=\"Going Multi-Node\"
      rel=\"nofollow\">Going Multi-Node</a></li><li><a href=\"http://erlang.org/doc/man/pg2.html\"
      title=\"PG2\" rel=\"nofollow\">PG2</a></li><li><a href=\"http://erlang.org/doc/man/mnesia.html\"
      title=\"mnesia\" rel=\"nofollow\">mnesia</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
      title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/derekkraan/horde\"
      title=\"Horde\" rel=\"nofollow\">Horde</a></li><li><a href=\"https://github.com/edgurgel/verk\"
      title=\"Verk\" rel=\"nofollow\">Verk</a></li><li><a href=\"https://github.com/thoughtbot/bamboo\"
      title=\"Bamboo\" rel=\"nofollow\">Bamboo</a></li><li><a href=\"https://github.com/quantum-elixir/quantum-core\"
      title=\"Quantum\" rel=\"nofollow\">Quantum</a></li><li><a href=\"https://github.com/whitfin/cachex\"
      title=\"Cachex\" rel=\"nofollow\">Cachex</a></li></ul>\n      "
  contentEncoded: "\n        <p>We talk with developers from the team here at SmartLogic
    about our current practices on deploying Elixir and Phoenix in production.</p>\n\n<p>Dan
    Ivovich - Director of Development Operations @ SmartLogic</p>\n\n<p>Learn more
    about how SmartLogic uses <a href=\"https://smartlogic.io/phoenix-and-elixir\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p>\n\n<p>00:00 - Fade In</p>\n\n<p>00:30
    - Introductions to Eric, Dan and SmartLogic</p>\n\n<p>Dan Ivovich - Director of
    Development Operations @ SmartLogic</p>\n\n<p>Eric Oestrich - Developer, Elixir
    Lead @ SmartLogic</p>\n\n<p>Justus Eapen - Full stack developer @ SmartLogic</p>\n\n<p>Introduced
    to Elixir by an old colleague. </p>\n\n<p>1:20 - What Elixir projects do you have
    in production? </p>\n\n<p>Several client projects in production. Several Mobile
    Apps with APIs powered by Phoenix and Elixir. </p>\n\n<p>Baltimore Water Taxi.
    </p>\n\n<p>A digital marketplace.</p>\n\n<p>And more!</p>\n\n<p>1:57 - Advantages
    and disadvantages to using Elixir.</p>\n\n<p>We made the switch when a colleague
    was stoked about Functional Programming and introduced us to Elixir. We were won
    over by the performance and rich feature sets, OTP, etc.</p>\n\n<p>2:43 - Where
    are we hosting our Elixir Apps?</p>\n\n<ul>\n<li>Heroku </li>\n<li>AWS </li>\n<li>Linode
    </li>\n<li>Digital Ocean </li>\n</ul>\n\n<p>6:20Deployment process, tools, scripting</p>\n\n<ul>\n<li>Ansible
    - for underlying VPS’s, servers, and more recently deployment itself. (Similar
    to Capistrano).<br></li>\n<li>Distillery<br></li>\n<li>Mix.release </li>\n</ul>\n\n<p>7:18
    - Zero Downtime Deployments</p>\n\n<ul>\n<li>Old school load balancers and rolling
    restarts </li>\n</ul>\n\n<p>7:46 - What are the performance metrics like? Comparatively.</p>\n\n<ul>\n<li>Ruby
    ends up with memory leaks. That doesn’t happen with Elixir. </li>\n<li>Memory
    utilization is flat and low no matter what. </li>\n<li>“Phenomenal response times”
    </li>\n</ul>\n\n<p>8:54 - How does Eric think about clustered applications in
    Elixir?</p>\n\n<ul>\n<li>Going Multi Node (<a href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\"
    rel=\"nofollow\">https://www.youtube.com/watch?v=lCUKQnkjajo</a>) </li>\n<li><a
    href=\"http://erlang.org/doc/man/pg2.html\" rel=\"nofollow\">Pg2</a> - process
    groups </li>\n<li><a href=\"http://erlang.org/doc/man/mnesia.html\" rel=\"nofollow\">Mnesia</a>
    distributed database (beware!) </li>\n<li>“Just sending messages to pids because
    Erlang is great” </li>\n<li><a href=\"https://github.com/bitwalker/swarm\" rel=\"nofollow\">Swarm</a>
    / <a href=\"https://github.com/derekkraan/horde\" rel=\"nofollow\">Horde</a> </li>\n</ul>\n\n<p>12:40
    - How do we handle background tasks?</p>\n\n<ul>\n<li>Started with <a href=\"https://github.com/edgurgel/verk\"
    rel=\"nofollow\">verk</a> </li>\n<li>Recently becoming more comfortable with spinning
    up <a href=\"https://hexdocs.pm/elixir/GenServer.html\" rel=\"nofollow\">GenServers</a>
    </li>\n<li>“The language itself is built to be concurrent.” </li>\n</ul>\n\n<p>15:06
    What libraries are we using in prod?</p>\n\n<ul>\n<li>First thing: You don’t need
    a whole lot because the language is so well designed. </li>\n<li><a href=\"https://phoenixframework.org/\"
    rel=\"nofollow\">Phoenix</a> - web framework </li>\n<li><a href=\"https://hexdocs.pm/ecto/Ecto.html\"
    rel=\"nofollow\">Ecto</a> - sort of an ORM </li>\n<li><a href=\"https://github.com/bitwalker/distillery\"
    rel=\"nofollow\">Distillery</a> - for releases </li>\n<li><a href=\"https://github.com/thoughtbot/bamboo\"
    rel=\"nofollow\">Bamboo</a> - for sending emails </li>\n<li><a href=\"https://github.com/c-rack/quantum-elixir\"
    rel=\"nofollow\">Quantum</a> - for task scheduling </li>\n<li><a href=\"https://github.com/bitwalker/timex\"
    rel=\"nofollow\">Timex</a> - for dates and times, and timezones </li>\n<li><a
    href=\"https://github.com/whitfin/cachex\" rel=\"nofollow\">Cachex</a> - for caching
    </li>\n</ul>\n\n<p>18:20- What third party integrations have we attempted</p>\n\n<ul>\n<li>Stripe
    </li>\n<li>Square </li>\n<li>Twilio </li>\n<li>Mindbody </li>\n</ul>\n\n<p>Always
    building our own clients.  Using <a href=\"https://github.com/edgurgel/httpoison\"
    rel=\"nofollow\">HTTPoison</a></p>\n\n<p>19:58Has Elixir ever saved the day in
    production?</p>\n\n<p>It’s saved many days by PREVENTING ISSUES. Systems are architected
    for reliability and fault-tolerance.</p>\n\n<p>21:48 - Where do supervision trees
    come from? What is OTP?</p>\n\n<ul>\n<li>OTP is an Erlang standard lib </li>\n<li>Includes
    supervision trees, genservers, ETS, and a lot of stuff we don’t even know about!
    </li>\n<li><a href=\"http://erlang.org/doc/man/gen_tcp.html\" rel=\"nofollow\">gen_tcp</a>
    </li>\n<li>Mnesia </li>\n<li><a href=\"http://erlang.org/doc/man/dets.html\" rel=\"nofollow\">dets</a>
    </li>\n</ul>\n\n<p>23:43- Tips for devs considering running elixir in production.</p>\n\n<ul>\n<li>Jump
    in and read the docs </li>\n<li>Understand how systems boot, distillery releases,
    config providers, etc. </li>\n<li>“Good server monitoring hygiene” </li>\n<li>“DIVE
    IN!” \n19:54 Outro</li>\n</ul>\n\n<p>Learn more about how SmartLogic uses <a href=\"https://smr.tl/2Hyslu8\"
    rel=\"nofollow\">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a
    href=\"https://www.youtube.com/watch?v=lCUKQnkjajo\" title=\"Going Multi-Node\"
    rel=\"nofollow\">Going Multi-Node</a></li><li><a href=\"http://erlang.org/doc/man/pg2.html\"
    title=\"PG2\" rel=\"nofollow\">PG2</a></li><li><a href=\"http://erlang.org/doc/man/mnesia.html\"
    title=\"mnesia\" rel=\"nofollow\">mnesia</a></li><li><a href=\"https://github.com/bitwalker/swarm\"
    title=\"Swarm\" rel=\"nofollow\">Swarm</a></li><li><a href=\"https://github.com/derekkraan/horde\"
    title=\"Horde\" rel=\"nofollow\">Horde</a></li><li><a href=\"https://github.com/edgurgel/verk\"
    title=\"Verk\" rel=\"nofollow\">Verk</a></li><li><a href=\"https://github.com/thoughtbot/bamboo\"
    title=\"Bamboo\" rel=\"nofollow\">Bamboo</a></li><li><a href=\"https://github.com/quantum-elixir/quantum-core\"
    title=\"Quantum\" rel=\"nofollow\">Quantum</a></li><li><a href=\"https://github.com/whitfin/cachex\"
    title=\"Cachex\" rel=\"nofollow\">Cachex</a></li></ul>\n      "
itunes:
  type: episodic
  subtitle: An Elixir podcast from SmartLogic; conversations with software developers
    from around the world on the Elixir programming language and other modern web
    technologies.
  author: SmartLogic LLC
  summary: "Elixir Wizards is an interview-style podcast for anyone interested in
    functional programming and the Elixir Programming Language. Hosted by SmartLogic
    engineers and Elixirists Owen Bickford, Dan Ivovich, and Sundi Myint, this show
    features in-depth discussions with some of the brightest minds in the industry,
    discussing training and documentation in Phoenix LiveView, the evolution of programming
    languages, Erlang VM, and more. \nIn the current season, we're branching out from
    Elixir to compare notes with thought leaders and software engineers from programming
    languages like JavaScript, Ruby on Rails, Go, Scala, Java, and more. Each episode
    will take a deep dive into a topic from Machine Learning and AI, to ECS and game
    development, to education and community.\nLearn more about how SmartLogic uses
    Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir?utm_source=podcast)
    \n"
  image: https://assets.fireside.fm/file/fireside-images-2024/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg?v=3
  explicit: 'no'
  keywords: elixir, elixirlang, phoenix, web apps, mobile apps, webdev, software development,
    JavaScript, Ruby on Rails, programming, coding, Java, C, C++
  owner:
    name: SmartLogic LLC
    email: podcast@smartlogic.io
