<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0" encoding="UTF-8">
  <channel>
    <generator>SmartLogic Podcasts</generator>
    <title>Elixir Wizards</title>
    <link>https://smartlogic.io/podcast/elixir-wizards</link>
    <pubDate>Thu, 27 Oct 2022 10:00:05 -0000</pubDate>
    <description>Elixir Wizards is an interview-format podcast, focused on engineers who use the Elixir programming language. Initially launched in early 2019, each season focuses on a specific topic or topics, with each interview focusing on the guest's experience and opinions on the topic.
Elixir Wizards is hosted by Sundi Myint, Owen Bickford, and Bilal Hankins of SmartLogic, a dev shop that’s been building custom software since 2005 and running Elixir applications in production since 2015.
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir?utm_source=podcast) 
</description>
    <language>en-us</language>
    <itunes:type>episodic</itunes:type>
    <itunes:subtitle>An Elixir podcast from SmartLogic; conversations with software developers from around the world on the Elixir language and other modern web technologies.</itunes:subtitle>
    <itunes:author>SmartLogic LLC</itunes:author>
    <itunes:summary>Elixir Wizards is an interview-format podcast, focused on engineers who use the Elixir programming language. Initially launched in early 2019, each season focuses on a specific topic or topics, with each interview focusing on the guest's experience and opinions on the topic.
Elixir Wizards is hosted by Sundi Myint, Owen Bickford, and Bilal Hankins of SmartLogic, a dev shop that’s been building custom software since 2005 and running Elixir applications in production since 2015.
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir?utm_source=podcast) 
</itunes:summary>
    <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
    <itunes:explicit>no</itunes:explicit>
    <itunes:keywords>elixir, elixirlang, phoenix, web apps, mobile apps, webdev, software development</itunes:keywords>
    <itunes:owner>
      <itunes:name>SmartLogic LLC</itunes:name>
      <itunes:email>podcast@smartlogic.io</itunes:email>
    </itunes:owner>
    <itunes:category text="Technology"/>
    <itunes:category text="Education">
      <itunes:category text="How To"/>
    </itunes:category>
    
    <item>
      <title>Season 3 Trailer</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3-trailer</link>
      <guid isPermaLink="false">ba3a7fde-7592-4074-906d-1689a9801712</guid>
      <pubDate>Tue, 19 Nov 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ba3a7fde-7592-4074-906d-1689a9801712.mp3" length="2412548" type="audio/mp3"/>
      <itunes:episodeType>trailer</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome back to Season 3! Our theme this time around is Working with Elixir. Listen for more on our theme, upcoming guests, and our new name.</itunes:subtitle>
      <itunes:duration>1:40</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>Welcome back to Season 3! Our theme this time around is Working with Elixir. Listen for more on our theme, upcoming guests, and our new name. 
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to Season 3! Our theme this time around is Working with Elixir. Listen for more on our theme, upcoming guests, and our new name.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to Season 3! Our theme this time around is Working with Elixir. Listen for more on our theme, upcoming guests, and our new name.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Season 2 Trailer</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-2-trailer</link>
      <guid isPermaLink="false">2301755d-d5af-4c53-b044-2d84b35b340f</guid>
      <pubDate>Tue, 09 Jul 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2301755d-d5af-4c53-b044-2d84b35b340f.mp3" length="2507438" type="audio/mpeg"/>
      <itunes:episodeType>trailer</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We’re excited to announce our season two topic, Elixir Internals. In this season we talk with developers behind some of the most popular Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more!</itunes:subtitle>
      <itunes:duration>1:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>We’re excited to announce our season two topic, Elixir Internals. In this season we talk with developers behind some of the most popular Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more! 
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>We’re excited to announce our season two topic, Elixir Internals. In this season we talk with developers behind some of the most popular Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more!</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We’re excited to announce our season two topic, Elixir Internals. In this season we talk with developers behind some of the most popular Elixir libraries, including Witchcraft, ElixirScript, Distillery, Ecto, and more!</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Smart Software Season 1 Trailer</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-trailer</link>
      <guid isPermaLink="false">8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72</guid>
      <pubDate>Mon, 25 Feb 2019 10:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8e2c78f1-af3a-4c6a-b1bc-413be9fb1e72.mp3" length="1009172" type="audio/mp3"/>
      <itunes:episodeType>trailer</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to the first season of Smart Software with SmartLogic. We'll be interviewing several companies about how they use Elixir in Production this season. In this preview episode, we introduce ourselves and some of the topics we’ll be covering.</itunes:subtitle>
      <itunes:duration>1:24</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>Welcome to the first season of Smart Software with SmartLogic. We'll be interviewing several companies about how they use Elixir in Production this season. In this preview episode, we introduce ourselves and some of the topics we’ll be covering.
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) 
</description>
      <itunes:keywords>elixir, phoenix, production</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the first season of Smart Software with SmartLogic. We&#39;ll be interviewing several companies about how they use Elixir in Production this season. In this preview episode, we introduce ourselves and some of the topics we’ll be covering.</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the first season of Smart Software with SmartLogic. We&#39;ll be interviewing several companies about how they use Elixir in Production this season. In this preview episode, we introduce ourselves and some of the topics we’ll be covering.</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jason Stiebs on LiveView at RokkinCat </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s9-e5-jasonstiebs-liveview</link>
      <guid isPermaLink="false">df8784d1-9e54-4a79-926d-7be4c95db35a</guid>
      <pubDate>Thu, 27 Oct 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/df8784d1-9e54-4a79-926d-7be4c95db35a.mp3" length="79242243" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This week we are welcoming Jason Stiebs to the podcast to talk about all things LiveView and how he was originally wrong about LiveView in the beginning. Jason is the founder at Rokkincat, and core contributor to Phoenix. Jason loves finding solutions to complex problems and mentoring young engineers. Tune in today to learn more about LiveView from today’s special guest, Jason Stiebs!</itunes:subtitle>
      <itunes:duration>49:58</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/df8784d1-9e54-4a79-926d-7be4c95db35a/cover.jpg" />
      <description>This week we are welcoming Jason Stiebs to the podcast to talk about all things LiveView and how he was originally wrong about LiveView in the beginning. Jason is the founder at Rokkincat, and core contributor to Phoenix. Jason loves finding solutions to complex problems and mentoring young engineers. Tune in today to learn more about LiveView from today’s special guest, Jason Stiebs!
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guest, Jason Stiebs
A summary of Jason’s talk at ElixirConf on why he initially was wrong about LiveView 
How Jason became a Phoenix core team member 
What is stopping LiveView from being 1.0 
Is there something that would make LiveView ‘complete’
How to decide to use LiveView over an SPA framework
Do you know if there are any folks out there putting together tooling for LiveView? Thinking like Chrome devtools, performance monitoring, etc. What tools can we use to compare our LiveView performance to non LV performance?
What Jason's thoughts about a time traveling feature for LiveView like what React / Redux has 
What some featuresare from other frameworks that Jason would like to see in LiveView one day
How often Jason sees mixed LV and non LV projects 
We hear about what's next in terms of features for functional components
Links Mentioned in Today’s Episode:
Jason Stiebs on Twitter — https://twitter.com/peregrine
Jason Stiebs on GitHub — https://github.com/jeregrine
Jason Stiebs on LinkedIn — https://www.linkedin.com/in/jasonstiebs/
Jason Stiebs Email Address – jason@rokkincat.com
RokkinCat — https://rokkincat.com/
SmartLogic — https://smartlogic.io/
SmartLogic Twitter — https://twitter.com/smartlogic 
</description>
      <itunes:keywords>elixir, liveview</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week we are welcoming Jason Stiebs to the podcast to talk about all things LiveView and how he was originally wrong about LiveView in the beginning. Jason is the founder at Rokkincat, and core contributor to Phoenix. Jason loves finding solutions to complex problems and mentoring young engineers. Tune in today to learn more about LiveView from today’s special guest, Jason Stiebs!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Jason Stiebs</li>
<li>A summary of Jason’s talk at ElixirConf on why he initially was wrong about LiveView </li>
<li>How Jason became a Phoenix core team member </li>
<li>What is stopping LiveView from being 1.0 </li>
<li>Is there something that would make LiveView ‘complete’</li>
<li>How to decide to use LiveView over an SPA framework</li>
<li>Do you know if there are any folks out there putting together tooling for LiveView? Thinking like Chrome devtools, performance monitoring, etc. What tools can we use to compare our LiveView performance to non LV performance?</li>
<li>What Jason&#39;s thoughts about a time traveling feature for LiveView like what React / Redux has </li>
<li>What some featuresare from other frameworks that Jason would like to see in LiveView one day</li>
<li>How often Jason sees mixed LV and non LV projects </li>
<li>We hear about what&#39;s next in terms of features for functional components</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Jason Stiebs on Twitter — <a href="https://twitter.com/peregrine" rel="nofollow">https://twitter.com/peregrine</a><br>
Jason Stiebs on GitHub — <a href="https://github.com/jeregrine" rel="nofollow">https://github.com/jeregrine</a><br>
Jason Stiebs on LinkedIn — <a href="https://www.linkedin.com/in/jasonstiebs/" rel="nofollow">https://www.linkedin.com/in/jasonstiebs/</a><br>
Jason Stiebs Email Address – <a href="mailto:jason@rokkincat.com" rel="nofollow">jason@rokkincat.com</a><br>
RokkinCat — <a href="https://rokkincat.com/" rel="nofollow">https://rokkincat.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week we are welcoming Jason Stiebs to the podcast to talk about all things LiveView and how he was originally wrong about LiveView in the beginning. Jason is the founder at Rokkincat, and core contributor to Phoenix. Jason loves finding solutions to complex problems and mentoring young engineers. Tune in today to learn more about LiveView from today’s special guest, Jason Stiebs!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Jason Stiebs</li>
<li>A summary of Jason’s talk at ElixirConf on why he initially was wrong about LiveView </li>
<li>How Jason became a Phoenix core team member </li>
<li>What is stopping LiveView from being 1.0 </li>
<li>Is there something that would make LiveView ‘complete’</li>
<li>How to decide to use LiveView over an SPA framework</li>
<li>Do you know if there are any folks out there putting together tooling for LiveView? Thinking like Chrome devtools, performance monitoring, etc. What tools can we use to compare our LiveView performance to non LV performance?</li>
<li>What Jason&#39;s thoughts about a time traveling feature for LiveView like what React / Redux has </li>
<li>What some featuresare from other frameworks that Jason would like to see in LiveView one day</li>
<li>How often Jason sees mixed LV and non LV projects </li>
<li>We hear about what&#39;s next in terms of features for functional components</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Jason Stiebs on Twitter — <a href="https://twitter.com/peregrine" rel="nofollow">https://twitter.com/peregrine</a><br>
Jason Stiebs on GitHub — <a href="https://github.com/jeregrine" rel="nofollow">https://github.com/jeregrine</a><br>
Jason Stiebs on LinkedIn — <a href="https://www.linkedin.com/in/jasonstiebs/" rel="nofollow">https://www.linkedin.com/in/jasonstiebs/</a><br>
Jason Stiebs Email Address – <a href="mailto:jason@rokkincat.com" rel="nofollow">jason@rokkincat.com</a><br>
RokkinCat — <a href="https://rokkincat.com/" rel="nofollow">https://rokkincat.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Mark &amp; David from Thinking Elixir on Ecto Queries </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s9e4-markdavid-thinkingelixir</link>
      <guid isPermaLink="false">72e9b778-4fdb-4320-a56b-c16be252cae8</guid>
      <pubDate>Thu, 20 Oct 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/72e9b778-4fdb-4320-a56b-c16be252cae8.mp3" length="45014753" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>The Thinking Elixir Podcast has taken over Elixir Wizards! Join us today for a fun and interesting episode with Mark Ericksen and David Bernheisel from the Thinking Elixir Podcast as we parse the particulars of Ecto Queries!</itunes:subtitle>
      <itunes:duration>53:35</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/72e9b778-4fdb-4320-a56b-c16be252cae8/cover.jpg" />
      <description>This week the Thinking Elixir Podcast is taking over Elixir Wizards! Mark &amp; David from Thinking Elixir are here today to parse the particulars of Ecto Queries! Mark Ericksen is an Elixir Specialist at Fly.io and host of Thinking Elixir. David Bernheisel is a Senior Software Engineer at Bitfo and host of Thinking Elixir. Tune in today to learn more about Ecto Queries from today’s special guests, Mark Ericksen and David Bernheisel! 
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guests, Mark &amp; David 
 The hosts catch up with Mark &amp; David and learn about David’s new book Ecto In Production
 Dave Lucia is mentioned once again, can we go one episode without talking about him?
 Find out how long David &amp; Mark have been working in databases
We get the breakdown of what an Ecto Query is 
There is a discussion around schema migrations vs data migrations and how to avoid common pain points 
 Learn what resources are available for learning Ecto 
We find out what the pin operator is and when it is used
What an extensive query is and how to optimize queries
We learn about fun edge cases that we’ve bumped into while working with Ecto 
The ins and outs of Ecto dump and Ecto load 
”Ecto is a whole wide world of information. You think you know a lot and then you realize you don't. Nope, I'm almost just as dumb as I was five years ago about SQL and Ecto. Nope, it evolves. It gets deep.” - Mark Ericksen
Links Mentioned in Today’s Episode:
 Mark Ericksen on Twitter — https://twitter.com/brainlid
 Mark Ericksen on LinkedIn — https://www.linkedin.com/in/mark-ericksen-66397417/
 David Bernheisel on Twitter – https://twitter.com/bernheisel
 David Bernheisel on GitHub – https://github.com/dbernheisel
 David Bernheisel on LinkedIn – https://www.linkedin.com/in/bernheisel/ 
 Thinking Elixir Podcast https://podcast.thinkingelixir.com/
 SmartLogic — https://smartlogic.io/
 SmartLogic Twitter — https://twitter.com/smartlogic
 Use The Index, Luke! https://use-the-index-luke.com/
 Postgresql Tutorial https://www.postgresqltutorial.com/
 Postgresql subqueries
https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s
https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php
Fly Blog: Safe Ecto Migrations https://fly.io/phoenix-files/safe-ecto-migrations/
Crunchy Data Developer Tutorials https://www.crunchydata.com/developers/tutorials
Crunchy Data Postgres Tips https://www.crunchydata.com/postgres-tips
Ecto in Production https://www.ectoinproduction.com/
SQL Join Illustration https://commons.wikimedia.org/wiki/File:SQLJoins.svg
SQL Join Illustration https://i.stack.imgur.com/UI25E.jpg
</description>
      <itunes:keywords>elixir, ecto, query</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week the Thinking Elixir Podcast is taking over Elixir Wizards! Mark &amp; David from Thinking Elixir are here today to parse the particulars of Ecto Queries! Mark Ericksen is an Elixir Specialist at Fly.io and host of Thinking Elixir. David Bernheisel is a Senior Software Engineer at Bitfo and host of Thinking Elixir. Tune in today to learn more about Ecto Queries from today’s special guests, Mark Ericksen and David Bernheisel! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guests, Mark &amp; David </li>
<li> The hosts catch up with Mark &amp; David and learn about David’s new book Ecto In Production</li>
<li> Dave Lucia is mentioned once again, can we go one episode without talking about him?</li>
<li> Find out how long David &amp; Mark have been working in databases</li>
<li>We get the breakdown of what an Ecto Query is </li>
<li>There is a discussion around schema migrations vs data migrations and how to avoid common pain points </li>
<li> Learn what resources are available for learning Ecto </li>
<li>We find out what the pin operator is and when it is used</li>
<li>What an extensive query is and how to optimize queries</li>
<li>We learn about fun edge cases that we’ve bumped into while working with Ecto </li>
<li>The ins and outs of Ecto dump and Ecto load </li>
</ul>

<p><em>”Ecto is a whole wide world of information. You think you know a lot and then you realize you don&#39;t. Nope, I&#39;m almost just as dumb as I was five years ago about SQL and Ecto. Nope, it evolves. It gets deep.”</em> - Mark Ericksen</p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Mark Ericksen on Twitter — <a href="https://twitter.com/brainlid" rel="nofollow">https://twitter.com/brainlid</a><br>
 Mark Ericksen on LinkedIn — <a href="https://www.linkedin.com/in/mark-ericksen-66397417/" rel="nofollow">https://www.linkedin.com/in/mark-ericksen-66397417/</a><br>
 David Bernheisel on Twitter – <a href="https://twitter.com/bernheisel" rel="nofollow">https://twitter.com/bernheisel</a><br>
 David Bernheisel on GitHub – <a href="https://github.com/dbernheisel" rel="nofollow">https://github.com/dbernheisel</a><br>
 David Bernheisel on LinkedIn – <a href="https://www.linkedin.com/in/bernheisel/" rel="nofollow">https://www.linkedin.com/in/bernheisel/</a> <br>
 Thinking Elixir Podcast <a href="https://podcast.thinkingelixir.com/" rel="nofollow">https://podcast.thinkingelixir.com/</a><br>
 SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
 SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
 Use The Index, Luke! <a href="https://use-the-index-luke.com/" rel="nofollow">https://use-the-index-luke.com/</a><br>
 Postgresql Tutorial <a href="https://www.postgresqltutorial.com/" rel="nofollow">https://www.postgresqltutorial.com/</a><br>
 Postgresql subqueries<br>
<a href="https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s" rel="nofollow">https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s</a><br>
<a href="https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php" rel="nofollow">https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php</a><br>
Fly Blog: Safe Ecto Migrations <a href="https://fly.io/phoenix-files/safe-ecto-migrations/" rel="nofollow">https://fly.io/phoenix-files/safe-ecto-migrations/</a><br>
Crunchy Data Developer Tutorials <a href="https://www.crunchydata.com/developers/tutorials" rel="nofollow">https://www.crunchydata.com/developers/tutorials</a><br>
Crunchy Data Postgres Tips <a href="https://www.crunchydata.com/postgres-tips" rel="nofollow">https://www.crunchydata.com/postgres-tips</a><br>
Ecto in Production <a href="https://www.ectoinproduction.com/" rel="nofollow">https://www.ectoinproduction.com/</a><br>
SQL Join Illustration <a href="https://commons.wikimedia.org/wiki/File:SQLJoins.svg" rel="nofollow">https://commons.wikimedia.org/wiki/File:SQLJoins.svg</a><br>
SQL Join Illustration <a href="https://i.stack.imgur.com/UI25E.jpg" rel="nofollow">https://i.stack.imgur.com/UI25E.jpg</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week the Thinking Elixir Podcast is taking over Elixir Wizards! Mark &amp; David from Thinking Elixir are here today to parse the particulars of Ecto Queries! Mark Ericksen is an Elixir Specialist at Fly.io and host of Thinking Elixir. David Bernheisel is a Senior Software Engineer at Bitfo and host of Thinking Elixir. Tune in today to learn more about Ecto Queries from today’s special guests, Mark Ericksen and David Bernheisel! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guests, Mark &amp; David </li>
<li> The hosts catch up with Mark &amp; David and learn about David’s new book Ecto In Production</li>
<li> Dave Lucia is mentioned once again, can we go one episode without talking about him?</li>
<li> Find out how long David &amp; Mark have been working in databases</li>
<li>We get the breakdown of what an Ecto Query is </li>
<li>There is a discussion around schema migrations vs data migrations and how to avoid common pain points </li>
<li> Learn what resources are available for learning Ecto </li>
<li>We find out what the pin operator is and when it is used</li>
<li>What an extensive query is and how to optimize queries</li>
<li>We learn about fun edge cases that we’ve bumped into while working with Ecto </li>
<li>The ins and outs of Ecto dump and Ecto load </li>
</ul>

<p><em>”Ecto is a whole wide world of information. You think you know a lot and then you realize you don&#39;t. Nope, I&#39;m almost just as dumb as I was five years ago about SQL and Ecto. Nope, it evolves. It gets deep.”</em> - Mark Ericksen</p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Mark Ericksen on Twitter — <a href="https://twitter.com/brainlid" rel="nofollow">https://twitter.com/brainlid</a><br>
 Mark Ericksen on LinkedIn — <a href="https://www.linkedin.com/in/mark-ericksen-66397417/" rel="nofollow">https://www.linkedin.com/in/mark-ericksen-66397417/</a><br>
 David Bernheisel on Twitter – <a href="https://twitter.com/bernheisel" rel="nofollow">https://twitter.com/bernheisel</a><br>
 David Bernheisel on GitHub – <a href="https://github.com/dbernheisel" rel="nofollow">https://github.com/dbernheisel</a><br>
 David Bernheisel on LinkedIn – <a href="https://www.linkedin.com/in/bernheisel/" rel="nofollow">https://www.linkedin.com/in/bernheisel/</a> <br>
 Thinking Elixir Podcast <a href="https://podcast.thinkingelixir.com/" rel="nofollow">https://podcast.thinkingelixir.com/</a><br>
 SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
 SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
 Use The Index, Luke! <a href="https://use-the-index-luke.com/" rel="nofollow">https://use-the-index-luke.com/</a><br>
 Postgresql Tutorial <a href="https://www.postgresqltutorial.com/" rel="nofollow">https://www.postgresqltutorial.com/</a><br>
 Postgresql subqueries<br>
<a href="https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s" rel="nofollow">https://stackoverflow.com/questions/3004887/how-to-do-a-postgresql-subquery-in-select-clause-with-join-in-from-clause-like-s</a><br>
<a href="https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php" rel="nofollow">https://www.w3resource.com/sql/subqueries/understanding-sql-subqueries.php</a><br>
Fly Blog: Safe Ecto Migrations <a href="https://fly.io/phoenix-files/safe-ecto-migrations/" rel="nofollow">https://fly.io/phoenix-files/safe-ecto-migrations/</a><br>
Crunchy Data Developer Tutorials <a href="https://www.crunchydata.com/developers/tutorials" rel="nofollow">https://www.crunchydata.com/developers/tutorials</a><br>
Crunchy Data Postgres Tips <a href="https://www.crunchydata.com/postgres-tips" rel="nofollow">https://www.crunchydata.com/postgres-tips</a><br>
Ecto in Production <a href="https://www.ectoinproduction.com/" rel="nofollow">https://www.ectoinproduction.com/</a><br>
SQL Join Illustration <a href="https://commons.wikimedia.org/wiki/File:SQLJoins.svg" rel="nofollow">https://commons.wikimedia.org/wiki/File:SQLJoins.svg</a><br>
SQL Join Illustration <a href="https://i.stack.imgur.com/UI25E.jpg" rel="nofollow">https://i.stack.imgur.com/UI25E.jpg</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Tyler Young on Geo Mapping at Felt </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s9e3-tyleryoung-felt</link>
      <guid isPermaLink="false">457bc018-a109-4457-b7bd-693ebd2ef38e</guid>
      <pubDate>Thu, 13 Oct 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/457bc018-a109-4457-b7bd-693ebd2ef38e.mp3" length="31075529" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on Elixir Wizards we are joined by Tyler Young to explore the particulars of Geo Mapping, the process of turning data into maps. Tyler is a Senior Software Developer at Felt, the world’s first collaborative mapping tool built for anyone to make a beautiful map in minutes. Tune in today to learn more about Geo Mapping from today’s special guest, Tyler Young!</itunes:subtitle>
      <itunes:duration>36:59</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/457bc018-a109-4457-b7bd-693ebd2ef38e/cover.jpg" />
      <description>Today on Elixir Wizards we are joined by Tyler Young to explore the particulars of Geo Mapping, the process of turning data into maps. Tyler is a Senior Software Developer at Felt, the world’s first collaborative mapping tool built for anyone to make a beautiful map in minutes. Tune in today to learn more about Geo Mapping from today’s special guest, Tyler Young!
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guest, Tyler Young
We discover Tyler’s background and how he started working in Elixir, as well as how he got into the map business because of his love for Elixir 
We learn about GIS and its history as a system/standard/protocol, and how someone can study GIS 
Find out how mapping is helpful in more ways than just for directions, including climate changes, vacation planning, and more
Tyler breaks down the common technologies and toolkits for programming with maps 
The specific tools that Felt is using to ingest map data and build the interactive maps 
What common problems arise when developing with maps
Tyler teaches the Elixir Wizards about his tried and true way of decision making with “The McDonald’s option” 
_
**Links Mentioned in Today’s Episode:
Tyler Young on Twitter — https://twitter.com/TylerAYoung
Tyler Young on GitHub — https://github.com/s3cur3
Tyler Young on LinkedIn — https://www.linkedin.com/in/tyler-young-dev/
Felt — https://felt.com/about
SmartLogic — https://smartlogic.io/
SmartLogic Twitter — https://twitter.com/smartlogic
</description>
      <itunes:keywords>elixir, geo mapping, tech, felt</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on Elixir Wizards we are joined by Tyler Young to explore the particulars of Geo Mapping, the process of turning data into maps. Tyler is a Senior Software Developer at Felt, the world’s first collaborative mapping tool built for anyone to make a beautiful map in minutes. Tune in today to learn more about Geo Mapping from today’s special guest, Tyler Young!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Tyler Young</li>
<li>We discover Tyler’s background and how he started working in Elixir, as well as how he got into the map business because of his love for Elixir </li>
<li>We learn about GIS and its history as a system/standard/protocol, and how someone can study GIS </li>
<li>Find out how mapping is helpful in more ways than just for directions, including climate changes, vacation planning, and more</li>
<li>Tyler breaks down the common technologies and toolkits for programming with maps </li>
<li>The specific tools that Felt is using to ingest map data and build the interactive maps </li>
<li>What common problems arise when developing with maps</li>
<li><p>Tyler teaches the Elixir Wizards about his tried and true way of decision making with “The McDonald’s option” <br>
_<br>
**Links Mentioned in Today’s Episode:</p></li>
<li><p>Tyler Young on Twitter — <a href="https://twitter.com/TylerAYoung" rel="nofollow">https://twitter.com/TylerAYoung</a></p></li>
<li><p>Tyler Young on GitHub — <a href="https://github.com/s3cur3" rel="nofollow">https://github.com/s3cur3</a></p></li>
<li><p>Tyler Young on LinkedIn — <a href="https://www.linkedin.com/in/tyler-young-dev/" rel="nofollow">https://www.linkedin.com/in/tyler-young-dev/</a></p></li>
<li><p>Felt — <a href="https://felt.com/about" rel="nofollow">https://felt.com/about</a></p></li>
<li><p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></p></li>
<li><p>SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></p></li>
</ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on Elixir Wizards we are joined by Tyler Young to explore the particulars of Geo Mapping, the process of turning data into maps. Tyler is a Senior Software Developer at Felt, the world’s first collaborative mapping tool built for anyone to make a beautiful map in minutes. Tune in today to learn more about Geo Mapping from today’s special guest, Tyler Young!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Tyler Young</li>
<li>We discover Tyler’s background and how he started working in Elixir, as well as how he got into the map business because of his love for Elixir </li>
<li>We learn about GIS and its history as a system/standard/protocol, and how someone can study GIS </li>
<li>Find out how mapping is helpful in more ways than just for directions, including climate changes, vacation planning, and more</li>
<li>Tyler breaks down the common technologies and toolkits for programming with maps </li>
<li>The specific tools that Felt is using to ingest map data and build the interactive maps </li>
<li>What common problems arise when developing with maps</li>
<li><p>Tyler teaches the Elixir Wizards about his tried and true way of decision making with “The McDonald’s option” <br>
_<br>
**Links Mentioned in Today’s Episode:</p></li>
<li><p>Tyler Young on Twitter — <a href="https://twitter.com/TylerAYoung" rel="nofollow">https://twitter.com/TylerAYoung</a></p></li>
<li><p>Tyler Young on GitHub — <a href="https://github.com/s3cur3" rel="nofollow">https://github.com/s3cur3</a></p></li>
<li><p>Tyler Young on LinkedIn — <a href="https://www.linkedin.com/in/tyler-young-dev/" rel="nofollow">https://www.linkedin.com/in/tyler-young-dev/</a></p></li>
<li><p>Felt — <a href="https://felt.com/about" rel="nofollow">https://felt.com/about</a></p></li>
<li><p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></p></li>
<li><p>SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></p></li>
</ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Kate Rezentes on GenServers at Simplebet</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s9e2-kate-rezentes-simplebet</link>
      <guid isPermaLink="false">7bcfea5b-42f1-4dc9-9384-3b37f432a636</guid>
      <pubDate>Thu, 06 Oct 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7bcfea5b-42f1-4dc9-9384-3b37f432a636.mp3" length="46206464" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Season 9 is in full swing and we are so excited to welcome Kate Rezentes today to dive into the particulars of GenServers. Kate is a Junior Software Developer at Simplebet, a B2B product development company using machine learning and real-time technology to make every moment of every sporting event a betting opportunity. Tune in today to learn more from today’s special guest, Kate Rezentes!</itunes:subtitle>
      <itunes:duration>48:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7bcfea5b-42f1-4dc9-9384-3b37f432a636/cover.jpg" />
      <description>Season 9 is in full swing and we are so excited to welcome Kate Rezentes today to dive into the particulars of GenServers. Kate is a Junior Software Developer at Simplebet, a B2B product development company using machine learning and real-time technology to make every moment of every sporting event a betting opportunity. Tune in today to learn more from today’s special guest, Kate Rezentes!
Key Points From This Episode:
 A brief breakdown of today’s topic and introduction to our special guest, Kate Rezentes 
 We learn about Kate’s background and her long history with programming
We discuss how many conferences she’s attended and why ElixirConf has been her favorite (thus far)
 Find out how Kate landed a job while attending ElixirConf
 How GenServers as a subject came to be
We get an inside look at Kate’s working experience at Simplebet and her experience as a Junior Engineer in the industry so far 
What cases in particular cause the need for a GenServer
We discuss where GenServers would be appropriate to use and why
The ins and outs of ‘handle calls’ and ‘callbacks’
The process of testing a GenServer and data storage_
**Links Mentioned in Today’s Episode:*
Kate Rezentes on Twitter — https://twitter.com/rezkate
Kate Rezentes on GitHub — https://github.com/KateRezentes
Kate Rezentes on LinkedIn — https://www.linkedin.com/in/kfrezent/
Simplebet — https://simplebet.io/
SmartLogic — https://smartlogic.io/
SmartLogic Twitter — https://twitter.com/smartlogic
</description>
      <itunes:keywords>simplebet, genservers, elixir, smartlogic</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Season 9 is in full swing and we are so excited to welcome Kate Rezentes today to dive into the particulars of GenServers. Kate is a Junior Software Developer at Simplebet, a B2B product development company using machine learning and real-time technology to make every moment of every sporting event a betting opportunity. Tune in today to learn more from today’s special guest, Kate Rezentes!</p>

<p>Key Points From This Episode:</p>

<ul>
<li> A brief breakdown of today’s topic and introduction to our special guest, Kate Rezentes </li>
<li> We learn about Kate’s background and her long history with programming</li>
<li>We discuss how many conferences she’s attended and why ElixirConf has been her favorite (thus far)</li>
<li> Find out how Kate landed a job while attending ElixirConf</li>
<li> How GenServers as a subject came to be</li>
<li>We get an inside look at Kate’s working experience at Simplebet and her experience as a Junior Engineer in the industry so far </li>
<li>What cases in particular cause the need for a GenServer</li>
<li>We discuss where GenServers would be appropriate to use and why</li>
<li>The ins and outs of ‘handle calls’ and ‘callbacks’</li>
<li>The process of testing a GenServer and data storage_</li>
</ul>

<p><em>**Links Mentioned in Today’s Episode:</em>*</p>

<ul>
<li>Kate Rezentes on Twitter — <a href="https://twitter.com/rezkate" rel="nofollow">https://twitter.com/rezkate</a></li>
<li>Kate Rezentes on GitHub — <a href="https://github.com/KateRezentes" rel="nofollow">https://github.com/KateRezentes</a></li>
<li>Kate Rezentes on LinkedIn — <a href="https://www.linkedin.com/in/kfrezent/" rel="nofollow">https://www.linkedin.com/in/kfrezent/</a></li>
<li>Simplebet — <a href="https://simplebet.io/" rel="nofollow">https://simplebet.io/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></li>
<li>SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></li>
</ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Season 9 is in full swing and we are so excited to welcome Kate Rezentes today to dive into the particulars of GenServers. Kate is a Junior Software Developer at Simplebet, a B2B product development company using machine learning and real-time technology to make every moment of every sporting event a betting opportunity. Tune in today to learn more from today’s special guest, Kate Rezentes!</p>

<p>Key Points From This Episode:</p>

<ul>
<li> A brief breakdown of today’s topic and introduction to our special guest, Kate Rezentes </li>
<li> We learn about Kate’s background and her long history with programming</li>
<li>We discuss how many conferences she’s attended and why ElixirConf has been her favorite (thus far)</li>
<li> Find out how Kate landed a job while attending ElixirConf</li>
<li> How GenServers as a subject came to be</li>
<li>We get an inside look at Kate’s working experience at Simplebet and her experience as a Junior Engineer in the industry so far </li>
<li>What cases in particular cause the need for a GenServer</li>
<li>We discuss where GenServers would be appropriate to use and why</li>
<li>The ins and outs of ‘handle calls’ and ‘callbacks’</li>
<li>The process of testing a GenServer and data storage_</li>
</ul>

<p><em>**Links Mentioned in Today’s Episode:</em>*</p>

<ul>
<li>Kate Rezentes on Twitter — <a href="https://twitter.com/rezkate" rel="nofollow">https://twitter.com/rezkate</a></li>
<li>Kate Rezentes on GitHub — <a href="https://github.com/KateRezentes" rel="nofollow">https://github.com/KateRezentes</a></li>
<li>Kate Rezentes on LinkedIn — <a href="https://www.linkedin.com/in/kfrezent/" rel="nofollow">https://www.linkedin.com/in/kfrezent/</a></li>
<li>Simplebet — <a href="https://simplebet.io/" rel="nofollow">https://simplebet.io/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></li>
<li>SmartLogic Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a></li>
</ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dave Lucia on Observability at Bitfo</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s9e1-dave-lucia-bitfo</link>
      <guid isPermaLink="false">ccdb0e5d-3009-44db-9573-d5a5a12696eb</guid>
      <pubDate>Thu, 29 Sep 2022 03:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ccdb0e5d-3009-44db-9573-d5a5a12696eb.mp3" length="74289426" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle></itunes:subtitle>
      <itunes:duration>51:35</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/ccdb0e5d-3009-44db-9573-d5a5a12696eb/cover.jpg" />
      <description>Welcome to our first episode of Season 9 Elixir Wizards, Parsing the Particulars. A show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency media company building educational content for people who are interested in cryptocurrency. Dave is active in the Elixir community and in the past has spoken at Code BEAM SF, ElixirConf, RabbitMQ Summit, and has written several blog posts which can be found at davelucia.com. In today’s episode we find out more about Dave’s professional background and dive into the particulars of observability. Tune in today to learn more from today’s special guest, Dave Lucia!
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guest, Dave Lucia
We find out about Bitfo and what services they offer
We discuss Dave’s blog post on observability
Find out how Dave wrote the blog post because he saw a gap at his company
How Sundi proofread Dave’s blog post and realized her lack of knowledge on observability
The most common mistake teams or engineers make when it comes to observability
We peel back the layers on what telemetry is
What the difference between telemetry and OpenTelemetry is
How to choose which tool is right when it comes to better observability
*The breakdown of the uses for observability telemetry
*When and why would we use OpenTelemtry vs basic observability
*What languages Dave started in before he was working in Elixir
*How Elixir lends better for observability
*Where to start if you want to implement basic observability for someone who has no experience with it
*Dave answers the question, “can you go too far with observability?”
*We discuss Livebook and what exciting things it will bring for the future
*Most importantly, Dave explains why pineapples are important to him
**Links Mentioned in Today’s Episode:
Dave’s blog post on Observability: https://davelucia.com/blog/observing-elixir-with-lightstep
Dave Lucia on Twitter — https://twitter.com/davydog187
Dave Lucia on GitHub — https://github.com/davydog187
Dave Lucia on LinkedIn — https://www.linkedin.com/in/david-lucia-a395441b/
Bitfo — https://www.bitfo.com/
SmartLogic — https://smartlogic.io/
</description>
      <itunes:keywords>bitfo, crypto, elixir, observability</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to our first episode of Season 9 Elixir Wizards, Parsing the Particulars. A show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency media company building educational content for people who are interested in cryptocurrency. Dave is active in the Elixir community and in the past has spoken at Code BEAM SF, ElixirConf, RabbitMQ Summit, and has written several blog posts which can be found at davelucia.com. In today’s episode we find out more about Dave’s professional background and dive into the particulars of observability. Tune in today to learn more from today’s special guest, Dave Lucia!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Dave Lucia</li>
<li>We find out about Bitfo and what services they offer</li>
<li>We discuss Dave’s blog post on observability</li>
<li>Find out how Dave wrote the blog post because he saw a gap at his company</li>
<li>How Sundi proofread Dave’s blog post and realized her lack of knowledge on observability</li>
<li>The most common mistake teams or engineers make when it comes to observability</li>
<li>We peel back the layers on what telemetry is</li>
<li>What the difference between telemetry and OpenTelemetry is</li>
<li>How to choose which tool is right when it comes to better observability
*The breakdown of the uses for observability telemetry
*When and why would we use OpenTelemtry vs basic observability
*What languages Dave started in before he was working in Elixir
*How Elixir lends better for observability
*Where to start if you want to implement basic observability for someone who has no experience with it
*Dave answers the question, “can you go too far with observability?”
*We discuss Livebook and what exciting things it will bring for the future
*Most importantly, Dave explains why pineapples are important to him</li>
</ul>

<p>**Links Mentioned in Today’s Episode:</p>

<ul>
<li>Dave’s blog post on Observability: <a href="https://davelucia.com/blog/observing-elixir-with-lightstep" rel="nofollow">https://davelucia.com/blog/observing-elixir-with-lightstep</a></li>
<li>Dave Lucia on Twitter — <a href="https://twitter.com/davydog187" rel="nofollow">https://twitter.com/davydog187</a></li>
<li>Dave Lucia on GitHub — <a href="https://github.com/davydog187" rel="nofollow">https://github.com/davydog187</a></li>
<li>Dave Lucia on LinkedIn — <a href="https://www.linkedin.com/in/david-lucia-a395441b/" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b/</a></li>
<li>Bitfo — <a href="https://www.bitfo.com/" rel="nofollow">https://www.bitfo.com/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></li>
</ul><p>Links:</p><ul><li><a href="https://open.spotify.com/episode/3RmFXCjuVIsT1DqzqSZgAv?si=1c5d7a3171164223" title="Spotify" rel="nofollow">Spotify</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to our first episode of Season 9 Elixir Wizards, Parsing the Particulars. A show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. Today, we are joined by Dave Lucia, Chief Technology Officer at Bitfo, a cryptocurrency media company building educational content for people who are interested in cryptocurrency. Dave is active in the Elixir community and in the past has spoken at Code BEAM SF, ElixirConf, RabbitMQ Summit, and has written several blog posts which can be found at davelucia.com. In today’s episode we find out more about Dave’s professional background and dive into the particulars of observability. Tune in today to learn more from today’s special guest, Dave Lucia!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Dave Lucia</li>
<li>We find out about Bitfo and what services they offer</li>
<li>We discuss Dave’s blog post on observability</li>
<li>Find out how Dave wrote the blog post because he saw a gap at his company</li>
<li>How Sundi proofread Dave’s blog post and realized her lack of knowledge on observability</li>
<li>The most common mistake teams or engineers make when it comes to observability</li>
<li>We peel back the layers on what telemetry is</li>
<li>What the difference between telemetry and OpenTelemetry is</li>
<li>How to choose which tool is right when it comes to better observability
*The breakdown of the uses for observability telemetry
*When and why would we use OpenTelemtry vs basic observability
*What languages Dave started in before he was working in Elixir
*How Elixir lends better for observability
*Where to start if you want to implement basic observability for someone who has no experience with it
*Dave answers the question, “can you go too far with observability?”
*We discuss Livebook and what exciting things it will bring for the future
*Most importantly, Dave explains why pineapples are important to him</li>
</ul>

<p>**Links Mentioned in Today’s Episode:</p>

<ul>
<li>Dave’s blog post on Observability: <a href="https://davelucia.com/blog/observing-elixir-with-lightstep" rel="nofollow">https://davelucia.com/blog/observing-elixir-with-lightstep</a></li>
<li>Dave Lucia on Twitter — <a href="https://twitter.com/davydog187" rel="nofollow">https://twitter.com/davydog187</a></li>
<li>Dave Lucia on GitHub — <a href="https://github.com/davydog187" rel="nofollow">https://github.com/davydog187</a></li>
<li>Dave Lucia on LinkedIn — <a href="https://www.linkedin.com/in/david-lucia-a395441b/" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b/</a></li>
<li>Bitfo — <a href="https://www.bitfo.com/" rel="nofollow">https://www.bitfo.com/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a></li>
</ul><p>Links:</p><ul><li><a href="https://open.spotify.com/episode/3RmFXCjuVIsT1DqzqSZgAv?si=1c5d7a3171164223" title="Spotify" rel="nofollow">Spotify</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>We're baaaack! Season 9 Teaser</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/teasers9</link>
      <guid isPermaLink="false">e16cbd56-185c-4abf-a193-52a629580bc7</guid>
      <pubDate>Thu, 22 Sep 2022 00:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e16cbd56-185c-4abf-a193-52a629580bc7.mp3" length="2694692" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>9</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Elixir Wizards is back and better than ever! Get pumped for this season with your hosts Sundi, Owen and introducing Bilal! </itunes:subtitle>
      <itunes:duration>1:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e16cbd56-185c-4abf-a193-52a629580bc7/cover.jpg" />
      <description>Hey everyone, Season 9 of Elixir Wizards is back! This season's theme is Parsing the Particulars, where we dive into particular subjects with our guests. Your returning hosts this season are Sundi, Owen and Dan! And we are excited to announce that we have a new host joining the show - Bilal Hankins! Bilal is a Software Developer at SmartLogic and is super excited to join us this season. 
Some of this season's guests include Dave Lucia, CTO at Bitfo, Tyler Young, Senior Software Developer at Felt, and Kate Rezentes, Junior Developer at SimpleBet. Can't wait to see you there!
SmartLogic — https://smartlogic.io/ 
SmartLogic on Twitter — https://twitter.com/smartlogic
SmartLogic on LinkedIn — https://www.linkedin.com/company/smartlogic-io/
SmartLogic on Facebook — https://www.facebook.com/smartlogic/
Bilal Hankins on LinkedIn — https://www.linkedin.com/in/hankins-bilal/
Sundi Myint on LinkedIn — https://www.linkedin.com/in/sundimyint/
Owen Bickford on LinkedIn — https://www.linkedin.com/in/owen-bickford-8b6b1523a/
</description>
      <itunes:keywords>elixir, tech, code </itunes:keywords>
      <content:encoded><![CDATA[
        <p>Hey everyone, Season 9 of Elixir Wizards is back! This season&#39;s theme is Parsing the Particulars, where we dive into particular subjects with our guests. Your returning hosts this season are Sundi, Owen and Dan! And we are excited to announce that we have a new host joining the show - Bilal Hankins! Bilal is a Software Developer at SmartLogic and is super excited to join us this season. </p>

<p>Some of this season&#39;s guests include Dave Lucia, CTO at Bitfo, Tyler Young, Senior Software Developer at Felt, and Kate Rezentes, Junior Developer at SimpleBet. Can&#39;t wait to see you there!</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Bilal Hankins on LinkedIn — <a href="https://www.linkedin.com/in/hankins-bilal/" rel="nofollow">https://www.linkedin.com/in/hankins-bilal/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a><br>
Owen Bickford on LinkedIn — <a href="https://www.linkedin.com/in/owen-bickford-8b6b1523a/" rel="nofollow">https://www.linkedin.com/in/owen-bickford-8b6b1523a/</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Hey everyone, Season 9 of Elixir Wizards is back! This season&#39;s theme is Parsing the Particulars, where we dive into particular subjects with our guests. Your returning hosts this season are Sundi, Owen and Dan! And we are excited to announce that we have a new host joining the show - Bilal Hankins! Bilal is a Software Developer at SmartLogic and is super excited to join us this season. </p>

<p>Some of this season&#39;s guests include Dave Lucia, CTO at Bitfo, Tyler Young, Senior Software Developer at Felt, and Kate Rezentes, Junior Developer at SimpleBet. Can&#39;t wait to see you there!</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Bilal Hankins on LinkedIn — <a href="https://www.linkedin.com/in/hankins-bilal/" rel="nofollow">https://www.linkedin.com/in/hankins-bilal/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a><br>
Owen Bickford on LinkedIn — <a href="https://www.linkedin.com/in/owen-bickford-8b6b1523a/" rel="nofollow">https://www.linkedin.com/in/owen-bickford-8b6b1523a/</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Looking back on Season 8 with Sundi, Owen &amp; Dan</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e12-finale</link>
      <guid isPermaLink="false">2cd157b4-8fcd-4025-9d56-76a10fb61903</guid>
      <pubDate>Wed, 29 Jun 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2cd157b4-8fcd-4025-9d56-76a10fb61903.mp3" length="33913780" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle></itunes:subtitle>
      <itunes:duration>38:23</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2cd157b4-8fcd-4025-9d56-76a10fb61903/cover.jpg" />
      <description>It’s the season finale show! Can you believe it? Join us this week as Sundi, Owen, and Dan take a look back at this season of Elixir Wizards! You’ll hear their discussion about favorite moments over the season and learn about this season’s theme and its origin, and what they learned throughout the season. Enjoy and we hope to see you back for Season 9! 
Key Points From This Episode:
Reflection on the guests experiences with all different types of language
How the team landed on the theme of Elixir in a Polyglot Environment
Having expectation of guests vs how the conversation turned out
The discovery that environment influences the strength of the code that is being written
We dig deeper into the flexibility of all of these companies
How the hosts enjoyed the dream language combination answers from guests
We hear about the teams experience with their first in-person recording 
Hearing about guests personal experiences and projects vs just their at-work experience
We find out what birds do when they’re excited in a tree
Flutter as a solution for building mobile applications 
The hosts likes, dislikes, experience with Flutter and the difference it brings to the table
We reflect on a guest applying gamification
The hosts discuss the guests range of experience, from a year to decades in the field, and how many different perspectives were shown with different backgrounds
A recurring theme of the guests: structuring teams to fit the needs of the company - recurring theme
Hearing about products and projects guests are working on
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
SmartLogic on Twitter — https://twitter.com/smartlogic
SmartLogic on LinkedIn — https://www.linkedin.com/company/smartlogic-io/
SmartLogic on Facebook — https://www.facebook.com/smartlogic/
Dan Ivovich on LinkedIn — https://www.linkedin.com/in/divovich/
Sundi Myint on LinkedIn — https://www.linkedin.com/in/sundimyint/
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>It’s the season finale show! Can you believe it? Join us this week as Sundi, Owen, and Dan take a look back at this season of Elixir Wizards! You’ll hear their discussion about favorite moments over the season and learn about this season’s theme and its origin, and what they learned throughout the season. Enjoy and we hope to see you back for Season 9! </p>

<p>Key Points From This Episode:</p>

<p>Reflection on the guests experiences with all different types of language<br>
How the team landed on the theme of Elixir in a Polyglot Environment<br>
Having expectation of guests vs how the conversation turned out<br>
The discovery that environment influences the strength of the code that is being written<br>
We dig deeper into the flexibility of all of these companies<br>
How the hosts enjoyed the dream language combination answers from guests<br>
We hear about the teams experience with their first in-person recording <br>
Hearing about guests personal experiences and projects vs just their at-work experience<br>
We find out what birds do when they’re excited in a tree<br>
Flutter as a solution for building mobile applications <br>
The hosts likes, dislikes, experience with Flutter and the difference it brings to the table<br>
We reflect on a guest applying gamification<br>
The hosts discuss the guests range of experience, from a year to decades in the field, and how many different perspectives were shown with different backgrounds<br>
A recurring theme of the guests: structuring teams to fit the needs of the company - recurring theme<br>
Hearing about products and projects guests are working on</p>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Dan Ivovich on LinkedIn — <a href="https://www.linkedin.com/in/divovich/" rel="nofollow">https://www.linkedin.com/in/divovich/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>It’s the season finale show! Can you believe it? Join us this week as Sundi, Owen, and Dan take a look back at this season of Elixir Wizards! You’ll hear their discussion about favorite moments over the season and learn about this season’s theme and its origin, and what they learned throughout the season. Enjoy and we hope to see you back for Season 9! </p>

<p>Key Points From This Episode:</p>

<p>Reflection on the guests experiences with all different types of language<br>
How the team landed on the theme of Elixir in a Polyglot Environment<br>
Having expectation of guests vs how the conversation turned out<br>
The discovery that environment influences the strength of the code that is being written<br>
We dig deeper into the flexibility of all of these companies<br>
How the hosts enjoyed the dream language combination answers from guests<br>
We hear about the teams experience with their first in-person recording <br>
Hearing about guests personal experiences and projects vs just their at-work experience<br>
We find out what birds do when they’re excited in a tree<br>
Flutter as a solution for building mobile applications <br>
The hosts likes, dislikes, experience with Flutter and the difference it brings to the table<br>
We reflect on a guest applying gamification<br>
The hosts discuss the guests range of experience, from a year to decades in the field, and how many different perspectives were shown with different backgrounds<br>
A recurring theme of the guests: structuring teams to fit the needs of the company - recurring theme<br>
Hearing about products and projects guests are working on</p>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Dan Ivovich on LinkedIn — <a href="https://www.linkedin.com/in/divovich/" rel="nofollow">https://www.linkedin.com/in/divovich/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Nathan Retta on Engineering in Android at DoorDash</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e11-retta</link>
      <guid isPermaLink="false">3d022fd3-b8f1-41da-97ac-8e9b5784bfa3</guid>
      <pubDate>Thu, 23 Jun 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3d022fd3-b8f1-41da-97ac-8e9b5784bfa3.mp3" length="70044176" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle></itunes:subtitle>
      <itunes:duration>29:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3d022fd3-b8f1-41da-97ac-8e9b5784bfa3/cover.jpg" />
      <description>This week on Elixir Wizards we’re joined by Nathan Retta, Senior Software Engineer from Android at DoorDash. We learn about Nathan’s background; his experience having a degree in Chemical Engineering and working in Oil and Gas for 6 years. Nathan then wrote an Android app in 2016 and soon after became a mobile developer -- the rest is history. He is currently based in Denver, Colorado, and our host Owen has met him prior through the Denver Elixir virtual meet up. 
Join us today for this conversation between Owen, Dan and Nathan as we learn about Nathan’s experience leading up to his current position at Android for DoorDash and how he is using Elixir in his side projects. 
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week on Elixir Wizards we’re joined by Nathan Retta, Senior Software Engineer from Android at DoorDash. We learn about Nathan’s background; his experience having a degree in Chemical Engineering and working in Oil and Gas for 6 years. Nathan then wrote an Android app in 2016 and soon after became a mobile developer -- the rest is history. He is currently based in Denver, Colorado, and our host Owen has met him prior through the Denver Elixir virtual meet up. </p>

<p>Join us today for this conversation between Owen, Dan and Nathan as we learn about Nathan’s experience leading up to his current position at Android for DoorDash and how he is using Elixir in his side projects. </p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week on Elixir Wizards we’re joined by Nathan Retta, Senior Software Engineer from Android at DoorDash. We learn about Nathan’s background; his experience having a degree in Chemical Engineering and working in Oil and Gas for 6 years. Nathan then wrote an Android app in 2016 and soon after became a mobile developer -- the rest is history. He is currently based in Denver, Colorado, and our host Owen has met him prior through the Denver Elixir virtual meet up. </p>

<p>Join us today for this conversation between Owen, Dan and Nathan as we learn about Nathan’s experience leading up to his current position at Android for DoorDash and how he is using Elixir in his side projects. </p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Cara Mitchell on Internal In-house eCommerce</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e10-mitchell</link>
      <guid isPermaLink="false">acc26d2b-07e6-4dad-8ef5-e78780d17650</guid>
      <pubDate>Thu, 16 Jun 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/acc26d2b-07e6-4dad-8ef5-e78780d17650.mp3" length="42143445" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle></itunes:subtitle>
      <itunes:duration>44:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/acc26d2b-07e6-4dad-8ef5-e78780d17650/cover.jpg" />
      <description>Welcome to this week’s episode of Elixir Wizards, with our special guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about her career journey that led to her living in the lower East Side of New York City. Cara has been working in the software engineering field for over 20 years and currently works at PepsiCo on their in-house eCommerce platform built with Elixir. Over the years, she's worked on systems that range from embedded firmware to large distributed systems running on thousands of machines. She enjoys working in a number of programming languages and refuses to pick a favorite. Today we learn about Cara’s unique experience as a college dropout turned self-made software engineer and how PepsiCo is working in Elixir on a global scale with an inside look at the goings on at PepsiCo. Tune in today to learn more from today’s special guest, Cara Mitchell!  
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to this week’s episode of Elixir Wizards, with our special guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about her career journey that led to her living in the lower East Side of New York City. Cara has been working in the software engineering field for over 20 years and currently works at PepsiCo on their in-house eCommerce platform built with Elixir. Over the years, she&#39;s worked on systems that range from embedded firmware to large distributed systems running on thousands of machines. She enjoys working in a number of programming languages and refuses to pick a favorite. Today we learn about Cara’s unique experience as a college dropout turned self-made software engineer and how PepsiCo is working in Elixir on a global scale with an inside look at the goings on at PepsiCo. Tune in today to learn more from today’s special guest, Cara Mitchell! </p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to this week’s episode of Elixir Wizards, with our special guest, Cara Mitchell of Pepsi Co. Today we speak with Cara about her career journey that led to her living in the lower East Side of New York City. Cara has been working in the software engineering field for over 20 years and currently works at PepsiCo on their in-house eCommerce platform built with Elixir. Over the years, she&#39;s worked on systems that range from embedded firmware to large distributed systems running on thousands of machines. She enjoys working in a number of programming languages and refuses to pick a favorite. Today we learn about Cara’s unique experience as a college dropout turned self-made software engineer and how PepsiCo is working in Elixir on a global scale with an inside look at the goings on at PepsiCo. Tune in today to learn more from today’s special guest, Cara Mitchell! </p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Catalina Astengo on The Many Languages of Nav</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e9-astengo</link>
      <guid isPermaLink="false">9114fce2-a423-4c1d-9ca6-c5ff2098dd34</guid>
      <pubDate>Thu, 09 Jun 2022 07:30:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9114fce2-a423-4c1d-9ca6-c5ff2098dd34.mp3" length="40534461" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle></itunes:subtitle>
      <itunes:duration>42:48</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9114fce2-a423-4c1d-9ca6-c5ff2098dd34/cover.jpg" />
      <description>Joining us today on Elixir Wizards is Catalina Astengo, Staff Software Engineer at Nav Inc. We chat with Catalina about how she went from working as a process engineer in a mine to a software engineer in beautiful Salt Lake City. 
In today’s show we find out more about Catalina’s professional background, how and why she started taking Ruby courses while working at a mine in southern Utah, how she fell in love with Salt Lake City and what it looked like transitioning to a new profession. We learn about the ins &amp; outs of Nav and their team roles, as well as how they keep up with all of the languages that they are using including Elixir, Ruby, Go and JS. Tune in today to learn more from today’s special guest, Catalina Astengo!
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guest, Catalina Astengo.
What it was like working in a small town in a mine in southern Utah 
What a process engineer is and what the job title entails 
What prompted the switch from process engineering to software engineering
What Nav does as a company
Catalina gives us a rundown of her professional career.
Is this the most Polyglot stack we have encountered this season!?
The ins &amp; outs at Nav and their teams roles 
How Nav uses Elixir on a daily basis
How Nav keeps up to date on all of the languages they are using
Concerns about using multiple languages on the backend
Context switching between languages
How Nav decided to use Golang and why she prefers Elixir
Where Nav is based and where they are hiring 
How Catalina and her team made a home movie production of Beetlejuice
We review Elixir Conf 2020 and takeaways that Catalina had from the conference
How Nav uses GRPC
RP vs GRPC - what’s the difference?
Protobuf for validation schemes across GPS 
Ways to validate event payloads by using the Graph QL
We discuss our experience with management vs. coding 
Owens penguin discovery about Catalina on the Nav website 
Links Mentioned in Today’s Episode:
Catalina Astengo on Twitter — https://twitter.com/catalinaastengo
Catalina Astengo on GitHub — https://github.com/castengo 
Catalina Astengo on LinkedIn — https://www.linkedin.com/in/catalinaastengo/
Blog Post on Graph QL Schema Validation – https://www.infoq.com/news/2022/05/graphql-schema-validation/
Nav Careers — https://www.nav.com/ 
SmartLogic — https://smartlogic.io/ 
SmartLogic on Twitter — https://twitter.com/smartlogic
SmartLogic on LinkedIn — https://www.linkedin.com/company/smartlogic-io/
SmartLogic on Facebook — https://www.facebook.com/smartlogic/
Sundi Myint on LinkedIn — https://www.linkedin.com/in/sundimyint/
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Joining us today on Elixir Wizards is Catalina Astengo, Staff Software Engineer at Nav Inc. We chat with Catalina about how she went from working as a process engineer in a mine to a software engineer in beautiful Salt Lake City. </p>

<p>In today’s show we find out more about Catalina’s professional background, how and why she started taking Ruby courses while working at a mine in southern Utah, how she fell in love with Salt Lake City and what it looked like transitioning to a new profession. We learn about the ins &amp; outs of Nav and their team roles, as well as how they keep up with all of the languages that they are using including Elixir, Ruby, Go and JS. Tune in today to learn more from today’s special guest, Catalina Astengo!</p>

<p>Key Points From This Episode:</p>

<p>A brief breakdown of today’s topic and introduction to our special guest, Catalina Astengo.<br>
What it was like working in a small town in a mine in southern Utah <br>
What a process engineer is and what the job title entails <br>
What prompted the switch from process engineering to software engineering<br>
What Nav does as a company<br>
Catalina gives us a rundown of her professional career.<br>
Is this the most Polyglot stack we have encountered this season!?<br>
The ins &amp; outs at Nav and their teams roles <br>
How Nav uses Elixir on a daily basis<br>
How Nav keeps up to date on all of the languages they are using<br>
Concerns about using multiple languages on the backend<br>
Context switching between languages<br>
How Nav decided to use Golang and why she prefers Elixir<br>
Where Nav is based and where they are hiring <br>
How Catalina and her team made a home movie production of Beetlejuice<br>
We review Elixir Conf 2020 and takeaways that Catalina had from the conference<br>
How Nav uses GRPC<br>
RP vs GRPC - what’s the difference?<br>
Protobuf for validation schemes across GPS <br>
Ways to validate event payloads by using the Graph QL<br>
We discuss our experience with management vs. coding <br>
Owens penguin discovery about Catalina on the Nav website </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Catalina Astengo on Twitter — <a href="https://twitter.com/catalinaastengo" rel="nofollow">https://twitter.com/catalinaastengo</a><br>
Catalina Astengo on GitHub — <a href="https://github.com/castengo" rel="nofollow">https://github.com/castengo</a> <br>
Catalina Astengo on LinkedIn — <a href="https://www.linkedin.com/in/catalinaastengo/" rel="nofollow">https://www.linkedin.com/in/catalinaastengo/</a><br>
Blog Post on Graph QL Schema Validation – <a href="https://www.infoq.com/news/2022/05/graphql-schema-validation/" rel="nofollow">https://www.infoq.com/news/2022/05/graphql-schema-validation/</a><br>
Nav Careers — <a href="https://www.nav.com/" rel="nofollow">https://www.nav.com/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Joining us today on Elixir Wizards is Catalina Astengo, Staff Software Engineer at Nav Inc. We chat with Catalina about how she went from working as a process engineer in a mine to a software engineer in beautiful Salt Lake City. </p>

<p>In today’s show we find out more about Catalina’s professional background, how and why she started taking Ruby courses while working at a mine in southern Utah, how she fell in love with Salt Lake City and what it looked like transitioning to a new profession. We learn about the ins &amp; outs of Nav and their team roles, as well as how they keep up with all of the languages that they are using including Elixir, Ruby, Go and JS. Tune in today to learn more from today’s special guest, Catalina Astengo!</p>

<p>Key Points From This Episode:</p>

<p>A brief breakdown of today’s topic and introduction to our special guest, Catalina Astengo.<br>
What it was like working in a small town in a mine in southern Utah <br>
What a process engineer is and what the job title entails <br>
What prompted the switch from process engineering to software engineering<br>
What Nav does as a company<br>
Catalina gives us a rundown of her professional career.<br>
Is this the most Polyglot stack we have encountered this season!?<br>
The ins &amp; outs at Nav and their teams roles <br>
How Nav uses Elixir on a daily basis<br>
How Nav keeps up to date on all of the languages they are using<br>
Concerns about using multiple languages on the backend<br>
Context switching between languages<br>
How Nav decided to use Golang and why she prefers Elixir<br>
Where Nav is based and where they are hiring <br>
How Catalina and her team made a home movie production of Beetlejuice<br>
We review Elixir Conf 2020 and takeaways that Catalina had from the conference<br>
How Nav uses GRPC<br>
RP vs GRPC - what’s the difference?<br>
Protobuf for validation schemes across GPS <br>
Ways to validate event payloads by using the Graph QL<br>
We discuss our experience with management vs. coding <br>
Owens penguin discovery about Catalina on the Nav website </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Catalina Astengo on Twitter — <a href="https://twitter.com/catalinaastengo" rel="nofollow">https://twitter.com/catalinaastengo</a><br>
Catalina Astengo on GitHub — <a href="https://github.com/castengo" rel="nofollow">https://github.com/castengo</a> <br>
Catalina Astengo on LinkedIn — <a href="https://www.linkedin.com/in/catalinaastengo/" rel="nofollow">https://www.linkedin.com/in/catalinaastengo/</a><br>
Blog Post on Graph QL Schema Validation – <a href="https://www.infoq.com/news/2022/05/graphql-schema-validation/" rel="nofollow">https://www.infoq.com/news/2022/05/graphql-schema-validation/</a><br>
Nav Careers — <a href="https://www.nav.com/" rel="nofollow">https://www.nav.com/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic on Twitter — <a href="https://twitter.com/smartlogic" rel="nofollow">https://twitter.com/smartlogic</a><br>
SmartLogic on LinkedIn — <a href="https://www.linkedin.com/company/smartlogic-io/" rel="nofollow">https://www.linkedin.com/company/smartlogic-io/</a><br>
SmartLogic on Facebook — <a href="https://www.facebook.com/smartlogic/" rel="nofollow">https://www.facebook.com/smartlogic/</a><br>
Sundi Myint on LinkedIn — <a href="https://www.linkedin.com/in/sundimyint/" rel="nofollow">https://www.linkedin.com/in/sundimyint/</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Meks McClure on Communication, Diversity, and Ergonomics</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e8-mcclure</link>
      <guid isPermaLink="false">7a1f4173-df13-4237-9d32-e862b6512a16</guid>
      <pubDate>Thu, 02 Jun 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7a1f4173-df13-4237-9d32-e862b6512a16.mp3" length="43871828" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today’s episode, we speak with Meks McClure, a Full Stack Software Engineer with an unconventional background in Biology and Philosophy. Meks found their passion for programming after building a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing people use the website and how it helped the community inspired Meks to pursue a career in programming.</itunes:subtitle>
      <itunes:duration>45:35</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7a1f4173-df13-4237-9d32-e862b6512a16/cover.jpg" />
      <description>Welcome to another episode of Elixir Wizards, a show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. In today’s episode, we speak with Meks McClure, a Full Stack Software Engineer with an unconventional background in Biology and Philosophy. Meks found their passion for programming after building a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing people use the website and how it helped the community inspired Meks to pursue a career in programming. They are currently based at NewAperio, a software development company, as a Junior Developer. In today’s show we find out more about Meks’s professional background, NewAperio and the services they offer, more about their unconventional training background, challenges transitioning to a new career path, the importance of effective communication in the workplace, the significance of Pride Month, Meks’s very cool desk setup, and much more! Tune in today to learn more from today’s special guest, Meks McClure!
Key Points From This Episode:
A brief breakdown of today’s topic and introduction to our special guest, Meks McClure.
We find out about NewAperio and what services they offer.
How long Meks has been based at NewAperio.
Find out what the NewAperio tradition is for people celebrating their work anniversary.
A light-hearted discussion about singing Happy Birthday to colleagues.
Meks gives us a rundown of their professional career.
We find out more about Meks’s non-traditional programming background.
How long they have been using Elixir for and how they initially got started in it.
The lessons they learned from their Flatiron and Elixir development experience.
What was most difficult transitioning from working Ruby to Elixir.
Keeping a balance between learning and meeting productivity targets.
The moment when Meks felt like they were making good progress transitioning.
Some advice they have for people learning Elixir.
Other projects that Meks is currently working on and programming languages used.
How boot camp is different from real-world situations, in terms of programming.
We find out about Meks’s current Star Wars obsession.
The importance of finding enjoyment outside of work.
Meks shares their personal journey to becoming the person they are today.
A conversation about the importance of Pride Month and keeping an open mind.
A highlight of some communication challenges that come with remote working.
Why empathetic and effective communication is essential in the workplace.
We reflect on some recent networking opportunities and conferences. 
The approach at NewAperio to networking and conferences.
Details about Meks’ desk setup and why it is called the ‘Moon Lander’.
More about their desk setup: keycap preferences.
How learning Elixir changed the way Meks thinks about programming in general.
Meks explains their approach to writing code.
What their ultimate combination of programming languages are.
What opportunities or weaknesses that a polyglot environment can introduce.
*Links Mentioned in Today’s Episode:
*
* Meks McClure on Twitter — https://twitter.com/mmcclure0100
* Meks McClure on GitHub — https://github.com/MMcClure11
* Meks McClure on LinkedIn — https://www.linkedin.com/in/meksmcclure/
* NewAperio — https://newaperio.com/
* SmartLogic — https://smartlogic.io/ 
* Sundi Myint on Twitter — https://twitter.com/sundikhin
* Owen Bickford on Twitter — https://twitter.com/owenbickford/
* SmartLogic — https://smartlogic.io
* Moon Lander — https://www.zsa.io/moonlander/
* Difficult Conversations — https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/
* Kailh Speed Silver (Linear) Mechanical Switch Kit — https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z
 Special Guest: Meks McClure.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to another episode of Elixir Wizards, a show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. In today’s episode, we speak with Meks McClure, a Full Stack Software Engineer with an unconventional background in Biology and Philosophy. Meks found their passion for programming after building a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing people use the website and how it helped the community inspired Meks to pursue a career in programming. They are currently based at NewAperio, a software development company, as a Junior Developer. In today’s show we find out more about Meks’s professional background, NewAperio and the services they offer, more about their unconventional training background, challenges transitioning to a new career path, the importance of effective communication in the workplace, the significance of Pride Month, Meks’s very cool desk setup, and much more! Tune in today to learn more from today’s special guest, Meks McClure!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Meks McClure.</li>
<li>We find out about NewAperio and what services they offer.</li>
<li>How long Meks has been based at NewAperio.</li>
<li>Find out what the NewAperio tradition is for people celebrating their work anniversary.</li>
<li>A light-hearted discussion about singing Happy Birthday to colleagues.</li>
<li>Meks gives us a rundown of their professional career.</li>
<li>We find out more about Meks’s non-traditional programming background.</li>
<li>How long they have been using Elixir for and how they initially got started in it.</li>
<li>The lessons they learned from their Flatiron and Elixir development experience.</li>
<li>What was most difficult transitioning from working Ruby to Elixir.</li>
<li>Keeping a balance between learning and meeting productivity targets.</li>
<li>The moment when Meks felt like they were making good progress transitioning.</li>
<li>Some advice they have for people learning Elixir.</li>
<li>Other projects that Meks is currently working on and programming languages used.</li>
<li>How boot camp is different from real-world situations, in terms of programming.</li>
<li>We find out about Meks’s current Star Wars obsession.</li>
<li>The importance of finding enjoyment outside of work.</li>
<li>Meks shares their personal journey to becoming the person they are today.</li>
<li>A conversation about the importance of Pride Month and keeping an open mind.</li>
<li>A highlight of some communication challenges that come with remote working.</li>
<li>Why empathetic and effective communication is essential in the workplace.</li>
<li>We reflect on some recent networking opportunities and conferences. </li>
<li>The approach at NewAperio to networking and conferences.</li>
<li>Details about Meks’ desk setup and why it is called the ‘Moon Lander’.</li>
<li>More about their desk setup: keycap preferences.</li>
<li>How learning Elixir changed the way Meks thinks about programming in general.</li>
<li>Meks explains their approach to writing code.</li>
<li>What their ultimate combination of programming languages are.</li>
<li>What opportunities or weaknesses that a polyglot environment can introduce.</li>
</ul>

<p>*<em>Links Mentioned in Today’s Episode:<br>
*</em></p>

<ul>
<li>Meks McClure on Twitter — <a href="https://twitter.com/mmcclure0100" rel="nofollow">https://twitter.com/mmcclure0100</a></li>
<li>Meks McClure on GitHub — <a href="https://github.com/MMcClure11" rel="nofollow">https://github.com/MMcClure11</a></li>
<li>Meks McClure on LinkedIn — <a href="https://www.linkedin.com/in/meksmcclure/" rel="nofollow">https://www.linkedin.com/in/meksmcclure/</a></li>
<li>NewAperio — <a href="https://newaperio.com/" rel="nofollow">https://newaperio.com/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </li>
<li>Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a></li>
<li>Owen Bickford on Twitter — <a href="https://twitter.com/owenbickford/" rel="nofollow">https://twitter.com/owenbickford/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io" rel="nofollow">https://smartlogic.io</a></li>
<li>Moon Lander — <a href="https://www.zsa.io/moonlander/" rel="nofollow">https://www.zsa.io/moonlander/</a></li>
<li>Difficult Conversations — <a href="https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/" rel="nofollow">https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/</a></li>
<li>Kailh Speed Silver (Linear) Mechanical Switch Kit — <a href="https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z" rel="nofollow">https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z</a></li>
</ul><p>Special Guest: Meks McClure.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to another episode of Elixir Wizards, a show focused on conversations with software developers from around the world on the Elixir language and other modern web technologies. In today’s episode, we speak with Meks McClure, a Full Stack Software Engineer with an unconventional background in Biology and Philosophy. Meks found their passion for programming after building a website for a Mexican non-profit, Permanencia Voluntaria, using wix.com. Seeing people use the website and how it helped the community inspired Meks to pursue a career in programming. They are currently based at NewAperio, a software development company, as a Junior Developer. In today’s show we find out more about Meks’s professional background, NewAperio and the services they offer, more about their unconventional training background, challenges transitioning to a new career path, the importance of effective communication in the workplace, the significance of Pride Month, Meks’s very cool desk setup, and much more! Tune in today to learn more from today’s special guest, Meks McClure!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A brief breakdown of today’s topic and introduction to our special guest, Meks McClure.</li>
<li>We find out about NewAperio and what services they offer.</li>
<li>How long Meks has been based at NewAperio.</li>
<li>Find out what the NewAperio tradition is for people celebrating their work anniversary.</li>
<li>A light-hearted discussion about singing Happy Birthday to colleagues.</li>
<li>Meks gives us a rundown of their professional career.</li>
<li>We find out more about Meks’s non-traditional programming background.</li>
<li>How long they have been using Elixir for and how they initially got started in it.</li>
<li>The lessons they learned from their Flatiron and Elixir development experience.</li>
<li>What was most difficult transitioning from working Ruby to Elixir.</li>
<li>Keeping a balance between learning and meeting productivity targets.</li>
<li>The moment when Meks felt like they were making good progress transitioning.</li>
<li>Some advice they have for people learning Elixir.</li>
<li>Other projects that Meks is currently working on and programming languages used.</li>
<li>How boot camp is different from real-world situations, in terms of programming.</li>
<li>We find out about Meks’s current Star Wars obsession.</li>
<li>The importance of finding enjoyment outside of work.</li>
<li>Meks shares their personal journey to becoming the person they are today.</li>
<li>A conversation about the importance of Pride Month and keeping an open mind.</li>
<li>A highlight of some communication challenges that come with remote working.</li>
<li>Why empathetic and effective communication is essential in the workplace.</li>
<li>We reflect on some recent networking opportunities and conferences. </li>
<li>The approach at NewAperio to networking and conferences.</li>
<li>Details about Meks’ desk setup and why it is called the ‘Moon Lander’.</li>
<li>More about their desk setup: keycap preferences.</li>
<li>How learning Elixir changed the way Meks thinks about programming in general.</li>
<li>Meks explains their approach to writing code.</li>
<li>What their ultimate combination of programming languages are.</li>
<li>What opportunities or weaknesses that a polyglot environment can introduce.</li>
</ul>

<p>*<em>Links Mentioned in Today’s Episode:<br>
*</em></p>

<ul>
<li>Meks McClure on Twitter — <a href="https://twitter.com/mmcclure0100" rel="nofollow">https://twitter.com/mmcclure0100</a></li>
<li>Meks McClure on GitHub — <a href="https://github.com/MMcClure11" rel="nofollow">https://github.com/MMcClure11</a></li>
<li>Meks McClure on LinkedIn — <a href="https://www.linkedin.com/in/meksmcclure/" rel="nofollow">https://www.linkedin.com/in/meksmcclure/</a></li>
<li>NewAperio — <a href="https://newaperio.com/" rel="nofollow">https://newaperio.com/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </li>
<li>Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a></li>
<li>Owen Bickford on Twitter — <a href="https://twitter.com/owenbickford/" rel="nofollow">https://twitter.com/owenbickford/</a></li>
<li>SmartLogic — <a href="https://smartlogic.io" rel="nofollow">https://smartlogic.io</a></li>
<li>Moon Lander — <a href="https://www.zsa.io/moonlander/" rel="nofollow">https://www.zsa.io/moonlander/</a></li>
<li>Difficult Conversations — <a href="https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/" rel="nofollow">https://www.penguinrandomhouse.com/books/331191/difficult-conversations-by-douglas-stone-bruce-patton-and-sheila-heen-foreword-by-roger-fisher/</a></li>
<li>Kailh Speed Silver (Linear) Mechanical Switch Kit — <a href="https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z" rel="nofollow">https://www.amazon.com/Silver-Linear-Mechanical-EVGA-Keyboard/dp/B09N9BXW7Z</a></li>
</ul><p>Special Guest: Meks McClure.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jessica Kerr on Systems Thinking for Developers</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e7-kerr</link>
      <guid isPermaLink="false">942f6a18-066a-4996-b3f8-9b0712959574</guid>
      <pubDate>Thu, 26 May 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/942f6a18-066a-4996-b3f8-9b0712959574.mp3" length="42053870" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>A superpower of software development is teaching our code to teach us what’s happening. This is observability, and it’s why Jessica Kerr works at Honeycomb, where she is a Developer Advocate. After twenty years as a developer, Jess sees software as a significant force in the world. As a symmathecist in the medium of code, she views development teams as learning systems made of both people and software.</itunes:subtitle>
      <itunes:duration>43:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/942f6a18-066a-4996-b3f8-9b0712959574/cover.jpg" />
      <description>A superpower of software development is teaching our code to teach us what’s happening. This is observability, and it’s why Jessica Kerr works at Honeycomb, where she is a Developer Advocate. After twenty years as a developer, Jess sees software as a significant force in the world. As a symmathecist in the medium of code, she views development teams as learning systems made of both people and software. She believes that, if we allow the software to teach us, it becomes a better teammate and, if this process makes us into systems thinkers, we can be better people in the world! Today, Jess compares the way we work in teams to game design and we find out what she means by observability and how it can serve everybody on a team. She elaborates on the remarkable agency that software developers have and how the languages they use can empower them, especially when they aren’t having specific architecture imposed on them! We also touch on what being a polyglot means to Jess, the value of working with rather then against complexity, and what Jess means when she says a software team is the perfect example of a symmathesy, plus so much more, so make sure to tune in today for this fascinating conversation with Jessica Kerr!
*Key Points From This Episode:
*
* Jess starts by drawing an interesting comparison between teamwork and game design.
* Insight into her journey as a developer and how she was introduced to Elixir.
* Discover Jess’ connection to Elixir iteratees via Jose Valim!
* Her role at Honeycomb, the languages she uses, and what she means by observability.
* Why Jess believes that developers have agency and enormous power.
* Why the best language to use is the one that you and your team know best.
* The value of standardizing the platform rather than trying to dictate the language.
* How observability reveals connections and acts as one tool that serves everybody.
* Congressive versus ingressive behavior as per Dr. Eugenia Cheng.
* What being a polyglot means to Jess: accepting that others don’t think just like you do and actively learning from them.
* Working skillfully within complexity rather than trying to eliminate it.
* How people gain exposure to different languages at Honeycomb.
* The importance of understanding what architecture is being imposed on you.
* Jess’ favorite talk on symmathesy and why a software team in particular is a symmathesy.
* Opportunities and/or weaknesses that being in a polyglot environment can introduce.
* Ways you can connect with Jess and even sign up for a 30-minute chat with her!
*Links Mentioned in Today’s Episode:
*
Jessica Kerr — https://jessitron.com/
Jessica Kerr on LinkedIn — https://www.linkedin.com/in/jessicakerr/
Jessica Kerr on Twitter — https://twitter.com/jessitron
Honeycomb — https://www.honeycomb.io/
Schedule a Call with Jess — honeycomb.io/office-hours
Games: Agency As Art — https://objectionable.net/games-agency-as-art/
OpenTelemetry — https://opentelemetry.io/
Matthew Skelton — https://blog.matthewskelton.net/
Team Topologies — https://teamtopologies.com/
QCon — https://plus.qconferences.com/ 
Keynote: ’The Language is the Least of It’ — https://youtu.be/nvV-4040xXI
Dr Eugenia Cheng — http://eugeniacheng.com/
x + y — https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/ 
'Backend for frontend (BFF) pattern’ — https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0
Abstract syntax tree — https://en.wikipedia.org/wiki/Abstractsyntaxtree
Keynote: ‘Collective Problem Solving in Music, Science, Art, and Software’ — https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/
SmartLogic — https://smartlogic.io/ 
 Special Guest: Jessica Kerr.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>A superpower of software development is teaching our code to teach us what’s happening. This is observability, and it’s why Jessica Kerr works at Honeycomb, where she is a Developer Advocate. After twenty years as a developer, Jess sees software as a significant force in the world. As a symmathecist in the medium of code, she views development teams as learning systems made of both people and software. She believes that, if we allow the software to teach us, it becomes a better teammate and, if this process makes us into systems thinkers, we can be better people in the world! Today, Jess compares the way we work in teams to game design and we find out what she means by observability and how it can serve everybody on a team. She elaborates on the remarkable agency that software developers have and how the languages they use can empower them, especially when they aren’t having specific architecture imposed on them! We also touch on what being a polyglot means to Jess, the value of working with rather then against complexity, and what Jess means when she says a software team is the perfect example of a symmathesy, plus so much more, so make sure to tune in today for this fascinating conversation with Jessica Kerr!</p>

<p>*<em>Key Points From This Episode:<br>
*</em></p>

<ul>
<li>Jess starts by drawing an interesting comparison between teamwork and game design.</li>
<li>Insight into her journey as a developer and how she was introduced to Elixir.</li>
<li>Discover Jess’ connection to Elixir iteratees via Jose Valim!</li>
<li>Her role at Honeycomb, the languages she uses, and what she means by observability.</li>
<li>Why Jess believes that developers have agency and enormous power.</li>
<li>Why the best language to use is the one that you and your team know best.</li>
<li>The value of standardizing the platform rather than trying to dictate the language.</li>
<li>How observability reveals connections and acts as one tool that serves everybody.</li>
<li>Congressive versus ingressive behavior as per Dr. Eugenia Cheng.</li>
<li>What being a polyglot means to Jess: accepting that others don’t think just like you do and actively learning from them.</li>
<li>Working skillfully within complexity rather than trying to eliminate it.</li>
<li>How people gain exposure to different languages at Honeycomb.</li>
<li>The importance of understanding what architecture is being imposed on you.</li>
<li>Jess’ favorite talk on symmathesy and why a software team in particular is a symmathesy.</li>
<li>Opportunities and/or weaknesses that being in a polyglot environment can introduce.</li>
<li>Ways you can connect with Jess and even sign up for a 30-minute chat with her!</li>
</ul>

<p>*<em>Links Mentioned in Today’s Episode:<br>
*</em><br>
Jessica Kerr — <a href="https://jessitron.com/" rel="nofollow">https://jessitron.com/</a><br>
Jessica Kerr on LinkedIn — <a href="https://www.linkedin.com/in/jessicakerr/" rel="nofollow">https://www.linkedin.com/in/jessicakerr/</a><br>
Jessica Kerr on Twitter — <a href="https://twitter.com/jessitron" rel="nofollow">https://twitter.com/jessitron</a><br>
Honeycomb — <a href="https://www.honeycomb.io/" rel="nofollow">https://www.honeycomb.io/</a><br>
Schedule a Call with Jess — honeycomb.io/office-hours<br>
Games: Agency As Art — <a href="https://objectionable.net/games-agency-as-art/" rel="nofollow">https://objectionable.net/games-agency-as-art/</a><br>
OpenTelemetry — <a href="https://opentelemetry.io/" rel="nofollow">https://opentelemetry.io/</a><br>
Matthew Skelton — <a href="https://blog.matthewskelton.net/" rel="nofollow">https://blog.matthewskelton.net/</a><br>
Team Topologies — <a href="https://teamtopologies.com/" rel="nofollow">https://teamtopologies.com/</a><br>
QCon — <a href="https://plus.qconferences.com/" rel="nofollow">https://plus.qconferences.com/</a> <br>
Keynote: ’The Language is the Least of It’ — <a href="https://youtu.be/nvV-4040xXI" rel="nofollow">https://youtu.be/nvV-4040xXI</a><br>
Dr Eugenia Cheng — <a href="http://eugeniacheng.com/" rel="nofollow">http://eugeniacheng.com/</a><br>
x + y — <a href="https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/" rel="nofollow">https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/</a> <br>
&#39;Backend for frontend (BFF) pattern’ — <a href="https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0" rel="nofollow">https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0</a><br>
Abstract syntax tree — <a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" rel="nofollow">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a><br>
Keynote: ‘Collective Problem Solving in Music, Science, Art, and Software’ — <a href="https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/" rel="nofollow">https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Jessica Kerr.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>A superpower of software development is teaching our code to teach us what’s happening. This is observability, and it’s why Jessica Kerr works at Honeycomb, where she is a Developer Advocate. After twenty years as a developer, Jess sees software as a significant force in the world. As a symmathecist in the medium of code, she views development teams as learning systems made of both people and software. She believes that, if we allow the software to teach us, it becomes a better teammate and, if this process makes us into systems thinkers, we can be better people in the world! Today, Jess compares the way we work in teams to game design and we find out what she means by observability and how it can serve everybody on a team. She elaborates on the remarkable agency that software developers have and how the languages they use can empower them, especially when they aren’t having specific architecture imposed on them! We also touch on what being a polyglot means to Jess, the value of working with rather then against complexity, and what Jess means when she says a software team is the perfect example of a symmathesy, plus so much more, so make sure to tune in today for this fascinating conversation with Jessica Kerr!</p>

<p>*<em>Key Points From This Episode:<br>
*</em></p>

<ul>
<li>Jess starts by drawing an interesting comparison between teamwork and game design.</li>
<li>Insight into her journey as a developer and how she was introduced to Elixir.</li>
<li>Discover Jess’ connection to Elixir iteratees via Jose Valim!</li>
<li>Her role at Honeycomb, the languages she uses, and what she means by observability.</li>
<li>Why Jess believes that developers have agency and enormous power.</li>
<li>Why the best language to use is the one that you and your team know best.</li>
<li>The value of standardizing the platform rather than trying to dictate the language.</li>
<li>How observability reveals connections and acts as one tool that serves everybody.</li>
<li>Congressive versus ingressive behavior as per Dr. Eugenia Cheng.</li>
<li>What being a polyglot means to Jess: accepting that others don’t think just like you do and actively learning from them.</li>
<li>Working skillfully within complexity rather than trying to eliminate it.</li>
<li>How people gain exposure to different languages at Honeycomb.</li>
<li>The importance of understanding what architecture is being imposed on you.</li>
<li>Jess’ favorite talk on symmathesy and why a software team in particular is a symmathesy.</li>
<li>Opportunities and/or weaknesses that being in a polyglot environment can introduce.</li>
<li>Ways you can connect with Jess and even sign up for a 30-minute chat with her!</li>
</ul>

<p>*<em>Links Mentioned in Today’s Episode:<br>
*</em><br>
Jessica Kerr — <a href="https://jessitron.com/" rel="nofollow">https://jessitron.com/</a><br>
Jessica Kerr on LinkedIn — <a href="https://www.linkedin.com/in/jessicakerr/" rel="nofollow">https://www.linkedin.com/in/jessicakerr/</a><br>
Jessica Kerr on Twitter — <a href="https://twitter.com/jessitron" rel="nofollow">https://twitter.com/jessitron</a><br>
Honeycomb — <a href="https://www.honeycomb.io/" rel="nofollow">https://www.honeycomb.io/</a><br>
Schedule a Call with Jess — honeycomb.io/office-hours<br>
Games: Agency As Art — <a href="https://objectionable.net/games-agency-as-art/" rel="nofollow">https://objectionable.net/games-agency-as-art/</a><br>
OpenTelemetry — <a href="https://opentelemetry.io/" rel="nofollow">https://opentelemetry.io/</a><br>
Matthew Skelton — <a href="https://blog.matthewskelton.net/" rel="nofollow">https://blog.matthewskelton.net/</a><br>
Team Topologies — <a href="https://teamtopologies.com/" rel="nofollow">https://teamtopologies.com/</a><br>
QCon — <a href="https://plus.qconferences.com/" rel="nofollow">https://plus.qconferences.com/</a> <br>
Keynote: ’The Language is the Least of It’ — <a href="https://youtu.be/nvV-4040xXI" rel="nofollow">https://youtu.be/nvV-4040xXI</a><br>
Dr Eugenia Cheng — <a href="http://eugeniacheng.com/" rel="nofollow">http://eugeniacheng.com/</a><br>
x + y — <a href="https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/" rel="nofollow">https://www.basicbooks.com/titles/eugenia-cheng/x-y/9781541646513/</a> <br>
&#39;Backend for frontend (BFF) pattern’ — <a href="https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0" rel="nofollow">https://medium.com/mobilepeople/backend-for-frontend-pattern-why-you-need-to-know-it-46f94ce420b0</a><br>
Abstract syntax tree — <a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" rel="nofollow">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a><br>
Keynote: ‘Collective Problem Solving in Music, Science, Art, and Software’ — <a href="https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/" rel="nofollow">https://jessitron.com/2019/11/05/keynote-collective-problem-solving-in-music-science-art-and-software/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Jessica Kerr.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Digit on Smart Homes, EMPEX, and Cross-platform Development</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e6-digit</link>
      <guid isPermaLink="false">c1e61882-d69a-47d8-af8b-a1a1b3f33708</guid>
      <pubDate>Thu, 19 May 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c1e61882-d69a-47d8-af8b-a1a1b3f33708.mp3" length="41346722" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome back to another episode of Elixir Wizards. Today, we chat with Digit, a talented software engineer currently based at SmartRent. He became aware of the company when he started trying to modify his smart home and realized what was behind the software. Digit works on building applications within the SmartRent suite of tools using the Nerves ecosystem. Although fairly new at SmartRent, Digit loves the powerful applications of the software they are developing.</itunes:subtitle>
      <itunes:duration>42:58</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c1e61882-d69a-47d8-af8b-a1a1b3f33708/cover.jpg" />
      <description>Welcome back to another episode of Elixir Wizards. Today, we chat with Digit, a talented software engineer currently based at SmartRent. He became aware of the company when he started trying to modify his smart home and realized what was behind the software. Digit works on building applications within the SmartRent suite of tools using the Nerves ecosystem. Although fairly new at SmartRent, Digit loves the powerful applications of the software they are developing. In today’s show we find out more about the work Digit is currently involved with at SmartRent and what they have in store for the future. We also discuss the pros and cons of living in a smart home, the different languages that Digit uses, what makes developing a game so challenging, Using Elixir for building DSLs to generate content for Unity, what Digit’s opinion is of Burrito, and much more! For all this and more, be sure to tune in today! 
Key Points From This Episode:
Introduction to today’s show and brief catch-up of what everyone has been up to.
We find out what talks at the conference Digit is most looking forward to.
What OTP stands for: hint, it is not ‘Open Telephony Platform.’
A brief discussion about the advantages of a one-day conference.
We find out who all the people are that are going to give talks at EMPEX. 
Digit shares what it has been like working at SmartRent.
We find out how Digit landed the job at SmartRent.
Breakdown of what SmartRent is in terms of the high level.
We get some insider knowledge of the next-generation technology at SmartRent.
Rundown of what Flutter is and the advantages of using it.
Discussion about the pros and cons of living in a smart home.
Find out what the best smart thermostat is, according to Digit.
The different programming languages that Digit is currently working in.
Digit explains the type of WebSocket support available in Flutter. 
Background about Digit’s experience in game development.
What makes finishing developing a game so difficult.
The language stack used to develop games.
Using Elixir for building DSLs to generate content for Unity.
Digit gives listeners an overview of Burrito.
The advantages of using Burrito for cross-platform with no internet connection.
Examples of real-world applications using Burrito.
Other applications for Elixir outside of web application development.
We get some insider information about a new Elixir-based project in the works.
A rundown of the security applications using Macaroons. 
The power that passwordless authentication has to offer.
We end the show with some takeaways from Digit for listeners. 
Links Mentioned in Today’s Episode:
Digit — https://puppy.surf
Digit on GitHub — https://github.com/doawoo
Digit on Twitter — https://twitter.com/doawoo
SmartRent — https://smartrent.com
SmartLogic — https://smartlogic.io/ 
Sundi Myint on Twitter — https://twitter.com/sundikhin/
Owen Bickford on Twitter — https://twitter.com/owenbickford/
EMPEX — https://www.empex.co
Flutter — https://flutter.dev/
 Special Guest: Digit.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to another episode of Elixir Wizards. Today, we chat with Digit, a talented software engineer currently based at SmartRent. He became aware of the company when he started trying to modify his smart home and realized what was behind the software. Digit works on building applications within the SmartRent suite of tools using the Nerves ecosystem. Although fairly new at SmartRent, Digit loves the powerful applications of the software they are developing. In today’s show we find out more about the work Digit is currently involved with at SmartRent and what they have in store for the future. We also discuss the pros and cons of living in a smart home, the different languages that Digit uses, what makes developing a game so challenging, Using Elixir for building DSLs to generate content for Unity, what Digit’s opinion is of Burrito, and much more! For all this and more, be sure to tune in today! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Introduction to today’s show and brief catch-up of what everyone has been up to.</li>
<li>We find out what talks at the conference Digit is most looking forward to.</li>
<li>What OTP stands for: hint, it is not ‘Open Telephony Platform.’</li>
<li>A brief discussion about the advantages of a one-day conference.</li>
<li>We find out who all the people are that are going to give talks at EMPEX. </li>
<li>Digit shares what it has been like working at SmartRent.</li>
<li>We find out how Digit landed the job at SmartRent.</li>
<li>Breakdown of what SmartRent is in terms of the high level.</li>
<li>We get some insider knowledge of the next-generation technology at SmartRent.</li>
<li>Rundown of what Flutter is and the advantages of using it.</li>
<li>Discussion about the pros and cons of living in a smart home.</li>
<li>Find out what the best smart thermostat is, according to Digit.</li>
<li>The different programming languages that Digit is currently working in.</li>
<li>Digit explains the type of WebSocket support available in Flutter. </li>
<li>Background about Digit’s experience in game development.</li>
<li>What makes finishing developing a game so difficult.</li>
<li>The language stack used to develop games.</li>
<li>Using Elixir for building DSLs to generate content for Unity.</li>
<li>Digit gives listeners an overview of Burrito.</li>
<li>The advantages of using Burrito for cross-platform with no internet connection.</li>
<li>Examples of real-world applications using Burrito.</li>
<li>Other applications for Elixir outside of web application development.</li>
<li>We get some insider information about a new Elixir-based project in the works.</li>
<li>A rundown of the security applications using Macaroons. </li>
<li>The power that passwordless authentication has to offer.</li>
<li>We end the show with some takeaways from Digit for listeners. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Digit — <a href="https://puppy.surf" rel="nofollow">https://puppy.surf</a><br>
Digit on GitHub — <a href="https://github.com/doawoo" rel="nofollow">https://github.com/doawoo</a><br>
Digit on Twitter — <a href="https://twitter.com/doawoo" rel="nofollow">https://twitter.com/doawoo</a><br>
SmartRent — <a href="https://smartrent.com" rel="nofollow">https://smartrent.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin/" rel="nofollow">https://twitter.com/sundikhin/</a><br>
Owen Bickford on Twitter — <a href="https://twitter.com/owenbickford/" rel="nofollow">https://twitter.com/owenbickford/</a><br>
EMPEX — <a href="https://www.empex.co" rel="nofollow">https://www.empex.co</a><br>
Flutter — <a href="https://flutter.dev/" rel="nofollow">https://flutter.dev/</a></p><p>Special Guest: Digit.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to another episode of Elixir Wizards. Today, we chat with Digit, a talented software engineer currently based at SmartRent. He became aware of the company when he started trying to modify his smart home and realized what was behind the software. Digit works on building applications within the SmartRent suite of tools using the Nerves ecosystem. Although fairly new at SmartRent, Digit loves the powerful applications of the software they are developing. In today’s show we find out more about the work Digit is currently involved with at SmartRent and what they have in store for the future. We also discuss the pros and cons of living in a smart home, the different languages that Digit uses, what makes developing a game so challenging, Using Elixir for building DSLs to generate content for Unity, what Digit’s opinion is of Burrito, and much more! For all this and more, be sure to tune in today! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Introduction to today’s show and brief catch-up of what everyone has been up to.</li>
<li>We find out what talks at the conference Digit is most looking forward to.</li>
<li>What OTP stands for: hint, it is not ‘Open Telephony Platform.’</li>
<li>A brief discussion about the advantages of a one-day conference.</li>
<li>We find out who all the people are that are going to give talks at EMPEX. </li>
<li>Digit shares what it has been like working at SmartRent.</li>
<li>We find out how Digit landed the job at SmartRent.</li>
<li>Breakdown of what SmartRent is in terms of the high level.</li>
<li>We get some insider knowledge of the next-generation technology at SmartRent.</li>
<li>Rundown of what Flutter is and the advantages of using it.</li>
<li>Discussion about the pros and cons of living in a smart home.</li>
<li>Find out what the best smart thermostat is, according to Digit.</li>
<li>The different programming languages that Digit is currently working in.</li>
<li>Digit explains the type of WebSocket support available in Flutter. </li>
<li>Background about Digit’s experience in game development.</li>
<li>What makes finishing developing a game so difficult.</li>
<li>The language stack used to develop games.</li>
<li>Using Elixir for building DSLs to generate content for Unity.</li>
<li>Digit gives listeners an overview of Burrito.</li>
<li>The advantages of using Burrito for cross-platform with no internet connection.</li>
<li>Examples of real-world applications using Burrito.</li>
<li>Other applications for Elixir outside of web application development.</li>
<li>We get some insider information about a new Elixir-based project in the works.</li>
<li>A rundown of the security applications using Macaroons. </li>
<li>The power that passwordless authentication has to offer.</li>
<li>We end the show with some takeaways from Digit for listeners. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Digit — <a href="https://puppy.surf" rel="nofollow">https://puppy.surf</a><br>
Digit on GitHub — <a href="https://github.com/doawoo" rel="nofollow">https://github.com/doawoo</a><br>
Digit on Twitter — <a href="https://twitter.com/doawoo" rel="nofollow">https://twitter.com/doawoo</a><br>
SmartRent — <a href="https://smartrent.com" rel="nofollow">https://smartrent.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin/" rel="nofollow">https://twitter.com/sundikhin/</a><br>
Owen Bickford on Twitter — <a href="https://twitter.com/owenbickford/" rel="nofollow">https://twitter.com/owenbickford/</a><br>
EMPEX — <a href="https://www.empex.co" rel="nofollow">https://www.empex.co</a><br>
Flutter — <a href="https://flutter.dev/" rel="nofollow">https://flutter.dev/</a></p><p>Special Guest: Digit.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Nathan Willson on the Polyglot Landscape in Japan</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e5-willson</link>
      <guid isPermaLink="false">23a28e9b-417e-4841-9b86-addd0247ce4e</guid>
      <pubDate>Thu, 12 May 2022 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/23a28e9b-417e-4841-9b86-addd0247ce4e.mp3" length="43628070" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Joining us in conversation today is Nathan Willson all the way from Tokyo, Japan. Learn about his current projects and how his background in music brought him to coding.</itunes:subtitle>
      <itunes:duration>45:20</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/23a28e9b-417e-4841-9b86-addd0247ce4e/cover.jpg" />
      <description>Joining us in conversation today is Nathan Willson all the way from Tokyo, Japan. Listeners will learn about the polyglot landscape he works in from Japan, why he believes knowing a language, and mastering it, are two different things, and what his first foray into coding looked like. We touch on the necessary evil of MIDI plugins, and Nathan introduces listeners to GEMS, how you can use it, and what he has done to make it accessible across the globe. We talk latency issues, curbing the potential for abuse, and choosing to make an app open source, before delving into Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, that he built with five friends, When to Chat, and much more. Thanks for tuning in to hear from today’s inspiring guest. 
Key Points From This Episode:
An introduction to today’s guest, Nathan Willson, his Canadian-Japanese history, his obsession with Elixir, and his musical experimental app, GEMS. 
The polyglot environment in which he works which is Japanese and English.
Why knowing a language and mastering a language are such different things.
His first foray into coding via Reaper’s plugins.
Why he considers MIDI to be a necessary evil. 
What GEMS, or Globally Editable Matrix Sequencer, is, and how it works.
How Phoenix or Elixir can facilitate the use of GEMS anywhere in the world, at the same time.
How he has approached the problem of the potential for abuse.
Relative and absolute latency and how that impacts user experience between countries.
Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.
The app, When to Chat, that Nathan has built.
Where he picked up his design skills with a background in back-end engineering.
Why he prefers BandCamp to Spotify as a music listener.
How his knowledge of Elixir has helped him to code Ruby better.
An invitation from Nathan to reach out with what you are working on.
Links Mentioned in Today’s Episode:
Tone.js — https://tonejs.github.io/
BandCamp — https://bandcamp.com/
Nathan Wilson — https://nathanwillson.com/
Nathan Willson on Twitter — https://twitter.com/nathanwillson
Nathan Willson on Instagram — https://www.instagram.com/nahtanw/
GEMS — https://gems.nathanwillson.com/
What is Max? | Cycling ‘74 — https://cycling74.com/products/max
When to Chat —https://whentochat.co/
SmartLogic — https://smartlogic.io/ 
 Special Guest: Nathan Willson.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Joining us in conversation today is Nathan Willson all the way from Tokyo, Japan. Listeners will learn about the polyglot landscape he works in from Japan, why he believes knowing a language, and mastering it, are two different things, and what his first foray into coding looked like. We touch on the necessary evil of MIDI plugins, and Nathan introduces listeners to GEMS, how you can use it, and what he has done to make it accessible across the globe. We talk latency issues, curbing the potential for abuse, and choosing to make an app open source, before delving into Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, that he built with five friends, When to Chat, and much more. Thanks for tuning in to hear from today’s inspiring guest. </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>An introduction to today’s guest, Nathan Willson, his Canadian-Japanese history, his obsession with Elixir, and his musical experimental app, GEMS. </li>
<li>The polyglot environment in which he works which is Japanese and English.</li>
<li>Why knowing a language and mastering a language are such different things.</li>
<li>His first foray into coding via Reaper’s plugins.</li>
<li>Why he considers MIDI to be a necessary evil. </li>
<li>What GEMS, or Globally Editable Matrix Sequencer, is, and how it works.</li>
<li>How Phoenix or Elixir can facilitate the use of GEMS anywhere in the world, at the same time.</li>
<li>How he has approached the problem of the potential for abuse.</li>
<li>Relative and absolute latency and how that impacts user experience between countries.</li>
<li>Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.</li>
<li>The app, When to Chat, that Nathan has built.</li>
<li>Where he picked up his design skills with a background in back-end engineering.</li>
<li>Why he prefers BandCamp to Spotify as a music listener.</li>
<li>How his knowledge of Elixir has helped him to code Ruby better.</li>
<li>An invitation from Nathan to reach out with what you are working on.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Tone.js — <a href="https://tonejs.github.io/" rel="nofollow">https://tonejs.github.io/</a><br>
BandCamp — <a href="https://bandcamp.com/" rel="nofollow">https://bandcamp.com/</a><br>
Nathan Wilson — <a href="https://nathanwillson.com/" rel="nofollow">https://nathanwillson.com/</a><br>
Nathan Willson on Twitter — <a href="https://twitter.com/nathanwillson" rel="nofollow">https://twitter.com/nathanwillson</a><br>
Nathan Willson on Instagram — <a href="https://www.instagram.com/nahtanw/" rel="nofollow">https://www.instagram.com/nahtanw/</a><br>
GEMS — <a href="https://gems.nathanwillson.com/" rel="nofollow">https://gems.nathanwillson.com/</a><br>
What is Max? | Cycling ‘74 — <a href="https://cycling74.com/products/max" rel="nofollow">https://cycling74.com/products/max</a><br>
When to Chat —<a href="https://whentochat.co/" rel="nofollow">https://whentochat.co/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Nathan Willson.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Joining us in conversation today is Nathan Willson all the way from Tokyo, Japan. Listeners will learn about the polyglot landscape he works in from Japan, why he believes knowing a language, and mastering it, are two different things, and what his first foray into coding looked like. We touch on the necessary evil of MIDI plugins, and Nathan introduces listeners to GEMS, how you can use it, and what he has done to make it accessible across the globe. We talk latency issues, curbing the potential for abuse, and choosing to make an app open source, before delving into Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, that he built with five friends, When to Chat, and much more. Thanks for tuning in to hear from today’s inspiring guest. </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>An introduction to today’s guest, Nathan Willson, his Canadian-Japanese history, his obsession with Elixir, and his musical experimental app, GEMS. </li>
<li>The polyglot environment in which he works which is Japanese and English.</li>
<li>Why knowing a language and mastering a language are such different things.</li>
<li>His first foray into coding via Reaper’s plugins.</li>
<li>Why he considers MIDI to be a necessary evil. </li>
<li>What GEMS, or Globally Editable Matrix Sequencer, is, and how it works.</li>
<li>How Phoenix or Elixir can facilitate the use of GEMS anywhere in the world, at the same time.</li>
<li>How he has approached the problem of the potential for abuse.</li>
<li>Relative and absolute latency and how that impacts user experience between countries.</li>
<li>Nathan’s other projects outside of GEMS, including the Elixir app, Biddy, and TreeLib.</li>
<li>The app, When to Chat, that Nathan has built.</li>
<li>Where he picked up his design skills with a background in back-end engineering.</li>
<li>Why he prefers BandCamp to Spotify as a music listener.</li>
<li>How his knowledge of Elixir has helped him to code Ruby better.</li>
<li>An invitation from Nathan to reach out with what you are working on.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Tone.js — <a href="https://tonejs.github.io/" rel="nofollow">https://tonejs.github.io/</a><br>
BandCamp — <a href="https://bandcamp.com/" rel="nofollow">https://bandcamp.com/</a><br>
Nathan Wilson — <a href="https://nathanwillson.com/" rel="nofollow">https://nathanwillson.com/</a><br>
Nathan Willson on Twitter — <a href="https://twitter.com/nathanwillson" rel="nofollow">https://twitter.com/nathanwillson</a><br>
Nathan Willson on Instagram — <a href="https://www.instagram.com/nahtanw/" rel="nofollow">https://www.instagram.com/nahtanw/</a><br>
GEMS — <a href="https://gems.nathanwillson.com/" rel="nofollow">https://gems.nathanwillson.com/</a><br>
What is Max? | Cycling ‘74 — <a href="https://cycling74.com/products/max" rel="nofollow">https://cycling74.com/products/max</a><br>
When to Chat —<a href="https://whentochat.co/" rel="nofollow">https://whentochat.co/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Nathan Willson.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sanne Kalkman on Coding, Crafting, and Collaboration</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e4-kalkman</link>
      <guid isPermaLink="false">32849026-ad26-4b84-9a89-316306f6e3c1</guid>
      <pubDate>Thu, 05 May 2022 08:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/32849026-ad26-4b84-9a89-316306f6e3c1.mp3" length="41882304" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This week we are joined by Sanne Kalkman who works as Senior Software Engineer at CodeSandbox. We discuss her role at CodeSandbox, her interest in multiple languages, Elixir, crafting, and more.</itunes:subtitle>
      <itunes:duration>43:31</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/32849026-ad26-4b84-9a89-316306f6e3c1/cover.jpg" />
      <description>This week we are joined by Sanne Kalkman, former teacher turned software engineer. Currently, Sanne works at CodeSandbox, where she's one of two Elixir developers responsible for the backend. When she's not coding, you'll probably find her either 25 browser tabs deep into a new CS topic, learning yet another new hobby, or behind her sewing machine, all of which we dive into in today’s episode! Tuning in, you’ll discover which languages Sanne is proficient in and why she doesn’t consider herself a polyglot; gain some insight into CodeSandbox Projects, a more collaborative rewrite of CodeSandbox from the ground up; and get a sneak peek into Sanne’s upcoming keynote address at Code BEAM Europe in May 2022, which tackles how to help juniors succeed in your organization. We also touch on garbage collection in Elixir, cute avatars, the intersection of code and sewing, and much, much more, so make sure not to miss this fun and insightful conversation with coder and crafter, Sanne Kalkman!
Key Points From This Episode:
What it’s like living in the Netherlands, Sanne’s favorite TV show, and more.
An introduction to Sanne, how she found herself in tech, and her role at CodeSandbox.
The first language she entered the professional coding space with: Elixir, of course!
How she thinks about JavaScript now that she is proficient in another language like Elixir.
Learn more about CodeSandbox Projects and how it fosters live collaboration.
How the CodeSandbox app is broken down into Elixir, TypeScript, and Rust.
Why Sanne views CodeSandbox as a polyglot environment, but she isn’t a polyglot herself.
Find out why she prefers to stick with Elixir in her personal capacity.
Code BEAM Europe 2022 and some highlights from Sanne’s upcoming keynote address.
Top tips for helping juniors succeed at your organization; model asking questions.
The TLDR summary of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.
Cute avatars over headshots, Sanne’s crafty hobbies, side projects, and more!
Some of the cool work taking place at the intersection of code and sewing.
Opportunities at CodeSandbox to dive into different codebases and learn different things.
Final plugs, mentions, and where to connect with Sanne!
Links Mentioned in Today’s Episode:
Sanne Kalkman on LinkedIn — https://www.linkedin.com/in/sannekalkman/
Sanne Kalkman on GitHub — https://github.com/sannek/sketch
Sanne Kalkman on Twitter — https://twitter.com/sannekalkman 
CodeSandbox — https://codesandbox.io/
Our Flag Means Death — https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO
Walibi Amusement Park — https://www.walibi.com/
Code BEAM Europe 2022 — https://codesync.global/conferences/code-beam-sto-2022/
Sanne Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — https://youtu.be/OSdaXNQ0xhQ
Covatar — https://covatar.com/
FreeSewing — https://freesewing.org/
SmartLogic — https://smartlogic.io/ 
SmartLogic Jobs — https://smartlogic.io/jobs
 Special Guest: Sanne Kalkman.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week we are joined by Sanne Kalkman, former teacher turned software engineer. Currently, Sanne works at CodeSandbox, where she&#39;s one of two Elixir developers responsible for the backend. When she&#39;s not coding, you&#39;ll probably find her either 25 browser tabs deep into a new CS topic, learning yet another new hobby, or behind her sewing machine, all of which we dive into in today’s episode! Tuning in, you’ll discover which languages Sanne is proficient in and why she doesn’t consider herself a polyglot; gain some insight into CodeSandbox Projects, a more collaborative rewrite of CodeSandbox from the ground up; and get a sneak peek into Sanne’s upcoming keynote address at Code BEAM Europe in May 2022, which tackles how to help juniors succeed in your organization. We also touch on garbage collection in Elixir, cute avatars, the intersection of code and sewing, and much, much more, so make sure not to miss this fun and insightful conversation with coder and crafter, Sanne Kalkman!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>What it’s like living in the Netherlands, Sanne’s favorite TV show, and more.</li>
<li>An introduction to Sanne, how she found herself in tech, and her role at CodeSandbox.</li>
<li>The first language she entered the professional coding space with: Elixir, of course!</li>
<li>How she thinks about JavaScript now that she is proficient in another language like Elixir.</li>
<li>Learn more about CodeSandbox Projects and how it fosters live collaboration.</li>
<li>How the CodeSandbox app is broken down into Elixir, TypeScript, and Rust.</li>
<li>Why Sanne views CodeSandbox as a polyglot environment, but she isn’t a polyglot herself.</li>
<li>Find out why she prefers to stick with Elixir in her personal capacity.</li>
<li>Code BEAM Europe 2022 and some highlights from Sanne’s upcoming keynote address.</li>
<li>Top tips for helping juniors succeed at your organization; model asking questions.</li>
<li>The TLDR summary of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.</li>
<li>Cute avatars over headshots, Sanne’s crafty hobbies, side projects, and more!</li>
<li>Some of the cool work taking place at the intersection of code and sewing.</li>
<li>Opportunities at CodeSandbox to dive into different codebases and learn different things.</li>
<li>Final plugs, mentions, and where to connect with Sanne!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Sanne Kalkman on LinkedIn — <a href="https://www.linkedin.com/in/sannekalkman/" rel="nofollow">https://www.linkedin.com/in/sannekalkman/</a><br>
Sanne Kalkman on GitHub — <a href="https://github.com/sannek/sketch" rel="nofollow">https://github.com/sannek/sketch</a><br>
Sanne Kalkman on Twitter — <a href="https://twitter.com/sannekalkman" rel="nofollow">https://twitter.com/sannekalkman</a> <br>
CodeSandbox — <a href="https://codesandbox.io/" rel="nofollow">https://codesandbox.io/</a><br>
Our Flag Means Death — <a href="https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO" rel="nofollow">https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO</a><br>
Walibi Amusement Park — <a href="https://www.walibi.com/" rel="nofollow">https://www.walibi.com/</a><br>
Code BEAM Europe 2022 — <a href="https://codesync.global/conferences/code-beam-sto-2022/" rel="nofollow">https://codesync.global/conferences/code-beam-sto-2022/</a><br>
Sanne Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — <a href="https://youtu.be/OSdaXNQ0xhQ" rel="nofollow">https://youtu.be/OSdaXNQ0xhQ</a><br>
Covatar — <a href="https://covatar.com/" rel="nofollow">https://covatar.com/</a><br>
FreeSewing — <a href="https://freesewing.org/" rel="nofollow">https://freesewing.org/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Sanne Kalkman.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week we are joined by Sanne Kalkman, former teacher turned software engineer. Currently, Sanne works at CodeSandbox, where she&#39;s one of two Elixir developers responsible for the backend. When she&#39;s not coding, you&#39;ll probably find her either 25 browser tabs deep into a new CS topic, learning yet another new hobby, or behind her sewing machine, all of which we dive into in today’s episode! Tuning in, you’ll discover which languages Sanne is proficient in and why she doesn’t consider herself a polyglot; gain some insight into CodeSandbox Projects, a more collaborative rewrite of CodeSandbox from the ground up; and get a sneak peek into Sanne’s upcoming keynote address at Code BEAM Europe in May 2022, which tackles how to help juniors succeed in your organization. We also touch on garbage collection in Elixir, cute avatars, the intersection of code and sewing, and much, much more, so make sure not to miss this fun and insightful conversation with coder and crafter, Sanne Kalkman!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>What it’s like living in the Netherlands, Sanne’s favorite TV show, and more.</li>
<li>An introduction to Sanne, how she found herself in tech, and her role at CodeSandbox.</li>
<li>The first language she entered the professional coding space with: Elixir, of course!</li>
<li>How she thinks about JavaScript now that she is proficient in another language like Elixir.</li>
<li>Learn more about CodeSandbox Projects and how it fosters live collaboration.</li>
<li>How the CodeSandbox app is broken down into Elixir, TypeScript, and Rust.</li>
<li>Why Sanne views CodeSandbox as a polyglot environment, but she isn’t a polyglot herself.</li>
<li>Find out why she prefers to stick with Elixir in her personal capacity.</li>
<li>Code BEAM Europe 2022 and some highlights from Sanne’s upcoming keynote address.</li>
<li>Top tips for helping juniors succeed at your organization; model asking questions.</li>
<li>The TLDR summary of garbage collection in Elixir from Sanne’s 2020 Code BEAM Talk.</li>
<li>Cute avatars over headshots, Sanne’s crafty hobbies, side projects, and more!</li>
<li>Some of the cool work taking place at the intersection of code and sewing.</li>
<li>Opportunities at CodeSandbox to dive into different codebases and learn different things.</li>
<li>Final plugs, mentions, and where to connect with Sanne!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Sanne Kalkman on LinkedIn — <a href="https://www.linkedin.com/in/sannekalkman/" rel="nofollow">https://www.linkedin.com/in/sannekalkman/</a><br>
Sanne Kalkman on GitHub — <a href="https://github.com/sannek/sketch" rel="nofollow">https://github.com/sannek/sketch</a><br>
Sanne Kalkman on Twitter — <a href="https://twitter.com/sannekalkman" rel="nofollow">https://twitter.com/sannekalkman</a> <br>
CodeSandbox — <a href="https://codesandbox.io/" rel="nofollow">https://codesandbox.io/</a><br>
Our Flag Means Death — <a href="https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO" rel="nofollow">https://www.hbomax.com/series/urn:hbo:series:GYf3LzwJV98JifQEAAAAO</a><br>
Walibi Amusement Park — <a href="https://www.walibi.com/" rel="nofollow">https://www.walibi.com/</a><br>
Code BEAM Europe 2022 — <a href="https://codesync.global/conferences/code-beam-sto-2022/" rel="nofollow">https://codesync.global/conferences/code-beam-sto-2022/</a><br>
Sanne Kalkman: ’Who Takes Out Your Trash’ (Code BEAM V 2020) — <a href="https://youtu.be/OSdaXNQ0xhQ" rel="nofollow">https://youtu.be/OSdaXNQ0xhQ</a><br>
Covatar — <a href="https://covatar.com/" rel="nofollow">https://covatar.com/</a><br>
FreeSewing — <a href="https://freesewing.org/" rel="nofollow">https://freesewing.org/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Sanne Kalkman.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Cassidy Williams and Tobi Pfeiffer on Elixir Programming at Remote</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e3-williams-pfeiffer</link>
      <guid isPermaLink="false">c1436a7a-59b9-402a-970c-f87791f275e1</guid>
      <pubDate>Thu, 28 Apr 2022 08:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c1436a7a-59b9-402a-970c-f87791f275e1.mp3" length="59374234" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This week we welcome Cassidy Williams and Tobi Pfeiffer from Remote. Learn about Cassidy's role as Head of Experience and Education and Tobi's work as Staff Engineer at this fast growing, international Elixir company in this exciting double-guest episode.</itunes:subtitle>
      <itunes:duration>1:00:36</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c1436a7a-59b9-402a-970c-f87791f275e1/cover.jpg" />
      <description>This double guest episode features Cassidy Williams, Head of Developer Experience and Education and Tobi Pfeiffer, Staff Engineer from Remote. This fast growing Elixir company provides HR support to clients who are hiring internationally. In this fascinating fast-paced conversation Cassidy and Tobi discuss how Remote works, the explosive growth it has seen and what Cassidy and Tobi have most enjoyed in their time there. Also, we learn more about Cassidy's content creation projects, why Tobi's handle is PragTob, and the strangest laws they have come across when working internationally. We also learn about Cassidy's love of mechanical keyboards and about Tobi's adorable pet rabbits. We wrap up the episode with some great book recommendations and what's upcoming at Remote.
Key Points From This Episode:
Welcome to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer (Staff Engineer) at Remote.
Why Cassidy recommends the app Centered for achieving flow state. 
How different types of music affect everyone’s concentration while coding. 
Getting to know Tobi: Rails Girls community member, wearer of green and keyboard player. 
Who Cassidy is: a dweeb who likes memes and how she found the world of coding. 
What Remote is and how it works. 
How Tobi came up with the handle PragTob!
The explosive growth Remote has seen, and how they stay on top of it.
What's coming on the open-source front of Remote. 
The challenges Remote faces when employing people from different countries. 
The strangest laws Tobi and Cassidy have come across internationally. 
Why Cassidy enjoyed the well-practiced onboarding aspects of Remote, and the company values Tobi most appreciates.
Tobi’s secret role in the formation of Remote!
The people Tobi and Cassidy see moving into Elixir and which skills benefit them the most. 
Why Tobi's GitHub picture has a rabbit and his favorite game. 
Cassidy’s passion for mechanical keyboards!
Book club recommendations: the books you should be looking out for, and why!
Links Mentioned in Today’s Episode:
Cassidy Williams on LinkedIn — https://www.linkedin.com/in/cassidoo/
Cassidy Williams on TikTok — https://www.tiktok.com/@cassidoo
Cassidy Williams’ Newsletter — https://cassidoo.co/newsletter/
Tobi Pfeiffer on LinkedIn — https://www.linkedin.com/in/tobiaspfeiffer
Tobi Pfeiffer on GitHub — https://github.com/pragtob
Remote — https://remote.com/
Remote GitHub — https://github.com/remoteoss
Centered — https://www.centered.app/
Benchee — https://elixirschool.com/en/lessons/misc/benchee
SimpleCov — https://github.com/simplecov-ruby
Rails Girls Berlin — http://railsgirls.com/berlin
The Agile Samurai: How Agile Masters Deliver Great Software — https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers
Netlify — https://www.netlify.com/
Devs for Ukraine — https://www.devsforukraine.io/
Jose Valim — https://www.linkedin.com/in/josevalim
Marcelo Lebre — https://www.linkedin.com/in/marcelolebre
RubyConf — https://rubyconf.org/
Rust — https://rust.facepunch.com/
Go — https://go.dev/
Node.js — https://nodejs.org/en/
React — https://reactjs.org/
Astro — https://astro.build/
Supabase — https://supabase.com/
Thea 2: The Shattering — https://store.steampowered.com/app/606230/Thea2TheShattering
Mechanical Keyboard — https://en.wikipedia.org/wiki/ModelM_keyboard
QMK Firmware — https://docs.qmk.fm/#/
Brandon Sanderson — https://www.brandonsanderson.com/
Dark Matter — https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch
SmartLogic — https://smartlogic.io/
SmartLogic Jobs — https://smartlogic.io/about/jobs
 Special Guests: Cassidy Williams and Tobi Pfeiffer.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This double guest episode features Cassidy Williams, Head of Developer Experience and Education and Tobi Pfeiffer, Staff Engineer from Remote. This fast growing Elixir company provides HR support to clients who are hiring internationally. In this fascinating fast-paced conversation Cassidy and Tobi discuss how Remote works, the explosive growth it has seen and what Cassidy and Tobi have most enjoyed in their time there. Also, we learn more about Cassidy&#39;s content creation projects, why Tobi&#39;s handle is PragTob, and the strangest laws they have come across when working internationally. We also learn about Cassidy&#39;s love of mechanical keyboards and about Tobi&#39;s adorable pet rabbits. We wrap up the episode with some great book recommendations and what&#39;s upcoming at Remote.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Welcome to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer (Staff Engineer) at Remote.</li>
<li>Why Cassidy recommends the app Centered for achieving flow state. </li>
<li>How different types of music affect everyone’s concentration while coding. </li>
<li>Getting to know Tobi: Rails Girls community member, wearer of green and keyboard player. </li>
<li>Who Cassidy is: a dweeb who likes memes and how she found the world of coding. </li>
<li>What Remote is and how it works. </li>
<li>How Tobi came up with the handle PragTob!</li>
<li>The explosive growth Remote has seen, and how they stay on top of it.</li>
<li>What&#39;s coming on the open-source front of Remote. </li>
<li>The challenges Remote faces when employing people from different countries. </li>
<li>The strangest laws Tobi and Cassidy have come across internationally. </li>
<li>Why Cassidy enjoyed the well-practiced onboarding aspects of Remote, and the company values Tobi most appreciates.</li>
<li>Tobi’s secret role in the formation of Remote!</li>
<li>The people Tobi and Cassidy see moving into Elixir and which skills benefit them the most. </li>
<li>Why Tobi&#39;s GitHub picture has a rabbit and his favorite game. </li>
<li>Cassidy’s passion for mechanical keyboards!</li>
<li>Book club recommendations: the books you should be looking out for, and why!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Cassidy Williams on LinkedIn — <a href="https://www.linkedin.com/in/cassidoo/" rel="nofollow">https://www.linkedin.com/in/cassidoo/</a><br>
Cassidy Williams on TikTok — <a href="https://www.tiktok.com/@cassidoo" rel="nofollow">https://www.tiktok.com/@cassidoo</a><br>
Cassidy Williams’ Newsletter — <a href="https://cassidoo.co/newsletter/" rel="nofollow">https://cassidoo.co/newsletter/</a><br>
Tobi Pfeiffer on LinkedIn — <a href="https://www.linkedin.com/in/tobiaspfeiffer" rel="nofollow">https://www.linkedin.com/in/tobiaspfeiffer</a><br>
Tobi Pfeiffer on GitHub — <a href="https://github.com/pragtob" rel="nofollow">https://github.com/pragtob</a><br>
Remote — <a href="https://remote.com/" rel="nofollow">https://remote.com/</a><br>
Remote GitHub — <a href="https://github.com/remoteoss" rel="nofollow">https://github.com/remoteoss</a><br>
Centered — <a href="https://www.centered.app/" rel="nofollow">https://www.centered.app/</a><br>
Benchee — <a href="https://elixirschool.com/en/lessons/misc/benchee" rel="nofollow">https://elixirschool.com/en/lessons/misc/benchee</a><br>
SimpleCov — <a href="https://github.com/simplecov-ruby" rel="nofollow">https://github.com/simplecov-ruby</a><br>
Rails Girls Berlin — <a href="http://railsgirls.com/berlin" rel="nofollow">http://railsgirls.com/berlin</a><br>
The Agile Samurai: How Agile Masters Deliver Great Software — <a href="https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers" rel="nofollow">https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers</a><br>
Netlify — <a href="https://www.netlify.com/" rel="nofollow">https://www.netlify.com/</a><br>
Devs for Ukraine — <a href="https://www.devsforukraine.io/" rel="nofollow">https://www.devsforukraine.io/</a><br>
Jose Valim — <a href="https://www.linkedin.com/in/josevalim" rel="nofollow">https://www.linkedin.com/in/josevalim</a><br>
Marcelo Lebre — <a href="https://www.linkedin.com/in/marcelolebre" rel="nofollow">https://www.linkedin.com/in/marcelolebre</a><br>
RubyConf — <a href="https://rubyconf.org/" rel="nofollow">https://rubyconf.org/</a><br>
Rust — <a href="https://rust.facepunch.com/" rel="nofollow">https://rust.facepunch.com/</a><br>
Go — <a href="https://go.dev/" rel="nofollow">https://go.dev/</a><br>
Node.js — <a href="https://nodejs.org/en/" rel="nofollow">https://nodejs.org/en/</a><br>
React — <a href="https://reactjs.org/" rel="nofollow">https://reactjs.org/</a><br>
Astro — <a href="https://astro.build/" rel="nofollow">https://astro.build/</a><br>
Supabase — <a href="https://supabase.com/" rel="nofollow">https://supabase.com/</a><br>
Thea 2: The Shattering — <a href="https://store.steampowered.com/app/606230/Thea_2_The_Shattering" rel="nofollow">https://store.steampowered.com/app/606230/Thea_2_The_Shattering</a><br>
Mechanical Keyboard — <a href="https://en.wikipedia.org/wiki/Model_M_keyboard" rel="nofollow">https://en.wikipedia.org/wiki/Model_M_keyboard</a><br>
QMK Firmware — <a href="https://docs.qmk.fm/#/" rel="nofollow">https://docs.qmk.fm/#/</a><br>
Brandon Sanderson — <a href="https://www.brandonsanderson.com/" rel="nofollow">https://www.brandonsanderson.com/</a><br>
Dark Matter — <a href="https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch" rel="nofollow">https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
SmartLogic Jobs — <a href="https://smartlogic.io/about/jobs" rel="nofollow">https://smartlogic.io/about/jobs</a></p><p>Special Guests: Cassidy Williams and Tobi Pfeiffer.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This double guest episode features Cassidy Williams, Head of Developer Experience and Education and Tobi Pfeiffer, Staff Engineer from Remote. This fast growing Elixir company provides HR support to clients who are hiring internationally. In this fascinating fast-paced conversation Cassidy and Tobi discuss how Remote works, the explosive growth it has seen and what Cassidy and Tobi have most enjoyed in their time there. Also, we learn more about Cassidy&#39;s content creation projects, why Tobi&#39;s handle is PragTob, and the strangest laws they have come across when working internationally. We also learn about Cassidy&#39;s love of mechanical keyboards and about Tobi&#39;s adorable pet rabbits. We wrap up the episode with some great book recommendations and what&#39;s upcoming at Remote.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Welcome to Cassidy Williams (Head of Developer Experience and Education) and Tobi Pfeiffer (Staff Engineer) at Remote.</li>
<li>Why Cassidy recommends the app Centered for achieving flow state. </li>
<li>How different types of music affect everyone’s concentration while coding. </li>
<li>Getting to know Tobi: Rails Girls community member, wearer of green and keyboard player. </li>
<li>Who Cassidy is: a dweeb who likes memes and how she found the world of coding. </li>
<li>What Remote is and how it works. </li>
<li>How Tobi came up with the handle PragTob!</li>
<li>The explosive growth Remote has seen, and how they stay on top of it.</li>
<li>What&#39;s coming on the open-source front of Remote. </li>
<li>The challenges Remote faces when employing people from different countries. </li>
<li>The strangest laws Tobi and Cassidy have come across internationally. </li>
<li>Why Cassidy enjoyed the well-practiced onboarding aspects of Remote, and the company values Tobi most appreciates.</li>
<li>Tobi’s secret role in the formation of Remote!</li>
<li>The people Tobi and Cassidy see moving into Elixir and which skills benefit them the most. </li>
<li>Why Tobi&#39;s GitHub picture has a rabbit and his favorite game. </li>
<li>Cassidy’s passion for mechanical keyboards!</li>
<li>Book club recommendations: the books you should be looking out for, and why!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Cassidy Williams on LinkedIn — <a href="https://www.linkedin.com/in/cassidoo/" rel="nofollow">https://www.linkedin.com/in/cassidoo/</a><br>
Cassidy Williams on TikTok — <a href="https://www.tiktok.com/@cassidoo" rel="nofollow">https://www.tiktok.com/@cassidoo</a><br>
Cassidy Williams’ Newsletter — <a href="https://cassidoo.co/newsletter/" rel="nofollow">https://cassidoo.co/newsletter/</a><br>
Tobi Pfeiffer on LinkedIn — <a href="https://www.linkedin.com/in/tobiaspfeiffer" rel="nofollow">https://www.linkedin.com/in/tobiaspfeiffer</a><br>
Tobi Pfeiffer on GitHub — <a href="https://github.com/pragtob" rel="nofollow">https://github.com/pragtob</a><br>
Remote — <a href="https://remote.com/" rel="nofollow">https://remote.com/</a><br>
Remote GitHub — <a href="https://github.com/remoteoss" rel="nofollow">https://github.com/remoteoss</a><br>
Centered — <a href="https://www.centered.app/" rel="nofollow">https://www.centered.app/</a><br>
Benchee — <a href="https://elixirschool.com/en/lessons/misc/benchee" rel="nofollow">https://elixirschool.com/en/lessons/misc/benchee</a><br>
SimpleCov — <a href="https://github.com/simplecov-ruby" rel="nofollow">https://github.com/simplecov-ruby</a><br>
Rails Girls Berlin — <a href="http://railsgirls.com/berlin" rel="nofollow">http://railsgirls.com/berlin</a><br>
The Agile Samurai: How Agile Masters Deliver Great Software — <a href="https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers" rel="nofollow">https://www.amazon.com/Agile-Samurai-Software-Pragmatic-Programmers</a><br>
Netlify — <a href="https://www.netlify.com/" rel="nofollow">https://www.netlify.com/</a><br>
Devs for Ukraine — <a href="https://www.devsforukraine.io/" rel="nofollow">https://www.devsforukraine.io/</a><br>
Jose Valim — <a href="https://www.linkedin.com/in/josevalim" rel="nofollow">https://www.linkedin.com/in/josevalim</a><br>
Marcelo Lebre — <a href="https://www.linkedin.com/in/marcelolebre" rel="nofollow">https://www.linkedin.com/in/marcelolebre</a><br>
RubyConf — <a href="https://rubyconf.org/" rel="nofollow">https://rubyconf.org/</a><br>
Rust — <a href="https://rust.facepunch.com/" rel="nofollow">https://rust.facepunch.com/</a><br>
Go — <a href="https://go.dev/" rel="nofollow">https://go.dev/</a><br>
Node.js — <a href="https://nodejs.org/en/" rel="nofollow">https://nodejs.org/en/</a><br>
React — <a href="https://reactjs.org/" rel="nofollow">https://reactjs.org/</a><br>
Astro — <a href="https://astro.build/" rel="nofollow">https://astro.build/</a><br>
Supabase — <a href="https://supabase.com/" rel="nofollow">https://supabase.com/</a><br>
Thea 2: The Shattering — <a href="https://store.steampowered.com/app/606230/Thea_2_The_Shattering" rel="nofollow">https://store.steampowered.com/app/606230/Thea_2_The_Shattering</a><br>
Mechanical Keyboard — <a href="https://en.wikipedia.org/wiki/Model_M_keyboard" rel="nofollow">https://en.wikipedia.org/wiki/Model_M_keyboard</a><br>
QMK Firmware — <a href="https://docs.qmk.fm/#/" rel="nofollow">https://docs.qmk.fm/#/</a><br>
Brandon Sanderson — <a href="https://www.brandonsanderson.com/" rel="nofollow">https://www.brandonsanderson.com/</a><br>
Dark Matter — <a href="https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch" rel="nofollow">https://www.amazon.com/Dark-Matter-Novel-Blake-Crouch</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
SmartLogic Jobs — <a href="https://smartlogic.io/about/jobs" rel="nofollow">https://smartlogic.io/about/jobs</a></p><p>Special Guests: Cassidy Williams and Tobi Pfeiffer.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Devon Estes on The Power of Functional Programming</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e2-estes</link>
      <guid isPermaLink="false">95a396ef-84bd-43e0-b0ae-dc8276917eb9</guid>
      <pubDate>Thu, 21 Apr 2022 08:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/95a396ef-84bd-43e0-b0ae-dc8276917eb9.mp3" length="46293746" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>For today's episode we invite back Devon Estes, who now leads the third-party integration team at Remote. In this conversation, Devon tells us about the ins and outs of working for an enormous international Elixir based company, and explains why functional programming is easier to use than any other programming type.</itunes:subtitle>
      <itunes:duration>48:07</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/95a396ef-84bd-43e0-b0ae-dc8276917eb9/cover.jpg" />
      <description>Today’s guest is Devon Estes, who leads the third-party integration team at Remote, a company that uses technology to make it easier for other companies to hire remote employees (not contractors, actual employees) from over 100 countries across the world. Prior to working at Remote (which he loves, as you'll hear today), Devon was a freelancer and avid public speaker, and some of his talks from many years ago are still relevant today. In this conversation, Devon explains why functional programming is easier to use than any other programming type, and how the only thing holding you back from becoming a master is your desire to learn! 
Key Points From This Episode:
Guest host Dan Ivovich explains what prompted him to come up with the theme for this season; Elixir in a Polyglot Environment.
A brief rundown of Devon’s daily life.
Content that Devon covers in the talks that he gives these days.
Devon explains what his role at Remote (where he has worked since November 2021) involves.
A challenge that Devon has noticed other people facing when learning Elixir.
An overview of what Remote does, and the specific area that Devon’s team focuses on.
Functional programming versus object-oriented programming.
Devon shares an example of the power of Elixir.
The importance of libraries in making Elixir a viable language for data scientists.
Devon’s thoughts on mutation testing.
Why Devon doesn’t do a lot of open-source work anymore.
How Remote has grown over the past year and a half.
One of the things that Devon loves about working at Remote.
Links Mentioned in Today’s Episode:
Devon Estes on Twitter — https://twitter.com/devoncestes 
Devon Estes — https://devonestes.com/ 
Refactoring Elixir — https://www.youtube.com/watch?v=tJJMrtJEK1A 
Going Multi-Node with ExUnit— https://www.youtube.com/watch?v=elC_8PhWRTg 
Designing Elixir Systems with OTP — https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp 
ElixirConf EU — https://www.elixirconf.eu/ 
Remote — http://remote.com/ 
SmartLogic — https://smartlogic.io/ 
Jobs at SmartLogic — https://smartlogic.io/jobs
 Special Guest: Devon Estes.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today’s guest is Devon Estes, who leads the third-party integration team at Remote, a company that uses technology to make it easier for other companies to hire remote employees (not contractors, actual employees) from over 100 countries across the world. Prior to working at Remote (which he loves, as you&#39;ll hear today), Devon was a freelancer and avid public speaker, and some of his talks from many years ago are still relevant today. In this conversation, Devon explains why functional programming is easier to use than any other programming type, and how the only thing holding you back from becoming a master is your desire to learn! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Guest host Dan Ivovich explains what prompted him to come up with the theme for this season; Elixir in a Polyglot Environment.</li>
<li>A brief rundown of Devon’s daily life.</li>
<li>Content that Devon covers in the talks that he gives these days.</li>
<li>Devon explains what his role at Remote (where he has worked since November 2021) involves.</li>
<li>A challenge that Devon has noticed other people facing when learning Elixir.</li>
<li>An overview of what Remote does, and the specific area that Devon’s team focuses on.</li>
<li>Functional programming versus object-oriented programming.</li>
<li>Devon shares an example of the power of Elixir.</li>
<li>The importance of libraries in making Elixir a viable language for data scientists.</li>
<li>Devon’s thoughts on mutation testing.</li>
<li>Why Devon doesn’t do a lot of open-source work anymore.</li>
<li>How Remote has grown over the past year and a half.</li>
<li>One of the things that Devon loves about working at Remote.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Devon Estes on Twitter — <a href="https://twitter.com/devoncestes" rel="nofollow">https://twitter.com/devoncestes</a> <br>
Devon Estes — <a href="https://devonestes.com/" rel="nofollow">https://devonestes.com/</a> <br>
Refactoring Elixir — <a href="https://www.youtube.com/watch?v=tJJMrtJEK1A" rel="nofollow">https://www.youtube.com/watch?v=tJJMrtJEK1A</a> <br>
Going Multi-Node with ExUnit— <a href="https://www.youtube.com/watch?v=elC_8PhWRTg" rel="nofollow">https://www.youtube.com/watch?v=elC_8PhWRTg</a> <br>
Designing Elixir Systems with OTP — <a href="https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp" rel="nofollow">https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp</a> <br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a> <br>
Remote — <a href="http://remote.com/" rel="nofollow">http://remote.com/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jobs at SmartLogic — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Devon Estes.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today’s guest is Devon Estes, who leads the third-party integration team at Remote, a company that uses technology to make it easier for other companies to hire remote employees (not contractors, actual employees) from over 100 countries across the world. Prior to working at Remote (which he loves, as you&#39;ll hear today), Devon was a freelancer and avid public speaker, and some of his talks from many years ago are still relevant today. In this conversation, Devon explains why functional programming is easier to use than any other programming type, and how the only thing holding you back from becoming a master is your desire to learn! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Guest host Dan Ivovich explains what prompted him to come up with the theme for this season; Elixir in a Polyglot Environment.</li>
<li>A brief rundown of Devon’s daily life.</li>
<li>Content that Devon covers in the talks that he gives these days.</li>
<li>Devon explains what his role at Remote (where he has worked since November 2021) involves.</li>
<li>A challenge that Devon has noticed other people facing when learning Elixir.</li>
<li>An overview of what Remote does, and the specific area that Devon’s team focuses on.</li>
<li>Functional programming versus object-oriented programming.</li>
<li>Devon shares an example of the power of Elixir.</li>
<li>The importance of libraries in making Elixir a viable language for data scientists.</li>
<li>Devon’s thoughts on mutation testing.</li>
<li>Why Devon doesn’t do a lot of open-source work anymore.</li>
<li>How Remote has grown over the past year and a half.</li>
<li>One of the things that Devon loves about working at Remote.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Devon Estes on Twitter — <a href="https://twitter.com/devoncestes" rel="nofollow">https://twitter.com/devoncestes</a> <br>
Devon Estes — <a href="https://devonestes.com/" rel="nofollow">https://devonestes.com/</a> <br>
Refactoring Elixir — <a href="https://www.youtube.com/watch?v=tJJMrtJEK1A" rel="nofollow">https://www.youtube.com/watch?v=tJJMrtJEK1A</a> <br>
Going Multi-Node with ExUnit— <a href="https://www.youtube.com/watch?v=elC_8PhWRTg" rel="nofollow">https://www.youtube.com/watch?v=elC_8PhWRTg</a> <br>
Designing Elixir Systems with OTP — <a href="https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp" rel="nofollow">https://www.goodreads.com/book/show/45159167-designing-elixir-systems-with-otp</a> <br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a> <br>
Remote — <a href="http://remote.com/" rel="nofollow">http://remote.com/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jobs at SmartLogic — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Devon Estes.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Miguel Cobá on Deploying in Elixir and Other Languages</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s8e1-coba</link>
      <guid isPermaLink="false">f4a94090-3527-4b5f-924e-beb55f9688c5</guid>
      <pubDate>Thu, 14 Apr 2022 08:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f4a94090-3527-4b5f-924e-beb55f9688c5.mp3" length="70267158" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>8</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>To kick off our season premiere, we are very happy to welcome Miguel Cobá to the show! Miguel currently works at Shore, and he gives us some great insight into the part that Elixir plays at the company (alongside other languages), and how this suits his particulars skillset and vision.</itunes:subtitle>
      <itunes:duration>48:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f4a94090-3527-4b5f-924e-beb55f9688c5/cover.jpg" />
      <description>Welcome to the new season of Elixir Wizards: Elixir in a Polyglot Environment. To get things going on this exciting and intriguing subject we are very happy to welcome Miguel Cobá! Miguel currently works at Shore, and he gives us some great insight into the part that Elixir plays at the company (alongside other languages), and how this suits his particulars skillset and vision. In this season, we want to consider important questions about reaching beyond the confines of the Elixir community, and how we can all learn from each other. Miguel is such a perfect guest to open this conversation, as he is fascinated by the way Elixir can fit into a network of knowledge and its deployment into other areas. In today's chat, we also get into the early days of Miguel's interest in programming, and how it took starting a job for him to really start learning. So, to hear all this and more, and to get a taste of a great season to come, be sure to tune in!
Key Points From This Episode:
Miguel's perspective on the importance of using Elixir alongside other languages.
The languages that Miguel has worked in, and currently uses. 
A look at the path that Miguel took into programming and the first language he used! 
Turning an interest into a career; Miguel's biggest periods of learning. 
Background and motivations for Miguel's book, 100 Elixir Tips. 
The book that Miguel wrote that aims to help developers to write their own books!
Constant learning and the passion that Miguel has for sharing this process with others through writing.  
Miguel shares some surprising parts of deployment in other languages. 
The combinations of languages that Miguel prefers.
An explanation of Elixir's strength for background or asynchronous tasks.
Why Miguel values the attitude above different language skills in a programmer.
Unpacking how Elixir fits into the polyglot environment at Shore. 
How Miguel feels about community building and the usefulness of Twitter. 
Miguel compares his favorite parts of Elixir and the things he feels it is missing. 
Where to find and connect with Miguel online!
Links Mentioned in Today’s Episode:
100 Elixir Tips — https://store.miguelcoba.com/l/100elixirtips
Deploying Elixir — https://blog.miguelcoba.com/deploying-elixir-ebook
Miguel Cobá on Twitter https://twitter.com/MiguelCoba_
Elm — https://elm-lang.org/
Miguel Cobá Blog https://blog.miguelcoba.com/
Gumroad — https://gumroad.com/
Hashnotes — https://www.hashnotes.app/
Shore — https://www.shore.com/en/
SmartLogic — https://smartlogic.io/ 
Jobs at SmartLogic – https://smartlogic.io/jobs Special Guest: Miguel Cobá.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the new season of Elixir Wizards: Elixir in a Polyglot Environment. To get things going on this exciting and intriguing subject we are very happy to welcome Miguel Cobá! Miguel currently works at Shore, and he gives us some great insight into the part that Elixir plays at the company (alongside other languages), and how this suits his particulars skillset and vision. In this season, we want to consider important questions about reaching beyond the confines of the Elixir community, and how we can all learn from each other. Miguel is such a perfect guest to open this conversation, as he is fascinated by the way Elixir can fit into a network of knowledge and its deployment into other areas. In today&#39;s chat, we also get into the early days of Miguel&#39;s interest in programming, and how it took starting a job for him to really start learning. So, to hear all this and more, and to get a taste of a great season to come, be sure to tune in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Miguel&#39;s perspective on the importance of using Elixir alongside other languages.</li>
<li>The languages that Miguel has worked in, and currently uses. </li>
<li>A look at the path that Miguel took into programming and the first language he used! </li>
<li>Turning an interest into a career; Miguel&#39;s biggest periods of learning. </li>
<li>Background and motivations for Miguel&#39;s book, 100 Elixir Tips. </li>
<li>The book that Miguel wrote that aims to help developers to write their own books!</li>
<li>Constant learning and the passion that Miguel has for sharing this process with others through writing.<br></li>
<li>Miguel shares some surprising parts of deployment in other languages. </li>
<li>The combinations of languages that Miguel prefers.</li>
<li>An explanation of Elixir&#39;s strength for background or asynchronous tasks.</li>
<li>Why Miguel values the attitude above different language skills in a programmer.</li>
<li>Unpacking how Elixir fits into the polyglot environment at Shore. </li>
<li>How Miguel feels about community building and the usefulness of Twitter. </li>
<li>Miguel compares his favorite parts of Elixir and the things he feels it is missing. </li>
<li>Where to find and connect with Miguel online!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>100 Elixir Tips — <a href="https://store.miguelcoba.com/l/100elixirtips" rel="nofollow">https://store.miguelcoba.com/l/100elixirtips</a><br>
Deploying Elixir — <a href="https://blog.miguelcoba.com/deploying-elixir-ebook" rel="nofollow">https://blog.miguelcoba.com/deploying-elixir-ebook</a><br>
Miguel Cobá on Twitter <a href="https://twitter.com/MiguelCoba_" rel="nofollow">https://twitter.com/MiguelCoba_</a><br>
Elm — <a href="https://elm-lang.org/" rel="nofollow">https://elm-lang.org/</a><br>
Miguel Cobá Blog <a href="https://blog.miguelcoba.com/" rel="nofollow">https://blog.miguelcoba.com/</a><br>
Gumroad — <a href="https://gumroad.com/" rel="nofollow">https://gumroad.com/</a><br>
Hashnotes — <a href="https://www.hashnotes.app/" rel="nofollow">https://www.hashnotes.app/</a><br>
Shore — <a href="https://www.shore.com/en/" rel="nofollow">https://www.shore.com/en/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jobs at SmartLogic – <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Miguel Cobá.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the new season of Elixir Wizards: Elixir in a Polyglot Environment. To get things going on this exciting and intriguing subject we are very happy to welcome Miguel Cobá! Miguel currently works at Shore, and he gives us some great insight into the part that Elixir plays at the company (alongside other languages), and how this suits his particulars skillset and vision. In this season, we want to consider important questions about reaching beyond the confines of the Elixir community, and how we can all learn from each other. Miguel is such a perfect guest to open this conversation, as he is fascinated by the way Elixir can fit into a network of knowledge and its deployment into other areas. In today&#39;s chat, we also get into the early days of Miguel&#39;s interest in programming, and how it took starting a job for him to really start learning. So, to hear all this and more, and to get a taste of a great season to come, be sure to tune in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Miguel&#39;s perspective on the importance of using Elixir alongside other languages.</li>
<li>The languages that Miguel has worked in, and currently uses. </li>
<li>A look at the path that Miguel took into programming and the first language he used! </li>
<li>Turning an interest into a career; Miguel&#39;s biggest periods of learning. </li>
<li>Background and motivations for Miguel&#39;s book, 100 Elixir Tips. </li>
<li>The book that Miguel wrote that aims to help developers to write their own books!</li>
<li>Constant learning and the passion that Miguel has for sharing this process with others through writing.<br></li>
<li>Miguel shares some surprising parts of deployment in other languages. </li>
<li>The combinations of languages that Miguel prefers.</li>
<li>An explanation of Elixir&#39;s strength for background or asynchronous tasks.</li>
<li>Why Miguel values the attitude above different language skills in a programmer.</li>
<li>Unpacking how Elixir fits into the polyglot environment at Shore. </li>
<li>How Miguel feels about community building and the usefulness of Twitter. </li>
<li>Miguel compares his favorite parts of Elixir and the things he feels it is missing. </li>
<li>Where to find and connect with Miguel online!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>100 Elixir Tips — <a href="https://store.miguelcoba.com/l/100elixirtips" rel="nofollow">https://store.miguelcoba.com/l/100elixirtips</a><br>
Deploying Elixir — <a href="https://blog.miguelcoba.com/deploying-elixir-ebook" rel="nofollow">https://blog.miguelcoba.com/deploying-elixir-ebook</a><br>
Miguel Cobá on Twitter <a href="https://twitter.com/MiguelCoba_" rel="nofollow">https://twitter.com/MiguelCoba_</a><br>
Elm — <a href="https://elm-lang.org/" rel="nofollow">https://elm-lang.org/</a><br>
Miguel Cobá Blog <a href="https://blog.miguelcoba.com/" rel="nofollow">https://blog.miguelcoba.com/</a><br>
Gumroad — <a href="https://gumroad.com/" rel="nofollow">https://gumroad.com/</a><br>
Hashnotes — <a href="https://www.hashnotes.app/" rel="nofollow">https://www.hashnotes.app/</a><br>
Shore — <a href="https://www.shore.com/en/" rel="nofollow">https://www.shore.com/en/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jobs at SmartLogic – <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a></p><p>Special Guest: Miguel Cobá.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Todd Resudek on the Impact of Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e12-resudek</link>
      <guid isPermaLink="false">8ddde7c8-d4df-4b6b-88dd-7ac7796534c1</guid>
      <pubDate>Thu, 03 Feb 2022 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8ddde7c8-d4df-4b6b-88dd-7ac7796534c1.mp3" length="81969207" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to the Season 7 finale! Today, we are joined by Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and speak about the impact of Elixir, as well as a variety of other topics almost entirely unrelated to programming! </itunes:subtitle>
      <itunes:duration>56:55</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8ddde7c8-d4df-4b6b-88dd-7ac7796534c1/cover.jpg" />
      <description>Welcome to the Season 7 finale! Today, we are joined by Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and speak about the impact of Elixir, as well as a variety of other topics almost entirely unrelated to programming! Todd is a reformed graphic designer that got his start in web development 15 years ago. He has made a career in front-end development, PHP, Rails, and Elixir. He is also a member of the Hex core team and, in his spare time, he tinkers with hardware projects. In today’s episode of Elixir Wizards, you’ll learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing, the formula for anticipating how many people will turn up at your event, and what trains have to do with the history of timezones. We also touch on Todd’s hopes for the future of Elixir, how Elixir has impacted him, both personally and professionally, and why he recommends learning Elixir as a backup language, plus so much more! Tune in today for a fun discussion with Todd Resudek!
**
Key Points From This Episode:**
The hilarious and sometimes tragic mispronunciation of our names.
Learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing.
Todd shares a bit about his background and his allegiance to Wisconsin football.
We discuss the formula for how many people to expect at your meetup (or wedding).
Some interesting history on timezones and how they relate to trains.
Dune memes, roller skating, a qualifier for couple skates, and more.
Todd shares his favorite Elixir Wizards episode from Season 7: Brooklyn Zelenka.
How Todd learned Elixir when he first started working at Weedmaps.
Why he suggests learning Elixir as a ‘backup language’ rather than a primary one.
His biggest hope for the future of Elixir: an even more diverse, welcoming community.
How a functional programming language like Elixir has impacted the way Todd works.
The personal impact the Elixir community has had for Todd by enabling new connections.
Find out why Alex’s dog, Bean, loved the test kitchen at their previous workplace.
Eric and Alex share how the impact of Elixir has changed for them throughout this season.
What all our children, human and animal, had for breakfast.
Links Mentioned in Today’s Episode:
Todd Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek/
Todd Resudek on Twitter — https://twitter.com/sprsmpl
Todd Resudek on GitHub — https://github.com/supersimple
Todd Resudek — https://supersimple.org/
Jackpocket — https://jackpocket.com/
EMPEX Conference — https://www.empex.co/
EMPEX MTN 2022 — https://www.empex.co/mtn
Alex’s Favorite Dune Meme — https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96
‘Brooklyn Zelenka and The Exciting World of Edge Computing’ — https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/
Toucan — https://www.toucan.events
Elixir Wizards |&gt; Conference — https://smartlogic.io/about/community/elixir-wizards-conference/
SmartLogic — https://smartlogic.io/ 
Audience Survey -- https://smr.tl/survey
 Special Guest: Todd Resudek.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the Season 7 finale! Today, we are joined by Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and speak about the impact of Elixir, as well as a variety of other topics almost entirely unrelated to programming! Todd is a reformed graphic designer that got his start in web development 15 years ago. He has made a career in front-end development, PHP, Rails, and Elixir. He is also a member of the Hex core team and, in his spare time, he tinkers with hardware projects. In today’s episode of Elixir Wizards, you’ll learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing, the formula for anticipating how many people will turn up at your event, and what trains have to do with the history of timezones. We also touch on Todd’s hopes for the future of Elixir, how Elixir has impacted him, both personally and professionally, and why he recommends learning Elixir as a backup language, plus so much more! Tune in today for a fun discussion with Todd Resudek!<br>
**<br>
Key Points From This Episode:**</p>

<ul>
<li>The hilarious and sometimes tragic mispronunciation of our names.</li>
<li>Learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing.</li>
<li>Todd shares a bit about his background and his allegiance to Wisconsin football.</li>
<li>We discuss the formula for how many people to expect at your meetup (or wedding).</li>
<li>Some interesting history on timezones and how they relate to trains.</li>
<li>Dune memes, roller skating, a qualifier for couple skates, and more.</li>
<li>Todd shares his favorite Elixir Wizards episode from Season 7: Brooklyn Zelenka.</li>
<li>How Todd learned Elixir when he first started working at Weedmaps.</li>
<li>Why he suggests learning Elixir as a ‘backup language’ rather than a primary one.</li>
<li>His biggest hope for the future of Elixir: an even more diverse, welcoming community.</li>
<li>How a functional programming language like Elixir has impacted the way Todd works.</li>
<li>The personal impact the Elixir community has had for Todd by enabling new connections.</li>
<li>Find out why Alex’s dog, Bean, loved the test kitchen at their previous workplace.</li>
<li>Eric and Alex share how the impact of Elixir has changed for them throughout this season.</li>
<li>What all our children, human and animal, had for breakfast.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Todd Resudek on GitHub — <a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a><br>
Todd Resudek — <a href="https://supersimple.org/" rel="nofollow">https://supersimple.org/</a><br>
Jackpocket — <a href="https://jackpocket.com/" rel="nofollow">https://jackpocket.com/</a><br>
EMPEX Conference — <a href="https://www.empex.co/" rel="nofollow">https://www.empex.co/</a><br>
EMPEX MTN 2022 — <a href="https://www.empex.co/mtn" rel="nofollow">https://www.empex.co/mtn</a><br>
Alex’s Favorite Dune Meme — <a href="https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96" rel="nofollow">https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96</a><br>
‘Brooklyn Zelenka and The Exciting World of Edge Computing’ — <a href="https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/</a><br>
Toucan — <a href="https://www.toucan.events" rel="nofollow">https://www.toucan.events</a><br>
Elixir Wizards |&gt; Conference — <a href="https://smartlogic.io/about/community/elixir-wizards-conference/" rel="nofollow">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the Season 7 finale! Today, we are joined by Todd Resudek, Staff Engineer at Jackpocket, to reflect on the past season and speak about the impact of Elixir, as well as a variety of other topics almost entirely unrelated to programming! Todd is a reformed graphic designer that got his start in web development 15 years ago. He has made a career in front-end development, PHP, Rails, and Elixir. He is also a member of the Hex core team and, in his spare time, he tinkers with hardware projects. In today’s episode of Elixir Wizards, you’ll learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing, the formula for anticipating how many people will turn up at your event, and what trains have to do with the history of timezones. We also touch on Todd’s hopes for the future of Elixir, how Elixir has impacted him, both personally and professionally, and why he recommends learning Elixir as a backup language, plus so much more! Tune in today for a fun discussion with Todd Resudek!<br>
**<br>
Key Points From This Episode:**</p>

<ul>
<li>The hilarious and sometimes tragic mispronunciation of our names.</li>
<li>Learn more about the 2022 EMPEX Elixir Mountain event that Todd is co-organizing.</li>
<li>Todd shares a bit about his background and his allegiance to Wisconsin football.</li>
<li>We discuss the formula for how many people to expect at your meetup (or wedding).</li>
<li>Some interesting history on timezones and how they relate to trains.</li>
<li>Dune memes, roller skating, a qualifier for couple skates, and more.</li>
<li>Todd shares his favorite Elixir Wizards episode from Season 7: Brooklyn Zelenka.</li>
<li>How Todd learned Elixir when he first started working at Weedmaps.</li>
<li>Why he suggests learning Elixir as a ‘backup language’ rather than a primary one.</li>
<li>His biggest hope for the future of Elixir: an even more diverse, welcoming community.</li>
<li>How a functional programming language like Elixir has impacted the way Todd works.</li>
<li>The personal impact the Elixir community has had for Todd by enabling new connections.</li>
<li>Find out why Alex’s dog, Bean, loved the test kitchen at their previous workplace.</li>
<li>Eric and Alex share how the impact of Elixir has changed for them throughout this season.</li>
<li>What all our children, human and animal, had for breakfast.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Todd Resudek on GitHub — <a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a><br>
Todd Resudek — <a href="https://supersimple.org/" rel="nofollow">https://supersimple.org/</a><br>
Jackpocket — <a href="https://jackpocket.com/" rel="nofollow">https://jackpocket.com/</a><br>
EMPEX Conference — <a href="https://www.empex.co/" rel="nofollow">https://www.empex.co/</a><br>
EMPEX MTN 2022 — <a href="https://www.empex.co/mtn" rel="nofollow">https://www.empex.co/mtn</a><br>
Alex’s Favorite Dune Meme — <a href="https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96" rel="nofollow">https://i.kym-cdn.com/photos/images/facebook/002/234/162/d96</a><br>
‘Brooklyn Zelenka and The Exciting World of Edge Computing’ — <a href="https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka/</a><br>
Toucan — <a href="https://www.toucan.events" rel="nofollow">https://www.toucan.events</a><br>
Elixir Wizards |&gt; Conference — <a href="https://smartlogic.io/about/community/elixir-wizards-conference/" rel="nofollow">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Arthi Radhakrishnan on the Value of Collaborative Learning for Software Engineers</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e11-arthi</link>
      <guid isPermaLink="false">d64b67ed-770e-44c1-8032-b2666cc84d48</guid>
      <pubDate>Thu, 27 Jan 2022 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d64b67ed-770e-44c1-8032-b2666cc84d48.mp3" length="65895213" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This week we welcome Arthi Radhakrishnan back to the show to discuss how Elixir and her career more broadly have shaped her perspectives on learning. We hear about what made her learning Elixir so enjoyable, the biggest paradigm shifts she needed to make, and she talks about the value of mentorship, pair programming, and working at a company that encourages learning on the job. </itunes:subtitle>
      <itunes:duration>45:33</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d64b67ed-770e-44c1-8032-b2666cc84d48/cover.jpg" />
      <description>This week we welcome Arthi Radhakrishnan back to the show to discuss how Elixir and her career more broadly have shaped her perspectives on learning. Arthi first got into programming as a child growing up in the Bay Area, constantly exposed to tech and tech culture. She remembers building websites using GeoCities in high school and learning about data structures and OOP in Java while in college before transitioning to Elixir during her current position as a backend engineer at Community. We hear about what made her learning so enjoyable, the biggest paradigm shifts she needed to make, and she talks about the value of mentorship, pair programming, and working at a company that encourages learning on the job. In today’s show, we also explore a realization that Arthi has come to at the end of her first decade as a software engineer: that effective learning requires a big dose of self-compassion. So, for all this and more, be sure to tune in today!
Key Points From This Episode:
Introducing Arthi and the work she does as a backend engineer for Community.
What it was like growing up in the Bay Area and how Arthi got into programming.
Going from building websites with GeoCities in high school to building a compiler in college.
The big role that Java and OOP played in Arthi’s experience of programming fundamentals.
Arthi’s experience of learning Elixir and having to shift away from an OOP paradigm.
Where Arthi is in her journey of learning Elixir and why she enjoys it so much.
How compelling it is to learn on the job and the value of companies that allow for this.
The impact that company culture has on job experiences and career trajectories.
Summer internships Arthi did in college and how they shaped her career goals.
Finding time to do personal learning and why Advent of Code is so helpful.
Why setting low expectations for yourself is a helpful paradigm for learning.
Exercising self-compassion while learning and how Arthi’s learning approach has evolved.
Why Arthi is so grateful that she has gotten to learn Elixir at Community specifically.
What good mentorship looks like to Arthi and why she loves pair programming.
How learning Elixir and the past 10 years have shaped Arthi’s sense of her needs.
Arthi’s thoughts on how Elixir will evolve in the next 10 years.
Links Mentioned in Today’s Episode:
Arthi Radhakrishnan — https://www.linkedin.com/in/arthiradhakrishnan/ 
Community — https://www.community.com/
Advent of Code — https://adventofcode.com/
SmartLogic — https://smartlogic.io/ 
Audience Survey -- https://smr.tl/survey
 Special Guest: Arthi Radhakrishnan.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week we welcome Arthi Radhakrishnan back to the show to discuss how Elixir and her career more broadly have shaped her perspectives on learning. Arthi first got into programming as a child growing up in the Bay Area, constantly exposed to tech and tech culture. She remembers building websites using GeoCities in high school and learning about data structures and OOP in Java while in college before transitioning to Elixir during her current position as a backend engineer at Community. We hear about what made her learning so enjoyable, the biggest paradigm shifts she needed to make, and she talks about the value of mentorship, pair programming, and working at a company that encourages learning on the job. In today’s show, we also explore a realization that Arthi has come to at the end of her first decade as a software engineer: that effective learning requires a big dose of self-compassion. So, for all this and more, be sure to tune in today!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Introducing Arthi and the work she does as a backend engineer for Community.</li>
<li>What it was like growing up in the Bay Area and how Arthi got into programming.</li>
<li>Going from building websites with GeoCities in high school to building a compiler in college.</li>
<li>The big role that Java and OOP played in Arthi’s experience of programming fundamentals.</li>
<li>Arthi’s experience of learning Elixir and having to shift away from an OOP paradigm.</li>
<li>Where Arthi is in her journey of learning Elixir and why she enjoys it so much.</li>
<li>How compelling it is to learn on the job and the value of companies that allow for this.</li>
<li>The impact that company culture has on job experiences and career trajectories.</li>
<li>Summer internships Arthi did in college and how they shaped her career goals.</li>
<li>Finding time to do personal learning and why Advent of Code is so helpful.</li>
<li>Why setting low expectations for yourself is a helpful paradigm for learning.</li>
<li>Exercising self-compassion while learning and how Arthi’s learning approach has evolved.</li>
<li>Why Arthi is so grateful that she has gotten to learn Elixir at Community specifically.</li>
<li>What good mentorship looks like to Arthi and why she loves pair programming.</li>
<li>How learning Elixir and the past 10 years have shaped Arthi’s sense of her needs.</li>
<li>Arthi’s thoughts on how Elixir will evolve in the next 10 years.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Arthi Radhakrishnan — <a href="https://www.linkedin.com/in/arthiradhakrishnan/" rel="nofollow">https://www.linkedin.com/in/arthiradhakrishnan/</a> <br>
Community — <a href="https://www.community.com/" rel="nofollow">https://www.community.com/</a><br>
Advent of Code — <a href="https://adventofcode.com/" rel="nofollow">https://adventofcode.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Arthi Radhakrishnan.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week we welcome Arthi Radhakrishnan back to the show to discuss how Elixir and her career more broadly have shaped her perspectives on learning. Arthi first got into programming as a child growing up in the Bay Area, constantly exposed to tech and tech culture. She remembers building websites using GeoCities in high school and learning about data structures and OOP in Java while in college before transitioning to Elixir during her current position as a backend engineer at Community. We hear about what made her learning so enjoyable, the biggest paradigm shifts she needed to make, and she talks about the value of mentorship, pair programming, and working at a company that encourages learning on the job. In today’s show, we also explore a realization that Arthi has come to at the end of her first decade as a software engineer: that effective learning requires a big dose of self-compassion. So, for all this and more, be sure to tune in today!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Introducing Arthi and the work she does as a backend engineer for Community.</li>
<li>What it was like growing up in the Bay Area and how Arthi got into programming.</li>
<li>Going from building websites with GeoCities in high school to building a compiler in college.</li>
<li>The big role that Java and OOP played in Arthi’s experience of programming fundamentals.</li>
<li>Arthi’s experience of learning Elixir and having to shift away from an OOP paradigm.</li>
<li>Where Arthi is in her journey of learning Elixir and why she enjoys it so much.</li>
<li>How compelling it is to learn on the job and the value of companies that allow for this.</li>
<li>The impact that company culture has on job experiences and career trajectories.</li>
<li>Summer internships Arthi did in college and how they shaped her career goals.</li>
<li>Finding time to do personal learning and why Advent of Code is so helpful.</li>
<li>Why setting low expectations for yourself is a helpful paradigm for learning.</li>
<li>Exercising self-compassion while learning and how Arthi’s learning approach has evolved.</li>
<li>Why Arthi is so grateful that she has gotten to learn Elixir at Community specifically.</li>
<li>What good mentorship looks like to Arthi and why she loves pair programming.</li>
<li>How learning Elixir and the past 10 years have shaped Arthi’s sense of her needs.</li>
<li>Arthi’s thoughts on how Elixir will evolve in the next 10 years.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Arthi Radhakrishnan — <a href="https://www.linkedin.com/in/arthiradhakrishnan/" rel="nofollow">https://www.linkedin.com/in/arthiradhakrishnan/</a> <br>
Community — <a href="https://www.community.com/" rel="nofollow">https://www.community.com/</a><br>
Advent of Code — <a href="https://adventofcode.com/" rel="nofollow">https://adventofcode.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Arthi Radhakrishnan.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Meryl Dakin on Changing Lanes and Switching Gears With Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e10-dakin</link>
      <guid isPermaLink="false">a9b73218-2d0c-4a6f-9bba-93d5c355db7a</guid>
      <pubDate>Thu, 20 Jan 2022 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a9b73218-2d0c-4a6f-9bba-93d5c355db7a.mp3" length="73947213" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we welcome software engineer Meryl Dakin to the show, who is currently employed by Knock. Meryl is here to help us continue our exploration of this season's theme of the impact of Elixir, and we get to hear about all how it has impacted her professional and personal life! </itunes:subtitle>
      <itunes:duration>51:20</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a9b73218-2d0c-4a6f-9bba-93d5c355db7a/cover.jpg" />
      <description>Today we welcome software engineer Meryl Dakin to the show, who is currently employed by Knock. Meryl is here to help us continue our exploration of this season's theme of the impact of Elixir, and we get to hear about all how it has impacted her professional and personal life! Our guest talks about her journey through the world of development and the different positions she has held before her current role. We also get into her recent stint as the emcee of ElixirConf alongside our other friend Sophie DeBenedetto! We talk about learning through teaching, encouraging more questions, and why Elixir has had such a positive impact on Meryl's approach to code more generally. Big takeaways from today's conversation include the way that learning a new language can alter one's career in multiple and unexpected ways, why the Elixir community can feel so safe and supportive, and who might get the most benefit from being exposed to Elixir at the right time. So, to hear it all from Meryl and our usual cast of characters, be sure to listen in!
Key Points From This Episode:
A quick update on Meryl and what she has been busy with lately. 
Meryl's experiences emceeing the recent ElixirConf! 
Unpacking what Knock does and who the company serves.  
How Elixir has been used at Knock and the great experience Meryl has had building with it. 
Meryl's learning curve with Elixir and the biggest developments in the space from her perspective. 
The most common advice that Meryl would offer to junior engineers!
Why teaching is often the best route to further learning; Meryl's reflections on her presentations.
The importance of asking questions and speaking up when you do not understand.
How Elixir shifted Meryl's way of thinking about programming: cleaner code and encapsulation. 
The different kinds of developers that might benefit from being introduced to Elixir.  
Thoughts on making Elixir more visible to the right people in the larger community.  
The personal impacts that Elixir has had on Meryl's life: meeting great people and finding an engaging and supportive community.  
When to consider using Knock and the initial offer for new clients.  
Where to go to find out more about Knock and whether it might be right for you!
Meryl shares her biggest hopes and dreams for the future of the Elixir community. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Meryl Dakin on Twitter — https://twitter.com/meryldakin
ElixirConf — https://www.elixirconf.com/
Netflix Christmas Universe — https://collider.com/netflix-christmas-universe-how-movies-connect-explained/
Flatiron School — https://flatironschool.com/
Frame.io — https://www.frame.io/
Knock — https://knock.app/
Knock on Twitter — https://twitter.com/knockdotcom
Knock Changelog — https://knock.app/changelog
Sophie DeBenedetto — https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto
The Flutter Apprentice Book  — https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2 
EMPEX  — https://www.empex.co/mtn
Programming Phoenix LiveView — https://pragprog.com/titles/liveview/programming-phoenix-liveview/
Twilio — https://www.twilio.com/
Audience Survey -- https://smr.tl/survey Special Guest: Meryl Dakin.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we welcome software engineer Meryl Dakin to the show, who is currently employed by Knock. Meryl is here to help us continue our exploration of this season&#39;s theme of the impact of Elixir, and we get to hear about all how it has impacted her professional and personal life! Our guest talks about her journey through the world of development and the different positions she has held before her current role. We also get into her recent stint as the emcee of ElixirConf alongside our other friend Sophie DeBenedetto! We talk about learning through teaching, encouraging more questions, and why Elixir has had such a positive impact on Meryl&#39;s approach to code more generally. Big takeaways from today&#39;s conversation include the way that learning a new language can alter one&#39;s career in multiple and unexpected ways, why the Elixir community can feel so safe and supportive, and who might get the most benefit from being exposed to Elixir at the right time. So, to hear it all from Meryl and our usual cast of characters, be sure to listen in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A quick update on Meryl and what she has been busy with lately. </li>
<li>Meryl&#39;s experiences emceeing the recent ElixirConf! </li>
<li>Unpacking what Knock does and who the company serves.<br></li>
<li>How Elixir has been used at Knock and the great experience Meryl has had building with it. </li>
<li>Meryl&#39;s learning curve with Elixir and the biggest developments in the space from her perspective. </li>
<li>The most common advice that Meryl would offer to junior engineers!</li>
<li>Why teaching is often the best route to further learning; Meryl&#39;s reflections on her presentations.</li>
<li>The importance of asking questions and speaking up when you do not understand.</li>
<li>How Elixir shifted Meryl&#39;s way of thinking about programming: cleaner code and encapsulation. </li>
<li>The different kinds of developers that might benefit from being introduced to Elixir.<br></li>
<li>Thoughts on making Elixir more visible to the right people in the larger community.<br></li>
<li>The personal impacts that Elixir has had on Meryl&#39;s life: meeting great people and finding an engaging and supportive community.<br></li>
<li>When to consider using Knock and the initial offer for new clients.<br></li>
<li>Where to go to find out more about Knock and whether it might be right for you!</li>
<li>Meryl shares her biggest hopes and dreams for the future of the Elixir community. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Meryl Dakin on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
ElixirConf — <a href="https://www.elixirconf.com/" rel="nofollow">https://www.elixirconf.com/</a><br>
Netflix Christmas Universe — <a href="https://collider.com/netflix-christmas-universe-how-movies-connect-explained/" rel="nofollow">https://collider.com/netflix-christmas-universe-how-movies-connect-explained/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Frame.io — <a href="https://www.frame.io/" rel="nofollow">https://www.frame.io/</a><br>
Knock — <a href="https://knock.app/" rel="nofollow">https://knock.app/</a><br>
Knock on Twitter — <a href="https://twitter.com/knockdotcom" rel="nofollow">https://twitter.com/knockdotcom</a><br>
Knock Changelog — <a href="https://knock.app/changelog" rel="nofollow">https://knock.app/changelog</a><br>
Sophie DeBenedetto — <a href="https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto" rel="nofollow">https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto</a><br>
The Flutter Apprentice Book  — <a href="https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2" rel="nofollow">https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2</a> <br>
EMPEX  — <a href="https://www.empex.co/mtn" rel="nofollow">https://www.empex.co/mtn</a><br>
Programming Phoenix LiveView — <a href="https://pragprog.com/titles/liveview/programming-phoenix-liveview/" rel="nofollow">https://pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>
Twilio — <a href="https://www.twilio.com/" rel="nofollow">https://www.twilio.com/</a><br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Meryl Dakin.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we welcome software engineer Meryl Dakin to the show, who is currently employed by Knock. Meryl is here to help us continue our exploration of this season&#39;s theme of the impact of Elixir, and we get to hear about all how it has impacted her professional and personal life! Our guest talks about her journey through the world of development and the different positions she has held before her current role. We also get into her recent stint as the emcee of ElixirConf alongside our other friend Sophie DeBenedetto! We talk about learning through teaching, encouraging more questions, and why Elixir has had such a positive impact on Meryl&#39;s approach to code more generally. Big takeaways from today&#39;s conversation include the way that learning a new language can alter one&#39;s career in multiple and unexpected ways, why the Elixir community can feel so safe and supportive, and who might get the most benefit from being exposed to Elixir at the right time. So, to hear it all from Meryl and our usual cast of characters, be sure to listen in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A quick update on Meryl and what she has been busy with lately. </li>
<li>Meryl&#39;s experiences emceeing the recent ElixirConf! </li>
<li>Unpacking what Knock does and who the company serves.<br></li>
<li>How Elixir has been used at Knock and the great experience Meryl has had building with it. </li>
<li>Meryl&#39;s learning curve with Elixir and the biggest developments in the space from her perspective. </li>
<li>The most common advice that Meryl would offer to junior engineers!</li>
<li>Why teaching is often the best route to further learning; Meryl&#39;s reflections on her presentations.</li>
<li>The importance of asking questions and speaking up when you do not understand.</li>
<li>How Elixir shifted Meryl&#39;s way of thinking about programming: cleaner code and encapsulation. </li>
<li>The different kinds of developers that might benefit from being introduced to Elixir.<br></li>
<li>Thoughts on making Elixir more visible to the right people in the larger community.<br></li>
<li>The personal impacts that Elixir has had on Meryl&#39;s life: meeting great people and finding an engaging and supportive community.<br></li>
<li>When to consider using Knock and the initial offer for new clients.<br></li>
<li>Where to go to find out more about Knock and whether it might be right for you!</li>
<li>Meryl shares her biggest hopes and dreams for the future of the Elixir community. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Meryl Dakin on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
ElixirConf — <a href="https://www.elixirconf.com/" rel="nofollow">https://www.elixirconf.com/</a><br>
Netflix Christmas Universe — <a href="https://collider.com/netflix-christmas-universe-how-movies-connect-explained/" rel="nofollow">https://collider.com/netflix-christmas-universe-how-movies-connect-explained/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Frame.io — <a href="https://www.frame.io/" rel="nofollow">https://www.frame.io/</a><br>
Knock — <a href="https://knock.app/" rel="nofollow">https://knock.app/</a><br>
Knock on Twitter — <a href="https://twitter.com/knockdotcom" rel="nofollow">https://twitter.com/knockdotcom</a><br>
Knock Changelog — <a href="https://knock.app/changelog" rel="nofollow">https://knock.app/changelog</a><br>
Sophie DeBenedetto — <a href="https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto" rel="nofollow">https://www.amazon.com/Books-Sophie-DeBenedetto/s?rh=n%3A283155%2Cp_27%3ASophie+DeBenedetto</a><br>
The Flutter Apprentice Book  — <a href="https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2" rel="nofollow">https://www.raywenderlich.com/books/flutter-apprentice/v1.0.ea2</a> <br>
EMPEX  — <a href="https://www.empex.co/mtn" rel="nofollow">https://www.empex.co/mtn</a><br>
Programming Phoenix LiveView — <a href="https://pragprog.com/titles/liveview/programming-phoenix-liveview/" rel="nofollow">https://pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>
Twilio — <a href="https://www.twilio.com/" rel="nofollow">https://www.twilio.com/</a><br>
Audience Survey -- <a href="https://smr.tl/survey" rel="nofollow">https://smr.tl/survey</a></p><p>Special Guest: Meryl Dakin.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brooklyn Zelenka and The Exciting World of Edge Computing </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e9-zelenka</link>
      <guid isPermaLink="false">66261581-0dd2-4380-8280-495736a41540</guid>
      <pubDate>Thu, 13 Jan 2022 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/66261581-0dd2-4380-8280-495736a41540.mp3" length="67290128" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We are very excited to welcome Brooklyn Zelenka back to the podcast to talk about her work at Fission and the ever-expanding frontier of edge computing!</itunes:subtitle>
      <itunes:duration>46:05</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/66261581-0dd2-4380-8280-495736a41540/cover.jpg" />
      <description>We are very excited to welcome Brooklyn Zelenka back to the podcast to talk about her work at Fission and the ever-expanding frontier of edge computing! Brooklyn is a co-founder and CTO at Fission and she gives us some insight into the focus of the company's applied research. We hear from our guest about the projects she has been most excited about recently and she even talks about her newfound passion for fermentation! She does a great job of explaining why edge computing is potentially so revolutionary and some of the hurdles that are yet to be overcome on the way to reaching this potential. We discuss security and trust, tech equity, broad adoption, and much more before getting into some more Elixir-focused questions. Our guest shares how Elixir and functional programming have inspired her in different ways, as well as her perspective on some of the weaknesses of Elixir. At the end of our chat, Brooklyn gives some great resource recommendations for anyone wanting to learn more about edge computing, so make sure to stay tuned for that!
Key Points From This Episode:
What Brooklyn has been keeping busy with recently. 
A little about Fission and what their research focuses on.
Tech and societal trends through the pandemic and Brooklyn's new interest in fermentation.
Brooklyn unpacks the main mission of edge computing and some of the biggest challenges. 
Decisions around what is localized and what is stored remotely in edge computing. 
Addressing the issue of trust and safeguarding against data breaches. 
The influence of functional programming in Brooklyn's work on edge applications.  
Some information on Brooklyn's talk at ElixirConf this year titled 'The Jump to Hyperspace.' 
Our guest explains the concept of antientropy and its associated techniques. 
Thoughts on the problem of tech equity and how this might be tackled. 
Gaining popular trust for new technologies and their inevitable faults.
Brooklyn's feelings about Haskell, and the inspiration she takes from it into her work with Elixir. 
The impact that Elixir has on Brooklyn's work in a broader sense.
The route that Brooklyn took into the functional programming world. 
Brooklyn weighs in on the questions of Elixir's downsides. 
Resources recommendations for anyone looking to get more acquainted with work in edge computing.  
Where to find and connect with Brooklyn online!   
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Brooklyn Zelenka — https://twitter.com/expede?lang=en
Fission — https://fission.codes/
Brooklyn Zelenka at ElixirConf 2021— https://www.youtube.com/watch?v=ogOEEKWxevo
Designing Data-Intensive Applications — https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB
Brooklyn's Tepache Fermentation Recipe — https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf
Witchcraft Suite of Libraries in Haskell/Elixir — https://hexdocs.pm/witchcraft/readme.html
Proto School — https://proto.school/
Fission Discord — https://discord.gg/zAQBDEq
Fission Discourse — https://talk.fission.codes/
Fission on Luma — https://lu.ma/community/com-XuESjPQQHjh43pc
FissionCodes Twitter — https://twitter.com/FISSIONcodes
Witchcraft Suite — https://github.com/witchcrafters
 Special Guest: Brooklyn Zelenka.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We are very excited to welcome Brooklyn Zelenka back to the podcast to talk about her work at Fission and the ever-expanding frontier of edge computing! Brooklyn is a co-founder and CTO at Fission and she gives us some insight into the focus of the company&#39;s applied research. We hear from our guest about the projects she has been most excited about recently and she even talks about her newfound passion for fermentation! She does a great job of explaining why edge computing is potentially so revolutionary and some of the hurdles that are yet to be overcome on the way to reaching this potential. We discuss security and trust, tech equity, broad adoption, and much more before getting into some more Elixir-focused questions. Our guest shares how Elixir and functional programming have inspired her in different ways, as well as her perspective on some of the weaknesses of Elixir. At the end of our chat, Brooklyn gives some great resource recommendations for anyone wanting to learn more about edge computing, so make sure to stay tuned for that!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>What Brooklyn has been keeping busy with recently. </li>
<li>A little about Fission and what their research focuses on.</li>
<li>Tech and societal trends through the pandemic and Brooklyn&#39;s new interest in fermentation.</li>
<li>Brooklyn unpacks the main mission of edge computing and some of the biggest challenges. </li>
<li>Decisions around what is localized and what is stored remotely in edge computing. </li>
<li>Addressing the issue of trust and safeguarding against data breaches. </li>
<li>The influence of functional programming in Brooklyn&#39;s work on edge applications.<br></li>
<li>Some information on Brooklyn&#39;s talk at ElixirConf this year titled &#39;The Jump to Hyperspace.&#39; </li>
<li>Our guest explains the concept of antientropy and its associated techniques. </li>
<li>Thoughts on the problem of tech equity and how this might be tackled. </li>
<li>Gaining popular trust for new technologies and their inevitable faults.</li>
<li>Brooklyn&#39;s feelings about Haskell, and the inspiration she takes from it into her work with Elixir. </li>
<li>The impact that Elixir has on Brooklyn&#39;s work in a broader sense.</li>
<li>The route that Brooklyn took into the functional programming world. </li>
<li>Brooklyn weighs in on the questions of Elixir&#39;s downsides. </li>
<li>Resources recommendations for anyone looking to get more acquainted with work in edge computing.<br></li>
<li>Where to find and connect with Brooklyn online!<br></li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Brooklyn Zelenka — <a href="https://twitter.com/expede?lang=en" rel="nofollow">https://twitter.com/expede?lang=en</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Brooklyn Zelenka at ElixirConf 2021— <a href="https://www.youtube.com/watch?v=ogOEEKWxevo" rel="nofollow">https://www.youtube.com/watch?v=ogOEEKWxevo</a><br>
Designing Data-Intensive Applications — <a href="https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB" rel="nofollow">https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB</a><br>
Brooklyn&#39;s Tepache Fermentation Recipe — <a href="https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf" rel="nofollow">https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf</a><br>
Witchcraft Suite of Libraries in Haskell/Elixir — <a href="https://hexdocs.pm/witchcraft/readme.html" rel="nofollow">https://hexdocs.pm/witchcraft/readme.html</a><br>
Proto School — <a href="https://proto.school/" rel="nofollow">https://proto.school/</a><br>
Fission Discord — <a href="https://discord.gg/zAQBDEq" rel="nofollow">https://discord.gg/zAQBDEq</a><br>
Fission Discourse — <a href="https://talk.fission.codes/" rel="nofollow">https://talk.fission.codes/</a><br>
Fission on Luma — <a href="https://lu.ma/community/com-XuESjPQQHjh43pc" rel="nofollow">https://lu.ma/community/com-XuESjPQQHjh43pc</a><br>
FissionCodes Twitter — <a href="https://twitter.com/FISSIONcodes" rel="nofollow">https://twitter.com/FISSIONcodes</a><br>
Witchcraft Suite — <a href="https://github.com/witchcrafters" rel="nofollow">https://github.com/witchcrafters</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We are very excited to welcome Brooklyn Zelenka back to the podcast to talk about her work at Fission and the ever-expanding frontier of edge computing! Brooklyn is a co-founder and CTO at Fission and she gives us some insight into the focus of the company&#39;s applied research. We hear from our guest about the projects she has been most excited about recently and she even talks about her newfound passion for fermentation! She does a great job of explaining why edge computing is potentially so revolutionary and some of the hurdles that are yet to be overcome on the way to reaching this potential. We discuss security and trust, tech equity, broad adoption, and much more before getting into some more Elixir-focused questions. Our guest shares how Elixir and functional programming have inspired her in different ways, as well as her perspective on some of the weaknesses of Elixir. At the end of our chat, Brooklyn gives some great resource recommendations for anyone wanting to learn more about edge computing, so make sure to stay tuned for that!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>What Brooklyn has been keeping busy with recently. </li>
<li>A little about Fission and what their research focuses on.</li>
<li>Tech and societal trends through the pandemic and Brooklyn&#39;s new interest in fermentation.</li>
<li>Brooklyn unpacks the main mission of edge computing and some of the biggest challenges. </li>
<li>Decisions around what is localized and what is stored remotely in edge computing. </li>
<li>Addressing the issue of trust and safeguarding against data breaches. </li>
<li>The influence of functional programming in Brooklyn&#39;s work on edge applications.<br></li>
<li>Some information on Brooklyn&#39;s talk at ElixirConf this year titled &#39;The Jump to Hyperspace.&#39; </li>
<li>Our guest explains the concept of antientropy and its associated techniques. </li>
<li>Thoughts on the problem of tech equity and how this might be tackled. </li>
<li>Gaining popular trust for new technologies and their inevitable faults.</li>
<li>Brooklyn&#39;s feelings about Haskell, and the inspiration she takes from it into her work with Elixir. </li>
<li>The impact that Elixir has on Brooklyn&#39;s work in a broader sense.</li>
<li>The route that Brooklyn took into the functional programming world. </li>
<li>Brooklyn weighs in on the questions of Elixir&#39;s downsides. </li>
<li>Resources recommendations for anyone looking to get more acquainted with work in edge computing.<br></li>
<li>Where to find and connect with Brooklyn online!<br></li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Brooklyn Zelenka — <a href="https://twitter.com/expede?lang=en" rel="nofollow">https://twitter.com/expede?lang=en</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Brooklyn Zelenka at ElixirConf 2021— <a href="https://www.youtube.com/watch?v=ogOEEKWxevo" rel="nofollow">https://www.youtube.com/watch?v=ogOEEKWxevo</a><br>
Designing Data-Intensive Applications — <a href="https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB" rel="nofollow">https://www.bookmall.co.za/products/designing-data-intensive-applications?gclid=Cj0KCQiA2ZCOBhDiARIsAMRfv9ITE1sFKIIcSwK6EGR04aW2RrFZphwrvDQxZekyhuPbEyuqKt6Td8QaApPqEALw_wcB</a><br>
Brooklyn&#39;s Tepache Fermentation Recipe — <a href="https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf" rel="nofollow">https://ipfs.io/ipfs/bafybeiawn23o6prk4kdhv4cpbfylzr5g2fr22umhvbshf4rlksfrgjzpga/p/Tepache.pdf</a><br>
Witchcraft Suite of Libraries in Haskell/Elixir — <a href="https://hexdocs.pm/witchcraft/readme.html" rel="nofollow">https://hexdocs.pm/witchcraft/readme.html</a><br>
Proto School — <a href="https://proto.school/" rel="nofollow">https://proto.school/</a><br>
Fission Discord — <a href="https://discord.gg/zAQBDEq" rel="nofollow">https://discord.gg/zAQBDEq</a><br>
Fission Discourse — <a href="https://talk.fission.codes/" rel="nofollow">https://talk.fission.codes/</a><br>
Fission on Luma — <a href="https://lu.ma/community/com-XuESjPQQHjh43pc" rel="nofollow">https://lu.ma/community/com-XuESjPQQHjh43pc</a><br>
FissionCodes Twitter — <a href="https://twitter.com/FISSIONcodes" rel="nofollow">https://twitter.com/FISSIONcodes</a><br>
Witchcraft Suite — <a href="https://github.com/witchcrafters" rel="nofollow">https://github.com/witchcrafters</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sigu Magwa on the Elixir Community in Kenya</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e8-magwa</link>
      <guid isPermaLink="false">bb8d89d6-4176-4414-b0fe-8e569cff9408</guid>
      <pubDate>Thu, 06 Jan 2022 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bb8d89d6-4176-4414-b0fe-8e569cff9408.mp3" length="73038376" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In this episode we are joined by Podii creator and founder of Elixir Kenya Sigu Magwa about the African tech space, matatu buses, and his hopes for the future of the community.</itunes:subtitle>
      <itunes:duration>50:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bb8d89d6-4176-4414-b0fe-8e569cff9408/cover.jpg" />
      <description>We are always excited to have conversations about the growth of the Elixir community, and today we go truly global, welcoming Sigu Magwa to the podcast, who hails from Kenya! Sigu is currently traveling in the US and he fills us in on some of the highs and lows of his trip and why he is so excited to get home to his friends and family. From there, we get into some interesting information about Elixir Kenya and the growth of the meetup over the last couple of years. Sigu shares some insight into IoT in his country and what the general tech space is like right now over there, before opening up about his journey into programming and how he found his way into working with Elixir. We also get to talk about his company, Podii, and their first few years working with clients. Apart from all the tech talk, Sigu is kind enough to shed some light on Kenya's matatu buses, and what makes them so unique, a subject that was particularly captivating to our panel! Listeners can also expect to hear about the recent ElixirConf Africa, Sigu's thoughts on hiring young talent, and what he hopes to see in the next decade within the community. So to catch it all, be sure to listen in with us on Elixir Wizards!
Key Points From This Episode:
Sigu's trip to the US and the sights he has been seeing in different cities. 
Some information from Sigu about the Elixir Kenya meetup and the community there. 
Sigu's experiences with IoT technology in Kenya and its adoption.  
The elevator pitch for Sigu's company, Podii, and its roots in training.  
Podii's current operation and company size and some of the projects they have worked on thus far. 
The coding language trends in Kenya; Sigu weighs in on what he has noticed.  
Sigu's history in the programming space and how he made his way into the world of tech.  
How 'matatu' buses operate in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!  
The ElixirConf Africa that was hosted this year and Sigu's experience of being involved. 
Sigu's hopes for the Elixir community for the next ten years! 
Approaches for identifying talented young Elixir developers. 
How and where to connect with Sigu online and final remarks from our guest. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Sigu Magwa on LinkedIn — https://www.linkedin.com/in/sigu/?originalSubdomain=ke
Sigu Magwa on Twitter — https://twitter.com/s_igu
Podii — https://podiihq.com/
Nerves — https://www.nerves-project.org/platform.html
ElixirConf Africa — https://elixirconf.africa/
QuadBlockQuiz — http://quadblockquiz.org:4000/
Matatu Bus — https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures
Hire Junior Engineers — https://smartlogic.io/blog/hire-junior-engineers/
Teach Yourself Computer Science — https://teachyourselfcs.com/
Structure and Interpretation of Computer Programs — https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871
Elixir Wizards Discord — https://discord.com/invite/JGcqSaYf2a Special Guest: Sigu Magwa.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We are always excited to have conversations about the growth of the Elixir community, and today we go truly global, welcoming Sigu Magwa to the podcast, who hails from Kenya! Sigu is currently traveling in the US and he fills us in on some of the highs and lows of his trip and why he is so excited to get home to his friends and family. From there, we get into some interesting information about Elixir Kenya and the growth of the meetup over the last couple of years. Sigu shares some insight into IoT in his country and what the general tech space is like right now over there, before opening up about his journey into programming and how he found his way into working with Elixir. We also get to talk about his company, Podii, and their first few years working with clients. Apart from all the tech talk, Sigu is kind enough to shed some light on Kenya&#39;s matatu buses, and what makes them so unique, a subject that was particularly captivating to our panel! Listeners can also expect to hear about the recent ElixirConf Africa, Sigu&#39;s thoughts on hiring young talent, and what he hopes to see in the next decade within the community. So to catch it all, be sure to listen in with us on Elixir Wizards!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Sigu&#39;s trip to the US and the sights he has been seeing in different cities. </li>
<li>Some information from Sigu about the Elixir Kenya meetup and the community there. </li>
<li>Sigu&#39;s experiences with IoT technology in Kenya and its adoption.<br></li>
<li>The elevator pitch for Sigu&#39;s company, Podii, and its roots in training.<br></li>
<li>Podii&#39;s current operation and company size and some of the projects they have worked on thus far. </li>
<li>The coding language trends in Kenya; Sigu weighs in on what he has noticed.<br></li>
<li>Sigu&#39;s history in the programming space and how he made his way into the world of tech.<br></li>
<li>How &#39;matatu&#39; buses operate in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!<br></li>
<li>The ElixirConf Africa that was hosted this year and Sigu&#39;s experience of being involved. </li>
<li>Sigu&#39;s hopes for the Elixir community for the next ten years! </li>
<li>Approaches for identifying talented young Elixir developers. </li>
<li>How and where to connect with Sigu online and final remarks from our guest. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sigu Magwa on LinkedIn — <a href="https://www.linkedin.com/in/sigu/?originalSubdomain=ke" rel="nofollow">https://www.linkedin.com/in/sigu/?originalSubdomain=ke</a><br>
Sigu Magwa on Twitter — <a href="https://twitter.com/s_igu" rel="nofollow">https://twitter.com/s_igu</a><br>
Podii — <a href="https://podiihq.com/" rel="nofollow">https://podiihq.com/</a><br>
Nerves — <a href="https://www.nerves-project.org/platform.html" rel="nofollow">https://www.nerves-project.org/platform.html</a><br>
ElixirConf Africa — <a href="https://elixirconf.africa/" rel="nofollow">https://elixirconf.africa/</a><br>
QuadBlockQuiz — <a href="http://quadblockquiz.org:4000/" rel="nofollow">http://quadblockquiz.org:4000/</a><br>
Matatu Bus — <a href="https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures" rel="nofollow">https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures</a><br>
Hire Junior Engineers — <a href="https://smartlogic.io/blog/hire-junior-engineers/" rel="nofollow">https://smartlogic.io/blog/hire-junior-engineers/</a><br>
Teach Yourself Computer Science — <a href="https://teachyourselfcs.com/" rel="nofollow">https://teachyourselfcs.com/</a><br>
Structure and Interpretation of Computer Programs — <a href="https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871" rel="nofollow">https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871</a><br>
Elixir Wizards Discord — <a href="https://discord.com/invite/JGcqSaYf2a" rel="nofollow">https://discord.com/invite/JGcqSaYf2a</a></p><p>Special Guest: Sigu Magwa.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We are always excited to have conversations about the growth of the Elixir community, and today we go truly global, welcoming Sigu Magwa to the podcast, who hails from Kenya! Sigu is currently traveling in the US and he fills us in on some of the highs and lows of his trip and why he is so excited to get home to his friends and family. From there, we get into some interesting information about Elixir Kenya and the growth of the meetup over the last couple of years. Sigu shares some insight into IoT in his country and what the general tech space is like right now over there, before opening up about his journey into programming and how he found his way into working with Elixir. We also get to talk about his company, Podii, and their first few years working with clients. Apart from all the tech talk, Sigu is kind enough to shed some light on Kenya&#39;s matatu buses, and what makes them so unique, a subject that was particularly captivating to our panel! Listeners can also expect to hear about the recent ElixirConf Africa, Sigu&#39;s thoughts on hiring young talent, and what he hopes to see in the next decade within the community. So to catch it all, be sure to listen in with us on Elixir Wizards!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Sigu&#39;s trip to the US and the sights he has been seeing in different cities. </li>
<li>Some information from Sigu about the Elixir Kenya meetup and the community there. </li>
<li>Sigu&#39;s experiences with IoT technology in Kenya and its adoption.<br></li>
<li>The elevator pitch for Sigu&#39;s company, Podii, and its roots in training.<br></li>
<li>Podii&#39;s current operation and company size and some of the projects they have worked on thus far. </li>
<li>The coding language trends in Kenya; Sigu weighs in on what he has noticed.<br></li>
<li>Sigu&#39;s history in the programming space and how he made his way into the world of tech.<br></li>
<li>How &#39;matatu&#39; buses operate in Kenya; TVs, celebrity portraits, strobe lights, and high speeds!<br></li>
<li>The ElixirConf Africa that was hosted this year and Sigu&#39;s experience of being involved. </li>
<li>Sigu&#39;s hopes for the Elixir community for the next ten years! </li>
<li>Approaches for identifying talented young Elixir developers. </li>
<li>How and where to connect with Sigu online and final remarks from our guest. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sigu Magwa on LinkedIn — <a href="https://www.linkedin.com/in/sigu/?originalSubdomain=ke" rel="nofollow">https://www.linkedin.com/in/sigu/?originalSubdomain=ke</a><br>
Sigu Magwa on Twitter — <a href="https://twitter.com/s_igu" rel="nofollow">https://twitter.com/s_igu</a><br>
Podii — <a href="https://podiihq.com/" rel="nofollow">https://podiihq.com/</a><br>
Nerves — <a href="https://www.nerves-project.org/platform.html" rel="nofollow">https://www.nerves-project.org/platform.html</a><br>
ElixirConf Africa — <a href="https://elixirconf.africa/" rel="nofollow">https://elixirconf.africa/</a><br>
QuadBlockQuiz — <a href="http://quadblockquiz.org:4000/" rel="nofollow">http://quadblockquiz.org:4000/</a><br>
Matatu Bus — <a href="https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures" rel="nofollow">https://www.theguardian.com/world/gallery/2018/apr/27/a-minibus-ride-like-no-other-nairobis-matatu-culture-in-pictures</a><br>
Hire Junior Engineers — <a href="https://smartlogic.io/blog/hire-junior-engineers/" rel="nofollow">https://smartlogic.io/blog/hire-junior-engineers/</a><br>
Teach Yourself Computer Science — <a href="https://teachyourselfcs.com/" rel="nofollow">https://teachyourselfcs.com/</a><br>
Structure and Interpretation of Computer Programs — <a href="https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871" rel="nofollow">https://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871</a><br>
Elixir Wizards Discord — <a href="https://discord.com/invite/JGcqSaYf2a" rel="nofollow">https://discord.com/invite/JGcqSaYf2a</a></p><p>Special Guest: Sigu Magwa.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Casting Spells with Brooklin Myers</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e7-myers</link>
      <guid isPermaLink="false">c628b216-0cf4-431f-b430-377ad40bf4ff</guid>
      <pubDate>Thu, 16 Dec 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c628b216-0cf4-431f-b430-377ad40bf4ff.mp3" length="81234527" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In this episode, we talk to Brooklin Myers about his relationship with Elixir and its broader community, why he loves the space so much, and and why he wants to help it grow.</itunes:subtitle>
      <itunes:duration>56:10</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c628b216-0cf4-431f-b430-377ad40bf4ff/cover.jpg" />
      <description>Brooklin Myers is on a quest to change the perception that Elixir is difficult to get into and we are so grateful to have him as a guest on the show today. Aside from being a passionate programmer, Brooklin spends a lot of his time trying to encourage new members in the Elixir community through his Twitter account and podcast called Elixir Newbies. In this episode, we talk to Brooklin about his relationship with Elixir and its broader community, why he loves the space so much and, and why he wants to help it grow. We cover his journey into programming and how he got involved with Elixir specifically. He talks about the features of the language that he loves most and how learning Surface has allowed him to use Elixir in the same way he used to use React. Our conversation also ventures onto the subject of Dungeons and Dragons, another passion of Brooklin’s, and he tells us how learning programming is the closest he has come to fulfilling his dream of being a wizard!
Key Points From This Episode:
Region-specific spelling and our peeves about words we easily misspell.
Brooklin’s background in React and how Surface has helped him use Elixir in a similar way.
Structure and testing: Why Brooklin loves Elixir and how it compares to JavaScript.
How Brooklin got into programming and left his job selling computers.
What led Brooklin to discover Elixir and how he realized its true potential.
The aspect of problem-solving and continuous growth Brooklin loves about programming.
Brooklin’s desire to help others learn and why he started the Elixir Newbie podcast.
How to get over perfectionism: the value of remembering it is okay to fail.
Sundi and Brooklin’s approach to taking notes and turning them into posts or tweets.
How Brooklin handles his writing, podcasting, and other work by time-blocking.
Brooklin’s love of Dungeons and Dragons and the improvisation of being the DM.
Why Brooklin loves fantasy and how programming is the closest thing to real-world magic.
The impacts of Elixir on Brooklin and how supportive the community has been to him.
Whether Brooklin feels that learning Elixir has changed the way he codes.
Aspects of Elixir that can improve regarding ease of access to the community.
Final shoutouts from Brooklin and where to connect with him online.
Links Mentioned in Today’s Episode:
Brooklin Myers on Twitter — https://twitter.com/brooklinjmyers
Elixir Newbie — https://www.elixirnewbie.com/
Elixir Newbie Podcast — https://podtail.com/en/podcast/elixir-newbie/
Lost Mines of Phandelver – https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free
Kealy Doyle — https://www.linkedin.com/in/kealy-doyle/
Jono Stiansen — https://twitter.com/JonoCodes
Matthew Baker — https://www.linkedin.com/in/mcbii/
Anton’s Pasta Bar — https://antonspastabar.com/
Keith Eats Everything — https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e
Surface — https://hexdocs.pm/surface/Surface.html
SmartLogic — https://smartlogic.io/ 
 Special Guest: Brooklin Myers.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Brooklin Myers is on a quest to change the perception that Elixir is difficult to get into and we are so grateful to have him as a guest on the show today. Aside from being a passionate programmer, Brooklin spends a lot of his time trying to encourage new members in the Elixir community through his Twitter account and podcast called Elixir Newbies. In this episode, we talk to Brooklin about his relationship with Elixir and its broader community, why he loves the space so much and, and why he wants to help it grow. We cover his journey into programming and how he got involved with Elixir specifically. He talks about the features of the language that he loves most and how learning Surface has allowed him to use Elixir in the same way he used to use React. Our conversation also ventures onto the subject of Dungeons and Dragons, another passion of Brooklin’s, and he tells us how learning programming is the closest he has come to fulfilling his dream of being a wizard!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Region-specific spelling and our peeves about words we easily misspell.</li>
<li>Brooklin’s background in React and how Surface has helped him use Elixir in a similar way.</li>
<li>Structure and testing: Why Brooklin loves Elixir and how it compares to JavaScript.</li>
<li>How Brooklin got into programming and left his job selling computers.</li>
<li>What led Brooklin to discover Elixir and how he realized its true potential.</li>
<li>The aspect of problem-solving and continuous growth Brooklin loves about programming.</li>
<li>Brooklin’s desire to help others learn and why he started the Elixir Newbie podcast.</li>
<li>How to get over perfectionism: the value of remembering it is okay to fail.</li>
<li>Sundi and Brooklin’s approach to taking notes and turning them into posts or tweets.</li>
<li>How Brooklin handles his writing, podcasting, and other work by time-blocking.</li>
<li>Brooklin’s love of Dungeons and Dragons and the improvisation of being the DM.</li>
<li>Why Brooklin loves fantasy and how programming is the closest thing to real-world magic.</li>
<li>The impacts of Elixir on Brooklin and how supportive the community has been to him.</li>
<li>Whether Brooklin feels that learning Elixir has changed the way he codes.</li>
<li>Aspects of Elixir that can improve regarding ease of access to the community.</li>
<li>Final shoutouts from Brooklin and where to connect with him online.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Brooklin Myers on Twitter — <a href="https://twitter.com/brooklinjmyers" rel="nofollow">https://twitter.com/brooklinjmyers</a><br>
Elixir Newbie — <a href="https://www.elixirnewbie.com/" rel="nofollow">https://www.elixirnewbie.com/</a><br>
Elixir Newbie Podcast — <a href="https://podtail.com/en/podcast/elixir-newbie/" rel="nofollow">https://podtail.com/en/podcast/elixir-newbie/</a><br>
Lost Mines of Phandelver – <a href="https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free" rel="nofollow">https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free</a><br>
Kealy Doyle — <a href="https://www.linkedin.com/in/kealy-doyle/" rel="nofollow">https://www.linkedin.com/in/kealy-doyle/</a><br>
Jono Stiansen — <a href="https://twitter.com/JonoCodes" rel="nofollow">https://twitter.com/JonoCodes</a><br>
Matthew Baker — <a href="https://www.linkedin.com/in/mcbii/" rel="nofollow">https://www.linkedin.com/in/mcbii/</a><br>
Anton’s Pasta Bar — <a href="https://antonspastabar.com/" rel="nofollow">https://antonspastabar.com/</a><br>
Keith Eats Everything — <a href="https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e" rel="nofollow">https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e</a><br>
Surface — <a href="https://hexdocs.pm/surface/Surface.html" rel="nofollow">https://hexdocs.pm/surface/Surface.html</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Brooklin Myers.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Brooklin Myers is on a quest to change the perception that Elixir is difficult to get into and we are so grateful to have him as a guest on the show today. Aside from being a passionate programmer, Brooklin spends a lot of his time trying to encourage new members in the Elixir community through his Twitter account and podcast called Elixir Newbies. In this episode, we talk to Brooklin about his relationship with Elixir and its broader community, why he loves the space so much and, and why he wants to help it grow. We cover his journey into programming and how he got involved with Elixir specifically. He talks about the features of the language that he loves most and how learning Surface has allowed him to use Elixir in the same way he used to use React. Our conversation also ventures onto the subject of Dungeons and Dragons, another passion of Brooklin’s, and he tells us how learning programming is the closest he has come to fulfilling his dream of being a wizard!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Region-specific spelling and our peeves about words we easily misspell.</li>
<li>Brooklin’s background in React and how Surface has helped him use Elixir in a similar way.</li>
<li>Structure and testing: Why Brooklin loves Elixir and how it compares to JavaScript.</li>
<li>How Brooklin got into programming and left his job selling computers.</li>
<li>What led Brooklin to discover Elixir and how he realized its true potential.</li>
<li>The aspect of problem-solving and continuous growth Brooklin loves about programming.</li>
<li>Brooklin’s desire to help others learn and why he started the Elixir Newbie podcast.</li>
<li>How to get over perfectionism: the value of remembering it is okay to fail.</li>
<li>Sundi and Brooklin’s approach to taking notes and turning them into posts or tweets.</li>
<li>How Brooklin handles his writing, podcasting, and other work by time-blocking.</li>
<li>Brooklin’s love of Dungeons and Dragons and the improvisation of being the DM.</li>
<li>Why Brooklin loves fantasy and how programming is the closest thing to real-world magic.</li>
<li>The impacts of Elixir on Brooklin and how supportive the community has been to him.</li>
<li>Whether Brooklin feels that learning Elixir has changed the way he codes.</li>
<li>Aspects of Elixir that can improve regarding ease of access to the community.</li>
<li>Final shoutouts from Brooklin and where to connect with him online.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Brooklin Myers on Twitter — <a href="https://twitter.com/brooklinjmyers" rel="nofollow">https://twitter.com/brooklinjmyers</a><br>
Elixir Newbie — <a href="https://www.elixirnewbie.com/" rel="nofollow">https://www.elixirnewbie.com/</a><br>
Elixir Newbie Podcast — <a href="https://podtail.com/en/podcast/elixir-newbie/" rel="nofollow">https://podtail.com/en/podcast/elixir-newbie/</a><br>
Lost Mines of Phandelver – <a href="https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free" rel="nofollow">https://www.dicebreaker.com/games/dungeons-and-dragons-5e/deal/lost-mines-of-phandelver-adventure-free</a><br>
Kealy Doyle — <a href="https://www.linkedin.com/in/kealy-doyle/" rel="nofollow">https://www.linkedin.com/in/kealy-doyle/</a><br>
Jono Stiansen — <a href="https://twitter.com/JonoCodes" rel="nofollow">https://twitter.com/JonoCodes</a><br>
Matthew Baker — <a href="https://www.linkedin.com/in/mcbii/" rel="nofollow">https://www.linkedin.com/in/mcbii/</a><br>
Anton’s Pasta Bar — <a href="https://antonspastabar.com/" rel="nofollow">https://antonspastabar.com/</a><br>
Keith Eats Everything — <a href="https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e" rel="nofollow">https://www.youtube.com/playlist?list=PL9qQXSjI-WOppp4B9x5bgsBS3993KAX2e</a><br>
Surface — <a href="https://hexdocs.pm/surface/Surface.html" rel="nofollow">https://hexdocs.pm/surface/Surface.html</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Brooklin Myers.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Speedcubing and Building Livebook with Jonatan Kłosko</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e6-klosko</link>
      <guid isPermaLink="false">03563586-ac91-4c9e-a6ec-f7a91318d2b7</guid>
      <pubDate>Thu, 09 Dec 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/03563586-ac91-4c9e-a6ec-f7a91318d2b7.mp3" length="43565075" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we are lucky enough to be joined by Livebook developer, Jonatan Kłosko, a young prodigy. While he is still at college, he is working closely with José Valim at Dashbit, and can solve a Rubik’s cube in under five seconds!</itunes:subtitle>
      <itunes:duration>45:17</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/03563586-ac91-4c9e-a6ec-f7a91318d2b7/cover.jpg" />
      <description>It is important to us that the Elixir community keeps thriving, and one of the best ways to ensure this is by lowering the barrier to entry as much as possible. Livebook is helping to achieve this aim, and today we are lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is a young prodigy because while he is still at college, he is working closely with José Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds! After hearing about his college thesis on evolutionary algorithms using Numerical Elixir, we jump into the story of how he met José and started building Livebook. He explains that Livebook is a web application for writing interactive and collaborative code notebooks for Elixir and we hear about the many features he is building into it. From there, Jonatan describes what he loves about Elixir, and we discuss how learning functional programming changes the way we code. Tuning in, you’ll also hear about a bunch of features that make Elixir so great, how its downsides are mostly solved by its extensibility, and some of Jonatan’s other hobbies that help him keep balance in his life. Be sure to sip on some Elixir with us today!
Key Points From This Episode:
Jonatan speaks about “speedcubing”: his hobby of quickly solving Rubik’s cubes.
How Jonatan got into programming and where he is at in his CS degree.
Discussing Jonatan’s Bachelor’s thesis project on evolutionary algorithms in Elixir.
How evolutionary algorithms are a style of solving optimization problems biologically.
Building the project using the Erlang distribution and the Numerical Elixir library.
How Jonatan started working on the Livebook project with Dashbit.
Thoughts on how Jonatan broke into the Elixir community and how others can do the same.
Livebook: a code notebook application with collaborative and sequential evaluation features.
The IEx session abilities of Livebook and how impressed Sundi was when she discovered them.
The different use cases for Livebook and the direction Jonatan wants to take the app in.
Jonatan’s process of learning Elixir at college and the application he built for a project.
The pair programming features of Livebook and how to use them.
How well-positioned Jonatan is to learn Elixir and what he loves about the language.
The functional programming style and how it affects how people write code after learning it.
Downsides of Elixir around immutability and typing and Jonatan’s feelings toward this.
How Elixir is making an impact on the programming community through being user-friendly.
Jonatan talks about his other hobbies and how he finds balance in his life.
Hopes for the future of Elixir, resources for learning, and how to get involved in the community.
How amazing the pipe operator is and the huge advantage it gives Elixir over JavaScript.
Final plugs from Jonatan and how best to reach out to him online.
Links Mentioned in Today’s Episode:
Jonatan Kłosko — https://jonatanklosko.com/
Jonatan Kłosko on GitHub — https://github.com/jonatanklosko
Speedcubing — https://www.rubiks.com/en-us/speed-cubing
Erlang Ecosystem Foundation Slack — https://erlef.org/slack-invite/erlef
Numerical Elixir — https://github.com/elixir-nx
LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
Phoenix LiveView — https://github.com/phoenixframework/phoenixliveview
Dashbit — https://dashbit.co/
Haskell — https://www.haskell.org/
React — https://reactjs.org/
Elixir — https://elixir-lang.org/
José Valim — https://twitter.com/josevalim
Livebook — https://dashbit.co/blog/announcing-livebook
SmartLogic — https://smartlogic.io/  Special Guest: Jonatan Kłosko.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>It is important to us that the Elixir community keeps thriving, and one of the best ways to ensure this is by lowering the barrier to entry as much as possible. Livebook is helping to achieve this aim, and today we are lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is a young prodigy because while he is still at college, he is working closely with José Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds! After hearing about his college thesis on evolutionary algorithms using Numerical Elixir, we jump into the story of how he met José and started building Livebook. He explains that Livebook is a web application for writing interactive and collaborative code notebooks for Elixir and we hear about the many features he is building into it. From there, Jonatan describes what he loves about Elixir, and we discuss how learning functional programming changes the way we code. Tuning in, you’ll also hear about a bunch of features that make Elixir so great, how its downsides are mostly solved by its extensibility, and some of Jonatan’s other hobbies that help him keep balance in his life. Be sure to sip on some Elixir with us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Jonatan speaks about “speedcubing”: his hobby of quickly solving Rubik’s cubes.</li>
<li>How Jonatan got into programming and where he is at in his CS degree.</li>
<li>Discussing Jonatan’s Bachelor’s thesis project on evolutionary algorithms in Elixir.</li>
<li>How evolutionary algorithms are a style of solving optimization problems biologically.</li>
<li>Building the project using the Erlang distribution and the Numerical Elixir library.</li>
<li>How Jonatan started working on the Livebook project with Dashbit.</li>
<li>Thoughts on how Jonatan broke into the Elixir community and how others can do the same.</li>
<li>Livebook: a code notebook application with collaborative and sequential evaluation features.</li>
<li>The IEx session abilities of Livebook and how impressed Sundi was when she discovered them.</li>
<li>The different use cases for Livebook and the direction Jonatan wants to take the app in.</li>
<li>Jonatan’s process of learning Elixir at college and the application he built for a project.</li>
<li>The pair programming features of Livebook and how to use them.</li>
<li>How well-positioned Jonatan is to learn Elixir and what he loves about the language.</li>
<li>The functional programming style and how it affects how people write code after learning it.</li>
<li>Downsides of Elixir around immutability and typing and Jonatan’s feelings toward this.</li>
<li>How Elixir is making an impact on the programming community through being user-friendly.</li>
<li>Jonatan talks about his other hobbies and how he finds balance in his life.</li>
<li>Hopes for the future of Elixir, resources for learning, and how to get involved in the community.</li>
<li>How amazing the pipe operator is and the huge advantage it gives Elixir over JavaScript.</li>
<li>Final plugs from Jonatan and how best to reach out to him online.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Jonatan Kłosko — <a href="https://jonatanklosko.com/" rel="nofollow">https://jonatanklosko.com/</a><br>
Jonatan Kłosko on GitHub — <a href="https://github.com/jonatanklosko" rel="nofollow">https://github.com/jonatanklosko</a><br>
Speedcubing — <a href="https://www.rubiks.com/en-us/speed-cubing" rel="nofollow">https://www.rubiks.com/en-us/speed-cubing</a><br>
Erlang Ecosystem Foundation Slack — <a href="https://erlef.org/slack-invite/erlef" rel="nofollow">https://erlef.org/slack-invite/erlef</a><br>
Numerical Elixir — <a href="https://github.com/elixir-nx" rel="nofollow">https://github.com/elixir-nx</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Phoenix LiveView — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a><br>
Dashbit — <a href="https://dashbit.co/" rel="nofollow">https://dashbit.co/</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
React — <a href="https://reactjs.org/" rel="nofollow">https://reactjs.org/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Livebook — <a href="https://dashbit.co/blog/announcing-livebook" rel="nofollow">https://dashbit.co/blog/announcing-livebook</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Jonatan Kłosko.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>It is important to us that the Elixir community keeps thriving, and one of the best ways to ensure this is by lowering the barrier to entry as much as possible. Livebook is helping to achieve this aim, and today we are lucky enough to be joined by its developer, Jonatan Kłosko. Jonatan is a young prodigy because while he is still at college, he is working closely with José Valim at Dashbit, and he can solve a Rubik’s cube in under five seconds! After hearing about his college thesis on evolutionary algorithms using Numerical Elixir, we jump into the story of how he met José and started building Livebook. He explains that Livebook is a web application for writing interactive and collaborative code notebooks for Elixir and we hear about the many features he is building into it. From there, Jonatan describes what he loves about Elixir, and we discuss how learning functional programming changes the way we code. Tuning in, you’ll also hear about a bunch of features that make Elixir so great, how its downsides are mostly solved by its extensibility, and some of Jonatan’s other hobbies that help him keep balance in his life. Be sure to sip on some Elixir with us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Jonatan speaks about “speedcubing”: his hobby of quickly solving Rubik’s cubes.</li>
<li>How Jonatan got into programming and where he is at in his CS degree.</li>
<li>Discussing Jonatan’s Bachelor’s thesis project on evolutionary algorithms in Elixir.</li>
<li>How evolutionary algorithms are a style of solving optimization problems biologically.</li>
<li>Building the project using the Erlang distribution and the Numerical Elixir library.</li>
<li>How Jonatan started working on the Livebook project with Dashbit.</li>
<li>Thoughts on how Jonatan broke into the Elixir community and how others can do the same.</li>
<li>Livebook: a code notebook application with collaborative and sequential evaluation features.</li>
<li>The IEx session abilities of Livebook and how impressed Sundi was when she discovered them.</li>
<li>The different use cases for Livebook and the direction Jonatan wants to take the app in.</li>
<li>Jonatan’s process of learning Elixir at college and the application he built for a project.</li>
<li>The pair programming features of Livebook and how to use them.</li>
<li>How well-positioned Jonatan is to learn Elixir and what he loves about the language.</li>
<li>The functional programming style and how it affects how people write code after learning it.</li>
<li>Downsides of Elixir around immutability and typing and Jonatan’s feelings toward this.</li>
<li>How Elixir is making an impact on the programming community through being user-friendly.</li>
<li>Jonatan talks about his other hobbies and how he finds balance in his life.</li>
<li>Hopes for the future of Elixir, resources for learning, and how to get involved in the community.</li>
<li>How amazing the pipe operator is and the huge advantage it gives Elixir over JavaScript.</li>
<li>Final plugs from Jonatan and how best to reach out to him online.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Jonatan Kłosko — <a href="https://jonatanklosko.com/" rel="nofollow">https://jonatanklosko.com/</a><br>
Jonatan Kłosko on GitHub — <a href="https://github.com/jonatanklosko" rel="nofollow">https://github.com/jonatanklosko</a><br>
Speedcubing — <a href="https://www.rubiks.com/en-us/speed-cubing" rel="nofollow">https://www.rubiks.com/en-us/speed-cubing</a><br>
Erlang Ecosystem Foundation Slack — <a href="https://erlef.org/slack-invite/erlef" rel="nofollow">https://erlef.org/slack-invite/erlef</a><br>
Numerical Elixir — <a href="https://github.com/elixir-nx" rel="nofollow">https://github.com/elixir-nx</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Phoenix LiveView — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a><br>
Dashbit — <a href="https://dashbit.co/" rel="nofollow">https://dashbit.co/</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
React — <a href="https://reactjs.org/" rel="nofollow">https://reactjs.org/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Livebook — <a href="https://dashbit.co/blog/announcing-livebook" rel="nofollow">https://dashbit.co/blog/announcing-livebook</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Jonatan Kłosko.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Protocols in Elixir with Yiming Chen</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e5-chen</link>
      <guid isPermaLink="false">496000a0-b38c-4ab6-96f8-a0948d8c6d40</guid>
      <pubDate>Thu, 02 Dec 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/496000a0-b38c-4ab6-96f8-a0948d8c6d40.mp3" length="60807348" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we are grateful to get the chance to speak with Yiming Chen from Tubi, where we hear all about how he likes to use Elixir and the contributions he has made to the community.</itunes:subtitle>
      <itunes:duration>42:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/496000a0-b38c-4ab6-96f8-a0948d8c6d40/cover.jpg" />
      <description>Today on the show we are grateful to get the chance to speak with Yiming Chen from Tubi, where we hear all about how he likes to use Elixir and the contributions he has made to the community. We begin as always with Yiming's journey into programming and how he got into Elixir through his early interest in Ruby. From there, we talk about the magic of Protocols, hearing about an awesome project Yiming built using them and how this lead him to build a testing framework called Promox. In this section, we also get into how Protocols enable polymorphic logic, why they are useful for defining shared interfaces explicitly, and the differences between Promox and Mox. Our conversation today covers some general advantages of writing code in Elixir, and we explore how it has influenced Yiming’s style of programming, its efficiency thanks to concurrency, and its usefulness for building maintainable applications. Wrapping up, we hear Yiming’s thoughts about the nascent Elixir community in China and all the future possibilities for this magical language.
Key Points From This Episode:
How Yiming got into programming by building websites using WYSIWYG tools as a child.
Yiming’s experiences using Ruby and how that led him to learn Elixir.
People Yiming knows that are using Elixir for personal projects and some highlights of these.
Yiming’s project where he used Protocols to transfer files from one cloud provider to another.
How Yiming’s Protocol project led him to create a testing framework called Promox.
Protocols versus behaviors and how Promox differs from Mox.
A basic description of how Protocols enable polymorphic logic in Elixir.
Why Protocols are so useful for defining shared interfaces explicitly.
The thing that makes Protocols in Elixir specifically attractive.
Sundi’s talk on Mox and her thoughts on the pros and cons of using it.
How Yiming got into using Mox through Ruby and his thoughts on it.
The advantages of using Elixir over Ruby relating to concurrency and testing.
Networking and software developer jobs after remote work.
How Yiming’s ElixirConf talk went and the positive feedback he received.
Yiming’s feelings about Test Driven Development and how closely he follows it.
Learning Lisp in college and Yiming’s earlier experiences with functional programming.
How small the Elixir scene in China is and thoughts about how it should grow.
The benefits of Elixir for building maintainable applications and more.
How Elixir has changed the way the Yiming programs.
A model for building websites in Elixir with HTTP requests as functions.
Final plugs from Yiming about the need for developers at Tubi!
Links Mentioned in Today’s Episode:
Yiming Chen on Twitter — https://twitter.com/dsdshcym?lang=en
tubi.tv — https://tubitv.com/
Quinn Wilton — https://twitter.com/wilton_quinn
Promox — https://giters.com/dsdshcym/promox
Sundi Myint: Stunt Doubles | Testing with Mox, Elixir Conf 2021 — https://youtu.be/qMScnpGhu4E 
Yiming Chen - Promox: Roles, Protocols, and Mocks — https://youtu.be/Df81LbdRd0A
‘Mocks and explicit contracts’ — https://dashbit.co/blog/mocks-and-explicit-contracts
Programming Phoenix — https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453
Why Elixir Matters A Genealogy of Functional Programming - OsaGaius — https://youtu.be/X2u0bBqhRKE
SmartLogic — https://smartlogic.io/  Special Guest: Yiming Chen.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we are grateful to get the chance to speak with Yiming Chen from Tubi, where we hear all about how he likes to use Elixir and the contributions he has made to the community. We begin as always with Yiming&#39;s journey into programming and how he got into Elixir through his early interest in Ruby. From there, we talk about the magic of Protocols, hearing about an awesome project Yiming built using them and how this lead him to build a testing framework called Promox. In this section, we also get into how Protocols enable polymorphic logic, why they are useful for defining shared interfaces explicitly, and the differences between Promox and Mox. Our conversation today covers some general advantages of writing code in Elixir, and we explore how it has influenced Yiming’s style of programming, its efficiency thanks to concurrency, and its usefulness for building maintainable applications. Wrapping up, we hear Yiming’s thoughts about the nascent Elixir community in China and all the future possibilities for this magical language.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>How Yiming got into programming by building websites using WYSIWYG tools as a child.</li>
<li>Yiming’s experiences using Ruby and how that led him to learn Elixir.</li>
<li>People Yiming knows that are using Elixir for personal projects and some highlights of these.</li>
<li>Yiming’s project where he used Protocols to transfer files from one cloud provider to another.</li>
<li>How Yiming’s Protocol project led him to create a testing framework called Promox.</li>
<li>Protocols versus behaviors and how Promox differs from Mox.</li>
<li>A basic description of how Protocols enable polymorphic logic in Elixir.</li>
<li>Why Protocols are so useful for defining shared interfaces explicitly.</li>
<li>The thing that makes Protocols in Elixir specifically attractive.</li>
<li>Sundi’s talk on Mox and her thoughts on the pros and cons of using it.</li>
<li>How Yiming got into using Mox through Ruby and his thoughts on it.</li>
<li>The advantages of using Elixir over Ruby relating to concurrency and testing.</li>
<li>Networking and software developer jobs after remote work.</li>
<li>How Yiming’s ElixirConf talk went and the positive feedback he received.</li>
<li>Yiming’s feelings about Test Driven Development and how closely he follows it.</li>
<li>Learning Lisp in college and Yiming’s earlier experiences with functional programming.</li>
<li>How small the Elixir scene in China is and thoughts about how it should grow.</li>
<li>The benefits of Elixir for building maintainable applications and more.</li>
<li>How Elixir has changed the way the Yiming programs.</li>
<li>A model for building websites in Elixir with HTTP requests as functions.</li>
<li>Final plugs from Yiming about the need for developers at Tubi!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Yiming Chen on Twitter — <a href="https://twitter.com/dsdshcym?lang=en" rel="nofollow">https://twitter.com/dsdshcym?lang=en</a><br>
tubi.tv — <a href="https://tubitv.com/" rel="nofollow">https://tubitv.com/</a><br>
Quinn Wilton — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
Promox — <a href="https://giters.com/dsdshcym/promox" rel="nofollow">https://giters.com/dsdshcym/promox</a><br>
Sundi Myint: Stunt Doubles | Testing with Mox, Elixir Conf 2021 — <a href="https://youtu.be/qMScnpGhu4E" rel="nofollow">https://youtu.be/qMScnpGhu4E</a> <br>
Yiming Chen - Promox: Roles, Protocols, and Mocks — <a href="https://youtu.be/Df81LbdRd0A" rel="nofollow">https://youtu.be/Df81LbdRd0A</a><br>
‘Mocks and explicit contracts’ — <a href="https://dashbit.co/blog/mocks-and-explicit-contracts" rel="nofollow">https://dashbit.co/blog/mocks-and-explicit-contracts</a><br>
Programming Phoenix — <a href="https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453" rel="nofollow">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>
Why Elixir Matters A Genealogy of Functional Programming - OsaGaius — <a href="https://youtu.be/X2u0bBqhRKE" rel="nofollow">https://youtu.be/X2u0bBqhRKE</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Yiming Chen.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we are grateful to get the chance to speak with Yiming Chen from Tubi, where we hear all about how he likes to use Elixir and the contributions he has made to the community. We begin as always with Yiming&#39;s journey into programming and how he got into Elixir through his early interest in Ruby. From there, we talk about the magic of Protocols, hearing about an awesome project Yiming built using them and how this lead him to build a testing framework called Promox. In this section, we also get into how Protocols enable polymorphic logic, why they are useful for defining shared interfaces explicitly, and the differences between Promox and Mox. Our conversation today covers some general advantages of writing code in Elixir, and we explore how it has influenced Yiming’s style of programming, its efficiency thanks to concurrency, and its usefulness for building maintainable applications. Wrapping up, we hear Yiming’s thoughts about the nascent Elixir community in China and all the future possibilities for this magical language.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>How Yiming got into programming by building websites using WYSIWYG tools as a child.</li>
<li>Yiming’s experiences using Ruby and how that led him to learn Elixir.</li>
<li>People Yiming knows that are using Elixir for personal projects and some highlights of these.</li>
<li>Yiming’s project where he used Protocols to transfer files from one cloud provider to another.</li>
<li>How Yiming’s Protocol project led him to create a testing framework called Promox.</li>
<li>Protocols versus behaviors and how Promox differs from Mox.</li>
<li>A basic description of how Protocols enable polymorphic logic in Elixir.</li>
<li>Why Protocols are so useful for defining shared interfaces explicitly.</li>
<li>The thing that makes Protocols in Elixir specifically attractive.</li>
<li>Sundi’s talk on Mox and her thoughts on the pros and cons of using it.</li>
<li>How Yiming got into using Mox through Ruby and his thoughts on it.</li>
<li>The advantages of using Elixir over Ruby relating to concurrency and testing.</li>
<li>Networking and software developer jobs after remote work.</li>
<li>How Yiming’s ElixirConf talk went and the positive feedback he received.</li>
<li>Yiming’s feelings about Test Driven Development and how closely he follows it.</li>
<li>Learning Lisp in college and Yiming’s earlier experiences with functional programming.</li>
<li>How small the Elixir scene in China is and thoughts about how it should grow.</li>
<li>The benefits of Elixir for building maintainable applications and more.</li>
<li>How Elixir has changed the way the Yiming programs.</li>
<li>A model for building websites in Elixir with HTTP requests as functions.</li>
<li>Final plugs from Yiming about the need for developers at Tubi!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Yiming Chen on Twitter — <a href="https://twitter.com/dsdshcym?lang=en" rel="nofollow">https://twitter.com/dsdshcym?lang=en</a><br>
tubi.tv — <a href="https://tubitv.com/" rel="nofollow">https://tubitv.com/</a><br>
Quinn Wilton — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
Promox — <a href="https://giters.com/dsdshcym/promox" rel="nofollow">https://giters.com/dsdshcym/promox</a><br>
Sundi Myint: Stunt Doubles | Testing with Mox, Elixir Conf 2021 — <a href="https://youtu.be/qMScnpGhu4E" rel="nofollow">https://youtu.be/qMScnpGhu4E</a> <br>
Yiming Chen - Promox: Roles, Protocols, and Mocks — <a href="https://youtu.be/Df81LbdRd0A" rel="nofollow">https://youtu.be/Df81LbdRd0A</a><br>
‘Mocks and explicit contracts’ — <a href="https://dashbit.co/blog/mocks-and-explicit-contracts" rel="nofollow">https://dashbit.co/blog/mocks-and-explicit-contracts</a><br>
Programming Phoenix — <a href="https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453" rel="nofollow">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>
Why Elixir Matters A Genealogy of Functional Programming - OsaGaius — <a href="https://youtu.be/X2u0bBqhRKE" rel="nofollow">https://youtu.be/X2u0bBqhRKE</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Yiming Chen.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Learning and Teaching Functional Programming with Adolfo Neto</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e4-neto</link>
      <guid isPermaLink="false">5c3a89b0-b7f6-4b83-aebb-af04520dba3e</guid>
      <pubDate>Tue, 23 Nov 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5c3a89b0-b7f6-4b83-aebb-af04520dba3e.mp3" length="69309578" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we are joined by programmer, professor, educator, and podcaster, Adolfo Neto! We talk about his early attraction to computers and how this led to a life in education and academia.</itunes:subtitle>
      <itunes:duration>47:53</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5c3a89b0-b7f6-4b83-aebb-af04520dba3e/cover.jpg" />
      <description>Today we are joined by programmer, professor, educator, and podcaster, Adolfo Neto! We have a fascinating conversation that continues our exploration of the theme of the impact of Elixir, hearing from Adolfo about his early attraction to computers and computer science, the decision to study the subject, and how this led to a life in education and academia. We also talk about growing up in Brazil and how geography influenced his career trajectory, before getting into some of the main outlets that Adolfo uses to share information on functional programming. He also comments on what he loves about Elixir, why learning it can improve any programmer's skills, and much more. One of Adolfo's main goals with his podcasts and YouTube channel is the diversification of the computer science field, and to bring the subject to a wider audience that may not always consider it an option to pursue. Towards the end of our chat, our guest shares some thoughts on useful resources to check out, and his desire to help the Elixir community to continue to grow!
Key Points From This Episode:
Opening remarks and rants from Adolfo regarding Livebook!
Adolfo's route into teaching and how he became a university professor. 
Information on Adolfo's Ph.D. program which he completed at the University of São Paulo.
The initial impetus to study computer science; what drew Adolfo to the field. 
Adolfo's YouTube channels and the subjects he covers for his audience.  
The course that Adolfo offers on Elixir to students all over the world! 
How Adolfo found and learned about functional programming. 
Adolfo's thoughts on the benefits of different functional programming languages.
The main goals that Adolfo has for his functional programming classes.
Adolfo's own forays into podcasting, and what drew him to the medium! 
Experiences in the South; Adolfo's early days studying the US.
Recommended resources for learning Elixir; the books and sites that Adolfo uses.
Adolfo's hopes for Elixir to keep growing and why he prefers functional programming. 
How to connect with Adolfo online and make use of some of his amazing content! 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Adolfo Neto on Twitter — https://twitter.com/adolfont
Adolfo Neto on YouTube — https://www.youtube.com/c/AdolfoNeto
Livebook — https://livebook.dev/#install
Fly.io — https://fly.io/
BASIC — https://en.wikipedia.org/wiki/BASIC
ML (programming language) — https://en.wikipedia.org/wiki/ML(programminglanguage)
Emílias on Twitter — https://twitter.com/emilias_utfpr
Elixir em Foco on Twitter — https://twitter.com/elixiremfoco
Seven Languages in Seven Weeks — https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X
Clojure — https://clojure.org/
Laurie Williams — https://collaboration.csc.ncsu.edu/laurie/
Saša Jurić — https://www.theerlangelist.com/
Brujo Benavides on LinkedIn — https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es
Elixir School — https://elixirschool.com/en/
Exercism Elixir Track — https://exercism.org/tracks/elixir
Exercism Erlang Track — https://exercism.org/tracks/erlang Special Guest: Adolfo Neto.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we are joined by programmer, professor, educator, and podcaster, Adolfo Neto! We have a fascinating conversation that continues our exploration of the theme of the impact of Elixir, hearing from Adolfo about his early attraction to computers and computer science, the decision to study the subject, and how this led to a life in education and academia. We also talk about growing up in Brazil and how geography influenced his career trajectory, before getting into some of the main outlets that Adolfo uses to share information on functional programming. He also comments on what he loves about Elixir, why learning it can improve any programmer&#39;s skills, and much more. One of Adolfo&#39;s main goals with his podcasts and YouTube channel is the diversification of the computer science field, and to bring the subject to a wider audience that may not always consider it an option to pursue. Towards the end of our chat, our guest shares some thoughts on useful resources to check out, and his desire to help the Elixir community to continue to grow!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Opening remarks and rants from Adolfo regarding Livebook!</li>
<li>Adolfo&#39;s route into teaching and how he became a university professor. </li>
<li>Information on Adolfo&#39;s Ph.D. program which he completed at the University of São Paulo.</li>
<li>The initial impetus to study computer science; what drew Adolfo to the field. </li>
<li>Adolfo&#39;s YouTube channels and the subjects he covers for his audience.<br></li>
<li>The course that Adolfo offers on Elixir to students all over the world! </li>
<li>How Adolfo found and learned about functional programming. </li>
<li>Adolfo&#39;s thoughts on the benefits of different functional programming languages.</li>
<li>The main goals that Adolfo has for his functional programming classes.</li>
<li>Adolfo&#39;s own forays into podcasting, and what drew him to the medium! </li>
<li>Experiences in the South; Adolfo&#39;s early days studying the US.</li>
<li>Recommended resources for learning Elixir; the books and sites that Adolfo uses.</li>
<li>Adolfo&#39;s hopes for Elixir to keep growing and why he prefers functional programming. </li>
<li>How to connect with Adolfo online and make use of some of his amazing content! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Adolfo Neto on Twitter — <a href="https://twitter.com/adolfont" rel="nofollow">https://twitter.com/adolfont</a><br>
Adolfo Neto on YouTube — <a href="https://www.youtube.com/c/AdolfoNeto" rel="nofollow">https://www.youtube.com/c/AdolfoNeto</a><br>
Livebook — <a href="https://livebook.dev/#install" rel="nofollow">https://livebook.dev/#install</a><br>
Fly.io — <a href="https://fly.io/" rel="nofollow">https://fly.io/</a><br>
BASIC — <a href="https://en.wikipedia.org/wiki/BASIC" rel="nofollow">https://en.wikipedia.org/wiki/BASIC</a><br>
ML (programming language) — <a href="https://en.wikipedia.org/wiki/ML_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/ML_(programming_language)</a><br>
Emílias on Twitter — <a href="https://twitter.com/emilias_utfpr" rel="nofollow">https://twitter.com/emilias_utfpr</a><br>
Elixir em Foco on Twitter — <a href="https://twitter.com/elixiremfoco" rel="nofollow">https://twitter.com/elixiremfoco</a><br>
Seven Languages in Seven Weeks — <a href="https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X" rel="nofollow">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Laurie Williams — <a href="https://collaboration.csc.ncsu.edu/laurie/" rel="nofollow">https://collaboration.csc.ncsu.edu/laurie/</a><br>
Saša Jurić — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Brujo Benavides on LinkedIn — <a href="https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es" rel="nofollow">https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Exercism Elixir Track — <a href="https://exercism.org/tracks/elixir" rel="nofollow">https://exercism.org/tracks/elixir</a><br>
Exercism Erlang Track — <a href="https://exercism.org/tracks/erlang" rel="nofollow">https://exercism.org/tracks/erlang</a></p><p>Special Guest: Adolfo Neto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we are joined by programmer, professor, educator, and podcaster, Adolfo Neto! We have a fascinating conversation that continues our exploration of the theme of the impact of Elixir, hearing from Adolfo about his early attraction to computers and computer science, the decision to study the subject, and how this led to a life in education and academia. We also talk about growing up in Brazil and how geography influenced his career trajectory, before getting into some of the main outlets that Adolfo uses to share information on functional programming. He also comments on what he loves about Elixir, why learning it can improve any programmer&#39;s skills, and much more. One of Adolfo&#39;s main goals with his podcasts and YouTube channel is the diversification of the computer science field, and to bring the subject to a wider audience that may not always consider it an option to pursue. Towards the end of our chat, our guest shares some thoughts on useful resources to check out, and his desire to help the Elixir community to continue to grow!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Opening remarks and rants from Adolfo regarding Livebook!</li>
<li>Adolfo&#39;s route into teaching and how he became a university professor. </li>
<li>Information on Adolfo&#39;s Ph.D. program which he completed at the University of São Paulo.</li>
<li>The initial impetus to study computer science; what drew Adolfo to the field. </li>
<li>Adolfo&#39;s YouTube channels and the subjects he covers for his audience.<br></li>
<li>The course that Adolfo offers on Elixir to students all over the world! </li>
<li>How Adolfo found and learned about functional programming. </li>
<li>Adolfo&#39;s thoughts on the benefits of different functional programming languages.</li>
<li>The main goals that Adolfo has for his functional programming classes.</li>
<li>Adolfo&#39;s own forays into podcasting, and what drew him to the medium! </li>
<li>Experiences in the South; Adolfo&#39;s early days studying the US.</li>
<li>Recommended resources for learning Elixir; the books and sites that Adolfo uses.</li>
<li>Adolfo&#39;s hopes for Elixir to keep growing and why he prefers functional programming. </li>
<li>How to connect with Adolfo online and make use of some of his amazing content! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Adolfo Neto on Twitter — <a href="https://twitter.com/adolfont" rel="nofollow">https://twitter.com/adolfont</a><br>
Adolfo Neto on YouTube — <a href="https://www.youtube.com/c/AdolfoNeto" rel="nofollow">https://www.youtube.com/c/AdolfoNeto</a><br>
Livebook — <a href="https://livebook.dev/#install" rel="nofollow">https://livebook.dev/#install</a><br>
Fly.io — <a href="https://fly.io/" rel="nofollow">https://fly.io/</a><br>
BASIC — <a href="https://en.wikipedia.org/wiki/BASIC" rel="nofollow">https://en.wikipedia.org/wiki/BASIC</a><br>
ML (programming language) — <a href="https://en.wikipedia.org/wiki/ML_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/ML_(programming_language)</a><br>
Emílias on Twitter — <a href="https://twitter.com/emilias_utfpr" rel="nofollow">https://twitter.com/emilias_utfpr</a><br>
Elixir em Foco on Twitter — <a href="https://twitter.com/elixiremfoco" rel="nofollow">https://twitter.com/elixiremfoco</a><br>
Seven Languages in Seven Weeks — <a href="https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X" rel="nofollow">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Laurie Williams — <a href="https://collaboration.csc.ncsu.edu/laurie/" rel="nofollow">https://collaboration.csc.ncsu.edu/laurie/</a><br>
Saša Jurić — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Brujo Benavides on LinkedIn — <a href="https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es" rel="nofollow">https://www.linkedin.com/in/elbrujohalcon?originalSubdomain=es</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Exercism Elixir Track — <a href="https://exercism.org/tracks/elixir" rel="nofollow">https://exercism.org/tracks/elixir</a><br>
Exercism Erlang Track — <a href="https://exercism.org/tracks/erlang" rel="nofollow">https://exercism.org/tracks/erlang</a></p><p>Special Guest: Adolfo Neto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>The Benefits of Consistently Growing Your Toolset with Florian Kraft</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e3-kraft</link>
      <guid isPermaLink="false">e7dec128-99fe-4b5f-9f1c-0844b6424558</guid>
      <pubDate>Thu, 18 Nov 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e7dec128-99fe-4b5f-9f1c-0844b6424558.mp3" length="47010995" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>As we continue this season of the podcast, we are joined by Florian Kraft. Florian works as a software engineer at Contentful, and has a number of exciting open-source projects that he is currently involved with.</itunes:subtitle>
      <itunes:duration>48:52</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e7dec128-99fe-4b5f-9f1c-0844b6424558/cover.jpg" />
      <description>As we continue this season of the podcast, focusing on the impact of Elixir, we are joined by Florian Kraft, all the way from Berlin, Germany! Florian works as a software engineer at Contentful, and has a number of exciting open-source projects that he is currently involved with. In our fun conversation with Florian, we get to hear about the events that led up to him becoming interested in computers and working with software, and why he maintains a light-hearted attitude when talking about his expertise. We also get to hear from our guest about his thoughts on a few other languages, and why learning new languages is a great way to constantly improve your work in the languages you already know! Florian talks about what drew him to Elixir and the community and also shares some of his reflections from this year's virtual Elixir Wizards conference. Towards the end of our chat, Florian tells us about his work with AdoptOSS and Mimicry, which you can currently find on GitHub, both of which we are quite excited about! So to hear it all from Florian and our usual suspects, be sure to listen in!
Key Points From This Episode:
Florian's interesting route into the world of software engineering. 
How Florian views his experiences and skills as a software engineer. 
Florian's thoughts on Haskell and some of the best resources for learning about it.
The languages that Florian uses in his work at Contentful. 
Experiences entering into the Elixir community and the colleague who introduced him to the language! 
Life in Germany and Berlin; thoughts on the seasons, and the general culture. 
Florian's experiences at this year's Elixir Wizards conference; warming to virtual events. 
Staying active in the Elixir community and Florian's honest confessions about the time he puts in. 
Features that Florian misses and wishes for when working in Elixir. 
Immutability and pattern matching: Florian's favorite parts of Elixir!
Some of the open-source Elixir projects that Florian is currently working on.
The video games that Florian has most enjoyed recently and some of his all-time favorites!  
Where to find and connect with Florian and his exciting projects!
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Florian Kraft — github.com/FlorianK
Contentful — https://www.contentful.com/
Exercism — https://exercism.org/
Adoptoposs — https://adoptoposs.org
Adoptoposs Github — https://github.com/adoptoposs/adoptoposs
Mimicry — https://github.com/mimicry-tech/mimicry
Learn You a Haskell for Great Good — https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839
Haskell — https://www.haskell.org/
Prolog — https://www.cpp.edu/~jrfisher/www/prologtutorial/ptframer.html
Learn You Some Erlang for Great Good — https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351
Elixir in Action, Second Edition — https://www.manning.com/books/elixir-in-action-second-edition
Gleam — https://gleam.run/
Autobutler — https://autobutler.co.uk 
Squid Game — https://www.rottentomatoes.com/tv/squidgame
Oktoberfest — https://www.imdb.com/title/tt10244612/
Toucan — https://www.toucan.events/
The Binding of Isaac — https://store.steampowered.com/app/113200/TheBindingofIsaac/
Zelda — https://www.zelda.com/
Doom — https://bethesda.net/en/game/doom
Defragmenting C Drive — http://hultbergs.org/defrag/ Special Guest: Florian Kraft.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>As we continue this season of the podcast, focusing on the impact of Elixir, we are joined by Florian Kraft, all the way from Berlin, Germany! Florian works as a software engineer at Contentful, and has a number of exciting open-source projects that he is currently involved with. In our fun conversation with Florian, we get to hear about the events that led up to him becoming interested in computers and working with software, and why he maintains a light-hearted attitude when talking about his expertise. We also get to hear from our guest about his thoughts on a few other languages, and why learning new languages is a great way to constantly improve your work in the languages you already know! Florian talks about what drew him to Elixir and the community and also shares some of his reflections from this year&#39;s virtual Elixir Wizards conference. Towards the end of our chat, Florian tells us about his work with AdoptOSS and Mimicry, which you can currently find on GitHub, both of which we are quite excited about! So to hear it all from Florian and our usual suspects, be sure to listen in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Florian&#39;s interesting route into the world of software engineering. </li>
<li>How Florian views his experiences and skills as a software engineer. </li>
<li>Florian&#39;s thoughts on Haskell and some of the best resources for learning about it.</li>
<li>The languages that Florian uses in his work at Contentful. </li>
<li>Experiences entering into the Elixir community and the colleague who introduced him to the language! </li>
<li>Life in Germany and Berlin; thoughts on the seasons, and the general culture. </li>
<li>Florian&#39;s experiences at this year&#39;s Elixir Wizards conference; warming to virtual events. </li>
<li>Staying active in the Elixir community and Florian&#39;s honest confessions about the time he puts in. </li>
<li>Features that Florian misses and wishes for when working in Elixir. </li>
<li>Immutability and pattern matching: Florian&#39;s favorite parts of Elixir!</li>
<li>Some of the open-source Elixir projects that Florian is currently working on.</li>
<li>The video games that Florian has most enjoyed recently and some of his all-time favorites!<br></li>
<li>Where to find and connect with Florian and his exciting projects!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Florian Kraft — github.com/FlorianK<br>
Contentful — <a href="https://www.contentful.com/" rel="nofollow">https://www.contentful.com/</a><br>
Exercism — <a href="https://exercism.org/" rel="nofollow">https://exercism.org/</a><br>
Adoptoposs — <a href="https://adoptoposs.org" rel="nofollow">https://adoptoposs.org</a><br>
Adoptoposs Github — <a href="https://github.com/adoptoposs/adoptoposs" rel="nofollow">https://github.com/adoptoposs/adoptoposs</a><br>
Mimicry — <a href="https://github.com/mimicry-tech/mimicry" rel="nofollow">https://github.com/mimicry-tech/mimicry</a><br>
Learn You a Haskell for Great Good — <a href="https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839" rel="nofollow">https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Prolog — <a href="https://www.cpp.edu/%7Ejrfisher/www/prolog_tutorial/pt_framer.html" rel="nofollow">https://www.cpp.edu/~jrfisher/www/prolog_tutorial/pt_framer.html</a><br>
Learn You Some Erlang for Great Good — <a href="https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351" rel="nofollow">https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351</a><br>
Elixir in Action, Second Edition — <a href="https://www.manning.com/books/elixir-in-action-second-edition" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Autobutler — <a href="https://autobutler.co.uk" rel="nofollow">https://autobutler.co.uk</a> <br>
Squid Game — <a href="https://www.rottentomatoes.com/tv/squid_game" rel="nofollow">https://www.rottentomatoes.com/tv/squid_game</a><br>
Oktoberfest — <a href="https://www.imdb.com/title/tt10244612/" rel="nofollow">https://www.imdb.com/title/tt10244612/</a><br>
Toucan — <a href="https://www.toucan.events/" rel="nofollow">https://www.toucan.events/</a><br>
The Binding of Isaac — <a href="https://store.steampowered.com/app/113200/The_Binding_of_Isaac/" rel="nofollow">https://store.steampowered.com/app/113200/The_Binding_of_Isaac/</a><br>
Zelda — <a href="https://www.zelda.com/" rel="nofollow">https://www.zelda.com/</a><br>
Doom — <a href="https://bethesda.net/en/game/doom" rel="nofollow">https://bethesda.net/en/game/doom</a><br>
Defragmenting C Drive — <a href="http://hultbergs.org/defrag/" rel="nofollow">http://hultbergs.org/defrag/</a></p><p>Special Guest: Florian Kraft.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>As we continue this season of the podcast, focusing on the impact of Elixir, we are joined by Florian Kraft, all the way from Berlin, Germany! Florian works as a software engineer at Contentful, and has a number of exciting open-source projects that he is currently involved with. In our fun conversation with Florian, we get to hear about the events that led up to him becoming interested in computers and working with software, and why he maintains a light-hearted attitude when talking about his expertise. We also get to hear from our guest about his thoughts on a few other languages, and why learning new languages is a great way to constantly improve your work in the languages you already know! Florian talks about what drew him to Elixir and the community and also shares some of his reflections from this year&#39;s virtual Elixir Wizards conference. Towards the end of our chat, Florian tells us about his work with AdoptOSS and Mimicry, which you can currently find on GitHub, both of which we are quite excited about! So to hear it all from Florian and our usual suspects, be sure to listen in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Florian&#39;s interesting route into the world of software engineering. </li>
<li>How Florian views his experiences and skills as a software engineer. </li>
<li>Florian&#39;s thoughts on Haskell and some of the best resources for learning about it.</li>
<li>The languages that Florian uses in his work at Contentful. </li>
<li>Experiences entering into the Elixir community and the colleague who introduced him to the language! </li>
<li>Life in Germany and Berlin; thoughts on the seasons, and the general culture. </li>
<li>Florian&#39;s experiences at this year&#39;s Elixir Wizards conference; warming to virtual events. </li>
<li>Staying active in the Elixir community and Florian&#39;s honest confessions about the time he puts in. </li>
<li>Features that Florian misses and wishes for when working in Elixir. </li>
<li>Immutability and pattern matching: Florian&#39;s favorite parts of Elixir!</li>
<li>Some of the open-source Elixir projects that Florian is currently working on.</li>
<li>The video games that Florian has most enjoyed recently and some of his all-time favorites!<br></li>
<li>Where to find and connect with Florian and his exciting projects!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Florian Kraft — github.com/FlorianK<br>
Contentful — <a href="https://www.contentful.com/" rel="nofollow">https://www.contentful.com/</a><br>
Exercism — <a href="https://exercism.org/" rel="nofollow">https://exercism.org/</a><br>
Adoptoposs — <a href="https://adoptoposs.org" rel="nofollow">https://adoptoposs.org</a><br>
Adoptoposs Github — <a href="https://github.com/adoptoposs/adoptoposs" rel="nofollow">https://github.com/adoptoposs/adoptoposs</a><br>
Mimicry — <a href="https://github.com/mimicry-tech/mimicry" rel="nofollow">https://github.com/mimicry-tech/mimicry</a><br>
Learn You a Haskell for Great Good — <a href="https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839" rel="nofollow">https://www.amazon.com/Learn-You-Haskell-Great-Good/dp/1593272839</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Prolog — <a href="https://www.cpp.edu/%7Ejrfisher/www/prolog_tutorial/pt_framer.html" rel="nofollow">https://www.cpp.edu/~jrfisher/www/prolog_tutorial/pt_framer.html</a><br>
Learn You Some Erlang for Great Good — <a href="https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351" rel="nofollow">https://www.amazon.com/Learn-Some-Erlang-Great-Good/dp/1593274351</a><br>
Elixir in Action, Second Edition — <a href="https://www.manning.com/books/elixir-in-action-second-edition" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Autobutler — <a href="https://autobutler.co.uk" rel="nofollow">https://autobutler.co.uk</a> <br>
Squid Game — <a href="https://www.rottentomatoes.com/tv/squid_game" rel="nofollow">https://www.rottentomatoes.com/tv/squid_game</a><br>
Oktoberfest — <a href="https://www.imdb.com/title/tt10244612/" rel="nofollow">https://www.imdb.com/title/tt10244612/</a><br>
Toucan — <a href="https://www.toucan.events/" rel="nofollow">https://www.toucan.events/</a><br>
The Binding of Isaac — <a href="https://store.steampowered.com/app/113200/The_Binding_of_Isaac/" rel="nofollow">https://store.steampowered.com/app/113200/The_Binding_of_Isaac/</a><br>
Zelda — <a href="https://www.zelda.com/" rel="nofollow">https://www.zelda.com/</a><br>
Doom — <a href="https://bethesda.net/en/game/doom" rel="nofollow">https://bethesda.net/en/game/doom</a><br>
Defragmenting C Drive — <a href="http://hultbergs.org/defrag/" rel="nofollow">http://hultbergs.org/defrag/</a></p><p>Special Guest: Florian Kraft.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Re-Platforming One of the Original Dot Coms in Elixir with Angel Jose</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e2-jose</link>
      <guid isPermaLink="false">196446c8-44e8-4c34-86c8-a688bfb3f706</guid>
      <pubDate>Thu, 11 Nov 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/196446c8-44e8-4c34-86c8-a688bfb3f706.mp3" length="69371510" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com. He played a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other open source tooling,</itunes:subtitle>
      <itunes:duration>47:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/196446c8-44e8-4c34-86c8-a688bfb3f706/cover.jpg" />
      <description>Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com with a passion for product and the customer experience. Angel played a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other open source tooling, and his former adventures in the blockchain space include working with ETH, EOS, and general distributed tooling. In today’s episode, we discuss Cars.com's decision to migrate to an entirely Elixir-based system, rebuilding the data model from scratch, redesigning all of the user interfaces, and what that meant for the team that Angel was tasked with leading, as well as how the Elixir system functions at such incredible scale, with Cars.com receiving more than a million visitors daily! We touch on Angel’s approach to onboarding new engineers, how Elixir impacts this process, and the broader impact Elixir has on the community as a whole, as well as what he hopes to see from the community in the future, so make sure not to miss this awesome conversation about adopting Elixir with Angel Jose! 
Key Points From This Episode:
Hot takes, rants, and obsessions: Angel’s best and worst taco experiences.
Why Angel won’t be at ElixirConf 2021 and the story of how he began programming in Elixir.
The process of finding a job in software engineering after completing an online bootcamp.
Angel’s experience of navigating the freedom that comes with being an engineer.
Find out how Angel got involved in re-platforming Cars.com, one of the original dot coms. 
Get a glimpse into the make up of the engineering team at Cars.com.
How the pandemic impacted not only Angel’s deadlines but the car industry as a whole.
The ETL pipeline of different data points that makes up Cars.com and Auto.com.
Angel shares his opinion of LiveView and what he has learned about using it at scale.
Advice for those adopting new technology: make sure there are enough resources out there.
Where Angel believes his team would be without Elixir and what they are looking forward to.
Some of the tangible benefits Cars.com has seen from flipping the switch to Elixir.
How Angel approaches onboarding new engineers by providing them with resources and integrating learning into their day-to-day.
The importance of celebrating small wins and fostering feelings of accomplishment.
Angel on how Elixir impacts onboarding and new engineers; more simplicity, less magic.
How Elixir has impacted the programming community and what Angel hopes to see in future.
Taco happy hour, conference food, making the most of each meal, remote work, and more!
What Angel has learned from working remotely, particularly from a social perspective.
Angel shares his dream car after working at Cars.com and moving to Colorado.
Links Mentioned in Today’s Episode:
Angel Jose on LinkedIn — https://www.linkedin.com/in/ajose01/
Angel Jose on Twitter — https://twitter.com/ajose01
Cars.com — https://www.cars.com/
Cars.com Careers — https://www.cars.com/careers/
Elixir Conf — https://2021.elixirconf.com/
Elixir Slack — https://elixir-slackin.herokuapp.com/
General Assembly — https://generalassemb.ly/
SmartLogic — https://smartlogic.io/  Special Guest: Angel Jose.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com with a passion for product and the customer experience. Angel played a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other open source tooling, and his former adventures in the blockchain space include working with ETH, EOS, and general distributed tooling. In today’s episode, we discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system, rebuilding the data model from scratch, redesigning all of the user interfaces, and what that meant for the team that Angel was tasked with leading, as well as how the Elixir system functions at such incredible scale, with Cars.com receiving more than a million visitors daily! We touch on Angel’s approach to onboarding new engineers, how Elixir impacts this process, and the broader impact Elixir has on the community as a whole, as well as what he hopes to see from the community in the future, so make sure not to miss this awesome conversation about adopting Elixir with Angel Jose! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Hot takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>
<li>Why Angel won’t be at ElixirConf 2021 and the story of how he began programming in Elixir.</li>
<li>The process of finding a job in software engineering after completing an online bootcamp.</li>
<li>Angel’s experience of navigating the freedom that comes with being an engineer.</li>
<li>Find out how Angel got involved in re-platforming Cars.com, one of the original dot coms. </li>
<li>Get a glimpse into the make up of the engineering team at Cars.com.</li>
<li>How the pandemic impacted not only Angel’s deadlines but the car industry as a whole.</li>
<li>The ETL pipeline of different data points that makes up Cars.com and Auto.com.</li>
<li>Angel shares his opinion of LiveView and what he has learned about using it at scale.</li>
<li>Advice for those adopting new technology: make sure there are enough resources out there.</li>
<li>Where Angel believes his team would be without Elixir and what they are looking forward to.</li>
<li>Some of the tangible benefits Cars.com has seen from flipping the switch to Elixir.</li>
<li>How Angel approaches onboarding new engineers by providing them with resources and integrating learning into their day-to-day.</li>
<li>The importance of celebrating small wins and fostering feelings of accomplishment.</li>
<li>Angel on how Elixir impacts onboarding and new engineers; more simplicity, less magic.</li>
<li>How Elixir has impacted the programming community and what Angel hopes to see in future.</li>
<li>Taco happy hour, conference food, making the most of each meal, remote work, and more!</li>
<li>What Angel has learned from working remotely, particularly from a social perspective.</li>
<li>Angel shares his dream car after working at Cars.com and moving to Colorado.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Angel Jose on LinkedIn — <a href="https://www.linkedin.com/in/ajose01/" rel="nofollow">https://www.linkedin.com/in/ajose01/</a><br>
Angel Jose on Twitter — <a href="https://twitter.com/ajose01" rel="nofollow">https://twitter.com/ajose01</a><br>
Cars.com — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
Cars.com Careers — <a href="https://www.cars.com/careers/" rel="nofollow">https://www.cars.com/careers/</a><br>
Elixir Conf — <a href="https://2021.elixirconf.com/" rel="nofollow">https://2021.elixirconf.com/</a><br>
Elixir Slack — <a href="https://elixir-slackin.herokuapp.com/" rel="nofollow">https://elixir-slackin.herokuapp.com/</a><br>
General Assembly — <a href="https://generalassemb.ly/" rel="nofollow">https://generalassemb.ly/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Angel Jose.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today’s guest is Angel Jose, a Software Engineer Manager at Cars.com with a passion for product and the customer experience. Angel played a key role in completely re-platforming Cars.com via Elixir, Phoenix, and other open source tooling, and his former adventures in the blockchain space include working with ETH, EOS, and general distributed tooling. In today’s episode, we discuss Cars.com&#39;s decision to migrate to an entirely Elixir-based system, rebuilding the data model from scratch, redesigning all of the user interfaces, and what that meant for the team that Angel was tasked with leading, as well as how the Elixir system functions at such incredible scale, with Cars.com receiving more than a million visitors daily! We touch on Angel’s approach to onboarding new engineers, how Elixir impacts this process, and the broader impact Elixir has on the community as a whole, as well as what he hopes to see from the community in the future, so make sure not to miss this awesome conversation about adopting Elixir with Angel Jose! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Hot takes, rants, and obsessions: Angel’s best and worst taco experiences.</li>
<li>Why Angel won’t be at ElixirConf 2021 and the story of how he began programming in Elixir.</li>
<li>The process of finding a job in software engineering after completing an online bootcamp.</li>
<li>Angel’s experience of navigating the freedom that comes with being an engineer.</li>
<li>Find out how Angel got involved in re-platforming Cars.com, one of the original dot coms. </li>
<li>Get a glimpse into the make up of the engineering team at Cars.com.</li>
<li>How the pandemic impacted not only Angel’s deadlines but the car industry as a whole.</li>
<li>The ETL pipeline of different data points that makes up Cars.com and Auto.com.</li>
<li>Angel shares his opinion of LiveView and what he has learned about using it at scale.</li>
<li>Advice for those adopting new technology: make sure there are enough resources out there.</li>
<li>Where Angel believes his team would be without Elixir and what they are looking forward to.</li>
<li>Some of the tangible benefits Cars.com has seen from flipping the switch to Elixir.</li>
<li>How Angel approaches onboarding new engineers by providing them with resources and integrating learning into their day-to-day.</li>
<li>The importance of celebrating small wins and fostering feelings of accomplishment.</li>
<li>Angel on how Elixir impacts onboarding and new engineers; more simplicity, less magic.</li>
<li>How Elixir has impacted the programming community and what Angel hopes to see in future.</li>
<li>Taco happy hour, conference food, making the most of each meal, remote work, and more!</li>
<li>What Angel has learned from working remotely, particularly from a social perspective.</li>
<li>Angel shares his dream car after working at Cars.com and moving to Colorado.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Angel Jose on LinkedIn — <a href="https://www.linkedin.com/in/ajose01/" rel="nofollow">https://www.linkedin.com/in/ajose01/</a><br>
Angel Jose on Twitter — <a href="https://twitter.com/ajose01" rel="nofollow">https://twitter.com/ajose01</a><br>
Cars.com — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
Cars.com Careers — <a href="https://www.cars.com/careers/" rel="nofollow">https://www.cars.com/careers/</a><br>
Elixir Conf — <a href="https://2021.elixirconf.com/" rel="nofollow">https://2021.elixirconf.com/</a><br>
Elixir Slack — <a href="https://elixir-slackin.herokuapp.com/" rel="nofollow">https://elixir-slackin.herokuapp.com/</a><br>
General Assembly — <a href="https://generalassemb.ly/" rel="nofollow">https://generalassemb.ly/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Angel Jose.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>The Impact of Elixir Launchisode</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s7e1-launchisode</link>
      <guid isPermaLink="false">6610fc7c-e295-43f4-b542-40847c96f358</guid>
      <pubDate>Thu, 04 Nov 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6610fc7c-e295-43f4-b542-40847c96f358.mp3" length="56531123" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>7</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>As we kick off our new, seventh season of the Elixir Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having a simple chat between our panel and foregoing our usual guest format.</itunes:subtitle>
      <itunes:duration>58:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6610fc7c-e295-43f4-b542-40847c96f358/cover.jpg" />
      <description>As we kick off our new, seventh season of the Elixir Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having a simple chat between our panel and foregoing our usual guest format. As fans of podcasts ourselves, we always like to get to know some of the personalities behind the voices, so we decided to take this opportunity to do just that, with Alex, Sundi, and Eric! So to hear a little about what to expect in the coming weeks of the show, what the teams have been up to recently, both professionally and beyond, and to just enjoy a quick hangout with some friendly voices, make sure you tune into this launchisode!
Key Points From This Episode:
What our team has been up to recently: new projects, the apprentice program, and more. 
Reflections on this iteration of the apprentice program and differences from 2018.  
The recent ElixirConf and how our panel was involved in the event.
Inside information that is shared at conferences and learning about the world!
Avoiding the pressure to always do more while engaging in the community.
Noting the impact that Elixir has had on each of us, and how we write code respectively. 
Proactive learning and career growth; looking forward to the new season exploring these subjects! 
Staying focused on what's important, getting rest, and pursuing passions.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Aino — https://github.com/oestrich/aino
Aino Read Me — https://ainoweb.dev/readme.html
King Tooth — https://www.instagram.com/kingtoothpug/
SmartLogic Apprenticeship Program — https://smartlogic.io/about/community/apprentice/
SmartLogic Welcomes Two New Developer Apprentices to the Team! — https://smartlogic.io/blog/2021apprentices/
Elixir Conf — https://2021.elixirconf.com/
Culttt — https://www.culttt.com/
Shrek — https://www.rottentomatoes.com/m/shrek
Kangaroo Jack — https://www.rottentomatoes.com/m/kangaroojack
Korn — https://www.kornofficial.com/
Flutter — https://flutter.dev/docs/resources/books
Lonestar Elixir — https://lonestarelixir.com/ 
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>As we kick off our new, seventh season of the Elixir Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having a simple chat between our panel and foregoing our usual guest format. As fans of podcasts ourselves, we always like to get to know some of the personalities behind the voices, so we decided to take this opportunity to do just that, with Alex, Sundi, and Eric! So to hear a little about what to expect in the coming weeks of the show, what the teams have been up to recently, both professionally and beyond, and to just enjoy a quick hangout with some friendly voices, make sure you tune into this launchisode!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>What our team has been up to recently: new projects, the apprentice program, and more. </li>
<li>Reflections on this iteration of the apprentice program and differences from 2018.<br></li>
<li>The recent ElixirConf and how our panel was involved in the event.</li>
<li>Inside information that is shared at conferences and learning about the world!</li>
<li>Avoiding the pressure to always do more while engaging in the community.</li>
<li>Noting the impact that Elixir has had on each of us, and how we write code respectively. </li>
<li>Proactive learning and career growth; looking forward to the new season exploring these subjects! </li>
<li>Staying focused on what&#39;s important, getting rest, and pursuing passions.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Aino — <a href="https://github.com/oestrich/aino" rel="nofollow">https://github.com/oestrich/aino</a><br>
Aino Read Me — <a href="https://ainoweb.dev/readme.html" rel="nofollow">https://ainoweb.dev/readme.html</a><br>
King Tooth — <a href="https://www.instagram.com/kingtooth_pug/" rel="nofollow">https://www.instagram.com/kingtooth_pug/</a><br>
SmartLogic Apprenticeship Program — <a href="https://smartlogic.io/about/community/apprentice/" rel="nofollow">https://smartlogic.io/about/community/apprentice/</a><br>
SmartLogic Welcomes Two New Developer Apprentices to the Team! — <a href="https://smartlogic.io/blog/2021apprentices/" rel="nofollow">https://smartlogic.io/blog/2021apprentices/</a><br>
Elixir Conf — <a href="https://2021.elixirconf.com/" rel="nofollow">https://2021.elixirconf.com/</a><br>
Culttt — <a href="https://www.culttt.com/" rel="nofollow">https://www.culttt.com/</a><br>
Shrek — <a href="https://www.rottentomatoes.com/m/shrek" rel="nofollow">https://www.rottentomatoes.com/m/shrek</a><br>
Kangaroo Jack — <a href="https://www.rottentomatoes.com/m/kangaroo_jack" rel="nofollow">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>
Korn — <a href="https://www.kornofficial.com/" rel="nofollow">https://www.kornofficial.com/</a><br>
Flutter — <a href="https://flutter.dev/docs/resources/books" rel="nofollow">https://flutter.dev/docs/resources/books</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>As we kick off our new, seventh season of the Elixir Wizards podcast, we wanted to introduce our theme of the impact of Elixir by having a simple chat between our panel and foregoing our usual guest format. As fans of podcasts ourselves, we always like to get to know some of the personalities behind the voices, so we decided to take this opportunity to do just that, with Alex, Sundi, and Eric! So to hear a little about what to expect in the coming weeks of the show, what the teams have been up to recently, both professionally and beyond, and to just enjoy a quick hangout with some friendly voices, make sure you tune into this launchisode!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>What our team has been up to recently: new projects, the apprentice program, and more. </li>
<li>Reflections on this iteration of the apprentice program and differences from 2018.<br></li>
<li>The recent ElixirConf and how our panel was involved in the event.</li>
<li>Inside information that is shared at conferences and learning about the world!</li>
<li>Avoiding the pressure to always do more while engaging in the community.</li>
<li>Noting the impact that Elixir has had on each of us, and how we write code respectively. </li>
<li>Proactive learning and career growth; looking forward to the new season exploring these subjects! </li>
<li>Staying focused on what&#39;s important, getting rest, and pursuing passions.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Aino — <a href="https://github.com/oestrich/aino" rel="nofollow">https://github.com/oestrich/aino</a><br>
Aino Read Me — <a href="https://ainoweb.dev/readme.html" rel="nofollow">https://ainoweb.dev/readme.html</a><br>
King Tooth — <a href="https://www.instagram.com/kingtooth_pug/" rel="nofollow">https://www.instagram.com/kingtooth_pug/</a><br>
SmartLogic Apprenticeship Program — <a href="https://smartlogic.io/about/community/apprentice/" rel="nofollow">https://smartlogic.io/about/community/apprentice/</a><br>
SmartLogic Welcomes Two New Developer Apprentices to the Team! — <a href="https://smartlogic.io/blog/2021apprentices/" rel="nofollow">https://smartlogic.io/blog/2021apprentices/</a><br>
Elixir Conf — <a href="https://2021.elixirconf.com/" rel="nofollow">https://2021.elixirconf.com/</a><br>
Culttt — <a href="https://www.culttt.com/" rel="nofollow">https://www.culttt.com/</a><br>
Shrek — <a href="https://www.rottentomatoes.com/m/shrek" rel="nofollow">https://www.rottentomatoes.com/m/shrek</a><br>
Kangaroo Jack — <a href="https://www.rottentomatoes.com/m/kangaroo_jack" rel="nofollow">https://www.rottentomatoes.com/m/kangaroo_jack</a><br>
Korn — <a href="https://www.kornofficial.com/" rel="nofollow">https://www.kornofficial.com/</a><br>
Flutter — <a href="https://flutter.dev/docs/resources/books" rel="nofollow">https://flutter.dev/docs/resources/books</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Wrapping up BEAM Magic with Amos King</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e12-king</link>
      <guid isPermaLink="false">5bcca27a-dc98-4584-a152-84f4b04ee0d5</guid>
      <pubDate>Thu, 26 Aug 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5bcca27a-dc98-4584-a152-84f4b04ee0d5.mp3" length="55716250" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We have reached the final episode of our season, and as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration behind this season's focus!</itunes:subtitle>
      <itunes:duration>57:56</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5bcca27a-dc98-4584-a152-84f4b04ee0d5/cover.jpg" />
      <description>We have reached the final episode of our season, and as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration behind this season's focus! We've had such a great time this season and hope that our listeners have enjoyed it as much as we have, and gained something in the process. Our conversation with Amos jumps around from exploring his experiences during the last year and a half, to the journey he has been on with his company, Binary Noggin, life as a CEO, and much more! We delve into some thoughts from our guest about the relationship between magic and understanding and also talk a little about this year's upcoming ElixirConf, where Amos will be speaking. Amos also shares how learning a new language can help the coding you do in languages you already know, and tells an interesting story about how he turned a long commute into a superpower! So stay tuned for Season 7, coming to you soon, and thank you for sticking with us this long!
Key Points From This Episode:
Looking forward to this year's ElixirConf and the hope that it will proceed.
Amos' return to the office after three months of working from home.
A little about Binary Noggin and the different size clients they work with. 
The inspiration behind the company name and the transition from side work to a full-time gig. 
Amos' experiences as a CEO during the pandemic and the surprising growth at Binary Noggin.
How Amos inspired the BEAM Magic theme for this season and his thoughts on understanding. 
Amos' experiences of speaking at conferences and the possibility of presenting about magic.  
Some details on Amos' talk this year at ElixirConf.
How Amos was introduced to Elixir through Erlang and the things that made him love it! 
The impact that learning new languages can have on your work in general. 
How an extremely long commute early in Amos' career served him in unexpected ways. 
Links Mentioned in Today’s Episode:
SmartLogic Jobs — https://smartlogic.io/about/jobs 
Amos King on Twitter — https://twitter.com/adkron
Binary Noggin — https://binarynoggin.com/
Binary Noggin Careers — https://binarynoggin.com/about-us/#careers
Binary Noggin Email — contact@binarynoggin.com
DirtyInformation — http://dirtyinformation.com/
Elixir Outlaws — https://elixiroutlaws.com/
Wallaby — https://github.com/elixir-wallaby/wallaby
Testing Elixir — https://www.goodreads.com/book/show/54156353-testing-elixir Special Guest: Amos King.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We have reached the final episode of our season, and as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such a great time this season and hope that our listeners have enjoyed it as much as we have, and gained something in the process. Our conversation with Amos jumps around from exploring his experiences during the last year and a half, to the journey he has been on with his company, Binary Noggin, life as a CEO, and much more! We delve into some thoughts from our guest about the relationship between magic and understanding and also talk a little about this year&#39;s upcoming ElixirConf, where Amos will be speaking. Amos also shares how learning a new language can help the coding you do in languages you already know, and tells an interesting story about how he turned a long commute into a superpower! So stay tuned for Season 7, coming to you soon, and thank you for sticking with us this long!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Looking forward to this year&#39;s ElixirConf and the hope that it will proceed.</li>
<li>Amos&#39; return to the office after three months of working from home.</li>
<li>A little about Binary Noggin and the different size clients they work with. </li>
<li>The inspiration behind the company name and the transition from side work to a full-time gig. </li>
<li>Amos&#39; experiences as a CEO during the pandemic and the surprising growth at Binary Noggin.</li>
<li>How Amos inspired the BEAM Magic theme for this season and his thoughts on understanding. </li>
<li>Amos&#39; experiences of speaking at conferences and the possibility of presenting about magic.<br></li>
<li>Some details on Amos&#39; talk this year at ElixirConf.</li>
<li>How Amos was introduced to Elixir through Erlang and the things that made him love it! </li>
<li>The impact that learning new languages can have on your work in general. </li>
<li>How an extremely long commute early in Amos&#39; career served him in unexpected ways. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic Jobs — <a href="https://smartlogic.io/about/jobs" rel="nofollow">https://smartlogic.io/about/jobs</a> <br>
Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Binary Noggin Careers — <a href="https://binarynoggin.com/about-us/#careers" rel="nofollow">https://binarynoggin.com/about-us/#careers</a><br>
Binary Noggin Email — <a href="mailto:contact@binarynoggin.com" rel="nofollow">contact@binarynoggin.com</a><br>
DirtyInformation — <a href="http://dirtyinformation.com/" rel="nofollow">http://dirtyinformation.com/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Wallaby — <a href="https://github.com/elixir-wallaby/wallaby" rel="nofollow">https://github.com/elixir-wallaby/wallaby</a><br>
Testing Elixir — <a href="https://www.goodreads.com/book/show/54156353-testing-elixir" rel="nofollow">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special Guest: Amos King.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We have reached the final episode of our season, and as we wrap up our exploration of BEAM magic, we are joined by Amos King, whose tweet was the inspiration behind this season&#39;s focus! We&#39;ve had such a great time this season and hope that our listeners have enjoyed it as much as we have, and gained something in the process. Our conversation with Amos jumps around from exploring his experiences during the last year and a half, to the journey he has been on with his company, Binary Noggin, life as a CEO, and much more! We delve into some thoughts from our guest about the relationship between magic and understanding and also talk a little about this year&#39;s upcoming ElixirConf, where Amos will be speaking. Amos also shares how learning a new language can help the coding you do in languages you already know, and tells an interesting story about how he turned a long commute into a superpower! So stay tuned for Season 7, coming to you soon, and thank you for sticking with us this long!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Looking forward to this year&#39;s ElixirConf and the hope that it will proceed.</li>
<li>Amos&#39; return to the office after three months of working from home.</li>
<li>A little about Binary Noggin and the different size clients they work with. </li>
<li>The inspiration behind the company name and the transition from side work to a full-time gig. </li>
<li>Amos&#39; experiences as a CEO during the pandemic and the surprising growth at Binary Noggin.</li>
<li>How Amos inspired the BEAM Magic theme for this season and his thoughts on understanding. </li>
<li>Amos&#39; experiences of speaking at conferences and the possibility of presenting about magic.<br></li>
<li>Some details on Amos&#39; talk this year at ElixirConf.</li>
<li>How Amos was introduced to Elixir through Erlang and the things that made him love it! </li>
<li>The impact that learning new languages can have on your work in general. </li>
<li>How an extremely long commute early in Amos&#39; career served him in unexpected ways. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic Jobs — <a href="https://smartlogic.io/about/jobs" rel="nofollow">https://smartlogic.io/about/jobs</a> <br>
Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Binary Noggin Careers — <a href="https://binarynoggin.com/about-us/#careers" rel="nofollow">https://binarynoggin.com/about-us/#careers</a><br>
Binary Noggin Email — <a href="mailto:contact@binarynoggin.com" rel="nofollow">contact@binarynoggin.com</a><br>
DirtyInformation — <a href="http://dirtyinformation.com/" rel="nofollow">http://dirtyinformation.com/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Wallaby — <a href="https://github.com/elixir-wallaby/wallaby" rel="nofollow">https://github.com/elixir-wallaby/wallaby</a><br>
Testing Elixir — <a href="https://www.goodreads.com/book/show/54156353-testing-elixir" rel="nofollow">https://www.goodreads.com/book/show/54156353-testing-elixir</a></p><p>Special Guest: Amos King.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Mini-Feature Extravaganza featuring Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e11-minifeatures</link>
      <guid isPermaLink="false">332edbe7-b497-4b63-a474-8d468123d586</guid>
      <pubDate>Thu, 19 Aug 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/332edbe7-b497-4b63-a474-8d468123d586.mp3" length="37052095" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This episode serves as a round-up of some of the special mini-features we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with Elixir.</itunes:subtitle>
      <itunes:duration>38:30</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/332edbe7-b497-4b63-a474-8d468123d586/cover.jpg" />
      <description>This episode serves as a round-up of some of the special mini-features we have recorded throughout Season 6, where we'll hear from Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with Elixir. Our first segment is with Tyler, who is a software developer at Jackpocket, where he explains what he is currently busy with and how the company is offering access to the lottery in more safe and convenient ways. We then move on to Elom, who talks about transitioning from a life in public education, and what prompted him to learn functional programming. Elise, who works at Zingeroo, takes us through her relatively new career, why she is so excited about Elixir, and the interesting work that is being done at her company to educate the public about the stock market. Lastly, Jeremy talks to us about the socially conscious agenda at Clover Food Lab, his personal interests in cooking and baking, and how he came to work with Elixir. All of our guests share helpful resources for learning, and reflections on their time working within Elixir -  make sure to join us to catch all this good stuff!
Key Points From This Episode:
Tyler's path into software engineering and the first language he learned.
What Jackpocket offers its customers and how Elixir is used within the company.
Tyler's thoughts on the perks and challenges associated with engineering with Elixir.  
The most helpful resources that Tyler uses when in need: Elixir Slack, books, and Elixir School!
Onboarding and training in Elixir and the biggest challenges presented in this area. 
Tyler's passion for photography and imagining an alternative career path in this direction.
Elom's first programming language and the subsequent transition into Elixir. 
How Elom moved into working in programming from his roots in education.
Elom's perspective on the positives associated with adopting Elixir early on. 
Resource recommendations from Elom for early-stage developers. 
Considering the pros and cons of the small intimate Elixir community and its future.
Elom's ideal alternative career path and favorite book!
Elise's beginnings in programming and her move from a career in digital media. 
Comparing Elixir with other languages; Elise weighs in with her experiences. 
What Zingeroo does and how they use Elixir to make the stock market more accessible through the app. 
The benefits of using Elixir for a real-time app like Zingeroo. 
The resources that have been most valuable to Elise since joining the community. 
Elise's alternative career path, and her passion for teaching Pilates.  
Jeremy's educational and professional path into software engineering and working with Elixir.
How Jeremy has been using LiveView in his work to get a functional UI up and running. 
What Clover Food Lab does and how Elixir is used at the company and online store. 
Jeremy's thoughts on a different career and why he would love to be a baker! 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Tyler Clemens — https://www.linkedin.com/in/tylerclemens
Jackpocket — https://jackpocket.com/
Elixir in Action — https://www.goodreads.com/book/show/38732242-elixir-in-action
Elixir School — https://elixirschool.com/
Turing School — https://turing.edu/
Pragmatic Bookshelf — https://pragprog.com/
Code Flow Thinking Elixir — https://thinkingelixir.com/available-courses/code-flow/
Frantz Fanon — https://www.britannica.com/biography/Frantz-Fanon
Peau Noire, Masques Blancs — https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014
Elise Navarro — https://www.linkedin.com/in/elise-navarro
Zingeroo — https://zingeroo.com/
Jeremy Neal — https://www.linkedin.com/in/jeremy-neal-59ba8b82
Clover Food Lab — https://www.cloverfoodlab.com/ Special Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This episode serves as a round-up of some of the special mini-features we have recorded throughout Season 6, where we&#39;ll hear from Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with Elixir. Our first segment is with Tyler, who is a software developer at Jackpocket, where he explains what he is currently busy with and how the company is offering access to the lottery in more safe and convenient ways. We then move on to Elom, who talks about transitioning from a life in public education, and what prompted him to learn functional programming. Elise, who works at Zingeroo, takes us through her relatively new career, why she is so excited about Elixir, and the interesting work that is being done at her company to educate the public about the stock market. Lastly, Jeremy talks to us about the socially conscious agenda at Clover Food Lab, his personal interests in cooking and baking, and how he came to work with Elixir. All of our guests share helpful resources for learning, and reflections on their time working within Elixir -  make sure to join us to catch all this good stuff!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Tyler&#39;s path into software engineering and the first language he learned.</li>
<li>What Jackpocket offers its customers and how Elixir is used within the company.</li>
<li>Tyler&#39;s thoughts on the perks and challenges associated with engineering with Elixir.<br></li>
<li>The most helpful resources that Tyler uses when in need: Elixir Slack, books, and Elixir School!</li>
<li>Onboarding and training in Elixir and the biggest challenges presented in this area. </li>
<li>Tyler&#39;s passion for photography and imagining an alternative career path in this direction.</li>
<li>Elom&#39;s first programming language and the subsequent transition into Elixir. </li>
<li>How Elom moved into working in programming from his roots in education.</li>
<li>Elom&#39;s perspective on the positives associated with adopting Elixir early on. </li>
<li>Resource recommendations from Elom for early-stage developers. </li>
<li>Considering the pros and cons of the small intimate Elixir community and its future.</li>
<li>Elom&#39;s ideal alternative career path and favorite book!</li>
<li>Elise&#39;s beginnings in programming and her move from a career in digital media. </li>
<li>Comparing Elixir with other languages; Elise weighs in with her experiences. </li>
<li>What Zingeroo does and how they use Elixir to make the stock market more accessible through the app. </li>
<li>The benefits of using Elixir for a real-time app like Zingeroo. </li>
<li>The resources that have been most valuable to Elise since joining the community. </li>
<li>Elise&#39;s alternative career path, and her passion for teaching Pilates.<br></li>
<li>Jeremy&#39;s educational and professional path into software engineering and working with Elixir.</li>
<li>How Jeremy has been using LiveView in his work to get a functional UI up and running. </li>
<li>What Clover Food Lab does and how Elixir is used at the company and online store. </li>
<li>Jeremy&#39;s thoughts on a different career and why he would love to be a baker! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Tyler Clemens — <a href="https://www.linkedin.com/in/tylerclemens" rel="nofollow">https://www.linkedin.com/in/tylerclemens</a><br>
Jackpocket — <a href="https://jackpocket.com/" rel="nofollow">https://jackpocket.com/</a><br>
Elixir in Action — <a href="https://www.goodreads.com/book/show/38732242-elixir-in-action" rel="nofollow">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>
Elixir School — <a href="https://elixirschool.com/" rel="nofollow">https://elixirschool.com/</a><br>
Turing School — <a href="https://turing.edu/" rel="nofollow">https://turing.edu/</a><br>
Pragmatic Bookshelf — <a href="https://pragprog.com/" rel="nofollow">https://pragprog.com/</a><br>
Code Flow Thinking Elixir — <a href="https://thinkingelixir.com/available-courses/code-flow/" rel="nofollow">https://thinkingelixir.com/available-courses/code-flow/</a><br>
Frantz Fanon — <a href="https://www.britannica.com/biography/Frantz-Fanon" rel="nofollow">https://www.britannica.com/biography/Frantz-Fanon</a><br>
Peau Noire, Masques Blancs — <a href="https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014" rel="nofollow">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>
Elise Navarro — <a href="https://www.linkedin.com/in/elise-navarro" rel="nofollow">https://www.linkedin.com/in/elise-navarro</a><br>
Zingeroo — <a href="https://zingeroo.com/" rel="nofollow">https://zingeroo.com/</a><br>
Jeremy Neal — <a href="https://www.linkedin.com/in/jeremy-neal-59ba8b82" rel="nofollow">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>
Clover Food Lab — <a href="https://www.cloverfoodlab.com/" rel="nofollow">https://www.cloverfoodlab.com/</a></p><p>Special Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This episode serves as a round-up of some of the special mini-features we have recorded throughout Season 6, where we&#39;ll hear from Tyler Clemens, Elom Amouzou, Elise Navarro, and Jeremy Neal about their work and experiences with Elixir. Our first segment is with Tyler, who is a software developer at Jackpocket, where he explains what he is currently busy with and how the company is offering access to the lottery in more safe and convenient ways. We then move on to Elom, who talks about transitioning from a life in public education, and what prompted him to learn functional programming. Elise, who works at Zingeroo, takes us through her relatively new career, why she is so excited about Elixir, and the interesting work that is being done at her company to educate the public about the stock market. Lastly, Jeremy talks to us about the socially conscious agenda at Clover Food Lab, his personal interests in cooking and baking, and how he came to work with Elixir. All of our guests share helpful resources for learning, and reflections on their time working within Elixir -  make sure to join us to catch all this good stuff!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Tyler&#39;s path into software engineering and the first language he learned.</li>
<li>What Jackpocket offers its customers and how Elixir is used within the company.</li>
<li>Tyler&#39;s thoughts on the perks and challenges associated with engineering with Elixir.<br></li>
<li>The most helpful resources that Tyler uses when in need: Elixir Slack, books, and Elixir School!</li>
<li>Onboarding and training in Elixir and the biggest challenges presented in this area. </li>
<li>Tyler&#39;s passion for photography and imagining an alternative career path in this direction.</li>
<li>Elom&#39;s first programming language and the subsequent transition into Elixir. </li>
<li>How Elom moved into working in programming from his roots in education.</li>
<li>Elom&#39;s perspective on the positives associated with adopting Elixir early on. </li>
<li>Resource recommendations from Elom for early-stage developers. </li>
<li>Considering the pros and cons of the small intimate Elixir community and its future.</li>
<li>Elom&#39;s ideal alternative career path and favorite book!</li>
<li>Elise&#39;s beginnings in programming and her move from a career in digital media. </li>
<li>Comparing Elixir with other languages; Elise weighs in with her experiences. </li>
<li>What Zingeroo does and how they use Elixir to make the stock market more accessible through the app. </li>
<li>The benefits of using Elixir for a real-time app like Zingeroo. </li>
<li>The resources that have been most valuable to Elise since joining the community. </li>
<li>Elise&#39;s alternative career path, and her passion for teaching Pilates.<br></li>
<li>Jeremy&#39;s educational and professional path into software engineering and working with Elixir.</li>
<li>How Jeremy has been using LiveView in his work to get a functional UI up and running. </li>
<li>What Clover Food Lab does and how Elixir is used at the company and online store. </li>
<li>Jeremy&#39;s thoughts on a different career and why he would love to be a baker! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Tyler Clemens — <a href="https://www.linkedin.com/in/tylerclemens" rel="nofollow">https://www.linkedin.com/in/tylerclemens</a><br>
Jackpocket — <a href="https://jackpocket.com/" rel="nofollow">https://jackpocket.com/</a><br>
Elixir in Action — <a href="https://www.goodreads.com/book/show/38732242-elixir-in-action" rel="nofollow">https://www.goodreads.com/book/show/38732242-elixir-in-action</a><br>
Elixir School — <a href="https://elixirschool.com/" rel="nofollow">https://elixirschool.com/</a><br>
Turing School — <a href="https://turing.edu/" rel="nofollow">https://turing.edu/</a><br>
Pragmatic Bookshelf — <a href="https://pragprog.com/" rel="nofollow">https://pragprog.com/</a><br>
Code Flow Thinking Elixir — <a href="https://thinkingelixir.com/available-courses/code-flow/" rel="nofollow">https://thinkingelixir.com/available-courses/code-flow/</a><br>
Frantz Fanon — <a href="https://www.britannica.com/biography/Frantz-Fanon" rel="nofollow">https://www.britannica.com/biography/Frantz-Fanon</a><br>
Peau Noire, Masques Blancs — <a href="https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014" rel="nofollow">https://www.amazon.com/Peau-Noire-Masques-Blancs-French/dp/2020006014</a><br>
Elise Navarro — <a href="https://www.linkedin.com/in/elise-navarro" rel="nofollow">https://www.linkedin.com/in/elise-navarro</a><br>
Zingeroo — <a href="https://zingeroo.com/" rel="nofollow">https://zingeroo.com/</a><br>
Jeremy Neal — <a href="https://www.linkedin.com/in/jeremy-neal-59ba8b82" rel="nofollow">https://www.linkedin.com/in/jeremy-neal-59ba8b82</a><br>
Clover Food Lab — <a href="https://www.cloverfoodlab.com/" rel="nofollow">https://www.cloverfoodlab.com/</a></p><p>Special Guests: Elise Navarro, Jeremy Neal, and Tyler Clemens.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Delving Deeper into Magic with Quinn Wilton</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e10-wilton</link>
      <guid isPermaLink="false">1487b980-5611-4fbc-9c58-7b4508ebefa9</guid>
      <pubDate>Thu, 12 Aug 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1487b980-5611-4fbc-9c58-7b4508ebefa9.mp3" length="43192367" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we have a wonderful conversation with Quinn Wilton about her journey with Elixir, unusual path into programming, and her wide appreciation for different languages! </itunes:subtitle>
      <itunes:duration>44:54</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1487b980-5611-4fbc-9c58-7b4508ebefa9/cover.jpg" />
      <description>Joining us on the show today is Quinn Wilton, and we have a wonderful conversation with our guest about her journey with Elixir, unusual path into programming, and her wide appreciation for different languages! We start off looking at the time Quinn spent at Waterloo University and what separates the Canadian ethos around computer science. From there, we turn to Quinn's early work in programming, the first proper job that she stepped into, and the immediate affinity she felt for working in Elixir. We also talk a bit about the interesting research that Quinn has been conducting privately, tracking and plotting the path of Erlang over the decades, while also reflecting on the skill of academic reading. We spend some necessary time hearing from Quinn about the BEAM and what BEAM magic means to her, before hearing about her website, love of Twitter,  other languages that currently have her excited, and the avenues she is most lit up about exploring in the future! Listen in to hear it all, as we continue this journey! 
Key Points From This Episode:
Quinn's reflections on her education in Canada, and differences to the American approach to computer science. 
Reasons that Quinn wanted to pursue a career in programming  
The first jobs that Quinn landed as a programmer; creating a Roblox game and tracking malware.
How Quinn was introduced to Elixir and the immediate love she felt for the language. 
The recent work that Quinn has been busy with researching and tracing the history of Erlang.
Experiences of reading academic papers and what sets it apart from other formats.
The inspiration behind Quinn's website and her affinity for Twitter's format. 
Quinn's favorite characteristics of the BEAM: the debugging possibilities. 
The project that Quinn worked on using Gleam on the BEAM and her enjoyment of its simplicity. 
Some possible areas, outlined by Joe Armstrong, that Quinn is excited to explore in the near future.
Quinn's huge appreciation for different programming languages and her fascination with Strand.
Encouragement from Quinn to dive into reading intimidating research papers. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/jobs 
Quinn Wilton — https://quinnwilton.com/
Quinn Wilton on Twitter — https://twitter.com/wiltonquinn
Quinn Wilton on GitHub — https://github.com/QuinnWilton
University of Waterloo — https://uwaterloo.ca/
Roblox — https://www.roblox.com/
Lookout — https://www.lookout.com/
Clint Gibler — https://clintgibler.com/
Gleam — https://gleam.run/
Joe Armstrong — https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary
'Getting Erlang to talk to the outside world' — https://www.researchgate.net/publication/2549678GettingErlangtotalktotheoutsideworld
Universal Binary Format — https://github.com/ubf/ubf
CLU — https://en.wikipedia.org/wiki/CLU(programminglanguage)
Strand — https://en.wikipedia.org/wiki/Strand(programming_language) Special Guest: Quinn Wilton.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Joining us on the show today is Quinn Wilton, and we have a wonderful conversation with our guest about her journey with Elixir, unusual path into programming, and her wide appreciation for different languages! We start off looking at the time Quinn spent at Waterloo University and what separates the Canadian ethos around computer science. From there, we turn to Quinn&#39;s early work in programming, the first proper job that she stepped into, and the immediate affinity she felt for working in Elixir. We also talk a bit about the interesting research that Quinn has been conducting privately, tracking and plotting the path of Erlang over the decades, while also reflecting on the skill of academic reading. We spend some necessary time hearing from Quinn about the BEAM and what BEAM magic means to her, before hearing about her website, love of Twitter,  other languages that currently have her excited, and the avenues she is most lit up about exploring in the future! Listen in to hear it all, as we continue this journey! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Quinn&#39;s reflections on her education in Canada, and differences to the American approach to computer science. </li>
<li>Reasons that Quinn wanted to pursue a career in programming<br></li>
<li>The first jobs that Quinn landed as a programmer; creating a Roblox game and tracking malware.</li>
<li>How Quinn was introduced to Elixir and the immediate love she felt for the language. </li>
<li>The recent work that Quinn has been busy with researching and tracing the history of Erlang.</li>
<li>Experiences of reading academic papers and what sets it apart from other formats.</li>
<li>The inspiration behind Quinn&#39;s website and her affinity for Twitter&#39;s format. </li>
<li>Quinn&#39;s favorite characteristics of the BEAM: the debugging possibilities. </li>
<li>The project that Quinn worked on using Gleam on the BEAM and her enjoyment of its simplicity. </li>
<li>Some possible areas, outlined by Joe Armstrong, that Quinn is excited to explore in the near future.</li>
<li>Quinn&#39;s huge appreciation for different programming languages and her fascination with Strand.</li>
<li>Encouragement from Quinn to dive into reading intimidating research papers. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a> <br>
Quinn Wilton — <a href="https://quinnwilton.com/" rel="nofollow">https://quinnwilton.com/</a><br>
Quinn Wilton on Twitter — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
Quinn Wilton on GitHub — <a href="https://github.com/QuinnWilton" rel="nofollow">https://github.com/QuinnWilton</a><br>
University of Waterloo — <a href="https://uwaterloo.ca/" rel="nofollow">https://uwaterloo.ca/</a><br>
Roblox — <a href="https://www.roblox.com/" rel="nofollow">https://www.roblox.com/</a><br>
Lookout — <a href="https://www.lookout.com/" rel="nofollow">https://www.lookout.com/</a><br>
Clint Gibler — <a href="https://clintgibler.com/" rel="nofollow">https://clintgibler.com/</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Joe Armstrong — <a href="https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary" rel="nofollow">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>
&#39;Getting Erlang to talk to the outside world&#39; — <a href="https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world" rel="nofollow">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>
Universal Binary Format — <a href="https://github.com/ubf/ubf" rel="nofollow">https://github.com/ubf/ubf</a><br>
CLU — <a href="https://en.wikipedia.org/wiki/CLU_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>
Strand — <a href="https://en.wikipedia.org/wiki/Strand_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special Guest: Quinn Wilton.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Joining us on the show today is Quinn Wilton, and we have a wonderful conversation with our guest about her journey with Elixir, unusual path into programming, and her wide appreciation for different languages! We start off looking at the time Quinn spent at Waterloo University and what separates the Canadian ethos around computer science. From there, we turn to Quinn&#39;s early work in programming, the first proper job that she stepped into, and the immediate affinity she felt for working in Elixir. We also talk a bit about the interesting research that Quinn has been conducting privately, tracking and plotting the path of Erlang over the decades, while also reflecting on the skill of academic reading. We spend some necessary time hearing from Quinn about the BEAM and what BEAM magic means to her, before hearing about her website, love of Twitter,  other languages that currently have her excited, and the avenues she is most lit up about exploring in the future! Listen in to hear it all, as we continue this journey! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Quinn&#39;s reflections on her education in Canada, and differences to the American approach to computer science. </li>
<li>Reasons that Quinn wanted to pursue a career in programming<br></li>
<li>The first jobs that Quinn landed as a programmer; creating a Roblox game and tracking malware.</li>
<li>How Quinn was introduced to Elixir and the immediate love she felt for the language. </li>
<li>The recent work that Quinn has been busy with researching and tracing the history of Erlang.</li>
<li>Experiences of reading academic papers and what sets it apart from other formats.</li>
<li>The inspiration behind Quinn&#39;s website and her affinity for Twitter&#39;s format. </li>
<li>Quinn&#39;s favorite characteristics of the BEAM: the debugging possibilities. </li>
<li>The project that Quinn worked on using Gleam on the BEAM and her enjoyment of its simplicity. </li>
<li>Some possible areas, outlined by Joe Armstrong, that Quinn is excited to explore in the near future.</li>
<li>Quinn&#39;s huge appreciation for different programming languages and her fascination with Strand.</li>
<li>Encouragement from Quinn to dive into reading intimidating research papers. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/jobs" rel="nofollow">https://smartlogic.io/jobs</a> <br>
Quinn Wilton — <a href="https://quinnwilton.com/" rel="nofollow">https://quinnwilton.com/</a><br>
Quinn Wilton on Twitter — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
Quinn Wilton on GitHub — <a href="https://github.com/QuinnWilton" rel="nofollow">https://github.com/QuinnWilton</a><br>
University of Waterloo — <a href="https://uwaterloo.ca/" rel="nofollow">https://uwaterloo.ca/</a><br>
Roblox — <a href="https://www.roblox.com/" rel="nofollow">https://www.roblox.com/</a><br>
Lookout — <a href="https://www.lookout.com/" rel="nofollow">https://www.lookout.com/</a><br>
Clint Gibler — <a href="https://clintgibler.com/" rel="nofollow">https://clintgibler.com/</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Joe Armstrong — <a href="https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary" rel="nofollow">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>
&#39;Getting Erlang to talk to the outside world&#39; — <a href="https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world" rel="nofollow">https://www.researchgate.net/publication/2549678_Getting_Erlang_to_talk_to_the_outside_world</a><br>
Universal Binary Format — <a href="https://github.com/ubf/ubf" rel="nofollow">https://github.com/ubf/ubf</a><br>
CLU — <a href="https://en.wikipedia.org/wiki/CLU_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/CLU_(programming_language)</a><br>
Strand — <a href="https://en.wikipedia.org/wiki/Strand_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/Strand_(programming_language)</a></p><p>Special Guest: Quinn Wilton.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>The Bridge Between Elixir and Zig with Isaac Yonemoto</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e9-yonemoto</link>
      <guid isPermaLink="false">5e1ccc21-8727-4ae4-8921-ae296f46cff7</guid>
      <pubDate>Thu, 05 Aug 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5e1ccc21-8727-4ae4-8921-ae296f46cff7.mp3" length="67142697" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>While NIFs provide a great way to interface with native code in the BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins us today to talk about how.</itunes:subtitle>
      <itunes:duration>46:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5e1ccc21-8727-4ae4-8921-ae296f46cff7/cover.jpg" />
      <description>While NIFs provide a great way to interface with native code in the BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins us today to talk about how. Isaac is an Elixir developer with a background in biotech and we kick off the discussion by hearing about his journey into programming and some of the ways that he has combined it with science. From there we hear more about the different languages Isaac has worked in and why he fell in love with Elixir, where he talks about its encouragement of test-driven development and how this has made him a better programmer. We dive right into the contributions Isaac is making to the Elixir community next, and he starts off by talking about Zigler. He explains how Zigler provides a bridge between Zig and Elixir that makes it far easier to build NIFs. We hear a bunch of the other cool possibilities that Zigler offers to Elixir as well, including its ability to make debugging easier by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion of magic in Elixir, we close today's show off with a few of the other projects he is working on, contributions that are bound to make the world of Elixir even more exciting!
Key Points From This Episode:
Isaac’s early exposure to programming and how he got started in tech.
The education Isaac had in the sciences and his experience in the biotech sphere.
Difficulties with installing Ruby and how this led to Isaac learning Elixir.
Support for asynchronous testing and the reasons why Isaac finds joy in Elixir.
The emphasis on test-driven development in Elixir and how this has made Isaac a better programmer.
Isaac’s experiences with Zig and the similarities between it and Elixir.
How NIFs allow C code in Elixir and what it is like debugging them.
Isaac’s Zigler project and how it provides integration between Elixir and Zig making it easy to build NIFs.
Cross-compiling C using Zig and why Isaac built a disassembler.
Aspects of the BEAM that make it harder to write NIFs in Elixir than in Julia.
Isaac’s opinion of magic in programming and how it should always be comprehensible.
Final plugs from Isaac: where to find Zigler, and some upcoming projects.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Isaac Yonemoto on Twitter — https://twitter.com/DNAutics
Isaac Yonemoto on GitHub — https://github.com/ityonemo
Isaac Yonemoto on YouTube — https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA
Selectrix — https://github.com/ityonemo/selectrix
Mavis — https://github.com/ityonemo/mavis
Chiaroscuro - https://github.com/ityonemo/chiaroscuro
Zigler - https://hexdocs.pm/zigler/Zig.html
Zigler on GitHub — https://github.com/ityonemo/zigler
Julia — https://julialang.org/
Testing Elixir with Jeffrey Matthias and Andrea Leopardi — https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/ Special Guest: Isaac Yonemoto.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>While NIFs provide a great way to interface with native code in the BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins us today to talk about how. Isaac is an Elixir developer with a background in biotech and we kick off the discussion by hearing about his journey into programming and some of the ways that he has combined it with science. From there we hear more about the different languages Isaac has worked in and why he fell in love with Elixir, where he talks about its encouragement of test-driven development and how this has made him a better programmer. We dive right into the contributions Isaac is making to the Elixir community next, and he starts off by talking about Zigler. He explains how Zigler provides a bridge between Zig and Elixir that makes it far easier to build NIFs. We hear a bunch of the other cool possibilities that Zigler offers to Elixir as well, including its ability to make debugging easier by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion of magic in Elixir, we close today&#39;s show off with a few of the other projects he is working on, contributions that are bound to make the world of Elixir even more exciting!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Isaac’s early exposure to programming and how he got started in tech.</li>
<li>The education Isaac had in the sciences and his experience in the biotech sphere.</li>
<li>Difficulties with installing Ruby and how this led to Isaac learning Elixir.</li>
<li>Support for asynchronous testing and the reasons why Isaac finds joy in Elixir.</li>
<li>The emphasis on test-driven development in Elixir and how this has made Isaac a better programmer.</li>
<li>Isaac’s experiences with Zig and the similarities between it and Elixir.</li>
<li>How NIFs allow C code in Elixir and what it is like debugging them.</li>
<li>Isaac’s Zigler project and how it provides integration between Elixir and Zig making it easy to build NIFs.</li>
<li>Cross-compiling C using Zig and why Isaac built a disassembler.</li>
<li>Aspects of the BEAM that make it harder to write NIFs in Elixir than in Julia.</li>
<li>Isaac’s opinion of magic in programming and how it should always be comprehensible.</li>
<li>Final plugs from Isaac: where to find Zigler, and some upcoming projects.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Isaac Yonemoto on Twitter — <a href="https://twitter.com/DNAutics" rel="nofollow">https://twitter.com/DNAutics</a><br>
Isaac Yonemoto on GitHub — <a href="https://github.com/ityonemo" rel="nofollow">https://github.com/ityonemo</a><br>
Isaac Yonemoto on YouTube — <a href="https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA" rel="nofollow">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>
Selectrix — <a href="https://github.com/ityonemo/selectrix" rel="nofollow">https://github.com/ityonemo/selectrix</a><br>
Mavis — <a href="https://github.com/ityonemo/mavis" rel="nofollow">https://github.com/ityonemo/mavis</a><br>
Chiaroscuro - <a href="https://github.com/ityonemo/chiaroscuro" rel="nofollow">https://github.com/ityonemo/chiaroscuro</a><br>
Zigler - <a href="https://hexdocs.pm/zigler/Zig.html" rel="nofollow">https://hexdocs.pm/zigler/Zig.html</a><br>
Zigler on GitHub — <a href="https://github.com/ityonemo/zigler" rel="nofollow">https://github.com/ityonemo/zigler</a><br>
Julia — <a href="https://julialang.org/" rel="nofollow">https://julialang.org/</a><br>
Testing Elixir with Jeffrey Matthias and Andrea Leopardi — <a href="https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special Guest: Isaac Yonemoto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>While NIFs provide a great way to interface with native code in the BEAM machine, the process can also be rather error-prone. Thankfully, since Isaac Yonemoto built Zigler, things have become a lot simpler, and he joins us today to talk about how. Isaac is an Elixir developer with a background in biotech and we kick off the discussion by hearing about his journey into programming and some of the ways that he has combined it with science. From there we hear more about the different languages Isaac has worked in and why he fell in love with Elixir, where he talks about its encouragement of test-driven development and how this has made him a better programmer. We dive right into the contributions Isaac is making to the Elixir community next, and he starts off by talking about Zigler. He explains how Zigler provides a bridge between Zig and Elixir that makes it far easier to build NIFs. We hear a bunch of the other cool possibilities that Zigler offers to Elixir as well, including its ability to make debugging easier by appending the Zig stack trace to the Elixir one. After hearing Isaac’s opinion of magic in Elixir, we close today&#39;s show off with a few of the other projects he is working on, contributions that are bound to make the world of Elixir even more exciting!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Isaac’s early exposure to programming and how he got started in tech.</li>
<li>The education Isaac had in the sciences and his experience in the biotech sphere.</li>
<li>Difficulties with installing Ruby and how this led to Isaac learning Elixir.</li>
<li>Support for asynchronous testing and the reasons why Isaac finds joy in Elixir.</li>
<li>The emphasis on test-driven development in Elixir and how this has made Isaac a better programmer.</li>
<li>Isaac’s experiences with Zig and the similarities between it and Elixir.</li>
<li>How NIFs allow C code in Elixir and what it is like debugging them.</li>
<li>Isaac’s Zigler project and how it provides integration between Elixir and Zig making it easy to build NIFs.</li>
<li>Cross-compiling C using Zig and why Isaac built a disassembler.</li>
<li>Aspects of the BEAM that make it harder to write NIFs in Elixir than in Julia.</li>
<li>Isaac’s opinion of magic in programming and how it should always be comprehensible.</li>
<li>Final plugs from Isaac: where to find Zigler, and some upcoming projects.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Isaac Yonemoto on Twitter — <a href="https://twitter.com/DNAutics" rel="nofollow">https://twitter.com/DNAutics</a><br>
Isaac Yonemoto on GitHub — <a href="https://github.com/ityonemo" rel="nofollow">https://github.com/ityonemo</a><br>
Isaac Yonemoto on YouTube — <a href="https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA" rel="nofollow">https://www.youtube.com/channel/UCarZZW7eavljSdGRQx9kkSA</a><br>
Selectrix — <a href="https://github.com/ityonemo/selectrix" rel="nofollow">https://github.com/ityonemo/selectrix</a><br>
Mavis — <a href="https://github.com/ityonemo/mavis" rel="nofollow">https://github.com/ityonemo/mavis</a><br>
Chiaroscuro - <a href="https://github.com/ityonemo/chiaroscuro" rel="nofollow">https://github.com/ityonemo/chiaroscuro</a><br>
Zigler - <a href="https://hexdocs.pm/zigler/Zig.html" rel="nofollow">https://hexdocs.pm/zigler/Zig.html</a><br>
Zigler on GitHub — <a href="https://github.com/ityonemo/zigler" rel="nofollow">https://github.com/ityonemo/zigler</a><br>
Julia — <a href="https://julialang.org/" rel="nofollow">https://julialang.org/</a><br>
Testing Elixir with Jeffrey Matthias and Andrea Leopardi — <a href="https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi/</a></p><p>Special Guest: Isaac Yonemoto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Maxim Fedorov on Building and Scaling WhatsApp with Erlang</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e8-fedorov</link>
      <guid isPermaLink="false">ff944923-7612-4245-b9b0-d9217e878b0b</guid>
      <pubDate>Thu, 29 Jul 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ff944923-7612-4245-b9b0-d9217e878b0b.mp3" length="48273230" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we are so excited to share a conversation with Maxim Fedorov who offers such interesting insight and wisdom from a long career in the space, focusing on Erlang and why he views it as such a powerful language for the work at WhatsApp.</itunes:subtitle>
      <itunes:duration>50:13</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/ff944923-7612-4245-b9b0-d9217e878b0b/cover.jpg" />
      <description>Today we are so excited to share a conversation with Maxim Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp! In our chat, Maxim offers such interesting insight and wisdom from a long career in the space, focusing on Erlang and why he views it as such a powerful language for the work at WhatsApp. We also get some backstory from Maxim, looking at his first experiences with computers, his educational background, and some of the work he did leading up to his current position. Our guest does a great job of sharing his thoughts on what he sees as a lack of magic within the Erlang language, why he prefers this, and how the company has managed to scale in such a major way over the past years. We also deal with some more general questions, weighing functional languages against object-oriented ones, useful resource recommendations, and a whole lot more! We finish off this episode with a mini-interview with David Hardwick, who is the current Vice President of Engineering at STORD, so make sure to stay tuned until the end for that! 
Key Points From This Episode:
The beginnings of Maxim's interest in computer science and software development. 
How Maxim transitioned into the network security field. 
Maxim's experience with timezones and how this is approached for an app like WhatsApp.
Thoughts on why WhatsApp is so popular outside of the United States. 
How Erlang is used at WhatsApp to power messaging. 
Probable reasons that Erlang was selected as the language for WhatsApp.
Outages and downtime; what constitutes a serious issue for WhatsApp user experience. 
The massive growth that WhatsApp has seen and how their approach to scaling has evolved.
Characteristics of Erlang that make it so well suited to WhatsApp's needs; simplicity and reliability. 
Maxim's perspective on the issues around programmer education and their results.  
Functional languages versus object-oriented programming; Maxim's thoughts on strengths and weaknesses.
Why Maxim views Erlang as not containing or performing anything magical. 
Maxim's recommendations for resources when getting started in Erlang!
Looking back at Maxim's experiences of tertiary education and the thesis he produced. 
The scaling of the WhatsApp server; the project that Maxim is most proud of!
Maxim's love for motorcycles and bicycles and how these grew out of initial conveniences.  
Today's mini-feature interview with David Hardwick, VP of Engineering at STORD.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Maxim Fedorov: https://au.linkedin.com/in/maxim-fedorov-14a570b
Electronika MK-61 — https://en.wikipedia.org/wiki/ElektronikaMK-52
Brian Acton — https://www.forbes.com/profile/brian-acton/
Learn You Some Erlang — https://learnyousomeerlang.com/
Adopting Erlang — https://github.com/adoptingerlang
Joe Armstrong Thesis — https://erlang.org/download/armstrongthesis2003.pdf
The BEAM Book— https://github.com/happi/theBeamBook
ejabberd — https://www.ejabberd.im/
Will Cathcart Tweet — https://twitter.com/wcathcart/status/1385253969522413568
Clarke's three laws — https://en.wikipedia.org/wiki/Clarke%27sthree_laws
Lukas Larson — https://twitter.com/garazdawi
Erlang OTP — https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl
David Hardwick — https://www.linkedin.com/in/davidhardwick
STORD — https://www.stord.com/
BetterCloud — http://www.bettercloud.com/ Special Guest: Maxim Fedorov.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we are so excited to share a conversation with Maxim Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp! In our chat, Maxim offers such interesting insight and wisdom from a long career in the space, focusing on Erlang and why he views it as such a powerful language for the work at WhatsApp. We also get some backstory from Maxim, looking at his first experiences with computers, his educational background, and some of the work he did leading up to his current position. Our guest does a great job of sharing his thoughts on what he sees as a lack of magic within the Erlang language, why he prefers this, and how the company has managed to scale in such a major way over the past years. We also deal with some more general questions, weighing functional languages against object-oriented ones, useful resource recommendations, and a whole lot more! We finish off this episode with a mini-interview with David Hardwick, who is the current Vice President of Engineering at STORD, so make sure to stay tuned until the end for that! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>The beginnings of Maxim&#39;s interest in computer science and software development. </li>
<li>How Maxim transitioned into the network security field. </li>
<li>Maxim&#39;s experience with timezones and how this is approached for an app like WhatsApp.</li>
<li>Thoughts on why WhatsApp is so popular outside of the United States. </li>
<li>How Erlang is used at WhatsApp to power messaging. </li>
<li>Probable reasons that Erlang was selected as the language for WhatsApp.</li>
<li>Outages and downtime; what constitutes a serious issue for WhatsApp user experience. </li>
<li>The massive growth that WhatsApp has seen and how their approach to scaling has evolved.</li>
<li>Characteristics of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and reliability. </li>
<li>Maxim&#39;s perspective on the issues around programmer education and their results.<br></li>
<li>Functional languages versus object-oriented programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>
<li>Why Maxim views Erlang as not containing or performing anything magical. </li>
<li>Maxim&#39;s recommendations for resources when getting started in Erlang!</li>
<li>Looking back at Maxim&#39;s experiences of tertiary education and the thesis he produced. </li>
<li>The scaling of the WhatsApp server; the project that Maxim is most proud of!</li>
<li>Maxim&#39;s love for motorcycles and bicycles and how these grew out of initial conveniences.<br></li>
<li>Today&#39;s mini-feature interview with David Hardwick, VP of Engineering at STORD.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Maxim Fedorov: <a href="https://au.linkedin.com/in/maxim-fedorov-14a570b" rel="nofollow">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>
Electronika MK-61 — <a href="https://en.wikipedia.org/wiki/Elektronika_MK-52" rel="nofollow">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>
Brian Acton — <a href="https://www.forbes.com/profile/brian-acton/" rel="nofollow">https://www.forbes.com/profile/brian-acton/</a><br>
Learn You Some Erlang — <a href="https://learnyousomeerlang.com/" rel="nofollow">https://learnyousomeerlang.com/</a><br>
Adopting Erlang — <a href="https://github.com/adoptingerlang" rel="nofollow">https://github.com/adoptingerlang</a><br>
Joe Armstrong Thesis — <a href="https://erlang.org/download/armstrong_thesis_2003.pdf" rel="nofollow">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>
The BEAM Book— <a href="https://github.com/happi/theBeamBook" rel="nofollow">https://github.com/happi/theBeamBook</a><br>
ejabberd — <a href="https://www.ejabberd.im/" rel="nofollow">https://www.ejabberd.im/</a><br>
Will Cathcart Tweet — <a href="https://twitter.com/wcathcart/status/1385253969522413568" rel="nofollow">https://twitter.com/wcathcart/status/1385253969522413568</a><br>
Clarke&#39;s three laws — <a href="https://en.wikipedia.org/wiki/Clarke%27s_three_laws" rel="nofollow">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>
Lukas Larson — <a href="https://twitter.com/garazdawi" rel="nofollow">https://twitter.com/garazdawi</a><br>
Erlang OTP — <a href="https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl" rel="nofollow">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>
David Hardwick — <a href="https://www.linkedin.com/in/davidhardwick" rel="nofollow">https://www.linkedin.com/in/davidhardwick</a><br>
STORD — <a href="https://www.stord.com/" rel="nofollow">https://www.stord.com/</a><br>
BetterCloud — <a href="http://www.bettercloud.com/" rel="nofollow">http://www.bettercloud.com/</a></p><p>Special Guest: Maxim Fedorov.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we are so excited to share a conversation with Maxim Fedorov, who is the Core Infrastructure Lead at communications giant, WhatsApp! In our chat, Maxim offers such interesting insight and wisdom from a long career in the space, focusing on Erlang and why he views it as such a powerful language for the work at WhatsApp. We also get some backstory from Maxim, looking at his first experiences with computers, his educational background, and some of the work he did leading up to his current position. Our guest does a great job of sharing his thoughts on what he sees as a lack of magic within the Erlang language, why he prefers this, and how the company has managed to scale in such a major way over the past years. We also deal with some more general questions, weighing functional languages against object-oriented ones, useful resource recommendations, and a whole lot more! We finish off this episode with a mini-interview with David Hardwick, who is the current Vice President of Engineering at STORD, so make sure to stay tuned until the end for that! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>The beginnings of Maxim&#39;s interest in computer science and software development. </li>
<li>How Maxim transitioned into the network security field. </li>
<li>Maxim&#39;s experience with timezones and how this is approached for an app like WhatsApp.</li>
<li>Thoughts on why WhatsApp is so popular outside of the United States. </li>
<li>How Erlang is used at WhatsApp to power messaging. </li>
<li>Probable reasons that Erlang was selected as the language for WhatsApp.</li>
<li>Outages and downtime; what constitutes a serious issue for WhatsApp user experience. </li>
<li>The massive growth that WhatsApp has seen and how their approach to scaling has evolved.</li>
<li>Characteristics of Erlang that make it so well suited to WhatsApp&#39;s needs; simplicity and reliability. </li>
<li>Maxim&#39;s perspective on the issues around programmer education and their results.<br></li>
<li>Functional languages versus object-oriented programming; Maxim&#39;s thoughts on strengths and weaknesses.</li>
<li>Why Maxim views Erlang as not containing or performing anything magical. </li>
<li>Maxim&#39;s recommendations for resources when getting started in Erlang!</li>
<li>Looking back at Maxim&#39;s experiences of tertiary education and the thesis he produced. </li>
<li>The scaling of the WhatsApp server; the project that Maxim is most proud of!</li>
<li>Maxim&#39;s love for motorcycles and bicycles and how these grew out of initial conveniences.<br></li>
<li>Today&#39;s mini-feature interview with David Hardwick, VP of Engineering at STORD.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Maxim Fedorov: <a href="https://au.linkedin.com/in/maxim-fedorov-14a570b" rel="nofollow">https://au.linkedin.com/in/maxim-fedorov-14a570b</a><br>
Electronika MK-61 — <a href="https://en.wikipedia.org/wiki/Elektronika_MK-52" rel="nofollow">https://en.wikipedia.org/wiki/Elektronika_MK-52</a><br>
Brian Acton — <a href="https://www.forbes.com/profile/brian-acton/" rel="nofollow">https://www.forbes.com/profile/brian-acton/</a><br>
Learn You Some Erlang — <a href="https://learnyousomeerlang.com/" rel="nofollow">https://learnyousomeerlang.com/</a><br>
Adopting Erlang — <a href="https://github.com/adoptingerlang" rel="nofollow">https://github.com/adoptingerlang</a><br>
Joe Armstrong Thesis — <a href="https://erlang.org/download/armstrong_thesis_2003.pdf" rel="nofollow">https://erlang.org/download/armstrong_thesis_2003.pdf</a><br>
The BEAM Book— <a href="https://github.com/happi/theBeamBook" rel="nofollow">https://github.com/happi/theBeamBook</a><br>
ejabberd — <a href="https://www.ejabberd.im/" rel="nofollow">https://www.ejabberd.im/</a><br>
Will Cathcart Tweet — <a href="https://twitter.com/wcathcart/status/1385253969522413568" rel="nofollow">https://twitter.com/wcathcart/status/1385253969522413568</a><br>
Clarke&#39;s three laws — <a href="https://en.wikipedia.org/wiki/Clarke%27s_three_laws" rel="nofollow">https://en.wikipedia.org/wiki/Clarke%27s_three_laws</a><br>
Lukas Larson — <a href="https://twitter.com/garazdawi" rel="nofollow">https://twitter.com/garazdawi</a><br>
Erlang OTP — <a href="https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl" rel="nofollow">https://github.com/erlang/otp/blob/master/lib/kernel/src/pg.erl</a><br>
David Hardwick — <a href="https://www.linkedin.com/in/davidhardwick" rel="nofollow">https://www.linkedin.com/in/davidhardwick</a><br>
STORD — <a href="https://www.stord.com/" rel="nofollow">https://www.stord.com/</a><br>
BetterCloud — <a href="http://www.bettercloud.com/" rel="nofollow">http://www.bettercloud.com/</a></p><p>Special Guest: Maxim Fedorov.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Chelsea Troy on the Importance of Access and the Impact of Teaching</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e7-troy</link>
      <guid isPermaLink="false">49a8c965-5f19-4aba-9cd7-6b59acc7188b</guid>
      <pubDate>Thu, 22 Jul 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49a8c965-5f19-4aba-9cd7-6b59acc7188b.mp3" length="46274411" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>You may recognize Chelsea Troy from her popular blog or as a keynote speaker for the March 2021 Code BEAM conference. Today she discusses some of the unique aspects of coding as a career.</itunes:subtitle>
      <itunes:duration>48:08</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49a8c965-5f19-4aba-9cd7-6b59acc7188b/cover.jpg" />
      <description>Some of you may recognize Chelsea Troy from her popular blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference. Chelsea is an instructor in the Master's Program in Computer Science at the University of Chicago and currently works as a staff software engineer at Mozilla, where she specializes in machine learning and backend systems. In our conversation with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea outlines how programming can be more accessible than other careers because it doesn't have the same financial burden when it comes to education. She also emphasizes the importance of allowing a more diverse range of people access to the field and unpacks the type of person the internet was originally built for, explaining how it had favored privileged affluent individuals from the Bay Area. We hear from Chelsea about how she became a programmer out of a desire for job security rather than passion and why she believes it’s so important to have a broader representation of different narratives when it comes to careers in programming and coding. Later Chelsea shares the story of how she became an educator and why she is so passionate about teaching. For all this and much more, join us today!
Key Points From This Episode:
Introducing today’s guest Chelsea Troy
Why Chelsea believes it’s important to privilege multiple narratives of why people choose to pursue programming as a career.
There is less of a financial burden with becoming a programmer than other higher-paying professions.
The benefits of a diverse group of people having access to programming as a career.
What first prompted Chelsea to start her blog and how her goals for it have changed over time.
Why Chelsea struggles to give advice on how to market a blog.
How being able to draw parallels between different coding languages has strengthened Chelsea’s teaching and writing pursuits.
Why Chelsea is so enthusiastic about teaching.
How teaching allows Chelsea to have a more meaningful impact in the field of tech.
How Chelsea prioritizes which jobs and clients to pursue as a consultant.
How having two parents who taught for living influenced Chelsea’s passion for teaching.
Chelsea shares how she earned her position at Chicago University, despite expecting not to.
The challenges and benefits of teaching remotely.
The pros and cons of functional languages versus object-oriented languages.
How students tend to react to learning functional languages versus object-oriented languages.
Mini-feature segment: hear from Rosemary about how she became a software engineer.
How Rosemary built websites as a side hustle while studying English.
Rosemary shares how she transitioned from working with Java and Blu-ray discs to doing back-end web development and writing in Elixir.
How RentPath, the company Rosemary is currently working for, is transitioning from Ruby to Elixir.
An outline of RentPath and what they do.
Rosemary’s many hobbies and pursuits, including wildlife photography.
Links Mentioned in Today’s Episode:
Chelsea Troy on Twitter — https://twitter.com/HeyChelseaTroy
Chelsea Troy on LinkedIn — https://www.linkedin.com/in/chelseatroy/
Chelsea Troy Blog — https://chelseatroy.com/
Upcoming Code BEAM Conferences — https://codesync.global/
Chelsea Troy on Youtube —  https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig
Ruby — https://www.ruby-lang.org/en/
Mozilla — mozilla.org/en-US/
Pocket — https://getpocket.com/
Rosemary Ledesma — https://www.linkedin.com/in/rosemary-ledesma-b6198717/
RentPath — https://www.rentpath.com/
RedFin — https://www.redfin.com/
 Special Guest: Chelsea Troy.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Some of you may recognize Chelsea Troy from her popular blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference. Chelsea is an instructor in the Master&#39;s Program in Computer Science at the University of Chicago and currently works as a staff software engineer at Mozilla, where she specializes in machine learning and backend systems. In our conversation with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea outlines how programming can be more accessible than other careers because it doesn&#39;t have the same financial burden when it comes to education. She also emphasizes the importance of allowing a more diverse range of people access to the field and unpacks the type of person the internet was originally built for, explaining how it had favored privileged affluent individuals from the Bay Area. We hear from Chelsea about how she became a programmer out of a desire for job security rather than passion and why she believes it’s so important to have a broader representation of different narratives when it comes to careers in programming and coding. Later Chelsea shares the story of how she became an educator and why she is so passionate about teaching. For all this and much more, join us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest Chelsea Troy</li>
<li>Why Chelsea believes it’s important to privilege multiple narratives of why people choose to pursue programming as a career.</li>
<li>There is less of a financial burden with becoming a programmer than other higher-paying professions.</li>
<li>The benefits of a diverse group of people having access to programming as a career.</li>
<li>What first prompted Chelsea to start her blog and how her goals for it have changed over time.</li>
<li>Why Chelsea struggles to give advice on how to market a blog.</li>
<li>How being able to draw parallels between different coding languages has strengthened Chelsea’s teaching and writing pursuits.</li>
<li>Why Chelsea is so enthusiastic about teaching.</li>
<li>How teaching allows Chelsea to have a more meaningful impact in the field of tech.</li>
<li>How Chelsea prioritizes which jobs and clients to pursue as a consultant.</li>
<li>How having two parents who taught for living influenced Chelsea’s passion for teaching.</li>
<li>Chelsea shares how she earned her position at Chicago University, despite expecting not to.</li>
<li>The challenges and benefits of teaching remotely.</li>
<li>The pros and cons of functional languages versus object-oriented languages.</li>
<li>How students tend to react to learning functional languages versus object-oriented languages.</li>
<li>Mini-feature segment: hear from Rosemary about how she became a software engineer.</li>
<li>How Rosemary built websites as a side hustle while studying English.</li>
<li>Rosemary shares how she transitioned from working with Java and Blu-ray discs to doing back-end web development and writing in Elixir.</li>
<li>How RentPath, the company Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>
<li>An outline of RentPath and what they do.</li>
<li>Rosemary’s many hobbies and pursuits, including wildlife photography.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Chelsea Troy on Twitter — <a href="https://twitter.com/HeyChelseaTroy" rel="nofollow">https://twitter.com/HeyChelseaTroy</a><br>
Chelsea Troy on LinkedIn — <a href="https://www.linkedin.com/in/chelseatroy/" rel="nofollow">https://www.linkedin.com/in/chelseatroy/</a><br>
Chelsea Troy Blog — <a href="https://chelseatroy.com/" rel="nofollow">https://chelseatroy.com/</a><br>
Upcoming Code BEAM Conferences — <a href="https://codesync.global/" rel="nofollow">https://codesync.global/</a><br>
Chelsea Troy on Youtube —  <a href="https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig" rel="nofollow">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Mozilla — mozilla.org/en-US/<br>
Pocket — <a href="https://getpocket.com/" rel="nofollow">https://getpocket.com/</a><br>
Rosemary Ledesma — <a href="https://www.linkedin.com/in/rosemary-ledesma-b6198717/" rel="nofollow">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>
RentPath — <a href="https://www.rentpath.com/" rel="nofollow">https://www.rentpath.com/</a><br>
RedFin — <a href="https://www.redfin.com/" rel="nofollow">https://www.redfin.com/</a></p><p>Special Guest: Chelsea Troy.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Some of you may recognize Chelsea Troy from her popular blog of the same name or as a keynote speaker for the March 2021 Code BEAM conference. Chelsea is an instructor in the Master&#39;s Program in Computer Science at the University of Chicago and currently works as a staff software engineer at Mozilla, where she specializes in machine learning and backend systems. In our conversation with Chelsea, we discuss some of the unique aspects of coding as a career. Chelsea outlines how programming can be more accessible than other careers because it doesn&#39;t have the same financial burden when it comes to education. She also emphasizes the importance of allowing a more diverse range of people access to the field and unpacks the type of person the internet was originally built for, explaining how it had favored privileged affluent individuals from the Bay Area. We hear from Chelsea about how she became a programmer out of a desire for job security rather than passion and why she believes it’s so important to have a broader representation of different narratives when it comes to careers in programming and coding. Later Chelsea shares the story of how she became an educator and why she is so passionate about teaching. For all this and much more, join us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest Chelsea Troy</li>
<li>Why Chelsea believes it’s important to privilege multiple narratives of why people choose to pursue programming as a career.</li>
<li>There is less of a financial burden with becoming a programmer than other higher-paying professions.</li>
<li>The benefits of a diverse group of people having access to programming as a career.</li>
<li>What first prompted Chelsea to start her blog and how her goals for it have changed over time.</li>
<li>Why Chelsea struggles to give advice on how to market a blog.</li>
<li>How being able to draw parallels between different coding languages has strengthened Chelsea’s teaching and writing pursuits.</li>
<li>Why Chelsea is so enthusiastic about teaching.</li>
<li>How teaching allows Chelsea to have a more meaningful impact in the field of tech.</li>
<li>How Chelsea prioritizes which jobs and clients to pursue as a consultant.</li>
<li>How having two parents who taught for living influenced Chelsea’s passion for teaching.</li>
<li>Chelsea shares how she earned her position at Chicago University, despite expecting not to.</li>
<li>The challenges and benefits of teaching remotely.</li>
<li>The pros and cons of functional languages versus object-oriented languages.</li>
<li>How students tend to react to learning functional languages versus object-oriented languages.</li>
<li>Mini-feature segment: hear from Rosemary about how she became a software engineer.</li>
<li>How Rosemary built websites as a side hustle while studying English.</li>
<li>Rosemary shares how she transitioned from working with Java and Blu-ray discs to doing back-end web development and writing in Elixir.</li>
<li>How RentPath, the company Rosemary is currently working for, is transitioning from Ruby to Elixir.</li>
<li>An outline of RentPath and what they do.</li>
<li>Rosemary’s many hobbies and pursuits, including wildlife photography.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Chelsea Troy on Twitter — <a href="https://twitter.com/HeyChelseaTroy" rel="nofollow">https://twitter.com/HeyChelseaTroy</a><br>
Chelsea Troy on LinkedIn — <a href="https://www.linkedin.com/in/chelseatroy/" rel="nofollow">https://www.linkedin.com/in/chelseatroy/</a><br>
Chelsea Troy Blog — <a href="https://chelseatroy.com/" rel="nofollow">https://chelseatroy.com/</a><br>
Upcoming Code BEAM Conferences — <a href="https://codesync.global/" rel="nofollow">https://codesync.global/</a><br>
Chelsea Troy on Youtube —  <a href="https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig" rel="nofollow">https://www.youtube.com/channel/UCIwpdjmSUJmqJ8HwvIGNqig</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Mozilla — mozilla.org/en-US/<br>
Pocket — <a href="https://getpocket.com/" rel="nofollow">https://getpocket.com/</a><br>
Rosemary Ledesma — <a href="https://www.linkedin.com/in/rosemary-ledesma-b6198717/" rel="nofollow">https://www.linkedin.com/in/rosemary-ledesma-b6198717/</a><br>
RentPath — <a href="https://www.rentpath.com/" rel="nofollow">https://www.rentpath.com/</a><br>
RedFin — <a href="https://www.redfin.com/" rel="nofollow">https://www.redfin.com/</a></p><p>Special Guest: Chelsea Troy.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Testing Elixir with Jeffrey Matthias and Andrea Leopardi</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e6-matthias-leopardi</link>
      <guid isPermaLink="false">3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9</guid>
      <pubDate>Thu, 15 Jul 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9.mp3" length="47303624" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>While we can think of many reasons why we love Elixir, the community could always benefit from a more lively conversation around testing. It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing Elixir. Today they join us to share some of the insights to be found in their new book.</itunes:subtitle>
      <itunes:duration>56:18</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3cc0b619-ef6a-48ed-a0d6-8566f26ed0a9/cover.jpg" />
      <description>While we can think of many reasons why we love Elixir, the community could always benefit from a more lively conversation around testing. It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing Elixir, and today they join us on the show to share some of the insights to be found in their new book. Our guests start by sketching out the main reasons why they decided to write a book of this nature before speaking to the process of writing it collaboratively from their respective homes in Italy and the US. Andrea and Jeffrey speak about the challenges of finding a middle ground between their unique styles to come up with a unified testing method. The conversation then takes a deep dive into the weeds of testing in Elixir and we hear our guests' perspectives on the most appropriate situations to use async true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview with a question about what Andrea and Jeffrey would most like people to take away from their book where they express the hope that it can act as a springboard for further conversation about best practices for testing in Elixir and more. As always, we close the show off with our mini-interview, this time talking to Tracey Onim from Podii. 
Key Points From This Episode:
Why Jeffrey and Andrea wrote their book and how they pitched it to the publisher.
How the feedback Andrea and Jeffrey got while writing the book shaped its content.
What writing the book was like considering its authors live in different countries.
How our guests came up with a unified testing method when each had their own style.
Stories about testing mistakes and the funny situations they led to.
Discussing the HBO integration test email and how it was responded to and dealt with.
The issue of developers not using async true enough and how to get better at it.
When to use async true, Ecto Sandbox, and Mox.
Why our guests use Mox, when the best times to use it are, and how it shapes your thinking. 
Exploring the relationship between test driven development and using the program.
What can go wrong if you rely purely on tests to test out your code.
The main takeaways our guests hope can be found in their book.
Final plugs from Jeffrey and Andrea and where to find them online.
A quick interview where we learn more about Tracey Onim from Podii. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Jeffrey Matthias on Twitter — https://twitter.com/idlehands
Andrea Leopardi — https://andrealeopardi.com/
Andrea Leopardi on Twitter — https://twitter.com/whatyouhide
Andrea Leopardi on GitHub — https://github.com/whatyouhide/corsica
Testing Elixir — http://testingelixir.com/
Testing Elixir — https://pragprog.com/titles/lmelixir/testing-elixir/
Testing Elixir — https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab
Testing Elixir on Twitter — https://twitter.com/testingelixir
Publish with The Pragmatic Bookshelf — https://pragprog.com/become-an-author/
Ecto.Adapters.SQL.Sandbox — https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html
Mox — https://hexdocs.pm/mox/Mox.html
Command Line Options — https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options
Mocks and Explicit Contracts — http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/
bypass — https://github.com/PSPDFKit-labs/bypass
Test-Driven Development with Phoenix — https://www.tddphoenix.com/
Tracey Onim — https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke
Podii — https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count Special Guests: Andrea Leopardi and Jeffrey Matthias.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>While we can think of many reasons why we love Elixir, the community could always benefit from a more lively conversation around testing. It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing Elixir, and today they join us on the show to share some of the insights to be found in their new book. Our guests start by sketching out the main reasons why they decided to write a book of this nature before speaking to the process of writing it collaboratively from their respective homes in Italy and the US. Andrea and Jeffrey speak about the challenges of finding a middle ground between their unique styles to come up with a unified testing method. The conversation then takes a deep dive into the weeds of testing in Elixir and we hear our guests&#39; perspectives on the most appropriate situations to use async true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview with a question about what Andrea and Jeffrey would most like people to take away from their book where they express the hope that it can act as a springboard for further conversation about best practices for testing in Elixir and more. As always, we close the show off with our mini-interview, this time talking to Tracey Onim from Podii. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why Jeffrey and Andrea wrote their book and how they pitched it to the publisher.</li>
<li>How the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>
<li>What writing the book was like considering its authors live in different countries.</li>
<li>How our guests came up with a unified testing method when each had their own style.</li>
<li>Stories about testing mistakes and the funny situations they led to.</li>
<li>Discussing the HBO integration test email and how it was responded to and dealt with.</li>
<li>The issue of developers not using async true enough and how to get better at it.</li>
<li>When to use async true, Ecto Sandbox, and Mox.</li>
<li>Why our guests use Mox, when the best times to use it are, and how it shapes your thinking. </li>
<li>Exploring the relationship between test driven development and using the program.</li>
<li>What can go wrong if you rely purely on tests to test out your code.</li>
<li>The main takeaways our guests hope can be found in their book.</li>
<li>Final plugs from Jeffrey and Andrea and where to find them online.</li>
<li>A quick interview where we learn more about Tracey Onim from Podii. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jeffrey Matthias on Twitter — <a href="https://twitter.com/idlehands" rel="nofollow">https://twitter.com/idlehands</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Andrea Leopardi on Twitter — <a href="https://twitter.com/whatyouhide" rel="nofollow">https://twitter.com/whatyouhide</a><br>
Andrea Leopardi on GitHub — <a href="https://github.com/whatyouhide/corsica" rel="nofollow">https://github.com/whatyouhide/corsica</a><br>
Testing Elixir — <a href="http://testingelixir.com/" rel="nofollow">http://testingelixir.com/</a><br>
Testing Elixir — <a href="https://pragprog.com/titles/lmelixir/testing-elixir/" rel="nofollow">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>
Testing Elixir — <a href="https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab" rel="nofollow">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>
Testing Elixir on Twitter — <a href="https://twitter.com/testingelixir" rel="nofollow">https://twitter.com/testingelixir</a><br>
Publish with The Pragmatic Bookshelf — <a href="https://pragprog.com/become-an-author/" rel="nofollow">https://pragprog.com/become-an-author/</a><br>
Ecto.Adapters.SQL.Sandbox — <a href="https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html" rel="nofollow">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>
Mox — <a href="https://hexdocs.pm/mox/Mox.html" rel="nofollow">https://hexdocs.pm/mox/Mox.html</a><br>
Command Line Options — <a href="https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options" rel="nofollow">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>
Mocks and Explicit Contracts — <a href="http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/" rel="nofollow">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>
bypass — <a href="https://github.com/PSPDFKit-labs/bypass" rel="nofollow">https://github.com/PSPDFKit-labs/bypass</a><br>
Test-Driven Development with Phoenix — <a href="https://www.tddphoenix.com/" rel="nofollow">https://www.tddphoenix.com/</a><br>
Tracey Onim — <a href="https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke" rel="nofollow">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>
Podii — <a href="https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count" rel="nofollow">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special Guests: Andrea Leopardi and Jeffrey Matthias.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>While we can think of many reasons why we love Elixir, the community could always benefit from a more lively conversation around testing. It was with this in mind that Jeffrey Matthias and Andrea Leopardi decided to write Testing Elixir, and today they join us on the show to share some of the insights to be found in their new book. Our guests start by sketching out the main reasons why they decided to write a book of this nature before speaking to the process of writing it collaboratively from their respective homes in Italy and the US. Andrea and Jeffrey speak about the challenges of finding a middle ground between their unique styles to come up with a unified testing method. The conversation then takes a deep dive into the weeds of testing in Elixir and we hear our guests&#39; perspectives on the most appropriate situations to use async true, Mox, Ecto Sandbox, and other techniques. We wrap up our interview with a question about what Andrea and Jeffrey would most like people to take away from their book where they express the hope that it can act as a springboard for further conversation about best practices for testing in Elixir and more. As always, we close the show off with our mini-interview, this time talking to Tracey Onim from Podii. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why Jeffrey and Andrea wrote their book and how they pitched it to the publisher.</li>
<li>How the feedback Andrea and Jeffrey got while writing the book shaped its content.</li>
<li>What writing the book was like considering its authors live in different countries.</li>
<li>How our guests came up with a unified testing method when each had their own style.</li>
<li>Stories about testing mistakes and the funny situations they led to.</li>
<li>Discussing the HBO integration test email and how it was responded to and dealt with.</li>
<li>The issue of developers not using async true enough and how to get better at it.</li>
<li>When to use async true, Ecto Sandbox, and Mox.</li>
<li>Why our guests use Mox, when the best times to use it are, and how it shapes your thinking. </li>
<li>Exploring the relationship between test driven development and using the program.</li>
<li>What can go wrong if you rely purely on tests to test out your code.</li>
<li>The main takeaways our guests hope can be found in their book.</li>
<li>Final plugs from Jeffrey and Andrea and where to find them online.</li>
<li>A quick interview where we learn more about Tracey Onim from Podii. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Jeffrey Matthias on Twitter — <a href="https://twitter.com/idlehands" rel="nofollow">https://twitter.com/idlehands</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Andrea Leopardi on Twitter — <a href="https://twitter.com/whatyouhide" rel="nofollow">https://twitter.com/whatyouhide</a><br>
Andrea Leopardi on GitHub — <a href="https://github.com/whatyouhide/corsica" rel="nofollow">https://github.com/whatyouhide/corsica</a><br>
Testing Elixir — <a href="http://testingelixir.com/" rel="nofollow">http://testingelixir.com/</a><br>
Testing Elixir — <a href="https://pragprog.com/titles/lmelixir/testing-elixir/" rel="nofollow">https://pragprog.com/titles/lmelixir/testing-elixir/</a><br>
Testing Elixir — <a href="https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab" rel="nofollow">https://www.target.com/p/testing-elixir-by-andrea-leopardi-jeffrey-matthias-paperback/-/A-83072057#lnk=sametab</a><br>
Testing Elixir on Twitter — <a href="https://twitter.com/testingelixir" rel="nofollow">https://twitter.com/testingelixir</a><br>
Publish with The Pragmatic Bookshelf — <a href="https://pragprog.com/become-an-author/" rel="nofollow">https://pragprog.com/become-an-author/</a><br>
Ecto.Adapters.SQL.Sandbox — <a href="https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html" rel="nofollow">https://hexdocs.pm/ecto_sql/Ecto.Adapters.SQL.Sandbox.html</a><br>
Mox — <a href="https://hexdocs.pm/mox/Mox.html" rel="nofollow">https://hexdocs.pm/mox/Mox.html</a><br>
Command Line Options — <a href="https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options" rel="nofollow">https://hexdocs.pm/mix/1.12/Mix.Tasks.Test.html#module-command-line-options</a><br>
Mocks and Explicit Contracts — <a href="http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/" rel="nofollow">http://blog.plataformatec.com.br/2015/10/mocks-and-explicit-contracts/</a><br>
bypass — <a href="https://github.com/PSPDFKit-labs/bypass" rel="nofollow">https://github.com/PSPDFKit-labs/bypass</a><br>
Test-Driven Development with Phoenix — <a href="https://www.tddphoenix.com/" rel="nofollow">https://www.tddphoenix.com/</a><br>
Tracey Onim — <a href="https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke" rel="nofollow">https://www.linkedin.com/in/tracey-onim-420b3316a?originalSubdomain=ke</a><br>
Podii — <a href="https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count" rel="nofollow">https://www.apollo.io/companies/Podii/5c1df0e8f651257261ddc16a?chart=count</a></p><p>Special Guests: Andrea Leopardi and Jeffrey Matthias.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Scaling and The Growth Curve with Francesco Cesarini</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e5-cesarini</link>
      <guid isPermaLink="false">3c07dbc2-eadc-48b9-9136-7decec7a0f57</guid>
      <pubDate>Thu, 03 Jun 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3c07dbc2-eadc-48b9-9136-7decec7a0f57.mp3" length="44755930" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Francesco Cesarini is the founder of Erlang Solutions and we are so lucky to have him here on the show to talk about his personal and professional journey, and take this great season of shows on the magic of the BEAM even further.</itunes:subtitle>
      <itunes:duration>46:33</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3c07dbc2-eadc-48b9-9136-7decec7a0f57/cover.jpg" />
      <description>Joining us for this episode of Elixir Wizards is the vastly experienced and well-traveled Francesco Cesarini! Francesco is the founder of Erlang Solutions and we are so lucky to have him here on the show to talk about his personal and professional journey, and take this great season of shows on the magic of the BEAM even further. Francesco takes us through his early interactions with computers and coding and the events that led to his decision to study computer science, before diving into his move to Sweden, and subsequently the UK, and how this all resulted in the founding of his company. Our guest touches on some helpful lessons he learned around marketing and branding, particularly related to the name of the company and we also discuss how the company grew in stages over the years. From there, the conversation turns to Francesco's work on conferences, and his commitment to this important feature of the community. We talk about the benefits of virtual conferences, what to look forward to, and the team that Francesco works with when organizing. To finish off this segment, our guest gives a few recommended resources and comments on Erlang syntax too! For today's mini-feature we welcome Jeffery Utter who works as a Senior Software Developer at Bleacher Report, so make sure to tune in to catch it all!
Key Points From This Episode:
Francesco's route into coding from an early age and first forays into studying computer science.
The first job that Francesco had out of college: an exciting internship at Ericsson. 
How Francesco founded Erlang Solutions after leaving Sweden and moving to London. 
The big growth steps that happened over the years as Erlang Solutions developed.
Francesco's evolving mindset during this growth period and his attitude towards scaling the company. 
The current size of the company and the offices that are spread all over the world! 
Virtual conferences, more connectivity, and the benefits of getting involved in the community. 
The planning process for conferences and the size of the team that put them together. 
The growth curve for Erlang Solutions over the years and the main drivers in the process. 
Examples from the explanatory videos that Francesco produced to help people understand Erlang.  
Francesco's feelings about Erlang syntax and the misconceptions about its difficulty.
Recommendations of helpful resources to aid the learning curve.
Getting involved with Erlang Solutions and connecting with Francesco and his team!
Jeffery Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.
The time that Jeffery spent working at Communication Service for the Deaf prior to Bleacher Report.
Some updates on the growth and evolution of Bleacher Report and what they offer users.
How Elixir is used at Bleacher Report and its succession of Ruby at the company. 
Jeffery's alternate career paths and qualifications in music and education!
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Elixir Conference — http://smr.tl/conf-podcast
Francesco Cesarini on Twitter — https://twitter.com/FrancescoC
Joe Armstrong — https://codersatwork.com/joe-armstrong.html
Erlang Solutions — https://www.erlang-solutions.com/
Erlang Programming Language - Computerphile — https://www.youtube.com/watch?v=SOqQVoVai6s
Chalmers University of Technology — https://www.chalmers.se/en/Pages/default.aspx
Erlang &amp; Elixir Developers | Careers at Erlang Solutions — https://www.erlang-solutions.com/careers/
Code BEAM V SF 2021 — https://codesync.global/conferences/code-beam-sf-2021/.
RabbitMQ Summit— https://rabbitmqsummit.com/
Languages, and about languages, on the BEAM — https://github.com/llaisdy/beam_languages
Lambda Days 2021 — https://www.lambdadays.org/lambdadays2021
Code Mesh — https://codesync.global/conferences/code-mesh-ldn
Erlang Master Classes University of Kent — https://www.cs.kent.ac.uk/ErlangMasterClasses/
Professor Simon Thompson — https://www.kent.ac.uk/computing/people/3164/thompson-simon
Designing for Scalability with Erlang/OTP — https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/
Erlang Programming — https://www.oreilly.com/library/view/erlang-programming/9780596803940/
Jeffery Utter — https://www.linkedin.com/in/jeffutter
Bleacher Report — https://bleacherreport.com/
Communication Service for the Deaf — https://www.csd.org/
Gallaudet University — https://www.gallaudet.edu/ 
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Joining us for this episode of Elixir Wizards is the vastly experienced and well-traveled Francesco Cesarini! Francesco is the founder of Erlang Solutions and we are so lucky to have him here on the show to talk about his personal and professional journey, and take this great season of shows on the magic of the BEAM even further. Francesco takes us through his early interactions with computers and coding and the events that led to his decision to study computer science, before diving into his move to Sweden, and subsequently the UK, and how this all resulted in the founding of his company. Our guest touches on some helpful lessons he learned around marketing and branding, particularly related to the name of the company and we also discuss how the company grew in stages over the years. From there, the conversation turns to Francesco&#39;s work on conferences, and his commitment to this important feature of the community. We talk about the benefits of virtual conferences, what to look forward to, and the team that Francesco works with when organizing. To finish off this segment, our guest gives a few recommended resources and comments on Erlang syntax too! For today&#39;s mini-feature we welcome Jeffery Utter who works as a Senior Software Developer at Bleacher Report, so make sure to tune in to catch it all!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Francesco&#39;s route into coding from an early age and first forays into studying computer science.</li>
<li>The first job that Francesco had out of college: an exciting internship at Ericsson. </li>
<li>How Francesco founded Erlang Solutions after leaving Sweden and moving to London. </li>
<li>The big growth steps that happened over the years as Erlang Solutions developed.</li>
<li>Francesco&#39;s evolving mindset during this growth period and his attitude towards scaling the company. </li>
<li>The current size of the company and the offices that are spread all over the world! </li>
<li>Virtual conferences, more connectivity, and the benefits of getting involved in the community. </li>
<li>The planning process for conferences and the size of the team that put them together. </li>
<li>The growth curve for Erlang Solutions over the years and the main drivers in the process. </li>
<li>Examples from the explanatory videos that Francesco produced to help people understand Erlang.<br></li>
<li>Francesco&#39;s feelings about Erlang syntax and the misconceptions about its difficulty.</li>
<li>Recommendations of helpful resources to aid the learning curve.</li>
<li>Getting involved with Erlang Solutions and connecting with Francesco and his team!</li>
<li>Jeffery Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>
<li>The time that Jeffery spent working at Communication Service for the Deaf prior to Bleacher Report.</li>
<li>Some updates on the growth and evolution of Bleacher Report and what they offer users.</li>
<li>How Elixir is used at Bleacher Report and its succession of Ruby at the company. </li>
<li>Jeffery&#39;s alternate career paths and qualifications in music and education!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Conference — <a href="http://smr.tl/conf-podcast" rel="nofollow">http://smr.tl/conf-podcast</a><br>
Francesco Cesarini on Twitter — <a href="https://twitter.com/FrancescoC" rel="nofollow">https://twitter.com/FrancescoC</a><br>
Joe Armstrong — <a href="https://codersatwork.com/joe-armstrong.html" rel="nofollow">https://codersatwork.com/joe-armstrong.html</a><br>
Erlang Solutions — <a href="https://www.erlang-solutions.com/" rel="nofollow">https://www.erlang-solutions.com/</a><br>
Erlang Programming Language - Computerphile — <a href="https://www.youtube.com/watch?v=SOqQVoVai6s" rel="nofollow">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>
Chalmers University of Technology — <a href="https://www.chalmers.se/en/Pages/default.aspx" rel="nofollow">https://www.chalmers.se/en/Pages/default.aspx</a><br>
Erlang &amp; Elixir Developers | Careers at Erlang Solutions — <a href="https://www.erlang-solutions.com/careers/" rel="nofollow">https://www.erlang-solutions.com/careers/</a><br>
Code BEAM V SF 2021 — <a href="https://codesync.global/conferences/code-beam-sf-2021/" rel="nofollow">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>
RabbitMQ Summit— <a href="https://rabbitmqsummit.com/" rel="nofollow">https://rabbitmqsummit.com/</a><br>
Languages, and about languages, on the BEAM — <a href="https://github.com/llaisdy/beam_languages" rel="nofollow">https://github.com/llaisdy/beam_languages</a><br>
Lambda Days 2021 — <a href="https://www.lambdadays.org/lambdadays2021" rel="nofollow">https://www.lambdadays.org/lambdadays2021</a><br>
Code Mesh — <a href="https://codesync.global/conferences/code-mesh-ldn" rel="nofollow">https://codesync.global/conferences/code-mesh-ldn</a><br>
Erlang Master Classes University of Kent — <a href="https://www.cs.kent.ac.uk/ErlangMasterClasses/" rel="nofollow">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>
Professor Simon Thompson — <a href="https://www.kent.ac.uk/computing/people/3164/thompson-simon" rel="nofollow">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>
Designing for Scalability with Erlang/OTP — <a href="https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/" rel="nofollow">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>
Erlang Programming — <a href="https://www.oreilly.com/library/view/erlang-programming/9780596803940/" rel="nofollow">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>
Jeffery Utter — <a href="https://www.linkedin.com/in/jeffutter" rel="nofollow">https://www.linkedin.com/in/jeffutter</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Communication Service for the Deaf — <a href="https://www.csd.org/" rel="nofollow">https://www.csd.org/</a><br>
Gallaudet University — <a href="https://www.gallaudet.edu/" rel="nofollow">https://www.gallaudet.edu/</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Joining us for this episode of Elixir Wizards is the vastly experienced and well-traveled Francesco Cesarini! Francesco is the founder of Erlang Solutions and we are so lucky to have him here on the show to talk about his personal and professional journey, and take this great season of shows on the magic of the BEAM even further. Francesco takes us through his early interactions with computers and coding and the events that led to his decision to study computer science, before diving into his move to Sweden, and subsequently the UK, and how this all resulted in the founding of his company. Our guest touches on some helpful lessons he learned around marketing and branding, particularly related to the name of the company and we also discuss how the company grew in stages over the years. From there, the conversation turns to Francesco&#39;s work on conferences, and his commitment to this important feature of the community. We talk about the benefits of virtual conferences, what to look forward to, and the team that Francesco works with when organizing. To finish off this segment, our guest gives a few recommended resources and comments on Erlang syntax too! For today&#39;s mini-feature we welcome Jeffery Utter who works as a Senior Software Developer at Bleacher Report, so make sure to tune in to catch it all!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Francesco&#39;s route into coding from an early age and first forays into studying computer science.</li>
<li>The first job that Francesco had out of college: an exciting internship at Ericsson. </li>
<li>How Francesco founded Erlang Solutions after leaving Sweden and moving to London. </li>
<li>The big growth steps that happened over the years as Erlang Solutions developed.</li>
<li>Francesco&#39;s evolving mindset during this growth period and his attitude towards scaling the company. </li>
<li>The current size of the company and the offices that are spread all over the world! </li>
<li>Virtual conferences, more connectivity, and the benefits of getting involved in the community. </li>
<li>The planning process for conferences and the size of the team that put them together. </li>
<li>The growth curve for Erlang Solutions over the years and the main drivers in the process. </li>
<li>Examples from the explanatory videos that Francesco produced to help people understand Erlang.<br></li>
<li>Francesco&#39;s feelings about Erlang syntax and the misconceptions about its difficulty.</li>
<li>Recommendations of helpful resources to aid the learning curve.</li>
<li>Getting involved with Erlang Solutions and connecting with Francesco and his team!</li>
<li>Jeffery Utter from Bleacher Report joins us to briefly talk about his journey with Elixir.</li>
<li>The time that Jeffery spent working at Communication Service for the Deaf prior to Bleacher Report.</li>
<li>Some updates on the growth and evolution of Bleacher Report and what they offer users.</li>
<li>How Elixir is used at Bleacher Report and its succession of Ruby at the company. </li>
<li>Jeffery&#39;s alternate career paths and qualifications in music and education!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Conference — <a href="http://smr.tl/conf-podcast" rel="nofollow">http://smr.tl/conf-podcast</a><br>
Francesco Cesarini on Twitter — <a href="https://twitter.com/FrancescoC" rel="nofollow">https://twitter.com/FrancescoC</a><br>
Joe Armstrong — <a href="https://codersatwork.com/joe-armstrong.html" rel="nofollow">https://codersatwork.com/joe-armstrong.html</a><br>
Erlang Solutions — <a href="https://www.erlang-solutions.com/" rel="nofollow">https://www.erlang-solutions.com/</a><br>
Erlang Programming Language - Computerphile — <a href="https://www.youtube.com/watch?v=SOqQVoVai6s" rel="nofollow">https://www.youtube.com/watch?v=SOqQVoVai6s</a><br>
Chalmers University of Technology — <a href="https://www.chalmers.se/en/Pages/default.aspx" rel="nofollow">https://www.chalmers.se/en/Pages/default.aspx</a><br>
Erlang &amp; Elixir Developers | Careers at Erlang Solutions — <a href="https://www.erlang-solutions.com/careers/" rel="nofollow">https://www.erlang-solutions.com/careers/</a><br>
Code BEAM V SF 2021 — <a href="https://codesync.global/conferences/code-beam-sf-2021/" rel="nofollow">https://codesync.global/conferences/code-beam-sf-2021/</a>.<br>
RabbitMQ Summit— <a href="https://rabbitmqsummit.com/" rel="nofollow">https://rabbitmqsummit.com/</a><br>
Languages, and about languages, on the BEAM — <a href="https://github.com/llaisdy/beam_languages" rel="nofollow">https://github.com/llaisdy/beam_languages</a><br>
Lambda Days 2021 — <a href="https://www.lambdadays.org/lambdadays2021" rel="nofollow">https://www.lambdadays.org/lambdadays2021</a><br>
Code Mesh — <a href="https://codesync.global/conferences/code-mesh-ldn" rel="nofollow">https://codesync.global/conferences/code-mesh-ldn</a><br>
Erlang Master Classes University of Kent — <a href="https://www.cs.kent.ac.uk/ErlangMasterClasses/" rel="nofollow">https://www.cs.kent.ac.uk/ErlangMasterClasses/</a><br>
Professor Simon Thompson — <a href="https://www.kent.ac.uk/computing/people/3164/thompson-simon" rel="nofollow">https://www.kent.ac.uk/computing/people/3164/thompson-simon</a><br>
Designing for Scalability with Erlang/OTP — <a href="https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/" rel="nofollow">https://www.oreilly.com/library/view/designing-for-scalability/9781449361556/</a><br>
Erlang Programming — <a href="https://www.oreilly.com/library/view/erlang-programming/9780596803940/" rel="nofollow">https://www.oreilly.com/library/view/erlang-programming/9780596803940/</a><br>
Jeffery Utter — <a href="https://www.linkedin.com/in/jeffutter" rel="nofollow">https://www.linkedin.com/in/jeffutter</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Communication Service for the Deaf — <a href="https://www.csd.org/" rel="nofollow">https://www.csd.org/</a><br>
Gallaudet University — <a href="https://www.gallaudet.edu/" rel="nofollow">https://www.gallaudet.edu/</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Bringing the Magic of Math into Programming with Chris Miller</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e4-miller</link>
      <guid isPermaLink="false">95a7bb65-24d3-4155-bd40-9a4b4a94fbbb</guid>
      <pubDate>Thu, 27 May 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb.mp3" length="52082260" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we have some extra BEAM magic for all of you! Joining us on the show is Chris Miller with Corvus Insurance. We get into a great conversation with Chris about his history with programming, his long-held interest in mathematics, and how he is trying to bring these two worlds closer together through his work.</itunes:subtitle>
      <itunes:duration>54:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/95a7bb65-24d3-4155-bd40-9a4b4a94fbbb/cover.jpg" />
      <description>Today we have some extra BEAM magic for all of you! Joining us on the show is Chris Miller, who currently works as an Associate Software Engineer at Corvus Insurance. We get into a great conversation with Chris about his history with programming, his long-held interest in mathematics, and how he is trying to bring these two worlds closer together through his work. Chris weighs in with some very important expert perspectives on a range of subjects, from monads and monoids to Vim and Emacs, before we get into the different avenues of Chris' work. Along with an old college friend, Chris runs the informative YouTube Channel, Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual, speaking Mandarin, Spanish, German, and English! We get some illumination on interesting and important concepts such as Turing completeness, programming language theory, and more, all delivered with an accessibility that belies the high level of the material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney Leatherwood, at the end, be sure to listen in today!
Key Points From This Episode:
The story behind Chris' Twitter handle and his admiration for Leonhard Euler! 
How Chris is bringing his love of math into his programming work. 
A crash course on monads and monoids! 
Chris' teaching and tutoring work and his aim of bringing fun examples into learning. 
The YouTube channel that Chris runs with an old friend, called Coding Cave. 
Chris' take on the Vim versus Emacs debate.
How Chris learned to program from his father, and his return to it during college. 
Unpacking programming language theory and the idea of Turing completeness. 
Chris clears up the difference between computer science and mathematics.
Reasons that Chris enjoys working in Elixir compared with other languages.    
Chris' goals for his YouTube channel and his hopes to spread advanced education. 
Magic and languages; a programming language theory perspective. 
Chris' day job as a software engineer at Corvus Insurance using Elixir and Elm.
The array of languages that Chris can speak; Mandarin, German, and Spanish. 
The process of language acquisition and Chris' methods for learning. 
Why Chris believes starting with the function is the best way to learn a new programming language. 
The aspects of Elixir and the BEAM that have Chris the most excited at the moment! 
This week's mini-feature with Sidney Leatherwood and his use of Elixir in production.
The comparative rating service that Semsee offers their customers.
Hiring in Elixir currently; perks, challenges, and resources in the space. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Chris Miller on Twitter — https://twitter.com/blackeuler
Elixir Wizard Conference — http://smr.tl/conf-podcast
Leonhard Euler — https://en.wikipedia.org/wiki/LeonhardEuler
Curry–Howard Correspondence — https://en.wikipedia.org/wiki/Curry%E2%80%93Howardcorrespondence
Haskell — https://www.haskell.org/
Brooklyn Zelenka — https://medium.com/@expede
Coding Cave — https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYovg
Conversations with the Creator: José Valim — https://www.youtube.com/watch?v=BXpoKKkqAX4
Functor — https://en.wikipedia.org/wiki/Functor
Spacemacs: Emacs advanced Kit focused on Evil — https://www.spacemacs.org/
hlissner/doom-emacs — https://github.com/hlissner/doom-emacs
Turing Completeness — https://en.wikipedia.org/wiki/Turingcompleteness
Cal Newport — https://www.calnewport.com/
Boolean Algebra — https://en.wikipedia.org/wiki/Booleanalgebra
Clojure — https://clojure.org/
Corvus Insurance — https://www.corvusinsurance.com/
APL — https://en.wikipedia.org/wiki/APL(programming_language)
Gleam - https://gleam.run/
Sidney Leatherwood on LinkedIn — https://www.linkedin.com/in/leather-s
Semsee — https://semsee.com/ Special Guest: Chris Miller.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we have some extra BEAM magic for all of you! Joining us on the show is Chris Miller, who currently works as an Associate Software Engineer at Corvus Insurance. We get into a great conversation with Chris about his history with programming, his long-held interest in mathematics, and how he is trying to bring these two worlds closer together through his work. Chris weighs in with some very important expert perspectives on a range of subjects, from monads and monoids to Vim and Emacs, before we get into the different avenues of Chris&#39; work. Along with an old college friend, Chris runs the informative YouTube Channel, Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual, speaking Mandarin, Spanish, German, and English! We get some illumination on interesting and important concepts such as Turing completeness, programming language theory, and more, all delivered with an accessibility that belies the high level of the material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney Leatherwood, at the end, be sure to listen in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The story behind Chris&#39; Twitter handle and his admiration for Leonhard Euler! </li>
<li>How Chris is bringing his love of math into his programming work. </li>
<li>A crash course on monads and monoids! </li>
<li>Chris&#39; teaching and tutoring work and his aim of bringing fun examples into learning. </li>
<li>The YouTube channel that Chris runs with an old friend, called Coding Cave. </li>
<li>Chris&#39; take on the Vim versus Emacs debate.</li>
<li>How Chris learned to program from his father, and his return to it during college. </li>
<li>Unpacking programming language theory and the idea of Turing completeness. </li>
<li>Chris clears up the difference between computer science and mathematics.</li>
<li>Reasons that Chris enjoys working in Elixir compared with other languages.<br></li>
<li>Chris&#39; goals for his YouTube channel and his hopes to spread advanced education. </li>
<li>Magic and languages; a programming language theory perspective. </li>
<li>Chris&#39; day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>
<li>The array of languages that Chris can speak; Mandarin, German, and Spanish. </li>
<li>The process of language acquisition and Chris&#39; methods for learning. </li>
<li>Why Chris believes starting with the function is the best way to learn a new programming language. </li>
<li>The aspects of Elixir and the BEAM that have Chris the most excited at the moment! </li>
<li>This week&#39;s mini-feature with Sidney Leatherwood and his use of Elixir in production.</li>
<li>The comparative rating service that Semsee offers their customers.</li>
<li>Hiring in Elixir currently; perks, challenges, and resources in the space. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Miller on Twitter — <a href="https://twitter.com/blackeuler" rel="nofollow">https://twitter.com/blackeuler</a><br>
Elixir Wizard Conference — <a href="http://smr.tl/conf-podcast" rel="nofollow">http://smr.tl/conf-podcast</a><br>
Leonhard Euler — <a href="https://en.wikipedia.org/wiki/Leonhard_Euler" rel="nofollow">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>
Curry–Howard Correspondence — <a href="https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence" rel="nofollow">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Brooklyn Zelenka — <a href="https://medium.com/@expede" rel="nofollow">https://medium.com/@expede</a><br>
Coding Cave — <a href="https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g" rel="nofollow">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>
Conversations with the Creator: José Valim — <a href="https://www.youtube.com/watch?v=BXpoKKkqAX4" rel="nofollow">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>
Functor — <a href="https://en.wikipedia.org/wiki/Functor" rel="nofollow">https://en.wikipedia.org/wiki/Functor</a><br>
Spacemacs: Emacs advanced Kit focused on Evil — <a href="https://www.spacemacs.org/" rel="nofollow">https://www.spacemacs.org/</a><br>
hlissner/doom-emacs — <a href="https://github.com/hlissner/doom-emacs" rel="nofollow">https://github.com/hlissner/doom-emacs</a><br>
Turing Completeness — <a href="https://en.wikipedia.org/wiki/Turing_completeness" rel="nofollow">https://en.wikipedia.org/wiki/Turing_completeness</a><br>
Cal Newport — <a href="https://www.calnewport.com/" rel="nofollow">https://www.calnewport.com/</a><br>
Boolean Algebra — <a href="https://en.wikipedia.org/wiki/Boolean_algebra" rel="nofollow">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Corvus Insurance — <a href="https://www.corvusinsurance.com/" rel="nofollow">https://www.corvusinsurance.com/</a><br>
APL — <a href="https://en.wikipedia.org/wiki/APL_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>
Gleam - <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Sidney Leatherwood on LinkedIn — <a href="https://www.linkedin.com/in/leather-s" rel="nofollow">https://www.linkedin.com/in/leather-s</a><br>
Semsee — <a href="https://semsee.com/" rel="nofollow">https://semsee.com/</a></p><p>Special Guest: Chris Miller.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we have some extra BEAM magic for all of you! Joining us on the show is Chris Miller, who currently works as an Associate Software Engineer at Corvus Insurance. We get into a great conversation with Chris about his history with programming, his long-held interest in mathematics, and how he is trying to bring these two worlds closer together through his work. Chris weighs in with some very important expert perspectives on a range of subjects, from monads and monoids to Vim and Emacs, before we get into the different avenues of Chris&#39; work. Along with an old college friend, Chris runs the informative YouTube Channel, Coding Cave, helps other coders through mentorship and tutoring, and is also multilingual, speaking Mandarin, Spanish, German, and English! We get some illumination on interesting and important concepts such as Turing completeness, programming language theory, and more, all delivered with an accessibility that belies the high level of the material. So for all this, plus our bonus mini-segment with Semsee employee, Sidney Leatherwood, at the end, be sure to listen in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The story behind Chris&#39; Twitter handle and his admiration for Leonhard Euler! </li>
<li>How Chris is bringing his love of math into his programming work. </li>
<li>A crash course on monads and monoids! </li>
<li>Chris&#39; teaching and tutoring work and his aim of bringing fun examples into learning. </li>
<li>The YouTube channel that Chris runs with an old friend, called Coding Cave. </li>
<li>Chris&#39; take on the Vim versus Emacs debate.</li>
<li>How Chris learned to program from his father, and his return to it during college. </li>
<li>Unpacking programming language theory and the idea of Turing completeness. </li>
<li>Chris clears up the difference between computer science and mathematics.</li>
<li>Reasons that Chris enjoys working in Elixir compared with other languages.<br></li>
<li>Chris&#39; goals for his YouTube channel and his hopes to spread advanced education. </li>
<li>Magic and languages; a programming language theory perspective. </li>
<li>Chris&#39; day job as a software engineer at Corvus Insurance using Elixir and Elm.</li>
<li>The array of languages that Chris can speak; Mandarin, German, and Spanish. </li>
<li>The process of language acquisition and Chris&#39; methods for learning. </li>
<li>Why Chris believes starting with the function is the best way to learn a new programming language. </li>
<li>The aspects of Elixir and the BEAM that have Chris the most excited at the moment! </li>
<li>This week&#39;s mini-feature with Sidney Leatherwood and his use of Elixir in production.</li>
<li>The comparative rating service that Semsee offers their customers.</li>
<li>Hiring in Elixir currently; perks, challenges, and resources in the space. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Miller on Twitter — <a href="https://twitter.com/blackeuler" rel="nofollow">https://twitter.com/blackeuler</a><br>
Elixir Wizard Conference — <a href="http://smr.tl/conf-podcast" rel="nofollow">http://smr.tl/conf-podcast</a><br>
Leonhard Euler — <a href="https://en.wikipedia.org/wiki/Leonhard_Euler" rel="nofollow">https://en.wikipedia.org/wiki/Leonhard_Euler</a><br>
Curry–Howard Correspondence — <a href="https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence" rel="nofollow">https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Brooklyn Zelenka — <a href="https://medium.com/@expede" rel="nofollow">https://medium.com/@expede</a><br>
Coding Cave — <a href="https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g" rel="nofollow">https://www.youtube.com/channel/UCwIO8jv71cbOyEwJdrYov_g</a><br>
Conversations with the Creator: José Valim — <a href="https://www.youtube.com/watch?v=BXpoKKkqAX4" rel="nofollow">https://www.youtube.com/watch?v=BXpoKKkqAX4</a><br>
Functor — <a href="https://en.wikipedia.org/wiki/Functor" rel="nofollow">https://en.wikipedia.org/wiki/Functor</a><br>
Spacemacs: Emacs advanced Kit focused on Evil — <a href="https://www.spacemacs.org/" rel="nofollow">https://www.spacemacs.org/</a><br>
hlissner/doom-emacs — <a href="https://github.com/hlissner/doom-emacs" rel="nofollow">https://github.com/hlissner/doom-emacs</a><br>
Turing Completeness — <a href="https://en.wikipedia.org/wiki/Turing_completeness" rel="nofollow">https://en.wikipedia.org/wiki/Turing_completeness</a><br>
Cal Newport — <a href="https://www.calnewport.com/" rel="nofollow">https://www.calnewport.com/</a><br>
Boolean Algebra — <a href="https://en.wikipedia.org/wiki/Boolean_algebra" rel="nofollow">https://en.wikipedia.org/wiki/Boolean_algebra</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Corvus Insurance — <a href="https://www.corvusinsurance.com/" rel="nofollow">https://www.corvusinsurance.com/</a><br>
APL — <a href="https://en.wikipedia.org/wiki/APL_(programming_language)" rel="nofollow">https://en.wikipedia.org/wiki/APL_(programming_language)</a><br>
Gleam - <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Sidney Leatherwood on LinkedIn — <a href="https://www.linkedin.com/in/leather-s" rel="nofollow">https://www.linkedin.com/in/leather-s</a><br>
Semsee — <a href="https://semsee.com/" rel="nofollow">https://semsee.com/</a></p><p>Special Guest: Chris Miller.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>The Controlled Magic of Oban with Parker and Shannon Selbert</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e3-selbert</link>
      <guid isPermaLink="false">943755c0-4bf5-4c89-949c-44406ea58584</guid>
      <pubDate>Thu, 20 May 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/943755c0-4bf5-4c89-949c-44406ea58584.mp3" length="43252983" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>While there is magic to be found in many frameworks, having too much going on without being able to control it is not for everybody. Today Parker and Shannon Selbert talk about their dynamic partnership and the ‘controlled magic’ of their tool Oban.</itunes:subtitle>
      <itunes:duration>50:21</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/943755c0-4bf5-4c89-949c-44406ea58584/cover.jpg" />
      <description>While there is magic to be found in many frameworks, having too much going on under the hood without you being able to control it is not for everybody. Today we invite Parker and Shannon Selbert to speak about their dynamic partnership and the ‘controlled magic’ of their tool Oban. Together Parker and Shannon founded Soren, where they help clients with established web apps stabilize, scale, and ‘add schmancy features’. Their tool Oban is a persistent background job processor written in Elixir whose differentiating feature revolves around keeping jobs after they're processed. We dive right in with Parker and Shannon hearing about how they got into programming before they talk about Oban and what sets it apart. Next up we get into how our guests navigate their personal relationship and professional partnership and they weigh in on homeschooling kids, writing new features, and the necessary life skills for handling Oban user support. Moving onto the topic of the BEAM, we explore the unique type of magic it offers and how this plays into some of the cooler features of Oban such as being able to cancel jobs. Our guests talk about some of the kinks they still need to work out of their tool and we wrap up our conversation on the pro version of Oban and how successful it has been. As always we close today’s show off with our mini-interview, this time with Joe Peck from Spreedly!
Key Points From This Episode:
The illicit stories behind how Parker and Shannon got into tech.
Understanding Oban, a persistent background job processor written in Elixir.
How Oban is different from other job processors like Sidekiq.
The great partnership our guests have and the story behind Soren.
How Parker and Shannon differentiate their personal and professional life.
The approach Parker and Shannon take to handling Oban user support.
Perspectives on the magic of homeschooling, relationships, and Oban!
Different kinds of magic provided by different frameworks and why Elixir magic is the best.
How Parker and Shannon got interested in Erlang, BEAM, and Elixir.
The best part about maintaining an open-source project.
The story behind getting a global concurrency lock on handling batches.
Added features that come with upgrading to the pro version of Oban.
Canceling a job on Oban and the role the BEAM plays in allowing this.
Writing documentation for Oban and our guest’s plans to make video tutorials.
The shift in digital learning more towards video tutorials.
Perspectives on whether we have arrived at a golden age in computing yet.
Challenges around implementing seamless horizontal scaling in Oban.
Making a living and working on Oban; advantages of setting up a pro version.
Our mini-interview with Joe Peck where we explore his journey with Elixir.
Links Mentioned in Today’s Episode:
Elixir Wizards |&gt; Conference — https://smr.tl/conf-podcast
SmartLogic — https://smartlogic.io/ 
Soren on Twitter — https://twitter.com/sorentwo?lang=en
Soren — https://sorentwo.com/
Parker Selbert on GitHub — https://github.com/sorentwo
Shannon Selbert on GitHub — https://github.com/sorenone
Oban — https://github.com/sorentwo/oban
Sidekiq — https://sidekiq.org/
Lawnmower Man — https://www.imdb.com/title/tt0104692/
Soren Kierkegaard — https://www.britannica.com/biography/Soren-Kierkegaard
Ender's Game — https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706
Joe Peck  — https://peckyeah.com/
Spreedly — https://www.spreedly.com/
 Special Guests: Parker Selbert and Shannon Selbert.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>While there is magic to be found in many frameworks, having too much going on under the hood without you being able to control it is not for everybody. Today we invite Parker and Shannon Selbert to speak about their dynamic partnership and the ‘controlled magic’ of their tool Oban. Together Parker and Shannon founded Soren, where they help clients with established web apps stabilize, scale, and ‘add schmancy features’. Their tool Oban is a persistent background job processor written in Elixir whose differentiating feature revolves around keeping jobs after they&#39;re processed. We dive right in with Parker and Shannon hearing about how they got into programming before they talk about Oban and what sets it apart. Next up we get into how our guests navigate their personal relationship and professional partnership and they weigh in on homeschooling kids, writing new features, and the necessary life skills for handling Oban user support. Moving onto the topic of the BEAM, we explore the unique type of magic it offers and how this plays into some of the cooler features of Oban such as being able to cancel jobs. Our guests talk about some of the kinks they still need to work out of their tool and we wrap up our conversation on the pro version of Oban and how successful it has been. As always we close today’s show off with our mini-interview, this time with Joe Peck from Spreedly!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The illicit stories behind how Parker and Shannon got into tech.</li>
<li>Understanding Oban, a persistent background job processor written in Elixir.</li>
<li>How Oban is different from other job processors like Sidekiq.</li>
<li>The great partnership our guests have and the story behind Soren.</li>
<li>How Parker and Shannon differentiate their personal and professional life.</li>
<li>The approach Parker and Shannon take to handling Oban user support.</li>
<li>Perspectives on the magic of homeschooling, relationships, and Oban!</li>
<li>Different kinds of magic provided by different frameworks and why Elixir magic is the best.</li>
<li>How Parker and Shannon got interested in Erlang, BEAM, and Elixir.</li>
<li>The best part about maintaining an open-source project.</li>
<li>The story behind getting a global concurrency lock on handling batches.</li>
<li>Added features that come with upgrading to the pro version of Oban.</li>
<li>Canceling a job on Oban and the role the BEAM plays in allowing this.</li>
<li>Writing documentation for Oban and our guest’s plans to make video tutorials.</li>
<li>The shift in digital learning more towards video tutorials.</li>
<li>Perspectives on whether we have arrived at a golden age in computing yet.</li>
<li>Challenges around implementing seamless horizontal scaling in Oban.</li>
<li>Making a living and working on Oban; advantages of setting up a pro version.</li>
<li>Our mini-interview with Joe Peck where we explore his journey with Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards |&gt; Conference — <a href="https://smr.tl/conf-podcast" rel="nofollow">https://smr.tl/conf-podcast</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Soren on Twitter — <a href="https://twitter.com/sorentwo?lang=en" rel="nofollow">https://twitter.com/sorentwo?lang=en</a><br>
Soren — <a href="https://sorentwo.com/" rel="nofollow">https://sorentwo.com/</a><br>
Parker Selbert on GitHub — <a href="https://github.com/sorentwo" rel="nofollow">https://github.com/sorentwo</a><br>
Shannon Selbert on GitHub — <a href="https://github.com/sorenone" rel="nofollow">https://github.com/sorenone</a><br>
Oban — <a href="https://github.com/sorentwo/oban" rel="nofollow">https://github.com/sorentwo/oban</a><br>
Sidekiq — <a href="https://sidekiq.org/" rel="nofollow">https://sidekiq.org/</a><br>
Lawnmower Man — <a href="https://www.imdb.com/title/tt0104692/" rel="nofollow">https://www.imdb.com/title/tt0104692/</a><br>
Soren Kierkegaard — <a href="https://www.britannica.com/biography/Soren-Kierkegaard" rel="nofollow">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>
Ender&#39;s Game — <a href="https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706" rel="nofollow">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>
Joe Peck  — <a href="https://peckyeah.com/" rel="nofollow">https://peckyeah.com/</a><br>
Spreedly — <a href="https://www.spreedly.com/" rel="nofollow">https://www.spreedly.com/</a></p><p>Special Guests: Parker Selbert and Shannon Selbert.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>While there is magic to be found in many frameworks, having too much going on under the hood without you being able to control it is not for everybody. Today we invite Parker and Shannon Selbert to speak about their dynamic partnership and the ‘controlled magic’ of their tool Oban. Together Parker and Shannon founded Soren, where they help clients with established web apps stabilize, scale, and ‘add schmancy features’. Their tool Oban is a persistent background job processor written in Elixir whose differentiating feature revolves around keeping jobs after they&#39;re processed. We dive right in with Parker and Shannon hearing about how they got into programming before they talk about Oban and what sets it apart. Next up we get into how our guests navigate their personal relationship and professional partnership and they weigh in on homeschooling kids, writing new features, and the necessary life skills for handling Oban user support. Moving onto the topic of the BEAM, we explore the unique type of magic it offers and how this plays into some of the cooler features of Oban such as being able to cancel jobs. Our guests talk about some of the kinks they still need to work out of their tool and we wrap up our conversation on the pro version of Oban and how successful it has been. As always we close today’s show off with our mini-interview, this time with Joe Peck from Spreedly!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The illicit stories behind how Parker and Shannon got into tech.</li>
<li>Understanding Oban, a persistent background job processor written in Elixir.</li>
<li>How Oban is different from other job processors like Sidekiq.</li>
<li>The great partnership our guests have and the story behind Soren.</li>
<li>How Parker and Shannon differentiate their personal and professional life.</li>
<li>The approach Parker and Shannon take to handling Oban user support.</li>
<li>Perspectives on the magic of homeschooling, relationships, and Oban!</li>
<li>Different kinds of magic provided by different frameworks and why Elixir magic is the best.</li>
<li>How Parker and Shannon got interested in Erlang, BEAM, and Elixir.</li>
<li>The best part about maintaining an open-source project.</li>
<li>The story behind getting a global concurrency lock on handling batches.</li>
<li>Added features that come with upgrading to the pro version of Oban.</li>
<li>Canceling a job on Oban and the role the BEAM plays in allowing this.</li>
<li>Writing documentation for Oban and our guest’s plans to make video tutorials.</li>
<li>The shift in digital learning more towards video tutorials.</li>
<li>Perspectives on whether we have arrived at a golden age in computing yet.</li>
<li>Challenges around implementing seamless horizontal scaling in Oban.</li>
<li>Making a living and working on Oban; advantages of setting up a pro version.</li>
<li>Our mini-interview with Joe Peck where we explore his journey with Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards |&gt; Conference — <a href="https://smr.tl/conf-podcast" rel="nofollow">https://smr.tl/conf-podcast</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Soren on Twitter — <a href="https://twitter.com/sorentwo?lang=en" rel="nofollow">https://twitter.com/sorentwo?lang=en</a><br>
Soren — <a href="https://sorentwo.com/" rel="nofollow">https://sorentwo.com/</a><br>
Parker Selbert on GitHub — <a href="https://github.com/sorentwo" rel="nofollow">https://github.com/sorentwo</a><br>
Shannon Selbert on GitHub — <a href="https://github.com/sorenone" rel="nofollow">https://github.com/sorenone</a><br>
Oban — <a href="https://github.com/sorentwo/oban" rel="nofollow">https://github.com/sorentwo/oban</a><br>
Sidekiq — <a href="https://sidekiq.org/" rel="nofollow">https://sidekiq.org/</a><br>
Lawnmower Man — <a href="https://www.imdb.com/title/tt0104692/" rel="nofollow">https://www.imdb.com/title/tt0104692/</a><br>
Soren Kierkegaard — <a href="https://www.britannica.com/biography/Soren-Kierkegaard" rel="nofollow">https://www.britannica.com/biography/Soren-Kierkegaard</a><br>
Ender&#39;s Game — <a href="https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706" rel="nofollow">https://www.amazon.com/Enders-Ender-Quintet-Orson-Scott/dp/0812550706</a><br>
Joe Peck  — <a href="https://peckyeah.com/" rel="nofollow">https://peckyeah.com/</a><br>
Spreedly — <a href="https://www.spreedly.com/" rel="nofollow">https://www.spreedly.com/</a></p><p>Special Guests: Parker Selbert and Shannon Selbert.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>The Right Amount of Magic with Erik Person</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e2-person</link>
      <guid isPermaLink="false">f1486983-1421-45be-87ae-99a0a56ec848</guid>
      <pubDate>Thu, 13 May 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f1486983-1421-45be-87ae-99a0a56ec848.mp3" length="58315913" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today, Erik Person continues our journey into the magic of the BEAM and we get to hear all about his path in programming, his relationship with Elixir, and his utilization of the BEAM. We also have a mini-feature with SmartLogic's very own Stephanie Vizzi, talking about her work, relationship with Elixir, and more!</itunes:subtitle>
      <itunes:duration>1:00:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f1486983-1421-45be-87ae-99a0a56ec848/cover.jpg" />
      <description>Today we are joined by the Vice President of Engineering at Corvus Insurance, Erik Person! Erik continues our journey into the magic of the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get to hear all about Erik's path in programming, his relationship with Elixir, and his utilization of the BEAM. Growing up in a family involved in computer science, and an early affinity for technology made the choice of what to study at college a straightforward one for Erik. He tells us about his life during and after those school years, touching on his first job and the important milestones leading up to his current position at Corvus. We talk about his early feelings for Elixir and why it appealed to him almost immediately before discussing different languages on the BEAM and his love of types! Our guest also shares some of the bigger challenges he has encountered working in Elixir and touches on the issue of scaling effectively. In this episode, we also air a mini-feature with SmartLogic's very own Stephanie Vizzi, talking about her work at the company, relationship with Elixir, and more! So for all this, plus a lot in between, be sure to tune in!
Key Points From This Episode:
Erik's family ties to computer science and his path leading into programming. 
The first job that Erik landed in programming and his current role at Corvus Insurance.
The BEAM at Corvus and the general architecture of the company's technology. 
Erik's first encounters and learnings with Elixir and the questions it answered for him immediately.
The learning curve for languages on The BEAM; Erik's own journey to understanding.
Erik's preference for types and his wish for their inclusion on Elixir!
Lisp on The BEAM; Erik unpacks his perspectives and the blog post he wrote on the subject. 
Getting to grips with abstract forms and how these terms operate in Erlang and Elixir. 
The challenges that Erik experienced parsing and manipulating the code in Elixir.  
Erik weighs in on BEAM magic; appreciating the magic that is possible with Elixir and Elm. 
Perspectives on scaling on Elm and Elixir as an application grows rapidly.
How Erik and his team typically use contexts and service-oriented architecture.
Challenges with compile times during the process of scaling of the application.
Excitement about the progressive steps in the data science component of Corvus. 
How Erik applied his skills to his passion for playing blackjack by creating a card-counting application. 
The remote meeting hardware device that Erik built as a pandemic side-project! 
This week's community mini-feature! Looking at how Stephanie Vizzi got into and uses Elixir.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Erik Person on LinkedIn — https://www.linkedin.com/in/erik-person-a9368bb
VirtualBox — https://www.virtualbox.org/
Tunnelblick — https://tunnelblick.net/
Corvus Insurance — https://www.corvusinsurance.com/
Corvus Job Openings — https://boards.greenhouse.io/corvusinsurance/
Clojure — https://clojure.org/
Saša Jurić — https://github.com/sasa1977
LFE — https://lfe.io/
Elm — https://elm-lang.org/
Robert Virding — https://codesync.global/speaker/robert-virding/
The Erlang Rationale — https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313
Paul Graham — http://www.paulgraham.com/
Hackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554
Myers Briggs — https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/
Chris McCord — http://chrismccord.com/
Mix Xref — https://hexdocs.pm/mix/Mix.Tasks.Xref.html
Gleam — https://gleam.run/
Leex — http://erlang.org/doc/man/leex.html
GNU Bison - The Yacc-compatible Parser Generator — https://www.gnu.org/software/bison/manual/
YACC — https://www.geeksforgeeks.org/introduction-to-yacc/
Stephanie Vizzi on LinkedIn — https://www.linkedin.com/in/stephanie-vizzi-b1158996 Special Guests: Erik Person and Stephanie Vizzi.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we are joined by the Vice President of Engineering at Corvus Insurance, Erik Person! Erik continues our journey into the magic of the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get to hear all about Erik&#39;s path in programming, his relationship with Elixir, and his utilization of the BEAM. Growing up in a family involved in computer science, and an early affinity for technology made the choice of what to study at college a straightforward one for Erik. He tells us about his life during and after those school years, touching on his first job and the important milestones leading up to his current position at Corvus. We talk about his early feelings for Elixir and why it appealed to him almost immediately before discussing different languages on the BEAM and his love of types! Our guest also shares some of the bigger challenges he has encountered working in Elixir and touches on the issue of scaling effectively. In this episode, we also air a mini-feature with SmartLogic&#39;s very own Stephanie Vizzi, talking about her work at the company, relationship with Elixir, and more! So for all this, plus a lot in between, be sure to tune in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Erik&#39;s family ties to computer science and his path leading into programming. </li>
<li>The first job that Erik landed in programming and his current role at Corvus Insurance.</li>
<li>The BEAM at Corvus and the general architecture of the company&#39;s technology. </li>
<li>Erik&#39;s first encounters and learnings with Elixir and the questions it answered for him immediately.</li>
<li>The learning curve for languages on The BEAM; Erik&#39;s own journey to understanding.</li>
<li>Erik&#39;s preference for types and his wish for their inclusion on Elixir!</li>
<li>Lisp on The BEAM; Erik unpacks his perspectives and the blog post he wrote on the subject. </li>
<li>Getting to grips with abstract forms and how these terms operate in Erlang and Elixir. </li>
<li>The challenges that Erik experienced parsing and manipulating the code in Elixir.<br></li>
<li>Erik weighs in on BEAM magic; appreciating the magic that is possible with Elixir and Elm. </li>
<li>Perspectives on scaling on Elm and Elixir as an application grows rapidly.</li>
<li>How Erik and his team typically use contexts and service-oriented architecture.</li>
<li>Challenges with compile times during the process of scaling of the application.</li>
<li>Excitement about the progressive steps in the data science component of Corvus. </li>
<li>How Erik applied his skills to his passion for playing blackjack by creating a card-counting application. </li>
<li>The remote meeting hardware device that Erik built as a pandemic side-project! </li>
<li>This week&#39;s community mini-feature! Looking at how Stephanie Vizzi got into and uses Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Erik Person on LinkedIn — <a href="https://www.linkedin.com/in/erik-person-a9368bb" rel="nofollow">https://www.linkedin.com/in/erik-person-a9368bb</a><br>
VirtualBox — <a href="https://www.virtualbox.org/" rel="nofollow">https://www.virtualbox.org/</a><br>
Tunnelblick — <a href="https://tunnelblick.net/" rel="nofollow">https://tunnelblick.net/</a><br>
Corvus Insurance — <a href="https://www.corvusinsurance.com/" rel="nofollow">https://www.corvusinsurance.com/</a><br>
Corvus Job Openings — <a href="https://boards.greenhouse.io/corvusinsurance/" rel="nofollow">https://boards.greenhouse.io/corvusinsurance/</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Saša Jurić — <a href="https://github.com/sasa1977" rel="nofollow">https://github.com/sasa1977</a><br>
LFE — <a href="https://lfe.io/" rel="nofollow">https://lfe.io/</a><br>
Elm — <a href="https://elm-lang.org/" rel="nofollow">https://elm-lang.org/</a><br>
Robert Virding — <a href="https://codesync.global/speaker/robert-virding/" rel="nofollow">https://codesync.global/speaker/robert-virding/</a><br>
The Erlang Rationale — <a href="https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313" rel="nofollow">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Hackers and Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Myers Briggs — <a href="https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/" rel="nofollow">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Mix Xref — <a href="https://hexdocs.pm/mix/Mix.Tasks.Xref.html" rel="nofollow">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Leex — <a href="http://erlang.org/doc/man/leex.html" rel="nofollow">http://erlang.org/doc/man/leex.html</a><br>
GNU Bison - The Yacc-compatible Parser Generator — <a href="https://www.gnu.org/software/bison/manual/" rel="nofollow">https://www.gnu.org/software/bison/manual/</a><br>
YACC — <a href="https://www.geeksforgeeks.org/introduction-to-yacc/" rel="nofollow">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>
Stephanie Vizzi on LinkedIn — <a href="https://www.linkedin.com/in/stephanie-vizzi-b1158996" rel="nofollow">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special Guests: Erik Person and Stephanie Vizzi.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we are joined by the Vice President of Engineering at Corvus Insurance, Erik Person! Erik continues our journey into the magic of the BEAM, our season-long theme for the Elixir Wizards Podcast, and we get to hear all about Erik&#39;s path in programming, his relationship with Elixir, and his utilization of the BEAM. Growing up in a family involved in computer science, and an early affinity for technology made the choice of what to study at college a straightforward one for Erik. He tells us about his life during and after those school years, touching on his first job and the important milestones leading up to his current position at Corvus. We talk about his early feelings for Elixir and why it appealed to him almost immediately before discussing different languages on the BEAM and his love of types! Our guest also shares some of the bigger challenges he has encountered working in Elixir and touches on the issue of scaling effectively. In this episode, we also air a mini-feature with SmartLogic&#39;s very own Stephanie Vizzi, talking about her work at the company, relationship with Elixir, and more! So for all this, plus a lot in between, be sure to tune in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Erik&#39;s family ties to computer science and his path leading into programming. </li>
<li>The first job that Erik landed in programming and his current role at Corvus Insurance.</li>
<li>The BEAM at Corvus and the general architecture of the company&#39;s technology. </li>
<li>Erik&#39;s first encounters and learnings with Elixir and the questions it answered for him immediately.</li>
<li>The learning curve for languages on The BEAM; Erik&#39;s own journey to understanding.</li>
<li>Erik&#39;s preference for types and his wish for their inclusion on Elixir!</li>
<li>Lisp on The BEAM; Erik unpacks his perspectives and the blog post he wrote on the subject. </li>
<li>Getting to grips with abstract forms and how these terms operate in Erlang and Elixir. </li>
<li>The challenges that Erik experienced parsing and manipulating the code in Elixir.<br></li>
<li>Erik weighs in on BEAM magic; appreciating the magic that is possible with Elixir and Elm. </li>
<li>Perspectives on scaling on Elm and Elixir as an application grows rapidly.</li>
<li>How Erik and his team typically use contexts and service-oriented architecture.</li>
<li>Challenges with compile times during the process of scaling of the application.</li>
<li>Excitement about the progressive steps in the data science component of Corvus. </li>
<li>How Erik applied his skills to his passion for playing blackjack by creating a card-counting application. </li>
<li>The remote meeting hardware device that Erik built as a pandemic side-project! </li>
<li>This week&#39;s community mini-feature! Looking at how Stephanie Vizzi got into and uses Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Erik Person on LinkedIn — <a href="https://www.linkedin.com/in/erik-person-a9368bb" rel="nofollow">https://www.linkedin.com/in/erik-person-a9368bb</a><br>
VirtualBox — <a href="https://www.virtualbox.org/" rel="nofollow">https://www.virtualbox.org/</a><br>
Tunnelblick — <a href="https://tunnelblick.net/" rel="nofollow">https://tunnelblick.net/</a><br>
Corvus Insurance — <a href="https://www.corvusinsurance.com/" rel="nofollow">https://www.corvusinsurance.com/</a><br>
Corvus Job Openings — <a href="https://boards.greenhouse.io/corvusinsurance/" rel="nofollow">https://boards.greenhouse.io/corvusinsurance/</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Saša Jurić — <a href="https://github.com/sasa1977" rel="nofollow">https://github.com/sasa1977</a><br>
LFE — <a href="https://lfe.io/" rel="nofollow">https://lfe.io/</a><br>
Elm — <a href="https://elm-lang.org/" rel="nofollow">https://elm-lang.org/</a><br>
Robert Virding — <a href="https://codesync.global/speaker/robert-virding/" rel="nofollow">https://codesync.global/speaker/robert-virding/</a><br>
The Erlang Rationale — <a href="https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313" rel="nofollow">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Hackers and Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Myers Briggs — <a href="https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/" rel="nofollow">https://www.myersbriggs.org/my-mbti-personality-type/mbti-basics/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Mix Xref — <a href="https://hexdocs.pm/mix/Mix.Tasks.Xref.html" rel="nofollow">https://hexdocs.pm/mix/Mix.Tasks.Xref.html</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Leex — <a href="http://erlang.org/doc/man/leex.html" rel="nofollow">http://erlang.org/doc/man/leex.html</a><br>
GNU Bison - The Yacc-compatible Parser Generator — <a href="https://www.gnu.org/software/bison/manual/" rel="nofollow">https://www.gnu.org/software/bison/manual/</a><br>
YACC — <a href="https://www.geeksforgeeks.org/introduction-to-yacc/" rel="nofollow">https://www.geeksforgeeks.org/introduction-to-yacc/</a><br>
Stephanie Vizzi on LinkedIn — <a href="https://www.linkedin.com/in/stephanie-vizzi-b1158996" rel="nofollow">https://www.linkedin.com/in/stephanie-vizzi-b1158996</a></p><p>Special Guests: Erik Person and Stephanie Vizzi.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Robert Virding on the Roots of Erlang</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s6e1-virding</link>
      <guid isPermaLink="false">10914181-66e0-4200-b6c8-260bee7e32bd</guid>
      <pubDate>Thu, 06 May 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10914181-66e0-4200-b6c8-260bee7e32bd.mp3" length="47708964" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>6</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to a new season of Elixir Wizards! This time around we will be focussing on the magic of the BEAM, so get ready for an exciting journey. To kick things off we are joined by a true legend in the space of Erlang, Elixir, and the BEAM, Robert Virding.</itunes:subtitle>
      <itunes:duration>49:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10914181-66e0-4200-b6c8-260bee7e32bd/cover.jpg" />
      <description>Welcome to a brand-spanking-new season of Elixir Wizards! This time around we will be focussing on the magic of the BEAM, so get ready for an exciting journey into new territories filled with mystery and power! To kick things off in this inaugural episode we are joined by a true legend in the space of Erlang, Elixir, and the BEAM. Robert Virding is one of the three founding members of Erlang, and his unrivaled intimacy with the language and its related subjects is truly inspiring and informative. We feel like we could fill many more episodes just hearing Robert unpack the history he has been involved in, but we do manage to cover a lot in this show, touching on Robert's career arcs, the other founders of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much more. Robert also shares some insight into the BEAM and the idea of a virtual machine, broaching these sometimes misunderstood concepts with simplicity and clarity. We talk about magic, hurdles, best practices, and the future of community, with Robert sharing his experiences working on Erlog, LFE, and much more. Make sure to join us for this episode and stay tuned for the rest of another great season!
Key Points From This Episode:
Robert's description of the Erlang Rationale document and why it was important to create it. 
Background information on the founding three members of Erlang and how they came together. 
Training and early career as a computer scientist; Robert's background before Ericsson. 
The roots of the Erlang name, and how Robert first came across and connected with it. 
The simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! 
Unpacking the application of a virtual machine and the connection between Erlang and BEAM.
Information on Core Erlang and how it works within the compiler.
LFE or Lisp-Flavored Erlang and the decisions that were made to keep it straightforward. 
Hurdles to learning Erlang and Robert's thoughts on getting over these. 
Weighing the usefulness of 'magic' and the caution with which Robert approaches it. 
Best practices for Erlang and Elixir according to Robert; the biggest shifts necessary for success.
Robert's first feelings about the arrival of Elixir and the questions it raised for him. 
The motivation behind Robert's work on Erlog! 
Reflections on the Erlang movies that Ericsson produced and their evolution over time! 
The future of Erlang, its community, and the need for continued and increased collaboration. 
Why Robert wants to put more parentheses back in the mix! 
Links Mentioned in Today’s Episode:
SmartLogic - https://smartlogic.io/
Robert Virding - https://codesync.global/speaker/robert-virding/
Robert Viriding on Twitter - https://twitter.com/rvirding?lang=en
The Erlang Rationale - https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313
Prolog - https://www.swi-prolog.org/
Ericsson - https://www.ericsson.com/
Joe Armstrong - https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary
Mike Williams - https://codesync.global/speaker/mike-williams/
Fortran - https://fortran-lang.org/
Pascal - http://www.pascal-programming.info/index.php
VAX - https://www.computerhope.com/jargon/v/vax.htm
Franz Lisp - https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml
Agner Krarup Erlang - https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/
Bogumil Hausman - https://peoplepill.com/people/bogumil-hausman
LFE - https://lfe.io/
Erlang The Abstract Format - https://erlang.org/doc/apps/erts/absform.html
Core Erlang - https://blog.erlang.org/core-erlang-by-example/
Erlog - https://github.com/rvirding/erlog
Lua in Erlang - https://github.com/rvirding/luerl
Erlang: The Movie - https://elixirforum.com/t/erlang-the-movie/440
Monty Python - http://www.montypython.com/
Erlang Ecosystem Foundation - https://erlef.org/
A first look at the JIT - https://blog.erlang.org/a-first-look-at-the-jit/
Lisp Cycles - https://xkcd.com/297/
Creative Assembly - https://www.creative-assembly.com/home 
Total War - https://www.totalwar.com/
World of Warcraft - https://worldofwarcraft.com/en-us/ Special Guest: Robert Virding.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to a brand-spanking-new season of Elixir Wizards! This time around we will be focussing on the magic of the BEAM, so get ready for an exciting journey into new territories filled with mystery and power! To kick things off in this inaugural episode we are joined by a true legend in the space of Erlang, Elixir, and the BEAM. Robert Virding is one of the three founding members of Erlang, and his unrivaled intimacy with the language and its related subjects is truly inspiring and informative. We feel like we could fill many more episodes just hearing Robert unpack the history he has been involved in, but we do manage to cover a lot in this show, touching on Robert&#39;s career arcs, the other founders of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much more. Robert also shares some insight into the BEAM and the idea of a virtual machine, broaching these sometimes misunderstood concepts with simplicity and clarity. We talk about magic, hurdles, best practices, and the future of community, with Robert sharing his experiences working on Erlog, LFE, and much more. Make sure to join us for this episode and stay tuned for the rest of another great season!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Robert&#39;s description of the Erlang Rationale document and why it was important to create it. </li>
<li>Background information on the founding three members of Erlang and how they came together. </li>
<li>Training and early career as a computer scientist; Robert&#39;s background before Ericsson. </li>
<li>The roots of the Erlang name, and how Robert first came across and connected with it. </li>
<li>The simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>
<li>Unpacking the application of a virtual machine and the connection between Erlang and BEAM.</li>
<li>Information on Core Erlang and how it works within the compiler.</li>
<li>LFE or Lisp-Flavored Erlang and the decisions that were made to keep it straightforward. </li>
<li>Hurdles to learning Erlang and Robert&#39;s thoughts on getting over these. </li>
<li>Weighing the usefulness of &#39;magic&#39; and the caution with which Robert approaches it. </li>
<li>Best practices for Erlang and Elixir according to Robert; the biggest shifts necessary for success.</li>
<li>Robert&#39;s first feelings about the arrival of Elixir and the questions it raised for him. </li>
<li>The motivation behind Robert&#39;s work on Erlog! </li>
<li>Reflections on the Erlang movies that Ericsson produced and their evolution over time! </li>
<li>The future of Erlang, its community, and the need for continued and increased collaboration. </li>
<li>Why Robert wants to put more parentheses back in the mix! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic - <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Robert Virding - <a href="https://codesync.global/speaker/robert-virding/" rel="nofollow">https://codesync.global/speaker/robert-virding/</a><br>
Robert Viriding on Twitter - <a href="https://twitter.com/rvirding?lang=en" rel="nofollow">https://twitter.com/rvirding?lang=en</a><br>
The Erlang Rationale - <a href="https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313" rel="nofollow">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>
Prolog - <a href="https://www.swi-prolog.org/" rel="nofollow">https://www.swi-prolog.org/</a><br>
Ericsson - <a href="https://www.ericsson.com/" rel="nofollow">https://www.ericsson.com/</a><br>
Joe Armstrong - <a href="https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary" rel="nofollow">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>
Mike Williams - <a href="https://codesync.global/speaker/mike-williams/" rel="nofollow">https://codesync.global/speaker/mike-williams/</a><br>
Fortran - <a href="https://fortran-lang.org/" rel="nofollow">https://fortran-lang.org/</a><br>
Pascal - <a href="http://www.pascal-programming.info/index.php" rel="nofollow">http://www.pascal-programming.info/index.php</a><br>
VAX - <a href="https://www.computerhope.com/jargon/v/vax.htm" rel="nofollow">https://www.computerhope.com/jargon/v/vax.htm</a><br>
Franz Lisp - <a href="https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml" rel="nofollow">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>
Agner Krarup Erlang - <a href="https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/" rel="nofollow">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>
Bogumil Hausman - <a href="https://peoplepill.com/people/bogumil-hausman" rel="nofollow">https://peoplepill.com/people/bogumil-hausman</a><br>
LFE - <a href="https://lfe.io/" rel="nofollow">https://lfe.io/</a><br>
Erlang The Abstract Format - <a href="https://erlang.org/doc/apps/erts/absform.html" rel="nofollow">https://erlang.org/doc/apps/erts/absform.html</a><br>
Core Erlang - <a href="https://blog.erlang.org/core-erlang-by-example/" rel="nofollow">https://blog.erlang.org/core-erlang-by-example/</a><br>
Erlog - <a href="https://github.com/rvirding/erlog" rel="nofollow">https://github.com/rvirding/erlog</a><br>
Lua in Erlang - <a href="https://github.com/rvirding/luerl" rel="nofollow">https://github.com/rvirding/luerl</a><br>
Erlang: The Movie - <a href="https://elixirforum.com/t/erlang-the-movie/440" rel="nofollow">https://elixirforum.com/t/erlang-the-movie/440</a><br>
Monty Python - <a href="http://www.montypython.com/" rel="nofollow">http://www.montypython.com/</a><br>
Erlang Ecosystem Foundation - <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
A first look at the JIT - <a href="https://blog.erlang.org/a-first-look-at-the-jit/" rel="nofollow">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>
Lisp Cycles - <a href="https://xkcd.com/297/" rel="nofollow">https://xkcd.com/297/</a><br>
Creative Assembly - <a href="https://www.creative-assembly.com/home" rel="nofollow">https://www.creative-assembly.com/home</a> <br>
Total War - <a href="https://www.totalwar.com/" rel="nofollow">https://www.totalwar.com/</a><br>
World of Warcraft - <a href="https://worldofwarcraft.com/en-us/" rel="nofollow">https://worldofwarcraft.com/en-us/</a></p><p>Special Guest: Robert Virding.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to a brand-spanking-new season of Elixir Wizards! This time around we will be focussing on the magic of the BEAM, so get ready for an exciting journey into new territories filled with mystery and power! To kick things off in this inaugural episode we are joined by a true legend in the space of Erlang, Elixir, and the BEAM. Robert Virding is one of the three founding members of Erlang, and his unrivaled intimacy with the language and its related subjects is truly inspiring and informative. We feel like we could fill many more episodes just hearing Robert unpack the history he has been involved in, but we do manage to cover a lot in this show, touching on Robert&#39;s career arcs, the other founders of Erlang, the connection to Ericsson and the bridge to Elixir, as well as much more. Robert also shares some insight into the BEAM and the idea of a virtual machine, broaching these sometimes misunderstood concepts with simplicity and clarity. We talk about magic, hurdles, best practices, and the future of community, with Robert sharing his experiences working on Erlog, LFE, and much more. Make sure to join us for this episode and stay tuned for the rest of another great season!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Robert&#39;s description of the Erlang Rationale document and why it was important to create it. </li>
<li>Background information on the founding three members of Erlang and how they came together. </li>
<li>Training and early career as a computer scientist; Robert&#39;s background before Ericsson. </li>
<li>The roots of the Erlang name, and how Robert first came across and connected with it. </li>
<li>The simplest definition of the BEAM, Bogdan’s Erlang Abstract Machine! </li>
<li>Unpacking the application of a virtual machine and the connection between Erlang and BEAM.</li>
<li>Information on Core Erlang and how it works within the compiler.</li>
<li>LFE or Lisp-Flavored Erlang and the decisions that were made to keep it straightforward. </li>
<li>Hurdles to learning Erlang and Robert&#39;s thoughts on getting over these. </li>
<li>Weighing the usefulness of &#39;magic&#39; and the caution with which Robert approaches it. </li>
<li>Best practices for Erlang and Elixir according to Robert; the biggest shifts necessary for success.</li>
<li>Robert&#39;s first feelings about the arrival of Elixir and the questions it raised for him. </li>
<li>The motivation behind Robert&#39;s work on Erlog! </li>
<li>Reflections on the Erlang movies that Ericsson produced and their evolution over time! </li>
<li>The future of Erlang, its community, and the need for continued and increased collaboration. </li>
<li>Why Robert wants to put more parentheses back in the mix! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic - <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Robert Virding - <a href="https://codesync.global/speaker/robert-virding/" rel="nofollow">https://codesync.global/speaker/robert-virding/</a><br>
Robert Viriding on Twitter - <a href="https://twitter.com/rvirding?lang=en" rel="nofollow">https://twitter.com/rvirding?lang=en</a><br>
The Erlang Rationale - <a href="https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313" rel="nofollow">https://elixirforum.com/t/the-erlang-rationale-by-robert-virding-pdf/35313</a><br>
Prolog - <a href="https://www.swi-prolog.org/" rel="nofollow">https://www.swi-prolog.org/</a><br>
Ericsson - <a href="https://www.ericsson.com/" rel="nofollow">https://www.ericsson.com/</a><br>
Joe Armstrong - <a href="https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary" rel="nofollow">https://www.theguardian.com/education/2019/may/08/joe-armstrong-obituary</a><br>
Mike Williams - <a href="https://codesync.global/speaker/mike-williams/" rel="nofollow">https://codesync.global/speaker/mike-williams/</a><br>
Fortran - <a href="https://fortran-lang.org/" rel="nofollow">https://fortran-lang.org/</a><br>
Pascal - <a href="http://www.pascal-programming.info/index.php" rel="nofollow">http://www.pascal-programming.info/index.php</a><br>
VAX - <a href="https://www.computerhope.com/jargon/v/vax.htm" rel="nofollow">https://www.computerhope.com/jargon/v/vax.htm</a><br>
Franz Lisp - <a href="https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml" rel="nofollow">https://franz.com/products/allegro-common-lisp/acl_prolog.lhtml</a><br>
Agner Krarup Erlang - <a href="https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/" rel="nofollow">https://mathshistory.st-andrews.ac.uk/Biographies/Erlang/</a><br>
Bogumil Hausman - <a href="https://peoplepill.com/people/bogumil-hausman" rel="nofollow">https://peoplepill.com/people/bogumil-hausman</a><br>
LFE - <a href="https://lfe.io/" rel="nofollow">https://lfe.io/</a><br>
Erlang The Abstract Format - <a href="https://erlang.org/doc/apps/erts/absform.html" rel="nofollow">https://erlang.org/doc/apps/erts/absform.html</a><br>
Core Erlang - <a href="https://blog.erlang.org/core-erlang-by-example/" rel="nofollow">https://blog.erlang.org/core-erlang-by-example/</a><br>
Erlog - <a href="https://github.com/rvirding/erlog" rel="nofollow">https://github.com/rvirding/erlog</a><br>
Lua in Erlang - <a href="https://github.com/rvirding/luerl" rel="nofollow">https://github.com/rvirding/luerl</a><br>
Erlang: The Movie - <a href="https://elixirforum.com/t/erlang-the-movie/440" rel="nofollow">https://elixirforum.com/t/erlang-the-movie/440</a><br>
Monty Python - <a href="http://www.montypython.com/" rel="nofollow">http://www.montypython.com/</a><br>
Erlang Ecosystem Foundation - <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
A first look at the JIT - <a href="https://blog.erlang.org/a-first-look-at-the-jit/" rel="nofollow">https://blog.erlang.org/a-first-look-at-the-jit/</a><br>
Lisp Cycles - <a href="https://xkcd.com/297/" rel="nofollow">https://xkcd.com/297/</a><br>
Creative Assembly - <a href="https://www.creative-assembly.com/home" rel="nofollow">https://www.creative-assembly.com/home</a> <br>
Total War - <a href="https://www.totalwar.com/" rel="nofollow">https://www.totalwar.com/</a><br>
World of Warcraft - <a href="https://worldofwarcraft.com/en-us/" rel="nofollow">https://worldofwarcraft.com/en-us/</a></p><p>Special Guest: Robert Virding.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Adopting Elixir Finale with Sean Lewis, Anna Neyzberg, and René Föhring</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e17-adopting-elixir-finale</link>
      <guid isPermaLink="false">12f603e4-7d53-4e83-baed-33e436cbf102</guid>
      <pubDate>Thu, 25 Mar 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/12f603e4-7d53-4e83-baed-33e436cbf102.mp3" length="59244335" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Season 5 ends with a bang as we welcome past guests Sean Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on getting their companies and teams to adopt Elixir.</itunes:subtitle>
      <itunes:duration>1:01:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/12f603e4-7d53-4e83-baed-33e436cbf102/cover.jpg" />
      <description>Season 5 ends with a bang as we welcome back Sean Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on getting their companies and teams to adopt Elixir. We open our conversation with each guest sharing their first experiences with Elixir. After chatting about the changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits and how they’ve persuaded companies to make the Elixir leap. From zero downtime deployment to arguing for Elixir’s ability to solve immediate problems, we touch on the most convincing reasons for stakeholders to adopt Elixir. Following this, we unpack common Elixir criticisms before looking at the importance of hiring developers for their aptitude as well as for their skill set. Later, we discuss what we most appreciate about Elixir, with each guest sharing a story from producing an Elixir app. We round off an insightful episode by talking about Elixir accessibility and the top ways to train entry-level programmers. Join us as we wrap up this season for a last deep-dive on adopting Elixir. 
Key Points From This Episode:
We introduce today’s panel, featuring Sean Lewis, Anna Neyzberg, and René Föhring.
Hear how each guest discovered Elixir and what they’ve seen change in the ecosystem.
Exploring our guests' first Elixir projects. 
The intersections between Elixir and cryptocurrency.
How to persuade company stakeholders to adopt Elixir. 
Why choosing a language for scalability often isn’t as important as its immediate benefits.
Unpacking common criticisms of Elixir adoption.
How a culture of learning can push your company in the right direction.
Anecdotes on getting companies to adopt Elixir.
We touch on the benefits of using Elixir. 
Each guest reflects on their experiences producing and maintaining Elixir apps. 
How our guests are currently using Elixir.
Using Credo to train new Elixir developers. 
Advice on making Elixir accessible to entry-level coders.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Discord — https://smr.tl/wizards-discord
Elixir Wizards Email — podcast@smartlogic.io
Elixir Wizards Conference — https://smartlogic.io/about/community/elixir-wizards-conference/
Anna Neyzberg on LinkedIn — https://www.linkedin.com/in/anna-neyzberg-93545316/
Anna Neyzberg on Twitter — https://twitter.com/ANeyzb
Sean Lewis on LinkedIn— https://www.linkedin.com/in/sean-lewis-40375077/
René Föhring on Twitter — https://twitter.com/rrrene
René Föhring — https://rrrene.org/
ElixirBridge — http://elixirbridge.org/
Carbon Five — https://www.carbonfive.com/
Genesis Block — https://genesisblock.com/
Genesis Block Jobs — https://genesisblock.com/jobs
Credo on GitHub — https://github.com/rrrene/credo/
ElixirConf 2018 — https://elixirconf.com/2018
Ethereumex — https://hex.pm/packages/ethereumex
Mana — https://github.com/mana-ethereum/mana
Robinhood — https://robinhood.com/us/en/
Slack — https://slack.com/
PagerDuty — https://www.pagerduty.com/
Alexandra Episode — https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/
Turing — https://turing.io/
Weedmaps — https://weedmaps.com/
Nav Inc. — https://www.nav.com/
ElixirStatus — https://elixirstatus.com/
Divvy — https://getdivvy.com/
Matt Mills — https://github.com/photomattmills
Factorio — https://factorio.com/
Dyson Sphere Program — https://store.steampowered.com/app/1366540/DysonSphereProgram/ Special Guests: Anna Neyzberg, René Föhring, and Sean Lewis.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Season 5 ends with a bang as we welcome back Sean Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on getting their companies and teams to adopt Elixir. We open our conversation with each guest sharing their first experiences with Elixir. After chatting about the changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits and how they’ve persuaded companies to make the Elixir leap. From zero downtime deployment to arguing for Elixir’s ability to solve immediate problems, we touch on the most convincing reasons for stakeholders to adopt Elixir. Following this, we unpack common Elixir criticisms before looking at the importance of hiring developers for their aptitude as well as for their skill set. Later, we discuss what we most appreciate about Elixir, with each guest sharing a story from producing an Elixir app. We round off an insightful episode by talking about Elixir accessibility and the top ways to train entry-level programmers. Join us as we wrap up this season for a last deep-dive on adopting Elixir. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We introduce today’s panel, featuring Sean Lewis, Anna Neyzberg, and René Föhring.</li>
<li>Hear how each guest discovered Elixir and what they’ve seen change in the ecosystem.</li>
<li>Exploring our guests&#39; first Elixir projects. </li>
<li>The intersections between Elixir and cryptocurrency.</li>
<li>How to persuade company stakeholders to adopt Elixir. </li>
<li>Why choosing a language for scalability often isn’t as important as its immediate benefits.</li>
<li>Unpacking common criticisms of Elixir adoption.</li>
<li>How a culture of learning can push your company in the right direction.</li>
<li>Anecdotes on getting companies to adopt Elixir.</li>
<li>We touch on the benefits of using Elixir. </li>
<li>Each guest reflects on their experiences producing and maintaining Elixir apps. </li>
<li>How our guests are currently using Elixir.</li>
<li>Using Credo to train new Elixir developers. </li>
<li>Advice on making Elixir accessible to entry-level coders.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Elixir Wizards Conference — <a href="https://smartlogic.io/about/community/elixir-wizards-conference/" rel="nofollow">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>
Anna Neyzberg on LinkedIn — <a href="https://www.linkedin.com/in/anna-neyzberg-93545316/" rel="nofollow">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>
Anna Neyzberg on Twitter — <a href="https://twitter.com/ANeyzb" rel="nofollow">https://twitter.com/ANeyzb</a><br>
Sean Lewis on LinkedIn— <a href="https://www.linkedin.com/in/sean-lewis-40375077/" rel="nofollow">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>
René Föhring on Twitter — <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
René Föhring — <a href="https://rrrene.org/" rel="nofollow">https://rrrene.org/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Carbon Five — <a href="https://www.carbonfive.com/" rel="nofollow">https://www.carbonfive.com/</a><br>
Genesis Block — <a href="https://genesisblock.com/" rel="nofollow">https://genesisblock.com/</a><br>
Genesis Block Jobs — <a href="https://genesisblock.com/jobs" rel="nofollow">https://genesisblock.com/jobs</a><br>
Credo on GitHub — <a href="https://github.com/rrrene/credo/" rel="nofollow">https://github.com/rrrene/credo/</a><br>
ElixirConf 2018 — <a href="https://elixirconf.com/2018" rel="nofollow">https://elixirconf.com/2018</a><br>
Ethereumex — <a href="https://hex.pm/packages/ethereumex" rel="nofollow">https://hex.pm/packages/ethereumex</a><br>
Mana — <a href="https://github.com/mana-ethereum/mana" rel="nofollow">https://github.com/mana-ethereum/mana</a><br>
Robinhood — <a href="https://robinhood.com/us/en/" rel="nofollow">https://robinhood.com/us/en/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
PagerDuty — <a href="https://www.pagerduty.com/" rel="nofollow">https://www.pagerduty.com/</a><br>
Alexandra Episode — <a href="https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Nav Inc. — <a href="https://www.nav.com/" rel="nofollow">https://www.nav.com/</a><br>
ElixirStatus — <a href="https://elixirstatus.com/" rel="nofollow">https://elixirstatus.com/</a><br>
Divvy — <a href="https://getdivvy.com/" rel="nofollow">https://getdivvy.com/</a><br>
Matt Mills — <a href="https://github.com/photomattmills" rel="nofollow">https://github.com/photomattmills</a><br>
Factorio — <a href="https://factorio.com/" rel="nofollow">https://factorio.com/</a><br>
Dyson Sphere Program — <a href="https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/" rel="nofollow">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Season 5 ends with a bang as we welcome back Sean Lewis, Anna Neyzber, and René Föhring onto the show to share their journey on getting their companies and teams to adopt Elixir. We open our conversation with each guest sharing their first experiences with Elixir. After chatting about the changes that they’ve seen in the Elixir ecosystem, we explore Elixir’s benefits and how they’ve persuaded companies to make the Elixir leap. From zero downtime deployment to arguing for Elixir’s ability to solve immediate problems, we touch on the most convincing reasons for stakeholders to adopt Elixir. Following this, we unpack common Elixir criticisms before looking at the importance of hiring developers for their aptitude as well as for their skill set. Later, we discuss what we most appreciate about Elixir, with each guest sharing a story from producing an Elixir app. We round off an insightful episode by talking about Elixir accessibility and the top ways to train entry-level programmers. Join us as we wrap up this season for a last deep-dive on adopting Elixir. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We introduce today’s panel, featuring Sean Lewis, Anna Neyzberg, and René Föhring.</li>
<li>Hear how each guest discovered Elixir and what they’ve seen change in the ecosystem.</li>
<li>Exploring our guests&#39; first Elixir projects. </li>
<li>The intersections between Elixir and cryptocurrency.</li>
<li>How to persuade company stakeholders to adopt Elixir. </li>
<li>Why choosing a language for scalability often isn’t as important as its immediate benefits.</li>
<li>Unpacking common criticisms of Elixir adoption.</li>
<li>How a culture of learning can push your company in the right direction.</li>
<li>Anecdotes on getting companies to adopt Elixir.</li>
<li>We touch on the benefits of using Elixir. </li>
<li>Each guest reflects on their experiences producing and maintaining Elixir apps. </li>
<li>How our guests are currently using Elixir.</li>
<li>Using Credo to train new Elixir developers. </li>
<li>Advice on making Elixir accessible to entry-level coders.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Elixir Wizards Conference — <a href="https://smartlogic.io/about/community/elixir-wizards-conference/" rel="nofollow">https://smartlogic.io/about/community/elixir-wizards-conference/</a><br>
Anna Neyzberg on LinkedIn — <a href="https://www.linkedin.com/in/anna-neyzberg-93545316/" rel="nofollow">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>
Anna Neyzberg on Twitter — <a href="https://twitter.com/ANeyzb" rel="nofollow">https://twitter.com/ANeyzb</a><br>
Sean Lewis on LinkedIn— <a href="https://www.linkedin.com/in/sean-lewis-40375077/" rel="nofollow">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>
René Föhring on Twitter — <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
René Föhring — <a href="https://rrrene.org/" rel="nofollow">https://rrrene.org/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Carbon Five — <a href="https://www.carbonfive.com/" rel="nofollow">https://www.carbonfive.com/</a><br>
Genesis Block — <a href="https://genesisblock.com/" rel="nofollow">https://genesisblock.com/</a><br>
Genesis Block Jobs — <a href="https://genesisblock.com/jobs" rel="nofollow">https://genesisblock.com/jobs</a><br>
Credo on GitHub — <a href="https://github.com/rrrene/credo/" rel="nofollow">https://github.com/rrrene/credo/</a><br>
ElixirConf 2018 — <a href="https://elixirconf.com/2018" rel="nofollow">https://elixirconf.com/2018</a><br>
Ethereumex — <a href="https://hex.pm/packages/ethereumex" rel="nofollow">https://hex.pm/packages/ethereumex</a><br>
Mana — <a href="https://github.com/mana-ethereum/mana" rel="nofollow">https://github.com/mana-ethereum/mana</a><br>
Robinhood — <a href="https://robinhood.com/us/en/" rel="nofollow">https://robinhood.com/us/en/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
PagerDuty — <a href="https://www.pagerduty.com/" rel="nofollow">https://www.pagerduty.com/</a><br>
Alexandra Episode — <a href="https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres/</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Nav Inc. — <a href="https://www.nav.com/" rel="nofollow">https://www.nav.com/</a><br>
ElixirStatus — <a href="https://elixirstatus.com/" rel="nofollow">https://elixirstatus.com/</a><br>
Divvy — <a href="https://getdivvy.com/" rel="nofollow">https://getdivvy.com/</a><br>
Matt Mills — <a href="https://github.com/photomattmills" rel="nofollow">https://github.com/photomattmills</a><br>
Factorio — <a href="https://factorio.com/" rel="nofollow">https://factorio.com/</a><br>
Dyson Sphere Program — <a href="https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/" rel="nofollow">https://store.steampowered.com/app/1366540/Dyson_Sphere_Program/</a></p><p>Special Guests: Anna Neyzberg, René Föhring, and Sean Lewis.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jenn Gamble on Data Science, Machine Learning, and Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e16-gamble</link>
      <guid isPermaLink="false">2bb38486-078c-44b5-a40c-b2c71a50d210</guid>
      <pubDate>Thu, 18 Mar 2021 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2bb38486-078c-44b5-a40c-b2c71a50d210.mp3" length="45782601" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>The fields of data science and machine learning are moving ever faster.  Today’s guest, Jenn Gamble, dives into these rich and often complex topics, and she helps us boil them down into palatable nuggets of knowledge.</itunes:subtitle>
      <itunes:duration>47:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2bb38486-078c-44b5-a40c-b2c71a50d210/cover.jpg" />
      <description>The fields of data science and machine learning are moving ever faster. Jenn Gamble has her finger on the pulse and has become an industry expert with a wealth of experience to her name. As today’s guest, she dives into these rich and often complex topics, and she helps us boil them down into palatable nuggets of knowledge. We start off by asking Jenn about her current role at Very, and she tells us about the nature of her team and the things they’re able to achieve. She touches on what the language markups look like for a data science team, before moving onto her experiences in machine learning and data science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s in data science, and why you can be well enough equipped in other senses to become proficient in the area. Later on, she reveals the differences between Elixir models and data science models. Following these detailed explanations, she furnishes listener’s minds with informative comments on relating the foundations of machine learning to IoT, using priori knowledge to add nuance to your machine learning, and how she envisions the future of data science. Join us today and be sure to get all this, and much more!
Key Points From This Episode:
Introducing today’s guest, Jenn Gamble.
Jenn tells us about Very, an IoT engineering firm.
Hear about the data science team at Very.
We learn more on what the language markup looks like for a data science team.
Jenn’s experience in learning machine learning and data science.
Hear her five-year plan while doing her masters.
We ask if it’s necessary to have a master’s degree to be well-equipped in data science.
The difference between an Elixir model and a data science model.
Jenn elaborates on weights and intuitive algorithms. 
Dealing with N-dimensional matrices.
Relating the foundations of machine learning to IoT.
Ways to start building up an intuition around what the most fundamental abstractions are.
Using priori knowledge to add nuance to your machine learning.
How Jenn envisions the future of data science.
Hear about tensors and vectors.
Jenn tells us about her keynote experience at ElixirConf 2020.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Discord — https://smr.tl/wizards-discord
Elixir Wizards Email — podcast@smartlogic.io
Jenn Gamble on Twitter – https://twitter.com/jennpgamble
Jenn Gamble on LinkedIn – https://www.linkedin.com/in/jenn-gamble/
ElixirConf 2020 - Keynote - Jenn Gamble – https://www.youtube.com/watch?v=btIvtN9wsI&amp;abchannel=ElixirConf
IoT – https://www.verypossible.com/careers
Very – https://jobs.lever.co/verypossible
MathWorks – https://www.mathworks.com/products/matlab.html
Cassie Kozykrov – https://kozyrkov.medium.com/
Linear regression – http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm
Pythagorean theorem – https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem
Quadratic equation – https://www.mathsisfun.com/algebra/quadratic-equation.html
A priori and a posteriori – https://iep.utm.edu/apriori/
Tensor – https://mathworld.wolfram.com/Tensor.html
Vector (mathematics and physics) – https://mathinsight.org/vector_introduction
Coursera – https://www.coursera.org/learn/ai-for-everyone Special Guest: Jenn Gamble.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>The fields of data science and machine learning are moving ever faster. Jenn Gamble has her finger on the pulse and has become an industry expert with a wealth of experience to her name. As today’s guest, she dives into these rich and often complex topics, and she helps us boil them down into palatable nuggets of knowledge. We start off by asking Jenn about her current role at Very, and she tells us about the nature of her team and the things they’re able to achieve. She touches on what the language markups look like for a data science team, before moving onto her experiences in machine learning and data science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s in data science, and why you can be well enough equipped in other senses to become proficient in the area. Later on, she reveals the differences between Elixir models and data science models. Following these detailed explanations, she furnishes listener’s minds with informative comments on relating the foundations of machine learning to IoT, using priori knowledge to add nuance to your machine learning, and how she envisions the future of data science. Join us today and be sure to get all this, and much more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest, Jenn Gamble.</li>
<li>Jenn tells us about Very, an IoT engineering firm.</li>
<li>Hear about the data science team at Very.</li>
<li>We learn more on what the language markup looks like for a data science team.</li>
<li>Jenn’s experience in learning machine learning and data science.</li>
<li>Hear her five-year plan while doing her masters.</li>
<li>We ask if it’s necessary to have a master’s degree to be well-equipped in data science.</li>
<li>The difference between an Elixir model and a data science model.</li>
<li>Jenn elaborates on weights and intuitive algorithms. </li>
<li>Dealing with N-dimensional matrices.</li>
<li>Relating the foundations of machine learning to IoT.</li>
<li>Ways to start building up an intuition around what the most fundamental abstractions are.</li>
<li>Using priori knowledge to add nuance to your machine learning.</li>
<li>How Jenn envisions the future of data science.</li>
<li>Hear about tensors and vectors.</li>
<li>Jenn tells us about her keynote experience at ElixirConf 2020.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Jenn Gamble on Twitter – <a href="https://twitter.com/jennpgamble" rel="nofollow">https://twitter.com/jennpgamble</a><br>
Jenn Gamble on LinkedIn – <a href="https://www.linkedin.com/in/jenn-gamble/" rel="nofollow">https://www.linkedin.com/in/jenn-gamble/</a><br>
ElixirConf 2020 - Keynote - Jenn Gamble – <a href="https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf" rel="nofollow">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>
IoT – <a href="https://www.verypossible.com/careers" rel="nofollow">https://www.verypossible.com/careers</a><br>
Very – <a href="https://jobs.lever.co/verypossible" rel="nofollow">https://jobs.lever.co/verypossible</a><br>
MathWorks – <a href="https://www.mathworks.com/products/matlab.html" rel="nofollow">https://www.mathworks.com/products/matlab.html</a><br>
Cassie Kozykrov – <a href="https://kozyrkov.medium.com/" rel="nofollow">https://kozyrkov.medium.com/</a><br>
Linear regression – <a href="http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm" rel="nofollow">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>
Pythagorean theorem – <a href="https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem" rel="nofollow">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>
Quadratic equation – <a href="https://www.mathsisfun.com/algebra/quadratic-equation.html" rel="nofollow">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>
A priori and a posteriori – <a href="https://iep.utm.edu/apriori/" rel="nofollow">https://iep.utm.edu/apriori/</a><br>
Tensor – <a href="https://mathworld.wolfram.com/Tensor.html" rel="nofollow">https://mathworld.wolfram.com/Tensor.html</a><br>
Vector (mathematics and physics) – <a href="https://mathinsight.org/vector_introduction" rel="nofollow">https://mathinsight.org/vector_introduction</a><br>
Coursera – <a href="https://www.coursera.org/learn/ai-for-everyone" rel="nofollow">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special Guest: Jenn Gamble.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>The fields of data science and machine learning are moving ever faster. Jenn Gamble has her finger on the pulse and has become an industry expert with a wealth of experience to her name. As today’s guest, she dives into these rich and often complex topics, and she helps us boil them down into palatable nuggets of knowledge. We start off by asking Jenn about her current role at Very, and she tells us about the nature of her team and the things they’re able to achieve. She touches on what the language markups look like for a data science team, before moving onto her experiences in machine learning and data science. Delving deeper, Jenn tells us why it is not a necessity to have a master’s in data science, and why you can be well enough equipped in other senses to become proficient in the area. Later on, she reveals the differences between Elixir models and data science models. Following these detailed explanations, she furnishes listener’s minds with informative comments on relating the foundations of machine learning to IoT, using priori knowledge to add nuance to your machine learning, and how she envisions the future of data science. Join us today and be sure to get all this, and much more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest, Jenn Gamble.</li>
<li>Jenn tells us about Very, an IoT engineering firm.</li>
<li>Hear about the data science team at Very.</li>
<li>We learn more on what the language markup looks like for a data science team.</li>
<li>Jenn’s experience in learning machine learning and data science.</li>
<li>Hear her five-year plan while doing her masters.</li>
<li>We ask if it’s necessary to have a master’s degree to be well-equipped in data science.</li>
<li>The difference between an Elixir model and a data science model.</li>
<li>Jenn elaborates on weights and intuitive algorithms. </li>
<li>Dealing with N-dimensional matrices.</li>
<li>Relating the foundations of machine learning to IoT.</li>
<li>Ways to start building up an intuition around what the most fundamental abstractions are.</li>
<li>Using priori knowledge to add nuance to your machine learning.</li>
<li>How Jenn envisions the future of data science.</li>
<li>Hear about tensors and vectors.</li>
<li>Jenn tells us about her keynote experience at ElixirConf 2020.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Jenn Gamble on Twitter – <a href="https://twitter.com/jennpgamble" rel="nofollow">https://twitter.com/jennpgamble</a><br>
Jenn Gamble on LinkedIn – <a href="https://www.linkedin.com/in/jenn-gamble/" rel="nofollow">https://www.linkedin.com/in/jenn-gamble/</a><br>
ElixirConf 2020 - Keynote - Jenn Gamble – <a href="https://www.youtube.com/watch?v=btIvtN9ws_I&ab_channel=ElixirConf" rel="nofollow">https://www.youtube.com/watch?v=btIvtN9ws_I&amp;ab_channel=ElixirConf</a><br>
IoT – <a href="https://www.verypossible.com/careers" rel="nofollow">https://www.verypossible.com/careers</a><br>
Very – <a href="https://jobs.lever.co/verypossible" rel="nofollow">https://jobs.lever.co/verypossible</a><br>
MathWorks – <a href="https://www.mathworks.com/products/matlab.html" rel="nofollow">https://www.mathworks.com/products/matlab.html</a><br>
Cassie Kozykrov – <a href="https://kozyrkov.medium.com/" rel="nofollow">https://kozyrkov.medium.com/</a><br>
Linear regression – <a href="http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm" rel="nofollow">http://www.stat.yale.edu/Courses/1997-98/101/linreg.htm</a><br>
Pythagorean theorem – <a href="https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem" rel="nofollow">https://www.mathplanet.com/education/pre-algebra/right-triangles-and-algebra/the-pythagorean-theorem</a><br>
Quadratic equation – <a href="https://www.mathsisfun.com/algebra/quadratic-equation.html" rel="nofollow">https://www.mathsisfun.com/algebra/quadratic-equation.html</a><br>
A priori and a posteriori – <a href="https://iep.utm.edu/apriori/" rel="nofollow">https://iep.utm.edu/apriori/</a><br>
Tensor – <a href="https://mathworld.wolfram.com/Tensor.html" rel="nofollow">https://mathworld.wolfram.com/Tensor.html</a><br>
Vector (mathematics and physics) – <a href="https://mathinsight.org/vector_introduction" rel="nofollow">https://mathinsight.org/vector_introduction</a><br>
Coursera – <a href="https://www.coursera.org/learn/ai-for-everyone" rel="nofollow">https://www.coursera.org/learn/ai-for-everyone</a></p><p>Special Guest: Jenn Gamble.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>John Mertens on Adopting Elixir at Change.org</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e15-mertens</link>
      <guid isPermaLink="false">d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f</guid>
      <pubDate>Thu, 11 Mar 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f.mp3" length="41765494" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with Change.org Director of Engineering John Mertens about how his company adopted Elixir to create a business-critical app that handles over a billion emails per month.</itunes:subtitle>
      <itunes:duration>43:27</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d761c5dd-b1bf-4062-a4e0-fe20d7c85e7f/cover.jpg" />
      <description>Many organizations take an incremental approach when adopting Elixir, preferring to pick up its nuances by using it to work on non-essential projects. But not Change.org. Today we speak with Change.org Director of Engineering John Mertens about how his company adopted Elixir to create a business-critical app that handles over a billion emails per month. From building webpages on GeoCities to working as an IT intern at an Iowan prison, we open our conversation by exploring John’s coding background. After chatting about his first Elixir project, we dive into Change.org’s process in adopting Elixir. As John shares his insights into successfully integrating Elixir into your tech stack, he highlights the benefits provided by the language. Later, John discusses the advantages of event-driven architecture and how this structure makes it easier for teams to access and analyze data, while also making it easier to add product features. We wrap up this episode with John highlighting his user-centered approach to coding. Join us to hear John’s lessons on making the leap and adopting Elixir in large organizations.
Key Points From This Episode:
John shares details about his role at Change.org.
The story behind John and Change’s Elixir adoption. 
Hear about John’s coding journey.
How John made an Elixir app based on spotting San Francisco tram carriages. 
Insights into the massive project that Change built using Elixir.
Why Elixir is taking over Change’s back-end tech stack.
Using Elixir to build reliable event-based architecture.
Exploring event-driven architecture from the perspective of Change’s system.
John makes a compelling case for event-driven architecture. 
How Change hires for Elixir roles.
Change’s process in training their staff to code in Elixir.
John talks about his user-centred approach to design.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Discord — https://smr.tl/wizards-discord
Elixir Wizards Email — podcast@smartlogic.io
John Mertens — https://www.mertonium.com/about
John Mertens on Twitter — https://twitter.com/mertonium
John Mertens on GitHub — https://github.com/mertonium
Change.org — https://www.change.org/
Change.org Careers — https://careers.change.org/
José Valim — https://twitter.com/josevalim
GenStage and Flow - José Valim (Lambda Days 2017) — https://www.youtube.com/watch?v=XPlXNUXmcgE
Dashbit — https://dashbit.co/
Hacker News — https://thehackernews.com/
Paul Graham — https://twitter.com/paulg/
Nim — https://nim-lang.org/
Pony — https://www.ponylang.io/
Grax.io — https://www.grax.com/
Logo — https://el.media.mit.edu/logo-foundation/whatislogo/logo_programming.html
Nerves — https://www.nerves-project.org/
Flow — https://hexdocs.pm/flow/Flow.html
ElixirConf EU — https://www.elixirconf.eu/
Martin Fowler — https://martinfowler.com/
‘The Log: What every software engineer should know about real-time data's unifying abstraction’ — https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying
Salesforce Marketing Cloud — https://www.salesforce.com/eu/products/marketing-cloud/overview/
‘Delivering social change with Elixir at Change.org’  — https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/
Code for America — https://www.codeforamerica.org/ Special Guest: John Mertens.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Many organizations take an incremental approach when adopting Elixir, preferring to pick up its nuances by using it to work on non-essential projects. But not Change.org. Today we speak with Change.org Director of Engineering John Mertens about how his company adopted Elixir to create a business-critical app that handles over a billion emails per month. From building webpages on GeoCities to working as an IT intern at an Iowan prison, we open our conversation by exploring John’s coding background. After chatting about his first Elixir project, we dive into Change.org’s process in adopting Elixir. As John shares his insights into successfully integrating Elixir into your tech stack, he highlights the benefits provided by the language. Later, John discusses the advantages of event-driven architecture and how this structure makes it easier for teams to access and analyze data, while also making it easier to add product features. We wrap up this episode with John highlighting his user-centered approach to coding. Join us to hear John’s lessons on making the leap and adopting Elixir in large organizations.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>John shares details about his role at Change.org.</li>
<li>The story behind John and Change’s Elixir adoption. </li>
<li>Hear about John’s coding journey.</li>
<li>How John made an Elixir app based on spotting San Francisco tram carriages. </li>
<li>Insights into the massive project that Change built using Elixir.</li>
<li>Why Elixir is taking over Change’s back-end tech stack.</li>
<li>Using Elixir to build reliable event-based architecture.</li>
<li>Exploring event-driven architecture from the perspective of Change’s system.</li>
<li>John makes a compelling case for event-driven architecture. </li>
<li>How Change hires for Elixir roles.</li>
<li>Change’s process in training their staff to code in Elixir.</li>
<li>John talks about his user-centred approach to design.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
John Mertens — <a href="https://www.mertonium.com/about" rel="nofollow">https://www.mertonium.com/about</a><br>
John Mertens on Twitter — <a href="https://twitter.com/mertonium" rel="nofollow">https://twitter.com/mertonium</a><br>
John Mertens on GitHub — <a href="https://github.com/mertonium" rel="nofollow">https://github.com/mertonium</a><br>
Change.org — <a href="https://www.change.org/" rel="nofollow">https://www.change.org/</a><br>
Change.org Careers — <a href="https://careers.change.org/" rel="nofollow">https://careers.change.org/</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
GenStage and Flow - José Valim (Lambda Days 2017) — <a href="https://www.youtube.com/watch?v=XPlXNUXmcgE" rel="nofollow">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>
Dashbit — <a href="https://dashbit.co/" rel="nofollow">https://dashbit.co/</a><br>
Hacker News — <a href="https://thehackernews.com/" rel="nofollow">https://thehackernews.com/</a><br>
Paul Graham — <a href="https://twitter.com/paulg/" rel="nofollow">https://twitter.com/paulg/</a><br>
Nim — <a href="https://nim-lang.org/" rel="nofollow">https://nim-lang.org/</a><br>
Pony — <a href="https://www.ponylang.io/" rel="nofollow">https://www.ponylang.io/</a><br>
Grax.io — <a href="https://www.grax.com/" rel="nofollow">https://www.grax.com/</a><br>
Logo — <a href="https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html" rel="nofollow">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>
Nerves — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Flow — <a href="https://hexdocs.pm/flow/Flow.html" rel="nofollow">https://hexdocs.pm/flow/Flow.html</a><br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a><br>
Martin Fowler — <a href="https://martinfowler.com/" rel="nofollow">https://martinfowler.com/</a><br>
‘The Log: What every software engineer should know about real-time data&#39;s unifying abstraction’ — <a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" rel="nofollow">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>
Salesforce Marketing Cloud — <a href="https://www.salesforce.com/eu/products/marketing-cloud/overview/" rel="nofollow">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>
‘Delivering social change with Elixir at Change.org’  — <a href="https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/" rel="nofollow">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>
Code for America — <a href="https://www.codeforamerica.org/" rel="nofollow">https://www.codeforamerica.org/</a></p><p>Special Guest: John Mertens.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Many organizations take an incremental approach when adopting Elixir, preferring to pick up its nuances by using it to work on non-essential projects. But not Change.org. Today we speak with Change.org Director of Engineering John Mertens about how his company adopted Elixir to create a business-critical app that handles over a billion emails per month. From building webpages on GeoCities to working as an IT intern at an Iowan prison, we open our conversation by exploring John’s coding background. After chatting about his first Elixir project, we dive into Change.org’s process in adopting Elixir. As John shares his insights into successfully integrating Elixir into your tech stack, he highlights the benefits provided by the language. Later, John discusses the advantages of event-driven architecture and how this structure makes it easier for teams to access and analyze data, while also making it easier to add product features. We wrap up this episode with John highlighting his user-centered approach to coding. Join us to hear John’s lessons on making the leap and adopting Elixir in large organizations.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>John shares details about his role at Change.org.</li>
<li>The story behind John and Change’s Elixir adoption. </li>
<li>Hear about John’s coding journey.</li>
<li>How John made an Elixir app based on spotting San Francisco tram carriages. </li>
<li>Insights into the massive project that Change built using Elixir.</li>
<li>Why Elixir is taking over Change’s back-end tech stack.</li>
<li>Using Elixir to build reliable event-based architecture.</li>
<li>Exploring event-driven architecture from the perspective of Change’s system.</li>
<li>John makes a compelling case for event-driven architecture. </li>
<li>How Change hires for Elixir roles.</li>
<li>Change’s process in training their staff to code in Elixir.</li>
<li>John talks about his user-centred approach to design.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
John Mertens — <a href="https://www.mertonium.com/about" rel="nofollow">https://www.mertonium.com/about</a><br>
John Mertens on Twitter — <a href="https://twitter.com/mertonium" rel="nofollow">https://twitter.com/mertonium</a><br>
John Mertens on GitHub — <a href="https://github.com/mertonium" rel="nofollow">https://github.com/mertonium</a><br>
Change.org — <a href="https://www.change.org/" rel="nofollow">https://www.change.org/</a><br>
Change.org Careers — <a href="https://careers.change.org/" rel="nofollow">https://careers.change.org/</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
GenStage and Flow - José Valim (Lambda Days 2017) — <a href="https://www.youtube.com/watch?v=XPlXNUXmcgE" rel="nofollow">https://www.youtube.com/watch?v=XPlXNUXmcgE</a><br>
Dashbit — <a href="https://dashbit.co/" rel="nofollow">https://dashbit.co/</a><br>
Hacker News — <a href="https://thehackernews.com/" rel="nofollow">https://thehackernews.com/</a><br>
Paul Graham — <a href="https://twitter.com/paulg/" rel="nofollow">https://twitter.com/paulg/</a><br>
Nim — <a href="https://nim-lang.org/" rel="nofollow">https://nim-lang.org/</a><br>
Pony — <a href="https://www.ponylang.io/" rel="nofollow">https://www.ponylang.io/</a><br>
Grax.io — <a href="https://www.grax.com/" rel="nofollow">https://www.grax.com/</a><br>
Logo — <a href="https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html" rel="nofollow">https://el.media.mit.edu/logo-foundation/what_is_logo/logo_programming.html</a><br>
Nerves — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Flow — <a href="https://hexdocs.pm/flow/Flow.html" rel="nofollow">https://hexdocs.pm/flow/Flow.html</a><br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a><br>
Martin Fowler — <a href="https://martinfowler.com/" rel="nofollow">https://martinfowler.com/</a><br>
‘The Log: What every software engineer should know about real-time data&#39;s unifying abstraction’ — <a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" rel="nofollow">https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying</a><br>
Salesforce Marketing Cloud — <a href="https://www.salesforce.com/eu/products/marketing-cloud/overview/" rel="nofollow">https://www.salesforce.com/eu/products/marketing-cloud/overview/</a><br>
‘Delivering social change with Elixir at Change.org’  — <a href="https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/" rel="nofollow">https://elixir-lang.org/blog/2020/10/27/delivering-social-change-with-elixir-at-change.org/</a><br>
Code for America — <a href="https://www.codeforamerica.org/" rel="nofollow">https://www.codeforamerica.org/</a></p><p>Special Guest: John Mertens.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sophie DeBenedetto on Programming Phoenix LiveView</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e14-debenedetto</link>
      <guid isPermaLink="false">9470edd5-3447-4d40-9f5d-aaba34126ae3</guid>
      <pubDate>Thu, 04 Mar 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9470edd5-3447-4d40-9f5d-aaba34126ae3.mp3" length="46750427" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>As users increasingly demand interactivity from their web experiences, Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications without a loss to reliability. Today we welcome back Sophie DeBenedetto, GitHub engineer, to talk about her upcoming book, Programming Phoenix LiveView.</itunes:subtitle>
      <itunes:duration>48:20</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9470edd5-3447-4d40-9f5d-aaba34126ae3/cover.jpg" />
      <description>As users increasingly demand interactivity from their web experiences, Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications without a loss to reliability. Today we welcome back an old friend of the show and GitHub engineer Sophie DeBenedetto to talk about her upcoming book, Programming Phoenix LiveView. We open our conversation with Sophie by hearing about her work at GitHub, as well as what we can expect from the Code BEAM V conference. As she doesn’t always get to use Elixir at her job, Sophie then discusses how coders can sharpen their Elixir skills when not at work. After exploring how companies can begin adopting Elixir through event-driven design, we dive into Sophie’s book. She unpacks the value of LiveView when building efficient web applications before touching on how her book can best help people to learn LiveView. We ask Sophie how intertwined the future of Elixir is to the success of LiveView and how this might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir adoption while also making Elixir easier to learn. We wrap up our discussion by chatting about the challenges of technical writing and Sophie’s experience working with the wonderful Pragmatic Programmers publishing house. Tune in to hear more insights into programming LiveView; if you believe the hype, it’s “one of the most important new frameworks of our generation.” 
Key Points From This Episode:
We catch up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.
Sophie shares her feelings on coding in Go.
How Sophie engages with Elixir when it’s not a key part of her day job.
What Flatiron School did to work towards Elixir adoption.
Exploring the concept of event-driven design.
Insights into the eventing system used at GitHub.
Sophie talks about her experience as an engineering manager. 
Why Sophie transitioned from being a manager to being an individual contributor. 
How work-from-home has impacted meeting expectations.
Hear the elevator pitch for Sophie’s upcoming book.
Thoughts on how beginner-friendly Elixir is as a language.
Whether Phoenix LiveView is the future of Elixir. 
How the attention placed on LiveView limits access to Phoenix resources and tutorials.
We ask Sophie if LiveView will make it easier or more difficult to learn Elixir. 
Advice on writing technical books and the writing support offered by Pragmatic Programmers.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Discord — https://smr.tl/wizards-discord
Elixir Wizards Email — podcast@smartlogic.io
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
Sophie DeBenedetto on LinkedIn — https://www.linkedin.com/in/sophiedebenedetto/
Sophie DeBenedetto on Twitter — https://twitter.com/smdebenedetto
Programming Phoenix LiveView — https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/
Beam Radio — https://www.beamrad.io/
Code BEAM V — https://codesync.global/conferences/code-beam-sto/
Bruce Tate — https://twitter.com/redrapids
José Valim — https://twitter.com/josevalim
Nx — https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available
Alex Koutmos — https://twitter.com/akoutmos
EMPEX — https://empex.co/nyc.html
Flatiron School — https://flatironschool.com/
‘What is the difference between Event Driven and Event Sourcing?’ — https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing
Chris Keithley — https://twitter.com/chriskeathley
GitHub — https://github.com/
Steven Nuñez — https://twitter.com/StevenNunez
‘Shipping Greenfield Elixir in a Legacy World’ — https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world
Ruby on Rails Tutorial: Learn Web Development with Rails — https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK
Toran Billups — https://twitter.com/toranb
The Pragmatic Programmers — https://pragprog.com/
Chris McCord — https://twitter.com/chris_mccord/
Dave Thomas — https://twitter.com/pragdave/
Andy Hunt — https://twitter.com/PragmaticAndy/
Zenni — https://www.zennioptical.com/
Warby Parker — https://www.warbyparker.com/ Special Guest: Sophie DeBenedetto.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>As users increasingly demand interactivity from their web experiences, Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications without a loss to reliability. Today we welcome back an old friend of the show and GitHub engineer Sophie DeBenedetto to talk about her upcoming book, Programming Phoenix LiveView. We open our conversation with Sophie by hearing about her work at GitHub, as well as what we can expect from the Code BEAM V conference. As she doesn’t always get to use Elixir at her job, Sophie then discusses how coders can sharpen their Elixir skills when not at work. After exploring how companies can begin adopting Elixir through event-driven design, we dive into Sophie’s book. She unpacks the value of LiveView when building efficient web applications before touching on how her book can best help people to learn LiveView. We ask Sophie how intertwined the future of Elixir is to the success of LiveView and how this might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir adoption while also making Elixir easier to learn. We wrap up our discussion by chatting about the challenges of technical writing and Sophie’s experience working with the wonderful Pragmatic Programmers publishing house. Tune in to hear more insights into programming LiveView; if you believe the hype, it’s “one of the most important new frameworks of our generation.” </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We catch up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.</li>
<li>Sophie shares her feelings on coding in Go.</li>
<li>How Sophie engages with Elixir when it’s not a key part of her day job.</li>
<li>What Flatiron School did to work towards Elixir adoption.</li>
<li>Exploring the concept of event-driven design.</li>
<li>Insights into the eventing system used at GitHub.</li>
<li>Sophie talks about her experience as an engineering manager. </li>
<li>Why Sophie transitioned from being a manager to being an individual contributor. </li>
<li>How work-from-home has impacted meeting expectations.</li>
<li>Hear the elevator pitch for Sophie’s upcoming book.</li>
<li>Thoughts on how beginner-friendly Elixir is as a language.</li>
<li>Whether Phoenix LiveView is the future of Elixir. </li>
<li>How the attention placed on LiveView limits access to Phoenix resources and tutorials.</li>
<li>We ask Sophie if LiveView will make it easier or more difficult to learn Elixir. </li>
<li>Advice on writing technical books and the writing support offered by Pragmatic Programmers.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Sophie DeBenedetto on LinkedIn — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Sophie DeBenedetto on Twitter — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Programming Phoenix LiveView — <a href="https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/" rel="nofollow">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>
Beam Radio — <a href="https://www.beamrad.io/" rel="nofollow">https://www.beamrad.io/</a><br>
Code BEAM V — <a href="https://codesync.global/conferences/code-beam-sto/" rel="nofollow">https://codesync.global/conferences/code-beam-sto/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Nx — <a href="https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available" rel="nofollow">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>
Alex Koutmos — <a href="https://twitter.com/akoutmos" rel="nofollow">https://twitter.com/akoutmos</a><br>
EMPEX — <a href="https://empex.co/nyc.html" rel="nofollow">https://empex.co/nyc.html</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
‘What is the difference between Event Driven and Event Sourcing?’ — <a href="https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing" rel="nofollow">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>
Chris Keithley — <a href="https://twitter.com/chriskeathley" rel="nofollow">https://twitter.com/chriskeathley</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Steven Nuñez — <a href="https://twitter.com/_StevenNunez" rel="nofollow">https://twitter.com/_StevenNunez</a><br>
‘Shipping Greenfield Elixir in a Legacy World’ — <a href="https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world" rel="nofollow">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>
Ruby on Rails Tutorial: Learn Web Development with Rails — <a href="https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK" rel="nofollow">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>
Toran Billups — <a href="https://twitter.com/toranb" rel="nofollow">https://twitter.com/toranb</a><br>
The Pragmatic Programmers — <a href="https://pragprog.com/" rel="nofollow">https://pragprog.com/</a><br>
Chris McCord — <a href="https://twitter.com/chris_mccord/" rel="nofollow">https://twitter.com/chris_mccord/</a><br>
Dave Thomas — <a href="https://twitter.com/pragdave/" rel="nofollow">https://twitter.com/pragdave/</a><br>
Andy Hunt — <a href="https://twitter.com/PragmaticAndy/" rel="nofollow">https://twitter.com/PragmaticAndy/</a><br>
Zenni — <a href="https://www.zennioptical.com/" rel="nofollow">https://www.zennioptical.com/</a><br>
Warby Parker — <a href="https://www.warbyparker.com/" rel="nofollow">https://www.warbyparker.com/</a></p><p>Special Guest: Sophie DeBenedetto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>As users increasingly demand interactivity from their web experiences, Phoenix LiveView is becoming the dominant way of writing interactive Elixir applications without a loss to reliability. Today we welcome back an old friend of the show and GitHub engineer Sophie DeBenedetto to talk about her upcoming book, Programming Phoenix LiveView. We open our conversation with Sophie by hearing about her work at GitHub, as well as what we can expect from the Code BEAM V conference. As she doesn’t always get to use Elixir at her job, Sophie then discusses how coders can sharpen their Elixir skills when not at work. After exploring how companies can begin adopting Elixir through event-driven design, we dive into Sophie’s book. She unpacks the value of LiveView when building efficient web applications before touching on how her book can best help people to learn LiveView. We ask Sophie how intertwined the future of Elixir is to the success of LiveView and how this might impact Phoenix. Her answers highlight LiveView’s role in pushing Elixir adoption while also making Elixir easier to learn. We wrap up our discussion by chatting about the challenges of technical writing and Sophie’s experience working with the wonderful Pragmatic Programmers publishing house. Tune in to hear more insights into programming LiveView; if you believe the hype, it’s “one of the most important new frameworks of our generation.” </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We catch up with guest Sophie DeBenedetto and hear about the Code BEAM V conference.</li>
<li>Sophie shares her feelings on coding in Go.</li>
<li>How Sophie engages with Elixir when it’s not a key part of her day job.</li>
<li>What Flatiron School did to work towards Elixir adoption.</li>
<li>Exploring the concept of event-driven design.</li>
<li>Insights into the eventing system used at GitHub.</li>
<li>Sophie talks about her experience as an engineering manager. </li>
<li>Why Sophie transitioned from being a manager to being an individual contributor. </li>
<li>How work-from-home has impacted meeting expectations.</li>
<li>Hear the elevator pitch for Sophie’s upcoming book.</li>
<li>Thoughts on how beginner-friendly Elixir is as a language.</li>
<li>Whether Phoenix LiveView is the future of Elixir. </li>
<li>How the attention placed on LiveView limits access to Phoenix resources and tutorials.</li>
<li>We ask Sophie if LiveView will make it easier or more difficult to learn Elixir. </li>
<li>Advice on writing technical books and the writing support offered by Pragmatic Programmers.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Discord — <a href="https://smr.tl/wizards-discord" rel="nofollow">https://smr.tl/wizards-discord</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Sophie DeBenedetto on LinkedIn — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Sophie DeBenedetto on Twitter — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Programming Phoenix LiveView — <a href="https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/" rel="nofollow">https://www.pragprog.com/titles/liveview/programming-phoenix-liveview/</a><br>
Beam Radio — <a href="https://www.beamrad.io/" rel="nofollow">https://www.beamrad.io/</a><br>
Code BEAM V — <a href="https://codesync.global/conferences/code-beam-sto/" rel="nofollow">https://codesync.global/conferences/code-beam-sto/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Nx — <a href="https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available" rel="nofollow">https://dashbit.co/blog/nx-numerical-elixir-is-now-publicly-available</a><br>
Alex Koutmos — <a href="https://twitter.com/akoutmos" rel="nofollow">https://twitter.com/akoutmos</a><br>
EMPEX — <a href="https://empex.co/nyc.html" rel="nofollow">https://empex.co/nyc.html</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
‘What is the difference between Event Driven and Event Sourcing?’ — <a href="https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing" rel="nofollow">https://softwareengineering.stackexchange.com/questions/385375/what-is-the-difference-between-event-driven-and-event-sourcing</a><br>
Chris Keithley — <a href="https://twitter.com/chriskeathley" rel="nofollow">https://twitter.com/chriskeathley</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Steven Nuñez — <a href="https://twitter.com/_StevenNunez" rel="nofollow">https://twitter.com/_StevenNunez</a><br>
‘Shipping Greenfield Elixir in a Legacy World’ — <a href="https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world" rel="nofollow">https://codesync.global/conferences/code-beam-v-america-2021/training/#145shipping-greenfield-elixir-in-a-legacy-world</a><br>
Ruby on Rails Tutorial: Learn Web Development with Rails — <a href="https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK" rel="nofollow">https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional-ebook/dp/B01N779HKK</a><br>
Toran Billups — <a href="https://twitter.com/toranb" rel="nofollow">https://twitter.com/toranb</a><br>
The Pragmatic Programmers — <a href="https://pragprog.com/" rel="nofollow">https://pragprog.com/</a><br>
Chris McCord — <a href="https://twitter.com/chris_mccord/" rel="nofollow">https://twitter.com/chris_mccord/</a><br>
Dave Thomas — <a href="https://twitter.com/pragdave/" rel="nofollow">https://twitter.com/pragdave/</a><br>
Andy Hunt — <a href="https://twitter.com/PragmaticAndy/" rel="nofollow">https://twitter.com/PragmaticAndy/</a><br>
Zenni — <a href="https://www.zennioptical.com/" rel="nofollow">https://www.zennioptical.com/</a><br>
Warby Parker — <a href="https://www.warbyparker.com/" rel="nofollow">https://www.warbyparker.com/</a></p><p>Special Guest: Sophie DeBenedetto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Shaun Robinson and Toran Billups on Using Elixir to Empower Online Learning</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e13-robinson-billups</link>
      <guid isPermaLink="false">97fc73f8-1e61-447f-953f-99d2580f1476</guid>
      <pubDate>Thu, 25 Feb 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/97fc73f8-1e61-447f-953f-99d2580f1476.mp3" length="42647821" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with Shaun Robinson and Toran Billups about how Legends of Learning helps educators make their classrooms fun, engaging, and productive through their curriculum-based games.</itunes:subtitle>
      <itunes:duration>50:45</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/97fc73f8-1e61-447f-953f-99d2580f1476/cover.jpg" />
      <description>With the prevalence of at-home learning, teachers have to compete for student attention against numerous screen-based activities. Today we speak with engineering lead Shaun Robinson and Elixir developer Toran Billups about how Legends of Learning helps educators make their classrooms fun, engaging, and productive through their curriculum-based games. After chatting about Legends’ mission to empower teachers, we talk with Toran about how he landed a job there. He then shares his insights into securing Elixir jobs, touching on the importance of networking and building a portfolio of Elixir projects. We discuss why Elixir became Legends’ language of choice before exploring their process in adopting Elixir. Reflecting on their early server structure, Shaun explains their process of refactoring from their old code base into an Elixir monolith. Responding to a previous episode, where frustrations were shared about coding in LiveView, Toran talks about its advantages, despite its issues as a new technology. Later, Shaun and Toran dive into what you can do to help your company adopt Elixir. We wrap up another incredible conversation by asking our guests about their favorite Legend of Learning games. Tune in to hear more about Legend of Learning’s Elixir journey and how they’re using it to create dynamic learning environments. 
Key Points From This Episode:
Exploring the mission and work of the Legends of Learning startup.
Shaun and Toran share details about their backgrounds.  
Why building a van home is so similar to building software.  
Hear about Toran’s podcast on the human side of programming.
Shaun talks about the time when he sold his Twitter and GitHub handle.
What Toran did to land his first Elixir job.
Why Legends of Learning decided to adopt Elixir. 
Insights into Legends of Learning’s early server architecture. 
Toran unpacks Legend’s hiring process.
Why Shaun’s engineering team consists of remote workers. 
Toran shares the virtues of coding in LiveView.
What Shaun did to refactor their old code base into an Elixir monolith.
The process that Legends underwent when adopting Elixir.
Advice on finding an Elixir role and adopting Elixir in your company.
Hear about Shaun and Toran’s favorite Legend of Learning games. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Email — podcast@smartlogic.io
Shaun Robinson on LinkedIn — https://www.linkedin.com/in/shaun1010/
Toran Billups on Twitter — https://twitter.com/toranb
Toran Billups on LinkedIn — https://www.linkedin.com/in/toranb/
Legends of Learning — https://www.legendsoflearning.com/
Vadim Polikov — https://www.linkedin.com/in/vadim-polikov/
Developing Fatigue Podcast — https://developingfatigue.fm/
Kris Van Houghton — https://twitter.com/krivaten
Dave Gardner — https://www.linkedin.com/in/davegardner01/
Legends of Learning Careers — https://www.legendsoflearning.com/interested-game-developer/
Legends of Learning API Docs — https://docs.legendsoflearning.com/
Lonestar Elixir — https://lonestarelixir.com/
Elixir Match —https://elixirmatch.com/
Elixir Match on GitHub —  https://github.com/toranb/elixir-match
Chris McCord — http://chrismccord.com/
Grox.io — https://grox.io/
Bruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/
Postgraphile on GitHub — https://github.com/graphile/postgraphile
Martin Fowler — https://martinfowler.com/
The Strangler Application — https://martinfowler.com/bliki/StranglerFigApplication.html
Timescale — https://www.timescale.com/
‘TimescaleDB 2.0 is now Generally Available’ — https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/
Sun, Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/
Magic the Gathering — https://magic.wizards.com/en
Legends of Learning Awakening — https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/
Hour of Code — https://hourofcode.com/
Owl Pro — https://owllabs.com/products/meeting-owl-pro
Correction: In an earlier version of this episode, the host mis-spoke and mis-named the guests' company name in the outro; that error has been corrected as of 2021-02-25 3:52PM ET. Special Guests: Shaun Robinson and Toran Billups.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>With the prevalence of at-home learning, teachers have to compete for student attention against numerous screen-based activities. Today we speak with engineering lead Shaun Robinson and Elixir developer Toran Billups about how Legends of Learning helps educators make their classrooms fun, engaging, and productive through their curriculum-based games. After chatting about Legends’ mission to empower teachers, we talk with Toran about how he landed a job there. He then shares his insights into securing Elixir jobs, touching on the importance of networking and building a portfolio of Elixir projects. We discuss why Elixir became Legends’ language of choice before exploring their process in adopting Elixir. Reflecting on their early server structure, Shaun explains their process of refactoring from their old code base into an Elixir monolith. Responding to a previous episode, where frustrations were shared about coding in LiveView, Toran talks about its advantages, despite its issues as a new technology. Later, Shaun and Toran dive into what you can do to help your company adopt Elixir. We wrap up another incredible conversation by asking our guests about their favorite Legend of Learning games. Tune in to hear more about Legend of Learning’s Elixir journey and how they’re using it to create dynamic learning environments. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Exploring the mission and work of the Legends of Learning startup.</li>
<li>Shaun and Toran share details about their backgrounds.<br></li>
<li>Why building a van home is so similar to building software.<br></li>
<li>Hear about Toran’s podcast on the human side of programming.</li>
<li>Shaun talks about the time when he sold his Twitter and GitHub handle.</li>
<li>What Toran did to land his first Elixir job.</li>
<li>Why Legends of Learning decided to adopt Elixir. </li>
<li>Insights into Legends of Learning’s early server architecture. </li>
<li>Toran unpacks Legend’s hiring process.</li>
<li>Why Shaun’s engineering team consists of remote workers. </li>
<li>Toran shares the virtues of coding in LiveView.</li>
<li>What Shaun did to refactor their old code base into an Elixir monolith.</li>
<li>The process that Legends underwent when adopting Elixir.</li>
<li>Advice on finding an Elixir role and adopting Elixir in your company.</li>
<li>Hear about Shaun and Toran’s favorite Legend of Learning games. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Shaun Robinson on LinkedIn — <a href="https://www.linkedin.com/in/shaun1010/" rel="nofollow">https://www.linkedin.com/in/shaun1010/</a><br>
Toran Billups on Twitter — <a href="https://twitter.com/toranb" rel="nofollow">https://twitter.com/toranb</a><br>
Toran Billups on LinkedIn — <a href="https://www.linkedin.com/in/toranb/" rel="nofollow">https://www.linkedin.com/in/toranb/</a><br>
Legends of Learning — <a href="https://www.legendsoflearning.com/" rel="nofollow">https://www.legendsoflearning.com/</a><br>
Vadim Polikov — <a href="https://www.linkedin.com/in/vadim-polikov/" rel="nofollow">https://www.linkedin.com/in/vadim-polikov/</a><br>
Developing Fatigue Podcast — <a href="https://developingfatigue.fm/" rel="nofollow">https://developingfatigue.fm/</a><br>
Kris Van Houghton — <a href="https://twitter.com/krivaten" rel="nofollow">https://twitter.com/krivaten</a><br>
Dave Gardner — <a href="https://www.linkedin.com/in/davegardner01/" rel="nofollow">https://www.linkedin.com/in/davegardner01/</a><br>
Legends of Learning Careers — <a href="https://www.legendsoflearning.com/interested-game-developer/" rel="nofollow">https://www.legendsoflearning.com/interested-game-developer/</a><br>
Legends of Learning API Docs — <a href="https://docs.legendsoflearning.com/" rel="nofollow">https://docs.legendsoflearning.com/</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Elixir Match —<a href="https://elixirmatch.com/" rel="nofollow">https://elixirmatch.com/</a><br>
Elixir Match on GitHub —  <a href="https://github.com/toranb/elixir-match" rel="nofollow">https://github.com/toranb/elixir-match</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Grox.io — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b/" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>
Postgraphile on GitHub — <a href="https://github.com/graphile/postgraphile" rel="nofollow">https://github.com/graphile/postgraphile</a><br>
Martin Fowler — <a href="https://martinfowler.com/" rel="nofollow">https://martinfowler.com/</a><br>
The Strangler Application — <a href="https://martinfowler.com/bliki/StranglerFigApplication.html" rel="nofollow">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>
Timescale — <a href="https://www.timescale.com/" rel="nofollow">https://www.timescale.com/</a><br>
‘TimescaleDB 2.0 is now Generally Available’ — <a href="https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/" rel="nofollow">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>
Sun, Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href="https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/" rel="nofollow">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>
Magic the Gathering — <a href="https://magic.wizards.com/en" rel="nofollow">https://magic.wizards.com/en</a><br>
Legends of Learning Awakening — <a href="https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/" rel="nofollow">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>
Hour of Code — <a href="https://hourofcode.com/" rel="nofollow">https://hourofcode.com/</a><br>
Owl Pro — <a href="https://owllabs.com/products/meeting-owl-pro" rel="nofollow">https://owllabs.com/products/meeting-owl-pro</a></p>

<p>Correction: In an earlier version of this episode, the host mis-spoke and mis-named the guests&#39; company name in the outro; that error has been corrected as of 2021-02-25 3:52PM ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>With the prevalence of at-home learning, teachers have to compete for student attention against numerous screen-based activities. Today we speak with engineering lead Shaun Robinson and Elixir developer Toran Billups about how Legends of Learning helps educators make their classrooms fun, engaging, and productive through their curriculum-based games. After chatting about Legends’ mission to empower teachers, we talk with Toran about how he landed a job there. He then shares his insights into securing Elixir jobs, touching on the importance of networking and building a portfolio of Elixir projects. We discuss why Elixir became Legends’ language of choice before exploring their process in adopting Elixir. Reflecting on their early server structure, Shaun explains their process of refactoring from their old code base into an Elixir monolith. Responding to a previous episode, where frustrations were shared about coding in LiveView, Toran talks about its advantages, despite its issues as a new technology. Later, Shaun and Toran dive into what you can do to help your company adopt Elixir. We wrap up another incredible conversation by asking our guests about their favorite Legend of Learning games. Tune in to hear more about Legend of Learning’s Elixir journey and how they’re using it to create dynamic learning environments. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Exploring the mission and work of the Legends of Learning startup.</li>
<li>Shaun and Toran share details about their backgrounds.<br></li>
<li>Why building a van home is so similar to building software.<br></li>
<li>Hear about Toran’s podcast on the human side of programming.</li>
<li>Shaun talks about the time when he sold his Twitter and GitHub handle.</li>
<li>What Toran did to land his first Elixir job.</li>
<li>Why Legends of Learning decided to adopt Elixir. </li>
<li>Insights into Legends of Learning’s early server architecture. </li>
<li>Toran unpacks Legend’s hiring process.</li>
<li>Why Shaun’s engineering team consists of remote workers. </li>
<li>Toran shares the virtues of coding in LiveView.</li>
<li>What Shaun did to refactor their old code base into an Elixir monolith.</li>
<li>The process that Legends underwent when adopting Elixir.</li>
<li>Advice on finding an Elixir role and adopting Elixir in your company.</li>
<li>Hear about Shaun and Toran’s favorite Legend of Learning games. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Shaun Robinson on LinkedIn — <a href="https://www.linkedin.com/in/shaun1010/" rel="nofollow">https://www.linkedin.com/in/shaun1010/</a><br>
Toran Billups on Twitter — <a href="https://twitter.com/toranb" rel="nofollow">https://twitter.com/toranb</a><br>
Toran Billups on LinkedIn — <a href="https://www.linkedin.com/in/toranb/" rel="nofollow">https://www.linkedin.com/in/toranb/</a><br>
Legends of Learning — <a href="https://www.legendsoflearning.com/" rel="nofollow">https://www.legendsoflearning.com/</a><br>
Vadim Polikov — <a href="https://www.linkedin.com/in/vadim-polikov/" rel="nofollow">https://www.linkedin.com/in/vadim-polikov/</a><br>
Developing Fatigue Podcast — <a href="https://developingfatigue.fm/" rel="nofollow">https://developingfatigue.fm/</a><br>
Kris Van Houghton — <a href="https://twitter.com/krivaten" rel="nofollow">https://twitter.com/krivaten</a><br>
Dave Gardner — <a href="https://www.linkedin.com/in/davegardner01/" rel="nofollow">https://www.linkedin.com/in/davegardner01/</a><br>
Legends of Learning Careers — <a href="https://www.legendsoflearning.com/interested-game-developer/" rel="nofollow">https://www.legendsoflearning.com/interested-game-developer/</a><br>
Legends of Learning API Docs — <a href="https://docs.legendsoflearning.com/" rel="nofollow">https://docs.legendsoflearning.com/</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Elixir Match —<a href="https://elixirmatch.com/" rel="nofollow">https://elixirmatch.com/</a><br>
Elixir Match on GitHub —  <a href="https://github.com/toranb/elixir-match" rel="nofollow">https://github.com/toranb/elixir-match</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Grox.io — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b/" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>
Postgraphile on GitHub — <a href="https://github.com/graphile/postgraphile" rel="nofollow">https://github.com/graphile/postgraphile</a><br>
Martin Fowler — <a href="https://martinfowler.com/" rel="nofollow">https://martinfowler.com/</a><br>
The Strangler Application — <a href="https://martinfowler.com/bliki/StranglerFigApplication.html" rel="nofollow">https://martinfowler.com/bliki/StranglerFigApplication.html</a><br>
Timescale — <a href="https://www.timescale.com/" rel="nofollow">https://www.timescale.com/</a><br>
‘TimescaleDB 2.0 is now Generally Available’ — <a href="https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/" rel="nofollow">https://blog.timescale.com/blog/timescaledb-2-0-is-now-generally-available/</a><br>
Sun, Moon &amp; Stars: Patterns of Apparent Motion on Legends of Learning — <a href="https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/" rel="nofollow">https://www.legendsoflearning.com/learning-objectives/the-sun-moon-and-stars-patterns-of-apparent-motion/</a><br>
Magic the Gathering — <a href="https://magic.wizards.com/en" rel="nofollow">https://magic.wizards.com/en</a><br>
Legends of Learning Awakening — <a href="https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/" rel="nofollow">https://www.legendsoflearning.com/blog/homework-and-test-prep-math-and-science-game/</a><br>
Hour of Code — <a href="https://hourofcode.com/" rel="nofollow">https://hourofcode.com/</a><br>
Owl Pro — <a href="https://owllabs.com/products/meeting-owl-pro" rel="nofollow">https://owllabs.com/products/meeting-owl-pro</a></p>

<p>Correction: In an earlier version of this episode, the host mis-spoke and mis-named the guests&#39; company name in the outro; that error has been corrected as of 2021-02-25 3:52PM ET.</p><p>Special Guests: Shaun Robinson and Toran Billups.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brian Howenstein on How ClusterTruck is Innovating Food Delivery</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e12-howenstein</link>
      <guid isPermaLink="false">1b9ca1de-dc95-49fa-885b-4e6093d52055</guid>
      <pubDate>Thu, 18 Feb 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b9ca1de-dc95-49fa-885b-4e6093d52055.mp3" length="49892465" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with Brian Howenstein to find out about his journey in programming, ClusterTruck as an end-to-end food service, and how Elixir became mission-critical to the success of the business. </itunes:subtitle>
      <itunes:duration>59:23</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b9ca1de-dc95-49fa-885b-4e6093d52055/cover.jpg" />
      <description>ClusterTruck, a master of vertical integration, is rewriting the method of end-to-end food delivery and ghost kitchens. Today we speak with ClusterTruck Product VP Brian Howenstein to find out more about his journey in programming, ClusterTruck as an end-to-end food service, and how Elixir became mission-critical to the success of the business. 
We kick things off by hearing more on Brian’s childhood and how he became interested in programming. We then hear about his internship at Apple where he was part of the Core OS networking team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook, and shares how these personalities changed his view of the tech industry. Later in the show, we turn our attention to current times. Brian expands on his role at ClusterTruck and shares details on how Elixir has played a vital role in the company’s success. We hear his take on vertical integration, why they’d never consider third-party delivery companies, and much more. We then briefly digress to Brian’s hobby: the Scottish Games, before returning to ClusterTruck to find out what his favorite menu items are and what the future holds for food delivery and ghost kitchens. 
Be sure to stay tuned to enjoy our mini-feature where we speak with Michelle Morry, a software engineer at FuturePet. For all things Elixir, be sure to join us today! 
Bonus: If you’re in Indianapolis, IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use code “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck order. Good for a single use for both new and returning customers.
Key Points From This Episode:
A call to all talented engineering managers to join our team!
Introducing today’s guest, Brian Howenstein.
Brian tells us about his company, ClusterTruck.
Hear about Brian’s background in technology and programming.
What inspired Brian to do programming professionally.
Brian tells us about his internship at Apple.
Hear one of Brian’s fondest anecdotes about Jony Ive.
Brian shares notes on his path to Elixir.
Why Elixir has had such an impact on ClusterTruck’s success.
ClusterTruck’s origin story.
Brian talks about ClusterTruck’s vertical integration model.
How Brian got the people around him to buy into Elixir and the hurdles that came with it.
Brian talks about his journey to become a ClusterTruck VP.
Brian tells us about his hobby and we digress to World’s Strongest Man controversy.
How COVID has affected Brian’s business.
Nerves projects at ClusterTruck and how it’s being used.
What the future looks like for ClusterTruck.
Brian’s advice for people who are trying to get their company to code in Elixir.
How ClusterTruck is using LiveView.
Brian’s favorite and least favorite menu items.
Stay tuned for our quick mini-feature.
Links Mentioned in Today’s Episode:
ClusterTruck — https://www.clustertruck.com/
ClusterTruck Hiring — https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb
Cabermetrics — https://www.cabermetrics.com/
Brain Howenstein on LinkedIn — https://www.linkedin.com/in/brianhowenstein/
Brain Howenstein on Twitter — https://twitter.com/hwrd
Indianapolis Scottish Games Festival — https://indyscotgamesandfest.com/
Purdue University — https://www.purdue.edu/
SimCity — https://www.ea.com/en-gb/games/simcity
Apple — https://www.apple.com/
Jony Ive — https://www.britannica.com/biography/Jonathan-Ive
Tim Cook — https://twitter.com/timcook
Steve Jobs — https://www.biography.com/business-figure/steve-jobs
Uber Eats — https://www.ubereats.com/za
ExactTarget — https://www.linkedin.com/company/exacttarget/
Salesforce — https://www.salesforce.com/
DoorDash — https://www.doordash.com/en-US
GrubHub — https://www.grubhub.com/
The World’s Strongest Man — http://theworldsstrongestman.com/
Raspberry Pi — https://www.raspberrypi.org/
Indy Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are Hangry — https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;abchannel=IndyElixir
Indy Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering for a Team Simple — https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;abchannel=IndyElixir
ClusterTruck: Liberate Your Appetite — https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;abchannel=ClusterTruck
Sean in the City: ClusterTruck Indy — https://www.youtube.com/watch?v=-nusA13LYJI&amp;abchannel=B105.7Indy
ClusterTruck + Slack — https://www.youtube.com/watch?v=C6t8aZQPB68&amp;abchannel=ClusterTruck Special Guest: Brian Howenstein.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>ClusterTruck, a master of vertical integration, is rewriting the method of end-to-end food delivery and ghost kitchens. Today we speak with ClusterTruck Product VP Brian Howenstein to find out more about his journey in programming, ClusterTruck as an end-to-end food service, and how Elixir became mission-critical to the success of the business. </p>

<p>We kick things off by hearing more on Brian’s childhood and how he became interested in programming. We then hear about his internship at Apple where he was part of the Core OS networking team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook, and shares how these personalities changed his view of the tech industry. Later in the show, we turn our attention to current times. Brian expands on his role at ClusterTruck and shares details on how Elixir has played a vital role in the company’s success. We hear his take on vertical integration, why they’d never consider third-party delivery companies, and much more. We then briefly digress to Brian’s hobby: the Scottish Games, before returning to ClusterTruck to find out what his favorite menu items are and what the future holds for food delivery and ghost kitchens. </p>

<p>Be sure to stay tuned to enjoy our mini-feature where we speak with Michelle Morry, a software engineer at FuturePet. For all things Elixir, be sure to join us today! </p>

<p>Bonus: If you’re in Indianapolis, IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use code “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck order. Good for a single use for both new and returning customers.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A call to all talented engineering managers to join our team!</li>
<li>Introducing today’s guest, Brian Howenstein.</li>
<li>Brian tells us about his company, ClusterTruck.</li>
<li>Hear about Brian’s background in technology and programming.</li>
<li>What inspired Brian to do programming professionally.</li>
<li>Brian tells us about his internship at Apple.</li>
<li>Hear one of Brian’s fondest anecdotes about Jony Ive.</li>
<li>Brian shares notes on his path to Elixir.</li>
<li>Why Elixir has had such an impact on ClusterTruck’s success.</li>
<li>ClusterTruck’s origin story.</li>
<li>Brian talks about ClusterTruck’s vertical integration model.</li>
<li>How Brian got the people around him to buy into Elixir and the hurdles that came with it.</li>
<li>Brian talks about his journey to become a ClusterTruck VP.</li>
<li>Brian tells us about his hobby and we digress to World’s Strongest Man controversy.</li>
<li>How COVID has affected Brian’s business.</li>
<li>Nerves projects at ClusterTruck and how it’s being used.</li>
<li>What the future looks like for ClusterTruck.</li>
<li>Brian’s advice for people who are trying to get their company to code in Elixir.</li>
<li>How ClusterTruck is using LiveView.</li>
<li>Brian’s favorite and least favorite menu items.</li>
<li>Stay tuned for our quick mini-feature.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>ClusterTruck — <a href="https://www.clustertruck.com/" rel="nofollow">https://www.clustertruck.com/</a><br>
ClusterTruck Hiring — <a href="https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb" rel="nofollow">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>
Cabermetrics — <a href="https://www.cabermetrics.com/" rel="nofollow">https://www.cabermetrics.com/</a><br>
Brain Howenstein on LinkedIn — <a href="https://www.linkedin.com/in/brianhowenstein/" rel="nofollow">https://www.linkedin.com/in/brianhowenstein/</a><br>
Brain Howenstein on Twitter — <a href="https://twitter.com/hwrd" rel="nofollow">https://twitter.com/hwrd</a><br>
Indianapolis Scottish Games Festival — <a href="https://indyscotgamesandfest.com/" rel="nofollow">https://indyscotgamesandfest.com/</a><br>
Purdue University — <a href="https://www.purdue.edu/" rel="nofollow">https://www.purdue.edu/</a><br>
SimCity — <a href="https://www.ea.com/en-gb/games/simcity" rel="nofollow">https://www.ea.com/en-gb/games/simcity</a><br>
Apple — <a href="https://www.apple.com/" rel="nofollow">https://www.apple.com/</a><br>
Jony Ive — <a href="https://www.britannica.com/biography/Jonathan-Ive" rel="nofollow">https://www.britannica.com/biography/Jonathan-Ive</a><br>
Tim Cook — <a href="https://twitter.com/tim_cook" rel="nofollow">https://twitter.com/tim_cook</a><br>
Steve Jobs — <a href="https://www.biography.com/business-figure/steve-jobs" rel="nofollow">https://www.biography.com/business-figure/steve-jobs</a><br>
Uber Eats — <a href="https://www.ubereats.com/za" rel="nofollow">https://www.ubereats.com/za</a><br>
ExactTarget — <a href="https://www.linkedin.com/company/exacttarget/" rel="nofollow">https://www.linkedin.com/company/exacttarget/</a><br>
Salesforce — <a href="https://www.salesforce.com/" rel="nofollow">https://www.salesforce.com/</a><br>
DoorDash — <a href="https://www.doordash.com/en-US" rel="nofollow">https://www.doordash.com/en-US</a><br>
GrubHub — <a href="https://www.grubhub.com/" rel="nofollow">https://www.grubhub.com/</a><br>
The World’s Strongest Man — <a href="http://theworldsstrongestman.com/" rel="nofollow">http://theworldsstrongestman.com/</a><br>
Raspberry Pi — <a href="https://www.raspberrypi.org/" rel="nofollow">https://www.raspberrypi.org/</a><br>
Indy Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are Hangry — <a href="https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir" rel="nofollow">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>
Indy Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering for a Team Simple — <a href="https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir" rel="nofollow">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>
ClusterTruck: Liberate Your Appetite — <a href="https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck" rel="nofollow">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>
Sean in the City: ClusterTruck Indy — <a href="https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy" rel="nofollow">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>
ClusterTruck + Slack — <a href="https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck" rel="nofollow">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special Guest: Brian Howenstein.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>ClusterTruck, a master of vertical integration, is rewriting the method of end-to-end food delivery and ghost kitchens. Today we speak with ClusterTruck Product VP Brian Howenstein to find out more about his journey in programming, ClusterTruck as an end-to-end food service, and how Elixir became mission-critical to the success of the business. </p>

<p>We kick things off by hearing more on Brian’s childhood and how he became interested in programming. We then hear about his internship at Apple where he was part of the Core OS networking team. Brian touches on brushing shoulders with Steve Jobs, Jony Ivy, and Tim Cook, and shares how these personalities changed his view of the tech industry. Later in the show, we turn our attention to current times. Brian expands on his role at ClusterTruck and shares details on how Elixir has played a vital role in the company’s success. We hear his take on vertical integration, why they’d never consider third-party delivery companies, and much more. We then briefly digress to Brian’s hobby: the Scottish Games, before returning to ClusterTruck to find out what his favorite menu items are and what the future holds for food delivery and ghost kitchens. </p>

<p>Be sure to stay tuned to enjoy our mini-feature where we speak with Michelle Morry, a software engineer at FuturePet. For all things Elixir, be sure to join us today! </p>

<p>Bonus: If you’re in Indianapolis, IN, Columbus, OH, or Kansas City, MO, download the ClusterTruck app and use code “ELIXIRWIZARDS” at checkout for a one-time 25% discount on your ClusterTruck order. Good for a single use for both new and returning customers.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A call to all talented engineering managers to join our team!</li>
<li>Introducing today’s guest, Brian Howenstein.</li>
<li>Brian tells us about his company, ClusterTruck.</li>
<li>Hear about Brian’s background in technology and programming.</li>
<li>What inspired Brian to do programming professionally.</li>
<li>Brian tells us about his internship at Apple.</li>
<li>Hear one of Brian’s fondest anecdotes about Jony Ive.</li>
<li>Brian shares notes on his path to Elixir.</li>
<li>Why Elixir has had such an impact on ClusterTruck’s success.</li>
<li>ClusterTruck’s origin story.</li>
<li>Brian talks about ClusterTruck’s vertical integration model.</li>
<li>How Brian got the people around him to buy into Elixir and the hurdles that came with it.</li>
<li>Brian talks about his journey to become a ClusterTruck VP.</li>
<li>Brian tells us about his hobby and we digress to World’s Strongest Man controversy.</li>
<li>How COVID has affected Brian’s business.</li>
<li>Nerves projects at ClusterTruck and how it’s being used.</li>
<li>What the future looks like for ClusterTruck.</li>
<li>Brian’s advice for people who are trying to get their company to code in Elixir.</li>
<li>How ClusterTruck is using LiveView.</li>
<li>Brian’s favorite and least favorite menu items.</li>
<li>Stay tuned for our quick mini-feature.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>ClusterTruck — <a href="https://www.clustertruck.com/" rel="nofollow">https://www.clustertruck.com/</a><br>
ClusterTruck Hiring — <a href="https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb" rel="nofollow">https://www.notion.so/clustertruck/Engineering-Openings-at-ClusterTruck-ef2372d2c2ab43b3b82f56a097c86eeb</a><br>
Cabermetrics — <a href="https://www.cabermetrics.com/" rel="nofollow">https://www.cabermetrics.com/</a><br>
Brain Howenstein on LinkedIn — <a href="https://www.linkedin.com/in/brianhowenstein/" rel="nofollow">https://www.linkedin.com/in/brianhowenstein/</a><br>
Brain Howenstein on Twitter — <a href="https://twitter.com/hwrd" rel="nofollow">https://twitter.com/hwrd</a><br>
Indianapolis Scottish Games Festival — <a href="https://indyscotgamesandfest.com/" rel="nofollow">https://indyscotgamesandfest.com/</a><br>
Purdue University — <a href="https://www.purdue.edu/" rel="nofollow">https://www.purdue.edu/</a><br>
SimCity — <a href="https://www.ea.com/en-gb/games/simcity" rel="nofollow">https://www.ea.com/en-gb/games/simcity</a><br>
Apple — <a href="https://www.apple.com/" rel="nofollow">https://www.apple.com/</a><br>
Jony Ive — <a href="https://www.britannica.com/biography/Jonathan-Ive" rel="nofollow">https://www.britannica.com/biography/Jonathan-Ive</a><br>
Tim Cook — <a href="https://twitter.com/tim_cook" rel="nofollow">https://twitter.com/tim_cook</a><br>
Steve Jobs — <a href="https://www.biography.com/business-figure/steve-jobs" rel="nofollow">https://www.biography.com/business-figure/steve-jobs</a><br>
Uber Eats — <a href="https://www.ubereats.com/za" rel="nofollow">https://www.ubereats.com/za</a><br>
ExactTarget — <a href="https://www.linkedin.com/company/exacttarget/" rel="nofollow">https://www.linkedin.com/company/exacttarget/</a><br>
Salesforce — <a href="https://www.salesforce.com/" rel="nofollow">https://www.salesforce.com/</a><br>
DoorDash — <a href="https://www.doordash.com/en-US" rel="nofollow">https://www.doordash.com/en-US</a><br>
GrubHub — <a href="https://www.grubhub.com/" rel="nofollow">https://www.grubhub.com/</a><br>
The World’s Strongest Man — <a href="http://theworldsstrongestman.com/" rel="nofollow">http://theworldsstrongestman.com/</a><br>
Raspberry Pi — <a href="https://www.raspberrypi.org/" rel="nofollow">https://www.raspberrypi.org/</a><br>
Indy Elixir - Using Elixir at ClusterTruck: Milliseconds Matter When Your Users are Hangry — <a href="https://www.youtube.com/watch?v=9LMzYTK6dsE&ab_channel=IndyElixir" rel="nofollow">https://www.youtube.com/watch?v=9LMzYTK6dsE&amp;ab_channel=IndyElixir</a><br>
Indy Elixir - /hungry until food arrives: How ClusterTruck uses Elixir to make ordering for a Team Simple — <a href="https://www.youtube.com/watch?v=ZY2XeIENMRw&ab_channel=IndyElixir" rel="nofollow">https://www.youtube.com/watch?v=ZY2XeIENMRw&amp;ab_channel=IndyElixir</a><br>
ClusterTruck: Liberate Your Appetite — <a href="https://www.youtube.com/watch?v=xNC3vrrxNWM&ab_channel=ClusterTruck" rel="nofollow">https://www.youtube.com/watch?v=xNC3vrrxNWM&amp;ab_channel=ClusterTruck</a><br>
Sean in the City: ClusterTruck Indy — <a href="https://www.youtube.com/watch?v=-nusA13LYJI&ab_channel=B105.7Indy" rel="nofollow">https://www.youtube.com/watch?v=-nusA13LYJI&amp;ab_channel=B105.7Indy</a><br>
ClusterTruck + Slack — <a href="https://www.youtube.com/watch?v=C6t8aZQPB68&ab_channel=ClusterTruck" rel="nofollow">https://www.youtube.com/watch?v=C6t8aZQPB68&amp;ab_channel=ClusterTruck</a></p><p>Special Guest: Brian Howenstein.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Yair Flicker on SmartLogic’s Origin, Evolution, and Elixir Adoption Process</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e11-flicker</link>
      <guid isPermaLink="false">bc908c5d-f422-4fc4-809b-ec4f4b051d3a</guid>
      <pubDate>Thu, 11 Feb 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bc908c5d-f422-4fc4-809b-ec4f4b051d3a.mp3" length="53579123" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with SmartLogic President and Founder Yair Flicker about his company’s origin story, evolution, and their Elixir adoption process.</itunes:subtitle>
      <itunes:duration>55:46</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bc908c5d-f422-4fc4-809b-ec4f4b051d3a/cover.jpg" />
      <description>Building a successful development company requires having a leader with technical know-how and excellent management skills. Today we speak with SmartLogic President and Founder Yair Flicker about his company’s origin story, evolution, and their Elixir adoption process. Early in the episode, we talk about Yair’s first jobs before diving into how he founded SmartLogic. An important transition point, we then chat about how he moved from writing code to running a business. Reflecting on his tech background, Yair opens up about how he learned to code before he shares insights into the languages that his company programs in, how they discovered Elixir, and how they integrated it into their practice. In a discussion that’s sure to resonate with startup managers, Yair unpacks what he does to grow as a manager, along with best practices for companies looking to adopt Elixir. We ask Yair about the benefits of coding in Elixir, how SmartLogic has retained its top employees, why he prioritizes employee happiness, and the role that company values play in strengthening SmartLogic. After hearing about Yair’s vision for the future, we jump into our mini-segment where we interview Jake Johnson, the Director of Software Engineering at TaxJar. For more on building strong companies and advice on adopting Elixir, be sure to tune in and benefit from our conversations with Yair and Jake.
Key Points From This Episode:
SmartLogic Founder Yair Flicker talks about his first job.
Yair shares details about SmartLogic’s humble origins.
Early challenges SmarLogic faced and Yair’s move from coding to running a business.
We ask Yair about how he learned to code. 
SmartLogic’s coding evolution and how they discovered Elixir.
The Maker vs. Manager distinction; what Yair did to grow as a manager.
Exploring the benefits of adopting Elixir.
Yair’s advice for companies wanting to adopt Elixir.
Why Elixir allows for more scalability than many other languages.
How SmartLogic has been able to retain some of its top employees.
The link between having happy employees and happy clients. 
How Yair lives his company’s values. 
Yair shares his recipe for creating productive meetings.
Hear about Yair’s vision for SmartLogic’s future. 
For our mini-feature segment, we chat with Jake Johnson from TaxJar.
Why TaxJar adopted Elixir and details on Jake’s background. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Email — podcast@smartlogic.io
Yair Flicker on LinkedIn — https://www.linkedin.com/in/yflicker/
Yair Flicker on Twitter — https://twitter.com/yflicker
Jake Johnson on LinkedIn — https://www.linkedin.com/in/jakej/
TaxJar — https://www.taxjar.com/
Music and Arts — https://www.musicarts.com/
Johns Hopkins University — https://www.jhu.edu/
Hackers — https://www.imdb.com/title/tt0113243/
National Conference of Synagogue Youth — https://ncsy.org/
Stanley Black &amp; Decker — https://www.stanleyblackanddecker.com/
Reddit — https://reddit.com/
Discord — https://discord.com/
Instagram — https://www.instagram.com
Amazon Web Services — https://aws.amazon.com/
Sales Tax for Developers — https://salestax.dev
Backstreet Boys — https://linktr.ee/backstreetboys Special Guest: Yair Flicker.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Building a successful development company requires having a leader with technical know-how and excellent management skills. Today we speak with SmartLogic President and Founder Yair Flicker about his company’s origin story, evolution, and their Elixir adoption process. Early in the episode, we talk about Yair’s first jobs before diving into how he founded SmartLogic. An important transition point, we then chat about how he moved from writing code to running a business. Reflecting on his tech background, Yair opens up about how he learned to code before he shares insights into the languages that his company programs in, how they discovered Elixir, and how they integrated it into their practice. In a discussion that’s sure to resonate with startup managers, Yair unpacks what he does to grow as a manager, along with best practices for companies looking to adopt Elixir. We ask Yair about the benefits of coding in Elixir, how SmartLogic has retained its top employees, why he prioritizes employee happiness, and the role that company values play in strengthening SmartLogic. After hearing about Yair’s vision for the future, we jump into our mini-segment where we interview Jake Johnson, the Director of Software Engineering at TaxJar. For more on building strong companies and advice on adopting Elixir, be sure to tune in and benefit from our conversations with Yair and Jake.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>SmartLogic Founder Yair Flicker talks about his first job.</li>
<li>Yair shares details about SmartLogic’s humble origins.</li>
<li>Early challenges SmarLogic faced and Yair’s move from coding to running a business.</li>
<li>We ask Yair about how he learned to code. </li>
<li>SmartLogic’s coding evolution and how they discovered Elixir.</li>
<li>The Maker vs. Manager distinction; what Yair did to grow as a manager.</li>
<li>Exploring the benefits of adopting Elixir.</li>
<li>Yair’s advice for companies wanting to adopt Elixir.</li>
<li>Why Elixir allows for more scalability than many other languages.</li>
<li>How SmartLogic has been able to retain some of its top employees.</li>
<li>The link between having happy employees and happy clients. </li>
<li>How Yair lives his company’s values. </li>
<li>Yair shares his recipe for creating productive meetings.</li>
<li>Hear about Yair’s vision for SmartLogic’s future. </li>
<li>For our mini-feature segment, we chat with Jake Johnson from TaxJar.</li>
<li>Why TaxJar adopted Elixir and details on Jake’s background. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Yair Flicker on LinkedIn — <a href="https://www.linkedin.com/in/yflicker/" rel="nofollow">https://www.linkedin.com/in/yflicker/</a><br>
Yair Flicker on Twitter — <a href="https://twitter.com/yflicker" rel="nofollow">https://twitter.com/yflicker</a><br>
Jake Johnson on LinkedIn — <a href="https://www.linkedin.com/in/jakej/" rel="nofollow">https://www.linkedin.com/in/jakej/</a><br>
TaxJar — <a href="https://www.taxjar.com/" rel="nofollow">https://www.taxjar.com/</a><br>
Music and Arts — <a href="https://www.musicarts.com/" rel="nofollow">https://www.musicarts.com/</a><br>
Johns Hopkins University — <a href="https://www.jhu.edu/" rel="nofollow">https://www.jhu.edu/</a><br>
Hackers — <a href="https://www.imdb.com/title/tt0113243/" rel="nofollow">https://www.imdb.com/title/tt0113243/</a><br>
National Conference of Synagogue Youth — <a href="https://ncsy.org/" rel="nofollow">https://ncsy.org/</a><br>
Stanley Black &amp; Decker — <a href="https://www.stanleyblackanddecker.com/" rel="nofollow">https://www.stanleyblackanddecker.com/</a><br>
Reddit — <a href="https://reddit.com/" rel="nofollow">https://reddit.com/</a><br>
Discord — <a href="https://discord.com/" rel="nofollow">https://discord.com/</a><br>
Instagram — <a href="https://www.instagram.com" rel="nofollow">https://www.instagram.com</a><br>
Amazon Web Services — <a href="https://aws.amazon.com/" rel="nofollow">https://aws.amazon.com/</a><br>
Sales Tax for Developers — <a href="https://salestax.dev" rel="nofollow">https://salestax.dev</a><br>
Backstreet Boys — <a href="https://linktr.ee/backstreetboys" rel="nofollow">https://linktr.ee/backstreetboys</a></p><p>Special Guest: Yair Flicker.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Building a successful development company requires having a leader with technical know-how and excellent management skills. Today we speak with SmartLogic President and Founder Yair Flicker about his company’s origin story, evolution, and their Elixir adoption process. Early in the episode, we talk about Yair’s first jobs before diving into how he founded SmartLogic. An important transition point, we then chat about how he moved from writing code to running a business. Reflecting on his tech background, Yair opens up about how he learned to code before he shares insights into the languages that his company programs in, how they discovered Elixir, and how they integrated it into their practice. In a discussion that’s sure to resonate with startup managers, Yair unpacks what he does to grow as a manager, along with best practices for companies looking to adopt Elixir. We ask Yair about the benefits of coding in Elixir, how SmartLogic has retained its top employees, why he prioritizes employee happiness, and the role that company values play in strengthening SmartLogic. After hearing about Yair’s vision for the future, we jump into our mini-segment where we interview Jake Johnson, the Director of Software Engineering at TaxJar. For more on building strong companies and advice on adopting Elixir, be sure to tune in and benefit from our conversations with Yair and Jake.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>SmartLogic Founder Yair Flicker talks about his first job.</li>
<li>Yair shares details about SmartLogic’s humble origins.</li>
<li>Early challenges SmarLogic faced and Yair’s move from coding to running a business.</li>
<li>We ask Yair about how he learned to code. </li>
<li>SmartLogic’s coding evolution and how they discovered Elixir.</li>
<li>The Maker vs. Manager distinction; what Yair did to grow as a manager.</li>
<li>Exploring the benefits of adopting Elixir.</li>
<li>Yair’s advice for companies wanting to adopt Elixir.</li>
<li>Why Elixir allows for more scalability than many other languages.</li>
<li>How SmartLogic has been able to retain some of its top employees.</li>
<li>The link between having happy employees and happy clients. </li>
<li>How Yair lives his company’s values. </li>
<li>Yair shares his recipe for creating productive meetings.</li>
<li>Hear about Yair’s vision for SmartLogic’s future. </li>
<li>For our mini-feature segment, we chat with Jake Johnson from TaxJar.</li>
<li>Why TaxJar adopted Elixir and details on Jake’s background. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Yair Flicker on LinkedIn — <a href="https://www.linkedin.com/in/yflicker/" rel="nofollow">https://www.linkedin.com/in/yflicker/</a><br>
Yair Flicker on Twitter — <a href="https://twitter.com/yflicker" rel="nofollow">https://twitter.com/yflicker</a><br>
Jake Johnson on LinkedIn — <a href="https://www.linkedin.com/in/jakej/" rel="nofollow">https://www.linkedin.com/in/jakej/</a><br>
TaxJar — <a href="https://www.taxjar.com/" rel="nofollow">https://www.taxjar.com/</a><br>
Music and Arts — <a href="https://www.musicarts.com/" rel="nofollow">https://www.musicarts.com/</a><br>
Johns Hopkins University — <a href="https://www.jhu.edu/" rel="nofollow">https://www.jhu.edu/</a><br>
Hackers — <a href="https://www.imdb.com/title/tt0113243/" rel="nofollow">https://www.imdb.com/title/tt0113243/</a><br>
National Conference of Synagogue Youth — <a href="https://ncsy.org/" rel="nofollow">https://ncsy.org/</a><br>
Stanley Black &amp; Decker — <a href="https://www.stanleyblackanddecker.com/" rel="nofollow">https://www.stanleyblackanddecker.com/</a><br>
Reddit — <a href="https://reddit.com/" rel="nofollow">https://reddit.com/</a><br>
Discord — <a href="https://discord.com/" rel="nofollow">https://discord.com/</a><br>
Instagram — <a href="https://www.instagram.com" rel="nofollow">https://www.instagram.com</a><br>
Amazon Web Services — <a href="https://aws.amazon.com/" rel="nofollow">https://aws.amazon.com/</a><br>
Sales Tax for Developers — <a href="https://salestax.dev" rel="nofollow">https://salestax.dev</a><br>
Backstreet Boys — <a href="https://linktr.ee/backstreetboys" rel="nofollow">https://linktr.ee/backstreetboys</a></p><p>Special Guest: Yair Flicker.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Alexandra Chakeres on Moving Towards an Inclusive Elixir Community</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e10-chakeres</link>
      <guid isPermaLink="false">d3843a34-8180-4e29-ae31-ab4d2da8379b</guid>
      <pubDate>Thu, 04 Feb 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d3843a34-8180-4e29-ae31-ab4d2da8379b.mp3" length="46530590" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Despite its welcoming character, the Elixir community struggles with diversity. Today we speak with Alexandra Chakeres about her experience and what we can do to make it more inclusive.</itunes:subtitle>
      <itunes:duration>48:25</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d3843a34-8180-4e29-ae31-ab4d2da8379b/cover.jpg" />
      <description>Despite its welcoming character, the Elixir community struggles with diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists are women. Today we speak with Blinker software engineer Alexandra Chakeres about her experience of the community, as well as what we can do to make it more inclusive. We open by exploring Alexandra’s background and coding career. After expressing her enthusiasm for the Turing School, we talk about Alexandra’s learn-by-doing approach to picking up Elixir. She shares how she landed her first Elixir job before we chat about her current role at Blinker. We discuss why the small size of the community means that Alexandra doesn’t recommend Elixir to coding beginners. We then dive into the topic of Elixir diversity, touching on factors that limit inclusivity, including how few Elixir positions are available for juniors. Alexandra unpacks solutions, like how organizations can shift their hiring pipeline and the need to approach diversity organizations with openings. Later, listeners will enjoy our mini-feature segment where we interview Instinct Science engineer Bill Peregoy about how their team uses Elixir. Tune in for more on what we can do to create a more diverse community. 
Key Points From This Episode:
Hear how co-host Sundi Myint first met Alexandra.
Alexandra shares details about her coding background.
Why Alexandra feels so passionately about Turing Boot Camp.
Details about Alexandra’s first Elixir job.
What Alexandra’s current team builds in Elixir and her experience using umbrella apps.
Comparing Ruby with Elixir and insights into what Elixir is missing. 
Why Alexandra doesn’t recommend that junior engineers first learn Elixir.
How restricted Elixir hirings lead to a lack of diversity in the community. 
Exploring ways to make the Elixir community more diverse. 
What Alexandra most enjoys about coding in Elixir.
Alexandra’s top advice for minorities in the Elixir community.
Why it’s up to all of us to create a more inclusive community.
We talk to Bill Peregoy about how the team at Instinct Science uses Elixir.
Bill’s challenges and benefits to writing in Elixir.
How Bill would help new hires learn Elixir.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Elixir Wizards Email — podcast@smartlogic.io
Alexandra Chakeres on LinkedIn — https://www.linkedin.com/in/alexandrachakeres/
Alexandra Chakeres on GitHub — https://github.com/chakeresa
Blinker — https://www.blinker.com/
ElixirConf — https://elixirconf.com
Brian Cardarella — https://twitter.com/bcardarella
Turing School — https://turing.io/
Angelfire — https://www.angelfire.lycos.com/
Melvin Cedeno — https://twitter.com/thecraftedgem
Weedmaps — https://weedmaps.com/
Denver Erlang and Elixir Meetup — https://www.meetup.com/Denver-Erlang-Elixir/
DC |&gt; Elixir Meetup — https://www.meetup.com/DC-Elixir/
DispatchHealth — https://www.dispatchhealth.com/
Autotrader — https://www.autotrader.com/
José Valim - https://github.com/josevalim
Diversified Tech — https://www.diversifytech.co/
Women Who Code D.C — https://www.womenwhocode.com/dc
Bruce Tate — https://twitter.com/redrapids
Bill Peregoy on LinkedIn — https://www.linkedin.com/in/billperegoy/
Instinct Science — https://www.instinct.vet/
AppSense — https://www.ivanti.com/company/history/appsense Special Guest: Alexandra Chakeres.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Despite its welcoming character, the Elixir community struggles with diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists are women. Today we speak with Blinker software engineer Alexandra Chakeres about her experience of the community, as well as what we can do to make it more inclusive. We open by exploring Alexandra’s background and coding career. After expressing her enthusiasm for the Turing School, we talk about Alexandra’s learn-by-doing approach to picking up Elixir. She shares how she landed her first Elixir job before we chat about her current role at Blinker. We discuss why the small size of the community means that Alexandra doesn’t recommend Elixir to coding beginners. We then dive into the topic of Elixir diversity, touching on factors that limit inclusivity, including how few Elixir positions are available for juniors. Alexandra unpacks solutions, like how organizations can shift their hiring pipeline and the need to approach diversity organizations with openings. Later, listeners will enjoy our mini-feature segment where we interview Instinct Science engineer Bill Peregoy about how their team uses Elixir. Tune in for more on what we can do to create a more diverse community. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Hear how co-host Sundi Myint first met Alexandra.</li>
<li>Alexandra shares details about her coding background.</li>
<li>Why Alexandra feels so passionately about Turing Boot Camp.</li>
<li>Details about Alexandra’s first Elixir job.</li>
<li>What Alexandra’s current team builds in Elixir and her experience using umbrella apps.</li>
<li>Comparing Ruby with Elixir and insights into what Elixir is missing. </li>
<li>Why Alexandra doesn’t recommend that junior engineers first learn Elixir.</li>
<li>How restricted Elixir hirings lead to a lack of diversity in the community. </li>
<li>Exploring ways to make the Elixir community more diverse. </li>
<li>What Alexandra most enjoys about coding in Elixir.</li>
<li>Alexandra’s top advice for minorities in the Elixir community.</li>
<li>Why it’s up to all of us to create a more inclusive community.</li>
<li>We talk to Bill Peregoy about how the team at Instinct Science uses Elixir.</li>
<li>Bill’s challenges and benefits to writing in Elixir.</li>
<li>How Bill would help new hires learn Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Alexandra Chakeres on LinkedIn — <a href="https://www.linkedin.com/in/alexandrachakeres/" rel="nofollow">https://www.linkedin.com/in/alexandrachakeres/</a><br>
Alexandra Chakeres on GitHub — <a href="https://github.com/chakeresa" rel="nofollow">https://github.com/chakeresa</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a><br>
ElixirConf — <a href="https://elixirconf.com" rel="nofollow">https://elixirconf.com</a><br>
Brian Cardarella — <a href="https://twitter.com/bcardarella" rel="nofollow">https://twitter.com/bcardarella</a><br>
Turing School — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Angelfire — <a href="https://www.angelfire.lycos.com/" rel="nofollow">https://www.angelfire.lycos.com/</a><br>
Melvin Cedeno — <a href="https://twitter.com/thecraftedgem" rel="nofollow">https://twitter.com/thecraftedgem</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Denver Erlang and Elixir Meetup — <a href="https://www.meetup.com/Denver-Erlang-Elixir/" rel="nofollow">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>
DC |&gt; Elixir Meetup — <a href="https://www.meetup.com/DC-Elixir/" rel="nofollow">https://www.meetup.com/DC-Elixir/</a><br>
DispatchHealth — <a href="https://www.dispatchhealth.com/" rel="nofollow">https://www.dispatchhealth.com/</a><br>
Autotrader — <a href="https://www.autotrader.com/" rel="nofollow">https://www.autotrader.com/</a><br>
José Valim - <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Diversified Tech — <a href="https://www.diversifytech.co/" rel="nofollow">https://www.diversifytech.co/</a><br>
Women Who Code D.C — <a href="https://www.womenwhocode.com/dc" rel="nofollow">https://www.womenwhocode.com/dc</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Bill Peregoy on LinkedIn — <a href="https://www.linkedin.com/in/billperegoy/" rel="nofollow">https://www.linkedin.com/in/billperegoy/</a><br>
Instinct Science — <a href="https://www.instinct.vet/" rel="nofollow">https://www.instinct.vet/</a><br>
AppSense — <a href="https://www.ivanti.com/company/history/appsense" rel="nofollow">https://www.ivanti.com/company/history/appsense</a></p><p>Special Guest: Alexandra Chakeres.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Despite its welcoming character, the Elixir community struggles with diversity; as the 2020 ElixirConf community survey shows, only 2% of Elixirists are women. Today we speak with Blinker software engineer Alexandra Chakeres about her experience of the community, as well as what we can do to make it more inclusive. We open by exploring Alexandra’s background and coding career. After expressing her enthusiasm for the Turing School, we talk about Alexandra’s learn-by-doing approach to picking up Elixir. She shares how she landed her first Elixir job before we chat about her current role at Blinker. We discuss why the small size of the community means that Alexandra doesn’t recommend Elixir to coding beginners. We then dive into the topic of Elixir diversity, touching on factors that limit inclusivity, including how few Elixir positions are available for juniors. Alexandra unpacks solutions, like how organizations can shift their hiring pipeline and the need to approach diversity organizations with openings. Later, listeners will enjoy our mini-feature segment where we interview Instinct Science engineer Bill Peregoy about how their team uses Elixir. Tune in for more on what we can do to create a more diverse community. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Hear how co-host Sundi Myint first met Alexandra.</li>
<li>Alexandra shares details about her coding background.</li>
<li>Why Alexandra feels so passionately about Turing Boot Camp.</li>
<li>Details about Alexandra’s first Elixir job.</li>
<li>What Alexandra’s current team builds in Elixir and her experience using umbrella apps.</li>
<li>Comparing Ruby with Elixir and insights into what Elixir is missing. </li>
<li>Why Alexandra doesn’t recommend that junior engineers first learn Elixir.</li>
<li>How restricted Elixir hirings lead to a lack of diversity in the community. </li>
<li>Exploring ways to make the Elixir community more diverse. </li>
<li>What Alexandra most enjoys about coding in Elixir.</li>
<li>Alexandra’s top advice for minorities in the Elixir community.</li>
<li>Why it’s up to all of us to create a more inclusive community.</li>
<li>We talk to Bill Peregoy about how the team at Instinct Science uses Elixir.</li>
<li>Bill’s challenges and benefits to writing in Elixir.</li>
<li>How Bill would help new hires learn Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Elixir Wizards Email — <a href="mailto:podcast@smartlogic.io" rel="nofollow">podcast@smartlogic.io</a><br>
Alexandra Chakeres on LinkedIn — <a href="https://www.linkedin.com/in/alexandrachakeres/" rel="nofollow">https://www.linkedin.com/in/alexandrachakeres/</a><br>
Alexandra Chakeres on GitHub — <a href="https://github.com/chakeresa" rel="nofollow">https://github.com/chakeresa</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a><br>
ElixirConf — <a href="https://elixirconf.com" rel="nofollow">https://elixirconf.com</a><br>
Brian Cardarella — <a href="https://twitter.com/bcardarella" rel="nofollow">https://twitter.com/bcardarella</a><br>
Turing School — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Angelfire — <a href="https://www.angelfire.lycos.com/" rel="nofollow">https://www.angelfire.lycos.com/</a><br>
Melvin Cedeno — <a href="https://twitter.com/thecraftedgem" rel="nofollow">https://twitter.com/thecraftedgem</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Denver Erlang and Elixir Meetup — <a href="https://www.meetup.com/Denver-Erlang-Elixir/" rel="nofollow">https://www.meetup.com/Denver-Erlang-Elixir/</a><br>
DC |&gt; Elixir Meetup — <a href="https://www.meetup.com/DC-Elixir/" rel="nofollow">https://www.meetup.com/DC-Elixir/</a><br>
DispatchHealth — <a href="https://www.dispatchhealth.com/" rel="nofollow">https://www.dispatchhealth.com/</a><br>
Autotrader — <a href="https://www.autotrader.com/" rel="nofollow">https://www.autotrader.com/</a><br>
José Valim - <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Diversified Tech — <a href="https://www.diversifytech.co/" rel="nofollow">https://www.diversifytech.co/</a><br>
Women Who Code D.C — <a href="https://www.womenwhocode.com/dc" rel="nofollow">https://www.womenwhocode.com/dc</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Bill Peregoy on LinkedIn — <a href="https://www.linkedin.com/in/billperegoy/" rel="nofollow">https://www.linkedin.com/in/billperegoy/</a><br>
Instinct Science — <a href="https://www.instinct.vet/" rel="nofollow">https://www.instinct.vet/</a><br>
AppSense — <a href="https://www.ivanti.com/company/history/appsense" rel="nofollow">https://www.ivanti.com/company/history/appsense</a></p><p>Special Guest: Alexandra Chakeres.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Matt Nowack and Jake Heinz on Elixir and Discord; Bonus: Arthi Radhakrishnan, Community.com</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e8-nowack-heinz</link>
      <guid isPermaLink="false">1752ae0e-feb0-4606-b3b0-97f70e29e3de</guid>
      <pubDate>Thu, 21 Jan 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1752ae0e-feb0-4606-b3b0-97f70e29e3de.mp3" length="51116798" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today's episode we talk with Matt Nowack and Jake Heinz from Discord. They get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system!</itunes:subtitle>
      <itunes:duration>53:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1752ae0e-feb0-4606-b3b0-97f70e29e3de/cover.jpg" />
      <description>In this episode we continue our conversation about adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system! We also invite Arthi Radhakrishnan from community.com for our mini-interview in the last chunk of the episode. Our chat begins with Jake and Matt telling Elixir developers exactly why they should not use Mnesia. They subsequently dive into their journeys in programming and the process of learning Elixir after joining Discord. They share a few aha-moments as well as challenging projects that asked them to get their heads around some of the more powerful features of Elixir, highlighting a way they used immutability for a project that asked them to efficiently calculate deltas for large member list updates. From there we get into the culture around onboarding new devs at Discord, the company’s popular open-source Elixir contributions, and some brags about the high performance of features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their suggestions for teams and devs hoping to adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s standard library. After that, it’s time for our chat with Arthi, where we hear about her programming journey, how Elixir is being put to use at Community.com, how the company supports new devs learning Elixir, and more!
Key Points From This Episode:
Our guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.
How Jake and Matt got into programming and learned Elixir after joining Discord.
The history of the use of Elixir at Discord and some of the projects Jake helped build since.
The nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.
Different projects Matt worked on after joining Discord and how they helped him learn Elixir.
Aha moments of learning Elixir; features of the language that acted as force multipliers in the development of different Discord projects.
Processes at Discord for helping new developers learn Elixir.
Open-source contributions from Discord to the Elixir community and the culture around this at Discord.
Issues around logging and memory allocation in Elixir and what our guests think could change.
The sheer power Elixir brought to the Discord project allowing rapid scale with a small team.
Jake weighs in on the strengths of Python, Rust and Elixir, as well as BEAM processes versus Goroutines.
Discord as a native Electron app and whether we will see it written in Rust.
Advice regarding adopting Elixir about the power of OTP and the standard library.
Introducing Arthi Radhakrishnan for our mini-interview at the end of the show.
Previous languages Arthi worked in and how she learned Elixir after joining community.com.
The fan chat service offered at community.com and some famous users.
Features of the community.com architecture built in Elixir.
The size of the team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.

Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Matt Nowack on GitHub — https://github.com/ihumanable
Mat Nowack on Twitter — https://twitter.com/ihumanable?lang=en
Jake Heinz on GitHub — https://github.com/jhgg
Apply for a Position at Discord — https://discord.com/jobs
Stanislav Vishnevskiy on LinkedIn — https://www.linkedin.com/in/svishnevskiy/
ZenMonitor — https://github.com/discord/zenmonitor
SortedSet Nif — https://github.com/discord/sortedsetnif
The BEAM Book — https://github.com/happi/theBeamBook
Semaphore — https://github.com/discord/semaphore
ExHashRing — https://github.com/discord/exhashring
ertsalloc Documentation — https://erlang.org/doc/man/erts_alloc.html
Arthi Radhakrishnan on LinkedIn — https://www.linkedin.com/in/arthiradhakrishnan/
Community.com (https://www.community.com/)
Andrea Leopardi on LinkedIn — https://www.linkedin.com/in/anleopardi/?originalSubdomain=it Special Guests: Jake Heinz and Matt Nowack.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>In this episode we continue our conversation about adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system! We also invite Arthi Radhakrishnan from community.com for our mini-interview in the last chunk of the episode. Our chat begins with Jake and Matt telling Elixir developers exactly why they should not use Mnesia. They subsequently dive into their journeys in programming and the process of learning Elixir after joining Discord. They share a few aha-moments as well as challenging projects that asked them to get their heads around some of the more powerful features of Elixir, highlighting a way they used immutability for a project that asked them to efficiently calculate deltas for large member list updates. From there we get into the culture around onboarding new devs at Discord, the company’s popular open-source Elixir contributions, and some brags about the high performance of features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their suggestions for teams and devs hoping to adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s standard library. After that, it’s time for our chat with Arthi, where we hear about her programming journey, how Elixir is being put to use at Community.com, how the company supports new devs learning Elixir, and more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Our guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.</li>
<li>How Jake and Matt got into programming and learned Elixir after joining Discord.</li>
<li>The history of the use of Elixir at Discord and some of the projects Jake helped build since.</li>
<li>The nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.</li>
<li>Different projects Matt worked on after joining Discord and how they helped him learn Elixir.</li>
<li>Aha moments of learning Elixir; features of the language that acted as force multipliers in the development of different Discord projects.</li>
<li>Processes at Discord for helping new developers learn Elixir.</li>
<li>Open-source contributions from Discord to the Elixir community and the culture around this at Discord.</li>
<li>Issues around logging and memory allocation in Elixir and what our guests think could change.</li>
<li>The sheer power Elixir brought to the Discord project allowing rapid scale with a small team.</li>
<li>Jake weighs in on the strengths of Python, Rust and Elixir, as well as BEAM processes versus Goroutines.</li>
<li>Discord as a native Electron app and whether we will see it written in Rust.</li>
<li>Advice regarding adopting Elixir about the power of OTP and the standard library.</li>
<li>Introducing Arthi Radhakrishnan for our mini-interview at the end of the show.</li>
<li>Previous languages Arthi worked in and how she learned Elixir after joining community.com.</li>
<li>The fan chat service offered at community.com and some famous users.</li>
<li>Features of the community.com architecture built in Elixir.</li>
<li>The size of the team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>
<li>
Links Mentioned in Today’s Episode:</li>
</ul>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Matt Nowack on GitHub — <a href="https://github.com/ihumanable" rel="nofollow">https://github.com/ihumanable</a><br>
Mat Nowack on Twitter — <a href="https://twitter.com/ihumanable?lang=en" rel="nofollow">https://twitter.com/ihumanable?lang=en</a><br>
Jake Heinz on GitHub — <a href="https://github.com/jhgg" rel="nofollow">https://github.com/jhgg</a><br>
Apply for a Position at Discord — <a href="https://discord.com/jobs" rel="nofollow">https://discord.com/jobs</a><br>
Stanislav Vishnevskiy on LinkedIn — <a href="https://www.linkedin.com/in/svishnevskiy/" rel="nofollow">https://www.linkedin.com/in/svishnevskiy/</a><br>
ZenMonitor — <a href="https://github.com/discord/zen_monitor" rel="nofollow">https://github.com/discord/zen_monitor</a><br>
SortedSet Nif — <a href="https://github.com/discord/sorted_set_nif" rel="nofollow">https://github.com/discord/sorted_set_nif</a><br>
The BEAM Book — <a href="https://github.com/happi/theBeamBook" rel="nofollow">https://github.com/happi/theBeamBook</a><br>
Semaphore — <a href="https://github.com/discord/semaphore" rel="nofollow">https://github.com/discord/semaphore</a><br>
ExHashRing — <a href="https://github.com/discord/ex_hash_ring" rel="nofollow">https://github.com/discord/ex_hash_ring</a><br>
erts_alloc Documentation — <a href="https://erlang.org/doc/man/erts_alloc.html" rel="nofollow">https://erlang.org/doc/man/erts_alloc.html</a><br>
Arthi Radhakrishnan on LinkedIn — <a href="https://www.linkedin.com/in/arthiradhakrishnan/" rel="nofollow">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>
<a href="https://www.community.com/" rel="nofollow">Community.com</a><br>
Andrea Leopardi on LinkedIn — <a href="https://www.linkedin.com/in/anleopardi/?originalSubdomain=it" rel="nofollow">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special Guests: Jake Heinz and Matt Nowack.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In this episode we continue our conversation about adopting Elixir, this time with Matt Nowack and Jake Heinz from Discord, hearing them get into the features of Elixir that make it a great fit for building a real-time chat infrastructure system! We also invite Arthi Radhakrishnan from community.com for our mini-interview in the last chunk of the episode. Our chat begins with Jake and Matt telling Elixir developers exactly why they should not use Mnesia. They subsequently dive into their journeys in programming and the process of learning Elixir after joining Discord. They share a few aha-moments as well as challenging projects that asked them to get their heads around some of the more powerful features of Elixir, highlighting a way they used immutability for a project that asked them to efficiently calculate deltas for large member list updates. From there we get into the culture around onboarding new devs at Discord, the company’s popular open-source Elixir contributions, and some brags about the high performance of features of Discord built in Elixir. Wrapping up with Jake and Matt, we hear their suggestions for teams and devs hoping to adopt Elixir, where they strongly advise on learning OTP as well as Elixir’s standard library. After that, it’s time for our chat with Arthi, where we hear about her programming journey, how Elixir is being put to use at Community.com, how the company supports new devs learning Elixir, and more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Our guests’ thoughts on why Elixir developers shouldn’t use the database driver Mnesia.</li>
<li>How Jake and Matt got into programming and learned Elixir after joining Discord.</li>
<li>The history of the use of Elixir at Discord and some of the projects Jake helped build since.</li>
<li>The nuts and bolts of OTP; Jake’s experiences learning it along with Elixir at Discord.</li>
<li>Different projects Matt worked on after joining Discord and how they helped him learn Elixir.</li>
<li>Aha moments of learning Elixir; features of the language that acted as force multipliers in the development of different Discord projects.</li>
<li>Processes at Discord for helping new developers learn Elixir.</li>
<li>Open-source contributions from Discord to the Elixir community and the culture around this at Discord.</li>
<li>Issues around logging and memory allocation in Elixir and what our guests think could change.</li>
<li>The sheer power Elixir brought to the Discord project allowing rapid scale with a small team.</li>
<li>Jake weighs in on the strengths of Python, Rust and Elixir, as well as BEAM processes versus Goroutines.</li>
<li>Discord as a native Electron app and whether we will see it written in Rust.</li>
<li>Advice regarding adopting Elixir about the power of OTP and the standard library.</li>
<li>Introducing Arthi Radhakrishnan for our mini-interview at the end of the show.</li>
<li>Previous languages Arthi worked in and how she learned Elixir after joining community.com.</li>
<li>The fan chat service offered at community.com and some famous users.</li>
<li>Features of the community.com architecture built in Elixir.</li>
<li>The size of the team, the culture of hiring Elixir devs, and Arthi’s onboarding process at Community.com.</li>
<li>
Links Mentioned in Today’s Episode:</li>
</ul>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Matt Nowack on GitHub — <a href="https://github.com/ihumanable" rel="nofollow">https://github.com/ihumanable</a><br>
Mat Nowack on Twitter — <a href="https://twitter.com/ihumanable?lang=en" rel="nofollow">https://twitter.com/ihumanable?lang=en</a><br>
Jake Heinz on GitHub — <a href="https://github.com/jhgg" rel="nofollow">https://github.com/jhgg</a><br>
Apply for a Position at Discord — <a href="https://discord.com/jobs" rel="nofollow">https://discord.com/jobs</a><br>
Stanislav Vishnevskiy on LinkedIn — <a href="https://www.linkedin.com/in/svishnevskiy/" rel="nofollow">https://www.linkedin.com/in/svishnevskiy/</a><br>
ZenMonitor — <a href="https://github.com/discord/zen_monitor" rel="nofollow">https://github.com/discord/zen_monitor</a><br>
SortedSet Nif — <a href="https://github.com/discord/sorted_set_nif" rel="nofollow">https://github.com/discord/sorted_set_nif</a><br>
The BEAM Book — <a href="https://github.com/happi/theBeamBook" rel="nofollow">https://github.com/happi/theBeamBook</a><br>
Semaphore — <a href="https://github.com/discord/semaphore" rel="nofollow">https://github.com/discord/semaphore</a><br>
ExHashRing — <a href="https://github.com/discord/ex_hash_ring" rel="nofollow">https://github.com/discord/ex_hash_ring</a><br>
erts_alloc Documentation — <a href="https://erlang.org/doc/man/erts_alloc.html" rel="nofollow">https://erlang.org/doc/man/erts_alloc.html</a><br>
Arthi Radhakrishnan on LinkedIn — <a href="https://www.linkedin.com/in/arthiradhakrishnan/" rel="nofollow">https://www.linkedin.com/in/arthiradhakrishnan/</a><br>
<a href="https://www.community.com/" rel="nofollow">Community.com</a><br>
Andrea Leopardi on LinkedIn — <a href="https://www.linkedin.com/in/anleopardi/?originalSubdomain=it" rel="nofollow">https://www.linkedin.com/in/anleopardi/?originalSubdomain=it</a></p><p>Special Guests: Jake Heinz and Matt Nowack.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jason Axelson on the Elixir Language Server</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e7-axelson</link>
      <guid isPermaLink="false">6475cfad-49d7-498d-a06a-c9af4a82e710</guid>
      <pubDate>Thu, 14 Jan 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6475cfad-49d7-498d-a06a-c9af4a82e710.mp3" length="32639876" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today's guest Jason Axelson, a back-end developer for a mixed reality studio,  talks about his programming journey and contributions to Animal Repair Shop and the Elixir Language Server project. </itunes:subtitle>
      <itunes:duration>33:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6475cfad-49d7-498d-a06a-c9af4a82e710/cover.jpg" />
      <description>Welcome back to the Elixir Wizards podcast! In this episode, we will be continuing our conversation on the theme of adopting elixir, and our great guest for today is Jason Axelson! Jason is a back-end developer for a mixed reality studio called Animal Repair Shop and has also made some significant contributions to the Elixir Language Server project. We kick off our conversation with Jason hearing about his programming journey and then dive into the event chat service app he helped build using Elixir while he was working at Hobnob. From there, we talk about some of his aha moments while learning Elixir and some of his favorite features about the language which he is putting to use building out the back end for Animal Repair Shop. Next, we turn our attention to Elixir Language Server and Jason weighs in on the IDE type features it offers, why he got started as a collaborator on the project, and some of their challenges in the field of shared governance. Wrapping up for today, Jason makes a few suggestions for how devs who love Elixir can convince their teams to adopt it as a more mainstream option. Tune in for a great chat on the topic of adopting Elixir!
Key Points From This Episode:
An introduction to Jason Axelson and the story of how he got into programming.
Some of the books our hosts and guests read as kids and how they relate to programming.
How Jason got into Elixir while working on a chat service for events app at Hobnob.
Jason’s current project using Elixir to build the back end for Animal Repair Shop.
What caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning it.
The TLDR version of the project that birthed ‘Road to 2 Million WebSocket Connections’.
What Jason loves about Elixir — pattern matching, immutability, explicitness.
Why Jason and his team at Animal Repair Shop are building their back end in Elixir.
The features provided by the Elixir Language Server for giving IDEs Elixir type support.
Jason’s involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture, etc.
Some of the most challenging aspects of working on ElixirLS for Jason.
Jason’s talk on ElixirLS at ElixirConf – its content, doing it virtually, and more.
New features in the pipeline for ElixirLS; formatting speed improvements and more.
The role that good tooling plays in being able to learn a language more easily.
What needs to happen for Elixir to become a more mainstream back end option.
Advice from Jason regarding ways to convince your firm to adopt Elixir.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Jason Axelson on LinkedIn — https://www.linkedin.com/in/jasonaxelson
Jason Axelson on GitHub — https://github.com/axelson
Jason Axelson on Twitter — https://twitter.com/bostonvaulter?lang=en
Privcheck by Jason Axelson — https://github.com/axelson/privcheck
Jason Axelson ElixirConf ElixirLS Talk — https://2020.elixirconf.com/speakers/126/talk
A Definitive Guide to JavaScript  — https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/
Hobnob — https://hobnob.app/
Elixir for Programmers by Dave Thomas — https://codestool.coding-gnome.com/courses/elixir-for-programmers
Animal Repair Shop — https://www.animalrepairshop.com/about/
‘Road to 2 Million WebSocket Connections’ — https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections
Elixir Getting Started Guide — https://elixir-lang.org/getting-started/introduction.html
GitHub/ElixirLP — https://github.com/elixir-lsp/elixir-ls
Adopting Elixir — https://pragprog.com/titles/tvmelixir/adopting-elixir/
Elixir Slack — https://elixir-slackin.herokuapp.com/
elixir-lsp/elixir-ls: Issue #274 — https://github.com/elixir-lsp/elixir-ls/issues/274
elixir-lsp/elixir-ls: Issue #381 — https://github.com/elixir-lsp/elixir-ls/issues/381 Special Guest: Jason Axelson.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to the Elixir Wizards podcast! In this episode, we will be continuing our conversation on the theme of adopting elixir, and our great guest for today is Jason Axelson! Jason is a back-end developer for a mixed reality studio called Animal Repair Shop and has also made some significant contributions to the Elixir Language Server project. We kick off our conversation with Jason hearing about his programming journey and then dive into the event chat service app he helped build using Elixir while he was working at Hobnob. From there, we talk about some of his aha moments while learning Elixir and some of his favorite features about the language which he is putting to use building out the back end for Animal Repair Shop. Next, we turn our attention to Elixir Language Server and Jason weighs in on the IDE type features it offers, why he got started as a collaborator on the project, and some of their challenges in the field of shared governance. Wrapping up for today, Jason makes a few suggestions for how devs who love Elixir can convince their teams to adopt it as a more mainstream option. Tune in for a great chat on the topic of adopting Elixir!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>An introduction to Jason Axelson and the story of how he got into programming.</li>
<li>Some of the books our hosts and guests read as kids and how they relate to programming.</li>
<li>How Jason got into Elixir while working on a chat service for events app at Hobnob.</li>
<li>Jason’s current project using Elixir to build the back end for Animal Repair Shop.</li>
<li>What caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning it.</li>
<li>The TLDR version of the project that birthed ‘Road to 2 Million WebSocket Connections’.</li>
<li>What Jason loves about Elixir — pattern matching, immutability, explicitness.</li>
<li>Why Jason and his team at Animal Repair Shop are building their back end in Elixir.</li>
<li>The features provided by the Elixir Language Server for giving IDEs Elixir type support.</li>
<li>Jason’s involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture, etc.</li>
<li>Some of the most challenging aspects of working on ElixirLS for Jason.</li>
<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing it virtually, and more.</li>
<li>New features in the pipeline for ElixirLS; formatting speed improvements and more.</li>
<li>The role that good tooling plays in being able to learn a language more easily.</li>
<li>What needs to happen for Elixir to become a more mainstream back end option.</li>
<li>Advice from Jason regarding ways to convince your firm to adopt Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Jason Axelson on LinkedIn — <a href="https://www.linkedin.com/in/jasonaxelson" rel="nofollow">https://www.linkedin.com/in/jasonaxelson</a><br>
Jason Axelson on GitHub — <a href="https://github.com/axelson" rel="nofollow">https://github.com/axelson</a><br>
Jason Axelson on Twitter — <a href="https://twitter.com/bostonvaulter?lang=en" rel="nofollow">https://twitter.com/bostonvaulter?lang=en</a><br>
Priv_check by Jason Axelson — <a href="https://github.com/axelson/priv_check" rel="nofollow">https://github.com/axelson/priv_check</a><br>
Jason Axelson ElixirConf ElixirLS Talk — <a href="https://2020.elixirconf.com/speakers/126/talk" rel="nofollow">https://2020.elixirconf.com/speakers/126/talk</a><br>
A Definitive Guide to JavaScript  — <a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/" rel="nofollow">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>
Hobnob — <a href="https://hobnob.app/" rel="nofollow">https://hobnob.app/</a><br>
Elixir for Programmers by Dave Thomas — <a href="https://codestool.coding-gnome.com/courses/elixir-for-programmers" rel="nofollow">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>
Animal Repair Shop — <a href="https://www.animalrepairshop.com/about/" rel="nofollow">https://www.animalrepairshop.com/about/</a><br>
‘Road to 2 Million WebSocket Connections’ — <a href="https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections" rel="nofollow">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>
Elixir Getting Started Guide — <a href="https://elixir-lang.org/getting-started/introduction.html" rel="nofollow">https://elixir-lang.org/getting-started/introduction.html</a><br>
GitHub/ElixirLP — <a href="https://github.com/elixir-lsp/elixir-ls" rel="nofollow">https://github.com/elixir-lsp/elixir-ls</a><br>
Adopting Elixir — <a href="https://pragprog.com/titles/tvmelixir/adopting-elixir/" rel="nofollow">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>
Elixir Slack — <a href="https://elixir-slackin.herokuapp.com/" rel="nofollow">https://elixir-slackin.herokuapp.com/</a><br>
elixir-lsp/elixir-ls: Issue #274 — <a href="https://github.com/elixir-lsp/elixir-ls/issues/274" rel="nofollow">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>
elixir-lsp/elixir-ls: Issue #381 — <a href="https://github.com/elixir-lsp/elixir-ls/issues/381" rel="nofollow">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special Guest: Jason Axelson.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to the Elixir Wizards podcast! In this episode, we will be continuing our conversation on the theme of adopting elixir, and our great guest for today is Jason Axelson! Jason is a back-end developer for a mixed reality studio called Animal Repair Shop and has also made some significant contributions to the Elixir Language Server project. We kick off our conversation with Jason hearing about his programming journey and then dive into the event chat service app he helped build using Elixir while he was working at Hobnob. From there, we talk about some of his aha moments while learning Elixir and some of his favorite features about the language which he is putting to use building out the back end for Animal Repair Shop. Next, we turn our attention to Elixir Language Server and Jason weighs in on the IDE type features it offers, why he got started as a collaborator on the project, and some of their challenges in the field of shared governance. Wrapping up for today, Jason makes a few suggestions for how devs who love Elixir can convince their teams to adopt it as a more mainstream option. Tune in for a great chat on the topic of adopting Elixir!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>An introduction to Jason Axelson and the story of how he got into programming.</li>
<li>Some of the books our hosts and guests read as kids and how they relate to programming.</li>
<li>How Jason got into Elixir while working on a chat service for events app at Hobnob.</li>
<li>Jason’s current project using Elixir to build the back end for Animal Repair Shop.</li>
<li>What caused Hobnob to switch to Elixir for their chat app and Jason’s aha moments learning it.</li>
<li>The TLDR version of the project that birthed ‘Road to 2 Million WebSocket Connections’.</li>
<li>What Jason loves about Elixir — pattern matching, immutability, explicitness.</li>
<li>Why Jason and his team at Animal Repair Shop are building their back end in Elixir.</li>
<li>The features provided by the Elixir Language Server for giving IDEs Elixir type support.</li>
<li>Jason’s involvement with GitHub/ElixirLSP; why he got involved, the project’s architecture, etc.</li>
<li>Some of the most challenging aspects of working on ElixirLS for Jason.</li>
<li>Jason’s talk on ElixirLS at ElixirConf – its content, doing it virtually, and more.</li>
<li>New features in the pipeline for ElixirLS; formatting speed improvements and more.</li>
<li>The role that good tooling plays in being able to learn a language more easily.</li>
<li>What needs to happen for Elixir to become a more mainstream back end option.</li>
<li>Advice from Jason regarding ways to convince your firm to adopt Elixir.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Jason Axelson on LinkedIn — <a href="https://www.linkedin.com/in/jasonaxelson" rel="nofollow">https://www.linkedin.com/in/jasonaxelson</a><br>
Jason Axelson on GitHub — <a href="https://github.com/axelson" rel="nofollow">https://github.com/axelson</a><br>
Jason Axelson on Twitter — <a href="https://twitter.com/bostonvaulter?lang=en" rel="nofollow">https://twitter.com/bostonvaulter?lang=en</a><br>
Priv_check by Jason Axelson — <a href="https://github.com/axelson/priv_check" rel="nofollow">https://github.com/axelson/priv_check</a><br>
Jason Axelson ElixirConf ElixirLS Talk — <a href="https://2020.elixirconf.com/speakers/126/talk" rel="nofollow">https://2020.elixirconf.com/speakers/126/talk</a><br>
A Definitive Guide to JavaScript  — <a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/" rel="nofollow">https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/</a><br>
Hobnob — <a href="https://hobnob.app/" rel="nofollow">https://hobnob.app/</a><br>
Elixir for Programmers by Dave Thomas — <a href="https://codestool.coding-gnome.com/courses/elixir-for-programmers" rel="nofollow">https://codestool.coding-gnome.com/courses/elixir-for-programmers</a><br>
Animal Repair Shop — <a href="https://www.animalrepairshop.com/about/" rel="nofollow">https://www.animalrepairshop.com/about/</a><br>
‘Road to 2 Million WebSocket Connections’ — <a href="https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections" rel="nofollow">https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections</a><br>
Elixir Getting Started Guide — <a href="https://elixir-lang.org/getting-started/introduction.html" rel="nofollow">https://elixir-lang.org/getting-started/introduction.html</a><br>
GitHub/ElixirLP — <a href="https://github.com/elixir-lsp/elixir-ls" rel="nofollow">https://github.com/elixir-lsp/elixir-ls</a><br>
Adopting Elixir — <a href="https://pragprog.com/titles/tvmelixir/adopting-elixir/" rel="nofollow">https://pragprog.com/titles/tvmelixir/adopting-elixir/</a><br>
Elixir Slack — <a href="https://elixir-slackin.herokuapp.com/" rel="nofollow">https://elixir-slackin.herokuapp.com/</a><br>
elixir-lsp/elixir-ls: Issue #274 — <a href="https://github.com/elixir-lsp/elixir-ls/issues/274" rel="nofollow">https://github.com/elixir-lsp/elixir-ls/issues/274</a><br>
elixir-lsp/elixir-ls: Issue #381 — <a href="https://github.com/elixir-lsp/elixir-ls/issues/381" rel="nofollow">https://github.com/elixir-lsp/elixir-ls/issues/381</a></p><p>Special Guest: Jason Axelson.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Steve Domin on Innovating Travel APIs</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e6-domin</link>
      <guid isPermaLink="false">6d2c98f6-1ba5-4003-8e4a-d98265dccd91</guid>
      <pubDate>Fri, 08 Jan 2021 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6d2c98f6-1ba5-4003-8e4a-d98265dccd91.mp3" length="27767287" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>The travel industry is in desperate need of innovation from systems that were built in the 70s. Today Steve Domin talks about how Duffel is building tech that can finally align travel with modern consumers.</itunes:subtitle>
      <itunes:duration>38:33</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6d2c98f6-1ba5-4003-8e4a-d98265dccd91/cover.jpg" />
      <description>Anyone who has written software for the travel industry can tell you that it is in desperate need of innovation — shockingly many of their cobwebbed systems were built in the 70s. Today we speak with Duffel CEO Steve Domin, who is building tech that can finally align travel with the expectations of modern consumers. We open by exploring Steve’s journey into coding before diving into how Duffel is innovating travel. After touching on how the pandemic has impacted Duffel’s roll-out, Steve shares horror stories about the outdated tech and API systems that airlines use. We discuss Duffel’s service offerings and why Elixir is uniquely suited to solve the problems that Steve’s company is addressing. Steve then talks about the types of engineers that Duffel hires, his client base, and where his company is heading. Near the end of the episode, we ask Steve for his advice on selling your company on Elixir and we chat about the status of the London Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make travel an effortless experience.  
Key Points From This Episode:
Introducing Duffel CEO Steve Domin. 
Steve shares details about his coding journey and career highlights. 
Insights into the old school ecosystem of Flash, Flex, and ActionScript.
Exploring how Duffel is innovating the travel industry. 
Why Duffel accelerated their roll-out due to the pandemic. 
Steve unpacks the outdated tech and API systems that airlines use. 
Why Duffel decided to use Elixir to tackle their problems.
The benefits of using Elixir when dealing with airline data. 
Steve gives listeners an overview of Duffel’s pipeline. 
Insights into the types of engineers that Duffel hires. 
Who Duffel’s clients are and how they’re onboarded.
Steve reflects on some airline API horror stories.
Hear about Duffel’s roadmap — the future is bright.
What Elixir has uniquely enabled Duffel to do.
Steve’s advice on selling Elixir to stakeholders in your company.
The status of the London Elixir Meetup.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/
Steve Domin — https://stevedomin.com/about
Steve Domin on LinkedIn — https://www.linkedin.com/in/stevedomin/
Steve Domin on Twitter — https://twitter.com/stevedomin
Duffel — https://duffel.com/
Duffel Careers — https://duffel.com/careers
José Valim — https://twitter.com/josevalim
Flex — https://www.adobe.com/products/flex.html
Passenger Service System — https://en.wikipedia.org/wiki/Passengerservicesystem
Global Distribution System — https://en.wikipedia.org/wiki/Globaldistributionsystem
Sabre — https://www.sabre.com/
Amadeus — https://amadeus.com/en
‘Why does NDC matter to my travel business?’ — https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business
IATA — https://www.iata.org/
Next.js — https://nextjs.org/
GoCardless — https://gocardless.com/
Twilio — https://www.twilio.com/
Stripe — https://stripe.com/
Thomas Bates — https://www.linkedin.com/in/thomas-bates-3908a74b/
Elixir London Meetup — https://www.meetup.com/Elixir-London/
Baris Balic — https://twitter.com/barisbalic Special Guest: Steve Domin.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Anyone who has written software for the travel industry can tell you that it is in desperate need of innovation — shockingly many of their cobwebbed systems were built in the 70s. Today we speak with Duffel CEO Steve Domin, who is building tech that can finally align travel with the expectations of modern consumers. We open by exploring Steve’s journey into coding before diving into how Duffel is innovating travel. After touching on how the pandemic has impacted Duffel’s roll-out, Steve shares horror stories about the outdated tech and API systems that airlines use. We discuss Duffel’s service offerings and why Elixir is uniquely suited to solve the problems that Steve’s company is addressing. Steve then talks about the types of engineers that Duffel hires, his client base, and where his company is heading. Near the end of the episode, we ask Steve for his advice on selling your company on Elixir and we chat about the status of the London Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make travel an effortless experience.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Duffel CEO Steve Domin. </li>
<li>Steve shares details about his coding journey and career highlights. </li>
<li>Insights into the old school ecosystem of Flash, Flex, and ActionScript.</li>
<li>Exploring how Duffel is innovating the travel industry. </li>
<li>Why Duffel accelerated their roll-out due to the pandemic. </li>
<li>Steve unpacks the outdated tech and API systems that airlines use. </li>
<li>Why Duffel decided to use Elixir to tackle their problems.</li>
<li>The benefits of using Elixir when dealing with airline data. </li>
<li>Steve gives listeners an overview of Duffel’s pipeline. </li>
<li>Insights into the types of engineers that Duffel hires. </li>
<li>Who Duffel’s clients are and how they’re onboarded.</li>
<li>Steve reflects on some airline API horror stories.</li>
<li>Hear about Duffel’s roadmap — the future is bright.</li>
<li>What Elixir has uniquely enabled Duffel to do.</li>
<li>Steve’s advice on selling Elixir to stakeholders in your company.</li>
<li>The status of the London Elixir Meetup.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Steve Domin — <a href="https://stevedomin.com/about" rel="nofollow">https://stevedomin.com/about</a><br>
Steve Domin on LinkedIn — <a href="https://www.linkedin.com/in/stevedomin/" rel="nofollow">https://www.linkedin.com/in/stevedomin/</a><br>
Steve Domin on Twitter — <a href="https://twitter.com/stevedomin" rel="nofollow">https://twitter.com/stevedomin</a><br>
Duffel — <a href="https://duffel.com/" rel="nofollow">https://duffel.com/</a><br>
Duffel Careers — <a href="https://duffel.com/careers" rel="nofollow">https://duffel.com/careers</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Flex — <a href="https://www.adobe.com/products/flex.html" rel="nofollow">https://www.adobe.com/products/flex.html</a><br>
Passenger Service System — <a href="https://en.wikipedia.org/wiki/Passenger_service_system" rel="nofollow">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>
Global Distribution System — <a href="https://en.wikipedia.org/wiki/Global_distribution_system" rel="nofollow">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>
Sabre — <a href="https://www.sabre.com/" rel="nofollow">https://www.sabre.com/</a><br>
Amadeus — <a href="https://amadeus.com/en" rel="nofollow">https://amadeus.com/en</a><br>
‘Why does NDC matter to my travel business?’ — <a href="https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business" rel="nofollow">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>
IATA — <a href="https://www.iata.org/" rel="nofollow">https://www.iata.org/</a><br>
Next.js — <a href="https://nextjs.org/" rel="nofollow">https://nextjs.org/</a><br>
GoCardless — <a href="https://gocardless.com/" rel="nofollow">https://gocardless.com/</a><br>
Twilio — <a href="https://www.twilio.com/" rel="nofollow">https://www.twilio.com/</a><br>
Stripe — <a href="https://stripe.com/" rel="nofollow">https://stripe.com/</a><br>
Thomas Bates — <a href="https://www.linkedin.com/in/thomas-bates-3908a74b/" rel="nofollow">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>
Elixir London Meetup — <a href="https://www.meetup.com/Elixir-London/" rel="nofollow">https://www.meetup.com/Elixir-London/</a><br>
Baris Balic — <a href="https://twitter.com/barisbalic" rel="nofollow">https://twitter.com/barisbalic</a></p><p>Special Guest: Steve Domin.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Anyone who has written software for the travel industry can tell you that it is in desperate need of innovation — shockingly many of their cobwebbed systems were built in the 70s. Today we speak with Duffel CEO Steve Domin, who is building tech that can finally align travel with the expectations of modern consumers. We open by exploring Steve’s journey into coding before diving into how Duffel is innovating travel. After touching on how the pandemic has impacted Duffel’s roll-out, Steve shares horror stories about the outdated tech and API systems that airlines use. We discuss Duffel’s service offerings and why Elixir is uniquely suited to solve the problems that Steve’s company is addressing. Steve then talks about the types of engineers that Duffel hires, his client base, and where his company is heading. Near the end of the episode, we ask Steve for his advice on selling your company on Elixir and we chat about the status of the London Elixir Meetup. Tune in for more insights on how Steve is using Elixir to make travel an effortless experience.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Duffel CEO Steve Domin. </li>
<li>Steve shares details about his coding journey and career highlights. </li>
<li>Insights into the old school ecosystem of Flash, Flex, and ActionScript.</li>
<li>Exploring how Duffel is innovating the travel industry. </li>
<li>Why Duffel accelerated their roll-out due to the pandemic. </li>
<li>Steve unpacks the outdated tech and API systems that airlines use. </li>
<li>Why Duffel decided to use Elixir to tackle their problems.</li>
<li>The benefits of using Elixir when dealing with airline data. </li>
<li>Steve gives listeners an overview of Duffel’s pipeline. </li>
<li>Insights into the types of engineers that Duffel hires. </li>
<li>Who Duffel’s clients are and how they’re onboarded.</li>
<li>Steve reflects on some airline API horror stories.</li>
<li>Hear about Duffel’s roadmap — the future is bright.</li>
<li>What Elixir has uniquely enabled Duffel to do.</li>
<li>Steve’s advice on selling Elixir to stakeholders in your company.</li>
<li>The status of the London Elixir Meetup.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
Steve Domin — <a href="https://stevedomin.com/about" rel="nofollow">https://stevedomin.com/about</a><br>
Steve Domin on LinkedIn — <a href="https://www.linkedin.com/in/stevedomin/" rel="nofollow">https://www.linkedin.com/in/stevedomin/</a><br>
Steve Domin on Twitter — <a href="https://twitter.com/stevedomin" rel="nofollow">https://twitter.com/stevedomin</a><br>
Duffel — <a href="https://duffel.com/" rel="nofollow">https://duffel.com/</a><br>
Duffel Careers — <a href="https://duffel.com/careers" rel="nofollow">https://duffel.com/careers</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Flex — <a href="https://www.adobe.com/products/flex.html" rel="nofollow">https://www.adobe.com/products/flex.html</a><br>
Passenger Service System — <a href="https://en.wikipedia.org/wiki/Passenger_service_system" rel="nofollow">https://en.wikipedia.org/wiki/Passenger_service_system</a><br>
Global Distribution System — <a href="https://en.wikipedia.org/wiki/Global_distribution_system" rel="nofollow">https://en.wikipedia.org/wiki/Global_distribution_system</a><br>
Sabre — <a href="https://www.sabre.com/" rel="nofollow">https://www.sabre.com/</a><br>
Amadeus — <a href="https://amadeus.com/en" rel="nofollow">https://amadeus.com/en</a><br>
‘Why does NDC matter to my travel business?’ — <a href="https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business" rel="nofollow">https://duffel.com/blog/why-does-ndc-matter-to-my-travel-business</a><br>
IATA — <a href="https://www.iata.org/" rel="nofollow">https://www.iata.org/</a><br>
Next.js — <a href="https://nextjs.org/" rel="nofollow">https://nextjs.org/</a><br>
GoCardless — <a href="https://gocardless.com/" rel="nofollow">https://gocardless.com/</a><br>
Twilio — <a href="https://www.twilio.com/" rel="nofollow">https://www.twilio.com/</a><br>
Stripe — <a href="https://stripe.com/" rel="nofollow">https://stripe.com/</a><br>
Thomas Bates — <a href="https://www.linkedin.com/in/thomas-bates-3908a74b/" rel="nofollow">https://www.linkedin.com/in/thomas-bates-3908a74b/</a><br>
Elixir London Meetup — <a href="https://www.meetup.com/Elixir-London/" rel="nofollow">https://www.meetup.com/Elixir-London/</a><br>
Baris Balic — <a href="https://twitter.com/barisbalic" rel="nofollow">https://twitter.com/barisbalic</a></p><p>Special Guest: Steve Domin.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Shawn Vo on Elixir as a Competitive Advantage</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e5-vo</link>
      <guid isPermaLink="false">a15c1f14-3ae4-4a02-a642-a03ab3e11660</guid>
      <pubDate>Tue, 29 Dec 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a15c1f14-3ae4-4a02-a642-a03ab3e11660.mp3" length="37436800" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and how it has given his company a competitive advantage.</itunes:subtitle>
      <itunes:duration>38:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a15c1f14-3ae4-4a02-a642-a03ab3e11660/cover.jpg" />
      <description>To beat out their competitors, startups need to code quickly, simply, and in a language that attracts top engineers. Enter Elixir. Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and how it has given his company a competitive advantage. We open our conversation by exploring how Shawn got into coding while automating his work as an investment banker. After touching on why he sees programming as a superpower for adding value, he shares his growth hacks for learning a language — these range from reading old books to attending coding meetups. We then dive into Axle Payments’ business model, with Shawn highlighting the business opportunity of creating tech for industries that “people don’t think about.” A key theme in this episode, Shawn talks about how building in Elixir has helped Axle Payments hire the best engineers. We also discuss how Elixir allows them to quickly and efficiently write code that doesn’t break. Near the end of the episode, we explore Shawn’s browser extension projects and why he has a readme file to help guide people who want to work with him. Be sure to tune in to hear more insight from Shawn on the benefits of using Elixir in the startup space. 
Key Points From This Episode:
Introducing Axle Payments CTO Shawn Vo. 
From investment banking to coding, hear how Shawn got into our industry. 
Why coding and creating content are top ways of creating value. 
Reading books and getting into the fundamentals; tips on how Shawn learns a language. 
Shawn shares details about his professional career.
How Shawn grew his skills by attending coding meetups.
Hear about Axle Payments’ model providing a factoring service.  
How Shawn discovered and fell in love with Elixir. 
Why Elixir has given Axle Payments their competitive advantage. 
Shawn reflects on his first Elixir project. 
The benefits of using event sourcing to build your app.
Why Shawn created a readme to guide people who want to work with him.
Shawn summarizes why Elixir is the perfect language for his company. 
Links Mentioned in Today’s Episode:
Shawn Vo on LinkedIn — https://www.linkedin.com/in/shawnvo/
Shawn Vo on Twitter — https://twitter.com/shawnvo
Shawn Vo on GitHub — https://github.com/voshawn
Shawn Vo Email — shawn@axlepayments.com
Axle Payments — https://www.axlepayments.com/
The Technical Cofounder Newsletter — https://technicalcofounder.substack.com/
Meryl Dakin — https://twitter.com/meryldakin
WALL-E — https://www.imdb.com/title/tt0910970/
Barclays Investment Bank — https://www.investmentbank.barclays.com/
The Climate Corporation — https://www.climate.com/
The Monsanto Company — https://www.cropscience.bayer.com/
Federal Deposit Insurance Corporation — https://www.fdic.gov/
Deep Learning NYC — https://www.meetup.com/Deep-Learning-NYC/
Baltimore AI Meetup — https://www.meetup.com/Baltimore-AI/
Fast.ai — https://www.fast.ai/
Megabus — https://www.megabus.com/
Greyhound — https://www.greyhound.com/
Techstars — https://www.techstars.com/
Peter Thiel — https://www.forbes.com/profile/peter-thiel/
WeWork — https://www.wework.com/
Paul Graham — http://www.paulgraham.com/
Y Combinator — https://www.ycombinator.com/
‘The Python Paradox’ — http://www.paulgraham.com/pypar.html
Heroku — https://www.heroku.com/
Sessionizer — https://sessionize-me.herokuapp.com/
Hamilton — https://hamiltonmusical.com/new-york/home/
Slack — https://slack.com/
Phoenix — https://hexdocs.pm/phoenix/overview.html
Commanded — https://hexdocs.pm/commanded/Commanded.html
The Social Dilemma — https://www.imdb.com/title/tt11464826/ Special Guest: Shawn Vo.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>To beat out their competitors, startups need to code quickly, simply, and in a language that attracts top engineers. Enter Elixir. Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and how it has given his company a competitive advantage. We open our conversation by exploring how Shawn got into coding while automating his work as an investment banker. After touching on why he sees programming as a superpower for adding value, he shares his growth hacks for learning a language — these range from reading old books to attending coding meetups. We then dive into Axle Payments’ business model, with Shawn highlighting the business opportunity of creating tech for industries that “people don’t think about.” A key theme in this episode, Shawn talks about how building in Elixir has helped Axle Payments hire the best engineers. We also discuss how Elixir allows them to quickly and efficiently write code that doesn’t break. Near the end of the episode, we explore Shawn’s browser extension projects and why he has a readme file to help guide people who want to work with him. Be sure to tune in to hear more insight from Shawn on the benefits of using Elixir in the startup space. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Axle Payments CTO Shawn Vo. </li>
<li>From investment banking to coding, hear how Shawn got into our industry. </li>
<li>Why coding and creating content are top ways of creating value. </li>
<li>Reading books and getting into the fundamentals; tips on how Shawn learns a language. </li>
<li>Shawn shares details about his professional career.</li>
<li>How Shawn grew his skills by attending coding meetups.</li>
<li>Hear about Axle Payments’ model providing a factoring service.<br></li>
<li>How Shawn discovered and fell in love with Elixir. </li>
<li>Why Elixir has given Axle Payments their competitive advantage. </li>
<li>Shawn reflects on his first Elixir project. </li>
<li>The benefits of using event sourcing to build your app.</li>
<li>Why Shawn created a readme to guide people who want to work with him.</li>
<li>Shawn summarizes why Elixir is the perfect language for his company. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Shawn Vo on LinkedIn — <a href="https://www.linkedin.com/in/shawnvo/" rel="nofollow">https://www.linkedin.com/in/shawnvo/</a><br>
Shawn Vo on Twitter — <a href="https://twitter.com/shawnvo" rel="nofollow">https://twitter.com/shawnvo</a><br>
Shawn Vo on GitHub — <a href="https://github.com/voshawn" rel="nofollow">https://github.com/voshawn</a><br>
Shawn Vo Email — <a href="mailto:shawn@axlepayments.com" rel="nofollow">shawn@axlepayments.com</a><br>
Axle Payments — <a href="https://www.axlepayments.com/" rel="nofollow">https://www.axlepayments.com/</a><br>
The Technical Cofounder Newsletter — <a href="https://technicalcofounder.substack.com/" rel="nofollow">https://technicalcofounder.substack.com/</a><br>
Meryl Dakin — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
WALL-E — <a href="https://www.imdb.com/title/tt0910970/" rel="nofollow">https://www.imdb.com/title/tt0910970/</a><br>
Barclays Investment Bank — <a href="https://www.investmentbank.barclays.com/" rel="nofollow">https://www.investmentbank.barclays.com/</a><br>
The Climate Corporation — <a href="https://www.climate.com/" rel="nofollow">https://www.climate.com/</a><br>
The Monsanto Company — <a href="https://www.cropscience.bayer.com/" rel="nofollow">https://www.cropscience.bayer.com/</a><br>
Federal Deposit Insurance Corporation — <a href="https://www.fdic.gov/" rel="nofollow">https://www.fdic.gov/</a><br>
Deep Learning NYC — <a href="https://www.meetup.com/Deep-Learning-NYC/" rel="nofollow">https://www.meetup.com/Deep-Learning-NYC/</a><br>
Baltimore AI Meetup — <a href="https://www.meetup.com/Baltimore-AI/" rel="nofollow">https://www.meetup.com/Baltimore-AI/</a><br>
Fast.ai — <a href="https://www.fast.ai/" rel="nofollow">https://www.fast.ai/</a><br>
Megabus — <a href="https://www.megabus.com/" rel="nofollow">https://www.megabus.com/</a><br>
Greyhound — <a href="https://www.greyhound.com/" rel="nofollow">https://www.greyhound.com/</a><br>
Techstars — <a href="https://www.techstars.com/" rel="nofollow">https://www.techstars.com/</a><br>
Peter Thiel — <a href="https://www.forbes.com/profile/peter-thiel/" rel="nofollow">https://www.forbes.com/profile/peter-thiel/</a><br>
WeWork — <a href="https://www.wework.com/" rel="nofollow">https://www.wework.com/</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Y Combinator — <a href="https://www.ycombinator.com/" rel="nofollow">https://www.ycombinator.com/</a><br>
‘The Python Paradox’ — <a href="http://www.paulgraham.com/pypar.html" rel="nofollow">http://www.paulgraham.com/pypar.html</a><br>
Heroku — <a href="https://www.heroku.com/" rel="nofollow">https://www.heroku.com/</a><br>
Sessionizer — <a href="https://sessionize-me.herokuapp.com/" rel="nofollow">https://sessionize-me.herokuapp.com/</a><br>
Hamilton — <a href="https://hamiltonmusical.com/new-york/home/" rel="nofollow">https://hamiltonmusical.com/new-york/home/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
Phoenix — <a href="https://hexdocs.pm/phoenix/overview.html" rel="nofollow">https://hexdocs.pm/phoenix/overview.html</a><br>
Commanded — <a href="https://hexdocs.pm/commanded/Commanded.html" rel="nofollow">https://hexdocs.pm/commanded/Commanded.html</a><br>
The Social Dilemma — <a href="https://www.imdb.com/title/tt11464826/" rel="nofollow">https://www.imdb.com/title/tt11464826/</a></p><p>Special Guest: Shawn Vo.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>To beat out their competitors, startups need to code quickly, simply, and in a language that attracts top engineers. Enter Elixir. Today we speak with Shawn Vo, Axle Payments Co-Founder and CTO, about his journey with Elixir and how it has given his company a competitive advantage. We open our conversation by exploring how Shawn got into coding while automating his work as an investment banker. After touching on why he sees programming as a superpower for adding value, he shares his growth hacks for learning a language — these range from reading old books to attending coding meetups. We then dive into Axle Payments’ business model, with Shawn highlighting the business opportunity of creating tech for industries that “people don’t think about.” A key theme in this episode, Shawn talks about how building in Elixir has helped Axle Payments hire the best engineers. We also discuss how Elixir allows them to quickly and efficiently write code that doesn’t break. Near the end of the episode, we explore Shawn’s browser extension projects and why he has a readme file to help guide people who want to work with him. Be sure to tune in to hear more insight from Shawn on the benefits of using Elixir in the startup space. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Axle Payments CTO Shawn Vo. </li>
<li>From investment banking to coding, hear how Shawn got into our industry. </li>
<li>Why coding and creating content are top ways of creating value. </li>
<li>Reading books and getting into the fundamentals; tips on how Shawn learns a language. </li>
<li>Shawn shares details about his professional career.</li>
<li>How Shawn grew his skills by attending coding meetups.</li>
<li>Hear about Axle Payments’ model providing a factoring service.<br></li>
<li>How Shawn discovered and fell in love with Elixir. </li>
<li>Why Elixir has given Axle Payments their competitive advantage. </li>
<li>Shawn reflects on his first Elixir project. </li>
<li>The benefits of using event sourcing to build your app.</li>
<li>Why Shawn created a readme to guide people who want to work with him.</li>
<li>Shawn summarizes why Elixir is the perfect language for his company. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Shawn Vo on LinkedIn — <a href="https://www.linkedin.com/in/shawnvo/" rel="nofollow">https://www.linkedin.com/in/shawnvo/</a><br>
Shawn Vo on Twitter — <a href="https://twitter.com/shawnvo" rel="nofollow">https://twitter.com/shawnvo</a><br>
Shawn Vo on GitHub — <a href="https://github.com/voshawn" rel="nofollow">https://github.com/voshawn</a><br>
Shawn Vo Email — <a href="mailto:shawn@axlepayments.com" rel="nofollow">shawn@axlepayments.com</a><br>
Axle Payments — <a href="https://www.axlepayments.com/" rel="nofollow">https://www.axlepayments.com/</a><br>
The Technical Cofounder Newsletter — <a href="https://technicalcofounder.substack.com/" rel="nofollow">https://technicalcofounder.substack.com/</a><br>
Meryl Dakin — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
WALL-E — <a href="https://www.imdb.com/title/tt0910970/" rel="nofollow">https://www.imdb.com/title/tt0910970/</a><br>
Barclays Investment Bank — <a href="https://www.investmentbank.barclays.com/" rel="nofollow">https://www.investmentbank.barclays.com/</a><br>
The Climate Corporation — <a href="https://www.climate.com/" rel="nofollow">https://www.climate.com/</a><br>
The Monsanto Company — <a href="https://www.cropscience.bayer.com/" rel="nofollow">https://www.cropscience.bayer.com/</a><br>
Federal Deposit Insurance Corporation — <a href="https://www.fdic.gov/" rel="nofollow">https://www.fdic.gov/</a><br>
Deep Learning NYC — <a href="https://www.meetup.com/Deep-Learning-NYC/" rel="nofollow">https://www.meetup.com/Deep-Learning-NYC/</a><br>
Baltimore AI Meetup — <a href="https://www.meetup.com/Baltimore-AI/" rel="nofollow">https://www.meetup.com/Baltimore-AI/</a><br>
Fast.ai — <a href="https://www.fast.ai/" rel="nofollow">https://www.fast.ai/</a><br>
Megabus — <a href="https://www.megabus.com/" rel="nofollow">https://www.megabus.com/</a><br>
Greyhound — <a href="https://www.greyhound.com/" rel="nofollow">https://www.greyhound.com/</a><br>
Techstars — <a href="https://www.techstars.com/" rel="nofollow">https://www.techstars.com/</a><br>
Peter Thiel — <a href="https://www.forbes.com/profile/peter-thiel/" rel="nofollow">https://www.forbes.com/profile/peter-thiel/</a><br>
WeWork — <a href="https://www.wework.com/" rel="nofollow">https://www.wework.com/</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Y Combinator — <a href="https://www.ycombinator.com/" rel="nofollow">https://www.ycombinator.com/</a><br>
‘The Python Paradox’ — <a href="http://www.paulgraham.com/pypar.html" rel="nofollow">http://www.paulgraham.com/pypar.html</a><br>
Heroku — <a href="https://www.heroku.com/" rel="nofollow">https://www.heroku.com/</a><br>
Sessionizer — <a href="https://sessionize-me.herokuapp.com/" rel="nofollow">https://sessionize-me.herokuapp.com/</a><br>
Hamilton — <a href="https://hamiltonmusical.com/new-york/home/" rel="nofollow">https://hamiltonmusical.com/new-york/home/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
Phoenix — <a href="https://hexdocs.pm/phoenix/overview.html" rel="nofollow">https://hexdocs.pm/phoenix/overview.html</a><br>
Commanded — <a href="https://hexdocs.pm/commanded/Commanded.html" rel="nofollow">https://hexdocs.pm/commanded/Commanded.html</a><br>
The Social Dilemma — <a href="https://www.imdb.com/title/tt11464826/" rel="nofollow">https://www.imdb.com/title/tt11464826/</a></p><p>Special Guest: Shawn Vo.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Viktória Fördős on Erlang</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e4-fordos</link>
      <guid isPermaLink="false">6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b</guid>
      <pubDate>Tue, 22 Dec 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b.mp3" length="46411863" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we sit down with Erlanger Viktória Fördős, who talks with us about Erlang and how it is used at Cisco.</itunes:subtitle>
      <itunes:duration>47:20</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6e5cd223-dc2c-42ee-9c40-d7e778b4ee9b/cover.jpg" />
      <description>Today we sit down with Erlanger Viktória Fördős, who talks with us about Erlang and how it is used at Cisco. We open the show by finding out about Viki’s background in coding and her unorthodox entry into the field. After hearing about her experiences in her school choir and her transition into the informatics faculty, Viki talks to us about her first experiences in coding and the thrills she found in it. She then expands on the topic, revealing how she approached people to build their websites using her newfound skills in HTML and PHP. A flash-forward later, and Viki shares details about her role as an NSO Core Engineer for Cisco. After hearing how NSO serves as a network operating system, device automation platform, and orchestration engine, Viki explains why NSO is so special. She touches on fast map-based service and some of the ways she and her team implement network-wide transactions using — you guessed it — Erlang. Viki then explains Erlang, how you should approach it if you’re a newbie, and what to expect from its biggest challenges. She elaborates on tail-recursive functions and high-level vulnerabilities concerned with SSL crypto libraries, system integrity, and atom tables. Toward the end of the show, we ask Viki to tell us about her Code BEAM presentation and about her thoughts on why academia and industry should collaborate on a more regular basis. Join us today and be treated to an enriching conversation about Erlang, as well as our secret mini-feature segment!
Key Points From This Episode:
Introducing today’s guest, Viki Fördős from Cisco.
A snapshot of Viki’s unorthodox background in coding.
Viki shares details about early experiences learning Basic.
Hear about Viki’s first programming job out of college.
Viki’s position as a core engineer for the NSO team at Cisco.
Find out what the NSO team at Cisco does.
Insights into the patented algorithm, “fast map.”
How Viki started to use Erlang on a day-to-day basis.
Ways you can start thinking in Erlang from an Elixir background.
The kinds of issues Viki runs into when spawning too many processes.
What Erlang has to offer that other languages cannot.
Viki’s biggest challenges when she first started learning Erlang.
The elevator pitch Viki uses when she encourages friends and colleagues to use Erlang.
Distribution protocols and what they mean to Erlang newbies.
Hear about the high-level vulnerabilities you ought to pay attention to when coding in Erlang.
Introducing Christian Koch, today’s mini-feature segment guest.
How Chris first got into Elixir. 
How Elixir is being used by platform engineers at Cars.com.
Why Elixir was chosen as the end-game language to be used at Cars.com
The process behind onboarding coders onto Chris’s Elixir team.
Viki’s best advice to those wanting to give a Code BEAM talk.
Hear about refactoring and how it works.
What Viki means by, “research being consumed by industry.”
Links Mentioned in Today’s Episode:
Viktória Fördős - https://github.com/viktoriafordos 
Cisco — https://www.cisco.com/ 
EW20 — https://github.com/viktoriafordos/ew20 Prototype implementation of the security analysis introduced in V. Fördős: Secure Design and Verification of Erlang Systems paper
Christian Koch — https://www.linkedin.com/in/ckochx/ 
Cars.com — https://www.cars.com/
BASIC —  https://en.wikipedia.org/wiki/BASIC
Cisco NSO — https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html
Think in Erlang! - Viktória Fördős — https://www.youtube.com/watch?v=bYkOsQU2ywM
Erlang general server — https://erlang.org/doc/man/genserver.html
Erland Reference Manual — https://erlang.org/doc/referencemanual/distributed.html
4 Using TLS — https://erlang.org/doc/apps/ssl/ssldistribution.html
Erland System Limits — http://erlang.org/doc/efficiencyguide/advanced.html#system-limits
Hexdocs — https://hexdocs.pm/elixir/String.html#toexistingatom/1
RefactorErl — https://plc.inf.elte.hu/erlang/
Pipedream on GitHub — https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md Special Guest: Viktória Fördős.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today we sit down with Erlanger Viktória Fördős, who talks with us about Erlang and how it is used at Cisco. We open the show by finding out about Viki’s background in coding and her unorthodox entry into the field. After hearing about her experiences in her school choir and her transition into the informatics faculty, Viki talks to us about her first experiences in coding and the thrills she found in it. She then expands on the topic, revealing how she approached people to build their websites using her newfound skills in HTML and PHP. A flash-forward later, and Viki shares details about her role as an NSO Core Engineer for Cisco. After hearing how NSO serves as a network operating system, device automation platform, and orchestration engine, Viki explains why NSO is so special. She touches on fast map-based service and some of the ways she and her team implement network-wide transactions using — you guessed it — Erlang. Viki then explains Erlang, how you should approach it if you’re a newbie, and what to expect from its biggest challenges. She elaborates on tail-recursive functions and high-level vulnerabilities concerned with SSL crypto libraries, system integrity, and atom tables. Toward the end of the show, we ask Viki to tell us about her Code BEAM presentation and about her thoughts on why academia and industry should collaborate on a more regular basis. Join us today and be treated to an enriching conversation about Erlang, as well as our secret mini-feature segment!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest, Viki Fördős from Cisco.</li>
<li>A snapshot of Viki’s unorthodox background in coding.</li>
<li>Viki shares details about early experiences learning Basic.</li>
<li>Hear about Viki’s first programming job out of college.</li>
<li>Viki’s position as a core engineer for the NSO team at Cisco.</li>
<li>Find out what the NSO team at Cisco does.</li>
<li>Insights into the patented algorithm, “fast map.”</li>
<li>How Viki started to use Erlang on a day-to-day basis.</li>
<li>Ways you can start thinking in Erlang from an Elixir background.</li>
<li>The kinds of issues Viki runs into when spawning too many processes.</li>
<li>What Erlang has to offer that other languages cannot.</li>
<li>Viki’s biggest challenges when she first started learning Erlang.</li>
<li>The elevator pitch Viki uses when she encourages friends and colleagues to use Erlang.</li>
<li>Distribution protocols and what they mean to Erlang newbies.</li>
<li>Hear about the high-level vulnerabilities you ought to pay attention to when coding in Erlang.</li>
<li>Introducing Christian Koch, today’s mini-feature segment guest.</li>
<li>How Chris first got into Elixir. </li>
<li>How Elixir is being used by platform engineers at Cars.com.</li>
<li>Why Elixir was chosen as the end-game language to be used at Cars.com</li>
<li>The process behind onboarding coders onto Chris’s Elixir team.</li>
<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>
<li>Hear about refactoring and how it works.</li>
<li>What Viki means by, “research being consumed by industry.”</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Viktória Fördős - <a href="https://github.com/viktoriafordos" rel="nofollow">https://github.com/viktoriafordos</a> <br>
Cisco — <a href="https://www.cisco.com/" rel="nofollow">https://www.cisco.com/</a> <br>
EW20 — <a href="https://github.com/viktoriafordos/ew20" rel="nofollow">https://github.com/viktoriafordos/ew20</a> Prototype implementation of the security analysis introduced in V. Fördős: Secure Design and Verification of Erlang Systems paper<br>
Christian Koch — <a href="https://www.linkedin.com/in/ckochx/" rel="nofollow">https://www.linkedin.com/in/ckochx/</a> <br>
Cars.com — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
BASIC —  <a href="https://en.wikipedia.org/wiki/BASIC" rel="nofollow">https://en.wikipedia.org/wiki/BASIC</a><br>
Cisco NSO — <a href="https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html" rel="nofollow">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>
Think in Erlang! - Viktória Fördős — <a href="https://www.youtube.com/watch?v=bYkOsQU2ywM" rel="nofollow">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>
Erlang general server — <a href="https://erlang.org/doc/man/gen_server.html" rel="nofollow">https://erlang.org/doc/man/gen_server.html</a><br>
Erland Reference Manual — <a href="https://erlang.org/doc/reference_manual/distributed.html" rel="nofollow">https://erlang.org/doc/reference_manual/distributed.html</a><br>
4 Using TLS — <a href="https://erlang.org/doc/apps/ssl/ssl_distribution.html" rel="nofollow">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>
Erland System Limits — <a href="http://erlang.org/doc/efficiency_guide/advanced.html#system-limits" rel="nofollow">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>
Hexdocs — <a href="https://hexdocs.pm/elixir/String.html#to_existing_atom/1" rel="nofollow">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>
RefactorErl — <a href="https://plc.inf.elte.hu/erlang/" rel="nofollow">https://plc.inf.elte.hu/erlang/</a><br>
Pipedream on GitHub — <a href="https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md" rel="nofollow">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special Guest: Viktória Fördős.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today we sit down with Erlanger Viktória Fördős, who talks with us about Erlang and how it is used at Cisco. We open the show by finding out about Viki’s background in coding and her unorthodox entry into the field. After hearing about her experiences in her school choir and her transition into the informatics faculty, Viki talks to us about her first experiences in coding and the thrills she found in it. She then expands on the topic, revealing how she approached people to build their websites using her newfound skills in HTML and PHP. A flash-forward later, and Viki shares details about her role as an NSO Core Engineer for Cisco. After hearing how NSO serves as a network operating system, device automation platform, and orchestration engine, Viki explains why NSO is so special. She touches on fast map-based service and some of the ways she and her team implement network-wide transactions using — you guessed it — Erlang. Viki then explains Erlang, how you should approach it if you’re a newbie, and what to expect from its biggest challenges. She elaborates on tail-recursive functions and high-level vulnerabilities concerned with SSL crypto libraries, system integrity, and atom tables. Toward the end of the show, we ask Viki to tell us about her Code BEAM presentation and about her thoughts on why academia and industry should collaborate on a more regular basis. Join us today and be treated to an enriching conversation about Erlang, as well as our secret mini-feature segment!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing today’s guest, Viki Fördős from Cisco.</li>
<li>A snapshot of Viki’s unorthodox background in coding.</li>
<li>Viki shares details about early experiences learning Basic.</li>
<li>Hear about Viki’s first programming job out of college.</li>
<li>Viki’s position as a core engineer for the NSO team at Cisco.</li>
<li>Find out what the NSO team at Cisco does.</li>
<li>Insights into the patented algorithm, “fast map.”</li>
<li>How Viki started to use Erlang on a day-to-day basis.</li>
<li>Ways you can start thinking in Erlang from an Elixir background.</li>
<li>The kinds of issues Viki runs into when spawning too many processes.</li>
<li>What Erlang has to offer that other languages cannot.</li>
<li>Viki’s biggest challenges when she first started learning Erlang.</li>
<li>The elevator pitch Viki uses when she encourages friends and colleagues to use Erlang.</li>
<li>Distribution protocols and what they mean to Erlang newbies.</li>
<li>Hear about the high-level vulnerabilities you ought to pay attention to when coding in Erlang.</li>
<li>Introducing Christian Koch, today’s mini-feature segment guest.</li>
<li>How Chris first got into Elixir. </li>
<li>How Elixir is being used by platform engineers at Cars.com.</li>
<li>Why Elixir was chosen as the end-game language to be used at Cars.com</li>
<li>The process behind onboarding coders onto Chris’s Elixir team.</li>
<li>Viki’s best advice to those wanting to give a Code BEAM talk.</li>
<li>Hear about refactoring and how it works.</li>
<li>What Viki means by, “research being consumed by industry.”</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Viktória Fördős - <a href="https://github.com/viktoriafordos" rel="nofollow">https://github.com/viktoriafordos</a> <br>
Cisco — <a href="https://www.cisco.com/" rel="nofollow">https://www.cisco.com/</a> <br>
EW20 — <a href="https://github.com/viktoriafordos/ew20" rel="nofollow">https://github.com/viktoriafordos/ew20</a> Prototype implementation of the security analysis introduced in V. Fördős: Secure Design and Verification of Erlang Systems paper<br>
Christian Koch — <a href="https://www.linkedin.com/in/ckochx/" rel="nofollow">https://www.linkedin.com/in/ckochx/</a> <br>
Cars.com — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
BASIC —  <a href="https://en.wikipedia.org/wiki/BASIC" rel="nofollow">https://en.wikipedia.org/wiki/BASIC</a><br>
Cisco NSO — <a href="https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html" rel="nofollow">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a><br>
Think in Erlang! - Viktória Fördős — <a href="https://www.youtube.com/watch?v=bYkOsQU2ywM" rel="nofollow">https://www.youtube.com/watch?v=bYkOsQU2ywM</a><br>
Erlang general server — <a href="https://erlang.org/doc/man/gen_server.html" rel="nofollow">https://erlang.org/doc/man/gen_server.html</a><br>
Erland Reference Manual — <a href="https://erlang.org/doc/reference_manual/distributed.html" rel="nofollow">https://erlang.org/doc/reference_manual/distributed.html</a><br>
4 Using TLS — <a href="https://erlang.org/doc/apps/ssl/ssl_distribution.html" rel="nofollow">https://erlang.org/doc/apps/ssl/ssl_distribution.html</a><br>
Erland System Limits — <a href="http://erlang.org/doc/efficiency_guide/advanced.html#system-limits" rel="nofollow">http://erlang.org/doc/efficiency_guide/advanced.html#system-limits</a><br>
Hexdocs — <a href="https://hexdocs.pm/elixir/String.html#to_existing_atom/1" rel="nofollow">https://hexdocs.pm/elixir/String.html#to_existing_atom/1</a><br>
RefactorErl — <a href="https://plc.inf.elte.hu/erlang/" rel="nofollow">https://plc.inf.elte.hu/erlang/</a><br>
Pipedream on GitHub — <a href="https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md" rel="nofollow">https://github.com/PipedreamHQ/pipedream/blob/master/components/github/readme.md</a></p><p>Special Guest: Viktória Fördős.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Simon Glenn-Gregg on Building an Election Results Prototype in Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e3-glenn-gregg</link>
      <guid isPermaLink="false">4653eb7c-8637-447c-8ead-a6fe53e5c3cc</guid>
      <pubDate>Thu, 17 Dec 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4653eb7c-8637-447c-8ead-a6fe53e5c3cc.mp3" length="26984468" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today’s guest, Simon Glenn-Gregg joins us to talk about using Elixir to build a prototype for a platform The Washington Post recently implemented to visualize the results of the 2020 elections in real-time.</itunes:subtitle>
      <itunes:duration>37:27</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4653eb7c-8637-447c-8ead-a6fe53e5c3cc/cover.jpg" />
      <description>Today’s guest is Simon Glenn-Gregg, News Engineer at The Washington Post. He joins us to talk about using Elixir to build a prototype for a platform the news house recently implemented to visualize the results of the November 2020 elections in real-time. 
While the job title of ‘News Engineer’ makes it seem like Simon invents news, this is not the case. He is focused on software related to publishing at The Washington Post, and in particular, has been working on building their election visualization platform for the past two years. Before the final iteration of the platform was built, the software engineering team at The Washington Post were given a period to test different technologies as an experiment to find the best fit, and Simon decided to try his hand at Elixir and Phoenix. He talks about what led him to this choice, and his experiences building out his prototype which he demonstrated on a dataset generated by the North Carolina 3rd Congressional District house race in September. Simon tells us about how the pitch went, what the team at The Washington Post was especially impressed by, and what led to the choice to use Node in the end. 
Simon talks about the culture of openness to new technologies at The Washington Post as well as some of the limitations to their adoption. We also hear about how the final version of the visualization platform held up during the elections proper, and Simon’s plans to include Elixir in future stacks due to its amazing abilities as far as concurrency and memory. Tune in today! 
Key Points From This Episode:
What kinds of projects Simon works on at The Washington Post as a ‘news engineer’.
The live updating election visualizer that Simon was working on at The Washington Post.
What went into building the infrastructure for this platform and how Elixir was chosen as a candidate.
 A blog post about Elixir’s memory management; abilities Elixir has regarding concurrency.
The first steps Simon took toward learning Elixir and Phoenix by building simple projects.
Simon’s process of integrating his Elixir app into the current stack and people at The Washington Post.
Testing the app on the 3rd Congressional District house race in North Carolina, and pitching to the team.
Why it is hard to implement projects in new languages at The Washington Post.
How the voting process went after the pitch and which project won.
What the audience at the pitch loved about Elixir, and what the stumbling blocks were.
The nature of working at a deadline-driven place like The Washington Post when it comes to adopting new technologies.
Sources The Washington Post used to get their election data.
What technologies and methods the team used to handle the size of data some election moments generated.
Which parts about the election visualizer that ended up being built using Node would have been easier to do in Elixir.
The other side of the coin – what made writing the app in Python and JavaScript easier.
What future projects Elixir might be better suited to at The Washington Post.
Simon’s background, education, and how he learned programming in previous jobs
Why Simon stuck programming out and decided it was the right path for him.
The need for software engineers at The Washington Post and why they are recruiting so often.
A deep dive into the tech stack at The Washington Post and how they render their pages and maps.
How Simon feels having reached the end of a successful project that millions of people engaged with.
Future projects at The Washington Post and Simon’s hopes to incorporate more Elixir.
A funny story about having to manually update the votes from rural New Hampshire into the app.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Simon Glenn-Gregg on LinkedIn — https://www.linkedin.com/in/simongle/
Simon Glenn-Gregg — http://simonglenngregg.com/
The Washington Post — https://www.washingtonpost.com/
Jason Holt on Twitter — https://twitter.com/offpol
‘Elixir RAM and the Template of Doom’ — https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html
Erik Reyna on LinkedIn — https://www.linkedin.com/in/erikreyna/
Jeremy Bowers on LinkedIn — https://www.linkedin.com/in/jeremyjbowers/
Associated Press — https://apnews.com/
Edison — https://www.edisonresearch.com/
Whole Whale — https://www.wholewhale.com/
The Century Foundation — https://tcf.org/
Arc Publishing — https://www.arcpublishing.com/
Sundi Myint on Twitter — https://twitter.com/sundikhin
Justus Eapen — https://twitter.com/JustusEapen
Eric Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Simon Glenn-Gregg.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today’s guest is Simon Glenn-Gregg, News Engineer at The Washington Post. He joins us to talk about using Elixir to build a prototype for a platform the news house recently implemented to visualize the results of the November 2020 elections in real-time. </p>

<p>While the job title of ‘News Engineer’ makes it seem like Simon invents news, this is not the case. He is focused on software related to publishing at The Washington Post, and in particular, has been working on building their election visualization platform for the past two years. Before the final iteration of the platform was built, the software engineering team at The Washington Post were given a period to test different technologies as an experiment to find the best fit, and Simon decided to try his hand at Elixir and Phoenix. He talks about what led him to this choice, and his experiences building out his prototype which he demonstrated on a dataset generated by the North Carolina 3rd Congressional District house race in September. Simon tells us about how the pitch went, what the team at The Washington Post was especially impressed by, and what led to the choice to use Node in the end. </p>

<p>Simon talks about the culture of openness to new technologies at The Washington Post as well as some of the limitations to their adoption. We also hear about how the final version of the visualization platform held up during the elections proper, and Simon’s plans to include Elixir in future stacks due to its amazing abilities as far as concurrency and memory. Tune in today! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>What kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>
<li>The live updating election visualizer that Simon was working on at The Washington Post.</li>
<li>What went into building the infrastructure for this platform and how Elixir was chosen as a candidate.</li>
<li> A blog post about Elixir’s memory management; abilities Elixir has regarding concurrency.</li>
<li>The first steps Simon took toward learning Elixir and Phoenix by building simple projects.</li>
<li>Simon’s process of integrating his Elixir app into the current stack and people at The Washington Post.</li>
<li>Testing the app on the 3rd Congressional District house race in North Carolina, and pitching to the team.</li>
<li>Why it is hard to implement projects in new languages at The Washington Post.</li>
<li>How the voting process went after the pitch and which project won.</li>
<li>What the audience at the pitch loved about Elixir, and what the stumbling blocks were.</li>
<li>The nature of working at a deadline-driven place like The Washington Post when it comes to adopting new technologies.</li>
<li>Sources The Washington Post used to get their election data.</li>
<li>What technologies and methods the team used to handle the size of data some election moments generated.</li>
<li>Which parts about the election visualizer that ended up being built using Node would have been easier to do in Elixir.</li>
<li>The other side of the coin – what made writing the app in Python and JavaScript easier.</li>
<li>What future projects Elixir might be better suited to at The Washington Post.</li>
<li>Simon’s background, education, and how he learned programming in previous jobs</li>
<li>Why Simon stuck programming out and decided it was the right path for him.</li>
<li>The need for software engineers at The Washington Post and why they are recruiting so often.</li>
<li>A deep dive into the tech stack at The Washington Post and how they render their pages and maps.</li>
<li>How Simon feels having reached the end of a successful project that millions of people engaged with.</li>
<li>Future projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>
<li>A funny story about having to manually update the votes from rural New Hampshire into the app.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Simon Glenn-Gregg on LinkedIn — <a href="https://www.linkedin.com/in/simongle/" rel="nofollow">https://www.linkedin.com/in/simongle/</a><br>
Simon Glenn-Gregg — <a href="http://simonglenngregg.com/" rel="nofollow">http://simonglenngregg.com/</a><br>
The Washington Post — <a href="https://www.washingtonpost.com/" rel="nofollow">https://www.washingtonpost.com/</a><br>
Jason Holt on Twitter — <a href="https://twitter.com/offpol" rel="nofollow">https://twitter.com/offpol</a><br>
‘Elixir RAM and the Template of Doom’ — <a href="https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html" rel="nofollow">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>
Erik Reyna on LinkedIn — <a href="https://www.linkedin.com/in/erikreyna/" rel="nofollow">https://www.linkedin.com/in/erikreyna/</a><br>
Jeremy Bowers on LinkedIn — <a href="https://www.linkedin.com/in/jeremyjbowers/" rel="nofollow">https://www.linkedin.com/in/jeremyjbowers/</a><br>
Associated Press — <a href="https://apnews.com/" rel="nofollow">https://apnews.com/</a><br>
Edison — <a href="https://www.edisonresearch.com/" rel="nofollow">https://www.edisonresearch.com/</a><br>
Whole Whale — <a href="https://www.wholewhale.com/" rel="nofollow">https://www.wholewhale.com/</a><br>
The Century Foundation — <a href="https://tcf.org/" rel="nofollow">https://tcf.org/</a><br>
Arc Publishing — <a href="https://www.arcpublishing.com/" rel="nofollow">https://www.arcpublishing.com/</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen — <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Simon Glenn-Gregg.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today’s guest is Simon Glenn-Gregg, News Engineer at The Washington Post. He joins us to talk about using Elixir to build a prototype for a platform the news house recently implemented to visualize the results of the November 2020 elections in real-time. </p>

<p>While the job title of ‘News Engineer’ makes it seem like Simon invents news, this is not the case. He is focused on software related to publishing at The Washington Post, and in particular, has been working on building their election visualization platform for the past two years. Before the final iteration of the platform was built, the software engineering team at The Washington Post were given a period to test different technologies as an experiment to find the best fit, and Simon decided to try his hand at Elixir and Phoenix. He talks about what led him to this choice, and his experiences building out his prototype which he demonstrated on a dataset generated by the North Carolina 3rd Congressional District house race in September. Simon tells us about how the pitch went, what the team at The Washington Post was especially impressed by, and what led to the choice to use Node in the end. </p>

<p>Simon talks about the culture of openness to new technologies at The Washington Post as well as some of the limitations to their adoption. We also hear about how the final version of the visualization platform held up during the elections proper, and Simon’s plans to include Elixir in future stacks due to its amazing abilities as far as concurrency and memory. Tune in today! </p>

<p>Key Points From This Episode:</p>

<ul>
<li>What kinds of projects Simon works on at The Washington Post as a ‘news engineer’.</li>
<li>The live updating election visualizer that Simon was working on at The Washington Post.</li>
<li>What went into building the infrastructure for this platform and how Elixir was chosen as a candidate.</li>
<li> A blog post about Elixir’s memory management; abilities Elixir has regarding concurrency.</li>
<li>The first steps Simon took toward learning Elixir and Phoenix by building simple projects.</li>
<li>Simon’s process of integrating his Elixir app into the current stack and people at The Washington Post.</li>
<li>Testing the app on the 3rd Congressional District house race in North Carolina, and pitching to the team.</li>
<li>Why it is hard to implement projects in new languages at The Washington Post.</li>
<li>How the voting process went after the pitch and which project won.</li>
<li>What the audience at the pitch loved about Elixir, and what the stumbling blocks were.</li>
<li>The nature of working at a deadline-driven place like The Washington Post when it comes to adopting new technologies.</li>
<li>Sources The Washington Post used to get their election data.</li>
<li>What technologies and methods the team used to handle the size of data some election moments generated.</li>
<li>Which parts about the election visualizer that ended up being built using Node would have been easier to do in Elixir.</li>
<li>The other side of the coin – what made writing the app in Python and JavaScript easier.</li>
<li>What future projects Elixir might be better suited to at The Washington Post.</li>
<li>Simon’s background, education, and how he learned programming in previous jobs</li>
<li>Why Simon stuck programming out and decided it was the right path for him.</li>
<li>The need for software engineers at The Washington Post and why they are recruiting so often.</li>
<li>A deep dive into the tech stack at The Washington Post and how they render their pages and maps.</li>
<li>How Simon feels having reached the end of a successful project that millions of people engaged with.</li>
<li>Future projects at The Washington Post and Simon’s hopes to incorporate more Elixir.</li>
<li>A funny story about having to manually update the votes from rural New Hampshire into the app.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Simon Glenn-Gregg on LinkedIn — <a href="https://www.linkedin.com/in/simongle/" rel="nofollow">https://www.linkedin.com/in/simongle/</a><br>
Simon Glenn-Gregg — <a href="http://simonglenngregg.com/" rel="nofollow">http://simonglenngregg.com/</a><br>
The Washington Post — <a href="https://www.washingtonpost.com/" rel="nofollow">https://www.washingtonpost.com/</a><br>
Jason Holt on Twitter — <a href="https://twitter.com/offpol" rel="nofollow">https://twitter.com/offpol</a><br>
‘Elixir RAM and the Template of Doom’ — <a href="https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html" rel="nofollow">https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html</a><br>
Erik Reyna on LinkedIn — <a href="https://www.linkedin.com/in/erikreyna/" rel="nofollow">https://www.linkedin.com/in/erikreyna/</a><br>
Jeremy Bowers on LinkedIn — <a href="https://www.linkedin.com/in/jeremyjbowers/" rel="nofollow">https://www.linkedin.com/in/jeremyjbowers/</a><br>
Associated Press — <a href="https://apnews.com/" rel="nofollow">https://apnews.com/</a><br>
Edison — <a href="https://www.edisonresearch.com/" rel="nofollow">https://www.edisonresearch.com/</a><br>
Whole Whale — <a href="https://www.wholewhale.com/" rel="nofollow">https://www.wholewhale.com/</a><br>
The Century Foundation — <a href="https://tcf.org/" rel="nofollow">https://tcf.org/</a><br>
Arc Publishing — <a href="https://www.arcpublishing.com/" rel="nofollow">https://www.arcpublishing.com/</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen — <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Simon Glenn-Gregg.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Randall Thomas on Learning Elixir and Why Community Matters</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e2-thomas</link>
      <guid isPermaLink="false">41c6ea5d-4915-4a6e-9795-3e2a9b57aa72</guid>
      <pubDate>Thu, 10 Dec 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72.mp3" length="38278017" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today's episode, Randall Thomas explains  how a community that practices openness and which warmly welcomes its newer members leads to greater career happiness.</itunes:subtitle>
      <itunes:duration>53:09</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/41c6ea5d-4915-4a6e-9795-3e2a9b57aa72/cover.jpg" />
      <description>The culture of your programming community directly impacts your professional success. As Thunderbolt Labs Founder Randall Thomas explains in this episode, a community that practices openness and which warmly welcomes its newer members leads to greater career happiness. 
We open our chat with Randall by exploring his start in coding and how he discovered Elixir. He shares some of the teething problems that he had moving from Ruby to Elixir before we touch on how learning other languages expands your ability to both appreciate and code in languages that you’re already fluent in. Following this, Randall explodes the myth of the genius polyglot programmer by sharing his take on why all coders are polyglots. As the Thunderbolt CEO, we ask Randall how his company adopted Elixir. He provides listeners with insights into how they introduced Elixir into their practice without affecting existing projects. 
After highlighting the efficiency of Elixir and how community affects the feel of a language, we compare the culture and challenges of Ruby, JavaScript, and Elixir. Near the end of the episode, Randall reflects on why experts make for poor teachers. For Randall, Elixir gives his company a competitive advantage. Tune in to hear Randall’s perspective on why community matters and for his top advice on teaching your team Elixir. 
Key Points From This Episode:
Introducing Thunderbolt Labs Founder and CEO, Randall Thomas.
Randall shares how he discovered coding and engineering. 
Hear how Randall first heard about Elixir and how he picked up the language.
Exploring common challenges moving from Ruby to Elixir. 
How learning new languages can deepen your understanding of languages that you already know.
Why there’s no such thing as the ‘genius polyglot programmer.’ 
Details on why Randall’s company began gravitating towards Elixir.
How communities affect the ‘feel’ of a language.
Why no one actually writes in JavaScript anymore. 
Randall gives his take on why Elixir is a god-send for certain programmers. 
Insights into how Randall integrated Elixir into his company.
The challenge of learning Elixir versus the ease of learning JavaScript.
How Randall sold his clients on Elixir and the benefits of having clients that trust you.
Randall’s top tips on helping your developers learn Elixir.
Why Elixir gives Randall’s a strategic advantage.
The importance of having non-experts explain things to you. 
How your coding community can impact your happiness and career success.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Randall Thomas on LinkedIn — https://www.linkedin.com/in/randall-j-thomas/
Randall Thomas on Twitter — https://twitter.com/daksis
Thunderbolt Labs — https://www.thunderboltlabs.com/
Episode with Miki Rezentes — https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/
Gödel, Escher, Bach on Amazon — https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567
Stephen Hawking — https://www.biography.com/scientist/stephen-hawking
William James — https://plato.stanford.edu/entries/james/
Bertrand Russell — https://plato.stanford.edu/entries/russell/
Barcelona Ruby Conference — https://twitter.com/baruco
José Valim — https://twitter.com/josevalim
Programming Elixir on Amazon — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999
Dave Thomas — https://pragdave.me/
ElixirConf — https://2020.elixirconf.com/
‘(UN)Learning Elixir’ — https://www.youtube.com/watch?v=o54EurlzK8o
Bruce Tate — https://www.linkedin.com/in/bruce-tate-a836b/
Grox.io — https://grox.io/
Eric S. Raymond — http://www.catb.org/~esr/
Stack Overflow — https://stackoverflow.com/
Medium — https://medium.com/
Engine Yard — https://www.engineyard.com/
Douglas Crockford — https://www.crockford.com/about.html
Yehuda Katz — https://www.linkedin.com/in/yehudakatz/
Blake Mizerany — https://www.linkedin.com/in/bmizerany/
The Pragmatic Studio — https://pragmaticstudio.com/
Stuff Goes Bad: Erlang in Anger on Amazon — https://www.erlang-in-anger.com/
 Frederic Trottier-Hebert — https://www.linkedin.com/in/fredth/
Stu Holloway — https://www.linkedin.com/in/stu-holloway-linvio/
Paul Graham — http://www.paulgraham.com/
Hackers and Painters on Amazon — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554
Lonestar Elixir — https://lonestarelixir.com/
Turing.io — https://turing.io/
Sundi Myint on Twitter — https://twitter.com/sundikhin
Justus Eapen on Twitter— https://twitter.com/JustusEapen
Eric Oestrich on Twitter — https://twitter.com/ericoestrich Special Guest: Randall Thomas.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>The culture of your programming community directly impacts your professional success. As Thunderbolt Labs Founder Randall Thomas explains in this episode, a community that practices openness and which warmly welcomes its newer members leads to greater career happiness. </p>

<p>We open our chat with Randall by exploring his start in coding and how he discovered Elixir. He shares some of the teething problems that he had moving from Ruby to Elixir before we touch on how learning other languages expands your ability to both appreciate and code in languages that you’re already fluent in. Following this, Randall explodes the myth of the genius polyglot programmer by sharing his take on why all coders are polyglots. As the Thunderbolt CEO, we ask Randall how his company adopted Elixir. He provides listeners with insights into how they introduced Elixir into their practice without affecting existing projects. </p>

<p>After highlighting the efficiency of Elixir and how community affects the feel of a language, we compare the culture and challenges of Ruby, JavaScript, and Elixir. Near the end of the episode, Randall reflects on why experts make for poor teachers. For Randall, Elixir gives his company a competitive advantage. Tune in to hear Randall’s perspective on why community matters and for his top advice on teaching your team Elixir. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Thunderbolt Labs Founder and CEO, Randall Thomas.</li>
<li>Randall shares how he discovered coding and engineering. </li>
<li>Hear how Randall first heard about Elixir and how he picked up the language.</li>
<li>Exploring common challenges moving from Ruby to Elixir. </li>
<li>How learning new languages can deepen your understanding of languages that you already know.</li>
<li>Why there’s no such thing as the ‘genius polyglot programmer.’ </li>
<li>Details on why Randall’s company began gravitating towards Elixir.</li>
<li>How communities affect the ‘feel’ of a language.</li>
<li>Why no one actually writes in JavaScript anymore. </li>
<li>Randall gives his take on why Elixir is a god-send for certain programmers. </li>
<li>Insights into how Randall integrated Elixir into his company.</li>
<li>The challenge of learning Elixir versus the ease of learning JavaScript.</li>
<li>How Randall sold his clients on Elixir and the benefits of having clients that trust you.</li>
<li>Randall’s top tips on helping your developers learn Elixir.</li>
<li>Why Elixir gives Randall’s a strategic advantage.</li>
<li>The importance of having non-experts explain things to you. </li>
<li>How your coding community can impact your happiness and career success.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Randall Thomas on LinkedIn — <a href="https://www.linkedin.com/in/randall-j-thomas/" rel="nofollow">https://www.linkedin.com/in/randall-j-thomas/</a><br>
Randall Thomas on Twitter — <a href="https://twitter.com/daksis" rel="nofollow">https://twitter.com/daksis</a><br>
Thunderbolt Labs — <a href="https://www.thunderboltlabs.com/" rel="nofollow">https://www.thunderboltlabs.com/</a><br>
Episode with Miki Rezentes — <a href="https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>
Gödel, Escher, Bach on Amazon — <a href="https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567" rel="nofollow">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>
Stephen Hawking — <a href="https://www.biography.com/scientist/stephen-hawking" rel="nofollow">https://www.biography.com/scientist/stephen-hawking</a><br>
William James — <a href="https://plato.stanford.edu/entries/james/" rel="nofollow">https://plato.stanford.edu/entries/james/</a><br>
Bertrand Russell — <a href="https://plato.stanford.edu/entries/russell/" rel="nofollow">https://plato.stanford.edu/entries/russell/</a><br>
Barcelona Ruby Conference — <a href="https://twitter.com/baruco" rel="nofollow">https://twitter.com/baruco</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Programming Elixir on Amazon — <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>
Dave Thomas — <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
ElixirConf — <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a><br>
‘(UN)Learning Elixir’ — <a href="https://www.youtube.com/watch?v=o54EurlzK8o" rel="nofollow">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b/" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>
Grox.io — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Eric S. Raymond — <a href="http://www.catb.org/%7Eesr/" rel="nofollow">http://www.catb.org/~esr/</a><br>
Stack Overflow — <a href="https://stackoverflow.com/" rel="nofollow">https://stackoverflow.com/</a><br>
Medium — <a href="https://medium.com/" rel="nofollow">https://medium.com/</a><br>
Engine Yard — <a href="https://www.engineyard.com/" rel="nofollow">https://www.engineyard.com/</a><br>
Douglas Crockford — <a href="https://www.crockford.com/about.html" rel="nofollow">https://www.crockford.com/about.html</a><br>
Yehuda Katz — <a href="https://www.linkedin.com/in/yehudakatz/" rel="nofollow">https://www.linkedin.com/in/yehudakatz/</a><br>
Blake Mizerany — <a href="https://www.linkedin.com/in/bmizerany/" rel="nofollow">https://www.linkedin.com/in/bmizerany/</a><br>
The Pragmatic Studio — <a href="https://pragmaticstudio.com/" rel="nofollow">https://pragmaticstudio.com/</a><br>
Stuff Goes Bad: Erlang in Anger on Amazon — <a href="https://www.erlang-in-anger.com/" rel="nofollow">https://www.erlang-in-anger.com/</a><br>
 Frederic Trottier-Hebert — <a href="https://www.linkedin.com/in/fredth/" rel="nofollow">https://www.linkedin.com/in/fredth/</a><br>
Stu Holloway — <a href="https://www.linkedin.com/in/stu-holloway-linvio/" rel="nofollow">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Hackers and Painters on Amazon — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Turing.io — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen on Twitter— <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Randall Thomas.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>The culture of your programming community directly impacts your professional success. As Thunderbolt Labs Founder Randall Thomas explains in this episode, a community that practices openness and which warmly welcomes its newer members leads to greater career happiness. </p>

<p>We open our chat with Randall by exploring his start in coding and how he discovered Elixir. He shares some of the teething problems that he had moving from Ruby to Elixir before we touch on how learning other languages expands your ability to both appreciate and code in languages that you’re already fluent in. Following this, Randall explodes the myth of the genius polyglot programmer by sharing his take on why all coders are polyglots. As the Thunderbolt CEO, we ask Randall how his company adopted Elixir. He provides listeners with insights into how they introduced Elixir into their practice without affecting existing projects. </p>

<p>After highlighting the efficiency of Elixir and how community affects the feel of a language, we compare the culture and challenges of Ruby, JavaScript, and Elixir. Near the end of the episode, Randall reflects on why experts make for poor teachers. For Randall, Elixir gives his company a competitive advantage. Tune in to hear Randall’s perspective on why community matters and for his top advice on teaching your team Elixir. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Thunderbolt Labs Founder and CEO, Randall Thomas.</li>
<li>Randall shares how he discovered coding and engineering. </li>
<li>Hear how Randall first heard about Elixir and how he picked up the language.</li>
<li>Exploring common challenges moving from Ruby to Elixir. </li>
<li>How learning new languages can deepen your understanding of languages that you already know.</li>
<li>Why there’s no such thing as the ‘genius polyglot programmer.’ </li>
<li>Details on why Randall’s company began gravitating towards Elixir.</li>
<li>How communities affect the ‘feel’ of a language.</li>
<li>Why no one actually writes in JavaScript anymore. </li>
<li>Randall gives his take on why Elixir is a god-send for certain programmers. </li>
<li>Insights into how Randall integrated Elixir into his company.</li>
<li>The challenge of learning Elixir versus the ease of learning JavaScript.</li>
<li>How Randall sold his clients on Elixir and the benefits of having clients that trust you.</li>
<li>Randall’s top tips on helping your developers learn Elixir.</li>
<li>Why Elixir gives Randall’s a strategic advantage.</li>
<li>The importance of having non-experts explain things to you. </li>
<li>How your coding community can impact your happiness and career success.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Randall Thomas on LinkedIn — <a href="https://www.linkedin.com/in/randall-j-thomas/" rel="nofollow">https://www.linkedin.com/in/randall-j-thomas/</a><br>
Randall Thomas on Twitter — <a href="https://twitter.com/daksis" rel="nofollow">https://twitter.com/daksis</a><br>
Thunderbolt Labs — <a href="https://www.thunderboltlabs.com/" rel="nofollow">https://www.thunderboltlabs.com/</a><br>
Episode with Miki Rezentes — <a href="https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes/</a><br>
Gödel, Escher, Bach on Amazon — <a href="https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567" rel="nofollow">https://www.amazon.com/B6del-Escher-Bach-Eternal-Golden/dp/0465026567</a><br>
Stephen Hawking — <a href="https://www.biography.com/scientist/stephen-hawking" rel="nofollow">https://www.biography.com/scientist/stephen-hawking</a><br>
William James — <a href="https://plato.stanford.edu/entries/james/" rel="nofollow">https://plato.stanford.edu/entries/james/</a><br>
Bertrand Russell — <a href="https://plato.stanford.edu/entries/russell/" rel="nofollow">https://plato.stanford.edu/entries/russell/</a><br>
Barcelona Ruby Conference — <a href="https://twitter.com/baruco" rel="nofollow">https://twitter.com/baruco</a><br>
José Valim — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Programming Elixir on Amazon — <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>
Dave Thomas — <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
ElixirConf — <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a><br>
‘(UN)Learning Elixir’ — <a href="https://www.youtube.com/watch?v=o54EurlzK8o" rel="nofollow">https://www.youtube.com/watch?v=o54EurlzK8o</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b/" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b/</a><br>
Grox.io — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Eric S. Raymond — <a href="http://www.catb.org/%7Eesr/" rel="nofollow">http://www.catb.org/~esr/</a><br>
Stack Overflow — <a href="https://stackoverflow.com/" rel="nofollow">https://stackoverflow.com/</a><br>
Medium — <a href="https://medium.com/" rel="nofollow">https://medium.com/</a><br>
Engine Yard — <a href="https://www.engineyard.com/" rel="nofollow">https://www.engineyard.com/</a><br>
Douglas Crockford — <a href="https://www.crockford.com/about.html" rel="nofollow">https://www.crockford.com/about.html</a><br>
Yehuda Katz — <a href="https://www.linkedin.com/in/yehudakatz/" rel="nofollow">https://www.linkedin.com/in/yehudakatz/</a><br>
Blake Mizerany — <a href="https://www.linkedin.com/in/bmizerany/" rel="nofollow">https://www.linkedin.com/in/bmizerany/</a><br>
The Pragmatic Studio — <a href="https://pragmaticstudio.com/" rel="nofollow">https://pragmaticstudio.com/</a><br>
Stuff Goes Bad: Erlang in Anger on Amazon — <a href="https://www.erlang-in-anger.com/" rel="nofollow">https://www.erlang-in-anger.com/</a><br>
 Frederic Trottier-Hebert — <a href="https://www.linkedin.com/in/fredth/" rel="nofollow">https://www.linkedin.com/in/fredth/</a><br>
Stu Holloway — <a href="https://www.linkedin.com/in/stu-holloway-linvio/" rel="nofollow">https://www.linkedin.com/in/stu-holloway-linvio/</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Hackers and Painters on Amazon — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Turing.io — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen on Twitter— <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Randall Thomas.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Launchisode and Outlaws Takeover with Chris Keathley, Amos King, and Anna Neyzberg</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s5e1-launchisode-outlaws-takeover</link>
      <guid isPermaLink="false">4a9a2637-46ff-42d5-af60-6c46bbf9c3fa</guid>
      <pubDate>Thu, 03 Dec 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa.mp3" length="81502282" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>5</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to season five, 'Adopting Elixir'. Today the Elixir Outlaws play host!  The Elixir Wizards talk about what they love about Elixir, how they learned it, and their experiences using it at SmartLogic.</itunes:subtitle>
      <itunes:duration>56:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a9a2637-46ff-42d5-af60-6c46bbf9c3fa/cover.jpg" />
      <description>Welcome back to Elixir Wizards, season five, episode one! The theme for this season is ‘Adopting Elixir’, and for today’s show the team at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give the Elixir Wizards a chance to talk about what they love about Elixir, how they learned it, and some of their experiences using it at SmartLogic! 
We kick off the conversation with some memories of college and the different degrees everybody did, how these experiences fit into programming and the different paths that Justus, Eric, and Sundi took into the world of Elixir. From there, we dive into some of the amazing features about Elixir, highlighting pattern matching, readability, and how easy it is to think about how to write solutions to problems using it. Our conversation moves onto the topic of serving clients with Elixir, and here we consider the risk of basing a consultancy on one technology, as well as how open clients are to their needs being met with this young but powerful language. We also talk about training staff and convincing teams to adopt Elixir, covering themes of barriers to entry, the job market, and using the Elixir community as a resource. For a fun conversation about Elixir where our hosts take the mic as guests, be sure to tune in today.
Key Points From This Episode:
Introducing this season’s topic and today’s plan where the hosts become guests.
How Justus, Eric and Sundi got introduced to Elixir and their respective journeys using it.
Everybody discusses their forays into programming and compares their different degrees.
Hustles Justus did at college to get tuition cheaper for his friends and him.
‘Staking a consultancy on a tech’; how SmartLogic adopted Elixir initially.
How the first few clients SmartLogic served with Elixir felt about the language being used.
Sundi’s onboarding experience at CAVA and how she got introduced to Elixir.
How Justus discovered the beauty of Elixir after he began to understand pattern matching.
Sundi’s thoughts about hidden functionality in JavaScript code versus Elixir which reads better.
Whether using Elixir to solve problems feels easy due to familiarity or its inherent characteristics.
Conventions SmartLogic is implementing regarding using Elixir to build projects.
The lack of introductory resources for learning Elixir and the team’s attempts at making some.
The value of getting involved in your community for learning a new technology.
Find out the value of investing in staff training for companies who want to switch to Elixir.
A new wall between Dev and Ops in the form of Kubernetes.
How to get your co-workers to learn Elixir if you are passionate about it.
Growth at SmartLogic, new hires, and what they specialize in.
The job landscape in 2020 and how this relates to having Elixir under your belt.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Chris Keathley on Twitter — https://twitter.com/chriskeathley
Amos King on Twitter — https://twitter.com/adkron
Anna Neyzberg on Twitter — https://twitter.com/aneyzb
Sundi Myint on Twitter — https://twitter.com/sundikhin
Justus Eapen — https://twitter.com/JustusEapen
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
CAVA — https://cava.com/
Pavlok — https://pavlok.com/
Johnny Boursiquot — https://www.jboursiquot.com/
ElixirBridge — http://elixirbridge.org/
Matt Mills on GitHub — https://github.com/photomattmills
Brooklyn Zelenca on Functional Programming — https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/
Bleacher Report — https://bleacherreport.com/
LiveView by Bruce Tate — https://pragprog.com/titles/passlive/programmer-passport-liveview/ Special Guests: Amos King, Anna Neyzberg, and Chris Keathley.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to Elixir Wizards, season five, episode one! The theme for this season is ‘Adopting Elixir’, and for today’s show the team at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give the Elixir Wizards a chance to talk about what they love about Elixir, how they learned it, and some of their experiences using it at SmartLogic! </p>

<p>We kick off the conversation with some memories of college and the different degrees everybody did, how these experiences fit into programming and the different paths that Justus, Eric, and Sundi took into the world of Elixir. From there, we dive into some of the amazing features about Elixir, highlighting pattern matching, readability, and how easy it is to think about how to write solutions to problems using it. Our conversation moves onto the topic of serving clients with Elixir, and here we consider the risk of basing a consultancy on one technology, as well as how open clients are to their needs being met with this young but powerful language. We also talk about training staff and convincing teams to adopt Elixir, covering themes of barriers to entry, the job market, and using the Elixir community as a resource. For a fun conversation about Elixir where our hosts take the mic as guests, be sure to tune in today.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing this season’s topic and today’s plan where the hosts become guests.</li>
<li>How Justus, Eric and Sundi got introduced to Elixir and their respective journeys using it.</li>
<li>Everybody discusses their forays into programming and compares their different degrees.</li>
<li>Hustles Justus did at college to get tuition cheaper for his friends and him.</li>
<li>‘Staking a consultancy on a tech’; how SmartLogic adopted Elixir initially.</li>
<li>How the first few clients SmartLogic served with Elixir felt about the language being used.</li>
<li>Sundi’s onboarding experience at CAVA and how she got introduced to Elixir.</li>
<li>How Justus discovered the beauty of Elixir after he began to understand pattern matching.</li>
<li>Sundi’s thoughts about hidden functionality in JavaScript code versus Elixir which reads better.</li>
<li>Whether using Elixir to solve problems feels easy due to familiarity or its inherent characteristics.</li>
<li>Conventions SmartLogic is implementing regarding using Elixir to build projects.</li>
<li>The lack of introductory resources for learning Elixir and the team’s attempts at making some.</li>
<li>The value of getting involved in your community for learning a new technology.</li>
<li>Find out the value of investing in staff training for companies who want to switch to Elixir.</li>
<li>A new wall between Dev and Ops in the form of Kubernetes.</li>
<li>How to get your co-workers to learn Elixir if you are passionate about it.</li>
<li>Growth at SmartLogic, new hires, and what they specialize in.</li>
<li>The job landscape in 2020 and how this relates to having Elixir under your belt.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on Twitter — <a href="https://twitter.com/chriskeathley" rel="nofollow">https://twitter.com/chriskeathley</a><br>
Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Anna Neyzberg on Twitter — <a href="https://twitter.com/aneyzb" rel="nofollow">https://twitter.com/aneyzb</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen — <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
CAVA — <a href="https://cava.com/" rel="nofollow">https://cava.com/</a><br>
Pavlok — <a href="https://pavlok.com/" rel="nofollow">https://pavlok.com/</a><br>
Johnny Boursiquot — <a href="https://www.jboursiquot.com/" rel="nofollow">https://www.jboursiquot.com/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Matt Mills on GitHub — <a href="https://github.com/photomattmills" rel="nofollow">https://github.com/photomattmills</a><br>
Brooklyn Zelenca on Functional Programming — <a href="https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
LiveView by Bruce Tate — <a href="https://pragprog.com/titles/passlive/programmer-passport-liveview/" rel="nofollow">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to Elixir Wizards, season five, episode one! The theme for this season is ‘Adopting Elixir’, and for today’s show the team at Elixir Outlaws play host! Chris Keathley, Amos King, and Anna Neyzberg give the Elixir Wizards a chance to talk about what they love about Elixir, how they learned it, and some of their experiences using it at SmartLogic! </p>

<p>We kick off the conversation with some memories of college and the different degrees everybody did, how these experiences fit into programming and the different paths that Justus, Eric, and Sundi took into the world of Elixir. From there, we dive into some of the amazing features about Elixir, highlighting pattern matching, readability, and how easy it is to think about how to write solutions to problems using it. Our conversation moves onto the topic of serving clients with Elixir, and here we consider the risk of basing a consultancy on one technology, as well as how open clients are to their needs being met with this young but powerful language. We also talk about training staff and convincing teams to adopt Elixir, covering themes of barriers to entry, the job market, and using the Elixir community as a resource. For a fun conversation about Elixir where our hosts take the mic as guests, be sure to tune in today.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing this season’s topic and today’s plan where the hosts become guests.</li>
<li>How Justus, Eric and Sundi got introduced to Elixir and their respective journeys using it.</li>
<li>Everybody discusses their forays into programming and compares their different degrees.</li>
<li>Hustles Justus did at college to get tuition cheaper for his friends and him.</li>
<li>‘Staking a consultancy on a tech’; how SmartLogic adopted Elixir initially.</li>
<li>How the first few clients SmartLogic served with Elixir felt about the language being used.</li>
<li>Sundi’s onboarding experience at CAVA and how she got introduced to Elixir.</li>
<li>How Justus discovered the beauty of Elixir after he began to understand pattern matching.</li>
<li>Sundi’s thoughts about hidden functionality in JavaScript code versus Elixir which reads better.</li>
<li>Whether using Elixir to solve problems feels easy due to familiarity or its inherent characteristics.</li>
<li>Conventions SmartLogic is implementing regarding using Elixir to build projects.</li>
<li>The lack of introductory resources for learning Elixir and the team’s attempts at making some.</li>
<li>The value of getting involved in your community for learning a new technology.</li>
<li>Find out the value of investing in staff training for companies who want to switch to Elixir.</li>
<li>A new wall between Dev and Ops in the form of Kubernetes.</li>
<li>How to get your co-workers to learn Elixir if you are passionate about it.</li>
<li>Growth at SmartLogic, new hires, and what they specialize in.</li>
<li>The job landscape in 2020 and how this relates to having Elixir under your belt.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on Twitter — <a href="https://twitter.com/chriskeathley" rel="nofollow">https://twitter.com/chriskeathley</a><br>
Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Anna Neyzberg on Twitter — <a href="https://twitter.com/aneyzb" rel="nofollow">https://twitter.com/aneyzb</a><br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Justus Eapen — <a href="https://twitter.com/JustusEapen" rel="nofollow">https://twitter.com/JustusEapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
CAVA — <a href="https://cava.com/" rel="nofollow">https://cava.com/</a><br>
Pavlok — <a href="https://pavlok.com/" rel="nofollow">https://pavlok.com/</a><br>
Johnny Boursiquot — <a href="https://www.jboursiquot.com/" rel="nofollow">https://www.jboursiquot.com/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Matt Mills on GitHub — <a href="https://github.com/photomattmills" rel="nofollow">https://github.com/photomattmills</a><br>
Brooklyn Zelenca on Functional Programming — <a href="https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka/</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
LiveView by Bruce Tate — <a href="https://pragprog.com/titles/passlive/programmer-passport-liveview/" rel="nofollow">https://pragprog.com/titles/passlive/programmer-passport-liveview/</a></p><p>Special Guests: Amos King, Anna Neyzberg, and Chris Keathley.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Season Four Wrap: Whose Design Is It Anyway? with Swadia, Windholtz, Rezentes, and Keathley</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e22-s4wrap-whose-design-is-it-anyway</link>
      <guid isPermaLink="false">8cbeff8e-7468-4da6-a117-7e0a1f94d653</guid>
      <pubDate>Thu, 15 Oct 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/8cbeff8e-7468-4da6-a117-7e0a1f94d653.mp3" length="42936728" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>To close off this season and conclude our deep dive into system and application architecture, today’s episode is a panel discussion on domain-driven design with special guests Japa Swadia, Mark Windholtz, Miki Rezentes, and Chris Keathley.</itunes:subtitle>
      <itunes:duration>59:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/8/8cbeff8e-7468-4da6-a117-7e0a1f94d653/cover.jpg" />
      <description>To close off this season and conclude our deep dive into system and application architecture, today’s episode is a special panel discussion on a topic that has provoked a mix of answers that range from the controversial to the philosophical — “What does domain-driven design mean to you?” For the final word on this subject, we welcome back software developers Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from Miki, who shares her thoughts about how domain-driven design developed because the tech industry undervalues communication. Following this, Mark and Japa discuss how domain-driven design gives developers a context for what they create while informing how you code using Elixir. We then touch on whether domain-driven design makes it easier or more difficult to change your code and how communication is valued within a business context. We explore key domain-driven design concepts, including the role of bounded contexts, and how this design ethos can help you appeal to stakeholders such as product managers. After Miki highlights the reasons why communication should be seen as a vital tech skill, each guest provides their final thoughts on domain-driven design. Tune in for this season’s insightful finale and find out which of today’s guests is the winner of “Whose Design Is It Anyway?”
Key Points From This Episode:
Introducing guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.
Hear what domain-driven design means for each guest.
Miki shares her hot take that domain-driven design is “nothing new under the sun.”
Why the essence of domain-driven design is about listening. 
How domain-driven design can inform your Elixir architecture. 
Mapping your system and developing names for your bounded contexts.
Domain-driven design trade-offs and how it can lead to a loss of productivity. 
The idea that domain-driven design has developed because the tech industry undervalues communication. 
Why communication should be valued — bad communication costs money. 
How tech companies are generally aligned with the goals of domain-driven design.
Why Mark is so delighted to be working with Elixir and domain-driven design.
The link between domain-driven design and developing better products.
Exploring how bounded contexts allow teams to create solutions to unique problems.
Seeing communication as a tech skill that should be learned early in your career.
Our guests share their final thoughts on domain-driven design. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Chris Keathley on Twitter — @ChrisKeathley/
Chris Keathley — https://keathley.io/
Japa Swadia on Twitter — https://twitter.com/japa2292
Japa Swadia on LinkedIn — https://www.linkedin.com/in/japaswadia/
Mark Windholtz on Twitter — https://twitter.com/windholtz
Mark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/
Miki Rezentes on Twitter — https://twitter.com/mikirez
Miki Rezentes on LinkedIn — https://www.linkedin.com/in/miki-rezentes-823ba02a/ 
Podium — https://www.podium.com/
Elixir Outlaws — https://elixiroutlaws.com/
Agile DNA — http://www.agiledna.com
Frame.io — https://frame.io/
Bleacher Report — https://bleacherreport.com/
Domain-Driven Design: Tackling Complexity in the Heart of Software on Amazon— https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215
Domain Language — https://www.domainlanguage.com/
The Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon
— https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277
Patterns, Principles, and Practices of Domain-Driven Design on Amazon — https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709
‘Ubiquitous Language’ — https://martinfowler.com/bliki/UbiquitousLanguage.html
‘Value Object’ — https://martinfowler.com/bliki/ValueObject.html
Domain-Driven Design Europe — https://dddeurope.com/2021/
Domain-Driven Design Europe on YouTube — https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ
A Philosophy of Software Design on Amazon — https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201
Eric Evans Training Videos — https://elearn.domainlanguage.com/
Designing Elixir Systems with OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/
Whose Line Is It Anyway? — https://www.imdb.com/title/tt0163507/
Drew Carey — https://www.imdb.com/name/nm0004804/ Special Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>To close off this season and conclude our deep dive into system and application architecture, today’s episode is a special panel discussion on a topic that has provoked a mix of answers that range from the controversial to the philosophical — “What does domain-driven design mean to you?” For the final word on this subject, we welcome back software developers Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from Miki, who shares her thoughts about how domain-driven design developed because the tech industry undervalues communication. Following this, Mark and Japa discuss how domain-driven design gives developers a context for what they create while informing how you code using Elixir. We then touch on whether domain-driven design makes it easier or more difficult to change your code and how communication is valued within a business context. We explore key domain-driven design concepts, including the role of bounded contexts, and how this design ethos can help you appeal to stakeholders such as product managers. After Miki highlights the reasons why communication should be seen as a vital tech skill, each guest provides their final thoughts on domain-driven design. Tune in for this season’s insightful finale and find out which of today’s guests is the winner of “Whose Design Is It Anyway?”</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>
<li>Hear what domain-driven design means for each guest.</li>
<li>Miki shares her hot take that domain-driven design is “nothing new under the sun.”</li>
<li>Why the essence of domain-driven design is about listening. </li>
<li>How domain-driven design can inform your Elixir architecture. </li>
<li>Mapping your system and developing names for your bounded contexts.</li>
<li>Domain-driven design trade-offs and how it can lead to a loss of productivity. </li>
<li>The idea that domain-driven design has developed because the tech industry undervalues communication. </li>
<li>Why communication should be valued — bad communication costs money. </li>
<li>How tech companies are generally aligned with the goals of domain-driven design.</li>
<li>Why Mark is so delighted to be working with Elixir and domain-driven design.</li>
<li>The link between domain-driven design and developing better products.</li>
<li>Exploring how bounded contexts allow teams to create solutions to unique problems.</li>
<li>Seeing communication as a tech skill that should be learned early in your career.</li>
<li>Our guests share their final thoughts on domain-driven design. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on Twitter — @ChrisKeathley/<br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Japa Swadia on Twitter — <a href="https://twitter.com/japa2292" rel="nofollow">https://twitter.com/japa2292</a><br>
Japa Swadia on LinkedIn — <a href="https://www.linkedin.com/in/japaswadia/" rel="nofollow">https://www.linkedin.com/in/japaswadia/</a><br>
Mark Windholtz on Twitter — <a href="https://twitter.com/windholtz" rel="nofollow">https://twitter.com/windholtz</a><br>
Mark Windholtz on LinkedIn — <a href="https://www.linkedin.com/in/mwindholtz/" rel="nofollow">https://www.linkedin.com/in/mwindholtz/</a><br>
Miki Rezentes on Twitter — <a href="https://twitter.com/mikirez" rel="nofollow">https://twitter.com/mikirez</a><br>
Miki Rezentes on LinkedIn — <a href="https://www.linkedin.com/in/miki-rezentes-823ba02a/" rel="nofollow">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>
Podium — <a href="https://www.podium.com/" rel="nofollow">https://www.podium.com/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Agile DNA — <a href="http://www.agiledna.com" rel="nofollow">http://www.agiledna.com</a><br>
Frame.io — <a href="https://frame.io/" rel="nofollow">https://frame.io/</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Domain-Driven Design: Tackling Complexity in the Heart of Software on Amazon— <a href="https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215" rel="nofollow">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>
Domain Language — <a href="https://www.domainlanguage.com/" rel="nofollow">https://www.domainlanguage.com/</a><br>
The Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>
— <a href="https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277" rel="nofollow">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>
Patterns, Principles, and Practices of Domain-Driven Design on Amazon — <a href="https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709" rel="nofollow">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>
‘Ubiquitous Language’ — <a href="https://martinfowler.com/bliki/UbiquitousLanguage.html" rel="nofollow">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>
‘Value Object’ — <a href="https://martinfowler.com/bliki/ValueObject.html" rel="nofollow">https://martinfowler.com/bliki/ValueObject.html</a><br>
Domain-Driven Design Europe — <a href="https://dddeurope.com/2021/" rel="nofollow">https://dddeurope.com/2021/</a><br>
Domain-Driven Design Europe on YouTube — <a href="https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ" rel="nofollow">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>
A Philosophy of Software Design on Amazon — <a href="https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201" rel="nofollow">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>
Eric Evans Training Videos — <a href="https://elearn.domainlanguage.com/" rel="nofollow">https://elearn.domainlanguage.com/</a><br>
Designing Elixir Systems with OTP — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>
Whose Line Is It Anyway? — <a href="https://www.imdb.com/title/tt0163507/" rel="nofollow">https://www.imdb.com/title/tt0163507/</a><br>
Drew Carey — <a href="https://www.imdb.com/name/nm0004804/" rel="nofollow">https://www.imdb.com/name/nm0004804/</a></p><p>Special Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>To close off this season and conclude our deep dive into system and application architecture, today’s episode is a special panel discussion on a topic that has provoked a mix of answers that range from the controversial to the philosophical — “What does domain-driven design mean to you?” For the final word on this subject, we welcome back software developers Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes. Our first hot take comes from Miki, who shares her thoughts about how domain-driven design developed because the tech industry undervalues communication. Following this, Mark and Japa discuss how domain-driven design gives developers a context for what they create while informing how you code using Elixir. We then touch on whether domain-driven design makes it easier or more difficult to change your code and how communication is valued within a business context. We explore key domain-driven design concepts, including the role of bounded contexts, and how this design ethos can help you appeal to stakeholders such as product managers. After Miki highlights the reasons why communication should be seen as a vital tech skill, each guest provides their final thoughts on domain-driven design. Tune in for this season’s insightful finale and find out which of today’s guests is the winner of “Whose Design Is It Anyway?”</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing guests Chris Keathley, Japa Swadia, Mark Windholtz, and Miki Rezentes.</li>
<li>Hear what domain-driven design means for each guest.</li>
<li>Miki shares her hot take that domain-driven design is “nothing new under the sun.”</li>
<li>Why the essence of domain-driven design is about listening. </li>
<li>How domain-driven design can inform your Elixir architecture. </li>
<li>Mapping your system and developing names for your bounded contexts.</li>
<li>Domain-driven design trade-offs and how it can lead to a loss of productivity. </li>
<li>The idea that domain-driven design has developed because the tech industry undervalues communication. </li>
<li>Why communication should be valued — bad communication costs money. </li>
<li>How tech companies are generally aligned with the goals of domain-driven design.</li>
<li>Why Mark is so delighted to be working with Elixir and domain-driven design.</li>
<li>The link between domain-driven design and developing better products.</li>
<li>Exploring how bounded contexts allow teams to create solutions to unique problems.</li>
<li>Seeing communication as a tech skill that should be learned early in your career.</li>
<li>Our guests share their final thoughts on domain-driven design. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on Twitter — @ChrisKeathley/<br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Japa Swadia on Twitter — <a href="https://twitter.com/japa2292" rel="nofollow">https://twitter.com/japa2292</a><br>
Japa Swadia on LinkedIn — <a href="https://www.linkedin.com/in/japaswadia/" rel="nofollow">https://www.linkedin.com/in/japaswadia/</a><br>
Mark Windholtz on Twitter — <a href="https://twitter.com/windholtz" rel="nofollow">https://twitter.com/windholtz</a><br>
Mark Windholtz on LinkedIn — <a href="https://www.linkedin.com/in/mwindholtz/" rel="nofollow">https://www.linkedin.com/in/mwindholtz/</a><br>
Miki Rezentes on Twitter — <a href="https://twitter.com/mikirez" rel="nofollow">https://twitter.com/mikirez</a><br>
Miki Rezentes on LinkedIn — <a href="https://www.linkedin.com/in/miki-rezentes-823ba02a/" rel="nofollow">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a> <br>
Podium — <a href="https://www.podium.com/" rel="nofollow">https://www.podium.com/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Agile DNA — <a href="http://www.agiledna.com" rel="nofollow">http://www.agiledna.com</a><br>
Frame.io — <a href="https://frame.io/" rel="nofollow">https://frame.io/</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Domain-Driven Design: Tackling Complexity in the Heart of Software on Amazon— <a href="https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215" rel="nofollow">https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215</a><br>
Domain Language — <a href="https://www.domainlanguage.com/" rel="nofollow">https://www.domainlanguage.com/</a><br>
The Seven Laws of Learning: Why Great Leaders Are Also Great Teachers on Amazon<br>
— <a href="https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277" rel="nofollow">https://www.amazon.com/Seven-Laws-Learning-Leaders-Teachers/dp/1599559277</a><br>
Patterns, Principles, and Practices of Domain-Driven Design on Amazon — <a href="https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709" rel="nofollow">https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design/dp/1118714709</a><br>
‘Ubiquitous Language’ — <a href="https://martinfowler.com/bliki/UbiquitousLanguage.html" rel="nofollow">https://martinfowler.com/bliki/UbiquitousLanguage.html</a><br>
‘Value Object’ — <a href="https://martinfowler.com/bliki/ValueObject.html" rel="nofollow">https://martinfowler.com/bliki/ValueObject.html</a><br>
Domain-Driven Design Europe — <a href="https://dddeurope.com/2021/" rel="nofollow">https://dddeurope.com/2021/</a><br>
Domain-Driven Design Europe on YouTube — <a href="https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ" rel="nofollow">https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ</a><br>
A Philosophy of Software Design on Amazon — <a href="https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201" rel="nofollow">https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201</a><br>
Eric Evans Training Videos — <a href="https://elearn.domainlanguage.com/" rel="nofollow">https://elearn.domainlanguage.com/</a><br>
Designing Elixir Systems with OTP — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>
Whose Line Is It Anyway? — <a href="https://www.imdb.com/title/tt0163507/" rel="nofollow">https://www.imdb.com/title/tt0163507/</a><br>
Drew Carey — <a href="https://www.imdb.com/name/nm0004804/" rel="nofollow">https://www.imdb.com/name/nm0004804/</a></p><p>Special Guests: Chris Keathley, Japa Swadia, and Miki Rezentes.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Anna Sherman on Change, Failure, and living in Gig City</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e21-sherman</link>
      <guid isPermaLink="false">6cb1796f-017c-4f06-bd10-9cbf85fff404</guid>
      <pubDate>Thu, 08 Oct 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cb1796f-017c-4f06-bd10-9cbf85fff404.mp3" length="51319210" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>People in the industry should not be bogged down by failure. It’s a feature and not a bug. Today Anna Sherman talks about why the tech scene in Chattanooga is exploding and her journey into programming. </itunes:subtitle>
      <itunes:duration>35:16</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cb1796f-017c-4f06-bd10-9cbf85fff404/cover.jpg" />
      <description>Even with the most programming experience in the world, coding still involves a lot of trial and error. People getting started in the industry should not become bogged down by failure. Because in the end, it’s a feature and not a bug. That’s one of Zillion developer Anna Sherman’s key messages this episode. We open our discussion with Anna by talking about living in Chattanooga, AKA, Gig City. She talks about why the tech scene there is exploding before diving into her journey into programming. Having created her own personal coding boot camp, she opens up about what she did to land her first software job within only two months of looking. After discussing her early working experiences, we explore her work at Zillion, along with her side projects. We then touch on what Anna does to expand her skillset and develop herself as a professional, using a style guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture and design, as well as the importance of domain-driven design in keeping your team aligned with what they’re building. Near the end of the episode, we talk about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why failure is an important part of coding. Tune in to hear more of Anna’s insights on change, failure, and living in Gig City.  
Key Points From This Episode:
Fast internet and the great outdoors; hear why Chattanooga has become a tech hub.
Anna shares her love of math and how she got into programming.
Creating your own boot camp and becoming a self-taught coder.
How Anna landed her first gig, just two months after learning code.
Exploring Anna’s first job at Sovee, a machine translation company.
What side projects Anna is working on and how they help her Magic: The Gathering games.
How Anna expands her skill set and develops herself as a professional.
Hear Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.
What architecture, design, and domain-driven design mean to Anna. 
Using a style guide and ‘lunch and learns’ to help your team understand patterns.
Details on how Anna’s style guide keeps her team informed. 
The virtues of being a ‘physlistcler;’ anchoring your workflow to a physical list. 
Why failure is a key part of coding and the idea that anyone can learn to code.
We close the episode by chatting about Anna’s favorite board games. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Anna Sherman on LinkedIn — https://www.linkedin.com/in/anna-sherman-54289372/
Anna Sherman on Twitter — https://twitter.com/cavewoman90
Anna Sherman on Instagram — https://www.instagram.com/annasherman100816/
Anna Sherman Email — anna@myzillion.com
Craig Lyons Email — craig@myzillion.com
Zillion — https://www.myzillion.com/
Bruce Tate — https://twitter.com/redrapids
Brett Wise — https://twitter.com/brettwise
Gig City Elixir — https://www.gigcityelixir.com/
NervesConf — https://www.nervesconf.com/
Chili’s — https://www.chilis.com/
GodTube — https://www.godtube.com/
Magic: The Gathering — https://magic.wizards.com/en
Scryfall — https://scryfall.com/
Code BEAM SF Talk — https://www.youtube.com/watch?v=XgOJQAK6iHI
Evernote — https://evernote.com/
Nerves — https://www.nerves-project.org/
‘Repository and Services Pattern in a Multilayered architecture’ — https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/
A Handful of Stars — https://boardgamegeek.com/boardgame/197320/handful-stars
A Few Acres Of Snow — https://boardgamegeek.com/boardgame/79828/few-acres-snow Special Guest: Anna Sherman.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Even with the most programming experience in the world, coding still involves a lot of trial and error. People getting started in the industry should not become bogged down by failure. Because in the end, it’s a feature and not a bug. That’s one of Zillion developer Anna Sherman’s key messages this episode. We open our discussion with Anna by talking about living in Chattanooga, AKA, Gig City. She talks about why the tech scene there is exploding before diving into her journey into programming. Having created her own personal coding boot camp, she opens up about what she did to land her first software job within only two months of looking. After discussing her early working experiences, we explore her work at Zillion, along with her side projects. We then touch on what Anna does to expand her skillset and develop herself as a professional, using a style guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture and design, as well as the importance of domain-driven design in keeping your team aligned with what they’re building. Near the end of the episode, we talk about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why failure is an important part of coding. Tune in to hear more of Anna’s insights on change, failure, and living in Gig City.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Fast internet and the great outdoors; hear why Chattanooga has become a tech hub.</li>
<li>Anna shares her love of math and how she got into programming.</li>
<li>Creating your own boot camp and becoming a self-taught coder.</li>
<li>How Anna landed her first gig, just two months after learning code.</li>
<li>Exploring Anna’s first job at Sovee, a machine translation company.</li>
<li>What side projects Anna is working on and how they help her Magic: The Gathering games.</li>
<li>How Anna expands her skill set and develops herself as a professional.</li>
<li>Hear Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.</li>
<li>What architecture, design, and domain-driven design mean to Anna. </li>
<li>Using a style guide and ‘lunch and learns’ to help your team understand patterns.</li>
<li>Details on how Anna’s style guide keeps her team informed. </li>
<li>The virtues of being a ‘physlistcler;’ anchoring your workflow to a physical list. </li>
<li>Why failure is a key part of coding and the idea that anyone can learn to code.</li>
<li>We close the episode by chatting about Anna’s favorite board games. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Anna Sherman on LinkedIn — <a href="https://www.linkedin.com/in/anna-sherman-54289372/" rel="nofollow">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>
Anna Sherman on Twitter — <a href="https://twitter.com/cavewoman90" rel="nofollow">https://twitter.com/cavewoman90</a><br>
Anna Sherman on Instagram — <a href="https://www.instagram.com/annasherman100816/" rel="nofollow">https://www.instagram.com/annasherman100816/</a><br>
Anna Sherman Email — <a href="mailto:anna@myzillion.com" rel="nofollow">anna@myzillion.com</a><br>
Craig Lyons Email — <a href="mailto:craig@myzillion.com" rel="nofollow">craig@myzillion.com</a><br>
Zillion — <a href="https://www.myzillion.com/" rel="nofollow">https://www.myzillion.com/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Brett Wise — <a href="https://twitter.com/brettwise" rel="nofollow">https://twitter.com/brettwise</a><br>
Gig City Elixir — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
NervesConf — <a href="https://www.nervesconf.com/" rel="nofollow">https://www.nervesconf.com/</a><br>
Chili’s — <a href="https://www.chilis.com/" rel="nofollow">https://www.chilis.com/</a><br>
GodTube — <a href="https://www.godtube.com/" rel="nofollow">https://www.godtube.com/</a><br>
Magic: The Gathering — <a href="https://magic.wizards.com/en" rel="nofollow">https://magic.wizards.com/en</a><br>
Scryfall — <a href="https://scryfall.com/" rel="nofollow">https://scryfall.com/</a><br>
Code BEAM SF Talk — <a href="https://www.youtube.com/watch?v=XgOJQAK6iHI" rel="nofollow">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>
Evernote — <a href="https://evernote.com/" rel="nofollow">https://evernote.com/</a><br>
Nerves — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
‘Repository and Services Pattern in a Multilayered architecture’ — <a href="https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/" rel="nofollow">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>
A Handful of Stars — <a href="https://boardgamegeek.com/boardgame/197320/handful-stars" rel="nofollow">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>
A Few Acres Of Snow — <a href="https://boardgamegeek.com/boardgame/79828/few-acres-snow" rel="nofollow">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special Guest: Anna Sherman.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Even with the most programming experience in the world, coding still involves a lot of trial and error. People getting started in the industry should not become bogged down by failure. Because in the end, it’s a feature and not a bug. That’s one of Zillion developer Anna Sherman’s key messages this episode. We open our discussion with Anna by talking about living in Chattanooga, AKA, Gig City. She talks about why the tech scene there is exploding before diving into her journey into programming. Having created her own personal coding boot camp, she opens up about what she did to land her first software job within only two months of looking. After discussing her early working experiences, we explore her work at Zillion, along with her side projects. We then touch on what Anna does to expand her skillset and develop herself as a professional, using a style guide and ‘lunch and learns’ to update her team, and we hear the elevator pitch for Anna’s Code BEAM San Francisco talk. Anna shares her take on architecture and design, as well as the importance of domain-driven design in keeping your team aligned with what they’re building. Near the end of the episode, we talk about Anna’s pre-coding process, the virtues of being a ‘physlistcler,’ and why failure is an important part of coding. Tune in to hear more of Anna’s insights on change, failure, and living in Gig City.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Fast internet and the great outdoors; hear why Chattanooga has become a tech hub.</li>
<li>Anna shares her love of math and how she got into programming.</li>
<li>Creating your own boot camp and becoming a self-taught coder.</li>
<li>How Anna landed her first gig, just two months after learning code.</li>
<li>Exploring Anna’s first job at Sovee, a machine translation company.</li>
<li>What side projects Anna is working on and how they help her Magic: The Gathering games.</li>
<li>How Anna expands her skill set and develops herself as a professional.</li>
<li>Hear Anna’s elevator pitch for the talk she gave at Code BEAM San Francisco.</li>
<li>What architecture, design, and domain-driven design mean to Anna. </li>
<li>Using a style guide and ‘lunch and learns’ to help your team understand patterns.</li>
<li>Details on how Anna’s style guide keeps her team informed. </li>
<li>The virtues of being a ‘physlistcler;’ anchoring your workflow to a physical list. </li>
<li>Why failure is a key part of coding and the idea that anyone can learn to code.</li>
<li>We close the episode by chatting about Anna’s favorite board games. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Anna Sherman on LinkedIn — <a href="https://www.linkedin.com/in/anna-sherman-54289372/" rel="nofollow">https://www.linkedin.com/in/anna-sherman-54289372/</a><br>
Anna Sherman on Twitter — <a href="https://twitter.com/cavewoman90" rel="nofollow">https://twitter.com/cavewoman90</a><br>
Anna Sherman on Instagram — <a href="https://www.instagram.com/annasherman100816/" rel="nofollow">https://www.instagram.com/annasherman100816/</a><br>
Anna Sherman Email — <a href="mailto:anna@myzillion.com" rel="nofollow">anna@myzillion.com</a><br>
Craig Lyons Email — <a href="mailto:craig@myzillion.com" rel="nofollow">craig@myzillion.com</a><br>
Zillion — <a href="https://www.myzillion.com/" rel="nofollow">https://www.myzillion.com/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Brett Wise — <a href="https://twitter.com/brettwise" rel="nofollow">https://twitter.com/brettwise</a><br>
Gig City Elixir — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
NervesConf — <a href="https://www.nervesconf.com/" rel="nofollow">https://www.nervesconf.com/</a><br>
Chili’s — <a href="https://www.chilis.com/" rel="nofollow">https://www.chilis.com/</a><br>
GodTube — <a href="https://www.godtube.com/" rel="nofollow">https://www.godtube.com/</a><br>
Magic: The Gathering — <a href="https://magic.wizards.com/en" rel="nofollow">https://magic.wizards.com/en</a><br>
Scryfall — <a href="https://scryfall.com/" rel="nofollow">https://scryfall.com/</a><br>
Code BEAM SF Talk — <a href="https://www.youtube.com/watch?v=XgOJQAK6iHI" rel="nofollow">https://www.youtube.com/watch?v=XgOJQAK6iHI</a><br>
Evernote — <a href="https://evernote.com/" rel="nofollow">https://evernote.com/</a><br>
Nerves — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
‘Repository and Services Pattern in a Multilayered architecture’ — <a href="https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/" rel="nofollow">https://www.vodovnik.com/2015/08/26/repository-and-services-pattern-in-a-multilayered-architecture/</a><br>
A Handful of Stars — <a href="https://boardgamegeek.com/boardgame/197320/handful-stars" rel="nofollow">https://boardgamegeek.com/boardgame/197320/handful-stars</a><br>
A Few Acres Of Snow — <a href="https://boardgamegeek.com/boardgame/79828/few-acres-snow" rel="nofollow">https://boardgamegeek.com/boardgame/79828/few-acres-snow</a></p><p>Special Guest: Anna Sherman.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Devon Estes on how Architecture Is a Myth and One-file Design </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e20-estes</link>
      <guid isPermaLink="false">b59ac59d-736e-4581-b0c0-e04adeb1ba91</guid>
      <pubDate>Thu, 01 Oct 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b59ac59d-736e-4581-b0c0-e04adeb1ba91.mp3" length="70507362" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>There's no difference between architecture and design. It's all engineering and creating a distinction between the two. Today's guest, Devon Estes provides a novel way of seeing design and architecture. </itunes:subtitle>
      <itunes:duration>48:36</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b59ac59d-736e-4581-b0c0-e04adeb1ba91/cover.jpg" />
      <description>There is no difference between architecture and design. It's all engineering and creating a distinction between the two is a way for someone to get paid more and have a different title. That hot take comes from Devon Estes, today’s guest, who provides a novel way of seeing design and architecture. We open the episode by diving straight into the topic of design, with Devon exploring how good design might be less important than developing the right toolset. We then talk about how language servers can help you effortlessly define functions, meaning that in some cases, it doesn’t matter where you put your code — even if it’s all in one file. After touching on game-changing innovations in the world of design, such as GTP-3, Devon shares how our design options are limited by our editors. Considering the impact of human error on software, we discuss the value of convention and rulesets. As Elixir apps or apps that use Phoenix are open-ended, Devon talks about his middle-ground solution to help teams overcome this challenge. Near the end of the episode, Devon chats about why design and architecture, as elements of engineering, are different levels of abstraction and not separate entities. Following this, he highlights how domain-driven design can be used to avoid confusion and bugs by ensuring that people across departments all use the same language. Tune in to hear more of Devon’s unique and well-pondered insights. 
Key Points From This Episode:
Devon’s take on design; “Where things go doesn’t matter if you have a language server.” 
Defining what a language server is and its incredible usefulness. 
How ‘go to definition’ functions could render much of design as unnecessary. 
Game-changing innovations that will change the world of design.
Functional versus object-orientated languages and the challenge of finding files.
Why Devon uses Vim and what makes it attractive to other programmers.
How Elixir apps can be a challenge due to their open-ended nature.
Creating primary and secondary contexts to give Phoenix more structure. 
The human factor; why people are often the cause of many coding issues.
Hear how Devon has been structuring his Absinthe projects.
Devon shares details about his Absinthe testing library, Assertions.
Devon’s hot take that there is no difference between architecture and design.
The importance of domain-driven design in avoiding confusion and bugs.
Why engineers need to push to ensure the same language is used across departments. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Devon Estes —  http://www.devonestes.com/
Devon Estes on GitHub — https://github.com/devonestes
Devon Estes on Twitter — https://twitter.com/devoncestes
Jake Becker on GitHub — https://github.com/JakeBecker
GPT-3 — https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966
Elixir Is — https://github.com/elixir-lsp/elixir-ls
Ale — https://github.com/dense-analysis/ale
MOO — https://lisdude.com/moo/
Erlang code — https://erlang.org/doc/man/code.html
‘A Proposal for Some New Rules for Phoenix Contexts’ — http://www.devonestes.com/a-proposal-for-context-rules
‘A proposal for an Absinthe application structure’ — http://www.devonestes.com/a-proposal-for-absinthe-project-structure
Elixir Radar — https://elixir-radar.com/
Assertions.Absinthe — https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4
ElixirConf EU — https://www.elixirconf.eu/
‘Elixir testing from beginner to expert’ — https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/ Special Guest: Devon Estes.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>There is no difference between architecture and design. It&#39;s all engineering and creating a distinction between the two is a way for someone to get paid more and have a different title. That hot take comes from Devon Estes, today’s guest, who provides a novel way of seeing design and architecture. We open the episode by diving straight into the topic of design, with Devon exploring how good design might be less important than developing the right toolset. We then talk about how language servers can help you effortlessly define functions, meaning that in some cases, it doesn’t matter where you put your code — even if it’s all in one file. After touching on game-changing innovations in the world of design, such as GTP-3, Devon shares how our design options are limited by our editors. Considering the impact of human error on software, we discuss the value of convention and rulesets. As Elixir apps or apps that use Phoenix are open-ended, Devon talks about his middle-ground solution to help teams overcome this challenge. Near the end of the episode, Devon chats about why design and architecture, as elements of engineering, are different levels of abstraction and not separate entities. Following this, he highlights how domain-driven design can be used to avoid confusion and bugs by ensuring that people across departments all use the same language. Tune in to hear more of Devon’s unique and well-pondered insights. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Devon’s take on design; “Where things go doesn’t matter if you have a language server.” </li>
<li>Defining what a language server is and its incredible usefulness. </li>
<li>How ‘go to definition’ functions could render much of design as unnecessary. </li>
<li>Game-changing innovations that will change the world of design.</li>
<li>Functional versus object-orientated languages and the challenge of finding files.</li>
<li>Why Devon uses Vim and what makes it attractive to other programmers.</li>
<li>How Elixir apps can be a challenge due to their open-ended nature.</li>
<li>Creating primary and secondary contexts to give Phoenix more structure. </li>
<li>The human factor; why people are often the cause of many coding issues.</li>
<li>Hear how Devon has been structuring his Absinthe projects.</li>
<li>Devon shares details about his Absinthe testing library, Assertions.</li>
<li>Devon’s hot take that there is no difference between architecture and design.</li>
<li>The importance of domain-driven design in avoiding confusion and bugs.</li>
<li>Why engineers need to push to ensure the same language is used across departments. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Devon Estes —  <a href="http://www.devonestes.com/" rel="nofollow">http://www.devonestes.com/</a><br>
Devon Estes on GitHub — <a href="https://github.com/devonestes" rel="nofollow">https://github.com/devonestes</a><br>
Devon Estes on Twitter — <a href="https://twitter.com/devoncestes" rel="nofollow">https://twitter.com/devoncestes</a><br>
Jake Becker on GitHub — <a href="https://github.com/JakeBecker" rel="nofollow">https://github.com/JakeBecker</a><br>
GPT-3 — <a href="https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966" rel="nofollow">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>
Elixir Is — <a href="https://github.com/elixir-lsp/elixir-ls" rel="nofollow">https://github.com/elixir-lsp/elixir-ls</a><br>
Ale — <a href="https://github.com/dense-analysis/ale" rel="nofollow">https://github.com/dense-analysis/ale</a><br>
MOO — <a href="https://lisdude.com/moo/" rel="nofollow">https://lisdude.com/moo/</a><br>
Erlang code — <a href="https://erlang.org/doc/man/code.html" rel="nofollow">https://erlang.org/doc/man/code.html</a><br>
‘A Proposal for Some New Rules for Phoenix Contexts’ — <a href="http://www.devonestes.com/a-proposal-for-context-rules" rel="nofollow">http://www.devonestes.com/a-proposal-for-context-rules</a><br>
‘A proposal for an Absinthe application structure’ — <a href="http://www.devonestes.com/a-proposal-for-absinthe-project-structure" rel="nofollow">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>
Elixir Radar — <a href="https://elixir-radar.com/" rel="nofollow">https://elixir-radar.com/</a><br>
Assertions.Absinthe — <a href="https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4" rel="nofollow">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a><br>
‘Elixir testing from beginner to expert’ — <a href="https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/" rel="nofollow">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special Guest: Devon Estes.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>There is no difference between architecture and design. It&#39;s all engineering and creating a distinction between the two is a way for someone to get paid more and have a different title. That hot take comes from Devon Estes, today’s guest, who provides a novel way of seeing design and architecture. We open the episode by diving straight into the topic of design, with Devon exploring how good design might be less important than developing the right toolset. We then talk about how language servers can help you effortlessly define functions, meaning that in some cases, it doesn’t matter where you put your code — even if it’s all in one file. After touching on game-changing innovations in the world of design, such as GTP-3, Devon shares how our design options are limited by our editors. Considering the impact of human error on software, we discuss the value of convention and rulesets. As Elixir apps or apps that use Phoenix are open-ended, Devon talks about his middle-ground solution to help teams overcome this challenge. Near the end of the episode, Devon chats about why design and architecture, as elements of engineering, are different levels of abstraction and not separate entities. Following this, he highlights how domain-driven design can be used to avoid confusion and bugs by ensuring that people across departments all use the same language. Tune in to hear more of Devon’s unique and well-pondered insights. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Devon’s take on design; “Where things go doesn’t matter if you have a language server.” </li>
<li>Defining what a language server is and its incredible usefulness. </li>
<li>How ‘go to definition’ functions could render much of design as unnecessary. </li>
<li>Game-changing innovations that will change the world of design.</li>
<li>Functional versus object-orientated languages and the challenge of finding files.</li>
<li>Why Devon uses Vim and what makes it attractive to other programmers.</li>
<li>How Elixir apps can be a challenge due to their open-ended nature.</li>
<li>Creating primary and secondary contexts to give Phoenix more structure. </li>
<li>The human factor; why people are often the cause of many coding issues.</li>
<li>Hear how Devon has been structuring his Absinthe projects.</li>
<li>Devon shares details about his Absinthe testing library, Assertions.</li>
<li>Devon’s hot take that there is no difference between architecture and design.</li>
<li>The importance of domain-driven design in avoiding confusion and bugs.</li>
<li>Why engineers need to push to ensure the same language is used across departments. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Devon Estes —  <a href="http://www.devonestes.com/" rel="nofollow">http://www.devonestes.com/</a><br>
Devon Estes on GitHub — <a href="https://github.com/devonestes" rel="nofollow">https://github.com/devonestes</a><br>
Devon Estes on Twitter — <a href="https://twitter.com/devoncestes" rel="nofollow">https://twitter.com/devoncestes</a><br>
Jake Becker on GitHub — <a href="https://github.com/JakeBecker" rel="nofollow">https://github.com/JakeBecker</a><br>
GPT-3 — <a href="https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966" rel="nofollow">https://www.independent.co.uk/life-style/gadgets-and-tech/news/gpt3-ai-tool-designs-websites-medicine-a9627966</a><br>
Elixir Is — <a href="https://github.com/elixir-lsp/elixir-ls" rel="nofollow">https://github.com/elixir-lsp/elixir-ls</a><br>
Ale — <a href="https://github.com/dense-analysis/ale" rel="nofollow">https://github.com/dense-analysis/ale</a><br>
MOO — <a href="https://lisdude.com/moo/" rel="nofollow">https://lisdude.com/moo/</a><br>
Erlang code — <a href="https://erlang.org/doc/man/code.html" rel="nofollow">https://erlang.org/doc/man/code.html</a><br>
‘A Proposal for Some New Rules for Phoenix Contexts’ — <a href="http://www.devonestes.com/a-proposal-for-context-rules" rel="nofollow">http://www.devonestes.com/a-proposal-for-context-rules</a><br>
‘A proposal for an Absinthe application structure’ — <a href="http://www.devonestes.com/a-proposal-for-absinthe-project-structure" rel="nofollow">http://www.devonestes.com/a-proposal-for-absinthe-project-structure</a><br>
Elixir Radar — <a href="https://elixir-radar.com/" rel="nofollow">https://elixir-radar.com/</a><br>
Assertions.Absinthe — <a href="https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4" rel="nofollow">https://hexdocs.pm/assertions/Assertions.Absinthe.html#document_for/4</a><br>
ElixirConf EU — <a href="https://www.elixirconf.eu/" rel="nofollow">https://www.elixirconf.eu/</a><br>
‘Elixir testing from beginner to expert’ — <a href="https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/" rel="nofollow">https://www.elixirconf.eu/trainings/elixir-testing-from-beginner-to-expert/</a></p><p>Special Guest: Devon Estes.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Lizzie Paquette on Compiling, Microliths, and Macros</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e19-paquette</link>
      <guid isPermaLink="false">a61dcf3a-a8e5-45c7-a648-6994628ce9ec</guid>
      <pubDate>Thu, 24 Sep 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a61dcf3a-a8e5-45c7-a648-6994628ce9ec.mp3" length="34861006" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Imagine being hired into a rocketship startup using Elixir as its primary language. Today, we speak with Lizzie Paquette, a system software engineer, about how she got into coding and her role at Brex.</itunes:subtitle>
      <itunes:duration>48:24</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a61dcf3a-a8e5-45c7-a648-6994628ce9ec/cover.jpg" />
      <description>Imagine being hired into a rocketship startup using Elixir as its primary language. And all this, straight out of college. Today, we speak with systems software engineer, Lizzie Paquette who works at Brex, the aforementioned rocketship. We start our conversation by talking about how Lizzie got into coding relatively late in her life, partly due to an ill-fated run-in with Java. She shares details about her role at Brex and how the company has evolved. With a love of compilers, Lizzie dives into what beginners can do to get into compiling before chatting about her top underrated Elixir resources. Following this topic, Lizzie discusses her experience liberally implementing macros at Brex — something that ended up being detrimental when onboarding new hires. After sharing how she develops herself as a professional and coder, Lizzie talks about her involvement in Code 2040, a career accelerator and mentorship program. 
Reflecting this season’s theme, we ask for Lizzie’s take on what architecture, design, and domain-driven design means to her. She then reveals her coding process and emphasizes the value of creating thorough design docs to avoid bugs. We explore Brex’s architecture, how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s learned from working with Brex’s architecture. 
After closing our discussion with Lizzie, we open with another edition Pattern Matching with Todd Resudek and special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights, along with more on microliths and macros from Lizzie Paquette.
Key Points From This Episode:
Lizzie shares how she got into coding and her start in the industry.
Hear about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir community.
How novices should approach learning how to code compilers. 
Underrated Elixir resources that Lizzie makes the most out of.
The double-edged sword; why macros are an incredible yet dangerous tool.
How Lizzie develops herself as a professional and a coder. 
Boosting inclusivity in the software industry through programs like Code 2040.
Lizzie’s take on what architecture, design, and domain-driven design mean.
The value of design docs in catching bugs and laying out a clear process. 
Microliths, microservices, and the nitty-gritty of Brex’s architecture. 
Exploring ‘chaos engineering’; testing your system by purposefully creating problems.  
Lizzie’s pain points when either using or not using umbrella apps. 
What Lizzie would do if she could rewrite Brex’s architecture from scratch. 
Using Brex.result to streamline code and handle common return values. 
For this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.
Sophie’s journey from liberal arts to learning software at a code boot camp.
Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Lizzie Paquette on LinkedIn — https://www.linkedin.com/in/lizzie-paquette/
Lizzie Paquette on GitHub — https://github.com/lizziepaquette
Brex — https://www.brex.com/
Eric Meadows Jonssön — https://twitter.com/emjii
Haskell — https://www.haskell.org/
Columbia University — https://www.columbia.edu/
Clash — https://clash-lang.org/
Framer — https://www.framer.com/
Elixir Protobuf on GitHub — https://github.com/brexhq/protobuf-elixir
Tony612 on GitHub — https://github.com/tony612
Elixir Syntax Reference — https://hexdocs.pm/elixir/syntax-reference.html
Metaprogramming Elixir: Write Less Code, Get More Done (and Have Fun!) — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414
Macros in Elixir: Responsible Code Generation — https://www.youtube.com/watch?v=55-X7rSw8M0
Code 2040 — http://www.code2040.org/
Erlpack — https://github.com/discord/erlpack
Principles of Chaos Engineering — https://principlesofchaos.org/?lang=ENcontent
REST Fest 2019 | Lorinda Brandon — https://vimeo.com/364373007
‘Building a rewards platform from scratch’ — https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658
Brex.result on GitHub— https://github.com/brexhq/result
RabbitMQ — https://www.rabbitmq.com/
Netflix Chaos Monkey on GitHub — https://github.com/Netflix/chaosmonkey
Mark Erickson — https://brainlid.org/
Johanna Larsson — https://blog.jola.dev/
Todd Resudek — https://twitter.com/sprsmpl
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
Elixir School — https://elixirschool.com/en/
GitHub — https://github.com/
Flatiron School — https://flatironschool.com/
Barnard College — https://barnard.edu/
Law and Order — https://www.imdb.com/title/tt0098844/
Spotify — https://www.spotify.com/
Celine Dion — https://www.celinedion.com/
Hill Street Blues — https://www.imdb.com/title/tt0081873/
Perry Mason — https://en.wikipedia.org/wiki/PerryMason
Matlock — https://www.imdb.com/title/tt0090481/
Telemetry on GitHub — https://github.com/beam-telemetry/telemetry
Phoenix LiveView on GitHub — https://github.com/phoenixframework/phoenixlive_view Special Guest: Lizzie Paquette.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Imagine being hired into a rocketship startup using Elixir as its primary language. And all this, straight out of college. Today, we speak with systems software engineer, Lizzie Paquette who works at Brex, the aforementioned rocketship. We start our conversation by talking about how Lizzie got into coding relatively late in her life, partly due to an ill-fated run-in with Java. She shares details about her role at Brex and how the company has evolved. With a love of compilers, Lizzie dives into what beginners can do to get into compiling before chatting about her top underrated Elixir resources. Following this topic, Lizzie discusses her experience liberally implementing macros at Brex — something that ended up being detrimental when onboarding new hires. After sharing how she develops herself as a professional and coder, Lizzie talks about her involvement in Code 2040, a career accelerator and mentorship program. </p>

<p>Reflecting this season’s theme, we ask for Lizzie’s take on what architecture, design, and domain-driven design means to her. She then reveals her coding process and emphasizes the value of creating thorough design docs to avoid bugs. We explore Brex’s architecture, how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s learned from working with Brex’s architecture. </p>

<p>After closing our discussion with Lizzie, we open with another edition Pattern Matching with Todd Resudek and special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights, along with more on microliths and macros from Lizzie Paquette.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Lizzie shares how she got into coding and her start in the industry.</li>
<li>Hear about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir community.</li>
<li>How novices should approach learning how to code compilers. </li>
<li>Underrated Elixir resources that Lizzie makes the most out of.</li>
<li>The double-edged sword; why macros are an incredible yet dangerous tool.</li>
<li>How Lizzie develops herself as a professional and a coder. </li>
<li>Boosting inclusivity in the software industry through programs like Code 2040.</li>
<li>Lizzie’s take on what architecture, design, and domain-driven design mean.</li>
<li>The value of design docs in catching bugs and laying out a clear process. </li>
<li>Microliths, microservices, and the nitty-gritty of Brex’s architecture. </li>
<li>Exploring ‘chaos engineering’; testing your system by purposefully creating problems.<br></li>
<li>Lizzie’s pain points when either using or not using umbrella apps. </li>
<li>What Lizzie would do if she could rewrite Brex’s architecture from scratch. </li>
<li><p>Using Brex.result to streamline code and handle common return values. </p></li>
<li><p>For this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>
<li><p>Sophie’s journey from liberal arts to learning software at a code boot camp.</p></li>
<li><p>Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. </p></li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Lizzie Paquette on LinkedIn — <a href="https://www.linkedin.com/in/lizzie-paquette/" rel="nofollow">https://www.linkedin.com/in/lizzie-paquette/</a><br>
Lizzie Paquette on GitHub — <a href="https://github.com/lizziepaquette" rel="nofollow">https://github.com/lizziepaquette</a><br>
Brex — <a href="https://www.brex.com/" rel="nofollow">https://www.brex.com/</a><br>
Eric Meadows Jonssön — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Columbia University — <a href="https://www.columbia.edu/" rel="nofollow">https://www.columbia.edu/</a><br>
Clash — <a href="https://clash-lang.org/" rel="nofollow">https://clash-lang.org/</a><br>
Framer — <a href="https://www.framer.com/" rel="nofollow">https://www.framer.com/</a><br>
Elixir Protobuf on GitHub — <a href="https://github.com/brexhq/protobuf-elixir" rel="nofollow">https://github.com/brexhq/protobuf-elixir</a><br>
Tony612 on GitHub — <a href="https://github.com/tony612" rel="nofollow">https://github.com/tony612</a><br>
Elixir Syntax Reference — <a href="https://hexdocs.pm/elixir/syntax-reference.html" rel="nofollow">https://hexdocs.pm/elixir/syntax-reference.html</a><br>
Metaprogramming Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href="https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414" rel="nofollow">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>
Macros in Elixir: Responsible Code Generation — <a href="https://www.youtube.com/watch?v=55-X7rSw8M0" rel="nofollow">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>
Code 2040 — <a href="http://www.code2040.org/" rel="nofollow">http://www.code2040.org/</a><br>
Erlpack — <a href="https://github.com/discord/erlpack" rel="nofollow">https://github.com/discord/erlpack</a><br>
Principles of Chaos Engineering — <a href="https://principlesofchaos.org/?lang=ENcontent" rel="nofollow">https://principlesofchaos.org/?lang=ENcontent</a><br>
REST Fest 2019 | Lorinda Brandon — <a href="https://vimeo.com/364373007" rel="nofollow">https://vimeo.com/364373007</a><br>
‘Building a rewards platform from scratch’ — <a href="https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658" rel="nofollow">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>
Brex.result on GitHub— <a href="https://github.com/brexhq/result" rel="nofollow">https://github.com/brexhq/result</a><br>
RabbitMQ — <a href="https://www.rabbitmq.com/" rel="nofollow">https://www.rabbitmq.com/</a><br>
Netflix Chaos Monkey on GitHub — <a href="https://github.com/Netflix/chaosmonkey" rel="nofollow">https://github.com/Netflix/chaosmonkey</a><br>
Mark Erickson — <a href="https://brainlid.org/" rel="nofollow">https://brainlid.org/</a><br>
Johanna Larsson — <a href="https://blog.jola.dev/" rel="nofollow">https://blog.jola.dev/</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Barnard College — <a href="https://barnard.edu/" rel="nofollow">https://barnard.edu/</a><br>
Law and Order — <a href="https://www.imdb.com/title/tt0098844/" rel="nofollow">https://www.imdb.com/title/tt0098844/</a><br>
Spotify — <a href="https://www.spotify.com/" rel="nofollow">https://www.spotify.com/</a><br>
Celine Dion — <a href="https://www.celinedion.com/" rel="nofollow">https://www.celinedion.com/</a><br>
Hill Street Blues — <a href="https://www.imdb.com/title/tt0081873/" rel="nofollow">https://www.imdb.com/title/tt0081873/</a><br>
Perry Mason — <a href="https://en.wikipedia.org/wiki/Perry_Mason" rel="nofollow">https://en.wikipedia.org/wiki/Perry_Mason</a><br>
Matlock — <a href="https://www.imdb.com/title/tt0090481/" rel="nofollow">https://www.imdb.com/title/tt0090481/</a><br>
Telemetry on GitHub — <a href="https://github.com/beam-telemetry/telemetry" rel="nofollow">https://github.com/beam-telemetry/telemetry</a><br>
Phoenix LiveView on GitHub — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special Guest: Lizzie Paquette.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Imagine being hired into a rocketship startup using Elixir as its primary language. And all this, straight out of college. Today, we speak with systems software engineer, Lizzie Paquette who works at Brex, the aforementioned rocketship. We start our conversation by talking about how Lizzie got into coding relatively late in her life, partly due to an ill-fated run-in with Java. She shares details about her role at Brex and how the company has evolved. With a love of compilers, Lizzie dives into what beginners can do to get into compiling before chatting about her top underrated Elixir resources. Following this topic, Lizzie discusses her experience liberally implementing macros at Brex — something that ended up being detrimental when onboarding new hires. After sharing how she develops herself as a professional and coder, Lizzie talks about her involvement in Code 2040, a career accelerator and mentorship program. </p>

<p>Reflecting this season’s theme, we ask for Lizzie’s take on what architecture, design, and domain-driven design means to her. She then reveals her coding process and emphasizes the value of creating thorough design docs to avoid bugs. We explore Brex’s architecture, how it makes use of microliths, and applying ‘chaos engineering’ — a monkey-wrench approach to testing your system. We touch on umbrella apps and lessons that Lizzie’s learned from working with Brex’s architecture. </p>

<p>After closing our discussion with Lizzie, we open with another edition Pattern Matching with Todd Resudek and special guest Sophie DeBenedetto from GitHub. Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. Tune in to hear Sophie’s insights, along with more on microliths and macros from Lizzie Paquette.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Lizzie shares how she got into coding and her start in the industry.</li>
<li>Hear about Lizzie’s role at Brex, a rocketship startup and key member of the Elixir community.</li>
<li>How novices should approach learning how to code compilers. </li>
<li>Underrated Elixir resources that Lizzie makes the most out of.</li>
<li>The double-edged sword; why macros are an incredible yet dangerous tool.</li>
<li>How Lizzie develops herself as a professional and a coder. </li>
<li>Boosting inclusivity in the software industry through programs like Code 2040.</li>
<li>Lizzie’s take on what architecture, design, and domain-driven design mean.</li>
<li>The value of design docs in catching bugs and laying out a clear process. </li>
<li>Microliths, microservices, and the nitty-gritty of Brex’s architecture. </li>
<li>Exploring ‘chaos engineering’; testing your system by purposefully creating problems.<br></li>
<li>Lizzie’s pain points when either using or not using umbrella apps. </li>
<li>What Lizzie would do if she could rewrite Brex’s architecture from scratch. </li>
<li><p>Using Brex.result to streamline code and handle common return values. </p></li>
<li><p>For this edition of Pattern Matching, Todd Resudek interviews Sophie DeBenedetto.</p></li>
<li><p>Sophie’s journey from liberal arts to learning software at a code boot camp.</p></li>
<li><p>Todd asks Sophie about her favorite movies, music, and what Elixir projects excite her. </p></li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Lizzie Paquette on LinkedIn — <a href="https://www.linkedin.com/in/lizzie-paquette/" rel="nofollow">https://www.linkedin.com/in/lizzie-paquette/</a><br>
Lizzie Paquette on GitHub — <a href="https://github.com/lizziepaquette" rel="nofollow">https://github.com/lizziepaquette</a><br>
Brex — <a href="https://www.brex.com/" rel="nofollow">https://www.brex.com/</a><br>
Eric Meadows Jonssön — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Columbia University — <a href="https://www.columbia.edu/" rel="nofollow">https://www.columbia.edu/</a><br>
Clash — <a href="https://clash-lang.org/" rel="nofollow">https://clash-lang.org/</a><br>
Framer — <a href="https://www.framer.com/" rel="nofollow">https://www.framer.com/</a><br>
Elixir Protobuf on GitHub — <a href="https://github.com/brexhq/protobuf-elixir" rel="nofollow">https://github.com/brexhq/protobuf-elixir</a><br>
Tony612 on GitHub — <a href="https://github.com/tony612" rel="nofollow">https://github.com/tony612</a><br>
Elixir Syntax Reference — <a href="https://hexdocs.pm/elixir/syntax-reference.html" rel="nofollow">https://hexdocs.pm/elixir/syntax-reference.html</a><br>
Metaprogramming Elixir: Write Less Code, Get More Done (and Have Fun!) — <a href="https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414" rel="nofollow">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>
Macros in Elixir: Responsible Code Generation — <a href="https://www.youtube.com/watch?v=55-X7rSw8M0" rel="nofollow">https://www.youtube.com/watch?v=55-X7rSw8M0</a><br>
Code 2040 — <a href="http://www.code2040.org/" rel="nofollow">http://www.code2040.org/</a><br>
Erlpack — <a href="https://github.com/discord/erlpack" rel="nofollow">https://github.com/discord/erlpack</a><br>
Principles of Chaos Engineering — <a href="https://principlesofchaos.org/?lang=ENcontent" rel="nofollow">https://principlesofchaos.org/?lang=ENcontent</a><br>
REST Fest 2019 | Lorinda Brandon — <a href="https://vimeo.com/364373007" rel="nofollow">https://vimeo.com/364373007</a><br>
‘Building a rewards platform from scratch’ — <a href="https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658" rel="nofollow">https://medium.com/brexeng/building-a-rewards-platform-from-scratch-ff4e22124658</a><br>
Brex.result on GitHub— <a href="https://github.com/brexhq/result" rel="nofollow">https://github.com/brexhq/result</a><br>
RabbitMQ — <a href="https://www.rabbitmq.com/" rel="nofollow">https://www.rabbitmq.com/</a><br>
Netflix Chaos Monkey on GitHub — <a href="https://github.com/Netflix/chaosmonkey" rel="nofollow">https://github.com/Netflix/chaosmonkey</a><br>
Mark Erickson — <a href="https://brainlid.org/" rel="nofollow">https://brainlid.org/</a><br>
Johanna Larsson — <a href="https://blog.jola.dev/" rel="nofollow">https://blog.jola.dev/</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Barnard College — <a href="https://barnard.edu/" rel="nofollow">https://barnard.edu/</a><br>
Law and Order — <a href="https://www.imdb.com/title/tt0098844/" rel="nofollow">https://www.imdb.com/title/tt0098844/</a><br>
Spotify — <a href="https://www.spotify.com/" rel="nofollow">https://www.spotify.com/</a><br>
Celine Dion — <a href="https://www.celinedion.com/" rel="nofollow">https://www.celinedion.com/</a><br>
Hill Street Blues — <a href="https://www.imdb.com/title/tt0081873/" rel="nofollow">https://www.imdb.com/title/tt0081873/</a><br>
Perry Mason — <a href="https://en.wikipedia.org/wiki/Perry_Mason" rel="nofollow">https://en.wikipedia.org/wiki/Perry_Mason</a><br>
Matlock — <a href="https://www.imdb.com/title/tt0090481/" rel="nofollow">https://www.imdb.com/title/tt0090481/</a><br>
Telemetry on GitHub — <a href="https://github.com/beam-telemetry/telemetry" rel="nofollow">https://github.com/beam-telemetry/telemetry</a><br>
Phoenix LiveView on GitHub — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a></p><p>Special Guest: Lizzie Paquette.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Eric Steen on Neuroevolution in AI </title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e18-steen</link>
      <guid isPermaLink="false">7070efa5-519a-4d9b-ac5a-75cfc1882a31</guid>
      <pubDate>Thu, 17 Sep 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7070efa5-519a-4d9b-ac5a-75cfc1882a31.mp3" length="71308642" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we speak with Eric Steen about Automata, his Elixir project that uses neuroevolution and cutting edge theory to create a multi-agent behavior tree — otherwise known as really good AI.</itunes:subtitle>
      <itunes:duration>49:09</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7070efa5-519a-4d9b-ac5a-75cfc1882a31/cover.jpg" />
      <description>Building a sophisticated AI that can evolve to fit our vast and diverse needs is a Herculean challenge. Today we speak with senior engineer Eric Steen about Automata, his experimental Elixir project that uses neuroevolution and cutting edge theory to create a multi-agent behavior tree — or really good AI in the common tongue. But before we tap into that rich topic, we talk with Eric about tech burnout, his background, and why Elixir is an excellent language for writing modern software. He then unpacks AI concepts like the need to develop backpropagation in your system, and the value of “neural diversity,” and Markov decision processes. 
After Eric gives his take on architecture versus design and the place of domain-driven design, we discuss Automata. A key breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines learn from a variety of new behaviors and searches, as opposed to completing one task at a time. We touch on Automata’s progress, Eric’s long-term approach, and what his project might be used for. Near the end of our interview, we chat about CryptoWise, a collaborative analysis platform for cryptocurrency. 
Todd Resudek then opens with another edition of Pattern Matching, where he interviews Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies and music that he enjoys, and the projects that excite him. Tune in to hear more about both Michał and neuroevolution in AI.
Key Points From This Episode:
Experiencing tech burnout and challenges around algorithms rendering you redundant.
Hear about Eric’s programming background and shifts in the industry. 
Backpropagation and using Elixir to build a neural evolutionary system.
How Markov decision processes help systems choose between possible actions. 
Eric’s take on architecture versus design and the place of domain-driven design.
Exploring Automata — Eric’s ambitious multi-agent behavior tree.
The importance of neurodiversity when building AIs; they need to adapt to many needs. 
Novelty search; why learn through one task when you can learn through a variety of tasks at the same time?
Automata’s practical applications and why Eric sees it as a long-term project.
Eric shares a progress report on his work and using design processes like Sprint. 
What Eric would like people to use Automata for. 
A sense that Elixir is gaining in popularity within Silicon Valley.
Eric gives an elevator-pitch for CryptoWise, a collaborative analysis platform for cryptocurrency.
Todd Resudek interviews Michał Muskała on another edition of Pattern Matching.
Michał shares his background and his move from Poland to London. 
Movies and music that Michał enjoys, and details on projects that excite him.
Differences between Erlang and Elixir and why both communities would benefit from working together.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Eric Steen on LinkedIn — https://www.linkedin.com/in/ericsteen1/
Eric Steen — https://twitter.com/thesteener
Webflow — https://webflow.com/
Automata GitHub — https://github.com/upstarter/automata
Automata on Slack — https://join.slack.com/t/automata-project/sharedinvite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA
CryptoWise — https://www.cryptowise.ai/
Hippo Insurance — https://www.hippo.com/
Carl Hewitt — https://en.wikipedia.org/wiki/CarlHewitt
Stanford University — https://www.stanford.edu/
MIT — https://web.mit.edu/
Actor Model — https://en.wikipedia.org/wiki/Actormodel
Marvin Minsky — http://web.media.mit.edu/~minsky/
Tensorflex on GitHub— https://github.com/anshuman23/tensorflex
Matrex on GitHub — https://github.com/versilov/matrex 
Handbook of Neuroevolution Through Erlang — 
https://www.springer.com/gp/book/9781461444626
Markov Decision Process — https://en.wikipedia.org/wiki/Markovdecisionprocess
Amazon Web Services — https://aws.amazon.com/
The Little Elixir &amp; OTP Guidebook — https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111
Elon Musk — https://www.forbes.com/profile/elon-musk/
Welcome to the Era of Deep Neuroevolution — https://eng.uber.com/deep-neuroevolution/
Kenneth O. Stanley — https://www.cs.ucf.edu/~kstanley/
Why Greatness Cannot Be Planned: The Myth of the Objective — https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/
University of Florida — https://www.ufl.edu/
Uber Air — https://www.uber.com/us/es/elevate/
Jeff Bezos — https://www.forbes.com/profile/jeff-bezos/
Sprint — https://www.thesprintbook.com/ 
Adobe — https://www.adobe.com/
Horde — https://www.horde.org/development/
Libcluster on GitHub — https://github.com/dsteinberg/libcluster
Swift for Tensorflow — https://www.tensorflow.org/swift
Triplebyte Blog — https://triplebyte.com/blog
EquiTrader — https://coinmarketcap.com/currencies/equitrader/ 
BloXroute Labs — https://bloxroute.com/
Holochain — https://holochain.org/
Michał Muskała on GitHub — https://github.com/michalmuskala
Jason on GitHub — https://github.com/michalmuskala/jason
Todd Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek/
Whatsapp — https://www.whatsapp.com/
CERN — https://home.cern/
Ralph Kaminski — https://ralphkaminski.com/
Jayme Edwards — https://jaymeedwards.com/ Special Guest: Eric Steen.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Building a sophisticated AI that can evolve to fit our vast and diverse needs is a Herculean challenge. Today we speak with senior engineer Eric Steen about Automata, his experimental Elixir project that uses neuroevolution and cutting edge theory to create a multi-agent behavior tree — or really good AI in the common tongue. But before we tap into that rich topic, we talk with Eric about tech burnout, his background, and why Elixir is an excellent language for writing modern software. He then unpacks AI concepts like the need to develop backpropagation in your system, and the value of “neural diversity,” and Markov decision processes. </p>

<p>After Eric gives his take on architecture versus design and the place of domain-driven design, we discuss Automata. A key breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines learn from a variety of new behaviors and searches, as opposed to completing one task at a time. We touch on Automata’s progress, Eric’s long-term approach, and what his project might be used for. Near the end of our interview, we chat about CryptoWise, a collaborative analysis platform for cryptocurrency. </p>

<p>Todd Resudek then opens with another edition of Pattern Matching, where he interviews Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies and music that he enjoys, and the projects that excite him. Tune in to hear more about both Michał and neuroevolution in AI.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Experiencing tech burnout and challenges around algorithms rendering you redundant.</li>
<li>Hear about Eric’s programming background and shifts in the industry. </li>
<li>Backpropagation and using Elixir to build a neural evolutionary system.</li>
<li>How Markov decision processes help systems choose between possible actions. </li>
<li>Eric’s take on architecture versus design and the place of domain-driven design.</li>
<li>Exploring Automata — Eric’s ambitious multi-agent behavior tree.</li>
<li>The importance of neurodiversity when building AIs; they need to adapt to many needs. </li>
<li>Novelty search; why learn through one task when you can learn through a variety of tasks at the same time?</li>
<li>Automata’s practical applications and why Eric sees it as a long-term project.</li>
<li>Eric shares a progress report on his work and using design processes like Sprint. </li>
<li>What Eric would like people to use Automata for. </li>
<li>A sense that Elixir is gaining in popularity within Silicon Valley.</li>
<li>Eric gives an elevator-pitch for CryptoWise, a collaborative analysis platform for cryptocurrency.</li>
<li>Todd Resudek interviews Michał Muskała on another edition of Pattern Matching.</li>
<li>Michał shares his background and his move from Poland to London. </li>
<li>Movies and music that Michał enjoys, and details on projects that excite him.</li>
<li>Differences between Erlang and Elixir and why both communities would benefit from working together.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Steen on LinkedIn — <a href="https://www.linkedin.com/in/ericsteen1/" rel="nofollow">https://www.linkedin.com/in/ericsteen1/</a><br>
Eric Steen — <a href="https://twitter.com/the_steener" rel="nofollow">https://twitter.com/the_steener</a><br>
Webflow — <a href="https://webflow.com/" rel="nofollow">https://webflow.com/</a><br>
Automata GitHub — <a href="https://github.com/upstarter/automata" rel="nofollow">https://github.com/upstarter/automata</a><br>
Automata on Slack — <a href="https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA" rel="nofollow">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>
CryptoWise — <a href="https://www.cryptowise.ai/" rel="nofollow">https://www.cryptowise.ai/</a><br>
Hippo Insurance — <a href="https://www.hippo.com/" rel="nofollow">https://www.hippo.com/</a><br>
Carl Hewitt — <a href="https://en.wikipedia.org/wiki/Carl_Hewitt" rel="nofollow">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>
Stanford University — <a href="https://www.stanford.edu/" rel="nofollow">https://www.stanford.edu/</a><br>
MIT — <a href="https://web.mit.edu/" rel="nofollow">https://web.mit.edu/</a><br>
Actor Model — <a href="https://en.wikipedia.org/wiki/Actor_model" rel="nofollow">https://en.wikipedia.org/wiki/Actor_model</a><br>
Marvin Minsky — <a href="http://web.media.mit.edu/%7Eminsky/" rel="nofollow">http://web.media.mit.edu/~minsky/</a><br>
Tensorflex on GitHub— <a href="https://github.com/anshuman23/tensorflex" rel="nofollow">https://github.com/anshuman23/tensorflex</a><br>
Matrex on GitHub — <a href="https://github.com/versilov/matrex" rel="nofollow">https://github.com/versilov/matrex</a> <br>
Handbook of Neuroevolution Through Erlang — <br>
<a href="https://www.springer.com/gp/book/9781461444626" rel="nofollow">https://www.springer.com/gp/book/9781461444626</a><br>
Markov Decision Process — <a href="https://en.wikipedia.org/wiki/Markov_decision_process" rel="nofollow">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>
Amazon Web Services — <a href="https://aws.amazon.com/" rel="nofollow">https://aws.amazon.com/</a><br>
The Little Elixir &amp; OTP Guidebook — <a href="https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111" rel="nofollow">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/" rel="nofollow">https://www.forbes.com/profile/elon-musk/</a><br>
Welcome to the Era of Deep Neuroevolution — <a href="https://eng.uber.com/deep-neuroevolution/" rel="nofollow">https://eng.uber.com/deep-neuroevolution/</a><br>
Kenneth O. Stanley — <a href="https://www.cs.ucf.edu/%7Ekstanley/" rel="nofollow">https://www.cs.ucf.edu/~kstanley/</a><br>
Why Greatness Cannot Be Planned: The Myth of the Objective — <a href="https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/" rel="nofollow">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>
University of Florida — <a href="https://www.ufl.edu/" rel="nofollow">https://www.ufl.edu/</a><br>
Uber Air — <a href="https://www.uber.com/us/es/elevate/" rel="nofollow">https://www.uber.com/us/es/elevate/</a><br>
Jeff Bezos — <a href="https://www.forbes.com/profile/jeff-bezos/" rel="nofollow">https://www.forbes.com/profile/jeff-bezos/</a><br>
Sprint — <a href="https://www.thesprintbook.com/" rel="nofollow">https://www.thesprintbook.com/</a> <br>
Adobe — <a href="https://www.adobe.com/" rel="nofollow">https://www.adobe.com/</a><br>
Horde — <a href="https://www.horde.org/development/" rel="nofollow">https://www.horde.org/development/</a><br>
Libcluster on GitHub — <a href="https://github.com/dsteinberg/libcluster" rel="nofollow">https://github.com/dsteinberg/libcluster</a><br>
Swift for Tensorflow — <a href="https://www.tensorflow.org/swift" rel="nofollow">https://www.tensorflow.org/swift</a><br>
Triplebyte Blog — <a href="https://triplebyte.com/blog" rel="nofollow">https://triplebyte.com/blog</a><br>
EquiTrader — <a href="https://coinmarketcap.com/currencies/equitrader/" rel="nofollow">https://coinmarketcap.com/currencies/equitrader/</a> <br>
BloXroute Labs — <a href="https://bloxroute.com/" rel="nofollow">https://bloxroute.com/</a><br>
Holochain — <a href="https://holochain.org/" rel="nofollow">https://holochain.org/</a><br>
Michał Muskała on GitHub — <a href="https://github.com/michalmuskala" rel="nofollow">https://github.com/michalmuskala</a><br>
Jason on GitHub — <a href="https://github.com/michalmuskala/jason" rel="nofollow">https://github.com/michalmuskala/jason</a><br>
Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Whatsapp — <a href="https://www.whatsapp.com/" rel="nofollow">https://www.whatsapp.com/</a><br>
CERN — <a href="https://home.cern/" rel="nofollow">https://home.cern/</a><br>
Ralph Kaminski — <a href="https://ralphkaminski.com/" rel="nofollow">https://ralphkaminski.com/</a><br>
Jayme Edwards — <a href="https://jaymeedwards.com/" rel="nofollow">https://jaymeedwards.com/</a></p><p>Special Guest: Eric Steen.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Building a sophisticated AI that can evolve to fit our vast and diverse needs is a Herculean challenge. Today we speak with senior engineer Eric Steen about Automata, his experimental Elixir project that uses neuroevolution and cutting edge theory to create a multi-agent behavior tree — or really good AI in the common tongue. But before we tap into that rich topic, we talk with Eric about tech burnout, his background, and why Elixir is an excellent language for writing modern software. He then unpacks AI concepts like the need to develop backpropagation in your system, and the value of “neural diversity,” and Markov decision processes. </p>

<p>After Eric gives his take on architecture versus design and the place of domain-driven design, we discuss Automata. A key breakthrough, Eric shares his enthusiasm for ‘novelty search,’ where machines learn from a variety of new behaviors and searches, as opposed to completing one task at a time. We touch on Automata’s progress, Eric’s long-term approach, and what his project might be used for. Near the end of our interview, we chat about CryptoWise, a collaborative analysis platform for cryptocurrency. </p>

<p>Todd Resudek then opens with another edition of Pattern Matching, where he interviews Whatsapp engineer Michał Muskała. They talk about Michał’s career, the movies and music that he enjoys, and the projects that excite him. Tune in to hear more about both Michał and neuroevolution in AI.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Experiencing tech burnout and challenges around algorithms rendering you redundant.</li>
<li>Hear about Eric’s programming background and shifts in the industry. </li>
<li>Backpropagation and using Elixir to build a neural evolutionary system.</li>
<li>How Markov decision processes help systems choose between possible actions. </li>
<li>Eric’s take on architecture versus design and the place of domain-driven design.</li>
<li>Exploring Automata — Eric’s ambitious multi-agent behavior tree.</li>
<li>The importance of neurodiversity when building AIs; they need to adapt to many needs. </li>
<li>Novelty search; why learn through one task when you can learn through a variety of tasks at the same time?</li>
<li>Automata’s practical applications and why Eric sees it as a long-term project.</li>
<li>Eric shares a progress report on his work and using design processes like Sprint. </li>
<li>What Eric would like people to use Automata for. </li>
<li>A sense that Elixir is gaining in popularity within Silicon Valley.</li>
<li>Eric gives an elevator-pitch for CryptoWise, a collaborative analysis platform for cryptocurrency.</li>
<li>Todd Resudek interviews Michał Muskała on another edition of Pattern Matching.</li>
<li>Michał shares his background and his move from Poland to London. </li>
<li>Movies and music that Michał enjoys, and details on projects that excite him.</li>
<li>Differences between Erlang and Elixir and why both communities would benefit from working together.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Steen on LinkedIn — <a href="https://www.linkedin.com/in/ericsteen1/" rel="nofollow">https://www.linkedin.com/in/ericsteen1/</a><br>
Eric Steen — <a href="https://twitter.com/the_steener" rel="nofollow">https://twitter.com/the_steener</a><br>
Webflow — <a href="https://webflow.com/" rel="nofollow">https://webflow.com/</a><br>
Automata GitHub — <a href="https://github.com/upstarter/automata" rel="nofollow">https://github.com/upstarter/automata</a><br>
Automata on Slack — <a href="https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA" rel="nofollow">https://join.slack.com/t/automata-project/shared_invite/zt-e4fqrmo4-7ujuZwzXHNCGVrZb1aVmA</a><br>
CryptoWise — <a href="https://www.cryptowise.ai/" rel="nofollow">https://www.cryptowise.ai/</a><br>
Hippo Insurance — <a href="https://www.hippo.com/" rel="nofollow">https://www.hippo.com/</a><br>
Carl Hewitt — <a href="https://en.wikipedia.org/wiki/Carl_Hewitt" rel="nofollow">https://en.wikipedia.org/wiki/Carl_Hewitt</a><br>
Stanford University — <a href="https://www.stanford.edu/" rel="nofollow">https://www.stanford.edu/</a><br>
MIT — <a href="https://web.mit.edu/" rel="nofollow">https://web.mit.edu/</a><br>
Actor Model — <a href="https://en.wikipedia.org/wiki/Actor_model" rel="nofollow">https://en.wikipedia.org/wiki/Actor_model</a><br>
Marvin Minsky — <a href="http://web.media.mit.edu/%7Eminsky/" rel="nofollow">http://web.media.mit.edu/~minsky/</a><br>
Tensorflex on GitHub— <a href="https://github.com/anshuman23/tensorflex" rel="nofollow">https://github.com/anshuman23/tensorflex</a><br>
Matrex on GitHub — <a href="https://github.com/versilov/matrex" rel="nofollow">https://github.com/versilov/matrex</a> <br>
Handbook of Neuroevolution Through Erlang — <br>
<a href="https://www.springer.com/gp/book/9781461444626" rel="nofollow">https://www.springer.com/gp/book/9781461444626</a><br>
Markov Decision Process — <a href="https://en.wikipedia.org/wiki/Markov_decision_process" rel="nofollow">https://en.wikipedia.org/wiki/Markov_decision_process</a><br>
Amazon Web Services — <a href="https://aws.amazon.com/" rel="nofollow">https://aws.amazon.com/</a><br>
The Little Elixir &amp; OTP Guidebook — <a href="https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111" rel="nofollow">https://www.amazon.com/Little-Elixir-OTP-Guidebook/dp/1633430111</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/" rel="nofollow">https://www.forbes.com/profile/elon-musk/</a><br>
Welcome to the Era of Deep Neuroevolution — <a href="https://eng.uber.com/deep-neuroevolution/" rel="nofollow">https://eng.uber.com/deep-neuroevolution/</a><br>
Kenneth O. Stanley — <a href="https://www.cs.ucf.edu/%7Ekstanley/" rel="nofollow">https://www.cs.ucf.edu/~kstanley/</a><br>
Why Greatness Cannot Be Planned: The Myth of the Objective — <a href="https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/" rel="nofollow">https://www.amazon.com/Why-Greatness-Cannot-Planned-Objective/dp/3319155237/</a><br>
University of Florida — <a href="https://www.ufl.edu/" rel="nofollow">https://www.ufl.edu/</a><br>
Uber Air — <a href="https://www.uber.com/us/es/elevate/" rel="nofollow">https://www.uber.com/us/es/elevate/</a><br>
Jeff Bezos — <a href="https://www.forbes.com/profile/jeff-bezos/" rel="nofollow">https://www.forbes.com/profile/jeff-bezos/</a><br>
Sprint — <a href="https://www.thesprintbook.com/" rel="nofollow">https://www.thesprintbook.com/</a> <br>
Adobe — <a href="https://www.adobe.com/" rel="nofollow">https://www.adobe.com/</a><br>
Horde — <a href="https://www.horde.org/development/" rel="nofollow">https://www.horde.org/development/</a><br>
Libcluster on GitHub — <a href="https://github.com/dsteinberg/libcluster" rel="nofollow">https://github.com/dsteinberg/libcluster</a><br>
Swift for Tensorflow — <a href="https://www.tensorflow.org/swift" rel="nofollow">https://www.tensorflow.org/swift</a><br>
Triplebyte Blog — <a href="https://triplebyte.com/blog" rel="nofollow">https://triplebyte.com/blog</a><br>
EquiTrader — <a href="https://coinmarketcap.com/currencies/equitrader/" rel="nofollow">https://coinmarketcap.com/currencies/equitrader/</a> <br>
BloXroute Labs — <a href="https://bloxroute.com/" rel="nofollow">https://bloxroute.com/</a><br>
Holochain — <a href="https://holochain.org/" rel="nofollow">https://holochain.org/</a><br>
Michał Muskała on GitHub — <a href="https://github.com/michalmuskala" rel="nofollow">https://github.com/michalmuskala</a><br>
Jason on GitHub — <a href="https://github.com/michalmuskala/jason" rel="nofollow">https://github.com/michalmuskala/jason</a><br>
Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Whatsapp — <a href="https://www.whatsapp.com/" rel="nofollow">https://www.whatsapp.com/</a><br>
CERN — <a href="https://home.cern/" rel="nofollow">https://home.cern/</a><br>
Ralph Kaminski — <a href="https://ralphkaminski.com/" rel="nofollow">https://ralphkaminski.com/</a><br>
Jayme Edwards — <a href="https://jaymeedwards.com/" rel="nofollow">https://jaymeedwards.com/</a></p><p>Special Guest: Eric Steen.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Miki Rezentes on how it's APIs All the Way Down</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e16-rezentes</link>
      <guid isPermaLink="false">441f7029-d8ab-4494-aa7b-cfb08e4ade23</guid>
      <pubDate>Tue, 01 Sep 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/441f7029-d8ab-4494-aa7b-cfb08e4ade23.mp3" length="61712062" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>According to an ancient myth, the world rests on the back of a turtle. Miki Rezentes believes that all software rests on the back of APIs and shares highlights from her talk, ‘APIs All the Way Down’.</itunes:subtitle>
      <itunes:duration>42:29</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/441f7029-d8ab-4494-aa7b-cfb08e4ade23/cover.jpg" />
      <description>According to an ancient myth, the world rests on the back of a turtle. And what does that turtle stand on? Another turtle. It turns out that it’s turtles all the way down. Miki Rezentes, today’s guest, believes that all software rests on the back of APIs. Similar to the myth, it’s APIs all the way down. We open our conversation by discussing how homeschooling her children did more to prepare Miki for a software career than anything else she’s encountered. Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this episode’s key theme, that the tech industry is too concerned with how its software interacts to focus on how the people in its organizations communicate — their ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we talk about the benefits of observation and mirroring. Tracking her career, we touch on how Miki transitioned from a homemaker to a developer before diving into her recent work at the data science platform Mode. She provides unique insights into how she views architecture and design and why the concept of domain-driven design doesn’t go far enough. We chat about how you can see your team as customers to promote domain-driven design and then drill into what she does to create a ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’ are more difficult than technical ones and developers often make mistakes by not first developing common understanding. Especially when this relates to expectations within a company. Near the end of the episode, we explore what leaders can do to maintain productivity when growing their teams. Tune in to hear what you can do to deepen your team’s pool of understanding and improve the quality of your communication. 
Note: this episode was recorded in late July when Miki was working at Mode; she is now a Senior Software Engineer at Frame.io (https://frame.io).
Key Points From This Episode:
Why homeschooling her kids better prepared Miki for software development than anything else.
How people within an organization express themselves through individual APIs. 
Understanding that people come from different backgrounds which influence their API.
The ‘shared pool of knowledge’ and figuring out how to communicate with people. 
Miki’s journey from homemaker to becoming a software engineer.
How nobody really knows what they’re doing.
Security as a trade-off, privacy, and the power of two-factor authentication.
Hear about Miki’s work at the data science platform Mode.
What Miki enjoys most about working in Elixir and what she uses it for. 
How Miki sees architecture and the differences between architecture and design.
Domain-driven design and the differences between data models and software. 
Treating your team ‘Agilely’ and seeing them as your customers.  
Miki’s process of developing a shared pool of understanding before hammering out the end-to-end components. 
Why ‘people problems’ are much more difficult than development problems. 
How tech companies misdiagnose ‘people problems’ as bad design.
Conway’s Law and how code production reflects an organization’s structure. 
The importance of setting expectations to maintain productivity as a team grows in size. 
The danger of the Peter principle; when people are promoted to their level of incompetency.
Links Mentioned in Today’s Episode:
Miki Rezentes LinkedIn —https://www.linkedin.com/in/miki-rezentes-823ba02a/
Miki Rezentes GitHub — https://github.com/mrezentes
Miki Rezentes Twitter — https://twitter.com/mikirez
Mode — https://mode.com/
SmartLogic — https://smartlogic.io/ 
Elixir Wizards Survey — smr.tl/podcastsurvey
Manning Publications — https://www.manning.com/
‘APIs All the Way Down’ — https://www.youtube.com/watch?v=hBpbEsAG4es
Turtles all the way down — https://en.wikipedia.org/wiki/Turtlesallthewaydown
Crucial Conversations — https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822
Thomas Edison State University — https://www.tesu.edu/academics/online-degrees
Xkcd — https://xkcd.com/
Toshiba Global Commerce Systems — https://commerce.toshiba.com/
Kroger — https://www.kroger.com/
CA Technologies — https://www.ca.com/
Jira — https://www.atlassian.com/software/jira
ICFP 2020 — https://icfp20.sigplan.org/
James Edward Gray II — https://github.com/JEG2
Helix Data Engine - Mode — https://mode.com/helix/
Practical Object-Oriented Design in Ruby — https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330
Tanium — https://www.tanium.com/
Poodr — https://www.poodr.com/
Gödel, Escher, Bach — https://en.wikipedia.org/wiki/G%C3%B6del,Escher,Bach
D'Aulaires' Book of Greek Myths — https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943
The Mythical Man-Month — https://en.wikipedia.org/wiki/TheMythicalMan-Month
Applying Conway's Law to improve your software development — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development
Peter Principle — https://en.wikipedia.org/wiki/Peter_principle Special Guest: Miki Rezentes.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>According to an ancient myth, the world rests on the back of a turtle. And what does that turtle stand on? Another turtle. It turns out that it’s turtles all the way down. Miki Rezentes, today’s guest, believes that all software rests on the back of APIs. Similar to the myth, it’s APIs all the way down. We open our conversation by discussing how homeschooling her children did more to prepare Miki for a software career than anything else she’s encountered. Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this episode’s key theme, that the tech industry is too concerned with how its software interacts to focus on how the people in its organizations communicate — their ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we talk about the benefits of observation and mirroring. Tracking her career, we touch on how Miki transitioned from a homemaker to a developer before diving into her recent work at the data science platform Mode. She provides unique insights into how she views architecture and design and why the concept of domain-driven design doesn’t go far enough. We chat about how you can see your team as customers to promote domain-driven design and then drill into what she does to create a ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’ are more difficult than technical ones and developers often make mistakes by not first developing common understanding. Especially when this relates to expectations within a company. Near the end of the episode, we explore what leaders can do to maintain productivity when growing their teams. Tune in to hear what you can do to deepen your team’s pool of understanding and improve the quality of your communication. </p>

<p><em><strong>Note</strong>: this episode was recorded in late July when Miki was working at Mode; she is now a Senior Software Engineer at <a href="https://frame.io" rel="nofollow">Frame.io</a>.</em></p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why homeschooling her kids better prepared Miki for software development than anything else.</li>
<li>How people within an organization express themselves through individual APIs. </li>
<li>Understanding that people come from different backgrounds which influence their API.</li>
<li>The ‘shared pool of knowledge’ and figuring out how to communicate with people. </li>
<li>Miki’s journey from homemaker to becoming a software engineer.</li>
<li>How nobody really knows what they’re doing.</li>
<li>Security as a trade-off, privacy, and the power of two-factor authentication.</li>
<li>Hear about Miki’s work at the data science platform Mode.</li>
<li>What Miki enjoys most about working in Elixir and what she uses it for. </li>
<li>How Miki sees architecture and the differences between architecture and design.</li>
<li>Domain-driven design and the differences between data models and software. </li>
<li>Treating your team ‘Agilely’ and seeing them as your customers.<br></li>
<li>Miki’s process of developing a shared pool of understanding before hammering out the end-to-end components. </li>
<li>Why ‘people problems’ are much more difficult than development problems. </li>
<li>How tech companies misdiagnose ‘people problems’ as bad design.</li>
<li>Conway’s Law and how code production reflects an organization’s structure. </li>
<li>The importance of setting expectations to maintain productivity as a team grows in size. </li>
<li>The danger of the Peter principle; when people are promoted to their level of incompetency.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Miki Rezentes LinkedIn —<a href="https://www.linkedin.com/in/miki-rezentes-823ba02a/" rel="nofollow">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>
Miki Rezentes GitHub — <a href="https://github.com/mrezentes" rel="nofollow">https://github.com/mrezentes</a><br>
Miki Rezentes Twitter — <a href="https://twitter.com/mikirez" rel="nofollow">https://twitter.com/mikirez</a><br>
Mode — <a href="https://mode.com/" rel="nofollow">https://mode.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Wizards Survey — smr.tl/podcastsurvey<br>
Manning Publications — <a href="https://www.manning.com/" rel="nofollow">https://www.manning.com/</a><br>
‘APIs All the Way Down’ — <a href="https://www.youtube.com/watch?v=hBpbEsAG4es" rel="nofollow">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>
Turtles all the way down — <a href="https://en.wikipedia.org/wiki/Turtles_all_the_way_down" rel="nofollow">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>
Crucial Conversations — <a href="https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822" rel="nofollow">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>
Thomas Edison State University — <a href="https://www.tesu.edu/academics/online-degrees" rel="nofollow">https://www.tesu.edu/academics/online-degrees</a><br>
Xkcd — <a href="https://xkcd.com/" rel="nofollow">https://xkcd.com/</a><br>
Toshiba Global Commerce Systems — <a href="https://commerce.toshiba.com/" rel="nofollow">https://commerce.toshiba.com/</a><br>
Kroger — <a href="https://www.kroger.com/" rel="nofollow">https://www.kroger.com/</a><br>
CA Technologies — <a href="https://www.ca.com/" rel="nofollow">https://www.ca.com/</a><br>
Jira — <a href="https://www.atlassian.com/software/jira" rel="nofollow">https://www.atlassian.com/software/jira</a><br>
ICFP 2020 — <a href="https://icfp20.sigplan.org/" rel="nofollow">https://icfp20.sigplan.org/</a><br>
James Edward Gray II — <a href="https://github.com/JEG2" rel="nofollow">https://github.com/JEG2</a><br>
Helix Data Engine - Mode — <a href="https://mode.com/helix/" rel="nofollow">https://mode.com/helix/</a><br>
Practical Object-Oriented Design in Ruby — <a href="https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330" rel="nofollow">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>
Tanium — <a href="https://www.tanium.com/" rel="nofollow">https://www.tanium.com/</a><br>
Poodr — <a href="https://www.poodr.com/" rel="nofollow">https://www.poodr.com/</a><br>
Gödel, Escher, Bach — <a href="https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach" rel="nofollow">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>
D&#39;Aulaires&#39; Book of Greek Myths — <a href="https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943" rel="nofollow">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>
The Mythical Man-Month — <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month" rel="nofollow">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>
Applying Conway&#39;s Law to improve your software development — <a href="https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development" rel="nofollow">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>
Peter Principle — <a href="https://en.wikipedia.org/wiki/Peter_principle" rel="nofollow">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special Guest: Miki Rezentes.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>According to an ancient myth, the world rests on the back of a turtle. And what does that turtle stand on? Another turtle. It turns out that it’s turtles all the way down. Miki Rezentes, today’s guest, believes that all software rests on the back of APIs. Similar to the myth, it’s APIs all the way down. We open our conversation by discussing how homeschooling her children did more to prepare Miki for a software career than anything else she’s encountered. Miki shares highlights from her talk, ‘APIs All the Way Down’. This set up this episode’s key theme, that the tech industry is too concerned with how its software interacts to focus on how the people in its organizations communicate — their ‘human APIs.’ Following this, we ask Miki how she learns people’s APIs and we talk about the benefits of observation and mirroring. Tracking her career, we touch on how Miki transitioned from a homemaker to a developer before diving into her recent work at the data science platform Mode. She provides unique insights into how she views architecture and design and why the concept of domain-driven design doesn’t go far enough. We chat about how you can see your team as customers to promote domain-driven design and then drill into what she does to create a ‘shared pool of knowledge’ with her team. As Miki explains, ‘people problems’ are more difficult than technical ones and developers often make mistakes by not first developing common understanding. Especially when this relates to expectations within a company. Near the end of the episode, we explore what leaders can do to maintain productivity when growing their teams. Tune in to hear what you can do to deepen your team’s pool of understanding and improve the quality of your communication. </p>

<p><em><strong>Note</strong>: this episode was recorded in late July when Miki was working at Mode; she is now a Senior Software Engineer at <a href="https://frame.io" rel="nofollow">Frame.io</a>.</em></p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why homeschooling her kids better prepared Miki for software development than anything else.</li>
<li>How people within an organization express themselves through individual APIs. </li>
<li>Understanding that people come from different backgrounds which influence their API.</li>
<li>The ‘shared pool of knowledge’ and figuring out how to communicate with people. </li>
<li>Miki’s journey from homemaker to becoming a software engineer.</li>
<li>How nobody really knows what they’re doing.</li>
<li>Security as a trade-off, privacy, and the power of two-factor authentication.</li>
<li>Hear about Miki’s work at the data science platform Mode.</li>
<li>What Miki enjoys most about working in Elixir and what she uses it for. </li>
<li>How Miki sees architecture and the differences between architecture and design.</li>
<li>Domain-driven design and the differences between data models and software. </li>
<li>Treating your team ‘Agilely’ and seeing them as your customers.<br></li>
<li>Miki’s process of developing a shared pool of understanding before hammering out the end-to-end components. </li>
<li>Why ‘people problems’ are much more difficult than development problems. </li>
<li>How tech companies misdiagnose ‘people problems’ as bad design.</li>
<li>Conway’s Law and how code production reflects an organization’s structure. </li>
<li>The importance of setting expectations to maintain productivity as a team grows in size. </li>
<li>The danger of the Peter principle; when people are promoted to their level of incompetency.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Miki Rezentes LinkedIn —<a href="https://www.linkedin.com/in/miki-rezentes-823ba02a/" rel="nofollow">https://www.linkedin.com/in/miki-rezentes-823ba02a/</a><br>
Miki Rezentes GitHub — <a href="https://github.com/mrezentes" rel="nofollow">https://github.com/mrezentes</a><br>
Miki Rezentes Twitter — <a href="https://twitter.com/mikirez" rel="nofollow">https://twitter.com/mikirez</a><br>
Mode — <a href="https://mode.com/" rel="nofollow">https://mode.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Wizards Survey — smr.tl/podcastsurvey<br>
Manning Publications — <a href="https://www.manning.com/" rel="nofollow">https://www.manning.com/</a><br>
‘APIs All the Way Down’ — <a href="https://www.youtube.com/watch?v=hBpbEsAG4es" rel="nofollow">https://www.youtube.com/watch?v=hBpbEsAG4es</a><br>
Turtles all the way down — <a href="https://en.wikipedia.org/wiki/Turtles_all_the_way_down" rel="nofollow">https://en.wikipedia.org/wiki/Turtles_all_the_way_down</a><br>
Crucial Conversations — <a href="https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822" rel="nofollow">https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/1469266822</a><br>
Thomas Edison State University — <a href="https://www.tesu.edu/academics/online-degrees" rel="nofollow">https://www.tesu.edu/academics/online-degrees</a><br>
Xkcd — <a href="https://xkcd.com/" rel="nofollow">https://xkcd.com/</a><br>
Toshiba Global Commerce Systems — <a href="https://commerce.toshiba.com/" rel="nofollow">https://commerce.toshiba.com/</a><br>
Kroger — <a href="https://www.kroger.com/" rel="nofollow">https://www.kroger.com/</a><br>
CA Technologies — <a href="https://www.ca.com/" rel="nofollow">https://www.ca.com/</a><br>
Jira — <a href="https://www.atlassian.com/software/jira" rel="nofollow">https://www.atlassian.com/software/jira</a><br>
ICFP 2020 — <a href="https://icfp20.sigplan.org/" rel="nofollow">https://icfp20.sigplan.org/</a><br>
James Edward Gray II — <a href="https://github.com/JEG2" rel="nofollow">https://github.com/JEG2</a><br>
Helix Data Engine - Mode — <a href="https://mode.com/helix/" rel="nofollow">https://mode.com/helix/</a><br>
Practical Object-Oriented Design in Ruby — <a href="https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330" rel="nofollow">https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330</a><br>
Tanium — <a href="https://www.tanium.com/" rel="nofollow">https://www.tanium.com/</a><br>
Poodr — <a href="https://www.poodr.com/" rel="nofollow">https://www.poodr.com/</a><br>
Gödel, Escher, Bach — <a href="https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach" rel="nofollow">https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach</a><br>
D&#39;Aulaires&#39; Book of Greek Myths — <a href="https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943" rel="nofollow">https://www.amazon.com/DAulaires-Greek-Myths-Ingri-dAulaire/dp/0440406943</a><br>
The Mythical Man-Month — <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month" rel="nofollow">https://en.wikipedia.org/wiki/The_Mythical_Man-Month</a><br>
Applying Conway&#39;s Law to improve your software development — <a href="https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development" rel="nofollow">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>
Peter Principle — <a href="https://en.wikipedia.org/wiki/Peter_principle" rel="nofollow">https://en.wikipedia.org/wiki/Peter_principle</a></p><p>Special Guest: Miki Rezentes.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>ElixirConf 2020 Preview</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e15-elixirconf</link>
      <guid isPermaLink="false">a233d61f-e572-4479-a477-18b0d08fb053</guid>
      <pubDate>Thu, 27 Aug 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a233d61f-e572-4479-a477-18b0d08fb053.mp3" length="55896497" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>With ElixirConf 2020 just around the corner, today’s episode is a sneak peek where we talk with six of this year’s speakers.</itunes:subtitle>
      <itunes:duration>1:17:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a233d61f-e572-4479-a477-18b0d08fb053/cover.jpg" />
      <description>With ElixirConf 2020 just around the corner, today’s episode is a sneak peek where we talk with six of this year’s speakers. Each speaker gives listeners an elevator pitch of their talk while throwing in extra details about who their talk is aimed at, what they learned through the process, and which talks they’re excited about attending. 
Our first guest is Quinn Wilton, a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with Gleam’. Quinn explains how she’s created a symbiosis between Elixir and Gleam that helps her create more consistent code while offsetting the disadvantages of dynamic typing. 
We then chat with Dan Lindeman whose talk, ‘Short Circuit IoT Development Time with Nerves,’ is an overview of building custom hardware using Nerves and Elixir. 
After Dan’s plug on how you can start programming Nerves on your laptop, we welcome Jeffrey Utter to the show. His talk is a deep dive into ‘Debugging Live Systems on the Beam.’ Teasing out the topic, we discuss inefficiencies in the debugging process and how many developers adopt a ‘whack-a-mole’ approach to dealing with bugs. 
From debugging to UintSet, Luciano Ramalho, our next speaker, gives us a taste of his presentation, ‘UIntSet: enumerable, streamable, understandable.’ Luciano shares how the Go language inspired him to experiment with leveraging protocols and streams to build new idiomatic Elixir data structures from scratch. He also touches on the importance of being humble when learning new languages and gearing Elixir to a non-engineer user base. 
After Luciano, we’re joined by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings his teaching experience to bear on the topic of ‘Teaching Functional Programming with Elixir.’ This is a key talk in growing our community, especially when considering the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited to teach it. 
Last but certainly not least, we speak with Japa Swadia from Podium about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s been a huge focus on the podcast. We chat about what domain-driven design means and why it’s an important foundational concept for beginners to learn. 
Tune in for this tip-of-the-iceberg preview. It’s just a glimpse into the varied and wonderfully informative talks you can expect at ElixirConf 2020.
Key Points From This Episode:
Introducing Quinn Wilton who is using Gleam to interact with Elixir. 
How being acquired by Synopsys has given Tinfoil Security access to greater resources.
Balancing the advantages of Elixir with its drawbacks when it comes to dynamic analysis.
What Gleam is and how it makes static typing more approachable. 
Teasing Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’
What Quinn has learned from the process of creating his presentation. 
Building a dissembler and the talk that Quinn is most looking forward to attending.
Dan Lindeman’s work at Very making solar micro-grids.
The benefits of Elixir and Nerves when building custom hardware. 
Who Dan’s talk is aimed at and why it’s appropriate for any experience level. 
Working with smart minds and laboring through hardware docs that often lie. 
How scary it can be to work with hardware and the value of having your talk appeal to entry-level Elixir users. 
Jeffrey Utter unpacks his talk — ‘Debugging Live Systems on the Beam.’
How most people play ‘whack-a-mole’ when dealing with live system bugs.
Using match specs to hone in on your debugging process. 
Why most Elixir coders should learn about Jeffrey’s debugging system. 
Why is Recon Library is such an excellent tool and its potential uses in distributed systems.
Hear which talks Jeffrey is looking forward to attending.
How Go inspired Luciano Ramalho to explore applying different data structures to Elixir.
What skill-level Luciano’s talk is aimed at and why.
Developing a sense of how Elixir is idiomatic, despite being such a new language.  
Being humble when learning new languages and the importance of protocols in understanding idiomatic data structures. 
How Elixir is geared towards engineers which can create barriers of entry. 
Mark Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming with Elixir.’
Why knowing Elixir very well doesn’t mean that you can teach it.
The benefits of remote learning; it can make your teaching more organized and to-the-point. 
Hear about the talks that Mark is excited about attending. 
Japa gives us a crash-course on domain-driven design.
Creating a solid foundation for your app by considering the contexts in which it’s used.
Why beginners or those wanting to switch to domain-orientated coding should attend Japa’s talk.
Using schema to point to the same table in different contexts.
Which talks Japa is attending and how she got selected for ElixirConf 2020.
Links Mentioned in Today’s Episode:
Elixir Wizards Listener Survey — https://smr.tl/podcastsurvey
SmartLogic — https://smartlogic.io/
ElixirConf 2020 — https://2020.elixirconf.com/ 
Quinn Wilton — https://github.com/QuinnWilton/gleam-chip8
Quinn Wilton Twitter — https://twitter.com/wiltonquinn
‘Type-Safe LiveView with Gleam’ — https://2020.elixirconf.com/speakers/128/talk
Tinfoil Security — https://www.tinfoilsecurity.com/
Synopsys — https://www.synopsys.com/
Gleam — https://gleam.run/
Louis Pilfold GitHub — https://github.com/lpil
Phoenix LiveView — https://github.com/phoenixframework/phoenixliveview
CHIP-8 — https://en.wikipedia.org/wiki/CHIP-8
Stephen Bussey — https://github.com/sb8244
‘The Joy of an Elixir Monolith’ — https://2020.elixirconf.com/speakers/121/talk
Code BEAM / Code Sync — https://codesync.global/
Dan Lindeman — https://github.com/DanLindeman
Dan Lindeman Twitter — https://twitter.com/lindemda
‘Short Circuit IoT Development Time with Nerves’ — https://2020.elixirconf.com/speakers/117/talk
Nerves Platform — https://www.nerves-project.org/
Very — https://www.verypossible.com/
Justin Schneck — https://www.linkedin.com/in/justinschneck/
Daniel Stoppard — https://www.linkedin.com/in/daniel-spofford-2307a655/
Jenn Gamble — https://2020.elixirconf.com/speakers/115/bio
Juliana Helena — https://2020.elixirconf.com/speakers/129/bio
‘How Elixir made me a better Java programmer’ — https://2020.elixirconf.com/speakers/129/talk
Nerves Hub — https://www.nerves-hub.org/
Jeffrey Utter — https://github.com/jeffutter
Bleacher Report — https://bleacherreport.com/
‘Debugging Live Systems on the Beam’ — https://2020.elixirconf.com/speakers/114/talk
Datadog — https://www.datadoghq.com/
Erlang Sys Trace 2 — https://erlang.org/doc/man/sys.html#trace-2
Recon Library — https://ferd.github.io/recon/
Erlang Debugger — http://erlang.org/doc/apps/debugger/debuggerchapter.html
Catalina Astengo — https://github.com/castengo
gRPC + Elixir Microservices = A Love Story? — https://2020.elixirconf.com/speakers/116/talk
KC Elixir — https://www.kcelixir.com/
Luciano Ramalho — https://github.com/ramalho/
Luciano Ramalho Twitter — https://twitter.com/ramalhoorg
‘UintSet: enumerable, streamable, understandable’ — https://2020.elixirconf.com/speakers/125/talk
ThoughtWorks — https://www.thoughtworks.com/
Go — https://golang.org/
The Go Programming Language — https://www.gopl.io/
Brian W. Kernighan — https://www.cs.princeton.edu/people/profile/bwk
Fluent Python — https://www.oreilly.com/library/view/fluent-python/9781491946237/
Simon de Haan — https://github.com/smn
‘Using Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — https://2020.elixirconf.com/speakers/124/talk
Yutaka Kikuchi — https://github.com/kikuyuta
‘Applying Elixir for driving small hydropower plants with Nerves’
— https://2020.elixirconf.com/speakers/123/talk
Processing — https://processing.org/
Melvin Cedeno — https://github.com/thecraftedgem
‘Teaching Functional Programming With Elixir’ — https://2020.elixirconf.com/speakers/99/talk
Turing — https://turing.io/
 Nicholas Henry — https://github.com/nicholasjhenry
‘The Upside Dimension of Elixir - An Introduction to Metaprogramming’ —
https://2020.elixirconf.com/speakers/120/talk
Brian Marick — https://github.com/marick/
‘Tricks and tools for writing Elixir tests’ — https://2020.elixirconf.com/speakers/109/talk
German Velasco — http://www.germanvelasco.com/
‘Testing LiveView’ — https://2020.elixirconf.com/speakers/119/talk
Lonestar Elixir — https://lonestarelixir.com/
Japa Swadia — https://github.com/japa-swadia
Podium — https://www.podium.com
‘Domain-Driven Design with Elixir’ — https://2020.elixirconf.com/speakers/105/talk
Design Patterns — https://en.wikipedia.org/wiki/Design_Patterns
Justus Eapen Social Handle — @JustusEapen
Eric Oestrich Social Handle — @EricOestrich
Sundi Myint Social Handle — @SundiKhin Special Guests: Dan Lindeman, Japa Swadia, Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>With ElixirConf 2020 just around the corner, today’s episode is a sneak peek where we talk with six of this year’s speakers. Each speaker gives listeners an elevator pitch of their talk while throwing in extra details about who their talk is aimed at, what they learned through the process, and which talks they’re excited about attending. </p>

<p>Our first guest is Quinn Wilton, a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with Gleam’. Quinn explains how she’s created a symbiosis between Elixir and Gleam that helps her create more consistent code while offsetting the disadvantages of dynamic typing. </p>

<p>We then chat with Dan Lindeman whose talk, ‘Short Circuit IoT Development Time with Nerves,’ is an overview of building custom hardware using Nerves and Elixir. </p>

<p>After Dan’s plug on how you can start programming Nerves on your laptop, we welcome Jeffrey Utter to the show. His talk is a deep dive into ‘Debugging Live Systems on the Beam.’ Teasing out the topic, we discuss inefficiencies in the debugging process and how many developers adopt a ‘whack-a-mole’ approach to dealing with bugs. </p>

<p>From debugging to UintSet, Luciano Ramalho, our next speaker, gives us a taste of his presentation, ‘UIntSet: enumerable, streamable, understandable.’ Luciano shares how the Go language inspired him to experiment with leveraging protocols and streams to build new idiomatic Elixir data structures from scratch. He also touches on the importance of being humble when learning new languages and gearing Elixir to a non-engineer user base. </p>

<p>After Luciano, we’re joined by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings his teaching experience to bear on the topic of ‘Teaching Functional Programming with Elixir.’ This is a key talk in growing our community, especially when considering the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited to teach it. </p>

<p>Last but certainly not least, we speak with Japa Swadia from Podium about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s been a huge focus on the podcast. We chat about what domain-driven design means and why it’s an important foundational concept for beginners to learn. </p>

<p>Tune in for this tip-of-the-iceberg preview. It’s just a glimpse into the varied and wonderfully informative talks you can expect at ElixirConf 2020.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Quinn Wilton who is using Gleam to interact with Elixir. </li>
<li>How being acquired by Synopsys has given Tinfoil Security access to greater resources.</li>
<li>Balancing the advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>
<li>What Gleam is and how it makes static typing more approachable. </li>
<li>Teasing Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>
<li>What Quinn has learned from the process of creating his presentation. </li>
<li>Building a dissembler and the talk that Quinn is most looking forward to attending.</li>
<li>Dan Lindeman’s work at Very making solar micro-grids.</li>
<li>The benefits of Elixir and Nerves when building custom hardware. </li>
<li>Who Dan’s talk is aimed at and why it’s appropriate for any experience level. </li>
<li>Working with smart minds and laboring through hardware docs that often lie. </li>
<li>How scary it can be to work with hardware and the value of having your talk appeal to entry-level Elixir users. </li>
<li>Jeffrey Utter unpacks his talk — ‘Debugging Live Systems on the Beam.’</li>
<li>How most people play ‘whack-a-mole’ when dealing with live system bugs.</li>
<li>Using match specs to hone in on your debugging process. </li>
<li>Why most Elixir coders should learn about Jeffrey’s debugging system. </li>
<li>Why is Recon Library is such an excellent tool and its potential uses in distributed systems.</li>
<li>Hear which talks Jeffrey is looking forward to attending.</li>
<li>How Go inspired Luciano Ramalho to explore applying different data structures to Elixir.</li>
<li>What skill-level Luciano’s talk is aimed at and why.</li>
<li>Developing a sense of how Elixir is idiomatic, despite being such a new language.<br></li>
<li>Being humble when learning new languages and the importance of protocols in understanding idiomatic data structures. </li>
<li>How Elixir is geared towards engineers which can create barriers of entry. </li>
<li>Mark Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming with Elixir.’</li>
<li>Why knowing Elixir very well doesn’t mean that you can teach it.</li>
<li>The benefits of remote learning; it can make your teaching more organized and to-the-point. </li>
<li>Hear about the talks that Mark is excited about attending. </li>
<li>Japa gives us a crash-course on domain-driven design.</li>
<li>Creating a solid foundation for your app by considering the contexts in which it’s used.</li>
<li>Why beginners or those wanting to switch to domain-orientated coding should attend Japa’s talk.</li>
<li>Using schema to point to the same table in different contexts.</li>
<li>Which talks Japa is attending and how she got selected for ElixirConf 2020.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards Listener Survey — <a href="https://smr.tl/podcastsurvey" rel="nofollow">https://smr.tl/podcastsurvey</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
ElixirConf 2020 — <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a> <br>
Quinn Wilton — <a href="https://github.com/QuinnWilton/gleam-chip8" rel="nofollow">https://github.com/QuinnWilton/gleam-chip8</a><br>
Quinn Wilton Twitter — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
‘Type-Safe LiveView with Gleam’ — <a href="https://2020.elixirconf.com/speakers/128/talk" rel="nofollow">https://2020.elixirconf.com/speakers/128/talk</a><br>
Tinfoil Security — <a href="https://www.tinfoilsecurity.com/" rel="nofollow">https://www.tinfoilsecurity.com/</a><br>
Synopsys — <a href="https://www.synopsys.com/" rel="nofollow">https://www.synopsys.com/</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Louis Pilfold GitHub — <a href="https://github.com/lpil" rel="nofollow">https://github.com/lpil</a><br>
Phoenix LiveView — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a><br>
CHIP-8 — <a href="https://en.wikipedia.org/wiki/CHIP-8" rel="nofollow">https://en.wikipedia.org/wiki/CHIP-8</a><br>
Stephen Bussey — <a href="https://github.com/sb8244" rel="nofollow">https://github.com/sb8244</a><br>
‘The Joy of an Elixir Monolith’ — <a href="https://2020.elixirconf.com/speakers/121/talk" rel="nofollow">https://2020.elixirconf.com/speakers/121/talk</a><br>
Code BEAM / Code Sync — <a href="https://codesync.global/" rel="nofollow">https://codesync.global/</a><br>
Dan Lindeman — <a href="https://github.com/DanLindeman" rel="nofollow">https://github.com/DanLindeman</a><br>
Dan Lindeman Twitter — <a href="https://twitter.com/lindemda" rel="nofollow">https://twitter.com/lindemda</a><br>
‘Short Circuit IoT Development Time with Nerves’ — <a href="https://2020.elixirconf.com/speakers/117/talk" rel="nofollow">https://2020.elixirconf.com/speakers/117/talk</a><br>
Nerves Platform — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Very — <a href="https://www.verypossible.com/" rel="nofollow">https://www.verypossible.com/</a><br>
Justin Schneck — <a href="https://www.linkedin.com/in/justinschneck/" rel="nofollow">https://www.linkedin.com/in/justinschneck/</a><br>
Daniel Stoppard — <a href="https://www.linkedin.com/in/daniel-spofford-2307a655/" rel="nofollow">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>
Jenn Gamble — <a href="https://2020.elixirconf.com/speakers/115/bio" rel="nofollow">https://2020.elixirconf.com/speakers/115/bio</a><br>
Juliana Helena — <a href="https://2020.elixirconf.com/speakers/129/bio" rel="nofollow">https://2020.elixirconf.com/speakers/129/bio</a><br>
‘How Elixir made me a better Java programmer’ — <a href="https://2020.elixirconf.com/speakers/129/talk" rel="nofollow">https://2020.elixirconf.com/speakers/129/talk</a><br>
Nerves Hub — <a href="https://www.nerves-hub.org/" rel="nofollow">https://www.nerves-hub.org/</a><br>
Jeffrey Utter — <a href="https://github.com/jeffutter" rel="nofollow">https://github.com/jeffutter</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
‘Debugging Live Systems on the Beam’ — <a href="https://2020.elixirconf.com/speakers/114/talk" rel="nofollow">https://2020.elixirconf.com/speakers/114/talk</a><br>
Datadog — <a href="https://www.datadoghq.com/" rel="nofollow">https://www.datadoghq.com/</a><br>
Erlang Sys Trace 2 — <a href="https://erlang.org/doc/man/sys.html#trace-2" rel="nofollow">https://erlang.org/doc/man/sys.html#trace-2</a><br>
Recon Library — <a href="https://ferd.github.io/recon/" rel="nofollow">https://ferd.github.io/recon/</a><br>
Erlang Debugger — <a href="http://erlang.org/doc/apps/debugger/debugger_chapter.html" rel="nofollow">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>
Catalina Astengo — <a href="https://github.com/castengo" rel="nofollow">https://github.com/castengo</a><br>
gRPC + Elixir Microservices = A Love Story? — <a href="https://2020.elixirconf.com/speakers/116/talk" rel="nofollow">https://2020.elixirconf.com/speakers/116/talk</a><br>
KC Elixir — <a href="https://www.kcelixir.com/" rel="nofollow">https://www.kcelixir.com/</a><br>
Luciano Ramalho — <a href="https://github.com/ramalho/" rel="nofollow">https://github.com/ramalho/</a><br>
Luciano Ramalho Twitter — <a href="https://twitter.com/ramalhoorg" rel="nofollow">https://twitter.com/ramalhoorg</a><br>
‘UintSet: enumerable, streamable, understandable’ — <a href="https://2020.elixirconf.com/speakers/125/talk" rel="nofollow">https://2020.elixirconf.com/speakers/125/talk</a><br>
ThoughtWorks — <a href="https://www.thoughtworks.com/" rel="nofollow">https://www.thoughtworks.com/</a><br>
Go — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
The Go Programming Language — <a href="https://www.gopl.io/" rel="nofollow">https://www.gopl.io/</a><br>
Brian W. Kernighan — <a href="https://www.cs.princeton.edu/people/profile/bwk" rel="nofollow">https://www.cs.princeton.edu/people/profile/bwk</a><br>
Fluent Python — <a href="https://www.oreilly.com/library/view/fluent-python/9781491946237/" rel="nofollow">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>
Simon de Haan — <a href="https://github.com/smn" rel="nofollow">https://github.com/smn</a><br>
‘Using Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href="https://2020.elixirconf.com/speakers/124/talk" rel="nofollow">https://2020.elixirconf.com/speakers/124/talk</a><br>
Yutaka Kikuchi — <a href="https://github.com/kikuyuta" rel="nofollow">https://github.com/kikuyuta</a><br>
‘Applying Elixir for driving small hydropower plants with Nerves’<br>
— <a href="https://2020.elixirconf.com/speakers/123/talk" rel="nofollow">https://2020.elixirconf.com/speakers/123/talk</a><br>
Processing — <a href="https://processing.org/" rel="nofollow">https://processing.org/</a><br>
Melvin Cedeno — <a href="https://github.com/thecraftedgem" rel="nofollow">https://github.com/thecraftedgem</a><br>
‘Teaching Functional Programming With Elixir’ — <a href="https://2020.elixirconf.com/speakers/99/talk" rel="nofollow">https://2020.elixirconf.com/speakers/99/talk</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
 Nicholas Henry — <a href="https://github.com/nicholasjhenry" rel="nofollow">https://github.com/nicholasjhenry</a><br>
‘The Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>
<a href="https://2020.elixirconf.com/speakers/120/talk" rel="nofollow">https://2020.elixirconf.com/speakers/120/talk</a><br>
Brian Marick — <a href="https://github.com/marick/" rel="nofollow">https://github.com/marick/</a><br>
‘Tricks and tools for writing Elixir tests’ — <a href="https://2020.elixirconf.com/speakers/109/talk" rel="nofollow">https://2020.elixirconf.com/speakers/109/talk</a><br>
German Velasco — <a href="http://www.germanvelasco.com/" rel="nofollow">http://www.germanvelasco.com/</a><br>
‘Testing LiveView’ — <a href="https://2020.elixirconf.com/speakers/119/talk" rel="nofollow">https://2020.elixirconf.com/speakers/119/talk</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Japa Swadia — <a href="https://github.com/japa-swadia" rel="nofollow">https://github.com/japa-swadia</a><br>
Podium — <a href="https://www.podium.com" rel="nofollow">https://www.podium.com</a><br>
‘Domain-Driven Design with Elixir’ — <a href="https://2020.elixirconf.com/speakers/105/talk" rel="nofollow">https://2020.elixirconf.com/speakers/105/talk</a><br>
Design Patterns — <a href="https://en.wikipedia.org/wiki/Design_Patterns" rel="nofollow">https://en.wikipedia.org/wiki/Design_Patterns</a><br>
Justus Eapen Social Handle — @JustusEapen<br>
Eric Oestrich Social Handle — @EricOestrich<br>
Sundi Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia, Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>With ElixirConf 2020 just around the corner, today’s episode is a sneak peek where we talk with six of this year’s speakers. Each speaker gives listeners an elevator pitch of their talk while throwing in extra details about who their talk is aimed at, what they learned through the process, and which talks they’re excited about attending. </p>

<p>Our first guest is Quinn Wilton, a developer at Tinfoil Security, whose talk is titled ‘Type-Safe LiveView with Gleam’. Quinn explains how she’s created a symbiosis between Elixir and Gleam that helps her create more consistent code while offsetting the disadvantages of dynamic typing. </p>

<p>We then chat with Dan Lindeman whose talk, ‘Short Circuit IoT Development Time with Nerves,’ is an overview of building custom hardware using Nerves and Elixir. </p>

<p>After Dan’s plug on how you can start programming Nerves on your laptop, we welcome Jeffrey Utter to the show. His talk is a deep dive into ‘Debugging Live Systems on the Beam.’ Teasing out the topic, we discuss inefficiencies in the debugging process and how many developers adopt a ‘whack-a-mole’ approach to dealing with bugs. </p>

<p>From debugging to UintSet, Luciano Ramalho, our next speaker, gives us a taste of his presentation, ‘UIntSet: enumerable, streamable, understandable.’ Luciano shares how the Go language inspired him to experiment with leveraging protocols and streams to build new idiomatic Elixir data structures from scratch. He also touches on the importance of being humble when learning new languages and gearing Elixir to a non-engineer user base. </p>

<p>After Luciano, we’re joined by Melvin Cedeno, a fellow Elixir Wizard from the SmartLogic family. Melvin brings his teaching experience to bear on the topic of ‘Teaching Functional Programming with Elixir.’ This is a key talk in growing our community, especially when considering the point that being an Elixir genius doesn’t necessarily mean that you’re well-suited to teach it. </p>

<p>Last but certainly not least, we speak with Japa Swadia from Podium about her talk, ‘Domain-Driven Design with Elixir’ — a subject that’s been a huge focus on the podcast. We chat about what domain-driven design means and why it’s an important foundational concept for beginners to learn. </p>

<p>Tune in for this tip-of-the-iceberg preview. It’s just a glimpse into the varied and wonderfully informative talks you can expect at ElixirConf 2020.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing Quinn Wilton who is using Gleam to interact with Elixir. </li>
<li>How being acquired by Synopsys has given Tinfoil Security access to greater resources.</li>
<li>Balancing the advantages of Elixir with its drawbacks when it comes to dynamic analysis.</li>
<li>What Gleam is and how it makes static typing more approachable. </li>
<li>Teasing Quinn’s ElixirConf talk — ‘Talk Type-Safe LiveView with Gleam’</li>
<li>What Quinn has learned from the process of creating his presentation. </li>
<li>Building a dissembler and the talk that Quinn is most looking forward to attending.</li>
<li>Dan Lindeman’s work at Very making solar micro-grids.</li>
<li>The benefits of Elixir and Nerves when building custom hardware. </li>
<li>Who Dan’s talk is aimed at and why it’s appropriate for any experience level. </li>
<li>Working with smart minds and laboring through hardware docs that often lie. </li>
<li>How scary it can be to work with hardware and the value of having your talk appeal to entry-level Elixir users. </li>
<li>Jeffrey Utter unpacks his talk — ‘Debugging Live Systems on the Beam.’</li>
<li>How most people play ‘whack-a-mole’ when dealing with live system bugs.</li>
<li>Using match specs to hone in on your debugging process. </li>
<li>Why most Elixir coders should learn about Jeffrey’s debugging system. </li>
<li>Why is Recon Library is such an excellent tool and its potential uses in distributed systems.</li>
<li>Hear which talks Jeffrey is looking forward to attending.</li>
<li>How Go inspired Luciano Ramalho to explore applying different data structures to Elixir.</li>
<li>What skill-level Luciano’s talk is aimed at and why.</li>
<li>Developing a sense of how Elixir is idiomatic, despite being such a new language.<br></li>
<li>Being humble when learning new languages and the importance of protocols in understanding idiomatic data structures. </li>
<li>How Elixir is geared towards engineers which can create barriers of entry. </li>
<li>Mark Cedeno gives an elevator pitch for his talk — ‘Teaching Functional Programming with Elixir.’</li>
<li>Why knowing Elixir very well doesn’t mean that you can teach it.</li>
<li>The benefits of remote learning; it can make your teaching more organized and to-the-point. </li>
<li>Hear about the talks that Mark is excited about attending. </li>
<li>Japa gives us a crash-course on domain-driven design.</li>
<li>Creating a solid foundation for your app by considering the contexts in which it’s used.</li>
<li>Why beginners or those wanting to switch to domain-orientated coding should attend Japa’s talk.</li>
<li>Using schema to point to the same table in different contexts.</li>
<li>Which talks Japa is attending and how she got selected for ElixirConf 2020.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards Listener Survey — <a href="https://smr.tl/podcastsurvey" rel="nofollow">https://smr.tl/podcastsurvey</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a><br>
ElixirConf 2020 — <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a> <br>
Quinn Wilton — <a href="https://github.com/QuinnWilton/gleam-chip8" rel="nofollow">https://github.com/QuinnWilton/gleam-chip8</a><br>
Quinn Wilton Twitter — <a href="https://twitter.com/wilton_quinn" rel="nofollow">https://twitter.com/wilton_quinn</a><br>
‘Type-Safe LiveView with Gleam’ — <a href="https://2020.elixirconf.com/speakers/128/talk" rel="nofollow">https://2020.elixirconf.com/speakers/128/talk</a><br>
Tinfoil Security — <a href="https://www.tinfoilsecurity.com/" rel="nofollow">https://www.tinfoilsecurity.com/</a><br>
Synopsys — <a href="https://www.synopsys.com/" rel="nofollow">https://www.synopsys.com/</a><br>
Gleam — <a href="https://gleam.run/" rel="nofollow">https://gleam.run/</a><br>
Louis Pilfold GitHub — <a href="https://github.com/lpil" rel="nofollow">https://github.com/lpil</a><br>
Phoenix LiveView — <a href="https://github.com/phoenixframework/phoenix_live_view" rel="nofollow">https://github.com/phoenixframework/phoenix_live_view</a><br>
CHIP-8 — <a href="https://en.wikipedia.org/wiki/CHIP-8" rel="nofollow">https://en.wikipedia.org/wiki/CHIP-8</a><br>
Stephen Bussey — <a href="https://github.com/sb8244" rel="nofollow">https://github.com/sb8244</a><br>
‘The Joy of an Elixir Monolith’ — <a href="https://2020.elixirconf.com/speakers/121/talk" rel="nofollow">https://2020.elixirconf.com/speakers/121/talk</a><br>
Code BEAM / Code Sync — <a href="https://codesync.global/" rel="nofollow">https://codesync.global/</a><br>
Dan Lindeman — <a href="https://github.com/DanLindeman" rel="nofollow">https://github.com/DanLindeman</a><br>
Dan Lindeman Twitter — <a href="https://twitter.com/lindemda" rel="nofollow">https://twitter.com/lindemda</a><br>
‘Short Circuit IoT Development Time with Nerves’ — <a href="https://2020.elixirconf.com/speakers/117/talk" rel="nofollow">https://2020.elixirconf.com/speakers/117/talk</a><br>
Nerves Platform — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Very — <a href="https://www.verypossible.com/" rel="nofollow">https://www.verypossible.com/</a><br>
Justin Schneck — <a href="https://www.linkedin.com/in/justinschneck/" rel="nofollow">https://www.linkedin.com/in/justinschneck/</a><br>
Daniel Stoppard — <a href="https://www.linkedin.com/in/daniel-spofford-2307a655/" rel="nofollow">https://www.linkedin.com/in/daniel-spofford-2307a655/</a><br>
Jenn Gamble — <a href="https://2020.elixirconf.com/speakers/115/bio" rel="nofollow">https://2020.elixirconf.com/speakers/115/bio</a><br>
Juliana Helena — <a href="https://2020.elixirconf.com/speakers/129/bio" rel="nofollow">https://2020.elixirconf.com/speakers/129/bio</a><br>
‘How Elixir made me a better Java programmer’ — <a href="https://2020.elixirconf.com/speakers/129/talk" rel="nofollow">https://2020.elixirconf.com/speakers/129/talk</a><br>
Nerves Hub — <a href="https://www.nerves-hub.org/" rel="nofollow">https://www.nerves-hub.org/</a><br>
Jeffrey Utter — <a href="https://github.com/jeffutter" rel="nofollow">https://github.com/jeffutter</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
‘Debugging Live Systems on the Beam’ — <a href="https://2020.elixirconf.com/speakers/114/talk" rel="nofollow">https://2020.elixirconf.com/speakers/114/talk</a><br>
Datadog — <a href="https://www.datadoghq.com/" rel="nofollow">https://www.datadoghq.com/</a><br>
Erlang Sys Trace 2 — <a href="https://erlang.org/doc/man/sys.html#trace-2" rel="nofollow">https://erlang.org/doc/man/sys.html#trace-2</a><br>
Recon Library — <a href="https://ferd.github.io/recon/" rel="nofollow">https://ferd.github.io/recon/</a><br>
Erlang Debugger — <a href="http://erlang.org/doc/apps/debugger/debugger_chapter.html" rel="nofollow">http://erlang.org/doc/apps/debugger/debugger_chapter.html</a><br>
Catalina Astengo — <a href="https://github.com/castengo" rel="nofollow">https://github.com/castengo</a><br>
gRPC + Elixir Microservices = A Love Story? — <a href="https://2020.elixirconf.com/speakers/116/talk" rel="nofollow">https://2020.elixirconf.com/speakers/116/talk</a><br>
KC Elixir — <a href="https://www.kcelixir.com/" rel="nofollow">https://www.kcelixir.com/</a><br>
Luciano Ramalho — <a href="https://github.com/ramalho/" rel="nofollow">https://github.com/ramalho/</a><br>
Luciano Ramalho Twitter — <a href="https://twitter.com/ramalhoorg" rel="nofollow">https://twitter.com/ramalhoorg</a><br>
‘UintSet: enumerable, streamable, understandable’ — <a href="https://2020.elixirconf.com/speakers/125/talk" rel="nofollow">https://2020.elixirconf.com/speakers/125/talk</a><br>
ThoughtWorks — <a href="https://www.thoughtworks.com/" rel="nofollow">https://www.thoughtworks.com/</a><br>
Go — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
The Go Programming Language — <a href="https://www.gopl.io/" rel="nofollow">https://www.gopl.io/</a><br>
Brian W. Kernighan — <a href="https://www.cs.princeton.edu/people/profile/bwk" rel="nofollow">https://www.cs.princeton.edu/people/profile/bwk</a><br>
Fluent Python — <a href="https://www.oreilly.com/library/view/fluent-python/9781491946237/" rel="nofollow">https://www.oreilly.com/library/view/fluent-python/9781491946237/</a><br>
Simon de Haan — <a href="https://github.com/smn" rel="nofollow">https://github.com/smn</a><br>
‘Using Elixir and WhatsApp to launch WHO’s global COVID-19 response’ — <a href="https://2020.elixirconf.com/speakers/124/talk" rel="nofollow">https://2020.elixirconf.com/speakers/124/talk</a><br>
Yutaka Kikuchi — <a href="https://github.com/kikuyuta" rel="nofollow">https://github.com/kikuyuta</a><br>
‘Applying Elixir for driving small hydropower plants with Nerves’<br>
— <a href="https://2020.elixirconf.com/speakers/123/talk" rel="nofollow">https://2020.elixirconf.com/speakers/123/talk</a><br>
Processing — <a href="https://processing.org/" rel="nofollow">https://processing.org/</a><br>
Melvin Cedeno — <a href="https://github.com/thecraftedgem" rel="nofollow">https://github.com/thecraftedgem</a><br>
‘Teaching Functional Programming With Elixir’ — <a href="https://2020.elixirconf.com/speakers/99/talk" rel="nofollow">https://2020.elixirconf.com/speakers/99/talk</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
 Nicholas Henry — <a href="https://github.com/nicholasjhenry" rel="nofollow">https://github.com/nicholasjhenry</a><br>
‘The Upside Dimension of Elixir - An Introduction to Metaprogramming’ —<br>
<a href="https://2020.elixirconf.com/speakers/120/talk" rel="nofollow">https://2020.elixirconf.com/speakers/120/talk</a><br>
Brian Marick — <a href="https://github.com/marick/" rel="nofollow">https://github.com/marick/</a><br>
‘Tricks and tools for writing Elixir tests’ — <a href="https://2020.elixirconf.com/speakers/109/talk" rel="nofollow">https://2020.elixirconf.com/speakers/109/talk</a><br>
German Velasco — <a href="http://www.germanvelasco.com/" rel="nofollow">http://www.germanvelasco.com/</a><br>
‘Testing LiveView’ — <a href="https://2020.elixirconf.com/speakers/119/talk" rel="nofollow">https://2020.elixirconf.com/speakers/119/talk</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Japa Swadia — <a href="https://github.com/japa-swadia" rel="nofollow">https://github.com/japa-swadia</a><br>
Podium — <a href="https://www.podium.com" rel="nofollow">https://www.podium.com</a><br>
‘Domain-Driven Design with Elixir’ — <a href="https://2020.elixirconf.com/speakers/105/talk" rel="nofollow">https://2020.elixirconf.com/speakers/105/talk</a><br>
Design Patterns — <a href="https://en.wikipedia.org/wiki/Design_Patterns" rel="nofollow">https://en.wikipedia.org/wiki/Design_Patterns</a><br>
Justus Eapen Social Handle — @JustusEapen<br>
Eric Oestrich Social Handle — @EricOestrich<br>
Sundi Myint Social Handle — @SundiKhin</p><p>Special Guests: Dan Lindeman, Japa Swadia, Jeffrey Utter, Luciano Ramalho, Melvin Cedeno, and Quinn Wilton.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Mark Windholtz on Domain-Driven Design (DDD)</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e14-windholtz</link>
      <guid isPermaLink="false">e18fef05-5ebe-42a1-9317-b193dfa84cd2</guid>
      <pubDate>Thu, 20 Aug 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e18fef05-5ebe-42a1-9317-b193dfa84cd2.mp3" length="42382398" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we invite Mark Windholtz from Agile DNA to talk about how domain-driven design and extreme programming can help bridge the gap between development and business.</itunes:subtitle>
      <itunes:duration>58:51</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e18fef05-5ebe-42a1-9317-b193dfa84cd2/cover.jpg" />
      <description>Domain-driven design and extreme programming can help bridge the gap between development and business, and today we invite Mark Windholtz from Agile DNA to talk about how! Mark starts out by telling us about his early work in extreme programming before agile was a term and how he switched from Rails to Elixir after realizing its power for implementing domain-driven design. We take a deep dive with him into what these concepts mean, hearing him weigh in on how DDD can help architecture accommodate both development and business oriented complexities. For Mark, development and business teams must get a better understanding of each other’s jargon, and DDD is a way to accomplish this. The goal is to find a way of building a solid software core and to move away from features to systems thinking, whereby flexible software can make it more possible to do agile on the business side. We chat about some of the practices and principles that come into play when implementing DDD for Mark, and he details concepts like ubiquitous language, bounded contexts, and how to focus on the core domain by exploring models using tactical and strategic patterns. Along with this, Mark discusses users not being a domain concept, the challenges of getting new terms to stick in teams’ minds, and the task of refactoring code to reflect updated glossaries. Near the end of our conversation, Mark drills down on how DDD can optimize team efficiency. In closing, we get to know Chris Bell from ElixirTalk a little better in this week’s edition of Pattern Matching with Todd!
Key Points From This Episode:
Thoughts on SpaceEx and their approach to engineering: system versus feature optimization.
Mark’s background in extreme programming, how he got started with AgileDNA, and the work they do there.
A definition of extreme programming that adds engineering practices to Scrum.
Elixir’s superior ability to do DDD compared to Rails and how Mark got started using it.
A brief introduction to domain-driven design, an approach to simplifying complex software.
How architecture needs to accommodate essential as well as accidental complexity.
Elixir’s ability to accommodate the building of domain models with well-separated code chunks.
Principles of ubiquitous language and bounded contexts that make up DDD for Mark.
Ubiquitous language helps devs and businesspeople understand each other.
Bounded contexts: ‘Within this space, this world means this thing.’
Shifting focus from trying to make not all software, but core software, good.
What patterns are applied to use principles of ubiquitous language and bounded contexts.
Finding and focusing on the core domain by exploring models and how to do this using tactical and strategic patterns.
The consequences of users not being a domain concept which demands having a clearer language.
Challenges of getting language and concepts to stick in business people’s minds.
Refactoring code to reflect updated glossaries: Technical challenges teams doing DDD face.
Switching paradigms from feature-based optimizations to building an amazing code core.
Approaches to modeling: the value of exploring multiple models.
How teams can become more efficient using DDD and extreme programming.
Final plugs from Mark and how Agile DNA can help use Elixir to implement DDD.
Pattern matching: Todd gets to know more about Chris Bell from ElixirTalk.
How Chris got into programming, what he’d do if not be a programmer, and more!
Why Chris loves history, dream pop, and what movie he’ll watch over and over.
What project Chris is most excited about next: Building Settlers of Catan using LiveView.
Links Mentioned in Today’s Episode:
Elixir Wizards Listener Survey — https://smr.tl/podcastsurvey
SmartLogic — https://smartlogic.io/ 
Mark Windholtz on LinkedIn — https://www.linkedin.com/in/mwindholtz/
Mark Windholtz on Twitter — https://twitter.com/windholtz
Agile DNA — http://www.agiledna.com
Chris Bell on Twitter — https://twitter.com/cjbell?lang=en
ElixirTalk — http://elixirtalk.com/
Chris Keathley — https://keathley.io/
Elon Musk — https://www.forbes.com/profile/elon-musk/#5bbe73cc7999
The Everyday Astronaut — https://www.youtube.com/channel/UC6uKrUWqJ1R2HMTY3LIx5Q
Rob Martin — https://www.linkedin.com/in/version2beta/
Perhap — https://github.com/Perhap/perhap
Andrew Hao — https://github.com/andrewhao
Fred Brooks — http://www.cs.unc.edu/~brooks/
The Mythical Man-Month — https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959
Zach Thomas — https://github.com/zdcthomas?language=elixir&amp;tab=stars
1917 — https://www.imdb.com/title/tt8579674/
Real Estate — https://www.realestatetheband.com/
Galaxie 500 — https://pitchfork.com/artists/1673-galaxie-500/
Star Trek: First Contact — https://www.imdb.com/title/tt0117731/
Star Trek: The Wrath of Khan — https://www.imdb.com/title/tt0084726/
LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
Lonestar Elixir — https://lonestarelixir.com/
 Special Guest: Mark Windholtz.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Domain-driven design and extreme programming can help bridge the gap between development and business, and today we invite Mark Windholtz from Agile DNA to talk about how! Mark starts out by telling us about his early work in extreme programming before agile was a term and how he switched from Rails to Elixir after realizing its power for implementing domain-driven design. We take a deep dive with him into what these concepts mean, hearing him weigh in on how DDD can help architecture accommodate both development and business oriented complexities. For Mark, development and business teams must get a better understanding of each other’s jargon, and DDD is a way to accomplish this. The goal is to find a way of building a solid software core and to move away from features to systems thinking, whereby flexible software can make it more possible to do agile on the business side. We chat about some of the practices and principles that come into play when implementing DDD for Mark, and he details concepts like ubiquitous language, bounded contexts, and how to focus on the core domain by exploring models using tactical and strategic patterns. Along with this, Mark discusses users not being a domain concept, the challenges of getting new terms to stick in teams’ minds, and the task of refactoring code to reflect updated glossaries. Near the end of our conversation, Mark drills down on how DDD can optimize team efficiency. In closing, we get to know Chris Bell from ElixirTalk a little better in this week’s edition of Pattern Matching with Todd!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Thoughts on SpaceEx and their approach to engineering: system versus feature optimization.</li>
<li>Mark’s background in extreme programming, how he got started with AgileDNA, and the work they do there.</li>
<li>A definition of extreme programming that adds engineering practices to Scrum.</li>
<li>Elixir’s superior ability to do DDD compared to Rails and how Mark got started using it.</li>
<li>A brief introduction to domain-driven design, an approach to simplifying complex software.</li>
<li>How architecture needs to accommodate essential as well as accidental complexity.</li>
<li>Elixir’s ability to accommodate the building of domain models with well-separated code chunks.</li>
<li>Principles of ubiquitous language and bounded contexts that make up DDD for Mark.</li>
<li>Ubiquitous language helps devs and businesspeople understand each other.</li>
<li>Bounded contexts: ‘Within this space, this world means this thing.’</li>
<li>Shifting focus from trying to make not all software, but core software, good.</li>
<li>What patterns are applied to use principles of ubiquitous language and bounded contexts.</li>
<li>Finding and focusing on the core domain by exploring models and how to do this using tactical and strategic patterns.</li>
<li>The consequences of users not being a domain concept which demands having a clearer language.</li>
<li>Challenges of getting language and concepts to stick in business people’s minds.</li>
<li>Refactoring code to reflect updated glossaries: Technical challenges teams doing DDD face.</li>
<li>Switching paradigms from feature-based optimizations to building an amazing code core.</li>
<li>Approaches to modeling: the value of exploring multiple models.</li>
<li>How teams can become more efficient using DDD and extreme programming.</li>
<li>Final plugs from Mark and how Agile DNA can help use Elixir to implement DDD.</li>
<li>Pattern matching: Todd gets to know more about Chris Bell from ElixirTalk.</li>
<li>How Chris got into programming, what he’d do if not be a programmer, and more!</li>
<li>Why Chris loves history, dream pop, and what movie he’ll watch over and over.</li>
<li>What project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards Listener Survey — <a href="https://smr.tl/podcastsurvey" rel="nofollow">https://smr.tl/podcastsurvey</a></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Mark Windholtz on LinkedIn — <a href="https://www.linkedin.com/in/mwindholtz/" rel="nofollow">https://www.linkedin.com/in/mwindholtz/</a><br>
Mark Windholtz on Twitter — <a href="https://twitter.com/windholtz" rel="nofollow">https://twitter.com/windholtz</a><br>
Agile DNA — <a href="http://www.agiledna.com" rel="nofollow">http://www.agiledna.com</a><br>
Chris Bell on Twitter — <a href="https://twitter.com/cjbell_?lang=en" rel="nofollow">https://twitter.com/cjbell_?lang=en</a><br>
ElixirTalk — <a href="http://elixirtalk.com/" rel="nofollow">http://elixirtalk.com/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/#5bbe73cc7999" rel="nofollow">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>
The Everyday Astronaut — <a href="https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q" rel="nofollow">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>
Rob Martin — <a href="https://www.linkedin.com/in/version2beta/" rel="nofollow">https://www.linkedin.com/in/version2beta/</a><br>
Perhap — <a href="https://github.com/Perhap/perhap" rel="nofollow">https://github.com/Perhap/perhap</a><br>
Andrew Hao — <a href="https://github.com/andrewhao" rel="nofollow">https://github.com/andrewhao</a><br>
Fred Brooks — <a href="http://www.cs.unc.edu/%7Ebrooks/" rel="nofollow">http://www.cs.unc.edu/~brooks/</a><br>
The Mythical Man-Month — <a href="https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959" rel="nofollow">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>
Zach Thomas — <a href="https://github.com/zdcthomas?language=elixir&tab=stars" rel="nofollow">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>
1917 — <a href="https://www.imdb.com/title/tt8579674/" rel="nofollow">https://www.imdb.com/title/tt8579674/</a><br>
Real Estate — <a href="https://www.realestatetheband.com/" rel="nofollow">https://www.realestatetheband.com/</a><br>
Galaxie 500 — <a href="https://pitchfork.com/artists/1673-galaxie-500/" rel="nofollow">https://pitchfork.com/artists/1673-galaxie-500/</a><br>
Star Trek: First Contact — <a href="https://www.imdb.com/title/tt0117731/" rel="nofollow">https://www.imdb.com/title/tt0117731/</a><br>
Star Trek: The Wrath of Khan — <a href="https://www.imdb.com/title/tt0084726/" rel="nofollow">https://www.imdb.com/title/tt0084726/</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p><p>Special Guest: Mark Windholtz.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Domain-driven design and extreme programming can help bridge the gap between development and business, and today we invite Mark Windholtz from Agile DNA to talk about how! Mark starts out by telling us about his early work in extreme programming before agile was a term and how he switched from Rails to Elixir after realizing its power for implementing domain-driven design. We take a deep dive with him into what these concepts mean, hearing him weigh in on how DDD can help architecture accommodate both development and business oriented complexities. For Mark, development and business teams must get a better understanding of each other’s jargon, and DDD is a way to accomplish this. The goal is to find a way of building a solid software core and to move away from features to systems thinking, whereby flexible software can make it more possible to do agile on the business side. We chat about some of the practices and principles that come into play when implementing DDD for Mark, and he details concepts like ubiquitous language, bounded contexts, and how to focus on the core domain by exploring models using tactical and strategic patterns. Along with this, Mark discusses users not being a domain concept, the challenges of getting new terms to stick in teams’ minds, and the task of refactoring code to reflect updated glossaries. Near the end of our conversation, Mark drills down on how DDD can optimize team efficiency. In closing, we get to know Chris Bell from ElixirTalk a little better in this week’s edition of Pattern Matching with Todd!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Thoughts on SpaceEx and their approach to engineering: system versus feature optimization.</li>
<li>Mark’s background in extreme programming, how he got started with AgileDNA, and the work they do there.</li>
<li>A definition of extreme programming that adds engineering practices to Scrum.</li>
<li>Elixir’s superior ability to do DDD compared to Rails and how Mark got started using it.</li>
<li>A brief introduction to domain-driven design, an approach to simplifying complex software.</li>
<li>How architecture needs to accommodate essential as well as accidental complexity.</li>
<li>Elixir’s ability to accommodate the building of domain models with well-separated code chunks.</li>
<li>Principles of ubiquitous language and bounded contexts that make up DDD for Mark.</li>
<li>Ubiquitous language helps devs and businesspeople understand each other.</li>
<li>Bounded contexts: ‘Within this space, this world means this thing.’</li>
<li>Shifting focus from trying to make not all software, but core software, good.</li>
<li>What patterns are applied to use principles of ubiquitous language and bounded contexts.</li>
<li>Finding and focusing on the core domain by exploring models and how to do this using tactical and strategic patterns.</li>
<li>The consequences of users not being a domain concept which demands having a clearer language.</li>
<li>Challenges of getting language and concepts to stick in business people’s minds.</li>
<li>Refactoring code to reflect updated glossaries: Technical challenges teams doing DDD face.</li>
<li>Switching paradigms from feature-based optimizations to building an amazing code core.</li>
<li>Approaches to modeling: the value of exploring multiple models.</li>
<li>How teams can become more efficient using DDD and extreme programming.</li>
<li>Final plugs from Mark and how Agile DNA can help use Elixir to implement DDD.</li>
<li>Pattern matching: Todd gets to know more about Chris Bell from ElixirTalk.</li>
<li>How Chris got into programming, what he’d do if not be a programmer, and more!</li>
<li>Why Chris loves history, dream pop, and what movie he’ll watch over and over.</li>
<li>What project Chris is most excited about next: Building Settlers of Catan using LiveView.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Elixir Wizards Listener Survey — <a href="https://smr.tl/podcastsurvey" rel="nofollow">https://smr.tl/podcastsurvey</a></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Mark Windholtz on LinkedIn — <a href="https://www.linkedin.com/in/mwindholtz/" rel="nofollow">https://www.linkedin.com/in/mwindholtz/</a><br>
Mark Windholtz on Twitter — <a href="https://twitter.com/windholtz" rel="nofollow">https://twitter.com/windholtz</a><br>
Agile DNA — <a href="http://www.agiledna.com" rel="nofollow">http://www.agiledna.com</a><br>
Chris Bell on Twitter — <a href="https://twitter.com/cjbell_?lang=en" rel="nofollow">https://twitter.com/cjbell_?lang=en</a><br>
ElixirTalk — <a href="http://elixirtalk.com/" rel="nofollow">http://elixirtalk.com/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/#5bbe73cc7999" rel="nofollow">https://www.forbes.com/profile/elon-musk/#5bbe73cc7999</a><br>
The Everyday Astronaut — <a href="https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q" rel="nofollow">https://www.youtube.com/channel/UC6uKrU_WqJ1R2HMTY3LIx5Q</a><br>
Rob Martin — <a href="https://www.linkedin.com/in/version2beta/" rel="nofollow">https://www.linkedin.com/in/version2beta/</a><br>
Perhap — <a href="https://github.com/Perhap/perhap" rel="nofollow">https://github.com/Perhap/perhap</a><br>
Andrew Hao — <a href="https://github.com/andrewhao" rel="nofollow">https://github.com/andrewhao</a><br>
Fred Brooks — <a href="http://www.cs.unc.edu/%7Ebrooks/" rel="nofollow">http://www.cs.unc.edu/~brooks/</a><br>
The Mythical Man-Month — <a href="https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959" rel="nofollow">https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959</a><br>
Zach Thomas — <a href="https://github.com/zdcthomas?language=elixir&tab=stars" rel="nofollow">https://github.com/zdcthomas?language=elixir&amp;tab=stars</a><br>
1917 — <a href="https://www.imdb.com/title/tt8579674/" rel="nofollow">https://www.imdb.com/title/tt8579674/</a><br>
Real Estate — <a href="https://www.realestatetheband.com/" rel="nofollow">https://www.realestatetheband.com/</a><br>
Galaxie 500 — <a href="https://pitchfork.com/artists/1673-galaxie-500/" rel="nofollow">https://pitchfork.com/artists/1673-galaxie-500/</a><br>
Star Trek: First Contact — <a href="https://www.imdb.com/title/tt0117731/" rel="nofollow">https://www.imdb.com/title/tt0117731/</a><br>
Star Trek: The Wrath of Khan — <a href="https://www.imdb.com/title/tt0084726/" rel="nofollow">https://www.imdb.com/title/tt0084726/</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p><p>Special Guest: Mark Windholtz.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Elixir Wizards Dojo: Nerves Part 2 with Connor Rigby and Todd Resudek</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e13b-dojo</link>
      <guid isPermaLink="false">6cf32d50-909b-4839-a690-0fdc8ec48a2f</guid>
      <pubDate>Thu, 13 Aug 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/6cf32d50-909b-4839-a690-0fdc8ec48a2f.mp3" length="61996266" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today’s episode, in partnership with ElixirConf Japan, we talk to Nerves core team members about all things Nerves.</itunes:subtitle>
      <itunes:duration>42:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/6cf32d50-909b-4839-a690-0fdc8ec48a2f/cover.jpg" />
      <description>Welcome to the second part of our special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode, we talk to Nerves core team members Todd Resudek and Connor Rigby about all things Nerves. But first, Todd leads us into a delightful digression about his enjoyment of heavy metal music. From metal back to Nerves, Todd chats about how he uses Nerves to monitor his internet connection and to automatically restart his router when certain conditions are met. After talking about using Flutter and Dart to build GUIs, we ask Todd to share another of his Nerves projects; the future of sprinklers — the Drizzle 2000! We then explore Connor’s self-defined role in the Nerves team as the development head of networking libraries before discussing how easy it is to use Nerves if you are an Elixir user. Todd and Connor dive into their utopian visions for the future of Nerves and why no other IoT solutions can compete with the tooling that Nerves provides. We talk about FarmBot and the many features that its models have, including how they can pulverize weeds. This springboards the conversion into the increasing importance of IoT tech in the agriculture sector and how it’s likely to be the next billion-dollar industry. We round off the episode by giving our guests the space to plug themselves and they close with a request for listeners to Iron Maiden and Metallica’s first albums. A perfect compliment to the first installment of the Elixir Wizards Dojo, tune in to learn more about the Nerves Project.
Key Points From This Episode:
Introducing our guests and this episode’s connection to ElixirConf Japan. 
Connor and Todd lead a chat on the history and subgenres of heavy metal music.
Todd talks about using Nerves to monitor his internet connection and restart his router.
Building a user interface for Nerves’s projects using Flutter; Google’s UI toolkit. 
Best practices for developing apps with a specific focus on GUI apps.
Hear about the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.
Todd and Connor’s respective roles as a part of the Nerves core team. 
The benefit of using Nerves; once it’s booted it’s a regular Elixir app. 
What a kiosk terminal is and how you would go about internationalizing one.
Exploring the future of Nerves and hardware development.
Comparing Nerves to other IoT solutions; in conclusion, nothing can compete. 
Different FarmBot system models that all use Nerves to grow food for you.
Using Nerves to encode and record video or to create a live stream. 
Why integrating IoT into the agricultural sector will be the next billion-dollar industry.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
ElixirConf — https://elixirconf.com/2020
Connor Rigby GitHub — https://github.com/ConnorRigby
Todd Resudek Twitter — https://twitter.com/sprsmpl
Todd Resudek GitHub — https://github.com/supersimple
Simplebet — https://simplebet.io/
Flutter — https://flutter.dev/
Binary Noggin — https://binarynoggin.com/
Nerves Project — https://www.nerves-project.org/
Nerves Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution
Nerves Vintage Net GitHub — https://github.com/nerves-networking/vintagenet
Nerves Web Kiosk GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3
Rhapsody of Fire — https://www.rhapsodyoffire.com/
Ronnie James Dio — https://www.ronniejamesdio.com/
DragonForce — https://dragonforce.com/
Black Sabbath — https://www.blacksabbath.com/
Deep Purple — https://deeppurple.com/
Iron Maiden — https://ironmaiden.com
Judas Priest — http://www.judaspriest.com/home/
Sam Dunn — https://www.imdb.com/name/nm0242757/
Ryan Holiday — https://ryanholiday.net/
Arjen Lucassen — https://www.arjenlucassen.com
Metallica — https://www.metallica.com/
San Francisco Symphony — https://www.sfsymphony.org/
Fping — https://fping.org/
Dart — https://dart.dev/
React Native — https://reactnative.dev/
Scenic — https://kry10.com/
Phoenix Framework — https://www.phoenixframework.org/
Drizzler 2000 GitHub — https://github.com/supersimple/drizzle
Ditch Witch — https://www.ditchwitch.com/
Jon Carstens — https://twitter.com/joncarstens?lang=en
Le Tote — https://letote.com/
Electron — https://www.electronjs.org/
Matthew Ludwigs — https://www.linkedin.com/in/mattludwigs/
SmartRent — https://smartrent.com/
Sophie Debenedetto — http://sophiedebenedetto.nyc/
FarmBot — https://farm.bot/
Membrane Framework — https://www.membraneframework.org/
Greg Mefford — https://www.linkedin.com/in/ferggo/
Omni-eye GitHub — https://github.com/GregMefford/omni_eye
Bowery Farming — https://boweryfarming.com/
John Deere — https://www.deere.com
Show Notes - Japanese
Elixir Wizards Dojo 第2部 Connor Rigby と Todd Resudek
Episode S4E13b: 概要
Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle 2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。
このエピソードのみどころ
ゲストの紹介と、このエピソードとElixirConf JPとのコネクションについて
Connor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内
ToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の
Fultter というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築
GUIアプリに焦点を当てたときのアプリ開発のベストプラクティス
Drizzle 2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム
ToddとConnorのNervesコアチームにおけるそれぞれの役割
Nervesを使う利点: 一度起動すると通常のElixirアプリになる
キオスク端末とは何か，どのようにキオスク端末を国際化するか
Nervesとハードウェア開発の将来の探求
Nervesと他のIoTソリューションの比較: 結論としては，Nervesに敵うものはない
ファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる
Nervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法
IoTを農業分野に統合することが次の10億ドル産業になる理由 Special Guests: Connor Rigby and Todd Resudek.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the second part of our special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode, we talk to Nerves core team members Todd Resudek and Connor Rigby about all things Nerves. But first, Todd leads us into a delightful digression about his enjoyment of heavy metal music. From metal back to Nerves, Todd chats about how he uses Nerves to monitor his internet connection and to automatically restart his router when certain conditions are met. After talking about using Flutter and Dart to build GUIs, we ask Todd to share another of his Nerves projects; the future of sprinklers — the Drizzle 2000! We then explore Connor’s self-defined role in the Nerves team as the development head of networking libraries before discussing how easy it is to use Nerves if you are an Elixir user. Todd and Connor dive into their utopian visions for the future of Nerves and why no other IoT solutions can compete with the tooling that Nerves provides. We talk about FarmBot and the many features that its models have, including how they can pulverize weeds. This springboards the conversion into the increasing importance of IoT tech in the agriculture sector and how it’s likely to be the next billion-dollar industry. We round off the episode by giving our guests the space to plug themselves and they close with a request for listeners to Iron Maiden and Metallica’s first albums. A perfect compliment to the first installment of the Elixir Wizards Dojo, tune in to learn more about the Nerves Project.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing our guests and this episode’s connection to ElixirConf Japan. </li>
<li>Connor and Todd lead a chat on the history and subgenres of heavy metal music.</li>
<li>Todd talks about using Nerves to monitor his internet connection and restart his router.</li>
<li>Building a user interface for Nerves’s projects using Flutter; Google’s UI toolkit. </li>
<li>Best practices for developing apps with a specific focus on GUI apps.</li>
<li>Hear about the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>
<li>Todd and Connor’s respective roles as a part of the Nerves core team. </li>
<li>The benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>
<li>What a kiosk terminal is and how you would go about internationalizing one.</li>
<li>Exploring the future of Nerves and hardware development.</li>
<li>Comparing Nerves to other IoT solutions; in conclusion, nothing can compete. </li>
<li>Different FarmBot system models that all use Nerves to grow food for you.</li>
<li>Using Nerves to encode and record video or to create a live stream. </li>
<li>Why integrating IoT into the agricultural sector will be the next billion-dollar industry.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Connor Rigby GitHub — <a href="https://github.com/ConnorRigby" rel="nofollow">https://github.com/ConnorRigby</a><br>
Todd Resudek Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Todd Resudek GitHub — <a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a><br>
Simplebet — <a href="https://simplebet.io/" rel="nofollow">https://simplebet.io/</a><br>
Flutter — <a href="https://flutter.dev/" rel="nofollow">https://flutter.dev/</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Nerves Project GitHub — <a href="https://github.com/nerves-project/nerves_pack#erlang-distribution" rel="nofollow">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>
Nerves Vintage Net GitHub — <a href="https://github.com/nerves-networking/vintage_net" rel="nofollow">https://github.com/nerves-networking/vintage_net</a><br>
Nerves Web Kiosk GitHub — <a href="https://github.com/nerves-web-kiosk/kiosk_system_rpi3" rel="nofollow">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>
Rhapsody of Fire — <a href="https://www.rhapsodyoffire.com/" rel="nofollow">https://www.rhapsodyoffire.com/</a><br>
Ronnie James Dio — <a href="https://www.ronniejamesdio.com/" rel="nofollow">https://www.ronniejamesdio.com/</a><br>
DragonForce — <a href="https://dragonforce.com/" rel="nofollow">https://dragonforce.com/</a><br>
Black Sabbath — <a href="https://www.blacksabbath.com/" rel="nofollow">https://www.blacksabbath.com/</a><br>
Deep Purple — <a href="https://deeppurple.com/" rel="nofollow">https://deeppurple.com/</a><br>
Iron Maiden — <a href="https://ironmaiden.com" rel="nofollow">https://ironmaiden.com</a><br>
Judas Priest — <a href="http://www.judaspriest.com/home/" rel="nofollow">http://www.judaspriest.com/home/</a><br>
Sam Dunn — <a href="https://www.imdb.com/name/nm0242757/" rel="nofollow">https://www.imdb.com/name/nm0242757/</a><br>
Ryan Holiday — <a href="https://ryanholiday.net/" rel="nofollow">https://ryanholiday.net/</a><br>
Arjen Lucassen — <a href="https://www.arjenlucassen.com" rel="nofollow">https://www.arjenlucassen.com</a><br>
Metallica — <a href="https://www.metallica.com/" rel="nofollow">https://www.metallica.com/</a><br>
San Francisco Symphony — <a href="https://www.sfsymphony.org/" rel="nofollow">https://www.sfsymphony.org/</a><br>
Fping — <a href="https://fping.org/" rel="nofollow">https://fping.org/</a><br>
Dart — <a href="https://dart.dev/" rel="nofollow">https://dart.dev/</a><br>
React Native — <a href="https://reactnative.dev/" rel="nofollow">https://reactnative.dev/</a><br>
Scenic — <a href="https://kry10.com/" rel="nofollow">https://kry10.com/</a><br>
Phoenix Framework — <a href="https://www.phoenixframework.org/" rel="nofollow">https://www.phoenixframework.org/</a><br>
Drizzler 2000 GitHub — <a href="https://github.com/supersimple/drizzle" rel="nofollow">https://github.com/supersimple/drizzle</a><br>
Ditch Witch — <a href="https://www.ditchwitch.com/" rel="nofollow">https://www.ditchwitch.com/</a><br>
Jon Carstens — <a href="https://twitter.com/joncarstens?lang=en" rel="nofollow">https://twitter.com/joncarstens?lang=en</a><br>
Le Tote — <a href="https://letote.com/" rel="nofollow">https://letote.com/</a><br>
Electron — <a href="https://www.electronjs.org/" rel="nofollow">https://www.electronjs.org/</a><br>
Matthew Ludwigs — <a href="https://www.linkedin.com/in/mattludwigs/" rel="nofollow">https://www.linkedin.com/in/mattludwigs/</a><br>
SmartRent — <a href="https://smartrent.com/" rel="nofollow">https://smartrent.com/</a><br>
Sophie Debenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
FarmBot — <a href="https://farm.bot/" rel="nofollow">https://farm.bot/</a><br>
Membrane Framework — <a href="https://www.membraneframework.org/" rel="nofollow">https://www.membraneframework.org/</a><br>
Greg Mefford — <a href="https://www.linkedin.com/in/ferggo/" rel="nofollow">https://www.linkedin.com/in/ferggo/</a><br>
Omni-eye GitHub — <a href="https://github.com/GregMefford/omni_eye" rel="nofollow">https://github.com/GregMefford/omni_eye</a><br>
Bowery Farming — <a href="https://boweryfarming.com/" rel="nofollow">https://boweryfarming.com/</a><br>
John Deere — <a href="https://www.deere.com" rel="nofollow">https://www.deere.com</a></p>

<p><strong>Show Notes - Japanese</strong></p>

<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd Resudek</p>

<p>Episode S4E13b: 概要</p>

<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle 2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>

<p>このエピソードのみどころ</p>

<p>ゲストの紹介と、このエピソードとElixirConf JPとのコネクションについて<br>
Connor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>
ToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>
Fultter というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>
GUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>
Drizzle 2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>
ToddとConnorのNervesコアチームにおけるそれぞれの役割<br>
Nervesを使う利点: 一度起動すると通常のElixirアプリになる<br>
キオスク端末とは何か，どのようにキオスク端末を国際化するか<br>
Nervesとハードウェア開発の将来の探求<br>
Nervesと他のIoTソリューションの比較: 結論としては，Nervesに敵うものはない<br>
ファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>
Nervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>
IoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special Guests: Connor Rigby and Todd Resudek.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the second part of our special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan. In today’s episode, we talk to Nerves core team members Todd Resudek and Connor Rigby about all things Nerves. But first, Todd leads us into a delightful digression about his enjoyment of heavy metal music. From metal back to Nerves, Todd chats about how he uses Nerves to monitor his internet connection and to automatically restart his router when certain conditions are met. After talking about using Flutter and Dart to build GUIs, we ask Todd to share another of his Nerves projects; the future of sprinklers — the Drizzle 2000! We then explore Connor’s self-defined role in the Nerves team as the development head of networking libraries before discussing how easy it is to use Nerves if you are an Elixir user. Todd and Connor dive into their utopian visions for the future of Nerves and why no other IoT solutions can compete with the tooling that Nerves provides. We talk about FarmBot and the many features that its models have, including how they can pulverize weeds. This springboards the conversion into the increasing importance of IoT tech in the agriculture sector and how it’s likely to be the next billion-dollar industry. We round off the episode by giving our guests the space to plug themselves and they close with a request for listeners to Iron Maiden and Metallica’s first albums. A perfect compliment to the first installment of the Elixir Wizards Dojo, tune in to learn more about the Nerves Project.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing our guests and this episode’s connection to ElixirConf Japan. </li>
<li>Connor and Todd lead a chat on the history and subgenres of heavy metal music.</li>
<li>Todd talks about using Nerves to monitor his internet connection and restart his router.</li>
<li>Building a user interface for Nerves’s projects using Flutter; Google’s UI toolkit. </li>
<li>Best practices for developing apps with a specific focus on GUI apps.</li>
<li>Hear about the Drizzle 2000! Todd’s sprinkler controller system that runs on Nerves.</li>
<li>Todd and Connor’s respective roles as a part of the Nerves core team. </li>
<li>The benefit of using Nerves; once it’s booted it’s a regular Elixir app. </li>
<li>What a kiosk terminal is and how you would go about internationalizing one.</li>
<li>Exploring the future of Nerves and hardware development.</li>
<li>Comparing Nerves to other IoT solutions; in conclusion, nothing can compete. </li>
<li>Different FarmBot system models that all use Nerves to grow food for you.</li>
<li>Using Nerves to encode and record video or to create a live stream. </li>
<li>Why integrating IoT into the agricultural sector will be the next billion-dollar industry.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Connor Rigby GitHub — <a href="https://github.com/ConnorRigby" rel="nofollow">https://github.com/ConnorRigby</a><br>
Todd Resudek Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Todd Resudek GitHub — <a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a><br>
Simplebet — <a href="https://simplebet.io/" rel="nofollow">https://simplebet.io/</a><br>
Flutter — <a href="https://flutter.dev/" rel="nofollow">https://flutter.dev/</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Nerves Project GitHub — <a href="https://github.com/nerves-project/nerves_pack#erlang-distribution" rel="nofollow">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>
Nerves Vintage Net GitHub — <a href="https://github.com/nerves-networking/vintage_net" rel="nofollow">https://github.com/nerves-networking/vintage_net</a><br>
Nerves Web Kiosk GitHub — <a href="https://github.com/nerves-web-kiosk/kiosk_system_rpi3" rel="nofollow">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>
Rhapsody of Fire — <a href="https://www.rhapsodyoffire.com/" rel="nofollow">https://www.rhapsodyoffire.com/</a><br>
Ronnie James Dio — <a href="https://www.ronniejamesdio.com/" rel="nofollow">https://www.ronniejamesdio.com/</a><br>
DragonForce — <a href="https://dragonforce.com/" rel="nofollow">https://dragonforce.com/</a><br>
Black Sabbath — <a href="https://www.blacksabbath.com/" rel="nofollow">https://www.blacksabbath.com/</a><br>
Deep Purple — <a href="https://deeppurple.com/" rel="nofollow">https://deeppurple.com/</a><br>
Iron Maiden — <a href="https://ironmaiden.com" rel="nofollow">https://ironmaiden.com</a><br>
Judas Priest — <a href="http://www.judaspriest.com/home/" rel="nofollow">http://www.judaspriest.com/home/</a><br>
Sam Dunn — <a href="https://www.imdb.com/name/nm0242757/" rel="nofollow">https://www.imdb.com/name/nm0242757/</a><br>
Ryan Holiday — <a href="https://ryanholiday.net/" rel="nofollow">https://ryanholiday.net/</a><br>
Arjen Lucassen — <a href="https://www.arjenlucassen.com" rel="nofollow">https://www.arjenlucassen.com</a><br>
Metallica — <a href="https://www.metallica.com/" rel="nofollow">https://www.metallica.com/</a><br>
San Francisco Symphony — <a href="https://www.sfsymphony.org/" rel="nofollow">https://www.sfsymphony.org/</a><br>
Fping — <a href="https://fping.org/" rel="nofollow">https://fping.org/</a><br>
Dart — <a href="https://dart.dev/" rel="nofollow">https://dart.dev/</a><br>
React Native — <a href="https://reactnative.dev/" rel="nofollow">https://reactnative.dev/</a><br>
Scenic — <a href="https://kry10.com/" rel="nofollow">https://kry10.com/</a><br>
Phoenix Framework — <a href="https://www.phoenixframework.org/" rel="nofollow">https://www.phoenixframework.org/</a><br>
Drizzler 2000 GitHub — <a href="https://github.com/supersimple/drizzle" rel="nofollow">https://github.com/supersimple/drizzle</a><br>
Ditch Witch — <a href="https://www.ditchwitch.com/" rel="nofollow">https://www.ditchwitch.com/</a><br>
Jon Carstens — <a href="https://twitter.com/joncarstens?lang=en" rel="nofollow">https://twitter.com/joncarstens?lang=en</a><br>
Le Tote — <a href="https://letote.com/" rel="nofollow">https://letote.com/</a><br>
Electron — <a href="https://www.electronjs.org/" rel="nofollow">https://www.electronjs.org/</a><br>
Matthew Ludwigs — <a href="https://www.linkedin.com/in/mattludwigs/" rel="nofollow">https://www.linkedin.com/in/mattludwigs/</a><br>
SmartRent — <a href="https://smartrent.com/" rel="nofollow">https://smartrent.com/</a><br>
Sophie Debenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
FarmBot — <a href="https://farm.bot/" rel="nofollow">https://farm.bot/</a><br>
Membrane Framework — <a href="https://www.membraneframework.org/" rel="nofollow">https://www.membraneframework.org/</a><br>
Greg Mefford — <a href="https://www.linkedin.com/in/ferggo/" rel="nofollow">https://www.linkedin.com/in/ferggo/</a><br>
Omni-eye GitHub — <a href="https://github.com/GregMefford/omni_eye" rel="nofollow">https://github.com/GregMefford/omni_eye</a><br>
Bowery Farming — <a href="https://boweryfarming.com/" rel="nofollow">https://boweryfarming.com/</a><br>
John Deere — <a href="https://www.deere.com" rel="nofollow">https://www.deere.com</a></p>

<p><strong>Show Notes - Japanese</strong></p>

<p>Elixir Wizards Dojo 第2部 Connor Rigby と Todd Resudek</p>

<p>Episode S4E13b: 概要</p>

<p>Elixir Wizards Dojo スペシャル番組の第二部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、NervesコアチームのメンバーであるTodd Resudek と Connor Rigby とNervesの全てについて話します。でも最初に、Toddは私たちをヘビーメタル音楽の彼の楽しみについての楽しい余談に導きます。メタルからNervesに戻って、ToddはNervesをインターネット接続のモニタリングと、特定の条件が満たされた時にルーターの自動で再起動する方法について話します。FlutterとDartを使ってGUIを構築する方法について話したあと、Toddに彼の作ったもう一つのNervesプロジェクト、スプリンクラーの未来，Drizzle 2000！についてシェアしてもらいます。そしてConnorがNervesチームにおける自ら定義した役割である、ネットワーキングライブラリの開発について探求し、もしElixirユーザーである場合にNervesを使うことがいかに簡単かについて議論します。ToddとConnorはNervesの未来の理想郷についての話題と、Nervesが提供するツールに敵うIoTソリューションが他に存在しない理由について飛び込みます。ファームボットについて話をして、雑草をやっつける機能を含む、ファームボットのモデルが持つたくさんの機能について話します。これは、農業分野でのIoT技術の重要性の高まりへの転換と、どのように次の10億ドル規模の産業になる可能性が高まってくるかについてを示しています。エピソードの締めくくりは、ゲストに自分自身とつながる方法について紹介してもらいながら、アイアンメイデン(Iron Maiden)とメタリカ(Metallica)のファーストアルバムをリスナーに紹介します。Elixir Wizards Dojoの初回への謝辞から、Nervesプロジェクトの詳細を学んでください。</p>

<p>このエピソードのみどころ</p>

<p>ゲストの紹介と、このエピソードとElixirConf JPとのコネクションについて<br>
Connor と Todd によるヘビーメタル音楽の歴史とサブジャンルへの案内<br>
ToddのNervesを使ったインターネット接続のモニタリングとルーターの再起動の<br>
Fultter というGoogleのUIツールキットを使ったNervesプロジェクトのユーザインタフェース構築<br>
GUIアプリに焦点を当てたときのアプリ開発のベストプラクティス<br>
Drizzle 2000について聴ける！ Nervesで動くToddのスプリンクラーコントローラシステム<br>
ToddとConnorのNervesコアチームにおけるそれぞれの役割<br>
Nervesを使う利点: 一度起動すると通常のElixirアプリになる<br>
キオスク端末とは何か，どのようにキオスク端末を国際化するか<br>
Nervesとハードウェア開発の将来の探求<br>
Nervesと他のIoTソリューションの比較: 結論としては，Nervesに敵うものはない<br>
ファームボットシステムのモデルの違いについて: 全てにNervesが使われていて、食糧を育てる<br>
Nervesを使ってビデオをエンコードしたり録画したり，ライブストリーミングしたりする方法<br>
IoTを農業分野に統合することが次の10億ドル産業になる理由</p><p>Special Guests: Connor Rigby and Todd Resudek.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Elixir Wizards Dojo: Nerves Part 1 with Frank Hunleth and Justin Schneck</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e13a-dojo</link>
      <guid isPermaLink="false">96d50b65-bc90-434e-ae8b-96b7c9f3990d</guid>
      <pubDate>Tue, 11 Aug 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/96d50b65-bc90-434e-ae8b-96b7c9f3990d.mp3" length="78689808" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today’s episode, in partnership with ElixirConf Japan, we pose questions asked by the Japanese Nerves community to Nerves core team members. Make sure to tune in today and stay tuned for part 2!</itunes:subtitle>
      <itunes:duration>54:17</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/96d50b65-bc90-434e-ae8b-96b7c9f3990d/cover.jpg" />
      <description>Welcome to the first part of our extra special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode, we pose questions asked by the Japanese Nerves community to Nerves core team members, Frank Hunleth and Justin Schneck. After introducing our guests, we talk about which companies make use of Nerve and explore its use cases by looking at FarmBot, an open source robotic farming tool. Justin and Frank take turns explaining the differences between soft and hard real-time — a springboard to show how Nerve excels within its ‘middle-ground of complexity’, production-orientated niche. From Halloween pranks to growing Sichuan chili peppers in the office, Justin and Frank share the projects that they’ve built using Nerves and emphasize its wide applicability. We discuss how Nerves has been both officially and unofficially ported to different devices, why people send Frank random pieces of hardware in the mail, and the differences between open-source and making your work publicly available. Justin and Frank commiserate over the challenge of working with Bluetooth and the beauty of the Nerves community in pushing innovation. We chat more about Nerves, including how you can extend the functionality of file systems, before Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more about the Nerves Project, a system that can add a great deal of agility to any development cycle. 
Key Points From This Episode:
Introducing our guests and this episode’s focus on the Japanese Elixir community. 
The double-edge of broadcasting your excitement about Elixir projects. 
Looking at FarmBot as a practical use-case to show off what Nerve can do.
Differences between soft and hard real-time using FarmBot as an example.
What Nerves excels at; acting as a gateway for other processors. 
Justin and Frank share the projects that they’ve built using Nerves.
A brief digression where Justin shares his love of Chinese Sichuan cooking. 
What other markets are making use of Nerves in their product cycle.
The unique ‘middle-ground’ of complexity that Nerves is best suited to address. 
Porting Nerves to different devices and what devices need to run Nerves. 
Open-source versus making work public and how Justin took some of his Bluetooth work public.
The challenges of working with Bluetooth.
Hear how a group in the community is making a Nerves keyboard.  
How you can extend the functionality of a file system on Nerves.
Nerves’s features that make it such an excellent tool within a production environment.
When deploying with Nerves Hub, learn how to configure Wi-Fi modules with different devices. 
Starting with a facelift, Frank and Justin share their roadmap for Nerves’s future. 
How companies Vary and SmartRent have contributed to the longevity of Nerves.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
ElixirConf — https://elixirconf.com/2020
Frank Hunleth — https://www.linkedin.com/in/fhunleth/
Justin Schneck — https://www.linkedin.com/in/justinschneck
Susumu Yamazaki — https://twitter.com/zacky1972
Nerves Project — https://www.nerves-project.org/
Nerves Project Open Collective — https://opencollective.com/nerves-project
Nerves Project GitHub — https://github.com/nerves-project/nervespack#erlang-distribution
Nerves Kiosk System GitHub — https://github.com/nerves-web-kiosk/kiosksystemrpi3
FarmBot — https://farm.bot/
Rose Point — https://www.rosepoint.com/
The Food of Sichuan — https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835
Lance Halvorsen — https://www.linkedin.com/in/lance-halvorsen-07a102/
Atom VM GitHub — https://github.com/bettio/AtomVM
Lichee Pi Zero — https://licheepizero.us/
Pavlok — https://pavlok.com/
Harald GitHub — https://github.com/verypossible-labs/harald
Bluetooth with Nerves Notes GitHub — https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188
Fwup GitHub — https://github.com/fhunleth/fwup
‘Building a keyboard with Elixir’ — https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3
Vintage Net Wizard GitHub — https://github.com/nerves-networking/vintagenet_wizard
Grizzly GitHub — https://github.com/smartrent/grizzly
SmartRent Careers — https://smartrent.com/careers/
Very Possible Careers — https://www.verypossible.com/careers
Show Notes - Japanese
Elixir Wizards Dojo 第一部 Frank Hunleth と Justin Shneck
Episode S4E13a: 概要
Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves プロジェクトについてより詳しく知りたいという人は、是非聴いてください。
このエピソードのみどころ
ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点
Elixirプロジェクトについての興奮を広める上での「両刃」
ファームボットに見るNervesが実現できる実事例
ファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い
Nervesの何が優れているのか: 他のプロセッサへのゲートウェイの役割
JustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々
Justinが愛する四川料理についての軽い脱線
Nervesを製品サイクルに応用する他のマーケットや事例
Nervesが扱うのに手ごろな複雑さの独特の「中間基盤」 
Nervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要
オープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか
Bluetoothの開発作業のチャレンジ
コミュニティのグループがどのようにNervesキーボードを作っているか 
どのようにNervesのファイルシステムの機能性を拡張するか
本番環境で優れたツールとなる上でのNervesの機能
 Special Guests: Frank Hunleth and Justin Schneck.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the first part of our extra special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode, we pose questions asked by the Japanese Nerves community to Nerves core team members, Frank Hunleth and Justin Schneck. After introducing our guests, we talk about which companies make use of Nerve and explore its use cases by looking at FarmBot, an open source robotic farming tool. Justin and Frank take turns explaining the differences between soft and hard real-time — a springboard to show how Nerve excels within its ‘middle-ground of complexity’, production-orientated niche. From Halloween pranks to growing Sichuan chili peppers in the office, Justin and Frank share the projects that they’ve built using Nerves and emphasize its wide applicability. We discuss how Nerves has been both officially and unofficially ported to different devices, why people send Frank random pieces of hardware in the mail, and the differences between open-source and making your work publicly available. Justin and Frank commiserate over the challenge of working with Bluetooth and the beauty of the Nerves community in pushing innovation. We chat more about Nerves, including how you can extend the functionality of file systems, before Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more about the Nerves Project, a system that can add a great deal of agility to any development cycle. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing our guests and this episode’s focus on the Japanese Elixir community. </li>
<li>The double-edge of broadcasting your excitement about Elixir projects. </li>
<li>Looking at FarmBot as a practical use-case to show off what Nerve can do.</li>
<li>Differences between soft and hard real-time using FarmBot as an example.</li>
<li>What Nerves excels at; acting as a gateway for other processors. </li>
<li>Justin and Frank share the projects that they’ve built using Nerves.</li>
<li>A brief digression where Justin shares his love of Chinese Sichuan cooking. </li>
<li>What other markets are making use of Nerves in their product cycle.</li>
<li>The unique ‘middle-ground’ of complexity that Nerves is best suited to address. </li>
<li>Porting Nerves to different devices and what devices need to run Nerves. </li>
<li>Open-source versus making work public and how Justin took some of his Bluetooth work public.</li>
<li>The challenges of working with Bluetooth.</li>
<li>Hear how a group in the community is making a Nerves keyboard.<br></li>
<li>How you can extend the functionality of a file system on Nerves.</li>
<li>Nerves’s features that make it such an excellent tool within a production environment.</li>
<li>When deploying with Nerves Hub, learn how to configure Wi-Fi modules with different devices. </li>
<li>Starting with a facelift, Frank and Justin share their roadmap for Nerves’s future. </li>
<li>How companies Vary and SmartRent have contributed to the longevity of Nerves.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Frank Hunleth — <a href="https://www.linkedin.com/in/fhunleth/" rel="nofollow">https://www.linkedin.com/in/fhunleth/</a><br>
Justin Schneck — <a href="https://www.linkedin.com/in/justinschneck" rel="nofollow">https://www.linkedin.com/in/justinschneck</a><br>
Susumu Yamazaki — <a href="https://twitter.com/zacky1972" rel="nofollow">https://twitter.com/zacky1972</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Nerves Project Open Collective — <a href="https://opencollective.com/nerves-project" rel="nofollow">https://opencollective.com/nerves-project</a><br>
Nerves Project GitHub — <a href="https://github.com/nerves-project/nerves_pack#erlang-distribution" rel="nofollow">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>
Nerves Kiosk System GitHub — <a href="https://github.com/nerves-web-kiosk/kiosk_system_rpi3" rel="nofollow">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>
FarmBot — <a href="https://farm.bot/" rel="nofollow">https://farm.bot/</a><br>
Rose Point — <a href="https://www.rosepoint.com/" rel="nofollow">https://www.rosepoint.com/</a><br>
The Food of Sichuan — <a href="https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835" rel="nofollow">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>
Lance Halvorsen — <a href="https://www.linkedin.com/in/lance-halvorsen-07a102/" rel="nofollow">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>
Atom VM GitHub — <a href="https://github.com/bettio/AtomVM" rel="nofollow">https://github.com/bettio/AtomVM</a><br>
Lichee Pi Zero — <a href="https://licheepizero.us/" rel="nofollow">https://licheepizero.us/</a><br>
Pavlok — <a href="https://pavlok.com/" rel="nofollow">https://pavlok.com/</a><br>
Harald GitHub — <a href="https://github.com/verypossible-labs/harald" rel="nofollow">https://github.com/verypossible-labs/harald</a><br>
Bluetooth with Nerves Notes GitHub — <a href="https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188" rel="nofollow">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>
Fwup GitHub — <a href="https://github.com/fhunleth/fwup" rel="nofollow">https://github.com/fhunleth/fwup</a><br>
‘Building a keyboard with Elixir’ — <a href="https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3" rel="nofollow">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>
Vintage Net Wizard GitHub — <a href="https://github.com/nerves-networking/vintage_net_wizard" rel="nofollow">https://github.com/nerves-networking/vintage_net_wizard</a><br>
Grizzly GitHub — <a href="https://github.com/smartrent/grizzly" rel="nofollow">https://github.com/smartrent/grizzly</a><br>
SmartRent Careers — <a href="https://smartrent.com/careers/" rel="nofollow">https://smartrent.com/careers/</a><br>
Very Possible Careers — <a href="https://www.verypossible.com/careers" rel="nofollow">https://www.verypossible.com/careers</a></p>

<p><strong>Show Notes - Japanese</strong></p>

<p>Elixir Wizards Dojo 第一部 Frank Hunleth と Justin Shneck</p>

<p>Episode S4E13a: 概要</p>

<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>

<p>このエピソードのみどころ</p>

<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>
Elixirプロジェクトについての興奮を広める上での「両刃」<br>
ファームボットに見るNervesが実現できる実事例<br>
ファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>
Nervesの何が優れているのか: 他のプロセッサへのゲートウェイの役割<br>
JustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>
Justinが愛する四川料理についての軽い脱線<br>
Nervesを製品サイクルに応用する他のマーケットや事例<br>
Nervesが扱うのに手ごろな複雑さの独特の「中間基盤」 <br>
Nervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>
オープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>
Bluetoothの開発作業のチャレンジ<br>
コミュニティのグループがどのようにNervesキーボードを作っているか <br>
どのようにNervesのファイルシステムの機能性を拡張するか<br>
本番環境で優れたツールとなる上でのNervesの機能</p><p>Special Guests: Frank Hunleth and Justin Schneck.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the first part of our extra special Elixir Wizards Dojo. A mashup made in partnership with ElixirConf Japan, in today’s episode, we pose questions asked by the Japanese Nerves community to Nerves core team members, Frank Hunleth and Justin Schneck. After introducing our guests, we talk about which companies make use of Nerve and explore its use cases by looking at FarmBot, an open source robotic farming tool. Justin and Frank take turns explaining the differences between soft and hard real-time — a springboard to show how Nerve excels within its ‘middle-ground of complexity’, production-orientated niche. From Halloween pranks to growing Sichuan chili peppers in the office, Justin and Frank share the projects that they’ve built using Nerves and emphasize its wide applicability. We discuss how Nerves has been both officially and unofficially ported to different devices, why people send Frank random pieces of hardware in the mail, and the differences between open-source and making your work publicly available. Justin and Frank commiserate over the challenge of working with Bluetooth and the beauty of the Nerves community in pushing innovation. We chat more about Nerves, including how you can extend the functionality of file systems, before Justin and Frank unpack their roadmap for Nerves’s future. Tune in to learn more about the Nerves Project, a system that can add a great deal of agility to any development cycle. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Introducing our guests and this episode’s focus on the Japanese Elixir community. </li>
<li>The double-edge of broadcasting your excitement about Elixir projects. </li>
<li>Looking at FarmBot as a practical use-case to show off what Nerve can do.</li>
<li>Differences between soft and hard real-time using FarmBot as an example.</li>
<li>What Nerves excels at; acting as a gateway for other processors. </li>
<li>Justin and Frank share the projects that they’ve built using Nerves.</li>
<li>A brief digression where Justin shares his love of Chinese Sichuan cooking. </li>
<li>What other markets are making use of Nerves in their product cycle.</li>
<li>The unique ‘middle-ground’ of complexity that Nerves is best suited to address. </li>
<li>Porting Nerves to different devices and what devices need to run Nerves. </li>
<li>Open-source versus making work public and how Justin took some of his Bluetooth work public.</li>
<li>The challenges of working with Bluetooth.</li>
<li>Hear how a group in the community is making a Nerves keyboard.<br></li>
<li>How you can extend the functionality of a file system on Nerves.</li>
<li>Nerves’s features that make it such an excellent tool within a production environment.</li>
<li>When deploying with Nerves Hub, learn how to configure Wi-Fi modules with different devices. </li>
<li>Starting with a facelift, Frank and Justin share their roadmap for Nerves’s future. </li>
<li>How companies Vary and SmartRent have contributed to the longevity of Nerves.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Frank Hunleth — <a href="https://www.linkedin.com/in/fhunleth/" rel="nofollow">https://www.linkedin.com/in/fhunleth/</a><br>
Justin Schneck — <a href="https://www.linkedin.com/in/justinschneck" rel="nofollow">https://www.linkedin.com/in/justinschneck</a><br>
Susumu Yamazaki — <a href="https://twitter.com/zacky1972" rel="nofollow">https://twitter.com/zacky1972</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Nerves Project Open Collective — <a href="https://opencollective.com/nerves-project" rel="nofollow">https://opencollective.com/nerves-project</a><br>
Nerves Project GitHub — <a href="https://github.com/nerves-project/nerves_pack#erlang-distribution" rel="nofollow">https://github.com/nerves-project/nerves_pack#erlang-distribution</a><br>
Nerves Kiosk System GitHub — <a href="https://github.com/nerves-web-kiosk/kiosk_system_rpi3" rel="nofollow">https://github.com/nerves-web-kiosk/kiosk_system_rpi3</a><br>
FarmBot — <a href="https://farm.bot/" rel="nofollow">https://farm.bot/</a><br>
Rose Point — <a href="https://www.rosepoint.com/" rel="nofollow">https://www.rosepoint.com/</a><br>
The Food of Sichuan — <a href="https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835" rel="nofollow">https://www.amazon.com/Food-Sichuan-Fuchsia-Dunlop/dp/1324004835</a><br>
Lance Halvorsen — <a href="https://www.linkedin.com/in/lance-halvorsen-07a102/" rel="nofollow">https://www.linkedin.com/in/lance-halvorsen-07a102/</a><br>
Atom VM GitHub — <a href="https://github.com/bettio/AtomVM" rel="nofollow">https://github.com/bettio/AtomVM</a><br>
Lichee Pi Zero — <a href="https://licheepizero.us/" rel="nofollow">https://licheepizero.us/</a><br>
Pavlok — <a href="https://pavlok.com/" rel="nofollow">https://pavlok.com/</a><br>
Harald GitHub — <a href="https://github.com/verypossible-labs/harald" rel="nofollow">https://github.com/verypossible-labs/harald</a><br>
Bluetooth with Nerves Notes GitHub — <a href="https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188" rel="nofollow">https://gist.github.com/fhunleth/fae46998609814ae4a8abd44f6f08188</a><br>
Fwup GitHub — <a href="https://github.com/fhunleth/fwup" rel="nofollow">https://github.com/fhunleth/fwup</a><br>
‘Building a keyboard with Elixir’ — <a href="https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3" rel="nofollow">https://medium.com/swlh/building-a-keyboard-with-elixir-fc7bd3f60ec3</a><br>
Vintage Net Wizard GitHub — <a href="https://github.com/nerves-networking/vintage_net_wizard" rel="nofollow">https://github.com/nerves-networking/vintage_net_wizard</a><br>
Grizzly GitHub — <a href="https://github.com/smartrent/grizzly" rel="nofollow">https://github.com/smartrent/grizzly</a><br>
SmartRent Careers — <a href="https://smartrent.com/careers/" rel="nofollow">https://smartrent.com/careers/</a><br>
Very Possible Careers — <a href="https://www.verypossible.com/careers" rel="nofollow">https://www.verypossible.com/careers</a></p>

<p><strong>Show Notes - Japanese</strong></p>

<p>Elixir Wizards Dojo 第一部 Frank Hunleth と Justin Shneck</p>

<p>Episode S4E13a: 概要</p>

<p>Elixir Wizards Dojo スペシャル番組の第一部にようこそ。ElixirConf JPとのパートナーシップによるマッシュアップです。今日のエピソードでは、日本のNervesコミュニティからの質問をNervesコアチームのメンバーであるFrank Hunleth と  Justin Schneck に尋ねます。ゲストの2人を紹介した後、Nervesを使用する会社のことや、ファームボット(オープンソースのロボティック農業ツール)に見る使用事例を探ります。JustinとFrankが交互にソフトリアルタイムとハードリアルタイムの違いを説明し、Nervesが「複雑さの中立的立場」、生産指向のニッチという点で優れていることを示します。ハロウィンのいたずらから、オフィスで育つ四川の唐辛子栽培まで、JustinとFrankはNervesを使用して構築したプロジェクトを紹介し、その幅広い応用性を強調します。Nervesが公式・非公式にさまざまなデバイスに移植された方法についてや、なぜみんながFrankにランダムなハードウェアを郵送するのか、オープンソースと単に作品を公開することの違いについて話し合います。JustinとFrankはBluetoothの機能開発の課題に同情し、イノベーションを推進する上でのNervesコミュニティの美点について語ります。さらにNervesについて話が進み、どのようにファイルシステムの機能性を拡張するのかや、JustinとFrankがNervesの将来のロードマップについて披露します。どのような開発サイクルにも「アジャイルに」できるシステムである、Nerves プロジェクトについてより詳しく知りたいという人は、是非聴いてください。</p>

<p>このエピソードのみどころ</p>

<p>ゲストの紹介と、日本のElixirコミュニティに対するこのエピソードの焦点<br>
Elixirプロジェクトについての興奮を広める上での「両刃」<br>
ファームボットに見るNervesが実現できる実事例<br>
ファームボットを例にした、ソフトリアルタイムとハードリアルタイムの違い<br>
Nervesの何が優れているのか: 他のプロセッサへのゲートウェイの役割<br>
JustinとFrankが共有する、Nervesで今まで構築してきたプロジェクトの数々<br>
Justinが愛する四川料理についての軽い脱線<br>
Nervesを製品サイクルに応用する他のマーケットや事例<br>
Nervesが扱うのに手ごろな複雑さの独特の「中間基盤」 <br>
Nervesの異なるデバイスへの移植とNervesを実行させるのにどんなデバイスが必要<br>
オープンソースと作品を公開することの違いと、どのようにJustinがBluetoothでの仕事の一部を公開したか<br>
Bluetoothの開発作業のチャレンジ<br>
コミュニティのグループがどのようにNervesキーボードを作っているか <br>
どのようにNervesのファイルシステムの機能性を拡張するか<br>
本番環境で優れたツールとなる上でのNervesの機能</p><p>Special Guests: Frank Hunleth and Justin Schneck.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Greg Mefford on Nerves, Poncho vs Umbrella Apps, and Pre-Code Planning</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e12-mefford</link>
      <guid isPermaLink="false">f66990d4-1466-41eb-aa79-c89d644f8d94</guid>
      <pubDate>Thu, 06 Aug 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f66990d4-1466-41eb-aa79-c89d644f8d94.mp3" length="60611782" type="audio/mp3"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today’s episode, we chat about system architecture, Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end engineer for the Bleacher Report.</itunes:subtitle>
      <itunes:duration>41:43</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f66990d4-1466-41eb-aa79-c89d644f8d94/cover.jpg" />
      <description>In today’s episode, we chat about system architecture, Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end engineer for the Bleacher Report. We open the conversation by asking Greg about his start in coding, leading to a story about how Greg was that bored kid pressuring a math teacher to teach him QBasic. He shares how he fell in love with Ruby before discovering Elixir and Nerves. Having faced some challenges when learning Nerves, Greg talks about how he began documenting his pain points and writing documents to help onboard newcomers. We discuss Greg’s work with Nerves, his project aspirations, and his recommended resources for anyone looking to get into Nerves or Elixir. After providing his hot take on the latest Code BEAM V conference, we ask Greg what system architecture means to him. From there we get super meta about the meaning of architecture and what it means to translate design into practice. We touch on the struggle of understanding domain-driven design and Greg’s approach to pre-code planning before delving into how the Bleacher Report is set up. As Greg goes into details, you’ll hear why their servers now run on Elixir and not Ruby. Near the end of the episode, we talk about Poncho versus Umbrella apps, and Greg shares his passion for multi-user dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir and Nerves landscape.  
Key Points From This Episode:
Greg’s start in coding and his transition from electronics design into IT.
Why Greg loves Ruby and how he discovered the magic of Elixir. 
Greg’s contribution to the Elixir and Nerves community by helping onboard newcomers.
What Greg’s job as a senior engineer for Bleacher Report looks like.
Greg recommends resources for beginners getting into Nerves and Elixir.  
Creating a kid’s game using Nerves and Greg’s Blinkchain library.
Greg’s take on the Code BEAM V conference and hating on the Whova app.
What architecture means to Greg. This one gets deep. 
How translating designs into software has changed over the years. 
Why Greg struggles with the idea of domain-driven design.
The state of Extreme Programming practices and how they synergize together.
How Greg views pre-code planning; something that’s become his specialty within his latest job.
The many elements that contribute to how the Bleacher Report’s IT is set up. 
Ruby servers versus Elixir servers and why the Bleacher Report uses Elixir. 
Why the Poncho system was designed to fix Nerves issues not covered by Umbrella apps. 
Greg’s history creating multi-user dungeons (MUDs) and playing DragonRealm.
Links Mentioned in Today’s Episode:
Greg Mefford LinkedIn — https://www.linkedin.com/in/ferggo/
SmartLogic — https://smartlogic.io/ 
SmartLogic Jobs — https://apply.workable.com/smartlogic/
ElixirConf — https://elixirconf.com/2020
Blinkchain GitHub — https://github.com/GregMefford/blinkchain
Justin Schneck GitHub — https://github.com/mobileoverlord 
Le Tote — https://www.letote.com/
James Smith — https://twitter.com/st23am
Garth Hitchens, ElixirCof 2015 — https://www.youtube.com/watch?v=kpzQrFC55q4
Nerves Project — https://www.nerves-project.org/documentation
Bleacher Report — https://bleacherreport.com/
Programming Elixir — https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999
Elixir in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027
Chris Keathley — https://codesync.global/speaker/chris-keathley/
Code BEAM V Conference — https://codesync.global/conferences/code-beam-sto/
Whova App — https://whova.com/
Amos King — https://twitter.com/adkron?lang=en
Christopher Keele — https://github.com/christhekeele
Steve Bussey Episode — https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/
Mark Windholtz — https://github.com/mwindholtz
Extreme Programming — http://www.extremeprogramming.org/
Adopting Elixir: From Concept to Production — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522
Live Elixir Wizards - Betweenisode — https://www.youtube.com/watch?v=kEwxhGYEGts
Twirp GitHub — https://github.com/twitchtv/twirp
Frank Hunleth — https://github.com/fhunleth
Elixir Supervisor Behavior — https://hexdocs.pm/elixir/Supervisor.html
Elixir Poncho Projects — https://embedded-elixir.com/post/2017-05-19-poncho-projects/
Titans of Text — https://www.titansoftext.com/
Miriani — https://www.toastsoft.net/
DragonRealms — https://www.play.net/dr/
Justus Eapen Twitter — https://twitter.com/justuseapen
Eric Oestrich — https://twitter.com/EricOestrich Special Guest: Greg Mefford.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>In today’s episode, we chat about system architecture, Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end engineer for the Bleacher Report. We open the conversation by asking Greg about his start in coding, leading to a story about how Greg was that bored kid pressuring a math teacher to teach him QBasic. He shares how he fell in love with Ruby before discovering Elixir and Nerves. Having faced some challenges when learning Nerves, Greg talks about how he began documenting his pain points and writing documents to help onboard newcomers. We discuss Greg’s work with Nerves, his project aspirations, and his recommended resources for anyone looking to get into Nerves or Elixir. After providing his hot take on the latest Code BEAM V conference, we ask Greg what system architecture means to him. From there we get super meta about the meaning of architecture and what it means to translate design into practice. We touch on the struggle of understanding domain-driven design and Greg’s approach to pre-code planning before delving into how the Bleacher Report is set up. As Greg goes into details, you’ll hear why their servers now run on Elixir and not Ruby. Near the end of the episode, we talk about Poncho versus Umbrella apps, and Greg shares his passion for multi-user dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir and Nerves landscape.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Greg’s start in coding and his transition from electronics design into IT.</li>
<li>Why Greg loves Ruby and how he discovered the magic of Elixir. </li>
<li>Greg’s contribution to the Elixir and Nerves community by helping onboard newcomers.</li>
<li>What Greg’s job as a senior engineer for Bleacher Report looks like.</li>
<li>Greg recommends resources for beginners getting into Nerves and Elixir.<br></li>
<li>Creating a kid’s game using Nerves and Greg’s Blinkchain library.</li>
<li>Greg’s take on the Code BEAM V conference and hating on the Whova app.</li>
<li>What architecture means to Greg. This one gets deep. </li>
<li>How translating designs into software has changed over the years. </li>
<li>Why Greg struggles with the idea of domain-driven design.</li>
<li>The state of Extreme Programming practices and how they synergize together.</li>
<li>How Greg views pre-code planning; something that’s become his specialty within his latest job.</li>
<li>The many elements that contribute to how the Bleacher Report’s IT is set up. </li>
<li>Ruby servers versus Elixir servers and why the Bleacher Report uses Elixir. </li>
<li>Why the Poncho system was designed to fix Nerves issues not covered by Umbrella apps. </li>
<li>Greg’s history creating multi-user dungeons (MUDs) and playing DragonRealm.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Greg Mefford LinkedIn — <a href="https://www.linkedin.com/in/ferggo/" rel="nofollow">https://www.linkedin.com/in/ferggo/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://apply.workable.com/smartlogic/" rel="nofollow">https://apply.workable.com/smartlogic/</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Blinkchain GitHub — <a href="https://github.com/GregMefford/blinkchain" rel="nofollow">https://github.com/GregMefford/blinkchain</a><br>
Justin Schneck GitHub — <a href="https://github.com/mobileoverlord" rel="nofollow">https://github.com/mobileoverlord</a> <br>
Le Tote — <a href="https://www.letote.com/" rel="nofollow">https://www.letote.com/</a><br>
James Smith — <a href="https://twitter.com/st23am" rel="nofollow">https://twitter.com/st23am</a><br>
Garth Hitchens, ElixirCof 2015 — <a href="https://www.youtube.com/watch?v=kpzQrFC55q4" rel="nofollow">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>
Nerves Project — <a href="https://www.nerves-project.org/documentation" rel="nofollow">https://www.nerves-project.org/documentation</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Programming Elixir — <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>
Chris Keathley — <a href="https://codesync.global/speaker/chris-keathley/" rel="nofollow">https://codesync.global/speaker/chris-keathley/</a><br>
Code BEAM V Conference — <a href="https://codesync.global/conferences/code-beam-sto/" rel="nofollow">https://codesync.global/conferences/code-beam-sto/</a><br>
Whova App — <a href="https://whova.com/" rel="nofollow">https://whova.com/</a><br>
Amos King — <a href="https://twitter.com/adkron?lang=en" rel="nofollow">https://twitter.com/adkron?lang=en</a><br>
Christopher Keele — <a href="https://github.com/christhekeele" rel="nofollow">https://github.com/christhekeele</a><br>
Steve Bussey Episode — <a href="https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>
Mark Windholtz — <a href="https://github.com/mwindholtz" rel="nofollow">https://github.com/mwindholtz</a><br>
Extreme Programming — <a href="http://www.extremeprogramming.org/" rel="nofollow">http://www.extremeprogramming.org/</a><br>
Adopting Elixir: From Concept to Production — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Live Elixir Wizards - Betweenisode — <a href="https://www.youtube.com/watch?v=kEwxhGYEGts" rel="nofollow">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>
Twirp GitHub — <a href="https://github.com/twitchtv/twirp" rel="nofollow">https://github.com/twitchtv/twirp</a><br>
Frank Hunleth — <a href="https://github.com/fhunleth" rel="nofollow">https://github.com/fhunleth</a><br>
Elixir Supervisor Behavior — <a href="https://hexdocs.pm/elixir/Supervisor.html" rel="nofollow">https://hexdocs.pm/elixir/Supervisor.html</a><br>
Elixir Poncho Projects — <a href="https://embedded-elixir.com/post/2017-05-19-poncho-projects/" rel="nofollow">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>
Titans of Text — <a href="https://www.titansoftext.com/" rel="nofollow">https://www.titansoftext.com/</a><br>
Miriani — <a href="https://www.toastsoft.net/" rel="nofollow">https://www.toastsoft.net/</a><br>
DragonRealms — <a href="https://www.play.net/dr/" rel="nofollow">https://www.play.net/dr/</a><br>
Justus Eapen Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://twitter.com/EricOestrich" rel="nofollow">https://twitter.com/EricOestrich</a></p><p>Special Guest: Greg Mefford.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In today’s episode, we chat about system architecture, Ruby, Elixir, and everything in between with Greg Mefford, the senior back-end engineer for the Bleacher Report. We open the conversation by asking Greg about his start in coding, leading to a story about how Greg was that bored kid pressuring a math teacher to teach him QBasic. He shares how he fell in love with Ruby before discovering Elixir and Nerves. Having faced some challenges when learning Nerves, Greg talks about how he began documenting his pain points and writing documents to help onboard newcomers. We discuss Greg’s work with Nerves, his project aspirations, and his recommended resources for anyone looking to get into Nerves or Elixir. After providing his hot take on the latest Code BEAM V conference, we ask Greg what system architecture means to him. From there we get super meta about the meaning of architecture and what it means to translate design into practice. We touch on the struggle of understanding domain-driven design and Greg’s approach to pre-code planning before delving into how the Bleacher Report is set up. As Greg goes into details, you’ll hear why their servers now run on Elixir and not Ruby. Near the end of the episode, we talk about Poncho versus Umbrella apps, and Greg shares his passion for multi-user dungeons (MUDs). Tune in to learn more about Greg and his role in the Elixir and Nerves landscape.  </p>

<p>Key Points From This Episode:</p>

<ul>
<li>Greg’s start in coding and his transition from electronics design into IT.</li>
<li>Why Greg loves Ruby and how he discovered the magic of Elixir. </li>
<li>Greg’s contribution to the Elixir and Nerves community by helping onboard newcomers.</li>
<li>What Greg’s job as a senior engineer for Bleacher Report looks like.</li>
<li>Greg recommends resources for beginners getting into Nerves and Elixir.<br></li>
<li>Creating a kid’s game using Nerves and Greg’s Blinkchain library.</li>
<li>Greg’s take on the Code BEAM V conference and hating on the Whova app.</li>
<li>What architecture means to Greg. This one gets deep. </li>
<li>How translating designs into software has changed over the years. </li>
<li>Why Greg struggles with the idea of domain-driven design.</li>
<li>The state of Extreme Programming practices and how they synergize together.</li>
<li>How Greg views pre-code planning; something that’s become his specialty within his latest job.</li>
<li>The many elements that contribute to how the Bleacher Report’s IT is set up. </li>
<li>Ruby servers versus Elixir servers and why the Bleacher Report uses Elixir. </li>
<li>Why the Poncho system was designed to fix Nerves issues not covered by Umbrella apps. </li>
<li>Greg’s history creating multi-user dungeons (MUDs) and playing DragonRealm.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Greg Mefford LinkedIn — <a href="https://www.linkedin.com/in/ferggo/" rel="nofollow">https://www.linkedin.com/in/ferggo/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://apply.workable.com/smartlogic/" rel="nofollow">https://apply.workable.com/smartlogic/</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Blinkchain GitHub — <a href="https://github.com/GregMefford/blinkchain" rel="nofollow">https://github.com/GregMefford/blinkchain</a><br>
Justin Schneck GitHub — <a href="https://github.com/mobileoverlord" rel="nofollow">https://github.com/mobileoverlord</a> <br>
Le Tote — <a href="https://www.letote.com/" rel="nofollow">https://www.letote.com/</a><br>
James Smith — <a href="https://twitter.com/st23am" rel="nofollow">https://twitter.com/st23am</a><br>
Garth Hitchens, ElixirCof 2015 — <a href="https://www.youtube.com/watch?v=kpzQrFC55q4" rel="nofollow">https://www.youtube.com/watch?v=kpzQrFC55q4</a><br>
Nerves Project — <a href="https://www.nerves-project.org/documentation" rel="nofollow">https://www.nerves-project.org/documentation</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Programming Elixir — <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/dp/1680502999</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a><br>
Chris Keathley — <a href="https://codesync.global/speaker/chris-keathley/" rel="nofollow">https://codesync.global/speaker/chris-keathley/</a><br>
Code BEAM V Conference — <a href="https://codesync.global/conferences/code-beam-sto/" rel="nofollow">https://codesync.global/conferences/code-beam-sto/</a><br>
Whova App — <a href="https://whova.com/" rel="nofollow">https://whova.com/</a><br>
Amos King — <a href="https://twitter.com/adkron?lang=en" rel="nofollow">https://twitter.com/adkron?lang=en</a><br>
Christopher Keele — <a href="https://github.com/christhekeele" rel="nofollow">https://github.com/christhekeele</a><br>
Steve Bussey Episode — <a href="https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/" rel="nofollow">https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey/</a><br>
Mark Windholtz — <a href="https://github.com/mwindholtz" rel="nofollow">https://github.com/mwindholtz</a><br>
Extreme Programming — <a href="http://www.extremeprogramming.org/" rel="nofollow">http://www.extremeprogramming.org/</a><br>
Adopting Elixir: From Concept to Production — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Live Elixir Wizards - Betweenisode — <a href="https://www.youtube.com/watch?v=kEwxhGYEGts" rel="nofollow">https://www.youtube.com/watch?v=kEwxhGYEGts</a><br>
Twirp GitHub — <a href="https://github.com/twitchtv/twirp" rel="nofollow">https://github.com/twitchtv/twirp</a><br>
Frank Hunleth — <a href="https://github.com/fhunleth" rel="nofollow">https://github.com/fhunleth</a><br>
Elixir Supervisor Behavior — <a href="https://hexdocs.pm/elixir/Supervisor.html" rel="nofollow">https://hexdocs.pm/elixir/Supervisor.html</a><br>
Elixir Poncho Projects — <a href="https://embedded-elixir.com/post/2017-05-19-poncho-projects/" rel="nofollow">https://embedded-elixir.com/post/2017-05-19-poncho-projects/</a><br>
Titans of Text — <a href="https://www.titansoftext.com/" rel="nofollow">https://www.titansoftext.com/</a><br>
Miriani — <a href="https://www.toastsoft.net/" rel="nofollow">https://www.toastsoft.net/</a><br>
DragonRealms — <a href="https://www.play.net/dr/" rel="nofollow">https://www.play.net/dr/</a><br>
Justus Eapen Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://twitter.com/EricOestrich" rel="nofollow">https://twitter.com/EricOestrich</a></p><p>Special Guest: Greg Mefford.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Johanna Larsson on Hex Diff, Domain Driven Design, Umbrella apps, and more</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e11-larsson</link>
      <guid isPermaLink="false">1b6e0936-69df-48a0-83aa-42c3302bcb0a</guid>
      <pubDate>Mon, 27 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b6e0936-69df-48a0-83aa-42c3302bcb0a.mp3" length="35460080" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In this episode, we talk to Johanna Larsson about how Hex Diff can benefit Elixir users, the differences between code architecture and code design, and the role of Elixir umbrella apps</itunes:subtitle>
      <itunes:duration>49:14</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b6e0936-69df-48a0-83aa-42c3302bcb0a/cover.jpg" />
      <description>Johanna Larsson is a community-minded software engineer whose project, Hex Diff, generates highlighted git diffs, right in your browser. In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users, the differences between code architecture and code design, and the debatably under-appreciated role of Elixir umbrella apps. We start the conversation by chatting with Johanna about her recent move to London and her work for Duffel; a startup helping travel agencies book trips. After talking about how she got into software development, we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers greater security for your code. We ask Johanna about the origins of the Hex Diff project and she explores its aims and her experiences working on the project. In line with this month’s theme, we discuss what architecture means to Joanna and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving and she explains how her coding process emphasizes building an early prototype and constantly iterating on it. Despite hearing that umbrella apps are bad news, Joanna makes a case for their value while acknowledging how that they need greater tooling. We round off our conversation by asking Joanna how she tries to grow her skillset and what her favorite Elixir resource is. Following our discussion with Johanna, we open with another edition of Pattern Matching with Todd. This week, friend of the podcast Todd Resudek asks five questions of Elixir community member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist for the US Airforce, his software career, and the therapeutic uses of playing Animal Crossing during a pandemic. 
Key Points From This Episode:
We introduce Johanna Larsson and she shares how she is doing in London. 
How Johanna developed a love for software and how Elixir brought her to London. 
Details about Johanna’s job at Duffel; a startup that helps travel companies book trips. 
How Hex Diff is solving problems that arise when using code from GitHub.
Johanna’s experience working on Hex Diff and the problems that they aim to solve.
Hex Diff’s caching system and what Hex Diff does to counter malicious software uploads.
The disconnect between system architecture and implementation. 
Johanna’s view on the differences between code design and code architecture.
Why domain-driven design increases usefulness to the end-user.
How Johanna approaches a problem and her steps when building code. 
Hear what key lesson Johanna learned from her latest big project. 
Johanna’s experience with umbrella apps and why they need tooling functions. 
How working in a strong team can motivate you and help grow your skill set.
Why the Elixir Slack group is Johanna’s favorite tool.
Why you should check out Hex Diff; it’s a great introduction to Elixir. 
This edition of Pattern Matching with Todd; Todd Resudek interviews Bruce Williams.
Links Mentioned in Today’s Episode:
Johanna Larsson — https://blog.jola.dev/
Johanna Larsson LinkedIn — https://www.linkedin.com/in/joladev/
Johanna Larsson Twitter — https://twitter.com/joladev
SmartLogic — https://smartlogic.io/ 
ElixirConf — https://elixirconf.com/2020
SharePoint — https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration
Duffel — https://duffel.com/
Stripe — https://stripe.com/
Hex Diff — https://diff.hex.pm/
Hex Diff GitHub — https://github.com/hexpm/diff
Maciej Mensfeld — https://mensfeld.pl/
Diffend — https://my.diffend.io/
Wojtek Mach — https://twitter.com/wojtekmach
Eric Meadows-Jönsson — https://twitter.com/emjii
Todd Resudek — https://twitter.com/sprsmpl
Announcing Hex Diff — https://hex.pm/blog/announcing-hex-diff
Hex Core GitHub — https://github.com/hexpm/hexcore
Hex Diff Phoenix — https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3
The Design of Everyday Things — https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654
Brooklyn Zelenka LinkedIn— https://www.linkedin.com/in/brooklynzelenka/
Unified Modeling Language — https://en.wikipedia.org/wiki/UnifiedModeling_Language
Elixir v. 1.10.4 Mix CMD — https://hexdocs.pm/mix/Mix.Tasks.Cmd.html
Elixir v1.11 Forum Post — https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535
Rustler GitHub — https://github.com/rusterlium/rustler
Live View —https://blog.codepen.io/documentation/live-view/
Bruce Williams — https://www.linkedin.com/in/wbruce/
Absinthe — https://absinthe-graphql.org/
Untitled Goose Game — https://goose.game/
Stardew Valley — https://www.stardewvalley.net/
Myst — https://cyan.com/games/myst/
Blanco White — https://www.blancowhite.info/
Groundhog Day — https://www.imdb.com/title/tt0107048/
Animal Crossing — https://www.animal-crossing.com/ Special Guest: Johanna Larsson.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Johanna Larsson is a community-minded software engineer whose project, Hex Diff, generates highlighted git diffs, right in your browser. In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users, the differences between code architecture and code design, and the debatably under-appreciated role of Elixir umbrella apps. We start the conversation by chatting with Johanna about her recent move to London and her work for Duffel; a startup helping travel agencies book trips. After talking about how she got into software development, we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers greater security for your code. We ask Johanna about the origins of the Hex Diff project and she explores its aims and her experiences working on the project. In line with this month’s theme, we discuss what architecture means to Joanna and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving and she explains how her coding process emphasizes building an early prototype and constantly iterating on it. Despite hearing that umbrella apps are bad news, Joanna makes a case for their value while acknowledging how that they need greater tooling. We round off our conversation by asking Joanna how she tries to grow her skillset and what her favorite Elixir resource is. Following our discussion with Johanna, we open with another edition of Pattern Matching with Todd. This week, friend of the podcast Todd Resudek asks five questions of Elixir community member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist for the US Airforce, his software career, and the therapeutic uses of playing Animal Crossing during a pandemic. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We introduce Johanna Larsson and she shares how she is doing in London. </li>
<li>How Johanna developed a love for software and how Elixir brought her to London. </li>
<li>Details about Johanna’s job at Duffel; a startup that helps travel companies book trips. </li>
<li>How Hex Diff is solving problems that arise when using code from GitHub.</li>
<li>Johanna’s experience working on Hex Diff and the problems that they aim to solve.</li>
<li>Hex Diff’s caching system and what Hex Diff does to counter malicious software uploads.</li>
<li>The disconnect between system architecture and implementation. </li>
<li>Johanna’s view on the differences between code design and code architecture.</li>
<li>Why domain-driven design increases usefulness to the end-user.</li>
<li>How Johanna approaches a problem and her steps when building code. </li>
<li>Hear what key lesson Johanna learned from her latest big project. </li>
<li>Johanna’s experience with umbrella apps and why they need tooling functions. </li>
<li>How working in a strong team can motivate you and help grow your skill set.</li>
<li>Why the Elixir Slack group is Johanna’s favorite tool.</li>
<li>Why you should check out Hex Diff; it’s a great introduction to Elixir. </li>
<li>This edition of Pattern Matching with Todd; Todd Resudek interviews Bruce Williams.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Johanna Larsson — <a href="https://blog.jola.dev/" rel="nofollow">https://blog.jola.dev/</a><br>
Johanna Larsson LinkedIn — <a href="https://www.linkedin.com/in/joladev/" rel="nofollow">https://www.linkedin.com/in/joladev/</a><br>
Johanna Larsson Twitter — <a href="https://twitter.com/joladev" rel="nofollow">https://twitter.com/joladev</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
SharePoint — <a href="https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration" rel="nofollow">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>
Duffel — <a href="https://duffel.com/" rel="nofollow">https://duffel.com/</a><br>
Stripe — <a href="https://stripe.com/" rel="nofollow">https://stripe.com/</a><br>
Hex Diff — <a href="https://diff.hex.pm/" rel="nofollow">https://diff.hex.pm/</a><br>
Hex Diff GitHub — <a href="https://github.com/hexpm/diff" rel="nofollow">https://github.com/hexpm/diff</a><br>
Maciej Mensfeld — <a href="https://mensfeld.pl/" rel="nofollow">https://mensfeld.pl/</a><br>
Diffend — <a href="https://my.diffend.io/" rel="nofollow">https://my.diffend.io/</a><br>
Wojtek Mach — <a href="https://twitter.com/wojtekmach" rel="nofollow">https://twitter.com/wojtekmach</a><br>
Eric Meadows-Jönsson — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Announcing Hex Diff — <a href="https://hex.pm/blog/announcing-hex-diff" rel="nofollow">https://hex.pm/blog/announcing-hex-diff</a><br>
Hex Core GitHub — <a href="https://github.com/hexpm/hex_core" rel="nofollow">https://github.com/hexpm/hex_core</a><br>
Hex Diff Phoenix — <a href="https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3" rel="nofollow">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>
The Design of Everyday Things — <a href="https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654" rel="nofollow">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>
Brooklyn Zelenka LinkedIn— <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a><br>
Unified Modeling Language — <a href="https://en.wikipedia.org/wiki/Unified_Modeling_Language" rel="nofollow">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>
Elixir v. 1.10.4 Mix CMD — <a href="https://hexdocs.pm/mix/Mix.Tasks.Cmd.html" rel="nofollow">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>
Elixir v1.11 Forum Post — <a href="https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535" rel="nofollow">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>
Rustler GitHub — <a href="https://github.com/rusterlium/rustler" rel="nofollow">https://github.com/rusterlium/rustler</a><br>
Live View —<a href="https://blog.codepen.io/documentation/live-view/" rel="nofollow">https://blog.codepen.io/documentation/live-view/</a><br>
Bruce Williams — <a href="https://www.linkedin.com/in/wbruce/" rel="nofollow">https://www.linkedin.com/in/wbruce/</a><br>
Absinthe — <a href="https://absinthe-graphql.org/" rel="nofollow">https://absinthe-graphql.org/</a><br>
Untitled Goose Game — <a href="https://goose.game/" rel="nofollow">https://goose.game/</a><br>
Stardew Valley — <a href="https://www.stardewvalley.net/" rel="nofollow">https://www.stardewvalley.net/</a><br>
Myst — <a href="https://cyan.com/games/myst/" rel="nofollow">https://cyan.com/games/myst/</a><br>
Blanco White — <a href="https://www.blancowhite.info/" rel="nofollow">https://www.blancowhite.info/</a><br>
Groundhog Day — <a href="https://www.imdb.com/title/tt0107048/" rel="nofollow">https://www.imdb.com/title/tt0107048/</a><br>
Animal Crossing — <a href="https://www.animal-crossing.com/" rel="nofollow">https://www.animal-crossing.com/</a></p><p>Special Guest: Johanna Larsson.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Johanna Larsson is a community-minded software engineer whose project, Hex Diff, generates highlighted git diffs, right in your browser. In this episode, we talk to Johanna about how Hex Diff can benefit Elixir users, the differences between code architecture and code design, and the debatably under-appreciated role of Elixir umbrella apps. We start the conversation by chatting with Johanna about her recent move to London and her work for Duffel; a startup helping travel agencies book trips. After talking about how she got into software development, we dive into Hex Diff versus GitHub, with Joanna detailing how Hex Diff offers greater security for your code. We ask Johanna about the origins of the Hex Diff project and she explores its aims and her experiences working on the project. In line with this month’s theme, we discuss what architecture means to Joanna and the need for domain-driven design. We quiz Joanna on her approaches to problem-solving and she explains how her coding process emphasizes building an early prototype and constantly iterating on it. Despite hearing that umbrella apps are bad news, Joanna makes a case for their value while acknowledging how that they need greater tooling. We round off our conversation by asking Joanna how she tries to grow her skillset and what her favorite Elixir resource is. Following our discussion with Johanna, we open with another edition of Pattern Matching with Todd. This week, friend of the podcast Todd Resudek asks five questions of Elixir community member Bruce Williams. They talk about Bruce’s work as an Arabic cryptologic linguist for the US Airforce, his software career, and the therapeutic uses of playing Animal Crossing during a pandemic. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>We introduce Johanna Larsson and she shares how she is doing in London. </li>
<li>How Johanna developed a love for software and how Elixir brought her to London. </li>
<li>Details about Johanna’s job at Duffel; a startup that helps travel companies book trips. </li>
<li>How Hex Diff is solving problems that arise when using code from GitHub.</li>
<li>Johanna’s experience working on Hex Diff and the problems that they aim to solve.</li>
<li>Hex Diff’s caching system and what Hex Diff does to counter malicious software uploads.</li>
<li>The disconnect between system architecture and implementation. </li>
<li>Johanna’s view on the differences between code design and code architecture.</li>
<li>Why domain-driven design increases usefulness to the end-user.</li>
<li>How Johanna approaches a problem and her steps when building code. </li>
<li>Hear what key lesson Johanna learned from her latest big project. </li>
<li>Johanna’s experience with umbrella apps and why they need tooling functions. </li>
<li>How working in a strong team can motivate you and help grow your skill set.</li>
<li>Why the Elixir Slack group is Johanna’s favorite tool.</li>
<li>Why you should check out Hex Diff; it’s a great introduction to Elixir. </li>
<li>This edition of Pattern Matching with Todd; Todd Resudek interviews Bruce Williams.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Johanna Larsson — <a href="https://blog.jola.dev/" rel="nofollow">https://blog.jola.dev/</a><br>
Johanna Larsson LinkedIn — <a href="https://www.linkedin.com/in/joladev/" rel="nofollow">https://www.linkedin.com/in/joladev/</a><br>
Johanna Larsson Twitter — <a href="https://twitter.com/joladev" rel="nofollow">https://twitter.com/joladev</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
SharePoint — <a href="https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration" rel="nofollow">https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration</a><br>
Duffel — <a href="https://duffel.com/" rel="nofollow">https://duffel.com/</a><br>
Stripe — <a href="https://stripe.com/" rel="nofollow">https://stripe.com/</a><br>
Hex Diff — <a href="https://diff.hex.pm/" rel="nofollow">https://diff.hex.pm/</a><br>
Hex Diff GitHub — <a href="https://github.com/hexpm/diff" rel="nofollow">https://github.com/hexpm/diff</a><br>
Maciej Mensfeld — <a href="https://mensfeld.pl/" rel="nofollow">https://mensfeld.pl/</a><br>
Diffend — <a href="https://my.diffend.io/" rel="nofollow">https://my.diffend.io/</a><br>
Wojtek Mach — <a href="https://twitter.com/wojtekmach" rel="nofollow">https://twitter.com/wojtekmach</a><br>
Eric Meadows-Jönsson — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Announcing Hex Diff — <a href="https://hex.pm/blog/announcing-hex-diff" rel="nofollow">https://hex.pm/blog/announcing-hex-diff</a><br>
Hex Core GitHub — <a href="https://github.com/hexpm/hex_core" rel="nofollow">https://github.com/hexpm/hex_core</a><br>
Hex Diff Phoenix — <a href="https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3" rel="nofollow">https://diff.hex.pm/diff/phoenix/1.5.2..1.5.3</a><br>
The Design of Everyday Things — <a href="https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654" rel="nofollow">https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654</a><br>
Brooklyn Zelenka LinkedIn— <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a><br>
Unified Modeling Language — <a href="https://en.wikipedia.org/wiki/Unified_Modeling_Language" rel="nofollow">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a><br>
Elixir v. 1.10.4 Mix CMD — <a href="https://hexdocs.pm/mix/Mix.Tasks.Cmd.html" rel="nofollow">https://hexdocs.pm/mix/Mix.Tasks.Cmd.html</a><br>
Elixir v1.11 Forum Post — <a href="https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535" rel="nofollow">https://elixirforum.com/t/elixir-v1-11-will-be-released-in-october-2020/31535</a><br>
Rustler GitHub — <a href="https://github.com/rusterlium/rustler" rel="nofollow">https://github.com/rusterlium/rustler</a><br>
Live View —<a href="https://blog.codepen.io/documentation/live-view/" rel="nofollow">https://blog.codepen.io/documentation/live-view/</a><br>
Bruce Williams — <a href="https://www.linkedin.com/in/wbruce/" rel="nofollow">https://www.linkedin.com/in/wbruce/</a><br>
Absinthe — <a href="https://absinthe-graphql.org/" rel="nofollow">https://absinthe-graphql.org/</a><br>
Untitled Goose Game — <a href="https://goose.game/" rel="nofollow">https://goose.game/</a><br>
Stardew Valley — <a href="https://www.stardewvalley.net/" rel="nofollow">https://www.stardewvalley.net/</a><br>
Myst — <a href="https://cyan.com/games/myst/" rel="nofollow">https://cyan.com/games/myst/</a><br>
Blanco White — <a href="https://www.blancowhite.info/" rel="nofollow">https://www.blancowhite.info/</a><br>
Groundhog Day — <a href="https://www.imdb.com/title/tt0107048/" rel="nofollow">https://www.imdb.com/title/tt0107048/</a><br>
Animal Crossing — <a href="https://www.animal-crossing.com/" rel="nofollow">https://www.animal-crossing.com/</a></p><p>Special Guest: Johanna Larsson.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Lau Taarnskov on the Trouble with Time Zones</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e10-taarnskov</link>
      <guid isPermaLink="false">f39e6147-f6c0-4c1e-803f-d128bfbec255</guid>
      <pubDate>Thu, 23 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f39e6147-f6c0-4c1e-803f-d128bfbec255.mp3" length="27035996" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Handling date and time is a challenge in any language, but today's guest, Lau Taarnskov is determined to solve that problem in Elixir.</itunes:subtitle>
      <itunes:duration>37:32</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f39e6147-f6c0-4c1e-803f-d128bfbec255/cover.jpg" />
      <description>Handling date and time is a challenge in any language, but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s guest on Elixir Wizards, and this episode is all about his contributions to Elixir. Lau has been involved with web development and e-commerce for decades. He started contributing to Elixir open source in 2014 and created the Calendar and tzdata libraries. Calendar is a datetime library for Elixir, that provides explicit types for datetimes, dates, and times, and full time zone support is provided via its sister package, tzdata. When it comes to the subject of date, time, and time zones, besides talking about it and writing software for it, Lau also writes about it on his blog, Creative Deletion. 
This episode explores how Lau got started in programming, and what led him to creating Calendar and tzdata. Lau shares the resources that he found helpful when he started using Elixir, and why he was drawn to Elixir in the first place. We hear Lau’s opinions on time zones and daylight savings and whether or not they’re necessary, and he shares some advice for anyone working with time in Elixir. 
Then it’s time for another edition of Pattern Matching with Todd, in which Todd Resudek asks Brooklyn Zekanka five questions to help us get to know her better. Brooklyn talks about everything from she has lived, what jobs she did before becoming a programmer, and her education in classical music, to her favorite bands, movies, and TV shows, as well as some of the projects she is working on. For all this, and more, don’t miss today’s episode! 
Key Points From This Episode: 
Lau explains what TLAs are and why they aren’t always helpful for explicit communication. 
Lau introduces himself and shares how he got into programming and computer science. 
The resources Lau found most useful when he started using Elixir, including books he read. 
What it means that Elixir’s source code is written in Elixir, and why that was helpful for Lau. 
Lu talks about Calendar, a datetime library that Lau created for Elixir, and Tzdata, a parser and library he created for the tz database, and why he created them. 
How Lau deconstructed the time zone problems and how his ideas have changed over time. 
Lau’s opinions on time zones and daylight savings and whether or not they’re necessary. 
Advice from Lau for anyone working with time in Elixir. 
Another edition of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. 
Where Brooklyn was born, where she has lived, and the jobs she did before programming. 
Brooklyn talks about her musical background and how it’s similar to programming. 
Brooklyn shares a pro tip about slides and reflects on her highlights as a speaker. 
What Brooklyn would be doing if she weren’t a programmer and the genre of music she likes. 
Brooklyn’s favorite TV shows and movies, including Amadeus and Mad Men. 
Brooklyn shares what she’s working on currently and the next project she’s excited about. 
Links Mentioned in Today’s Episode: 
Lau Taarnskov on Twitter – https://twitter.com/laut 
Creative Deletion Blog – http://www.creativedeletion.com/ 
Lau Taarnskov on GitHub – https://github.com/lau 
Calendar on GitHub – https://github.com/lau/calendar 
Tzdata on GitHub – https://github.com/lau/tzdata 
Elixir in Action – https://www.amazon.com/Elixir-Action 
Programming Elixir – https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/ 
Brooklyn Zelenka on LinkedIn – https://www.linkedin.com/in/brooklynzelenka/ Brooklyn Zelenka on 
Twitter – https://twitter.com/expede 
Brooklyn Zelenka on GitHub – https://github.com/expede 
FISSIONcodes Website – https://fission.codes/ 
SmartLogic — https://smartlogic.io/ 
Amadeus — https://www.rottentomatoes.com/m/amadeus 
Mad Men — https://www.rottentomatoes.com/tv/mad-men  Special Guest: Lau Taarnskov.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Handling date and time is a challenge in any language, but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s guest on Elixir Wizards, and this episode is all about his contributions to Elixir. Lau has been involved with web development and e-commerce for decades. He started contributing to Elixir open source in 2014 and created the Calendar and tzdata libraries. Calendar is a datetime library for Elixir, that provides explicit types for datetimes, dates, and times, and full time zone support is provided via its sister package, tzdata. When it comes to the subject of date, time, and time zones, besides talking about it and writing software for it, Lau also writes about it on his blog, Creative Deletion. </p>

<p>This episode explores how Lau got started in programming, and what led him to creating Calendar and tzdata. Lau shares the resources that he found helpful when he started using Elixir, and why he was drawn to Elixir in the first place. We hear Lau’s opinions on time zones and daylight savings and whether or not they’re necessary, and he shares some advice for anyone working with time in Elixir. </p>

<p>Then it’s time for another edition of Pattern Matching with Todd, in which Todd Resudek asks Brooklyn Zekanka five questions to help us get to know her better. Brooklyn talks about everything from she has lived, what jobs she did before becoming a programmer, and her education in classical music, to her favorite bands, movies, and TV shows, as well as some of the projects she is working on. For all this, and more, don’t miss today’s episode! </p>

<p>Key Points From This Episode: </p>

<ul>
<li>Lau explains what TLAs are and why they aren’t always helpful for explicit communication. </li>
<li>Lau introduces himself and shares how he got into programming and computer science. </li>
<li>The resources Lau found most useful when he started using Elixir, including books he read. </li>
<li>What it means that Elixir’s source code is written in Elixir, and why that was helpful for Lau. </li>
<li>Lu talks about Calendar, a datetime library that Lau created for Elixir, and Tzdata, a parser and library he created for the tz database, and why he created them. </li>
<li>How Lau deconstructed the time zone problems and how his ideas have changed over time. </li>
<li>Lau’s opinions on time zones and daylight savings and whether or not they’re necessary. </li>
<li>Advice from Lau for anyone working with time in Elixir. </li>
<li>Another edition of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>
<li>Where Brooklyn was born, where she has lived, and the jobs she did before programming. </li>
<li>Brooklyn talks about her musical background and how it’s similar to programming. </li>
<li>Brooklyn shares a pro tip about slides and reflects on her highlights as a speaker. </li>
<li>What Brooklyn would be doing if she weren’t a programmer and the genre of music she likes. </li>
<li>Brooklyn’s favorite TV shows and movies, including Amadeus and Mad Men. </li>
<li>Brooklyn shares what she’s working on currently and the next project she’s excited about. </li>
</ul>

<p>Links Mentioned in Today’s Episode: </p>

<p>Lau Taarnskov on Twitter – <a href="https://twitter.com/laut" rel="nofollow">https://twitter.com/laut</a> <br>
Creative Deletion Blog – <a href="http://www.creativedeletion.com/" rel="nofollow">http://www.creativedeletion.com/</a> <br>
Lau Taarnskov on GitHub – <a href="https://github.com/lau" rel="nofollow">https://github.com/lau</a> <br>
Calendar on GitHub – <a href="https://github.com/lau/calendar" rel="nofollow">https://github.com/lau/calendar</a> <br>
Tzdata on GitHub – <a href="https://github.com/lau/tzdata" rel="nofollow">https://github.com/lau/tzdata</a> <br>
Elixir in Action – <a href="https://www.amazon.com/Elixir-Action" rel="nofollow">https://www.amazon.com/Elixir-Action</a> <br>
Programming Elixir – <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a> <br>
Brooklyn Zelenka on LinkedIn – <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka on <br>
Twitter – <a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a> <br>
Brooklyn Zelenka on GitHub – <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a> <br>
FISSIONcodes Website – <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Amadeus — <a href="https://www.rottentomatoes.com/m/amadeus" rel="nofollow">https://www.rottentomatoes.com/m/amadeus</a> <br>
Mad Men — <a href="https://www.rottentomatoes.com/tv/mad-men" rel="nofollow">https://www.rottentomatoes.com/tv/mad-men</a> </p><p>Special Guest: Lau Taarnskov.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Handling date and time is a challenge in any language, but Lau Taarnskov is determined to solve that problem in Elixir. Lau is today’s guest on Elixir Wizards, and this episode is all about his contributions to Elixir. Lau has been involved with web development and e-commerce for decades. He started contributing to Elixir open source in 2014 and created the Calendar and tzdata libraries. Calendar is a datetime library for Elixir, that provides explicit types for datetimes, dates, and times, and full time zone support is provided via its sister package, tzdata. When it comes to the subject of date, time, and time zones, besides talking about it and writing software for it, Lau also writes about it on his blog, Creative Deletion. </p>

<p>This episode explores how Lau got started in programming, and what led him to creating Calendar and tzdata. Lau shares the resources that he found helpful when he started using Elixir, and why he was drawn to Elixir in the first place. We hear Lau’s opinions on time zones and daylight savings and whether or not they’re necessary, and he shares some advice for anyone working with time in Elixir. </p>

<p>Then it’s time for another edition of Pattern Matching with Todd, in which Todd Resudek asks Brooklyn Zekanka five questions to help us get to know her better. Brooklyn talks about everything from she has lived, what jobs she did before becoming a programmer, and her education in classical music, to her favorite bands, movies, and TV shows, as well as some of the projects she is working on. For all this, and more, don’t miss today’s episode! </p>

<p>Key Points From This Episode: </p>

<ul>
<li>Lau explains what TLAs are and why they aren’t always helpful for explicit communication. </li>
<li>Lau introduces himself and shares how he got into programming and computer science. </li>
<li>The resources Lau found most useful when he started using Elixir, including books he read. </li>
<li>What it means that Elixir’s source code is written in Elixir, and why that was helpful for Lau. </li>
<li>Lu talks about Calendar, a datetime library that Lau created for Elixir, and Tzdata, a parser and library he created for the tz database, and why he created them. </li>
<li>How Lau deconstructed the time zone problems and how his ideas have changed over time. </li>
<li>Lau’s opinions on time zones and daylight savings and whether or not they’re necessary. </li>
<li>Advice from Lau for anyone working with time in Elixir. </li>
<li>Another edition of Pattern Matching with Todd – today’s guest is Brooklyn Zelenka. </li>
<li>Where Brooklyn was born, where she has lived, and the jobs she did before programming. </li>
<li>Brooklyn talks about her musical background and how it’s similar to programming. </li>
<li>Brooklyn shares a pro tip about slides and reflects on her highlights as a speaker. </li>
<li>What Brooklyn would be doing if she weren’t a programmer and the genre of music she likes. </li>
<li>Brooklyn’s favorite TV shows and movies, including Amadeus and Mad Men. </li>
<li>Brooklyn shares what she’s working on currently and the next project she’s excited about. </li>
</ul>

<p>Links Mentioned in Today’s Episode: </p>

<p>Lau Taarnskov on Twitter – <a href="https://twitter.com/laut" rel="nofollow">https://twitter.com/laut</a> <br>
Creative Deletion Blog – <a href="http://www.creativedeletion.com/" rel="nofollow">http://www.creativedeletion.com/</a> <br>
Lau Taarnskov on GitHub – <a href="https://github.com/lau" rel="nofollow">https://github.com/lau</a> <br>
Calendar on GitHub – <a href="https://github.com/lau/calendar" rel="nofollow">https://github.com/lau/calendar</a> <br>
Tzdata on GitHub – <a href="https://github.com/lau/tzdata" rel="nofollow">https://github.com/lau/tzdata</a> <br>
Elixir in Action – <a href="https://www.amazon.com/Elixir-Action" rel="nofollow">https://www.amazon.com/Elixir-Action</a> <br>
Programming Elixir – <a href="https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/" rel="nofollow">https://www.amazon.com/Programming-Elixir-1-6-Functional-Concurrent/</a> <br>
Brooklyn Zelenka on LinkedIn – <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a> Brooklyn Zelenka on <br>
Twitter – <a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a> <br>
Brooklyn Zelenka on GitHub – <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a> <br>
FISSIONcodes Website – <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a> <br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Amadeus — <a href="https://www.rottentomatoes.com/m/amadeus" rel="nofollow">https://www.rottentomatoes.com/m/amadeus</a> <br>
Mad Men — <a href="https://www.rottentomatoes.com/tv/mad-men" rel="nofollow">https://www.rottentomatoes.com/tv/mad-men</a> </p><p>Special Guest: Lau Taarnskov.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Council of Wizards Part 2 with Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e9b-council</link>
      <guid isPermaLink="false">e9769249-24cb-455c-9983-011f1c414d3d</guid>
      <pubDate>Thu, 16 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e9769249-24cb-455c-9983-011f1c414d3d.mp3" length="80012368" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>For part 2 of our Council of Wizards panel discussion, we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! They share the lessons they have learned in the podcasting space and discuss strategies on working remotely.</itunes:subtitle>
      <itunes:duration>55:09</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e9769249-24cb-455c-9983-011f1c414d3d/cover.jpg" />
      <description>For part 2 of our Council of Wizards panel discussion, we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the intersection of the language and talking about it. They share the lessons they have learned in the podcasting space, making some pit stops to chat about aliens, Elixir beef, and marble flooring! We discuss the community during the pandemic and what the Elixir world might look like for the next year or two. Emily and Dan then step in to give us all the information about Very and their very functional remote work model. They talk us through the full departure that the company made from a physical hub and both share what they love and hate about working from home, before and during the COVID crisis. Dan and Emily talk about onboarding and team spirit in remote teams and the strategies that have best served Very in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his game night competitions and more. He unpacks the games he has already hosted and some of the candidates for future events before we hear about his experiences in the pandemic, specifically as an extrovert and a father. For all of this make sure to join us on the show!
Key Points From This Episode:
The exciting possibility of starting beef in the Elixir community! 
Books and podcasts we have been reading and listening to. 
Marble flooring, glass blowing, aliens, conspiracy theories, and impersonations! 
Tips, tricks, and lessons for the podcast space from Chris and Desmond.
Thoughts on the future of the Elixir community during and after the pandemic. 
The array of projects that keep Chris and Desmond busy; startups, meetups, conferences! 
Very's fully remote-work setup and the decision to move away from a physical office.  
Challenges and lessons in the work-from-home model; making do with less in-person interaction. 
Positive sides to a home workspace; making a mess and closing the door. 
Employee socialization and familiarization at a remote company. 
The applicability of Elixir across different projects and libraries.  
The infinite amount of puns that are available when talking about Very! 
Programming Connect Four and the future of bot competitions according to Alan.
Strategy snobs and taking this to its logical conclusion with chess and Go. 
The effect that the pandemic has had on extroverts and the adjustments that Alan has made.
The possibility of ElixirConf this year and the forms it could take.
Work that has gone into Alan's game-night side project over the last months.
The growth of Postmates and their current need for new employees! 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Elixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1
ElixirConf — https://elixirconf.com/2020
Github Repo for Transcript Corrections — https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts
Chris Bell — https://cjbell.co/
Chris Bell on Twitter — https://twitter.com/cjbell
Desmond Bowe on Twitter — https://twitter.com/desmondmonster
ElixirTalk — http://elixirtalk.com/
Emily Maxie on Twitter  — https://twitter.com/emilymaxie
Dan Lindeman on Twitter— https://twitter.com/lindemda
Very — http://verypossible.com/
Chris McCord — http://chrismccord.com/
Alan Voss — http://www.alanvoss.org/
Alan Voss on Twitter — https://twitter.com/alanvoss
Lonestar Elixir— https://lonestarelixir.com/
MPex — https://mpex.com/
Payitoff — https://www.payitoff.io/
Meetup — https://www.meetup.com/
OpenAI — https://openai.com/
Risk — https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG
Strange Loop — https://www.thestrangeloop.com/
Postmates — https://postmates.com/ Special Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>For part 2 of our Council of Wizards panel discussion, we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the intersection of the language and talking about it. They share the lessons they have learned in the podcasting space, making some pit stops to chat about aliens, Elixir beef, and marble flooring! We discuss the community during the pandemic and what the Elixir world might look like for the next year or two. Emily and Dan then step in to give us all the information about Very and their very functional remote work model. They talk us through the full departure that the company made from a physical hub and both share what they love and hate about working from home, before and during the COVID crisis. Dan and Emily talk about onboarding and team spirit in remote teams and the strategies that have best served Very in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his game night competitions and more. He unpacks the games he has already hosted and some of the candidates for future events before we hear about his experiences in the pandemic, specifically as an extrovert and a father. For all of this make sure to join us on the show!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The exciting possibility of starting beef in the Elixir community! </li>
<li>Books and podcasts we have been reading and listening to. </li>
<li>Marble flooring, glass blowing, aliens, conspiracy theories, and impersonations! </li>
<li>Tips, tricks, and lessons for the podcast space from Chris and Desmond.</li>
<li>Thoughts on the future of the Elixir community during and after the pandemic. </li>
<li>The array of projects that keep Chris and Desmond busy; startups, meetups, conferences! </li>
<li>Very&#39;s fully remote-work setup and the decision to move away from a physical office.<br></li>
<li>Challenges and lessons in the work-from-home model; making do with less in-person interaction. </li>
<li>Positive sides to a home workspace; making a mess and closing the door. </li>
<li>Employee socialization and familiarization at a remote company. </li>
<li>The applicability of Elixir across different projects and libraries.<br></li>
<li>The infinite amount of puns that are available when talking about Very! </li>
<li>Programming Connect Four and the future of bot competitions according to Alan.</li>
<li>Strategy snobs and taking this to its logical conclusion with chess and Go. </li>
<li>The effect that the pandemic has had on extroverts and the adjustments that Alan has made.</li>
<li>The possibility of ElixirConf this year and the forms it could take.</li>
<li>Work that has gone into Alan&#39;s game-night side project over the last months.</li>
<li>The growth of Postmates and their current need for new employees! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Ecosystem Survey — <a href="https://elixirsurvey.typeform.com/to/yYmJv1" rel="nofollow">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Github Repo for Transcript Corrections — <a href="https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts" rel="nofollow">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>
Chris Bell — <a href="https://cjbell.co/" rel="nofollow">https://cjbell.co/</a><br>
Chris Bell on Twitter — <a href="https://twitter.com/cjbell" rel="nofollow">https://twitter.com/cjbell</a><br>
Desmond Bowe on Twitter — <a href="https://twitter.com/desmondmonster" rel="nofollow">https://twitter.com/desmondmonster</a><br>
ElixirTalk — <a href="http://elixirtalk.com/" rel="nofollow">http://elixirtalk.com/</a><br>
Emily Maxie on Twitter  — <a href="https://twitter.com/emilymaxie" rel="nofollow">https://twitter.com/emilymaxie</a><br>
Dan Lindeman on Twitter— <a href="https://twitter.com/lindemda" rel="nofollow">https://twitter.com/lindemda</a><br>
Very — <a href="http://verypossible.com/" rel="nofollow">http://verypossible.com/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Alan Voss — <a href="http://www.alanvoss.org/" rel="nofollow">http://www.alanvoss.org/</a><br>
Alan Voss on Twitter — <a href="https://twitter.com/alanvoss" rel="nofollow">https://twitter.com/alanvoss</a><br>
Lonestar Elixir— <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
MPex — <a href="https://mpex.com/" rel="nofollow">https://mpex.com/</a><br>
Payitoff — <a href="https://www.payitoff.io/" rel="nofollow">https://www.payitoff.io/</a><br>
Meetup — <a href="https://www.meetup.com/" rel="nofollow">https://www.meetup.com/</a><br>
OpenAI — <a href="https://openai.com/" rel="nofollow">https://openai.com/</a><br>
Risk — <a href="https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG" rel="nofollow">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>
Strange Loop — <a href="https://www.thestrangeloop.com/" rel="nofollow">https://www.thestrangeloop.com/</a><br>
Postmates — <a href="https://postmates.com/" rel="nofollow">https://postmates.com/</a></p><p>Special Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>For part 2 of our Council of Wizards panel discussion, we are joined by Chris Bell, Desmond Bowe, Emily Maxie, Dan Lindeman, and Alan Voss! Chris and Desmond run the ElixirTalk Podcast and we get in-depth on the intersection of the language and talking about it. They share the lessons they have learned in the podcasting space, making some pit stops to chat about aliens, Elixir beef, and marble flooring! We discuss the community during the pandemic and what the Elixir world might look like for the next year or two. Emily and Dan then step in to give us all the information about Very and their very functional remote work model. They talk us through the full departure that the company made from a physical hub and both share what they love and hate about working from home, before and during the COVID crisis. Dan and Emily talk about onboarding and team spirit in remote teams and the strategies that have best served Very in this regard. Lastly, we have a bonus section with Alan Voss, to discuss his game night competitions and more. He unpacks the games he has already hosted and some of the candidates for future events before we hear about his experiences in the pandemic, specifically as an extrovert and a father. For all of this make sure to join us on the show!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The exciting possibility of starting beef in the Elixir community! </li>
<li>Books and podcasts we have been reading and listening to. </li>
<li>Marble flooring, glass blowing, aliens, conspiracy theories, and impersonations! </li>
<li>Tips, tricks, and lessons for the podcast space from Chris and Desmond.</li>
<li>Thoughts on the future of the Elixir community during and after the pandemic. </li>
<li>The array of projects that keep Chris and Desmond busy; startups, meetups, conferences! </li>
<li>Very&#39;s fully remote-work setup and the decision to move away from a physical office.<br></li>
<li>Challenges and lessons in the work-from-home model; making do with less in-person interaction. </li>
<li>Positive sides to a home workspace; making a mess and closing the door. </li>
<li>Employee socialization and familiarization at a remote company. </li>
<li>The applicability of Elixir across different projects and libraries.<br></li>
<li>The infinite amount of puns that are available when talking about Very! </li>
<li>Programming Connect Four and the future of bot competitions according to Alan.</li>
<li>Strategy snobs and taking this to its logical conclusion with chess and Go. </li>
<li>The effect that the pandemic has had on extroverts and the adjustments that Alan has made.</li>
<li>The possibility of ElixirConf this year and the forms it could take.</li>
<li>Work that has gone into Alan&#39;s game-night side project over the last months.</li>
<li>The growth of Postmates and their current need for new employees! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Ecosystem Survey — <a href="https://elixirsurvey.typeform.com/to/yYmJv1" rel="nofollow">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Github Repo for Transcript Corrections — <a href="https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts" rel="nofollow">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>
Chris Bell — <a href="https://cjbell.co/" rel="nofollow">https://cjbell.co/</a><br>
Chris Bell on Twitter — <a href="https://twitter.com/cjbell" rel="nofollow">https://twitter.com/cjbell</a><br>
Desmond Bowe on Twitter — <a href="https://twitter.com/desmondmonster" rel="nofollow">https://twitter.com/desmondmonster</a><br>
ElixirTalk — <a href="http://elixirtalk.com/" rel="nofollow">http://elixirtalk.com/</a><br>
Emily Maxie on Twitter  — <a href="https://twitter.com/emilymaxie" rel="nofollow">https://twitter.com/emilymaxie</a><br>
Dan Lindeman on Twitter— <a href="https://twitter.com/lindemda" rel="nofollow">https://twitter.com/lindemda</a><br>
Very — <a href="http://verypossible.com/" rel="nofollow">http://verypossible.com/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Alan Voss — <a href="http://www.alanvoss.org/" rel="nofollow">http://www.alanvoss.org/</a><br>
Alan Voss on Twitter — <a href="https://twitter.com/alanvoss" rel="nofollow">https://twitter.com/alanvoss</a><br>
Lonestar Elixir— <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
MPex — <a href="https://mpex.com/" rel="nofollow">https://mpex.com/</a><br>
Payitoff — <a href="https://www.payitoff.io/" rel="nofollow">https://www.payitoff.io/</a><br>
Meetup — <a href="https://www.meetup.com/" rel="nofollow">https://www.meetup.com/</a><br>
OpenAI — <a href="https://openai.com/" rel="nofollow">https://openai.com/</a><br>
Risk — <a href="https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG" rel="nofollow">https://www.amazon.com/Hasbro-B7404-Risk-Game/dp/B01ALHAIWG</a><br>
Strange Loop — <a href="https://www.thestrangeloop.com/" rel="nofollow">https://www.thestrangeloop.com/</a><br>
Postmates — <a href="https://postmates.com/" rel="nofollow">https://postmates.com/</a></p><p>Special Guests: Alan Voss, Chris Bell, Dan Lindeman, Desmond Bowe, and Emily Maxie.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Council of Wizards Part 1 with Andrea Leopardi and René Föhring</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e9a-council</link>
      <guid isPermaLink="false">2e71b35e-54cc-4bfe-be34-6567c5fb448c</guid>
      <pubDate>Tue, 14 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2e71b35e-54cc-4bfe-be34-6567c5fb448c.mp3" length="57422532" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We are joined by Andrea Leopardi and René Föhring discussing personal preferences, tips and tricks, and recommendations for Elixir and beyond. Make sure to tune in today and stay tuned for part 2!</itunes:subtitle>
      <itunes:duration>39:28</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2e71b35e-54cc-4bfe-be34-6567c5fb448c/cover.jpg" />
      <description>The Elixir community continues to flourish and evolve in these uncertain times and in honor of this we have put together a live show with a number of special guests! In part one today, we are joined by Andrea Leopardi and René Föhring, who we are so happy to welcome back. We get the lowdown from each of them in turn, discussing personal preferences, tips and tricks, and recommendations for Elixir and beyond. Andrea gets into some of his pet peeves and comments on the trend of slow interfaces. We then look at future possibilities for Elixir including the outside chance of it being run on mobile and for crypto-mining! Andrea also updates us on the book he is currently working on so keep an eye out for that in the future! René then steps in to talk about his work on Credo, his hopes for it in the future, and some suggestions for listeners using it. We do some comparisons between Elixir and Ruby before René offers some thoughts on Electron and functional programming concepts. So for all this and a whole lot more, make sure to tune in today and stay tuned for part 2!
Key Points From This Episode:
A reintroduction to Andrea and his current work in the Elixir space.
Andrea's tool recommendations and what he uses most at the moment. 
Updates, the short term future of the world of Elixir and Andrea's current focus.
RSpec versus xUnit: Andrea's personal preferences. 
Andrea's limited experience of LiveView and early reactions.
Feelings about computers and phones with slow interfaces!
The very slim chances of seeing Elixir run on mobile. 
Cryptocurrency and Andrea's lack of experience and ambition in the space.  
Some exciting information about Andrea's upcoming book to keep an eye out for. 
René's current projects; Credo, Elixir weekly newsletter, and more! 
The future of Elixir — will it be the next Ruby? 
Elixir on a phone; René's thoughts on this possibility and its validity. 
Updates for Credo — all the exciting news since our last conversation with René. 
Improving work that you are proud of and René's own feelings about Credo.
The objectives and vision for Credo and improving upon certain pain points. 
Writing and running in Electron and how to have fun while doing it!
The application of functional programming concepts in René's work in Electron.
René's suggestion for Credo — using the Credo master after it being reworked.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Elixir Ecosystem Survey — https://elixirsurvey.typeform.com/to/yYmJv1
ElixirConf — https://elixirconf.com/2020 
Github Repo for Transcripts Corrections - https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts
Andrea Leopardi — https://andrealeopardi.com/
Andrew Leopardi on Twitter — https://twitter.com/whatyouhide
Rene Föhring — http://rrrene.org/
Rene Föhring on Twitter — https://twitter.com/rrrene
Alfred — https://www.alfredapp.com/
Tesla — https://www.tesla.com/
TempleOS — https://templeos.org/
Elon Musk — https://www.forbes.com/profile/elon-musk/
Mint — https://www.mint.com/
Finch — https://finch.io/
Ruby — https://www.ruby-lang.org/en/
Electron — https://www.electronjs.org/
 Special Guests: Andrea Leopardi and René Föhring.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>The Elixir community continues to flourish and evolve in these uncertain times and in honor of this we have put together a live show with a number of special guests! In part one today, we are joined by Andrea Leopardi and René Föhring, who we are so happy to welcome back. We get the lowdown from each of them in turn, discussing personal preferences, tips and tricks, and recommendations for Elixir and beyond. Andrea gets into some of his pet peeves and comments on the trend of slow interfaces. We then look at future possibilities for Elixir including the outside chance of it being run on mobile and for crypto-mining! Andrea also updates us on the book he is currently working on so keep an eye out for that in the future! René then steps in to talk about his work on Credo, his hopes for it in the future, and some suggestions for listeners using it. We do some comparisons between Elixir and Ruby before René offers some thoughts on Electron and functional programming concepts. So for all this and a whole lot more, make sure to tune in today and stay tuned for part 2!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A reintroduction to Andrea and his current work in the Elixir space.</li>
<li>Andrea&#39;s tool recommendations and what he uses most at the moment. </li>
<li>Updates, the short term future of the world of Elixir and Andrea&#39;s current focus.</li>
<li>RSpec versus xUnit: Andrea&#39;s personal preferences. </li>
<li>Andrea&#39;s limited experience of LiveView and early reactions.</li>
<li>Feelings about computers and phones with slow interfaces!</li>
<li>The very slim chances of seeing Elixir run on mobile. </li>
<li>Cryptocurrency and Andrea&#39;s lack of experience and ambition in the space.<br></li>
<li>Some exciting information about Andrea&#39;s upcoming book to keep an eye out for. </li>
<li>René&#39;s current projects; Credo, Elixir weekly newsletter, and more! </li>
<li>The future of Elixir — will it be the next Ruby? </li>
<li>Elixir on a phone; René&#39;s thoughts on this possibility and its validity. </li>
<li>Updates for Credo — all the exciting news since our last conversation with René. </li>
<li>Improving work that you are proud of and René&#39;s own feelings about Credo.</li>
<li>The objectives and vision for Credo and improving upon certain pain points. </li>
<li>Writing and running in Electron and how to have fun while doing it!</li>
<li>The application of functional programming concepts in René&#39;s work in Electron.</li>
<li>René&#39;s suggestion for Credo — using the Credo master after it being reworked.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Ecosystem Survey — <a href="https://elixirsurvey.typeform.com/to/yYmJv1" rel="nofollow">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a> <br>
Github Repo for Transcripts Corrections - <a href="https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts" rel="nofollow">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Andrew Leopardi on Twitter — <a href="https://twitter.com/whatyouhide" rel="nofollow">https://twitter.com/whatyouhide</a><br>
Rene Föhring — <a href="http://rrrene.org/" rel="nofollow">http://rrrene.org/</a><br>
Rene Föhring on Twitter — <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
Alfred — <a href="https://www.alfredapp.com/" rel="nofollow">https://www.alfredapp.com/</a><br>
Tesla — <a href="https://www.tesla.com/" rel="nofollow">https://www.tesla.com/</a><br>
TempleOS — <a href="https://templeos.org/" rel="nofollow">https://templeos.org/</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/" rel="nofollow">https://www.forbes.com/profile/elon-musk/</a><br>
Mint — <a href="https://www.mint.com/" rel="nofollow">https://www.mint.com/</a><br>
Finch — <a href="https://finch.io/" rel="nofollow">https://finch.io/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Electron — <a href="https://www.electronjs.org/" rel="nofollow">https://www.electronjs.org/</a></p><p>Special Guests: Andrea Leopardi and René Föhring.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>The Elixir community continues to flourish and evolve in these uncertain times and in honor of this we have put together a live show with a number of special guests! In part one today, we are joined by Andrea Leopardi and René Föhring, who we are so happy to welcome back. We get the lowdown from each of them in turn, discussing personal preferences, tips and tricks, and recommendations for Elixir and beyond. Andrea gets into some of his pet peeves and comments on the trend of slow interfaces. We then look at future possibilities for Elixir including the outside chance of it being run on mobile and for crypto-mining! Andrea also updates us on the book he is currently working on so keep an eye out for that in the future! René then steps in to talk about his work on Credo, his hopes for it in the future, and some suggestions for listeners using it. We do some comparisons between Elixir and Ruby before René offers some thoughts on Electron and functional programming concepts. So for all this and a whole lot more, make sure to tune in today and stay tuned for part 2!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A reintroduction to Andrea and his current work in the Elixir space.</li>
<li>Andrea&#39;s tool recommendations and what he uses most at the moment. </li>
<li>Updates, the short term future of the world of Elixir and Andrea&#39;s current focus.</li>
<li>RSpec versus xUnit: Andrea&#39;s personal preferences. </li>
<li>Andrea&#39;s limited experience of LiveView and early reactions.</li>
<li>Feelings about computers and phones with slow interfaces!</li>
<li>The very slim chances of seeing Elixir run on mobile. </li>
<li>Cryptocurrency and Andrea&#39;s lack of experience and ambition in the space.<br></li>
<li>Some exciting information about Andrea&#39;s upcoming book to keep an eye out for. </li>
<li>René&#39;s current projects; Credo, Elixir weekly newsletter, and more! </li>
<li>The future of Elixir — will it be the next Ruby? </li>
<li>Elixir on a phone; René&#39;s thoughts on this possibility and its validity. </li>
<li>Updates for Credo — all the exciting news since our last conversation with René. </li>
<li>Improving work that you are proud of and René&#39;s own feelings about Credo.</li>
<li>The objectives and vision for Credo and improving upon certain pain points. </li>
<li>Writing and running in Electron and how to have fun while doing it!</li>
<li>The application of functional programming concepts in René&#39;s work in Electron.</li>
<li>René&#39;s suggestion for Credo — using the Credo master after it being reworked.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir Ecosystem Survey — <a href="https://elixirsurvey.typeform.com/to/yYmJv1" rel="nofollow">https://elixirsurvey.typeform.com/to/yYmJv1</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a> <br>
Github Repo for Transcripts Corrections - <a href="https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts" rel="nofollow">https://github.com/smartlogic/smartlogic.io/tree/master/podcast/elixir-wizards/transcripts</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Andrew Leopardi on Twitter — <a href="https://twitter.com/whatyouhide" rel="nofollow">https://twitter.com/whatyouhide</a><br>
Rene Föhring — <a href="http://rrrene.org/" rel="nofollow">http://rrrene.org/</a><br>
Rene Föhring on Twitter — <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
Alfred — <a href="https://www.alfredapp.com/" rel="nofollow">https://www.alfredapp.com/</a><br>
Tesla — <a href="https://www.tesla.com/" rel="nofollow">https://www.tesla.com/</a><br>
TempleOS — <a href="https://templeos.org/" rel="nofollow">https://templeos.org/</a><br>
Elon Musk — <a href="https://www.forbes.com/profile/elon-musk/" rel="nofollow">https://www.forbes.com/profile/elon-musk/</a><br>
Mint — <a href="https://www.mint.com/" rel="nofollow">https://www.mint.com/</a><br>
Finch — <a href="https://finch.io/" rel="nofollow">https://finch.io/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Electron — <a href="https://www.electronjs.org/" rel="nofollow">https://www.electronjs.org/</a></p><p>Special Guests: Andrea Leopardi and René Föhring.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Chris McCord with a Deep Dive on Phoenix</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e8-mccord</link>
      <guid isPermaLink="false">c87149f2-e430-4fcb-8e22-e3242c625e1b</guid>
      <pubDate>Thu, 09 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c87149f2-e430-4fcb-8e22-e3242c625e1b.mp3" length="31476646" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We take a detour away from system and application architecture this week to talk with Chris McCord, creator of the Phoenix framework, onto the show. Listen in to hear Chris's programming journey from TI-Basic to where he is now.</itunes:subtitle>
      <itunes:duration>43:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c87149f2-e430-4fcb-8e22-e3242c625e1b/cover.jpg" />
      <description>Although it’s taken him four seasons to make an appearance, we are so glad to finally welcome Chris McCord, creator of the Phoenix framework, onto the show. While this season’s focus is on system and application architecture, today’s discussion deviates to focus on Phoenix. We get started by hearing more about Chris’s programming journey, all the way from TI-Basic to where he is now. After this, we dive into LiveView, the project Chris is currently focusing most of his energy on. We get into some of the incredible changes that have been made including live navigation, deep change tracking optimizations, and static asset tracking. Chris shares which of the changes he is most excited about, along with why he enjoys seeing LiveView being misused. We then look at some of the critiques of LiveView and Phoenix generally. Chris offers counter-arguments to the most common criticisms of the framework. He shares how the title of 'framework' can be a double-edged sword, as well as why he is hesitant to extract channels prematurely. We wrap the show up with a look into the future, hearing more about what’s on the horizon for Phoenix and where Chris hopes the Elixir community is headed. This conversation was well worth the four season-long wait, so be sure to tune in today!
Key Points From This Episode:
Why it took Chris four whole seasons to finally make an appearance on the show.
Chris’s programming journey from T-Basic all the way to Java, HTML, and PHP.
How a broken back landed Chris his first paid programming job.
Learn more about Chris’s current project, LiveView, and some of the recent additions.
Why the optimizations were the most interesting changes for Chris to make on LiveView.
Some of the most interesting use cases Chris has seen of LiveView.
How Chris plans to navigate laying LiveView out on a larger codebase.
Chris’s take on stateful applications and why the platform is so important.
The origins of the hilariously termed ‘dead view.’
Some of the most pertinent critiques of LiveView and Phoenix generally.
Chris busts some of the invalid critiques of Phoenix.
Why the community feedback on LiveWire has been so surprising to Chris.
Phoenix 1.6 changes and when we can expect its release.
Chris’s take on whether Elixir is likely to overthrow Rails in terms of popularity.
The systemic blockers that create adoption friction of Elixir and Phoenix.
Looking into the future — Chris’s goals for Phoenix and his hopes for the Elixir community.
Links Mentioned in Today’s Episode:
Chris McCord — http://chrismccord.com/
Chris McCord on Twitter — https://twitter.com/chrismccord
DockYard — https://dockyard.com/
Dave’s Site — https://www.davesite.com/
Hacking with PHP — http://www.hackingwithphp.com/
Phoenix LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
Phoenix Phrenzy — https://groundstation.gigalixirapp.com/
Dashbit: An Upcoming Authentication Solution for Phoenix — https://dashbit.co/blog/a-new-authentication-solution-for-phoenix
Aaron Renner on GitHub — https://github.com/aaronrenner/phxgenauth
Phoenix Issues on GitHub —
https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0
Phoenix Fire Nest — https://github.com/phoenixframework/firenest
Phoenix Pub/Sub — https://github.com/phoenixframework/phoenixpubsub
ElixirConf 2020— https://2020.elixirconf.com/
ElixirConf 2020 Speaker Proposals — https://2020.elixirconf.com/#cfp
TI-83 Calculator — https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU
Teach Yourself C in 21 Days — https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694
Rest Fest — https://www.restfest.org/
José Valim on Twitter — https://twitter.com/josevalim
Jason Goldberger on LinkedIn — https://www.linkedin.com/in/jason-goldberger-84237392/
SmartLogic — https://smartlogic.io/ 
SmartLogic Jobs — https://smartlogic.workable.com/ Special Guest: Chris McCord.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Although it’s taken him four seasons to make an appearance, we are so glad to finally welcome Chris McCord, creator of the Phoenix framework, onto the show. While this season’s focus is on system and application architecture, today’s discussion deviates to focus on Phoenix. We get started by hearing more about Chris’s programming journey, all the way from TI-Basic to where he is now. After this, we dive into LiveView, the project Chris is currently focusing most of his energy on. We get into some of the incredible changes that have been made including live navigation, deep change tracking optimizations, and static asset tracking. Chris shares which of the changes he is most excited about, along with why he enjoys seeing LiveView being misused. We then look at some of the critiques of LiveView and Phoenix generally. Chris offers counter-arguments to the most common criticisms of the framework. He shares how the title of &#39;framework&#39; can be a double-edged sword, as well as why he is hesitant to extract channels prematurely. We wrap the show up with a look into the future, hearing more about what’s on the horizon for Phoenix and where Chris hopes the Elixir community is headed. This conversation was well worth the four season-long wait, so be sure to tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why it took Chris four whole seasons to finally make an appearance on the show.</li>
<li>Chris’s programming journey from T-Basic all the way to Java, HTML, and PHP.</li>
<li>How a broken back landed Chris his first paid programming job.</li>
<li>Learn more about Chris’s current project, LiveView, and some of the recent additions.</li>
<li>Why the optimizations were the most interesting changes for Chris to make on LiveView.</li>
<li>Some of the most interesting use cases Chris has seen of LiveView.</li>
<li>How Chris plans to navigate laying LiveView out on a larger codebase.</li>
<li>Chris’s take on stateful applications and why the platform is so important.</li>
<li>The origins of the hilariously termed ‘dead view.’</li>
<li>Some of the most pertinent critiques of LiveView and Phoenix generally.</li>
<li>Chris busts some of the invalid critiques of Phoenix.</li>
<li>Why the community feedback on LiveWire has been so surprising to Chris.</li>
<li>Phoenix 1.6 changes and when we can expect its release.</li>
<li>Chris’s take on whether Elixir is likely to overthrow Rails in terms of popularity.</li>
<li>The systemic blockers that create adoption friction of Elixir and Phoenix.</li>
<li>Looking into the future — Chris’s goals for Phoenix and his hopes for the Elixir community.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Chris McCord on Twitter — <a href="https://twitter.com/chris_mccord" rel="nofollow">https://twitter.com/chris_mccord</a><br>
DockYard — <a href="https://dockyard.com/" rel="nofollow">https://dockyard.com/</a><br>
Dave’s Site — <a href="https://www.davesite.com/" rel="nofollow">https://www.davesite.com/</a><br>
Hacking with PHP — <a href="http://www.hackingwithphp.com/" rel="nofollow">http://www.hackingwithphp.com/</a><br>
Phoenix LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Phoenix Phrenzy — <a href="https://groundstation.gigalixirapp.com/" rel="nofollow">https://groundstation.gigalixirapp.com/</a><br>
Dashbit: An Upcoming Authentication Solution for Phoenix — <a href="https://dashbit.co/blog/a-new-authentication-solution-for-phoenix" rel="nofollow">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>
Aaron Renner on GitHub — <a href="https://github.com/aaronrenner/phx_gen_auth" rel="nofollow">https://github.com/aaronrenner/phx_gen_auth</a><br>
Phoenix Issues on GitHub —<br>
<a href="https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0" rel="nofollow">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>
Phoenix Fire Nest — <a href="https://github.com/phoenixframework/firenest" rel="nofollow">https://github.com/phoenixframework/firenest</a><br>
Phoenix Pub/Sub — <a href="https://github.com/phoenixframework/phoenix_pubsub" rel="nofollow">https://github.com/phoenixframework/phoenix_pubsub</a><br>
ElixirConf 2020— <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a><br>
ElixirConf 2020 Speaker Proposals — <a href="https://2020.elixirconf.com/#cfp" rel="nofollow">https://2020.elixirconf.com/#cfp</a><br>
TI-83 Calculator — <a href="https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU" rel="nofollow">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>
Teach Yourself C in 21 Days — <a href="https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694" rel="nofollow">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>
Rest Fest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
José Valim on Twitter — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Jason Goldberger on LinkedIn — <a href="https://www.linkedin.com/in/jason-goldberger-84237392/" rel="nofollow">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://smartlogic.workable.com/" rel="nofollow">https://smartlogic.workable.com/</a></p><p>Special Guest: Chris McCord.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Although it’s taken him four seasons to make an appearance, we are so glad to finally welcome Chris McCord, creator of the Phoenix framework, onto the show. While this season’s focus is on system and application architecture, today’s discussion deviates to focus on Phoenix. We get started by hearing more about Chris’s programming journey, all the way from TI-Basic to where he is now. After this, we dive into LiveView, the project Chris is currently focusing most of his energy on. We get into some of the incredible changes that have been made including live navigation, deep change tracking optimizations, and static asset tracking. Chris shares which of the changes he is most excited about, along with why he enjoys seeing LiveView being misused. We then look at some of the critiques of LiveView and Phoenix generally. Chris offers counter-arguments to the most common criticisms of the framework. He shares how the title of &#39;framework&#39; can be a double-edged sword, as well as why he is hesitant to extract channels prematurely. We wrap the show up with a look into the future, hearing more about what’s on the horizon for Phoenix and where Chris hopes the Elixir community is headed. This conversation was well worth the four season-long wait, so be sure to tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Why it took Chris four whole seasons to finally make an appearance on the show.</li>
<li>Chris’s programming journey from T-Basic all the way to Java, HTML, and PHP.</li>
<li>How a broken back landed Chris his first paid programming job.</li>
<li>Learn more about Chris’s current project, LiveView, and some of the recent additions.</li>
<li>Why the optimizations were the most interesting changes for Chris to make on LiveView.</li>
<li>Some of the most interesting use cases Chris has seen of LiveView.</li>
<li>How Chris plans to navigate laying LiveView out on a larger codebase.</li>
<li>Chris’s take on stateful applications and why the platform is so important.</li>
<li>The origins of the hilariously termed ‘dead view.’</li>
<li>Some of the most pertinent critiques of LiveView and Phoenix generally.</li>
<li>Chris busts some of the invalid critiques of Phoenix.</li>
<li>Why the community feedback on LiveWire has been so surprising to Chris.</li>
<li>Phoenix 1.6 changes and when we can expect its release.</li>
<li>Chris’s take on whether Elixir is likely to overthrow Rails in terms of popularity.</li>
<li>The systemic blockers that create adoption friction of Elixir and Phoenix.</li>
<li>Looking into the future — Chris’s goals for Phoenix and his hopes for the Elixir community.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Chris McCord on Twitter — <a href="https://twitter.com/chris_mccord" rel="nofollow">https://twitter.com/chris_mccord</a><br>
DockYard — <a href="https://dockyard.com/" rel="nofollow">https://dockyard.com/</a><br>
Dave’s Site — <a href="https://www.davesite.com/" rel="nofollow">https://www.davesite.com/</a><br>
Hacking with PHP — <a href="http://www.hackingwithphp.com/" rel="nofollow">http://www.hackingwithphp.com/</a><br>
Phoenix LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
Phoenix Phrenzy — <a href="https://groundstation.gigalixirapp.com/" rel="nofollow">https://groundstation.gigalixirapp.com/</a><br>
Dashbit: An Upcoming Authentication Solution for Phoenix — <a href="https://dashbit.co/blog/a-new-authentication-solution-for-phoenix" rel="nofollow">https://dashbit.co/blog/a-new-authentication-solution-for-phoenix</a><br>
Aaron Renner on GitHub — <a href="https://github.com/aaronrenner/phx_gen_auth" rel="nofollow">https://github.com/aaronrenner/phx_gen_auth</a><br>
Phoenix Issues on GitHub —<br>
<a href="https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0" rel="nofollow">https://github.com/phoenixframework/phoenix/issuesq=is%3Aopen+is%3Aissue+milestone%3Av2.0</a><br>
Phoenix Fire Nest — <a href="https://github.com/phoenixframework/firenest" rel="nofollow">https://github.com/phoenixframework/firenest</a><br>
Phoenix Pub/Sub — <a href="https://github.com/phoenixframework/phoenix_pubsub" rel="nofollow">https://github.com/phoenixframework/phoenix_pubsub</a><br>
ElixirConf 2020— <a href="https://2020.elixirconf.com/" rel="nofollow">https://2020.elixirconf.com/</a><br>
ElixirConf 2020 Speaker Proposals — <a href="https://2020.elixirconf.com/#cfp" rel="nofollow">https://2020.elixirconf.com/#cfp</a><br>
TI-83 Calculator — <a href="https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU" rel="nofollow">https://www.amazon.com/Texas-Instruments-TI-83-Graphing-Calculator/dp/B00001N2QU</a><br>
Teach Yourself C in 21 Days — <a href="https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694" rel="nofollow">https://www.amazon.com/Teach-Yourself-21-Days-Sams/dp/0672310694</a><br>
Rest Fest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
José Valim on Twitter — <a href="https://twitter.com/josevalim" rel="nofollow">https://twitter.com/josevalim</a><br>
Jason Goldberger on LinkedIn — <a href="https://www.linkedin.com/in/jason-goldberger-84237392/" rel="nofollow">https://www.linkedin.com/in/jason-goldberger-84237392/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SmartLogic Jobs — <a href="https://smartlogic.workable.com/" rel="nofollow">https://smartlogic.workable.com/</a></p><p>Special Guest: Chris McCord.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Amos King on MUDs, Architecture, Domain-driven design, and Military Bases</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e7-king</link>
      <guid isPermaLink="false">c4183a48-6039-4dc1-b54b-c43973086490</guid>
      <pubDate>Thu, 02 Jul 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c4183a48-6039-4dc1-b54b-c43973086490.mp3" length="80349782" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws and This Agile Life podcasts joins us to talk about everything from programming, the military, sarcasm, and puns to systems and application architecture, domain-driven design, and bitmasks.</itunes:subtitle>
      <itunes:duration>55:23</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c4183a48-6039-4dc1-b54b-c43973086490/cover.jpg" />
      <description>Today’s guest is Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws and This Agile Life podcasts. This episode is centered around a casual conversation about everything from programming, the military, sarcasm, and puns to systems and application architecture, domain-driven design, and bitmasks. Amos shares with us how he got into programming, after wanting to be a doctor or an engineer first, and tells us how he met Famous Amos. We talk about spectrum analyzers, Elixir resources, and MUDs, as well as type-first design and Haskell. Amos gives us his takes on domain-driven design, API, booleans, and enums, and even roasts his co-host Chris Keithley a little. Don’t miss this episode for everything you’ve ever wanted to know about the legendary Amos King (and a whole lot more)!
Key Points From This Episode:
* Amos explains what Adkron means, which is his gaming and social media handle.
* Where the name Elixir Outlaws for the podcast came from.
* How Amos got into programming as a career, after wanting to be a surgeon and an engineer.
* What Amos’s first opportunity as a programmer was, and how he met Wally Amos.
* Amos explains what a spectrum analyzer is, based on his experience in the military.
* Amos shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.
* Eric and Amos talk about the MUD engine that they worked on together.
* What systems and application architecture means to Amos and how it differs from design.
* What type-first design (TFD) is and Amos’s opinion on it as a thought exercise.
* Amos talks about Haskell programming and domain-driven design.
* Relating domain-driven design to a car dealership to describe types and terminology.
* Amos talks a bit about his company and what they do.
* Justus, Eric, and Amos debate the term “architect” and what it actually means.
* Amos shares his take on API architecture, booleans, enums, and bitmasks.
* Amos gives his hot take on his co-host Chris Keithley.
Links Mentioned in Today’s Episode:
Amos King on Twitter — https://twitter.com/adkron
Elixir Outlaws Podcast — https://elixiroutlaws.com/
Wally Amos — https://en.wikipedia.org/wiki/WallyAmos
Windows 3.0 — https://en.wikipedia.org/wiki/Windows3.0
Real-Time Phoenix on Pragmatic Bookshelf — https://pragprog.com/book/sbsockets/real-time-phoenix
Elixir School — https://elixirschool.com/en/
Elixir Inaction — https://twitter.com/gausby/status/986550202248187904
This Agile Life Podcast — https://www.thisagilelife.com/
Screen — https://screen.so/#/home
Haskell Book — https://haskellbook.com/
Binary Noggin Website — https://binarynoggin.com/
Binary Noggin on Twitter — https://twitter.com/BinaryNoggin
SmartLogic — https://smartlogic.io/ 
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich — https://oestrich.org/
Kalevala — https://github.com/oestrich/kalevala
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
Eric Oestrich on GitHub — https://github.com/oestrich Special Guest: Amos King.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today’s guest is Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws and This Agile Life podcasts. This episode is centered around a casual conversation about everything from programming, the military, sarcasm, and puns to systems and application architecture, domain-driven design, and bitmasks. Amos shares with us how he got into programming, after wanting to be a doctor or an engineer first, and tells us how he met Famous Amos. We talk about spectrum analyzers, Elixir resources, and MUDs, as well as type-first design and Haskell. Amos gives us his takes on domain-driven design, API, booleans, and enums, and even roasts his co-host Chris Keithley a little. Don’t miss this episode for everything you’ve ever wanted to know about the legendary Amos King (and a whole lot more)!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Amos explains what Adkron means, which is his gaming and social media handle.</li>
<li>Where the name Elixir Outlaws for the podcast came from.</li>
<li>How Amos got into programming as a career, after wanting to be a surgeon and an engineer.</li>
<li>What Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>
<li>Amos explains what a spectrum analyzer is, based on his experience in the military.</li>
<li>Amos shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>
<li>Eric and Amos talk about the MUD engine that they worked on together.</li>
<li>What systems and application architecture means to Amos and how it differs from design.</li>
<li>What type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>
<li>Amos talks about Haskell programming and domain-driven design.</li>
<li>Relating domain-driven design to a car dealership to describe types and terminology.</li>
<li>Amos talks a bit about his company and what they do.</li>
<li>Justus, Eric, and Amos debate the term “architect” and what it actually means.</li>
<li>Amos shares his take on API architecture, booleans, enums, and bitmasks.</li>
<li>Amos gives his hot take on his co-host Chris Keithley.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Wally Amos — <a href="https://en.wikipedia.org/wiki/Wally_Amos" rel="nofollow">https://en.wikipedia.org/wiki/Wally_Amos</a><br>
Windows 3.0 — <a href="https://en.wikipedia.org/wiki/Windows_3.0" rel="nofollow">https://en.wikipedia.org/wiki/Windows_3.0</a><br>
Real-Time Phoenix on Pragmatic Bookshelf — <a href="https://pragprog.com/book/sbsockets/real-time-phoenix" rel="nofollow">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Elixir Inaction — <a href="https://twitter.com/gausby/status/986550202248187904" rel="nofollow">https://twitter.com/gausby/status/986550202248187904</a><br>
This Agile Life Podcast — <a href="https://www.thisagilelife.com/" rel="nofollow">https://www.thisagilelife.com/</a><br>
Screen — <a href="https://screen.so/#/home" rel="nofollow">https://screen.so/#/home</a><br>
Haskell Book — <a href="https://haskellbook.com/" rel="nofollow">https://haskellbook.com/</a><br>
Binary Noggin Website — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Binary Noggin on Twitter — <a href="https://twitter.com/BinaryNoggin" rel="nofollow">https://twitter.com/BinaryNoggin</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Kalevala — <a href="https://github.com/oestrich/kalevala" rel="nofollow">https://github.com/oestrich/kalevala</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Amos King.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today’s guest is Amos King, Principal CEO at Binary Noggin, and host on the Elixir Outlaws and This Agile Life podcasts. This episode is centered around a casual conversation about everything from programming, the military, sarcasm, and puns to systems and application architecture, domain-driven design, and bitmasks. Amos shares with us how he got into programming, after wanting to be a doctor or an engineer first, and tells us how he met Famous Amos. We talk about spectrum analyzers, Elixir resources, and MUDs, as well as type-first design and Haskell. Amos gives us his takes on domain-driven design, API, booleans, and enums, and even roasts his co-host Chris Keithley a little. Don’t miss this episode for everything you’ve ever wanted to know about the legendary Amos King (and a whole lot more)!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Amos explains what Adkron means, which is his gaming and social media handle.</li>
<li>Where the name Elixir Outlaws for the podcast came from.</li>
<li>How Amos got into programming as a career, after wanting to be a surgeon and an engineer.</li>
<li>What Amos’s first opportunity as a programmer was, and how he met Wally Amos.</li>
<li>Amos explains what a spectrum analyzer is, based on his experience in the military.</li>
<li>Amos shares why Steve Bussey’s book, Real-Time Phoenix, is his favorite Elixir resource.</li>
<li>Eric and Amos talk about the MUD engine that they worked on together.</li>
<li>What systems and application architecture means to Amos and how it differs from design.</li>
<li>What type-first design (TFD) is and Amos’s opinion on it as a thought exercise.</li>
<li>Amos talks about Haskell programming and domain-driven design.</li>
<li>Relating domain-driven design to a car dealership to describe types and terminology.</li>
<li>Amos talks a bit about his company and what they do.</li>
<li>Justus, Eric, and Amos debate the term “architect” and what it actually means.</li>
<li>Amos shares his take on API architecture, booleans, enums, and bitmasks.</li>
<li>Amos gives his hot take on his co-host Chris Keithley.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Amos King on Twitter — <a href="https://twitter.com/adkron" rel="nofollow">https://twitter.com/adkron</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Wally Amos — <a href="https://en.wikipedia.org/wiki/Wally_Amos" rel="nofollow">https://en.wikipedia.org/wiki/Wally_Amos</a><br>
Windows 3.0 — <a href="https://en.wikipedia.org/wiki/Windows_3.0" rel="nofollow">https://en.wikipedia.org/wiki/Windows_3.0</a><br>
Real-Time Phoenix on Pragmatic Bookshelf — <a href="https://pragprog.com/book/sbsockets/real-time-phoenix" rel="nofollow">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Elixir Inaction — <a href="https://twitter.com/gausby/status/986550202248187904" rel="nofollow">https://twitter.com/gausby/status/986550202248187904</a><br>
This Agile Life Podcast — <a href="https://www.thisagilelife.com/" rel="nofollow">https://www.thisagilelife.com/</a><br>
Screen — <a href="https://screen.so/#/home" rel="nofollow">https://screen.so/#/home</a><br>
Haskell Book — <a href="https://haskellbook.com/" rel="nofollow">https://haskellbook.com/</a><br>
Binary Noggin Website — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Binary Noggin on Twitter — <a href="https://twitter.com/BinaryNoggin" rel="nofollow">https://twitter.com/BinaryNoggin</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Kalevala — <a href="https://github.com/oestrich/kalevala" rel="nofollow">https://github.com/oestrich/kalevala</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Amos King.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sundi Myint on The Visual Side of Elixir, the History of Emojis, and Test- and Domain-Driven Architecture</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e6-myint</link>
      <guid isPermaLink="false">f14188bd-903b-49eb-bc8b-f52429966e63</guid>
      <pubDate>Thu, 25 Jun 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f14188bd-903b-49eb-bc8b-f52429966e63.mp3" length="66791874" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Our featured guest today is Sundi Myint and she is here to share her journey with Elixir and her non-traditional path to programming. We hear about Sundi's interest in gaming, experience using Elixir at Cava, and the inspiration behind her amazing Instagram account.  Plus we dive into Sundi's History of Emojis technical blog posts - a favorite of Justus'. 

And Pattern Matching with Todd is back with a conversation with Andrea Leopardi.</itunes:subtitle>
      <itunes:duration>45:58</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f14188bd-903b-49eb-bc8b-f52429966e63/cover.jpg" />
      <description>Welcome to another episode of Elixir Wizards as we continue our journey into system and application architecture! Our featured guest today is Sundi Myint and she is here to share her journey with Elixir and her non-traditional path to programming. We hear about Sundi's interest in gaming, her role at Cava and a bit of the inspiration behind her amazing Instagram account! We discuss her first internship and how she found herself in the role quite suddenly before diving into the motivation behind her blog post on the history of emojis. Sundi did some serious research into this interesting subject and she shares some of the more technical aspects of the story with us on the show. We talk about architecture and both test and design-driven approaches. Sundi also explains her process and how mapping things out on a whiteboard has been her favored way to do things for some time. Andrea Leopardi then joins us for another edition of Pattern Matching with Todd! He answers Todd's questions about his home life, media favorites, future projects and more!
Key Points From This Episode:
Sundi's Instagram aesthetic and her love of food and photography. 
How Sundi got into programming and her first internship.  
Getting hired at Cava and an introduction to Elixir and the community.
Video game programming and Sundi's thoughts on the possibility of pursuing this path. 
Sundi's first paid job out of college and the tech stack at the company.
Thoughts on easily available learning resources and the power of Live View. 
Some background on Sundi's amazing blog post on the history of emojis.
Understanding Unicode, how it works and its role in translation and interpretation. 
Sundi's perspectives on architecture and domain-driven design.
Code design strategies, workflow and the idea and practice of test-driven code. 
Conversations with stakeholders and moving to the planning stage. 
How Sundi uses whiteboards to map out her work graphically and Elixir's part in this. 
Andrea's travels and some of the amazing locations he has visited for conferences. 
Home life and lifestyle in quarantine for Andrea in Italy.
Alternative career paths and Andrea's other interests; balancing creativity and logic. 
Music, movies and television choices for Andrea.
Exciting new projects on the horizon for Andrea; a book, HTTP and more!
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Sundi Myint on Twitter — https://twitter.com/sundikhin
Sundi Myint on Instagram — https://www.instagram.com/sundikhin
Cava — https://cava.com/
Hackers &amp; Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554
Lonestar Elixir — https://lonestarelixir.com/
Bruce Tate — https://codesync.global/speaker/bruce-tate/
EA — https://www.ea.com
Groxio Learning — https://grox.io/training/elixir/home
Live View — https://support.google.com/maps/thread/11554255?hl=en
Build a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — https://www.youtube.com/watch?v=MZvmYaFkNJI
The History of Emojis Blog Post — https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d
Burgergate https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple
Joy of Coding — https://joyofcoding.org/
Test-driven development — https://en.wikipedia.org/wiki/Test-drivendevelopment
Mox — https://hexdocs.pm/mox/Mox.html
Venmo — https://venmo.com/
Mint — https://www.mint.com/
Avengers — https://www.marvel.com/movies/avengers-endgame
DC Elixir — https://www.meetup.com/DC-Elixir/
Todd Resudek — https://medium.com/@toddresudek
Andrea Leopardi — https://andrealeopardi.com/
Brooklyn Zelenka — https://medium.com/@expede
The Lord of Rings — https://www.rottentomatoes.com/franchise/lordoftherings
Wes Anderson — https://www.imdb.com/name/nm0027572/
Scott Pilgrim vs. The World — https://www.rottentomatoes.com/m/scottpilgrimsvstheworld
Community — https://www.rottentomatoes.com/tv/community
The Office — https://www.rottentomatoes.com/tv/theoffice
Rick and Morty — https://www.rottentomatoes.com/tv/rickand_morty
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich on Twitter — https://twitter.com/ericoestrich Special Guests: Andrea Leopardi and Sundi Myint.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to another episode of Elixir Wizards as we continue our journey into system and application architecture! Our featured guest today is Sundi Myint and she is here to share her journey with Elixir and her non-traditional path to programming. We hear about Sundi&#39;s interest in gaming, her role at Cava and a bit of the inspiration behind her amazing Instagram account! We discuss her first internship and how she found herself in the role quite suddenly before diving into the motivation behind her blog post on the history of emojis. Sundi did some serious research into this interesting subject and she shares some of the more technical aspects of the story with us on the show. We talk about architecture and both test and design-driven approaches. Sundi also explains her process and how mapping things out on a whiteboard has been her favored way to do things for some time. Andrea Leopardi then joins us for another edition of Pattern Matching with Todd! He answers Todd&#39;s questions about his home life, media favorites, future projects and more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Sundi&#39;s Instagram aesthetic and her love of food and photography. </li>
<li>How Sundi got into programming and her first internship.<br></li>
<li>Getting hired at Cava and an introduction to Elixir and the community.</li>
<li>Video game programming and Sundi&#39;s thoughts on the possibility of pursuing this path. </li>
<li>Sundi&#39;s first paid job out of college and the tech stack at the company.</li>
<li>Thoughts on easily available learning resources and the power of Live View. </li>
<li>Some background on Sundi&#39;s amazing blog post on the history of emojis.</li>
<li>Understanding Unicode, how it works and its role in translation and interpretation. </li>
<li>Sundi&#39;s perspectives on architecture and domain-driven design.</li>
<li>Code design strategies, workflow and the idea and practice of test-driven code. </li>
<li>Conversations with stakeholders and moving to the planning stage. </li>
<li>How Sundi uses whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>
<li>Andrea&#39;s travels and some of the amazing locations he has visited for conferences. </li>
<li>Home life and lifestyle in quarantine for Andrea in Italy.</li>
<li>Alternative career paths and Andrea&#39;s other interests; balancing creativity and logic. </li>
<li>Music, movies and television choices for Andrea.</li>
<li>Exciting new projects on the horizon for Andrea; a book, HTTP and more!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Sundi Myint on Instagram — <a href="https://www.instagram.com/sundikhin" rel="nofollow">https://www.instagram.com/sundikhin</a><br>
Cava — <a href="https://cava.com/" rel="nofollow">https://cava.com/</a><br>
Hackers &amp; Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Bruce Tate — <a href="https://codesync.global/speaker/bruce-tate/" rel="nofollow">https://codesync.global/speaker/bruce-tate/</a><br>
EA — <a href="https://www.ea.com" rel="nofollow">https://www.ea.com</a><br>
Groxio Learning — <a href="https://grox.io/training/elixir/home" rel="nofollow">https://grox.io/training/elixir/home</a><br>
Live View — <a href="https://support.google.com/maps/thread/11554255?hl=en" rel="nofollow">https://support.google.com/maps/thread/11554255?hl=en</a><br>
Build a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href="https://www.youtube.com/watch?v=MZvmYaFkNJI" rel="nofollow">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>
The History of Emojis Blog Post — <a href="https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d" rel="nofollow">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>
Burgergate <a href="https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple" rel="nofollow">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>
Joy of Coding — <a href="https://joyofcoding.org/" rel="nofollow">https://joyofcoding.org/</a><br>
Test-driven development — <a href="https://en.wikipedia.org/wiki/Test-driven_development" rel="nofollow">https://en.wikipedia.org/wiki/Test-driven_development</a><br>
Mox — <a href="https://hexdocs.pm/mox/Mox.html" rel="nofollow">https://hexdocs.pm/mox/Mox.html</a><br>
Venmo — <a href="https://venmo.com/" rel="nofollow">https://venmo.com/</a><br>
Mint — <a href="https://www.mint.com/" rel="nofollow">https://www.mint.com/</a><br>
Avengers — <a href="https://www.marvel.com/movies/avengers-endgame" rel="nofollow">https://www.marvel.com/movies/avengers-endgame</a><br>
DC Elixir — <a href="https://www.meetup.com/DC-Elixir/" rel="nofollow">https://www.meetup.com/DC-Elixir/</a><br>
Todd Resudek — <a href="https://medium.com/@toddresudek" rel="nofollow">https://medium.com/@toddresudek</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Brooklyn Zelenka — <a href="https://medium.com/@expede" rel="nofollow">https://medium.com/@expede</a><br>
The Lord of Rings — <a href="https://www.rottentomatoes.com/franchise/lord_of_the_rings" rel="nofollow">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>
Wes Anderson — <a href="https://www.imdb.com/name/nm0027572/" rel="nofollow">https://www.imdb.com/name/nm0027572/</a><br>
Scott Pilgrim vs. The World — <a href="https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world" rel="nofollow">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>
Community — <a href="https://www.rottentomatoes.com/tv/community" rel="nofollow">https://www.rottentomatoes.com/tv/community</a><br>
The Office — <a href="https://www.rottentomatoes.com/tv/the_office" rel="nofollow">https://www.rottentomatoes.com/tv/the_office</a><br>
Rick and Morty — <a href="https://www.rottentomatoes.com/tv/rick_and_morty" rel="nofollow">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guests: Andrea Leopardi and Sundi Myint.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to another episode of Elixir Wizards as we continue our journey into system and application architecture! Our featured guest today is Sundi Myint and she is here to share her journey with Elixir and her non-traditional path to programming. We hear about Sundi&#39;s interest in gaming, her role at Cava and a bit of the inspiration behind her amazing Instagram account! We discuss her first internship and how she found herself in the role quite suddenly before diving into the motivation behind her blog post on the history of emojis. Sundi did some serious research into this interesting subject and she shares some of the more technical aspects of the story with us on the show. We talk about architecture and both test and design-driven approaches. Sundi also explains her process and how mapping things out on a whiteboard has been her favored way to do things for some time. Andrea Leopardi then joins us for another edition of Pattern Matching with Todd! He answers Todd&#39;s questions about his home life, media favorites, future projects and more!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Sundi&#39;s Instagram aesthetic and her love of food and photography. </li>
<li>How Sundi got into programming and her first internship.<br></li>
<li>Getting hired at Cava and an introduction to Elixir and the community.</li>
<li>Video game programming and Sundi&#39;s thoughts on the possibility of pursuing this path. </li>
<li>Sundi&#39;s first paid job out of college and the tech stack at the company.</li>
<li>Thoughts on easily available learning resources and the power of Live View. </li>
<li>Some background on Sundi&#39;s amazing blog post on the history of emojis.</li>
<li>Understanding Unicode, how it works and its role in translation and interpretation. </li>
<li>Sundi&#39;s perspectives on architecture and domain-driven design.</li>
<li>Code design strategies, workflow and the idea and practice of test-driven code. </li>
<li>Conversations with stakeholders and moving to the planning stage. </li>
<li>How Sundi uses whiteboards to map out her work graphically and Elixir&#39;s part in this. </li>
<li>Andrea&#39;s travels and some of the amazing locations he has visited for conferences. </li>
<li>Home life and lifestyle in quarantine for Andrea in Italy.</li>
<li>Alternative career paths and Andrea&#39;s other interests; balancing creativity and logic. </li>
<li>Music, movies and television choices for Andrea.</li>
<li>Exciting new projects on the horizon for Andrea; a book, HTTP and more!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sundi Myint on Twitter — <a href="https://twitter.com/sundikhin" rel="nofollow">https://twitter.com/sundikhin</a><br>
Sundi Myint on Instagram — <a href="https://www.instagram.com/sundikhin" rel="nofollow">https://www.instagram.com/sundikhin</a><br>
Cava — <a href="https://cava.com/" rel="nofollow">https://cava.com/</a><br>
Hackers &amp; Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Bruce Tate — <a href="https://codesync.global/speaker/bruce-tate/" rel="nofollow">https://codesync.global/speaker/bruce-tate/</a><br>
EA — <a href="https://www.ea.com" rel="nofollow">https://www.ea.com</a><br>
Groxio Learning — <a href="https://grox.io/training/elixir/home" rel="nofollow">https://grox.io/training/elixir/home</a><br>
Live View — <a href="https://support.google.com/maps/thread/11554255?hl=en" rel="nofollow">https://support.google.com/maps/thread/11554255?hl=en</a><br>
Build a real-time Twitter clone in 15 minutes with LiveView and Phoenix 1.5 — <a href="https://www.youtube.com/watch?v=MZvmYaFkNJI" rel="nofollow">https://www.youtube.com/watch?v=MZvmYaFkNJI</a><br>
The History of Emojis Blog Post — <a href="https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d" rel="nofollow">https://engineering.upside.com/emojis-a-history-75d595bbe4a5?gi=6cd53698e5d</a><br>
Burgergate <a href="https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple" rel="nofollow">https://www.theverge.com/2017/10/30/16569346/burgergate-emoji-google-apple</a><br>
Joy of Coding — <a href="https://joyofcoding.org/" rel="nofollow">https://joyofcoding.org/</a><br>
Test-driven development — <a href="https://en.wikipedia.org/wiki/Test-driven_development" rel="nofollow">https://en.wikipedia.org/wiki/Test-driven_development</a><br>
Mox — <a href="https://hexdocs.pm/mox/Mox.html" rel="nofollow">https://hexdocs.pm/mox/Mox.html</a><br>
Venmo — <a href="https://venmo.com/" rel="nofollow">https://venmo.com/</a><br>
Mint — <a href="https://www.mint.com/" rel="nofollow">https://www.mint.com/</a><br>
Avengers — <a href="https://www.marvel.com/movies/avengers-endgame" rel="nofollow">https://www.marvel.com/movies/avengers-endgame</a><br>
DC Elixir — <a href="https://www.meetup.com/DC-Elixir/" rel="nofollow">https://www.meetup.com/DC-Elixir/</a><br>
Todd Resudek — <a href="https://medium.com/@toddresudek" rel="nofollow">https://medium.com/@toddresudek</a><br>
Andrea Leopardi — <a href="https://andrealeopardi.com/" rel="nofollow">https://andrealeopardi.com/</a><br>
Brooklyn Zelenka — <a href="https://medium.com/@expede" rel="nofollow">https://medium.com/@expede</a><br>
The Lord of Rings — <a href="https://www.rottentomatoes.com/franchise/lord_of_the_rings" rel="nofollow">https://www.rottentomatoes.com/franchise/lord_of_the_rings</a><br>
Wes Anderson — <a href="https://www.imdb.com/name/nm0027572/" rel="nofollow">https://www.imdb.com/name/nm0027572/</a><br>
Scott Pilgrim vs. The World — <a href="https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world" rel="nofollow">https://www.rottentomatoes.com/m/scott_pilgrims_vs_the_world</a><br>
Community — <a href="https://www.rottentomatoes.com/tv/community" rel="nofollow">https://www.rottentomatoes.com/tv/community</a><br>
The Office — <a href="https://www.rottentomatoes.com/tv/the_office" rel="nofollow">https://www.rottentomatoes.com/tv/the_office</a><br>
Rick and Morty — <a href="https://www.rottentomatoes.com/tv/rick_and_morty" rel="nofollow">https://www.rottentomatoes.com/tv/rick_and_morty</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guests: Andrea Leopardi and Sundi Myint.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dave Thomas on Learning How Things Work</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e5-thomas</link>
      <guid isPermaLink="false">9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f</guid>
      <pubDate>Thu, 18 Jun 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f.mp3" length="100994010" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Dave Thomas is recognized internationally as an expert who develops high-quality software–accurate and highly flexible systems. Today we pick his brain on everything from learning computer science in an academic setting, test-driven development, and state to architecture, libraries, and what Dave loves about what he does. </itunes:subtitle>
      <itunes:duration>1:09:43</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9f7ee6f5-a587-4f63-9fc5-ec4cdca6676f/cover.jpg" />
      <description>Dave Thomas is recognized internationally as an expert who develops high-quality software–accurate and highly flexible systems. He helped write the now-famous Agile Manifesto, and regularly gives inspiring and controversial speeches on new ways of producing software. He is the author of six books, including the best selling The Pragmatic Programmer: From Journeyman to Master and Programming Ruby: A Pragmatic Programmer's Guide. In this episode, we discuss everything from learning computer science in an academic setting, test-driven development, and state to architecture, libraries, and what Dave loves about what he does. Dave talks about his students, both those who are passionate and those who are just going through the motions, as well as his own experience of being a student. He explains to us what he means when he said he doesn’t write unit tests at an Elixir conference in Austin recently, we talk about his favorite and most rewarding books, and Dave gives us a really unique answer to our architecture question. We discuss domain-driven design, microservice architectures, and Elixir libraries, and Dave shares why is so passionate about what he does. Tune in to hear some of Dave’s strong opinions on programming!
Key Points From This Episode:
The Coding Gnome and how it bridges the gap between learned and practical experience.
Dave talks about being a lecturer at SMU and why students aren’t prepared for the real world.
Why Dave stopped teaching Elixir at SMU.
Students who study computer science for passion versus those who study it to get a job.
Dave talks about his experience of studying computer science at university.
The inspiring and controversial keynote addresses Dave has given at conferences.
What it means when Dave said he doesn’t write unit tests and the projects he’s working on.
The culture around test-driven development and writing tests when Dave was at university.
Dave tells a story about writing the incoming telex switch for the UK.
Why the first edition of Programming Ruby was Dave’s favorite book to write.
Why The Pragmatic Programmer is the book Dave is most proud of.
Dave isn’t currently writing a new book, so he can concentrate on pseudo-course material.
Dave explains the process of developing a narrative arc when writing a technical book.
What the state of a system is and how it is distinct from data.
Dave describes why he believes architecture is a misunderstood and borrowed metaphor.
Dave’s opinions on buzzwords like domain-driven design and microservice architectures.
The status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.
Getting involved with publishing Elixir libraries and what his process looks like.
How Dave likes to receive product specification when dealing with clients.
What Dave loves about the programming industry.
Why Dave doesn’t write Elixir anymore and why he became frustrated with it.
Where Dave is going from here to how best to express what he wants.
Final advice from Dave, not to abandon Elixir if it makes you happy.
Links Mentioned in Today’s Episode:
Dave Thomas on Twitter – https://twitter.com/pragdave
The Coding Gnome – https://pragdave.me/
The Coding Gnome Training — https://codestool.coding-gnome.com/
Agile Manifesto – https://agilemanifesto.org/
The Pragmatic Programmer – https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition
Programming Ruby – https://en.wikipedia.org/wiki/ProgrammingRuby
Robert Kowalski on Wikipedia — https://en.wikipedia.org/wiki/RobertKowalski
Dave Thomas on Wikipedia — https://en.wikipedia.org/wiki/DaveThomas(programmer)
Space-state representation — https://en.wikipedia.org/wiki/State-spacerepresentation
Christopher Alexander — https://en.wikipedia.org/wiki/ChristopherAlexander
A Pattern Language — https://en.wikipedia.org/wiki/APatternLanguage
Dave Thomas Keynote at Empex NYC 2018 — https://www.youtube.com/watch?v=6U7cLUygMeI
SmartLogic — https://smartlogic.io/ 
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
 Special Guest: Dave Thomas.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Dave Thomas is recognized internationally as an expert who develops high-quality software–accurate and highly flexible systems. He helped write the now-famous Agile Manifesto, and regularly gives inspiring and controversial speeches on new ways of producing software. He is the author of six books, including the best selling The Pragmatic Programmer: From Journeyman to Master and Programming Ruby: A Pragmatic Programmer&#39;s Guide. In this episode, we discuss everything from learning computer science in an academic setting, test-driven development, and state to architecture, libraries, and what Dave loves about what he does. Dave talks about his students, both those who are passionate and those who are just going through the motions, as well as his own experience of being a student. He explains to us what he means when he said he doesn’t write unit tests at an Elixir conference in Austin recently, we talk about his favorite and most rewarding books, and Dave gives us a really unique answer to our architecture question. We discuss domain-driven design, microservice architectures, and Elixir libraries, and Dave shares why is so passionate about what he does. Tune in to hear some of Dave’s strong opinions on programming!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The Coding Gnome and how it bridges the gap between learned and practical experience.</li>
<li>Dave talks about being a lecturer at SMU and why students aren’t prepared for the real world.</li>
<li>Why Dave stopped teaching Elixir at SMU.</li>
<li>Students who study computer science for passion versus those who study it to get a job.</li>
<li>Dave talks about his experience of studying computer science at university.</li>
<li>The inspiring and controversial keynote addresses Dave has given at conferences.</li>
<li>What it means when Dave said he doesn’t write unit tests and the projects he’s working on.</li>
<li>The culture around test-driven development and writing tests when Dave was at university.</li>
<li>Dave tells a story about writing the incoming telex switch for the UK.</li>
<li>Why the first edition of Programming Ruby was Dave’s favorite book to write.</li>
<li>Why The Pragmatic Programmer is the book Dave is most proud of.</li>
<li>Dave isn’t currently writing a new book, so he can concentrate on pseudo-course material.</li>
<li>Dave explains the process of developing a narrative arc when writing a technical book.</li>
<li>What the state of a system is and how it is distinct from data.</li>
<li>Dave describes why he believes architecture is a misunderstood and borrowed metaphor.</li>
<li>Dave’s opinions on buzzwords like domain-driven design and microservice architectures.</li>
<li>The status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>
<li>Getting involved with publishing Elixir libraries and what his process looks like.</li>
<li>How Dave likes to receive product specification when dealing with clients.</li>
<li>What Dave loves about the programming industry.</li>
<li>Why Dave doesn’t write Elixir anymore and why he became frustrated with it.</li>
<li>Where Dave is going from here to how best to express what he wants.</li>
<li>Final advice from Dave, not to abandon Elixir if it makes you happy.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Dave Thomas on Twitter – <a href="https://twitter.com/pragdave" rel="nofollow">https://twitter.com/pragdave</a><br>
The Coding Gnome – <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
The Coding Gnome Training — <a href="https://codestool.coding-gnome.com/" rel="nofollow">https://codestool.coding-gnome.com/</a><br>
Agile Manifesto – <a href="https://agilemanifesto.org/" rel="nofollow">https://agilemanifesto.org/</a><br>
The Pragmatic Programmer – <a href="https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition" rel="nofollow">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>
Programming Ruby – <a href="https://en.wikipedia.org/wiki/Programming_Ruby" rel="nofollow">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>
Robert Kowalski on Wikipedia — <a href="https://en.wikipedia.org/wiki/Robert_Kowalski" rel="nofollow">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>
Dave Thomas on Wikipedia — <a href="https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)" rel="nofollow">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>
Space-state representation — <a href="https://en.wikipedia.org/wiki/State-space_representation" rel="nofollow">https://en.wikipedia.org/wiki/State-space_representation</a><br>
Christopher Alexander — <a href="https://en.wikipedia.org/wiki/Christopher_Alexander" rel="nofollow">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>
A Pattern Language — <a href="https://en.wikipedia.org/wiki/A_Pattern_Language" rel="nofollow">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>
Dave Thomas Keynote at Empex NYC 2018 — <a href="https://www.youtube.com/watch?v=6U7cLUygMeI" rel="nofollow">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Dave Thomas.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Dave Thomas is recognized internationally as an expert who develops high-quality software–accurate and highly flexible systems. He helped write the now-famous Agile Manifesto, and regularly gives inspiring and controversial speeches on new ways of producing software. He is the author of six books, including the best selling The Pragmatic Programmer: From Journeyman to Master and Programming Ruby: A Pragmatic Programmer&#39;s Guide. In this episode, we discuss everything from learning computer science in an academic setting, test-driven development, and state to architecture, libraries, and what Dave loves about what he does. Dave talks about his students, both those who are passionate and those who are just going through the motions, as well as his own experience of being a student. He explains to us what he means when he said he doesn’t write unit tests at an Elixir conference in Austin recently, we talk about his favorite and most rewarding books, and Dave gives us a really unique answer to our architecture question. We discuss domain-driven design, microservice architectures, and Elixir libraries, and Dave shares why is so passionate about what he does. Tune in to hear some of Dave’s strong opinions on programming!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>The Coding Gnome and how it bridges the gap between learned and practical experience.</li>
<li>Dave talks about being a lecturer at SMU and why students aren’t prepared for the real world.</li>
<li>Why Dave stopped teaching Elixir at SMU.</li>
<li>Students who study computer science for passion versus those who study it to get a job.</li>
<li>Dave talks about his experience of studying computer science at university.</li>
<li>The inspiring and controversial keynote addresses Dave has given at conferences.</li>
<li>What it means when Dave said he doesn’t write unit tests and the projects he’s working on.</li>
<li>The culture around test-driven development and writing tests when Dave was at university.</li>
<li>Dave tells a story about writing the incoming telex switch for the UK.</li>
<li>Why the first edition of Programming Ruby was Dave’s favorite book to write.</li>
<li>Why The Pragmatic Programmer is the book Dave is most proud of.</li>
<li>Dave isn’t currently writing a new book, so he can concentrate on pseudo-course material.</li>
<li>Dave explains the process of developing a narrative arc when writing a technical book.</li>
<li>What the state of a system is and how it is distinct from data.</li>
<li>Dave describes why he believes architecture is a misunderstood and borrowed metaphor.</li>
<li>Dave’s opinions on buzzwords like domain-driven design and microservice architectures.</li>
<li>The status on The Component Library, as mentioned by Dave in his EMPEX 2018 keynote.</li>
<li>Getting involved with publishing Elixir libraries and what his process looks like.</li>
<li>How Dave likes to receive product specification when dealing with clients.</li>
<li>What Dave loves about the programming industry.</li>
<li>Why Dave doesn’t write Elixir anymore and why he became frustrated with it.</li>
<li>Where Dave is going from here to how best to express what he wants.</li>
<li>Final advice from Dave, not to abandon Elixir if it makes you happy.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Dave Thomas on Twitter – <a href="https://twitter.com/pragdave" rel="nofollow">https://twitter.com/pragdave</a><br>
The Coding Gnome – <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
The Coding Gnome Training — <a href="https://codestool.coding-gnome.com/" rel="nofollow">https://codestool.coding-gnome.com/</a><br>
Agile Manifesto – <a href="https://agilemanifesto.org/" rel="nofollow">https://agilemanifesto.org/</a><br>
The Pragmatic Programmer – <a href="https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition" rel="nofollow">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>
Programming Ruby – <a href="https://en.wikipedia.org/wiki/Programming_Ruby" rel="nofollow">https://en.wikipedia.org/wiki/Programming_Ruby</a><br>
Robert Kowalski on Wikipedia — <a href="https://en.wikipedia.org/wiki/Robert_Kowalski" rel="nofollow">https://en.wikipedia.org/wiki/Robert_Kowalski</a><br>
Dave Thomas on Wikipedia — <a href="https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)" rel="nofollow">https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)</a><br>
Space-state representation — <a href="https://en.wikipedia.org/wiki/State-space_representation" rel="nofollow">https://en.wikipedia.org/wiki/State-space_representation</a><br>
Christopher Alexander — <a href="https://en.wikipedia.org/wiki/Christopher_Alexander" rel="nofollow">https://en.wikipedia.org/wiki/Christopher_Alexander</a><br>
A Pattern Language — <a href="https://en.wikipedia.org/wiki/A_Pattern_Language" rel="nofollow">https://en.wikipedia.org/wiki/A_Pattern_Language</a><br>
Dave Thomas Keynote at Empex NYC 2018 — <a href="https://www.youtube.com/watch?v=6U7cLUygMeI" rel="nofollow">https://www.youtube.com/watch?v=6U7cLUygMeI</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a></p><p>Special Guest: Dave Thomas.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Ben Marx on the Launch and Architecture of SubSpace</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e4-marx</link>
      <guid isPermaLink="false">e711fb4d-502b-4733-b5e2-01ff002b836a</guid>
      <pubDate>Thu, 11 Jun 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e711fb4d-502b-4733-b5e2-01ff002b836a.mp3" length="55964578" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Joining us on the show for this episode is Ben Marx, author of Adopting Elixir and Principal Control Plane Engineer at the recently launched SubSpace. We continue our Season 4 journey into system and application architecture with Ben and he unpacks tech lingo, understanding of the fundamentals, and how Elixir fits into his work at SubSpace. </itunes:subtitle>
      <itunes:duration>38:27</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/e711fb4d-502b-4733-b5e2-01ff002b836a/cover.jpg" />
      <description>Joining us on the show for this episode is Ben Marx, author of Adopting Elixir and Principal Control Plane Engineer at the recently launched SubSpace! We continue our Season 4 journey into system and application architecture with Ben and he unpacks what he can about the somewhat still under wraps work at the new company. Ben is all about plain-spoken and easy to understand conversations on these topics, preferring to avoid highfalutin and confusing terms with multiple interpretations. He really drills down on his understanding of the fundamentals of his work and we also get to hear about his previous position at Bleacher Report. He unpacks the lessons he took away from the company, and the changes he witnessed while there. Ben explains how Elixir fits into the work at SubSpace and what a perfect fit it is for their low-latency service. We also spend a bit of time talking about life as an introverted programmer, attending conferences and meeting people, and remote work and family life during the pandemic. For all this and then some, tune in today!
Key Points From This Episode:
* Ben's exciting new position at SubSpace, and how the company reduces latency.
* The increasing need for more reliable internet speeds during the pandemic.
* Use of Elixir for SubSpace and how well it fits the needs of the company.
* The engineering team at SubSpace and some of the basic system architecture. 
* Meeting people, giving talks and life at conferences as an introvert.  
* The meaning of architecture to Ben; more dynamic than static. 
* Differentiating between architecture and design; the abstract and reality.
* The idea of domain-driven design what the concept means to Ben.
* Placement of the authentication and authorization systems.
* Ben's time working at Bleacher Report and the development of the company during his time there.
* Thoughts on Kafka and its baffling name! 
* Ben's new role at SubSpace and major areas of learning for him so far.
* Adapting to a new role during the work from home era; life under quarantine. 
* Project management and helpful processes for remote work in a new world. 
* Ideas for another book from Ben, his belief in Elixir and getting in contact! 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Ben Marx — https://bgmarx.com/
SubSpace — https://www.subspace.com/
Ben Marx on Twitter — https://twitter.com/bgmarx
Adopting Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522
Bleacher Report — https://bleacherreport.com/
Subspace article at the Wall Street Journal — https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201
Subspace article at VentureBeat — https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/
Kafka — https://kafka.apache.org/coding-guide
Franz Kafka — https://www.biography.com/writer/franz-kafka
Max Brod — https://www.britannica.com/biography/Max-Brod
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich — https://oestrich.org/
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
Eric Oestrich on GitHub — https://github.com/oestrich Special Guest: Ben Marx.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Joining us on the show for this episode is Ben Marx, author of Adopting Elixir and Principal Control Plane Engineer at the recently launched SubSpace! We continue our Season 4 journey into system and application architecture with Ben and he unpacks what he can about the somewhat still under wraps work at the new company. Ben is all about plain-spoken and easy to understand conversations on these topics, preferring to avoid highfalutin and confusing terms with multiple interpretations. He really drills down on his understanding of the fundamentals of his work and we also get to hear about his previous position at Bleacher Report. He unpacks the lessons he took away from the company, and the changes he witnessed while there. Ben explains how Elixir fits into the work at SubSpace and what a perfect fit it is for their low-latency service. We also spend a bit of time talking about life as an introverted programmer, attending conferences and meeting people, and remote work and family life during the pandemic. For all this and then some, tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Ben&#39;s exciting new position at SubSpace, and how the company reduces latency.</li>
<li>The increasing need for more reliable internet speeds during the pandemic.</li>
<li>Use of Elixir for SubSpace and how well it fits the needs of the company.</li>
<li>The engineering team at SubSpace and some of the basic system architecture. </li>
<li>Meeting people, giving talks and life at conferences as an introvert.<br></li>
<li>The meaning of architecture to Ben; more dynamic than static. </li>
<li>Differentiating between architecture and design; the abstract and reality.</li>
<li>The idea of domain-driven design what the concept means to Ben.</li>
<li>Placement of the authentication and authorization systems.</li>
<li>Ben&#39;s time working at Bleacher Report and the development of the company during his time there.</li>
<li>Thoughts on Kafka and its baffling name! </li>
<li>Ben&#39;s new role at SubSpace and major areas of learning for him so far.</li>
<li>Adapting to a new role during the work from home era; life under quarantine. </li>
<li>Project management and helpful processes for remote work in a new world. </li>
<li>Ideas for another book from Ben, his belief in Elixir and getting in contact! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Ben Marx — <a href="https://bgmarx.com/" rel="nofollow">https://bgmarx.com/</a><br>
SubSpace — <a href="https://www.subspace.com/" rel="nofollow">https://www.subspace.com/</a><br>
Ben Marx on Twitter — <a href="https://twitter.com/bgmarx" rel="nofollow">https://twitter.com/bgmarx</a><br>
Adopting Elixir — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Subspace article at the Wall Street Journal — <a href="https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201" rel="nofollow">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>
Subspace article at VentureBeat — <a href="https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/" rel="nofollow">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>
Kafka — <a href="https://kafka.apache.org/coding-guide" rel="nofollow">https://kafka.apache.org/coding-guide</a><br>
Franz Kafka — <a href="https://www.biography.com/writer/franz-kafka" rel="nofollow">https://www.biography.com/writer/franz-kafka</a><br>
Max Brod — <a href="https://www.britannica.com/biography/Max-Brod" rel="nofollow">https://www.britannica.com/biography/Max-Brod</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Ben Marx.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Joining us on the show for this episode is Ben Marx, author of Adopting Elixir and Principal Control Plane Engineer at the recently launched SubSpace! We continue our Season 4 journey into system and application architecture with Ben and he unpacks what he can about the somewhat still under wraps work at the new company. Ben is all about plain-spoken and easy to understand conversations on these topics, preferring to avoid highfalutin and confusing terms with multiple interpretations. He really drills down on his understanding of the fundamentals of his work and we also get to hear about his previous position at Bleacher Report. He unpacks the lessons he took away from the company, and the changes he witnessed while there. Ben explains how Elixir fits into the work at SubSpace and what a perfect fit it is for their low-latency service. We also spend a bit of time talking about life as an introverted programmer, attending conferences and meeting people, and remote work and family life during the pandemic. For all this and then some, tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Ben&#39;s exciting new position at SubSpace, and how the company reduces latency.</li>
<li>The increasing need for more reliable internet speeds during the pandemic.</li>
<li>Use of Elixir for SubSpace and how well it fits the needs of the company.</li>
<li>The engineering team at SubSpace and some of the basic system architecture. </li>
<li>Meeting people, giving talks and life at conferences as an introvert.<br></li>
<li>The meaning of architecture to Ben; more dynamic than static. </li>
<li>Differentiating between architecture and design; the abstract and reality.</li>
<li>The idea of domain-driven design what the concept means to Ben.</li>
<li>Placement of the authentication and authorization systems.</li>
<li>Ben&#39;s time working at Bleacher Report and the development of the company during his time there.</li>
<li>Thoughts on Kafka and its baffling name! </li>
<li>Ben&#39;s new role at SubSpace and major areas of learning for him so far.</li>
<li>Adapting to a new role during the work from home era; life under quarantine. </li>
<li>Project management and helpful processes for remote work in a new world. </li>
<li>Ideas for another book from Ben, his belief in Elixir and getting in contact! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Ben Marx — <a href="https://bgmarx.com/" rel="nofollow">https://bgmarx.com/</a><br>
SubSpace — <a href="https://www.subspace.com/" rel="nofollow">https://www.subspace.com/</a><br>
Ben Marx on Twitter — <a href="https://twitter.com/bgmarx" rel="nofollow">https://twitter.com/bgmarx</a><br>
Adopting Elixir — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Subspace article at the Wall Street Journal — <a href="https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201" rel="nofollow">https://www.wsj.com/articles/subspace-launches-publicly-offering-fast-internet-for-gaming-companies-11584961201</a><br>
Subspace article at VentureBeat — <a href="https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/" rel="nofollow">https://venturebeat.com/2020/04/03/the-deanbeat-subspace-emerges-from-stealth-with-26-million-to-fix-internet-bottlenecks-for-games-and-entertainment/</a><br>
Kafka — <a href="https://kafka.apache.org/coding-guide" rel="nofollow">https://kafka.apache.org/coding-guide</a><br>
Franz Kafka — <a href="https://www.biography.com/writer/franz-kafka" rel="nofollow">https://www.biography.com/writer/franz-kafka</a><br>
Max Brod — <a href="https://www.britannica.com/biography/Max-Brod" rel="nofollow">https://www.britannica.com/biography/Max-Brod</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Ben Marx.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Pattern Matching  - Johanna Larsson</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e4b-pattern-matching-larsson</link>
      <guid isPermaLink="false">ac3f0d31-f498-4d6a-ba69-3dbae9d0510f</guid>
      <pubDate>Tue, 09 Jun 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f.mp3" length="21303933" type="audio/mpeg"/>
      <itunes:episodeType>bonus</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>A special episode of Elixir Wizards highlighting Pattern Matching with Todd - a short format interview where our friend, Todd Resudek, asks different guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna is active on the Elixir scene and is currently working as a Software Engineer at Duffel.</itunes:subtitle>
      <itunes:duration>14:46</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ac3f0d31-f498-4d6a-ba69-3dbae9d0510f/cover.jpg" />
      <description>A special episode of Elixir Wizards highlighting Pattern Matching with Todd - a short format interview where our friend, Todd Resudek, asks different guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna is active on the Elixir scene and is currently working as a Software Engineer at Duffel.
Key Points From This Episode:
* Living in Malmo, Sweden.
* Johanna's love of languages.
* The complexities of written Japanese.  
* How Johanna uses music to set the soundtrack to her work. 
* Todd missing the boat on a cinematic and cultural masterpiece.
* Integrating and improving upon the hex diff project.
Links Mentioned in Today’s Episode:
Johanna Larsson on GitHub - https://github.com/joladev
Johanna Larsson on Twitter - https://twitter.com/joladev
Todd Resudek on Twitter — https://twitter.com/sprsmpl
SmartLogic — https://smartlogic.io/  Special Guest: Johanna Larsson.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>A special episode of Elixir Wizards highlighting Pattern Matching with Todd - a short format interview where our friend, Todd Resudek, asks different guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna is active on the Elixir scene and is currently working as a Software Engineer at Duffel.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Living in Malmo, Sweden.</li>
<li>Johanna&#39;s love of languages.</li>
<li>The complexities of written Japanese.<br></li>
<li>How Johanna uses music to set the soundtrack to her work. </li>
<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>
<li>Integrating and improving upon the hex diff project.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Johanna Larsson on GitHub - <a href="https://github.com/joladev" rel="nofollow">https://github.com/joladev</a><br>
Johanna Larsson on Twitter - <a href="https://twitter.com/joladev" rel="nofollow">https://twitter.com/joladev</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Johanna Larsson.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>A special episode of Elixir Wizards highlighting Pattern Matching with Todd - a short format interview where our friend, Todd Resudek, asks different guests the same five questions. This week Todd spoke with Johanna Larsson. Johanna is active on the Elixir scene and is currently working as a Software Engineer at Duffel.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Living in Malmo, Sweden.</li>
<li>Johanna&#39;s love of languages.</li>
<li>The complexities of written Japanese.<br></li>
<li>How Johanna uses music to set the soundtrack to her work. </li>
<li>Todd missing the boat on a cinematic and cultural masterpiece.</li>
<li>Integrating and improving upon the hex diff project.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Johanna Larsson on GitHub - <a href="https://github.com/joladev" rel="nofollow">https://github.com/joladev</a><br>
Johanna Larsson on Twitter - <a href="https://twitter.com/joladev" rel="nofollow">https://twitter.com/joladev</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Johanna Larsson.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Steve Bussey on Real-Time Applications</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e3-bussey</link>
      <guid isPermaLink="false">b07768d6-b987-496e-87d3-483eedd42fa5</guid>
      <pubDate>Thu, 28 May 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b07768d6-b987-496e-87d3-483eedd42fa5.mp3" length="71781094" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Real-time applications come with real challenges—persistent connections, multi-server deployment, and strict performance requirements are just a few. Our guest Steve Bussey, a software architect at SalesLoft and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels, talks with us about how he has led development in the field. </itunes:subtitle>
      <itunes:duration>49:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b07768d6-b987-496e-87d3-483eedd42fa5/cover.jpg" />
      <description>Real-time applications come with real challenges—persistent connections, multi-server deployment, and strict performance requirements are just a few. Our guest today is Steve Bussey, a software architect at SalesLoft and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels. In this episode, Steve shares with us what he has written on real-time Elixir applications and how he has led development in the field. We discuss how Steve found Elixir, what system and application architecture means to him, and what he considers the differences between architecting and designing a system. Steve gives us his opinions on domain-driven design, umbrella apps, and Phoenix LiveView, and shares some of his personal processes when working on new real-time features, as well as what he believes are the toughest parts of developing and rolling out real-time applications. Finally, we talk about testing, security, and performance issues, and Steve sells us on his book. Tune in today!
Key Points From This Episode:
What Steve’s favorite pair of shoes is and how he got into sneakers.
Where Steve is from and how long he has been doing programming.
What system and application architecture means to Steve.
The difference between architecting and designing a system.
Steve’s opinions on domain-driven design.
Eric’s opinion on umbrella apps and Steve’s response.
Where Steve starts when he works on a new real-time feature.
Steve’s personal and professional pre-code design processes.
The toughest parts of developing and rolling out real-time applications.
Testing real-time features and Steve’s thoughts on Phoenix LiveView.
How Steve incorporates security into the architecture when designing applications.
Multi-tenant applications and how Steve deals with performance issues.
Deployment considerations when going into production with a real-time application.
Steve sells us on his book and gives his final plugs and asks for the audience.
Links Mentioned in Today’s Episode:
Steve Bussey on Twitter – https://twitter.com/YOOOODAAAA
Steven Bussey’s Website – https://stevenbussey.com/
Real-Time Phoenix on Pragmatic Bookshelf – https://pragprog.com/book/sbsockets/real-time-phoenix
SmartLogic — https://smartlogic.io/ 
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich — https://oestrich.org/
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
Eric Oestrich on GitHub — https://github.com/oestrich Special Guest: Steve Bussey.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Real-time applications come with real challenges—persistent connections, multi-server deployment, and strict performance requirements are just a few. Our guest today is Steve Bussey, a software architect at SalesLoft and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels. In this episode, Steve shares with us what he has written on real-time Elixir applications and how he has led development in the field. We discuss how Steve found Elixir, what system and application architecture means to him, and what he considers the differences between architecting and designing a system. Steve gives us his opinions on domain-driven design, umbrella apps, and Phoenix LiveView, and shares some of his personal processes when working on new real-time features, as well as what he believes are the toughest parts of developing and rolling out real-time applications. Finally, we talk about testing, security, and performance issues, and Steve sells us on his book. Tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>What Steve’s favorite pair of shoes is and how he got into sneakers.</li>
<li>Where Steve is from and how long he has been doing programming.</li>
<li>What system and application architecture means to Steve.</li>
<li>The difference between architecting and designing a system.</li>
<li>Steve’s opinions on domain-driven design.</li>
<li>Eric’s opinion on umbrella apps and Steve’s response.</li>
<li>Where Steve starts when he works on a new real-time feature.</li>
<li>Steve’s personal and professional pre-code design processes.</li>
<li>The toughest parts of developing and rolling out real-time applications.</li>
<li>Testing real-time features and Steve’s thoughts on Phoenix LiveView.</li>
<li>How Steve incorporates security into the architecture when designing applications.</li>
<li>Multi-tenant applications and how Steve deals with performance issues.</li>
<li>Deployment considerations when going into production with a real-time application.</li>
<li>Steve sells us on his book and gives his final plugs and asks for the audience.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Steve Bussey on Twitter – <a href="https://twitter.com/YOOOODAAAA" rel="nofollow">https://twitter.com/YOOOODAAAA</a><br>
Steven Bussey’s Website – <a href="https://stevenbussey.com/" rel="nofollow">https://stevenbussey.com/</a><br>
Real-Time Phoenix on Pragmatic Bookshelf – <a href="https://pragprog.com/book/sbsockets/real-time-phoenix" rel="nofollow">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Steve Bussey.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Real-time applications come with real challenges—persistent connections, multi-server deployment, and strict performance requirements are just a few. Our guest today is Steve Bussey, a software architect at SalesLoft and author of the new book, Real-Time Phoenix: Build Highly Scalable Systems with Channels. In this episode, Steve shares with us what he has written on real-time Elixir applications and how he has led development in the field. We discuss how Steve found Elixir, what system and application architecture means to him, and what he considers the differences between architecting and designing a system. Steve gives us his opinions on domain-driven design, umbrella apps, and Phoenix LiveView, and shares some of his personal processes when working on new real-time features, as well as what he believes are the toughest parts of developing and rolling out real-time applications. Finally, we talk about testing, security, and performance issues, and Steve sells us on his book. Tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>What Steve’s favorite pair of shoes is and how he got into sneakers.</li>
<li>Where Steve is from and how long he has been doing programming.</li>
<li>What system and application architecture means to Steve.</li>
<li>The difference between architecting and designing a system.</li>
<li>Steve’s opinions on domain-driven design.</li>
<li>Eric’s opinion on umbrella apps and Steve’s response.</li>
<li>Where Steve starts when he works on a new real-time feature.</li>
<li>Steve’s personal and professional pre-code design processes.</li>
<li>The toughest parts of developing and rolling out real-time applications.</li>
<li>Testing real-time features and Steve’s thoughts on Phoenix LiveView.</li>
<li>How Steve incorporates security into the architecture when designing applications.</li>
<li>Multi-tenant applications and how Steve deals with performance issues.</li>
<li>Deployment considerations when going into production with a real-time application.</li>
<li>Steve sells us on his book and gives his final plugs and asks for the audience.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Steve Bussey on Twitter – <a href="https://twitter.com/YOOOODAAAA" rel="nofollow">https://twitter.com/YOOOODAAAA</a><br>
Steven Bussey’s Website – <a href="https://stevenbussey.com/" rel="nofollow">https://stevenbussey.com/</a><br>
Real-Time Phoenix on Pragmatic Bookshelf – <a href="https://pragprog.com/book/sbsockets/real-time-phoenix" rel="nofollow">https://pragprog.com/book/sbsockets/real-time-phoenix</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a></p><p>Special Guest: Steve Bussey.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Mohd Maqbool Alam on System and Application Architecture</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e2-alam</link>
      <guid isPermaLink="false">a3a16821-cb7c-4c88-be0e-c2b412ad7bee</guid>
      <pubDate>Thu, 21 May 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/a3a16821-cb7c-4c88-be0e-c2b412ad7bee.mp3" length="63044638" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi.  As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world and how Elixir has changed the way he thinks about architecture applications. Our new segment Pattern Matching with Todd Resudek features Principal Software Architect Cory O'Daniel discussing Kubernetes and Beam. </itunes:subtitle>
      <itunes:duration>43:22</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/a3a16821-cb7c-4c88-be0e-c2b412ad7bee/cover.jpg" />
      <description>Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi. He enjoys learning about programming language theory, distributed systems, Cloud Native technologies, and open source. As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world, and what drew him to programming in the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir has changed the way he thinks about architecture applications, as well as his opinions on microservices, APIs, and static typing. We talk about the real-world consequences of programming, using Neil Ferguson’s pandemic simulation model as an example, and Maqbool shares his favorite RPC (when we actually meant to ask him his favorite RFC)! The episode concludes with Pattern Matching with Todd. In this edition, he discusses Kubernetes and Beam with Principal Software Architect Cory O’Daniel.
Key Points From This Episode:
Maqbool tells us a bit about himself and how he came to be part of the Elixir community.
What enticed Maqbool to programming.
Maqbool’s favorite resources from Elixir.
How Elixir has changed the way Maqbool thinks about architecting applications.
Maqbool’s ‘aha’ moment in distributed programming and how he got into pattern matching.
Phoenix Live Dashboard and why Maqbool and the team are excited about it.
How Maqbool approaches the design process when building an application from scratch.
The tools and methods Maqbool uses when designing information architecture and APIs.
Maqbool’s opinions on microservices, Kubernetes, and Amazon Lambda.
Protocols and non-standard protocols.
Neil Ferguson’s pandemic simulation model using undocumented C-code.
How we should think about the real world consequences of high-stakes programming.
Maqbool’s opinion on static typing.
Macbool’s favorite RPC and RFC.
Pattern Matching with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.
Links Mentioned in Today’s Episode:
Justus Eapen on LinkedIn — https://www.linkedin.com/in/justuseapen/
Justus Eapen on Twitter — https://twitter.com/justuseapen
Eric Oestrich — https://oestrich.org/
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
Eric Oestrich on GitHub — https://github.com/oestrich
Mohd Maqbool Alam on Twitter – https://twitter.com/Maqboolism
Elixir Forum – https://elixirforum.com/
Elixir in Action – https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X
Phoenix Live Dashboard – https://github.com/phoenixframework/phoenixlivedashboard
Absinthe – https://github.com/absinthe-graphql/absinthe
Kubeless – https://kubeless.io/
Kubernetes — https://kubernetes.io/
Amazon Lambda – https://aws.amazon.com/lambda/
Groxio – https://grox.io/
Todd Resudek on Twitter — https://twitter.com/sprsmpl
Cory O’Daniel on Twitter – https://twitter.com/coryodaniel
Ziggy O’Doodle on Instagram – https://www.instagram.com/ziggy.odoodle/
SmartLogic — https://smartlogic.io/  Special Guests: Cory O'Daniel and Mohd Maqbool Alam.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi. He enjoys learning about programming language theory, distributed systems, Cloud Native technologies, and open source. As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world, and what drew him to programming in the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir has changed the way he thinks about architecture applications, as well as his opinions on microservices, APIs, and static typing. We talk about the real-world consequences of programming, using Neil Ferguson’s pandemic simulation model as an example, and Maqbool shares his favorite RPC (when we actually meant to ask him his favorite RFC)! The episode concludes with Pattern Matching with Todd. In this edition, he discusses Kubernetes and Beam with Principal Software Architect Cory O’Daniel.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Maqbool tells us a bit about himself and how he came to be part of the Elixir community.</li>
<li>What enticed Maqbool to programming.</li>
<li>Maqbool’s favorite resources from Elixir.</li>
<li>How Elixir has changed the way Maqbool thinks about architecting applications.</li>
<li>Maqbool’s ‘aha’ moment in distributed programming and how he got into pattern matching.</li>
<li>Phoenix Live Dashboard and why Maqbool and the team are excited about it.</li>
<li>How Maqbool approaches the design process when building an application from scratch.</li>
<li>The tools and methods Maqbool uses when designing information architecture and APIs.</li>
<li>Maqbool’s opinions on microservices, Kubernetes, and Amazon Lambda.</li>
<li>Protocols and non-standard protocols.</li>
<li>Neil Ferguson’s pandemic simulation model using undocumented C-code.</li>
<li>How we should think about the real world consequences of high-stakes programming.</li>
<li>Maqbool’s opinion on static typing.</li>
<li>Macbool’s favorite RPC and RFC.</li>
<li>Pattern Matching with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Justus Eapen on LinkedIn — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a><br>
Mohd Maqbool Alam on Twitter – <a href="https://twitter.com/Maqboolism" rel="nofollow">https://twitter.com/Maqboolism</a><br>
Elixir Forum – <a href="https://elixirforum.com/" rel="nofollow">https://elixirforum.com/</a><br>
Elixir in Action – <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>
Phoenix Live Dashboard – <a href="https://github.com/phoenixframework/phoenix_live_dashboard" rel="nofollow">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>
Absinthe – <a href="https://github.com/absinthe-graphql/absinthe" rel="nofollow">https://github.com/absinthe-graphql/absinthe</a><br>
Kubeless – <a href="https://kubeless.io/" rel="nofollow">https://kubeless.io/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
Amazon Lambda – <a href="https://aws.amazon.com/lambda/" rel="nofollow">https://aws.amazon.com/lambda/</a><br>
Groxio – <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Cory O’Daniel on Twitter – <a href="https://twitter.com/coryodaniel" rel="nofollow">https://twitter.com/coryodaniel</a><br>
Ziggy O’Doodle on Instagram – <a href="https://www.instagram.com/ziggy.odoodle/" rel="nofollow">https://www.instagram.com/ziggy.odoodle/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today’s guest is Mohd Maqbool Alam, a software developer and Elixir fan from Delhi. He enjoys learning about programming language theory, distributed systems, Cloud Native technologies, and open source. As he is working towards building an Elixir community in Delhi, we caught up with him to find out how he came to be part of the Elixir world, and what drew him to programming in the first place. We also discuss Maqbool’s favorite Elixir resources and how Elixir has changed the way he thinks about architecture applications, as well as his opinions on microservices, APIs, and static typing. We talk about the real-world consequences of programming, using Neil Ferguson’s pandemic simulation model as an example, and Maqbool shares his favorite RPC (when we actually meant to ask him his favorite RFC)! The episode concludes with Pattern Matching with Todd. In this edition, he discusses Kubernetes and Beam with Principal Software Architect Cory O’Daniel.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Maqbool tells us a bit about himself and how he came to be part of the Elixir community.</li>
<li>What enticed Maqbool to programming.</li>
<li>Maqbool’s favorite resources from Elixir.</li>
<li>How Elixir has changed the way Maqbool thinks about architecting applications.</li>
<li>Maqbool’s ‘aha’ moment in distributed programming and how he got into pattern matching.</li>
<li>Phoenix Live Dashboard and why Maqbool and the team are excited about it.</li>
<li>How Maqbool approaches the design process when building an application from scratch.</li>
<li>The tools and methods Maqbool uses when designing information architecture and APIs.</li>
<li>Maqbool’s opinions on microservices, Kubernetes, and Amazon Lambda.</li>
<li>Protocols and non-standard protocols.</li>
<li>Neil Ferguson’s pandemic simulation model using undocumented C-code.</li>
<li>How we should think about the real world consequences of high-stakes programming.</li>
<li>Maqbool’s opinion on static typing.</li>
<li>Macbool’s favorite RPC and RFC.</li>
<li>Pattern Matching with Todd Resudek, discussing Kubernetes and Beam with Cory O’Daniel.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Justus Eapen on LinkedIn — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Eric Oestrich on GitHub — <a href="https://github.com/oestrich" rel="nofollow">https://github.com/oestrich</a><br>
Mohd Maqbool Alam on Twitter – <a href="https://twitter.com/Maqboolism" rel="nofollow">https://twitter.com/Maqboolism</a><br>
Elixir Forum – <a href="https://elixirforum.com/" rel="nofollow">https://elixirforum.com/</a><br>
Elixir in Action – <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>
Phoenix Live Dashboard – <a href="https://github.com/phoenixframework/phoenix_live_dashboard" rel="nofollow">https://github.com/phoenixframework/phoenix_live_dashboard</a><br>
Absinthe – <a href="https://github.com/absinthe-graphql/absinthe" rel="nofollow">https://github.com/absinthe-graphql/absinthe</a><br>
Kubeless – <a href="https://kubeless.io/" rel="nofollow">https://kubeless.io/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
Amazon Lambda – <a href="https://aws.amazon.com/lambda/" rel="nofollow">https://aws.amazon.com/lambda/</a><br>
Groxio – <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Cory O’Daniel on Twitter – <a href="https://twitter.com/coryodaniel" rel="nofollow">https://twitter.com/coryodaniel</a><br>
Ziggy O’Doodle on Instagram – <a href="https://www.instagram.com/ziggy.odoodle/" rel="nofollow">https://www.instagram.com/ziggy.odoodle/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Cory O&#39;Daniel and Mohd Maqbool Alam.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Season Four Launchisode</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e1-launchisode</link>
      <guid isPermaLink="false">34c3c1af-3f50-4e83-be65-e7420d65eada</guid>
      <pubDate>Thu, 14 May 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/34c3c1af-3f50-4e83-be65-e7420d65eada.mp3" length="100537910" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>As our first trilogy comes to a close, and we embark on the next one, we’re doing what all great trilogies do: Upending everything that made the initial one great and starting afresh. We've incorporated listener feedback, hear more about our guests' personal lives, dive into architecture, and debut a new segment!</itunes:subtitle>
      <itunes:duration>1:09:36</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/34c3c1af-3f50-4e83-be65-e7420d65eada/cover.jpg" />
      <description>As our first trilogy comes to a close, and we embark on the next one, we’re doing what all great trilogies do: Upending everything that made the initial one great and starting afresh. We have taken on board some excellent listener feedback to keep this the highest quality Elixir related podcast. So, for this launchisode, rather than doing a trailer, we are diving in headfirst with a full episode on system and application architecture, this season’s theme, with Justus Eapen, Dan Ivovich, and Eric Oestrich. 
We kick off the show by getting to know Dan and Eric a bit better. This season, as per listener requests, we will spend more time on our guests' personal lives. We learn about Dan and Eric’s time at SmartLogic, their experience working with Elixir, and their approaches to learning it. From there, we move onto tackling clients’ projects. We discuss the importance of letting ideas flow free as well as how to break projects down into manageable sized segments to work on. Following this, we touch on flexible architecture. As the world changes, sometimes at a pace faster than we anticipate, it is more important than ever to design systems that we can iterate on. Then, we discuss the future of applications and architecture and the exciting possibilities in-store. 
The show rounds off with our new segment, Pattern Matching with Todd, where our friend Todd Resudek gets to know someone in the community a bit better. Today, he talks with Connor Rigby of Binary Noggin, finding out more about his programing journey, his favorite music and movies, and his WiFi meshing project. We're so excited for this season, and we hope you join us on the journey. Tune in today!
Key Points From This Episode:
Dan’s background and how he came to be Director of Development Operations.
How Eric started at SmartLogic and what his journey at the company has been like.
Learn what convinced Dan to go all-in on Elixir and make the move from Rails
Some of the educational materials and tools Dan and Eric used to learn Elixir.
Dan’s preferred style of design and why he enjoys TDD.
Why we think that Cucumber falls short and chose to move away from it.
Find out what we think domain-driven design is.
How Dan and Eric approach deconstructing clients’ projects.
Pre-coding: Why it’s best to do free-form planning, with no constraints.
Insights into the broad-reaching term of ‘API’ and what we mean by it.
SOAP and REST APIs: What they are and the differences between them.
How Dan, Eric, and Justus’s thinking about designing and application architecture has evolved.
Object-oriented programming versus functional: Our take on the age-old debate.
Is this finally the year that we get to kill micro-services?
The relationship between team size and micro-services and some other constraints.
What the future has in store for applications and architecting.
Pattern-matching with Todd: Five questions to get to know Connor Rigby a bit better.
Links Mentioned in Today’s Episode:
Justus Eapen on Twitter — https://twitter.com/justuseapen
Dan Ivovich on Twitter — https://twitter.com/danivovich
Eric Oestrich on Twitter — https://twitter.com/ericoestrich
Kalevala on GitHub — https://github.com/oestrich/kalevala
Valve — https://www.valvesoftware.com/en/
Ecto — https://hexdocs.pm/ecto/Ecto.html
Phoenix Elixir books — https://pragprog.com/book/phoenix14/programming-phoenix-1-4
Ruby on Rails — https://rubyonrails.org/
Designing for Scalability with Erlang — http://shop.oreilly.com/product/0636920024149.do
Mike Amundsen on O’Reily Media — https://www.oreilly.com/pub/au/1192
Designing Elixir Systems With OTP — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617
Cucumber — https://cucumber.io/
Visual Studio Code — https://code.visualstudio.com/
SOAP vs REST APIs — https://www.soapui.org/learn/api/soap-vs-rest-api/
RESTFest — https://www.restfest.org/
ExVenture — https://exventure.org/
Kubernetes — https://kubernetes.io/
Phoenix — https://phoenixframework.org/
Nerves Project — https://www.nerves-project.org/
Todd Resudek on Twitter — https://twitter.com/sprsmpl
Binary Noggin — https://binarynoggin.com/
Connor Rigby on GitHub — https://github.com/ConnorRigby
The Big Lebowski — https://www.imdb.com/title/tt0118715/
Aesop Rock on Twitter — https://twitter.com/AesopRockWins
All That Remains on Twitter — https://twitter.com/ATRhq
Korn — https://www.kornofficial.com/
Eric Meadows-Jönsson on Twitter — https://twitter.com/emjii
Donnie Darko — https://www.imdb.com/title/tt0246578/
Richard Kelly — https://www.imdb.com/name/nm0446819/
Frank Hunleth on Twitter — https://twitter.com/fhunleth
SmartLogic — https://smartlogic.io/  Special Guests: Connor Rigby and Dan Ivovich.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>As our first trilogy comes to a close, and we embark on the next one, we’re doing what all great trilogies do: Upending everything that made the initial one great and starting afresh. We have taken on board some excellent listener feedback to keep this the highest quality Elixir related podcast. So, for this launchisode, rather than doing a trailer, we are diving in headfirst with a full episode on system and application architecture, this season’s theme, with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>

<p>We kick off the show by getting to know Dan and Eric a bit better. This season, as per listener requests, we will spend more time on our guests&#39; personal lives. We learn about Dan and Eric’s time at SmartLogic, their experience working with Elixir, and their approaches to learning it. From there, we move onto tackling clients’ projects. We discuss the importance of letting ideas flow free as well as how to break projects down into manageable sized segments to work on. Following this, we touch on flexible architecture. As the world changes, sometimes at a pace faster than we anticipate, it is more important than ever to design systems that we can iterate on. Then, we discuss the future of applications and architecture and the exciting possibilities in-store. </p>

<p>The show rounds off with our new segment, Pattern Matching with Todd, where our friend Todd Resudek gets to know someone in the community a bit better. Today, he talks with Connor Rigby of Binary Noggin, finding out more about his programing journey, his favorite music and movies, and his WiFi meshing project. We&#39;re so excited for this season, and we hope you join us on the journey. Tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Dan’s background and how he came to be Director of Development Operations.</li>
<li>How Eric started at SmartLogic and what his journey at the company has been like.</li>
<li>Learn what convinced Dan to go all-in on Elixir and make the move from Rails</li>
<li>Some of the educational materials and tools Dan and Eric used to learn Elixir.</li>
<li>Dan’s preferred style of design and why he enjoys TDD.</li>
<li>Why we think that Cucumber falls short and chose to move away from it.</li>
<li>Find out what we think domain-driven design is.</li>
<li>How Dan and Eric approach deconstructing clients’ projects.</li>
<li>Pre-coding: Why it’s best to do free-form planning, with no constraints.</li>
<li>Insights into the broad-reaching term of ‘API’ and what we mean by it.</li>
<li>SOAP and REST APIs: What they are and the differences between them.</li>
<li>How Dan, Eric, and Justus’s thinking about designing and application architecture has evolved.</li>
<li>Object-oriented programming versus functional: Our take on the age-old debate.</li>
<li>Is this finally the year that we get to kill micro-services?</li>
<li>The relationship between team size and micro-services and some other constraints.</li>
<li>What the future has in store for applications and architecting.</li>
<li>Pattern-matching with Todd: Five questions to get to know Connor Rigby a bit better.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Dan Ivovich on Twitter — <a href="https://twitter.com/danivovich" rel="nofollow">https://twitter.com/danivovich</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Kalevala on GitHub — <a href="https://github.com/oestrich/kalevala" rel="nofollow">https://github.com/oestrich/kalevala</a><br>
Valve — <a href="https://www.valvesoftware.com/en/" rel="nofollow">https://www.valvesoftware.com/en/</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
Phoenix Elixir books — <a href="https://pragprog.com/book/phoenix14/programming-phoenix-1-4" rel="nofollow">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>
Ruby on Rails — <a href="https://rubyonrails.org/" rel="nofollow">https://rubyonrails.org/</a><br>
Designing for Scalability with Erlang — <a href="http://shop.oreilly.com/product/0636920024149.do" rel="nofollow">http://shop.oreilly.com/product/0636920024149.do</a><br>
Mike Amundsen on O’Reily Media — <a href="https://www.oreilly.com/pub/au/1192" rel="nofollow">https://www.oreilly.com/pub/au/1192</a><br>
Designing Elixir Systems With OTP — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>
Cucumber — <a href="https://cucumber.io/" rel="nofollow">https://cucumber.io/</a><br>
Visual Studio Code — <a href="https://code.visualstudio.com/" rel="nofollow">https://code.visualstudio.com/</a><br>
SOAP vs REST APIs — <a href="https://www.soapui.org/learn/api/soap-vs-rest-api/" rel="nofollow">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>
RESTFest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
ExVenture — <a href="https://exventure.org/" rel="nofollow">https://exventure.org/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
Phoenix — <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Connor Rigby on GitHub — <a href="https://github.com/ConnorRigby" rel="nofollow">https://github.com/ConnorRigby</a><br>
The Big Lebowski — <a href="https://www.imdb.com/title/tt0118715/" rel="nofollow">https://www.imdb.com/title/tt0118715/</a><br>
Aesop Rock on Twitter — <a href="https://twitter.com/AesopRockWins" rel="nofollow">https://twitter.com/AesopRockWins</a><br>
All That Remains on Twitter — <a href="https://twitter.com/ATRhq" rel="nofollow">https://twitter.com/ATRhq</a><br>
Korn — <a href="https://www.kornofficial.com/" rel="nofollow">https://www.kornofficial.com/</a><br>
Eric Meadows-Jönsson on Twitter — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Donnie Darko — <a href="https://www.imdb.com/title/tt0246578/" rel="nofollow">https://www.imdb.com/title/tt0246578/</a><br>
Richard Kelly — <a href="https://www.imdb.com/name/nm0446819/" rel="nofollow">https://www.imdb.com/name/nm0446819/</a><br>
Frank Hunleth on Twitter — <a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>As our first trilogy comes to a close, and we embark on the next one, we’re doing what all great trilogies do: Upending everything that made the initial one great and starting afresh. We have taken on board some excellent listener feedback to keep this the highest quality Elixir related podcast. So, for this launchisode, rather than doing a trailer, we are diving in headfirst with a full episode on system and application architecture, this season’s theme, with Justus Eapen, Dan Ivovich, and Eric Oestrich. </p>

<p>We kick off the show by getting to know Dan and Eric a bit better. This season, as per listener requests, we will spend more time on our guests&#39; personal lives. We learn about Dan and Eric’s time at SmartLogic, their experience working with Elixir, and their approaches to learning it. From there, we move onto tackling clients’ projects. We discuss the importance of letting ideas flow free as well as how to break projects down into manageable sized segments to work on. Following this, we touch on flexible architecture. As the world changes, sometimes at a pace faster than we anticipate, it is more important than ever to design systems that we can iterate on. Then, we discuss the future of applications and architecture and the exciting possibilities in-store. </p>

<p>The show rounds off with our new segment, Pattern Matching with Todd, where our friend Todd Resudek gets to know someone in the community a bit better. Today, he talks with Connor Rigby of Binary Noggin, finding out more about his programing journey, his favorite music and movies, and his WiFi meshing project. We&#39;re so excited for this season, and we hope you join us on the journey. Tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Dan’s background and how he came to be Director of Development Operations.</li>
<li>How Eric started at SmartLogic and what his journey at the company has been like.</li>
<li>Learn what convinced Dan to go all-in on Elixir and make the move from Rails</li>
<li>Some of the educational materials and tools Dan and Eric used to learn Elixir.</li>
<li>Dan’s preferred style of design and why he enjoys TDD.</li>
<li>Why we think that Cucumber falls short and chose to move away from it.</li>
<li>Find out what we think domain-driven design is.</li>
<li>How Dan and Eric approach deconstructing clients’ projects.</li>
<li>Pre-coding: Why it’s best to do free-form planning, with no constraints.</li>
<li>Insights into the broad-reaching term of ‘API’ and what we mean by it.</li>
<li>SOAP and REST APIs: What they are and the differences between them.</li>
<li>How Dan, Eric, and Justus’s thinking about designing and application architecture has evolved.</li>
<li>Object-oriented programming versus functional: Our take on the age-old debate.</li>
<li>Is this finally the year that we get to kill micro-services?</li>
<li>The relationship between team size and micro-services and some other constraints.</li>
<li>What the future has in store for applications and architecting.</li>
<li>Pattern-matching with Todd: Five questions to get to know Connor Rigby a bit better.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Justus Eapen on Twitter — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Dan Ivovich on Twitter — <a href="https://twitter.com/danivovich" rel="nofollow">https://twitter.com/danivovich</a><br>
Eric Oestrich on Twitter — <a href="https://twitter.com/ericoestrich" rel="nofollow">https://twitter.com/ericoestrich</a><br>
Kalevala on GitHub — <a href="https://github.com/oestrich/kalevala" rel="nofollow">https://github.com/oestrich/kalevala</a><br>
Valve — <a href="https://www.valvesoftware.com/en/" rel="nofollow">https://www.valvesoftware.com/en/</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
Phoenix Elixir books — <a href="https://pragprog.com/book/phoenix14/programming-phoenix-1-4" rel="nofollow">https://pragprog.com/book/phoenix14/programming-phoenix-1-4</a><br>
Ruby on Rails — <a href="https://rubyonrails.org/" rel="nofollow">https://rubyonrails.org/</a><br>
Designing for Scalability with Erlang — <a href="http://shop.oreilly.com/product/0636920024149.do" rel="nofollow">http://shop.oreilly.com/product/0636920024149.do</a><br>
Mike Amundsen on O’Reily Media — <a href="https://www.oreilly.com/pub/au/1192" rel="nofollow">https://www.oreilly.com/pub/au/1192</a><br>
Designing Elixir Systems With OTP — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617</a><br>
Cucumber — <a href="https://cucumber.io/" rel="nofollow">https://cucumber.io/</a><br>
Visual Studio Code — <a href="https://code.visualstudio.com/" rel="nofollow">https://code.visualstudio.com/</a><br>
SOAP vs REST APIs — <a href="https://www.soapui.org/learn/api/soap-vs-rest-api/" rel="nofollow">https://www.soapui.org/learn/api/soap-vs-rest-api/</a><br>
RESTFest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
ExVenture — <a href="https://exventure.org/" rel="nofollow">https://exventure.org/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
Phoenix — <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Connor Rigby on GitHub — <a href="https://github.com/ConnorRigby" rel="nofollow">https://github.com/ConnorRigby</a><br>
The Big Lebowski — <a href="https://www.imdb.com/title/tt0118715/" rel="nofollow">https://www.imdb.com/title/tt0118715/</a><br>
Aesop Rock on Twitter — <a href="https://twitter.com/AesopRockWins" rel="nofollow">https://twitter.com/AesopRockWins</a><br>
All That Remains on Twitter — <a href="https://twitter.com/ATRhq" rel="nofollow">https://twitter.com/ATRhq</a><br>
Korn — <a href="https://www.kornofficial.com/" rel="nofollow">https://www.kornofficial.com/</a><br>
Eric Meadows-Jönsson on Twitter — <a href="https://twitter.com/emjii" rel="nofollow">https://twitter.com/emjii</a><br>
Donnie Darko — <a href="https://www.imdb.com/title/tt0246578/" rel="nofollow">https://www.imdb.com/title/tt0246578/</a><br>
Richard Kelly — <a href="https://www.imdb.com/name/nm0446819/" rel="nofollow">https://www.imdb.com/name/nm0446819/</a><br>
Frank Hunleth on Twitter — <a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Connor Rigby and Dan Ivovich.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Betweenisode Part 2!  Featuring Amos King, Chris Keathley, Anna Neyzberg, Paul Schoenfelder, Sophie DeBenedetto, Meryl Dakin, and Dave Thomas</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e0b-betweenisode-part-2</link>
      <guid isPermaLink="false">dbe34c01-2361-41a8-ab85-dab81699cc7e</guid>
      <pubDate>Thu, 23 Apr 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe34c01-2361-41a8-ab85-dab81699cc7e.mp3" length="77474023" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome back to part two of our Betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life during social distancing.</itunes:subtitle>
      <itunes:duration>53:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/dbe34c01-2361-41a8-ab85-dab81699cc7e/cover.jpg" />
      <description>Welcome back to part two of our betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life after social distancing! The show is a back-to-back of four different conversations, the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas. Our four conversations cover the same broad themes, and we mostly share our thoughts about what is happening in the world right now, how we are coping with working remotely, and what particular projects have been keeping us busy. Our guests share varying perspectives about what it means that we are restructuring the way we do things. We talk about how even if you worked remotely before, things feel different now, and we also consider the extra burdens of being a remote software developer. Other topics include the line between complaints and constructive criticism, wild animals roaming the streets, and the general atmosphere in our different locations. From a tech point of view, we touch on IoT development, various GitHub projects to get involved with, why students aren’t learning how to program properly anymore, and a lot more. Get it all here and make sure you stay tuned for episode one of season four!
Key Points From This Episode:
Scaling up the NFL Draft website for remote screening.
Home life and side projects in the quarantine: Mogde Podge, a baby, and game development.
Shameless plugs from everybody: Binary Noggin, ElixirBridge, and Finch.
Isolation, low supplies and trying to stay positive at present.
Imagining roaming wild animals now that humans are in quarantine.
Advice from Paul who works at home for surviving social distancing.
What Paul is doing for Ockam to secure IoT devices.
The danger of starting hack vulnerable tech companies.
A plug from Paul to get involved with Lumen.
Nature taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right now.
Working from home versus working from home due to a global crisis.
Domestic squabbles over bandwidth between Meryl and her software developer brother.
Lessons learned to stay sane during quarantine: getting dressed.
Extra tasks remote developers are having to do remotely; becoming project managers.
The difference between complaints and legitimate critiques of work systems.
Dave’s amazing remote communications setup 40 miles north of Dallas.
The situation where Dave is with regard to coronavirus and freedom.
How COBOL has not become too broad despite not using libraries.
The history of programming languages that Dave teaches.
That PDP-11 runs better emulated in Javascript than in its original hardware.
A drawback of modern development: not understanding hardware.
How Dave is digitizing his SMU courses due to teaching them online at present.
All the effort Dave puts into grading his students’ exercises.
Issues that coding is not taught rigorously enough; students can’t ‘program’.
How well the human race is doing to mobilize en masse right now.
Whether tech caused the crisis and humanity could manage this crisis 100 years ago.
Links Mentioned in Today’s Episode:
Eric Oestrich — https://oestrich.org/
Justus Eapen — https://www.linkedin.com/in/justuseapen/
Amos King — https://www.linkedin.com/in/amosking/
Chris Keathley — https://keathley.io/
Anna Neyzberg — https://www.linkedin.com/in/anna-neyzberg-93545316/
Elixir Outlaws — https://elixiroutlaws.com/
NFL Draft — https://www.nfl.com/draft/home
Modge Podge — https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O
Star Trek — https://intl.startrek.com/
Sublime — https://www.sublimetext.com/
VSCode — https://code.visualstudio.com/
Binary Noggin — https://binarynoggin.com/
Connor Rigby — https://binarynoggin.com/author/connor/
ElixirBridge — http://elixirbridge.org/
Nico Piderman — https://github.com/sneako
Quinn Wilton — https://github.com/QuinnWilton
Jose Valim — https://github.com/josevalim
Finch Library— https://github.com/keathley/finch
Paul Schoenfelder — https://www.linkedin.com/in/gotbones/
Ockam — https://www.ockam.io/
Lumen — https://github.com/lumen/lumen
Timex — https://github.com/bitwalker/timex
Sophie DeBenedetto — https://www.linkedin.com/in/sophiedebenedetto/
Meryl Dakin — https://github.com/meryldakin
Flatiron — https://flatironschool.com/
Sophie DeBenedetto’s GitHub Post — https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/
Elixir School — https://elixirschool.com/en/
Meryl Dakin’s Watch if Your Dare Episode — https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true
Luigi’s Mansion — https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html
Dave Thomas — https://pragdave.me/
COBOL — https://www.tutorialspoint.com/cobol/index.htm
PD-11 — https://history-computer.com/ModernComputer/Electronic/PDP-11.html
SMU — https://www.smu.edu/lyle
Elixir Wizards Podcast — https://podcast.smartlogic.io
SmartLogic — https://smartlogic.io/  Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas, Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to part two of our betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life after social distancing! The show is a back-to-back of four different conversations, the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas. Our four conversations cover the same broad themes, and we mostly share our thoughts about what is happening in the world right now, how we are coping with working remotely, and what particular projects have been keeping us busy. Our guests share varying perspectives about what it means that we are restructuring the way we do things. We talk about how even if you worked remotely before, things feel different now, and we also consider the extra burdens of being a remote software developer. Other topics include the line between complaints and constructive criticism, wild animals roaming the streets, and the general atmosphere in our different locations. From a tech point of view, we touch on IoT development, various GitHub projects to get involved with, why students aren’t learning how to program properly anymore, and a lot more. Get it all here and make sure you stay tuned for episode one of season four!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Scaling up the NFL Draft website for remote screening.</li>
<li>Home life and side projects in the quarantine: Mogde Podge, a baby, and game development.</li>
<li>Shameless plugs from everybody: Binary Noggin, ElixirBridge, and Finch.</li>
<li>Isolation, low supplies and trying to stay positive at present.</li>
<li>Imagining roaming wild animals now that humans are in quarantine.</li>
<li>Advice from Paul who works at home for surviving social distancing.</li>
<li>What Paul is doing for Ockam to secure IoT devices.</li>
<li>The danger of starting hack vulnerable tech companies.</li>
<li>A plug from Paul to get involved with Lumen.</li>
<li>Nature taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right now.</li>
<li>Working from home versus working from home due to a global crisis.</li>
<li>Domestic squabbles over bandwidth between Meryl and her software developer brother.</li>
<li>Lessons learned to stay sane during quarantine: getting dressed.</li>
<li>Extra tasks remote developers are having to do remotely; becoming project managers.</li>
<li>The difference between complaints and legitimate critiques of work systems.</li>
<li>Dave’s amazing remote communications setup 40 miles north of Dallas.</li>
<li>The situation where Dave is with regard to coronavirus and freedom.</li>
<li>How COBOL has not become too broad despite not using libraries.</li>
<li>The history of programming languages that Dave teaches.</li>
<li>That PDP-11 runs better emulated in Javascript than in its original hardware.</li>
<li>A drawback of modern development: not understanding hardware.</li>
<li>How Dave is digitizing his SMU courses due to teaching them online at present.</li>
<li>All the effort Dave puts into grading his students’ exercises.</li>
<li>Issues that coding is not taught rigorously enough; students can’t ‘program’.</li>
<li>How well the human race is doing to mobilize en masse right now.</li>
<li>Whether tech caused the crisis and humanity could manage this crisis 100 years ago.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Justus Eapen — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Amos King — <a href="https://www.linkedin.com/in/amosking/" rel="nofollow">https://www.linkedin.com/in/amosking/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Anna Neyzberg — <a href="https://www.linkedin.com/in/anna-neyzberg-93545316/" rel="nofollow">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
NFL Draft — <a href="https://www.nfl.com/draft/home" rel="nofollow">https://www.nfl.com/draft/home</a><br>
Modge Podge — <a href="https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O" rel="nofollow">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>
Star Trek — <a href="https://intl.startrek.com/" rel="nofollow">https://intl.startrek.com/</a><br>
Sublime — <a href="https://www.sublimetext.com/" rel="nofollow">https://www.sublimetext.com/</a><br>
VSCode — <a href="https://code.visualstudio.com/" rel="nofollow">https://code.visualstudio.com/</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Connor Rigby — <a href="https://binarynoggin.com/author/connor/" rel="nofollow">https://binarynoggin.com/author/connor/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Nico Piderman — <a href="https://github.com/sneako" rel="nofollow">https://github.com/sneako</a><br>
Quinn Wilton — <a href="https://github.com/QuinnWilton" rel="nofollow">https://github.com/QuinnWilton</a><br>
Jose Valim — <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Finch Library— <a href="https://github.com/keathley/finch" rel="nofollow">https://github.com/keathley/finch</a><br>
Paul Schoenfelder — <a href="https://www.linkedin.com/in/gotbones/" rel="nofollow">https://www.linkedin.com/in/gotbones/</a><br>
Ockam — <a href="https://www.ockam.io/" rel="nofollow">https://www.ockam.io/</a><br>
Lumen — <a href="https://github.com/lumen/lumen" rel="nofollow">https://github.com/lumen/lumen</a><br>
Timex — <a href="https://github.com/bitwalker/timex" rel="nofollow">https://github.com/bitwalker/timex</a><br>
Sophie DeBenedetto — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Meryl Dakin — <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Sophie DeBenedetto’s GitHub Post — <a href="https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/" rel="nofollow">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Meryl Dakin’s Watch if Your Dare Episode — <a href="https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true" rel="nofollow">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>
Luigi’s Mansion — <a href="https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html" rel="nofollow">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>
Dave Thomas — <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
COBOL — <a href="https://www.tutorialspoint.com/cobol/index.htm" rel="nofollow">https://www.tutorialspoint.com/cobol/index.htm</a><br>
PD-11 — <a href="https://history-computer.com/ModernComputer/Electronic/PDP-11.html" rel="nofollow">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>
SMU — <a href="https://www.smu.edu/lyle" rel="nofollow">https://www.smu.edu/lyle</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas, Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to part two of our betweenisode! Everybody is working remotely now including ourselves, so today we continue the catch ups we were having with a number of longstanding buddies and chat about life after social distancing! The show is a back-to-back of four different conversations, the first being with Amos King, Chris Keathley, and Anna Neyzberg from Elixir Outlaws. After that we talk to Paul Schoenfelder, before getting on the line with Sophie DeBenedetto and Meryl Dakin. Last but not least we catch up with Dave Thomas. Our four conversations cover the same broad themes, and we mostly share our thoughts about what is happening in the world right now, how we are coping with working remotely, and what particular projects have been keeping us busy. Our guests share varying perspectives about what it means that we are restructuring the way we do things. We talk about how even if you worked remotely before, things feel different now, and we also consider the extra burdens of being a remote software developer. Other topics include the line between complaints and constructive criticism, wild animals roaming the streets, and the general atmosphere in our different locations. From a tech point of view, we touch on IoT development, various GitHub projects to get involved with, why students aren’t learning how to program properly anymore, and a lot more. Get it all here and make sure you stay tuned for episode one of season four!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Scaling up the NFL Draft website for remote screening.</li>
<li>Home life and side projects in the quarantine: Mogde Podge, a baby, and game development.</li>
<li>Shameless plugs from everybody: Binary Noggin, ElixirBridge, and Finch.</li>
<li>Isolation, low supplies and trying to stay positive at present.</li>
<li>Imagining roaming wild animals now that humans are in quarantine.</li>
<li>Advice from Paul who works at home for surviving social distancing.</li>
<li>What Paul is doing for Ockam to secure IoT devices.</li>
<li>The danger of starting hack vulnerable tech companies.</li>
<li>A plug from Paul to get involved with Lumen.</li>
<li>Nature taking over; Meryl and Sophie’s experiences in Brooklyn and Westchester right now.</li>
<li>Working from home versus working from home due to a global crisis.</li>
<li>Domestic squabbles over bandwidth between Meryl and her software developer brother.</li>
<li>Lessons learned to stay sane during quarantine: getting dressed.</li>
<li>Extra tasks remote developers are having to do remotely; becoming project managers.</li>
<li>The difference between complaints and legitimate critiques of work systems.</li>
<li>Dave’s amazing remote communications setup 40 miles north of Dallas.</li>
<li>The situation where Dave is with regard to coronavirus and freedom.</li>
<li>How COBOL has not become too broad despite not using libraries.</li>
<li>The history of programming languages that Dave teaches.</li>
<li>That PDP-11 runs better emulated in Javascript than in its original hardware.</li>
<li>A drawback of modern development: not understanding hardware.</li>
<li>How Dave is digitizing his SMU courses due to teaching them online at present.</li>
<li>All the effort Dave puts into grading his students’ exercises.</li>
<li>Issues that coding is not taught rigorously enough; students can’t ‘program’.</li>
<li>How well the human race is doing to mobilize en masse right now.</li>
<li>Whether tech caused the crisis and humanity could manage this crisis 100 years ago.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Eric Oestrich — <a href="https://oestrich.org/" rel="nofollow">https://oestrich.org/</a><br>
Justus Eapen — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Amos King — <a href="https://www.linkedin.com/in/amosking/" rel="nofollow">https://www.linkedin.com/in/amosking/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Anna Neyzberg — <a href="https://www.linkedin.com/in/anna-neyzberg-93545316/" rel="nofollow">https://www.linkedin.com/in/anna-neyzberg-93545316/</a><br>
Elixir Outlaws — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
NFL Draft — <a href="https://www.nfl.com/draft/home" rel="nofollow">https://www.nfl.com/draft/home</a><br>
Modge Podge — <a href="https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O" rel="nofollow">https://www.amazon.com/Mod-Podge-Waterbase-16-Ounce-CS11302/dp/B001IKES5O</a><br>
Star Trek — <a href="https://intl.startrek.com/" rel="nofollow">https://intl.startrek.com/</a><br>
Sublime — <a href="https://www.sublimetext.com/" rel="nofollow">https://www.sublimetext.com/</a><br>
VSCode — <a href="https://code.visualstudio.com/" rel="nofollow">https://code.visualstudio.com/</a><br>
Binary Noggin — <a href="https://binarynoggin.com/" rel="nofollow">https://binarynoggin.com/</a><br>
Connor Rigby — <a href="https://binarynoggin.com/author/connor/" rel="nofollow">https://binarynoggin.com/author/connor/</a><br>
ElixirBridge — <a href="http://elixirbridge.org/" rel="nofollow">http://elixirbridge.org/</a><br>
Nico Piderman — <a href="https://github.com/sneako" rel="nofollow">https://github.com/sneako</a><br>
Quinn Wilton — <a href="https://github.com/QuinnWilton" rel="nofollow">https://github.com/QuinnWilton</a><br>
Jose Valim — <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Finch Library— <a href="https://github.com/keathley/finch" rel="nofollow">https://github.com/keathley/finch</a><br>
Paul Schoenfelder — <a href="https://www.linkedin.com/in/gotbones/" rel="nofollow">https://www.linkedin.com/in/gotbones/</a><br>
Ockam — <a href="https://www.ockam.io/" rel="nofollow">https://www.ockam.io/</a><br>
Lumen — <a href="https://github.com/lumen/lumen" rel="nofollow">https://github.com/lumen/lumen</a><br>
Timex — <a href="https://github.com/bitwalker/timex" rel="nofollow">https://github.com/bitwalker/timex</a><br>
Sophie DeBenedetto — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Meryl Dakin — <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Sophie DeBenedetto’s GitHub Post — <a href="https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/" rel="nofollow">https://www.thegreatcodeadventure.com/my-long-distance-relationship-with-github/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Meryl Dakin’s Watch if Your Dare Episode — <a href="https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true" rel="nofollow">https://www.stitcher.com/podcast/watch-if-you-dare/e/68798094?autoplay=true</a><br>
Luigi’s Mansion — <a href="https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html" rel="nofollow">https://www.nintendo.co.za/Games/Nintendo-Switch/Luigi-s-Mansion-3-1437312.html</a><br>
Dave Thomas — <a href="https://pragdave.me/" rel="nofollow">https://pragdave.me/</a><br>
COBOL — <a href="https://www.tutorialspoint.com/cobol/index.htm" rel="nofollow">https://www.tutorialspoint.com/cobol/index.htm</a><br>
PD-11 — <a href="https://history-computer.com/ModernComputer/Electronic/PDP-11.html" rel="nofollow">https://history-computer.com/ModernComputer/Electronic/PDP-11.html</a><br>
SMU — <a href="https://www.smu.edu/lyle" rel="nofollow">https://www.smu.edu/lyle</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Amos King, Anna Neyzberg, Chris Keathley, Dave Thomas, Meryl Dakin, Paul Schoenfelder, and Sophie DeBenedetto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Betweenisode Part 1: Saša Jurić, Bruce and Maggie Tate, James Edward Gray II, Jim and Chris Freeze, and Frank Hunleth</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s4e0a-betweenisode-part-1</link>
      <guid isPermaLink="false">1b54b0cf-efaa-46fa-90b5-e40411069750</guid>
      <pubDate>Tue, 21 Apr 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1b54b0cf-efaa-46fa-90b5-e40411069750.mp3" length="77231497" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>4</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>The world has changed so much since the end of season 3, that we thought we’d put together a special Betweenisode to tide you over until Season 4 launches. In this episode, we talk to several friends and respected members of the Elixir community, about how they’re coping and tips they have for retaining some normalcy in your life if you’re suddenly having to work from home. </itunes:subtitle>
      <itunes:duration>53:16</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1b54b0cf-efaa-46fa-90b5-e40411069750/cover.jpg" />
      <description>The world has changed so much since the end of season 3, that we thought we’d put together a special Betweenisode to tide you over until Season 4 launches. In this episode, we talk to several friends and respected members of the Elixir community, about how they’re coping and tips they have for retaining some normalcy in your life if you’re suddenly having to work from home. Our first guest, Saša Jurić, of Very Big Things, and author of the unrivaled Elixir in Action, has had the privilege of working from home for several years. He shares the importance of having a routine, connecting with people, and why you should get out of your pajamas and into some real clothes when you work. He also shares what it’s been like in his home city of Zagreb, and how previous devastating events have in some way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio, an educational platform to learn languages, also join us. Maggie shares more on her culinary adventures, and the importance of having a definite start and finish time to your day. Bruce talks about some of the professional projects he’s working on, and why he believes it’s crucial to tackle difficult technical skills outside of developing. Other guests include James Edward Gray II, who shares more about the incredible way he and his daughter have been bonding, Jim Freeze, founder of ElixirConf, and his son Chris, who share some of the benefits of working from home, and show us how to see the silver lining during this difficult time, and Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have certainly been more changes in the world than we could have anticipated, so it was wonderful to catch up and see how people in our community have been coping. Be sure to tune in today!
Key Points From This Episode:
Learn what’s happening in Saša’s home city, Zagreb, and what he’s doing to keep busy.
Saša’s advice for coping during the pandemic and preventing information overload.
The transition to remote work in Saša’s company and the impacts it’s had on workload.
How Saša started working remotely and the main lessons he has learned from doing it.
What Saša believes the future of virtual events and conferences will be.
Find out how Bruce and Maggie are dealing with these strange times. 
Groxio’s mission in terms of learning and Bruce and Maggie’s tip for working from home.
Current projects that Bruce and Maggie are working on both at Groxio and personally.
What’s in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.
How James is holding up and his take on the COBOL debacle. 
Find out what motivated James to transition from Ruby to Elixir and what it’s been like. 
James’s experience working from home and tips for people who are new to it.
Specific versus general solutions: The difference and how James thinks we can tackle this.
Hear James’s ExVenture plug, which is Eric’s project.
Jim’s and Chris’s experience of the lockdown and the silver linings that have come from it
Find out Jim and Chris’s necessities for working from home and being productive. 
Jim’s plans for ElixirConf for this year and 2021, and Chris and Jim’s final plug. 
Frank’s tips for working from home and his product plugs. 
Links Mentioned in Today’s Episode:
Saša Jurić on Twitter — https://twitter.com/sasajuric
Saša Jurić on LinkedIn — https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186
Erlangelist — https://www.theerlangelist.com/
Very Big Things — https://verybigthings.com/
Elixir in Action — https://www.manning.com/books/elixir-in-action-second-edition
Bruce Tate — https://www.linkedin.com/in/bruce-tate-a836b
Bruce Tate on Twitter — https://twitter.com/redrapids
Maggie Tate on LinkedIn — https://www.linkedin.com/in/maggie-tate-230234171
Groxio — https://grox.io/
Programmer Passport — https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253
Lonestar Elixir — https://lonestarelixir.com/
James Edward Gray II — https://twitter.com/JEG2
COBOL — https://www.tutorialspoint.com/cobol/index.htm
Gray Inc — http://graysoftinc.com/
Programming Erlang — https://pragprog.com/book/jaerlang2/programming-erlang
Nathan Long — https://twitter.com/sleeplessgeek
POV-Ray — http://www.povray.org/
Elixir Wizards S02 Eric on ExVenture — https://podcast.smartlogic.io/season-two-oestrich
Jesse Link — http://www.jesselink.com/
Jim Freeze on Twitter— https://twitter.com/jimfreeze
ElixirConf — https://elixirconf.com/2020
Chris Freeze on Twitter— https://twitter.com/chrisfreeze_
Tesla Car Lot — https://teslacarlot.com/
David Antaramian — https://www.linkedin.com/in/davidantaramian/
PepsiCo — https://www.pepsico.com/
Nerves Project — https://www.nerves-project.org/
Frank Hunleth on Twitter — https://twitter.com/fhunleth
SmartLogic — https://smartlogic.io/  Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth, James Gray, Maggie Tate, and Saša Jurić.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>The world has changed so much since the end of season 3, that we thought we’d put together a special Betweenisode to tide you over until Season 4 launches. In this episode, we talk to several friends and respected members of the Elixir community, about how they’re coping and tips they have for retaining some normalcy in your life if you’re suddenly having to work from home. Our first guest, Saša Jurić, of Very Big Things, and author of the unrivaled Elixir in Action, has had the privilege of working from home for several years. He shares the importance of having a routine, connecting with people, and why you should get out of your pajamas and into some real clothes when you work. He also shares what it’s been like in his home city of Zagreb, and how previous devastating events have in some way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio, an educational platform to learn languages, also join us. Maggie shares more on her culinary adventures, and the importance of having a definite start and finish time to your day. Bruce talks about some of the professional projects he’s working on, and why he believes it’s crucial to tackle difficult technical skills outside of developing. Other guests include James Edward Gray II, who shares more about the incredible way he and his daughter have been bonding, Jim Freeze, founder of ElixirConf, and his son Chris, who share some of the benefits of working from home, and show us how to see the silver lining during this difficult time, and Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have certainly been more changes in the world than we could have anticipated, so it was wonderful to catch up and see how people in our community have been coping. Be sure to tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Learn what’s happening in Saša’s home city, Zagreb, and what he’s doing to keep busy.</li>
<li>Saša’s advice for coping during the pandemic and preventing information overload.</li>
<li>The transition to remote work in Saša’s company and the impacts it’s had on workload.</li>
<li>How Saša started working remotely and the main lessons he has learned from doing it.</li>
<li>What Saša believes the future of virtual events and conferences will be.</li>
<li>Find out how Bruce and Maggie are dealing with these strange times. </li>
<li>Groxio’s mission in terms of learning and Bruce and Maggie’s tip for working from home.</li>
<li>Current projects that Bruce and Maggie are working on both at Groxio and personally.</li>
<li>What’s in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>
<li>How James is holding up and his take on the COBOL debacle. </li>
<li>Find out what motivated James to transition from Ruby to Elixir and what it’s been like. </li>
<li>James’s experience working from home and tips for people who are new to it.</li>
<li>Specific versus general solutions: The difference and how James thinks we can tackle this.</li>
<li>Hear James’s ExVenture plug, which is Eric’s project.</li>
<li>Jim’s and Chris’s experience of the lockdown and the silver linings that have come from it</li>
<li>Find out Jim and Chris’s necessities for working from home and being productive. </li>
<li>Jim’s plans for ElixirConf for this year and 2021, and Chris and Jim’s final plug. </li>
<li>Frank’s tips for working from home and his product plugs. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Saša Jurić on Twitter — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
Saša Jurić on LinkedIn — <a href="https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186" rel="nofollow">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>
Erlangelist — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Very Big Things — <a href="https://verybigthings.com/" rel="nofollow">https://verybigthings.com/</a><br>
Elixir in Action — <a href="https://www.manning.com/books/elixir-in-action-second-edition" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b</a><br>
Bruce Tate on Twitter — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Maggie Tate on LinkedIn — <a href="https://www.linkedin.com/in/maggie-tate-230234171" rel="nofollow">https://www.linkedin.com/in/maggie-tate-230234171</a><br>
Groxio — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Programmer Passport — <a href="https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253" rel="nofollow">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
James Edward Gray II — <a href="https://twitter.com/JEG2" rel="nofollow">https://twitter.com/JEG2</a><br>
COBOL — <a href="https://www.tutorialspoint.com/cobol/index.htm" rel="nofollow">https://www.tutorialspoint.com/cobol/index.htm</a><br>
Gray Inc — <a href="http://graysoftinc.com/" rel="nofollow">http://graysoftinc.com/</a><br>
Programming Erlang — <a href="https://pragprog.com/book/jaerlang2/programming-erlang" rel="nofollow">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>
Nathan Long — <a href="https://twitter.com/sleeplessgeek" rel="nofollow">https://twitter.com/sleeplessgeek</a><br>
POV-Ray — <a href="http://www.povray.org/" rel="nofollow">http://www.povray.org/</a><br>
Elixir Wizards S02 Eric on ExVenture — <a href="https://podcast.smartlogic.io/season-two-oestrich" rel="nofollow">https://podcast.smartlogic.io/season-two-oestrich</a><br>
Jesse Link — <a href="http://www.jesselink.com/" rel="nofollow">http://www.jesselink.com/</a><br>
Jim Freeze on Twitter— <a href="https://twitter.com/jimfreeze" rel="nofollow">https://twitter.com/jimfreeze</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Chris Freeze on Twitter— <a href="https://twitter.com/chrisfreeze_" rel="nofollow">https://twitter.com/chrisfreeze_</a><br>
Tesla Car Lot — <a href="https://teslacarlot.com/" rel="nofollow">https://teslacarlot.com/</a><br>
David Antaramian — <a href="https://www.linkedin.com/in/davidantaramian/" rel="nofollow">https://www.linkedin.com/in/davidantaramian/</a><br>
PepsiCo — <a href="https://www.pepsico.com/" rel="nofollow">https://www.pepsico.com/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Frank Hunleth on Twitter — <a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth, James Gray, Maggie Tate, and Saša Jurić.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>The world has changed so much since the end of season 3, that we thought we’d put together a special Betweenisode to tide you over until Season 4 launches. In this episode, we talk to several friends and respected members of the Elixir community, about how they’re coping and tips they have for retaining some normalcy in your life if you’re suddenly having to work from home. Our first guest, Saša Jurić, of Very Big Things, and author of the unrivaled Elixir in Action, has had the privilege of working from home for several years. He shares the importance of having a routine, connecting with people, and why you should get out of your pajamas and into some real clothes when you work. He also shares what it’s been like in his home city of Zagreb, and how previous devastating events have in some way prepared him for what’s currently happening. Bruce and Maggie Tate of Groxio, an educational platform to learn languages, also join us. Maggie shares more on her culinary adventures, and the importance of having a definite start and finish time to your day. Bruce talks about some of the professional projects he’s working on, and why he believes it’s crucial to tackle difficult technical skills outside of developing. Other guests include James Edward Gray II, who shares more about the incredible way he and his daughter have been bonding, Jim Freeze, founder of ElixirConf, and his son Chris, who share some of the benefits of working from home, and show us how to see the silver lining during this difficult time, and Frank Hunleth, of Nerves Project, who talks about what he’s up to. There have certainly been more changes in the world than we could have anticipated, so it was wonderful to catch up and see how people in our community have been coping. Be sure to tune in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Learn what’s happening in Saša’s home city, Zagreb, and what he’s doing to keep busy.</li>
<li>Saša’s advice for coping during the pandemic and preventing information overload.</li>
<li>The transition to remote work in Saša’s company and the impacts it’s had on workload.</li>
<li>How Saša started working remotely and the main lessons he has learned from doing it.</li>
<li>What Saša believes the future of virtual events and conferences will be.</li>
<li>Find out how Bruce and Maggie are dealing with these strange times. </li>
<li>Groxio’s mission in terms of learning and Bruce and Maggie’s tip for working from home.</li>
<li>Current projects that Bruce and Maggie are working on both at Groxio and personally.</li>
<li>What’s in the pipeline with Groxio’s Elixir material and Bruce and Maggie’s plugs.</li>
<li>How James is holding up and his take on the COBOL debacle. </li>
<li>Find out what motivated James to transition from Ruby to Elixir and what it’s been like. </li>
<li>James’s experience working from home and tips for people who are new to it.</li>
<li>Specific versus general solutions: The difference and how James thinks we can tackle this.</li>
<li>Hear James’s ExVenture plug, which is Eric’s project.</li>
<li>Jim’s and Chris’s experience of the lockdown and the silver linings that have come from it</li>
<li>Find out Jim and Chris’s necessities for working from home and being productive. </li>
<li>Jim’s plans for ElixirConf for this year and 2021, and Chris and Jim’s final plug. </li>
<li>Frank’s tips for working from home and his product plugs. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Saša Jurić on Twitter — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
Saša Jurić on LinkedIn — <a href="https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186" rel="nofollow">https://hr.linkedin.com/in/sa%C5%A1a-juri%C4%87-21b23186</a><br>
Erlangelist — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Very Big Things — <a href="https://verybigthings.com/" rel="nofollow">https://verybigthings.com/</a><br>
Elixir in Action — <a href="https://www.manning.com/books/elixir-in-action-second-edition" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition</a><br>
Bruce Tate — <a href="https://www.linkedin.com/in/bruce-tate-a836b" rel="nofollow">https://www.linkedin.com/in/bruce-tate-a836b</a><br>
Bruce Tate on Twitter — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Maggie Tate on LinkedIn — <a href="https://www.linkedin.com/in/maggie-tate-230234171" rel="nofollow">https://www.linkedin.com/in/maggie-tate-230234171</a><br>
Groxio — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Programmer Passport — <a href="https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253" rel="nofollow">https://elixirforum.com/t/programmer-passport-grox-io-pragprog/28253</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
James Edward Gray II — <a href="https://twitter.com/JEG2" rel="nofollow">https://twitter.com/JEG2</a><br>
COBOL — <a href="https://www.tutorialspoint.com/cobol/index.htm" rel="nofollow">https://www.tutorialspoint.com/cobol/index.htm</a><br>
Gray Inc — <a href="http://graysoftinc.com/" rel="nofollow">http://graysoftinc.com/</a><br>
Programming Erlang — <a href="https://pragprog.com/book/jaerlang2/programming-erlang" rel="nofollow">https://pragprog.com/book/jaerlang2/programming-erlang</a><br>
Nathan Long — <a href="https://twitter.com/sleeplessgeek" rel="nofollow">https://twitter.com/sleeplessgeek</a><br>
POV-Ray — <a href="http://www.povray.org/" rel="nofollow">http://www.povray.org/</a><br>
Elixir Wizards S02 Eric on ExVenture — <a href="https://podcast.smartlogic.io/season-two-oestrich" rel="nofollow">https://podcast.smartlogic.io/season-two-oestrich</a><br>
Jesse Link — <a href="http://www.jesselink.com/" rel="nofollow">http://www.jesselink.com/</a><br>
Jim Freeze on Twitter— <a href="https://twitter.com/jimfreeze" rel="nofollow">https://twitter.com/jimfreeze</a><br>
ElixirConf — <a href="https://elixirconf.com/2020" rel="nofollow">https://elixirconf.com/2020</a><br>
Chris Freeze on Twitter— <a href="https://twitter.com/chrisfreeze_" rel="nofollow">https://twitter.com/chrisfreeze_</a><br>
Tesla Car Lot — <a href="https://teslacarlot.com/" rel="nofollow">https://teslacarlot.com/</a><br>
David Antaramian — <a href="https://www.linkedin.com/in/davidantaramian/" rel="nofollow">https://www.linkedin.com/in/davidantaramian/</a><br>
PepsiCo — <a href="https://www.pepsico.com/" rel="nofollow">https://www.pepsico.com/</a><br>
Nerves Project — <a href="https://www.nerves-project.org/" rel="nofollow">https://www.nerves-project.org/</a><br>
Frank Hunleth on Twitter — <a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Bruce Tate, Chris Freeze, Dr. Jim Freeze, Frank Hunleth, James Gray, Maggie Tate, and Saša Jurić.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Season Three Wrap and Remote Work Tips</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e19-season-wrap</link>
      <guid isPermaLink="false">36812119-eef7-40f5-8aba-3fd7b3bebb09</guid>
      <pubDate>Thu, 02 Apr 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/36812119-eef7-40f5-8aba-3fd7b3bebb09.mp3" length="73896690" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Todd Resudek joins us to take a look into the current contexts and home lives many of us find ourselves in today, offering top tips for working remotely from home during these challenging times. The lockdowns have forced many of us to reflect. To reflect on our lives, our work, what we’re grateful for, and in this case, our epic last season of Elixir Wizards!</itunes:subtitle>
      <itunes:duration>50:45</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/36812119-eef7-40f5-8aba-3fd7b3bebb09/cover.jpg" />
      <description>In this episode, we take a look into the current contexts and home lives many of us find ourselves in today, offering top tips for working remotely from home during these challenging times. The lockdowns have caused many of us to reflect. To reflect on our lives, our work, what we’re grateful for, and in this case, our epic last season of Elixir Wizards! Here, we take you through the highlights, the lowlights, our biggest lessons, our juiciest debates, and what you can expect for Season 4 – in sickness and in health. Stay safe, listen, and enjoy!
Key Points from This Episode:
The importance of demarcating your workspace, especially when the kids are home!
Always put your pants on: Why sticking to your morning schedule helps productivity.
Ways to eliminate the potential for distraction when working from home.
How working from home is enabling programmers to see one another’s human side.
Taking a break from conferences, cognition, and learning how to birth a baby Oestrich.
Third dimensions and entering the tangential learning plane with Brooklyn Zelenka.
The Surprise Toddcast: Why the improvised episode was a hit.
What it was like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.
Remember the time the father and son roasted each other on the podcast mic?
Why your podcast audience wants to know your guests on a more personal level.
A recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.
A sneak peek into the new Elixir Wizards theme for the upcoming Season 4.
Lib versus Web and other essential tips for the lazy Phoenix users out there.
Why we need a whole season on application architecture and one-letter module names.
The debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.
Hackers, painters, Paul Graham, and the argument made in favor of dynamic typing.
Find out more about Sophie and Meryl’s epic takeover of Elixir Wizards!
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Eric Oestrich — https://twitter.com/ericoestrich?lang=en
Justus Eapen — https://twitter.com/justuseapen
Brooklyn Zelenka on Witchcraft — https://podcast.smartlogic.io/season-two-zelenka
Brooklyn Zelenka — https://twitter.com/expede?lang=en
Bruce and Maggie Tate from Groxio on Training — https://podcast.smartlogic.io/s3e8-groxio
Saša Jurić — https://twitter.com/sasajuric
Bonus Toddcast &amp; Lonestar Preview — https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview
The Lonestar Lunchisode — https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020
Dave Thomas — https://www.davethomas.net/talks_index.html
Bonus Episode: Outlaws and The Wizards — https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards
Chris Keathley — https://twitter.com/ChrisKeathley
Paul Graham — http://www.paulgraham.com/
Sean Lewis from Divvy on Performance, Hiring and Training — https://podcast.smartlogic.io/s3e12-divvy
Devin C. Estes — https://twitter.com/devoncestes?lang=en
Muzak — https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang Special Guest: Todd Resudek.
</description>
      <itunes:keywords>elixir,phoenix,erlang</itunes:keywords>
      <content:encoded><![CDATA[
        <p>In this episode, we take a look into the current contexts and home lives many of us find ourselves in today, offering top tips for working remotely from home during these challenging times. The lockdowns have caused many of us to reflect. To reflect on our lives, our work, what we’re grateful for, and in this case, our epic last season of Elixir Wizards! Here, we take you through the highlights, the lowlights, our biggest lessons, our juiciest debates, and what you can expect for Season 4 – in sickness and in health. Stay safe, listen, and enjoy!</p>

<p>Key Points from This Episode:</p>

<ul>
<li>The importance of demarcating your workspace, especially when the kids are home!</li>
<li>Always put your pants on: Why sticking to your morning schedule helps productivity.</li>
<li>Ways to eliminate the potential for distraction when working from home.</li>
<li>How working from home is enabling programmers to see one another’s human side.</li>
<li>Taking a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>
<li>Third dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>
<li>The Surprise Toddcast: Why the improvised episode was a hit.</li>
<li>What it was like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>
<li>Remember the time the father and son roasted each other on the podcast mic?</li>
<li>Why your podcast audience wants to know your guests on a more personal level.</li>
<li>A recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>
<li>A sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>
<li>Lib versus Web and other essential tips for the lazy Phoenix users out there.</li>
<li>Why we need a whole season on application architecture and one-letter module names.</li>
<li>The debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>
<li>Hackers, painters, Paul Graham, and the argument made in favor of dynamic typing.</li>
<li>Find out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Oestrich — <a href="https://twitter.com/ericoestrich?lang=en" rel="nofollow">https://twitter.com/ericoestrich?lang=en</a><br>
Justus Eapen — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Brooklyn Zelenka on Witchcraft — <a href="https://podcast.smartlogic.io/season-two-zelenka" rel="nofollow">https://podcast.smartlogic.io/season-two-zelenka</a><br>
Brooklyn Zelenka — <a href="https://twitter.com/expede?lang=en" rel="nofollow">https://twitter.com/expede?lang=en</a><br>
Bruce and Maggie Tate from Groxio on Training — <a href="https://podcast.smartlogic.io/s3e8-groxio" rel="nofollow">https://podcast.smartlogic.io/s3e8-groxio</a><br>
Saša Jurić — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
Bonus Toddcast &amp; Lonestar Preview — <a href="https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview" rel="nofollow">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>
The Lonestar Lunchisode — <a href="https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020" rel="nofollow">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>
Dave Thomas — <a href="https://www.davethomas.net/talks_index.html" rel="nofollow">https://www.davethomas.net/talks_index.html</a><br>
Bonus Episode: Outlaws and The Wizards — <a href="https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards" rel="nofollow">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>
Chris Keathley — <a href="https://twitter.com/ChrisKeathley" rel="nofollow">https://twitter.com/ChrisKeathley</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Sean Lewis from Divvy on Performance, Hiring and Training — <a href="https://podcast.smartlogic.io/s3e12-divvy" rel="nofollow">https://podcast.smartlogic.io/s3e12-divvy</a><br>
Devin C. Estes — <a href="https://twitter.com/devoncestes?lang=en" rel="nofollow">https://twitter.com/devoncestes?lang=en</a><br>
Muzak — <a href="https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang" rel="nofollow">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In this episode, we take a look into the current contexts and home lives many of us find ourselves in today, offering top tips for working remotely from home during these challenging times. The lockdowns have caused many of us to reflect. To reflect on our lives, our work, what we’re grateful for, and in this case, our epic last season of Elixir Wizards! Here, we take you through the highlights, the lowlights, our biggest lessons, our juiciest debates, and what you can expect for Season 4 – in sickness and in health. Stay safe, listen, and enjoy!</p>

<p>Key Points from This Episode:</p>

<ul>
<li>The importance of demarcating your workspace, especially when the kids are home!</li>
<li>Always put your pants on: Why sticking to your morning schedule helps productivity.</li>
<li>Ways to eliminate the potential for distraction when working from home.</li>
<li>How working from home is enabling programmers to see one another’s human side.</li>
<li>Taking a break from conferences, cognition, and learning how to birth a baby Oestrich.</li>
<li>Third dimensions and entering the tangential learning plane with Brooklyn Zelenka.</li>
<li>The Surprise Toddcast: Why the improvised episode was a hit.</li>
<li>What it was like interviewing entrepreneurial couple, Bruce &amp; Maggie Tate.</li>
<li>Remember the time the father and son roasted each other on the podcast mic?</li>
<li>Why your podcast audience wants to know your guests on a more personal level.</li>
<li>A recap of the numbers from Season 1-3 and the 40,000+ Elixir Wizards downloads.</li>
<li>A sneak peek into the new Elixir Wizards theme for the upcoming Season 4.</li>
<li>Lib versus Web and other essential tips for the lazy Phoenix users out there.</li>
<li>Why we need a whole season on application architecture and one-letter module names.</li>
<li>The debate sparked by the disagreement between Chris Keathley and Brooklyn Zelenka.</li>
<li>Hackers, painters, Paul Graham, and the argument made in favor of dynamic typing.</li>
<li>Find out more about Sophie and Meryl’s epic takeover of Elixir Wizards!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Oestrich — <a href="https://twitter.com/ericoestrich?lang=en" rel="nofollow">https://twitter.com/ericoestrich?lang=en</a><br>
Justus Eapen — <a href="https://twitter.com/justuseapen" rel="nofollow">https://twitter.com/justuseapen</a><br>
Brooklyn Zelenka on Witchcraft — <a href="https://podcast.smartlogic.io/season-two-zelenka" rel="nofollow">https://podcast.smartlogic.io/season-two-zelenka</a><br>
Brooklyn Zelenka — <a href="https://twitter.com/expede?lang=en" rel="nofollow">https://twitter.com/expede?lang=en</a><br>
Bruce and Maggie Tate from Groxio on Training — <a href="https://podcast.smartlogic.io/s3e8-groxio" rel="nofollow">https://podcast.smartlogic.io/s3e8-groxio</a><br>
Saša Jurić — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
Bonus Toddcast &amp; Lonestar Preview — <a href="https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview" rel="nofollow">https://podcast.smartlogic.io/s3e14-bonus-toddcast-and-lonestar-preview</a><br>
The Lonestar Lunchisode — <a href="https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020" rel="nofollow">https://podcast.smartlogic.io/s3-lonestar-lunchisode-2020</a><br>
Dave Thomas — <a href="https://www.davethomas.net/talks_index.html" rel="nofollow">https://www.davethomas.net/talks_index.html</a><br>
Bonus Episode: Outlaws and The Wizards — <a href="https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards" rel="nofollow">https://podcast.smartlogic.io/s3-bonus-outlaws-and-wizards</a><br>
Chris Keathley — <a href="https://twitter.com/ChrisKeathley" rel="nofollow">https://twitter.com/ChrisKeathley</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Sean Lewis from Divvy on Performance, Hiring and Training — <a href="https://podcast.smartlogic.io/s3e12-divvy" rel="nofollow">https://podcast.smartlogic.io/s3e12-divvy</a><br>
Devin C. Estes — <a href="https://twitter.com/devoncestes?lang=en" rel="nofollow">https://twitter.com/devoncestes?lang=en</a><br>
Muzak — <a href="https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang" rel="nofollow">https://www.kickstarter.com/projects/devonestes/muzak-a-mutation-testing-library-for-elixir-and-erlang</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sophie and Meryl Takeover: Sean Callan and Steven Nunez on Elixir Education</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e18-nunez-callan</link>
      <guid isPermaLink="false">19db794e-cf88-4320-969b-ea0ccbe0949d</guid>
      <pubDate>Thu, 26 Mar 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/19db794e-cf88-4320-969b-ea0ccbe0949d.mp3" length="78565642" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today we have special guest hosts: Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where some would see the fact that Elixir doesn’t have a ton of readily available answers out there as a restriction to mastering the language, our guests argue that this is the best educational environment.</itunes:subtitle>
      <itunes:duration>53:54</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/19db794e-cf88-4320-969b-ea0ccbe0949d/cover.jpg" />
      <description>Welcome to another extra special episode of Elixir Wizards! We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where some would see the fact that Elixir doesn’t have a ton of readily available answers out there as a restriction to mastering the language, our guests argue that this is the best educational environment. Writing about challenges and teaching others how you overcame them are some of the best ways to learn. We also discuss concurrency and other contrasts with prominent languages. Our guests weigh in on dealing with students and how far enthusiasm and openness can go in helping inspire other minds. Steven stresses the need for greater resources, especially at a beginner level, as this will lower the barrier to entry for new programmers and ultimately benefit the entire Elixir community.
Key Points From This Episode:
An introduction to Sean and Steven, their work and experience with Elixir. 
Work and professional horoscopes for the panel of today's podcast!
The accidental path that led Sean to Elixir and the translations that affirmed his work.
The use of writing and blogging in your own education; teaching is learning twice!
Steven's early attraction to Elixir and the obsession and evangelism that followed. 
Concurrency visibility and differences between Elixir and other languages.
Different tracks for learning; coming into Elixir as a beginner or as someone with experience. 
The evolution of thought around education and things that have changed at Elixir School. 
Learning that includes reasons why; you don't know what you don't know! 
Knowing your students and keeping them excited to maintain a passion for learning. 
Growing confidence and the benefits of great resources for the spread of increasing skills.  
Scratching your own itch; write the educational information that you cannot find yourself.
Our guest's Elixir wish lists; more learning opportunities, widespread adoption and beginner-friendly content.  
Requests about Elixir from our guests, a few plugs and how to connect with them!
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Sophie DeBenedetto — https://twitter.com/smdebenedetto
Meryl Dakin — https://twitter.com/meryldakin
Steven Nunez — https://twitter.com/stevennunez
Sean Callan — https://twitter.com/doomspork
System 76 — https://system76.com/
Flatiron — https://flatironschool.com/
Elixir School — https://elixirschool.com
GitHub — https://github.com/
Erlang — https://www.erlang.org/
Phoenix — https://www.phoenixframework.org/
Kubernetes — https://kubernetes.io/
The Developer's Guide to Content Creation — https://www.developersguidetocontent.com/
Stephanie Morillo — https://www.stephaniemorillo.co/
Elixir and The Beam: How Concurrency Really Works https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/ Special Guests: Sean Callan and Steven Nunez.
</description>
      <itunes:keywords>elixir,phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to another extra special episode of Elixir Wizards! We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where some would see the fact that Elixir doesn’t have a ton of readily available answers out there as a restriction to mastering the language, our guests argue that this is the best educational environment. Writing about challenges and teaching others how you overcame them are some of the best ways to learn. We also discuss concurrency and other contrasts with prominent languages. Our guests weigh in on dealing with students and how far enthusiasm and openness can go in helping inspire other minds. Steven stresses the need for greater resources, especially at a beginner level, as this will lower the barrier to entry for new programmers and ultimately benefit the entire Elixir community.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>An introduction to Sean and Steven, their work and experience with Elixir. </li>
<li>Work and professional horoscopes for the panel of today&#39;s podcast!</li>
<li>The accidental path that led Sean to Elixir and the translations that affirmed his work.</li>
<li>The use of writing and blogging in your own education; teaching is learning twice!</li>
<li>Steven&#39;s early attraction to Elixir and the obsession and evangelism that followed. </li>
<li>Concurrency visibility and differences between Elixir and other languages.</li>
<li>Different tracks for learning; coming into Elixir as a beginner or as someone with experience. </li>
<li>The evolution of thought around education and things that have changed at Elixir School. </li>
<li>Learning that includes reasons why; you don&#39;t know what you don&#39;t know! </li>
<li>Knowing your students and keeping them excited to maintain a passion for learning. </li>
<li>Growing confidence and the benefits of great resources for the spread of increasing skills.<br></li>
<li>Scratching your own itch; write the educational information that you cannot find yourself.</li>
<li>Our guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption and beginner-friendly content.<br></li>
<li>Requests about Elixir from our guests, a few plugs and how to connect with them!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sophie DeBenedetto — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Meryl Dakin — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Steven Nunez — <a href="https://twitter.com/_stevennunez" rel="nofollow">https://twitter.com/_stevennunez</a><br>
Sean Callan — <a href="https://twitter.com/doomspork" rel="nofollow">https://twitter.com/doomspork</a><br>
System 76 — <a href="https://system76.com/" rel="nofollow">https://system76.com/</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Elixir School — <a href="https://elixirschool.com" rel="nofollow">https://elixirschool.com</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Phoenix — <a href="https://www.phoenixframework.org/" rel="nofollow">https://www.phoenixframework.org/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
The Developer&#39;s Guide to Content Creation — <a href="https://www.developersguidetocontent.com/" rel="nofollow">https://www.developersguidetocontent.com/</a><br>
Stephanie Morillo — <a href="https://www.stephaniemorillo.co/" rel="nofollow">https://www.stephaniemorillo.co/</a><br>
Elixir and The Beam: How Concurrency Really Works <a href="https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/" rel="nofollow">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special Guests: Sean Callan and Steven Nunez.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to another extra special episode of Elixir Wizards! We have guest hosts today, Meryl Dakin of Frame.io and Sophie DeBenedetto of Github, and they welcome Steven Nunez, Staff Engineer at the Flatiron School, and Sean Callan, creator of Elixir School, to the show. Where some would see the fact that Elixir doesn’t have a ton of readily available answers out there as a restriction to mastering the language, our guests argue that this is the best educational environment. Writing about challenges and teaching others how you overcame them are some of the best ways to learn. We also discuss concurrency and other contrasts with prominent languages. Our guests weigh in on dealing with students and how far enthusiasm and openness can go in helping inspire other minds. Steven stresses the need for greater resources, especially at a beginner level, as this will lower the barrier to entry for new programmers and ultimately benefit the entire Elixir community.</p>

<p>Key Points From This Episode:</p>

<ul>
<li>An introduction to Sean and Steven, their work and experience with Elixir. </li>
<li>Work and professional horoscopes for the panel of today&#39;s podcast!</li>
<li>The accidental path that led Sean to Elixir and the translations that affirmed his work.</li>
<li>The use of writing and blogging in your own education; teaching is learning twice!</li>
<li>Steven&#39;s early attraction to Elixir and the obsession and evangelism that followed. </li>
<li>Concurrency visibility and differences between Elixir and other languages.</li>
<li>Different tracks for learning; coming into Elixir as a beginner or as someone with experience. </li>
<li>The evolution of thought around education and things that have changed at Elixir School. </li>
<li>Learning that includes reasons why; you don&#39;t know what you don&#39;t know! </li>
<li>Knowing your students and keeping them excited to maintain a passion for learning. </li>
<li>Growing confidence and the benefits of great resources for the spread of increasing skills.<br></li>
<li>Scratching your own itch; write the educational information that you cannot find yourself.</li>
<li>Our guest&#39;s Elixir wish lists; more learning opportunities, widespread adoption and beginner-friendly content.<br></li>
<li>Requests about Elixir from our guests, a few plugs and how to connect with them!</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Sophie DeBenedetto — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Meryl Dakin — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Steven Nunez — <a href="https://twitter.com/_stevennunez" rel="nofollow">https://twitter.com/_stevennunez</a><br>
Sean Callan — <a href="https://twitter.com/doomspork" rel="nofollow">https://twitter.com/doomspork</a><br>
System 76 — <a href="https://system76.com/" rel="nofollow">https://system76.com/</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Elixir School — <a href="https://elixirschool.com" rel="nofollow">https://elixirschool.com</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Phoenix — <a href="https://www.phoenixframework.org/" rel="nofollow">https://www.phoenixframework.org/</a><br>
Kubernetes — <a href="https://kubernetes.io/" rel="nofollow">https://kubernetes.io/</a><br>
The Developer&#39;s Guide to Content Creation — <a href="https://www.developersguidetocontent.com/" rel="nofollow">https://www.developersguidetocontent.com/</a><br>
Stephanie Morillo — <a href="https://www.stephaniemorillo.co/" rel="nofollow">https://www.stephaniemorillo.co/</a><br>
Elixir and The Beam: How Concurrency Really Works <a href="https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/" rel="nofollow">https://www.thegreatcodeadventure.com/elixir-and-the-beam-how-concurrency-really-works/</a></p><p>Special Guests: Sean Callan and Steven Nunez.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Saša Jurić on Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e17-juric</link>
      <guid isPermaLink="false">75204e87-33b5-4a39-833c-d2a7f5ae1931</guid>
      <pubDate>Thu, 19 Mar 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/75204e87-33b5-4a39-833c-d2a7f5ae1931.mp3" length="74231314" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Saša Jurić is a household name in the Elixir and Erlang space and we are so glad to finally welcome him on to the show today! Author of Elixir in Action, Saša is here to discuss training and his thoughts on getting a team up to speed with regards to testing and beyond. </itunes:subtitle>
      <itunes:duration>51:01</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/75204e87-33b5-4a39-833c-d2a7f5ae1931/cover.jpg" />
      <description>Saša Jurić is a household name in the Elixir and Erlang space and we are so glad to finally welcome him on to the show today! Author of Elixir in Action, Saša is here to discuss training and his thoughts on getting a team up to speed with regards to testing and beyond. We hear from our guest about his discovery of Elixir, his uncharacteristic early adoption of the language, and why he chose it. From there, Saša talks a bit about his book, the opportunity that arose for him to write it after Manning approached him and how he views its place among other prominent pieces of literature on the subject. We discuss early steps in the process of learning Elixir for new programmers and old, and Saša weighs in on when it might be a good idea to put in the effort. We also get to hear about very big things, where Saša works and the central work and services of the agency. The last part of our conversation is spent on more technical aspects of Saša's work, his approach to coding in general and then approaches to testing and the training side of this. Join us today for this great conversation!
Key Points From This Episode:
Saša's discovery of Elixir and his first experiences of the language.
A lucky opportunity to write a book that presented itself to Saša!
The complementary nature of Elixir in Action; reading it in conjunction with other books.   
Ideas on how to introduce the concepts of Elixir to new programmers and the unfamiliar. 
The effort needed in order to understand and adopt the new paradigm of Elixir.
Saša's work at very big things and the services that the agency offers.
The most useful idioms that Saša uses and the modes of operation at that agency. 
Saša's use of Dialyzer for debugging despite its imperfections.
The exploratory nature of good coding and finding solutions as you go. 
Helper libraries and comparing functions from Saša's own one!
Training for unit, feature and integration testing; Saša's approach for his team.
Differentiating between the different types of testing and the importance of naming. 
Clarifying Saša's philosophy on testing and his understanding of the term 'unit'. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Saša Jurić on Twitter — https://twitter.com/sasajuric
The Erlangerist — https://www.theerlangelist.com/
Elixir in Action — https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a - use special code podexwizards20 for 40% off your purchase at Manning Publications!
Michael Stevens — https://www.linkedin.com/in/michaelstephens2
Manning — https://www.manning.com/
Programming Elixir — https://pragprog.com/book/elixir16/programming-elixir-1-6
Learn Functional Programming with Elixir — https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir
very big things — https://verybigthings.com/
Dialyzer — https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html
Hackers &amp; Painters — http://shop.oreilly.com/product/9780596006624.do
Paul Graham — http://www.paulgraham.com/
Justin Searls Blog - https://blog.testdouble.com/
Marie Kondo — https://konmari.com/
 Special Guest: Saša Jurić.
</description>
      <itunes:keywords>elixir, phoenix, erlang</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Saša Jurić is a household name in the Elixir and Erlang space and we are so glad to finally welcome him on to the show today! Author of Elixir in Action, Saša is here to discuss training and his thoughts on getting a team up to speed with regards to testing and beyond. We hear from our guest about his discovery of Elixir, his uncharacteristic early adoption of the language, and why he chose it. From there, Saša talks a bit about his book, the opportunity that arose for him to write it after Manning approached him and how he views its place among other prominent pieces of literature on the subject. We discuss early steps in the process of learning Elixir for new programmers and old, and Saša weighs in on when it might be a good idea to put in the effort. We also get to hear about very big things, where Saša works and the central work and services of the agency. The last part of our conversation is spent on more technical aspects of Saša&#39;s work, his approach to coding in general and then approaches to testing and the training side of this. Join us today for this great conversation!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Saša&#39;s discovery of Elixir and his first experiences of the language.</li>
<li>A lucky opportunity to write a book that presented itself to Saša!</li>
<li>The complementary nature of Elixir in Action; reading it in conjunction with other books.<br></li>
<li>Ideas on how to introduce the concepts of Elixir to new programmers and the unfamiliar. </li>
<li>The effort needed in order to understand and adopt the new paradigm of Elixir.</li>
<li>Saša&#39;s work at very big things and the services that the agency offers.</li>
<li>The most useful idioms that Saša uses and the modes of operation at that agency. </li>
<li>Saša&#39;s use of Dialyzer for debugging despite its imperfections.</li>
<li>The exploratory nature of good coding and finding solutions as you go. </li>
<li>Helper libraries and comparing functions from Saša&#39;s own one!</li>
<li>Training for unit, feature and integration testing; Saša&#39;s approach for his team.</li>
<li>Differentiating between the different types of testing and the importance of naming. </li>
<li>Clarifying Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Saša Jurić on Twitter — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
The Erlangerist — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Elixir in Action — <a href="https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a> - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>
Michael Stevens — <a href="https://www.linkedin.com/in/michaelstephens2" rel="nofollow">https://www.linkedin.com/in/michaelstephens2</a><br>
Manning — <a href="https://www.manning.com/" rel="nofollow">https://www.manning.com/</a><br>
Programming Elixir — <a href="https://pragprog.com/book/elixir16/programming-elixir-1-6" rel="nofollow">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>
Learn Functional Programming with Elixir — <a href="https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir" rel="nofollow">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>
very big things — <a href="https://verybigthings.com/" rel="nofollow">https://verybigthings.com/</a><br>
Dialyzer — <a href="https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html" rel="nofollow">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>
Hackers &amp; Painters — <a href="http://shop.oreilly.com/product/9780596006624.do" rel="nofollow">http://shop.oreilly.com/product/9780596006624.do</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Justin Searls Blog - <a href="https://blog.testdouble.com/" rel="nofollow">https://blog.testdouble.com/</a><br>
Marie Kondo — <a href="https://konmari.com/" rel="nofollow">https://konmari.com/</a></p><p>Special Guest: Saša Jurić.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Saša Jurić is a household name in the Elixir and Erlang space and we are so glad to finally welcome him on to the show today! Author of Elixir in Action, Saša is here to discuss training and his thoughts on getting a team up to speed with regards to testing and beyond. We hear from our guest about his discovery of Elixir, his uncharacteristic early adoption of the language, and why he chose it. From there, Saša talks a bit about his book, the opportunity that arose for him to write it after Manning approached him and how he views its place among other prominent pieces of literature on the subject. We discuss early steps in the process of learning Elixir for new programmers and old, and Saša weighs in on when it might be a good idea to put in the effort. We also get to hear about very big things, where Saša works and the central work and services of the agency. The last part of our conversation is spent on more technical aspects of Saša&#39;s work, his approach to coding in general and then approaches to testing and the training side of this. Join us today for this great conversation!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Saša&#39;s discovery of Elixir and his first experiences of the language.</li>
<li>A lucky opportunity to write a book that presented itself to Saša!</li>
<li>The complementary nature of Elixir in Action; reading it in conjunction with other books.<br></li>
<li>Ideas on how to introduce the concepts of Elixir to new programmers and the unfamiliar. </li>
<li>The effort needed in order to understand and adopt the new paradigm of Elixir.</li>
<li>Saša&#39;s work at very big things and the services that the agency offers.</li>
<li>The most useful idioms that Saša uses and the modes of operation at that agency. </li>
<li>Saša&#39;s use of Dialyzer for debugging despite its imperfections.</li>
<li>The exploratory nature of good coding and finding solutions as you go. </li>
<li>Helper libraries and comparing functions from Saša&#39;s own one!</li>
<li>Training for unit, feature and integration testing; Saša&#39;s approach for his team.</li>
<li>Differentiating between the different types of testing and the importance of naming. </li>
<li>Clarifying Saša&#39;s philosophy on testing and his understanding of the term &#39;unit&#39;. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Saša Jurić on Twitter — <a href="https://twitter.com/sasajuric" rel="nofollow">https://twitter.com/sasajuric</a><br>
The Erlangerist — <a href="https://www.theerlangelist.com/" rel="nofollow">https://www.theerlangelist.com/</a><br>
Elixir in Action — <a href="https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a" rel="nofollow">https://www.manning.com/books/elixir-in-action-second-edition?query=sa%C5%A1a</a> - use special code podexwizards20 for 40% off your purchase at Manning Publications!<br>
Michael Stevens — <a href="https://www.linkedin.com/in/michaelstephens2" rel="nofollow">https://www.linkedin.com/in/michaelstephens2</a><br>
Manning — <a href="https://www.manning.com/" rel="nofollow">https://www.manning.com/</a><br>
Programming Elixir — <a href="https://pragprog.com/book/elixir16/programming-elixir-1-6" rel="nofollow">https://pragprog.com/book/elixir16/programming-elixir-1-6</a><br>
Learn Functional Programming with Elixir — <a href="https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir" rel="nofollow">https://pragprog.com/book/cdc-elixir/learn-functional-programming-with-elixir</a><br>
very big things — <a href="https://verybigthings.com/" rel="nofollow">https://verybigthings.com/</a><br>
Dialyzer — <a href="https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html" rel="nofollow">https://hexdocs.pm/dialyzex/Mix.Tasks.Dialyzer.html</a><br>
Hackers &amp; Painters — <a href="http://shop.oreilly.com/product/9780596006624.do" rel="nofollow">http://shop.oreilly.com/product/9780596006624.do</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a><br>
Justin Searls Blog - <a href="https://blog.testdouble.com/" rel="nofollow">https://blog.testdouble.com/</a><br>
Marie Kondo — <a href="https://konmari.com/" rel="nofollow">https://konmari.com/</a></p><p>Special Guest: Saša Jurić.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Bonus Episode: Outlaws and Wizards</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3-bonus-outlaws-and-wizards</link>
      <guid isPermaLink="false">dbe0827c-2449-477d-bb59-3a189d039ad0</guid>
      <pubDate>Fri, 13 Mar 2020 12:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/dbe0827c-2449-477d-bb59-3a189d039ad0.mp3" length="44875455" type="audio/mp3"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.</itunes:subtitle>
      <itunes:duration>46:44</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.
Guests / Hosts
Justus Eapen @justuseapen (https://twitter.com/justuseapen)
Anna Neyzberg @ANeyzb (https://twitter.com/ANeyzb)
Amos King @adkron (https://twitter.com/Adkron)
Bruce Tate @redrapids (https://twitter.com/redrapids)
Susumu Yamazaki @zacky1972 (https://twitter.com/zacky1972)
Melvin Cedeno @TheCraftedGem (https://twitter.com/TheCraftedGem)
Tim Mecklem @tim_mecklem (https://twitter.com/tim_mecklem)
Elixir Outlaws https://elixiroutlaws.com/
Lonestar Elixir https://lonestarelixir.com/ Special Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu Yamazaki, and Tim Mecklem.
</description>
      <itunes:keywords>elixir, phoenix, lonestar elixir</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.</p>

<p><strong>Guests / Hosts</strong><br>
Justus Eapen <a href="https://twitter.com/justuseapen" rel="nofollow">@justuseapen</a><br>
Anna Neyzberg <a href="https://twitter.com/ANeyzb" rel="nofollow">@ANeyzb</a><br>
Amos King <a href="https://twitter.com/Adkron" rel="nofollow">@adkron</a><br>
Bruce Tate <a href="https://twitter.com/redrapids" rel="nofollow">@redrapids</a><br>
Susumu Yamazaki <a href="https://twitter.com/zacky1972" rel="nofollow">@zacky1972</a><br>
Melvin Cedeno <a href="https://twitter.com/TheCraftedGem" rel="nofollow">@TheCraftedGem</a><br>
Tim Mecklem <a href="https://twitter.com/tim_mecklem" rel="nofollow">@tim_mecklem</a></p>

<p>Elixir Outlaws <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Lonestar Elixir <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p><p>Special Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu Yamazaki, and Tim Mecklem.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Elixir Outlaws invited us to join them for a special crossover episode, recorded live at Lonestar Elixir 2020. Join us for a conversation around fun and learning in development, highlights from day one of the conference, remembering Joe Armstrong, and more.</p>

<p><strong>Guests / Hosts</strong><br>
Justus Eapen <a href="https://twitter.com/justuseapen" rel="nofollow">@justuseapen</a><br>
Anna Neyzberg <a href="https://twitter.com/ANeyzb" rel="nofollow">@ANeyzb</a><br>
Amos King <a href="https://twitter.com/Adkron" rel="nofollow">@adkron</a><br>
Bruce Tate <a href="https://twitter.com/redrapids" rel="nofollow">@redrapids</a><br>
Susumu Yamazaki <a href="https://twitter.com/zacky1972" rel="nofollow">@zacky1972</a><br>
Melvin Cedeno <a href="https://twitter.com/TheCraftedGem" rel="nofollow">@TheCraftedGem</a><br>
Tim Mecklem <a href="https://twitter.com/tim_mecklem" rel="nofollow">@tim_mecklem</a></p>

<p>Elixir Outlaws <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Lonestar Elixir <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a></p><p>Special Guests: Amos King, Anna Neyzberg, Bruce Tate, Chris Keathley, Melvin Cedeno, Susumu Yamazaki, and Tim Mecklem.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Devon Estes from Sketch on Benchee,  Performance and Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e16-estes</link>
      <guid isPermaLink="false">65360c15-6a60-4c48-be76-94f642cb6869</guid>
      <pubDate>Thu, 12 Mar 2020 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/65360c15-6a60-4c48-be76-94f642cb6869.mp3" length="70759385" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Devon Estes joins our ongoing discussion about performance and training in the Elixir world, shares about his current work on the beta for Sketch Cloud, his previous Erlang consultancy role at one of the largest banks in Europe, and the massive responsibility he carried while working on the bottom line application.</itunes:subtitle>
      <itunes:duration>48:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/6/65360c15-6a60-4c48-be76-94f642cb6869/cover.jpg" />
      <description>Our guest today, Devon Estes, approached us about the possible opportunity for Elixir to optimize and build out the pandas data analysis and manipulation tool, sharing why he thinks it would be a valuable addition to the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing discussion about performance and training in the Elixir world, sharing about his current work on the beta for Sketch Cloud, his previous Erlang consultancy role at one of the largest banks in Europe, and the massive responsibility he carried while working on the bottom line application. He continues to advise listeners on the considerations for optimizing Erlang performance and solving database-specific problems, and the memory constraints he comes up against in the Sketch Cloud application. Devon talks about Benchee, a benchmarking library created by his friend, and how the two of them have continued to develop this tool, including its performance testing capabilities and how they deconstructed the benchmarking steps to build out the library. He also talks more broadly about the importance of considering the data when distinguishing between facts and opinions in conversations about performance. 
Key Points From This Episode:
What Devon believes would be a valuable addition to the Elixir open source ecosystem. 
Why optimizing and building out the pandas tool will be worth a company’s time and effort.
Devon’s experience with pandas and Python, and recognizing the opportunity for Elixir. 
Working on the beta for Sketch’s Cloud that will allow real-time collaboration. 
Devon’s consultancy role at Klarna, one of the largest banks in Europe. 
The responsibility involved in working on the bottom-of-the-stack application at Klarna.  
Considerations for optimizing Erlang performance and why you should look at the tail. 
Solving the database performance problems – running queries and searches – at Klarna. 
The unique memory constraints of Sketch Cloud and the problem with receiving large files. 
More about Benchee, a benchmarking library, and all its performance testing capabilities. 
Deciding whether a function is responsible for other things when benchmarking. 
The time Devon spends on optimizing performance and the first two steps in the process. 
The profiling process of determining which function is slow and writing a benchmark for it. 
Distinguish between a fact and an opinion by considering the data (or lack thereof). 
Keeping in mind that truth is time-bound, and it also applies to benchmarking.
Deconstructing the steps in the process of further developing Benchee.
How Devon became a maintainer of the Elixir track for Exercism, and what the role involves. 
Links Mentioned in Today’s Episode:
Devon Estes — http://www.devonestes.com
Devon Estes on Twitter — https://twitter.com/devoncestes?lang=en
Devon Estes on GitHub — https://github.com/devonestes
pandas — https://pandas.pydata.org
Python — https://www.python.org
Sketch — https://www.sketch.com
Klarna — https://www.klarna.com/international/
Erlang — https://www.erlang.org
PostgreSQL — https://www.postgresql.org
Ruby  — https://www.ruby-lang.org/en/
Adopting Elixir — https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522
Exercism — https://exercism.io
JavaScript — https://www.javascript.com
Benchee — https://github.com/bencheeorg
SmartLogic — https://smartlogic.io/ 
Elixir — https://elixir-lang.org
Elixir Wizards Podcast — https://podcast.smartlogic.io
Update:
What's Inside a Reduction? http://www.devonestes.com/inside-a-reduction Special Guest: Devon Estes.
</description>
      <itunes:keywords>elixir, ruby, benchee, pandas, erlang</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Our guest today, Devon Estes, approached us about the possible opportunity for Elixir to optimize and build out the pandas data analysis and manipulation tool, sharing why he thinks it would be a valuable addition to the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing discussion about performance and training in the Elixir world, sharing about his current work on the beta for Sketch Cloud, his previous Erlang consultancy role at one of the largest banks in Europe, and the massive responsibility he carried while working on the bottom line application. He continues to advise listeners on the considerations for optimizing Erlang performance and solving database-specific problems, and the memory constraints he comes up against in the Sketch Cloud application. Devon talks about Benchee, a benchmarking library created by his friend, and how the two of them have continued to develop this tool, including its performance testing capabilities and how they deconstructed the benchmarking steps to build out the library. He also talks more broadly about the importance of considering the data when distinguishing between facts and opinions in conversations about performance. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>What Devon believes would be a valuable addition to the Elixir open source ecosystem. </li>
<li>Why optimizing and building out the pandas tool will be worth a company’s time and effort.</li>
<li>Devon’s experience with pandas and Python, and recognizing the opportunity for Elixir. </li>
<li>Working on the beta for Sketch’s Cloud that will allow real-time collaboration. </li>
<li>Devon’s consultancy role at Klarna, one of the largest banks in Europe. </li>
<li>The responsibility involved in working on the bottom-of-the-stack application at Klarna.<br></li>
<li>Considerations for optimizing Erlang performance and why you should look at the tail. </li>
<li>Solving the database performance problems – running queries and searches – at Klarna. </li>
<li>The unique memory constraints of Sketch Cloud and the problem with receiving large files. </li>
<li>More about Benchee, a benchmarking library, and all its performance testing capabilities. </li>
<li>Deciding whether a function is responsible for other things when benchmarking. </li>
<li>The time Devon spends on optimizing performance and the first two steps in the process. </li>
<li>The profiling process of determining which function is slow and writing a benchmark for it. </li>
<li>Distinguish between a fact and an opinion by considering the data (or lack thereof). </li>
<li>Keeping in mind that truth is time-bound, and it also applies to benchmarking.</li>
<li>Deconstructing the steps in the process of further developing Benchee.</li>
<li>How Devon became a maintainer of the Elixir track for Exercism, and what the role involves. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Devon Estes — <a href="http://www.devonestes.com" rel="nofollow">http://www.devonestes.com</a><br>
Devon Estes on Twitter — <a href="https://twitter.com/devoncestes?lang=en" rel="nofollow">https://twitter.com/devoncestes?lang=en</a><br>
Devon Estes on GitHub — <a href="https://github.com/devonestes" rel="nofollow">https://github.com/devonestes</a><br>
pandas — <a href="https://pandas.pydata.org" rel="nofollow">https://pandas.pydata.org</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
Sketch — <a href="https://www.sketch.com" rel="nofollow">https://www.sketch.com</a><br>
Klarna — <a href="https://www.klarna.com/international/" rel="nofollow">https://www.klarna.com/international/</a><br>
Erlang — <a href="https://www.erlang.org" rel="nofollow">https://www.erlang.org</a><br>
PostgreSQL — <a href="https://www.postgresql.org" rel="nofollow">https://www.postgresql.org</a><br>
Ruby  — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Adopting Elixir — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Exercism — <a href="https://exercism.io" rel="nofollow">https://exercism.io</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
Benchee — <a href="https://github.com/bencheeorg" rel="nofollow">https://github.com/bencheeorg</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a></p>

<p>Update:<br>
What&#39;s Inside a Reduction? <a href="http://www.devonestes.com/inside-a-reduction" rel="nofollow">http://www.devonestes.com/inside-a-reduction</a></p><p>Special Guest: Devon Estes.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Our guest today, Devon Estes, approached us about the possible opportunity for Elixir to optimize and build out the pandas data analysis and manipulation tool, sharing why he thinks it would be a valuable addition to the Elixir open source ecosystem. But Devon joins us to contribute to our ongoing discussion about performance and training in the Elixir world, sharing about his current work on the beta for Sketch Cloud, his previous Erlang consultancy role at one of the largest banks in Europe, and the massive responsibility he carried while working on the bottom line application. He continues to advise listeners on the considerations for optimizing Erlang performance and solving database-specific problems, and the memory constraints he comes up against in the Sketch Cloud application. Devon talks about Benchee, a benchmarking library created by his friend, and how the two of them have continued to develop this tool, including its performance testing capabilities and how they deconstructed the benchmarking steps to build out the library. He also talks more broadly about the importance of considering the data when distinguishing between facts and opinions in conversations about performance. </p>

<p>Key Points From This Episode:</p>

<ul>
<li>What Devon believes would be a valuable addition to the Elixir open source ecosystem. </li>
<li>Why optimizing and building out the pandas tool will be worth a company’s time and effort.</li>
<li>Devon’s experience with pandas and Python, and recognizing the opportunity for Elixir. </li>
<li>Working on the beta for Sketch’s Cloud that will allow real-time collaboration. </li>
<li>Devon’s consultancy role at Klarna, one of the largest banks in Europe. </li>
<li>The responsibility involved in working on the bottom-of-the-stack application at Klarna.<br></li>
<li>Considerations for optimizing Erlang performance and why you should look at the tail. </li>
<li>Solving the database performance problems – running queries and searches – at Klarna. </li>
<li>The unique memory constraints of Sketch Cloud and the problem with receiving large files. </li>
<li>More about Benchee, a benchmarking library, and all its performance testing capabilities. </li>
<li>Deciding whether a function is responsible for other things when benchmarking. </li>
<li>The time Devon spends on optimizing performance and the first two steps in the process. </li>
<li>The profiling process of determining which function is slow and writing a benchmark for it. </li>
<li>Distinguish between a fact and an opinion by considering the data (or lack thereof). </li>
<li>Keeping in mind that truth is time-bound, and it also applies to benchmarking.</li>
<li>Deconstructing the steps in the process of further developing Benchee.</li>
<li>How Devon became a maintainer of the Elixir track for Exercism, and what the role involves. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Devon Estes — <a href="http://www.devonestes.com" rel="nofollow">http://www.devonestes.com</a><br>
Devon Estes on Twitter — <a href="https://twitter.com/devoncestes?lang=en" rel="nofollow">https://twitter.com/devoncestes?lang=en</a><br>
Devon Estes on GitHub — <a href="https://github.com/devonestes" rel="nofollow">https://github.com/devonestes</a><br>
pandas — <a href="https://pandas.pydata.org" rel="nofollow">https://pandas.pydata.org</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
Sketch — <a href="https://www.sketch.com" rel="nofollow">https://www.sketch.com</a><br>
Klarna — <a href="https://www.klarna.com/international/" rel="nofollow">https://www.klarna.com/international/</a><br>
Erlang — <a href="https://www.erlang.org" rel="nofollow">https://www.erlang.org</a><br>
PostgreSQL — <a href="https://www.postgresql.org" rel="nofollow">https://www.postgresql.org</a><br>
Ruby  — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Adopting Elixir — <a href="https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522" rel="nofollow">https://www.amazon.com/Adopting-Elixir-Production-Ben-Marx/dp/1680502522</a><br>
Exercism — <a href="https://exercism.io" rel="nofollow">https://exercism.io</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
Benchee — <a href="https://github.com/bencheeorg" rel="nofollow">https://github.com/bencheeorg</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a></p>

<p>Update:<br>
What&#39;s Inside a Reduction? <a href="http://www.devonestes.com/inside-a-reduction" rel="nofollow">http://www.devonestes.com/inside-a-reduction</a></p><p>Special Guest: Devon Estes.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Second Annual Lonestar Lunchisode</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3-lonestar-lunchisode-2020</link>
      <guid isPermaLink="false">49808f09-dc08-407e-9d3b-9db8f0bbff97</guid>
      <pubDate>Thu, 05 Mar 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/49808f09-dc08-407e-9d3b-9db8f0bbff97.mp3" length="77678258" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Recorded live at Lonestar Elixir 2020! Tune in for our conversation with many great guests, including Bruce Tate, Steve Bussey, Bruce Williams, Ricardo Echavarria, Brian Naegele, Frank Kumro, Zach Thomas, Dave Thomas, Jon Carstens, and guest co-host Todd Resudek.</itunes:subtitle>
      <itunes:duration>53:38</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/49808f09-dc08-407e-9d3b-9db8f0bbff97/cover.jpg" />
      <description>Welcome back to the show for this special edition Lunchisode, coming to you live from the Lonestar Elixir 2020 Conference! We have a revolving door of speakers at this informal roundtable and a few friends and associates stop by to introduce themselves, share their thoughts on the conference so far and subjects that they care about. We follow up on some of the ideas raised in the Lonestar preview episode as well as hear about new and interesting ways that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect, SmartRent and more! We also consider the place of Elixir education and go deeper on the topic of finding fun and meaning in our programming pursuits and beyond. Join us for this special edition and stay tuned for the next installment soon.
Key Points From This Episode:
Thoughts on the conference so far — the talks and venue.  
SalesLoft's Elixir adoption and how the decision was made by those in power. 
Bruce Williams' current work at GitHub and his project on Absinthe. 
Elixir usage in Mexico and the prominent organizations and companies that use it.
Some information on the Observability Working Group and what they are currently busy with. 
Differences between tracing and logging; tracing is essentially distributed logging. 
What it means for the programmer when they bump up against a challenge!
The amount of effort that should go into developing entry points for new Elixir developers.
Education in the Elixir space and the success of the bootcamp model. 
Considering the ongoing utility of unit tests and changing up training strategies. 
The work done by SmartRent in real estate and how Elixir fits into their tech stack. 
Links Mentioned in Today’s Episode:
Lonestar Elixir — https://lonestarelixir.com/
Bruce Tate — https://twitter.com/redrapids
Steve Bussey — https://twitter.com/YOOOODAAAA
Bruce Williams — https://twitter.com/wbruce
Ricardo Echavarria — https://twitter.com/ricarus
Brain Naegele — https://twitter.com/bsidebryan
Frank Kumro — https://twitter.com/frigidcode
Zach Thomas — https://twitter.com/ZachDCThom
Dave Thomas — https://twitter.com/pragdave
Jon Carstens — https://twitter.com/JonCarstens
Todd Resudek — https://twitter.com/sprsmpl
SmartLogic — https://smartlogic.io/ 
SalesLoft — https://salesloft.com/
Absinthe — https://github.com/absinthe-graphql/absinthe
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
RestFest — https://www.restfest.org/
Observability Working Group — https://erlef.org/wg/observability
GigCity Elixir Conference — https://www.gigcityelixir.com/
ActiveProspect — https://activeprospect.com/
The Pragmatic Programmer — https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition
SmartRent — https://smartrent.com/
Blinker — https://www.blinker.com/ Special Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.
</description>
      <itunes:keywords>lonestar elixir, elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to the show for this special edition Lunchisode, coming to you live from the Lonestar Elixir 2020 Conference! We have a revolving door of speakers at this informal roundtable and a few friends and associates stop by to introduce themselves, share their thoughts on the conference so far and subjects that they care about. We follow up on some of the ideas raised in the Lonestar preview episode as well as hear about new and interesting ways that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect, SmartRent and more! We also consider the place of Elixir education and go deeper on the topic of finding fun and meaning in our programming pursuits and beyond. Join us for this special edition and stay tuned for the next installment soon.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Thoughts on the conference so far — the talks and venue.<br></li>
<li>SalesLoft&#39;s Elixir adoption and how the decision was made by those in power. </li>
<li>Bruce Williams&#39; current work at GitHub and his project on Absinthe. </li>
<li>Elixir usage in Mexico and the prominent organizations and companies that use it.</li>
<li>Some information on the Observability Working Group and what they are currently busy with. </li>
<li>Differences between tracing and logging; tracing is essentially distributed logging. </li>
<li>What it means for the programmer when they bump up against a challenge!</li>
<li>The amount of effort that should go into developing entry points for new Elixir developers.</li>
<li>Education in the Elixir space and the success of the bootcamp model. </li>
<li>Considering the ongoing utility of unit tests and changing up training strategies. </li>
<li>The work done by SmartRent in real estate and how Elixir fits into their tech stack. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Steve Bussey — <a href="https://twitter.com/YOOOODAAAA" rel="nofollow">https://twitter.com/YOOOODAAAA</a><br>
Bruce Williams — <a href="https://twitter.com/wbruce" rel="nofollow">https://twitter.com/wbruce</a><br>
Ricardo Echavarria — <a href="https://twitter.com/r_icarus" rel="nofollow">https://twitter.com/r_icarus</a><br>
Brain Naegele — <a href="https://twitter.com/bside_bryan" rel="nofollow">https://twitter.com/bside_bryan</a><br>
Frank Kumro — <a href="https://twitter.com/frigidcode" rel="nofollow">https://twitter.com/frigidcode</a><br>
Zach Thomas — <a href="https://twitter.com/ZachDCThom" rel="nofollow">https://twitter.com/ZachDCThom</a><br>
Dave Thomas — <a href="https://twitter.com/pragdave" rel="nofollow">https://twitter.com/pragdave</a><br>
Jon Carstens — <a href="https://twitter.com/JonCarstens" rel="nofollow">https://twitter.com/JonCarstens</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SalesLoft — <a href="https://salesloft.com/" rel="nofollow">https://salesloft.com/</a><br>
Absinthe — <a href="https://github.com/absinthe-graphql/absinthe" rel="nofollow">https://github.com/absinthe-graphql/absinthe</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
RestFest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
Observability Working Group — <a href="https://erlef.org/wg/observability" rel="nofollow">https://erlef.org/wg/observability</a><br>
GigCity Elixir Conference — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
ActiveProspect — <a href="https://activeprospect.com/" rel="nofollow">https://activeprospect.com/</a><br>
The Pragmatic Programmer — <a href="https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition" rel="nofollow">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>
SmartRent — <a href="https://smartrent.com/" rel="nofollow">https://smartrent.com/</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a></p><p>Special Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to the show for this special edition Lunchisode, coming to you live from the Lonestar Elixir 2020 Conference! We have a revolving door of speakers at this informal roundtable and a few friends and associates stop by to introduce themselves, share their thoughts on the conference so far and subjects that they care about. We follow up on some of the ideas raised in the Lonestar preview episode as well as hear about new and interesting ways that Elixir is being used at a variety of companies, including SalesLoft, ActiveProspect, SmartRent and more! We also consider the place of Elixir education and go deeper on the topic of finding fun and meaning in our programming pursuits and beyond. Join us for this special edition and stay tuned for the next installment soon.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Thoughts on the conference so far — the talks and venue.<br></li>
<li>SalesLoft&#39;s Elixir adoption and how the decision was made by those in power. </li>
<li>Bruce Williams&#39; current work at GitHub and his project on Absinthe. </li>
<li>Elixir usage in Mexico and the prominent organizations and companies that use it.</li>
<li>Some information on the Observability Working Group and what they are currently busy with. </li>
<li>Differences between tracing and logging; tracing is essentially distributed logging. </li>
<li>What it means for the programmer when they bump up against a challenge!</li>
<li>The amount of effort that should go into developing entry points for new Elixir developers.</li>
<li>Education in the Elixir space and the success of the bootcamp model. </li>
<li>Considering the ongoing utility of unit tests and changing up training strategies. </li>
<li>The work done by SmartRent in real estate and how Elixir fits into their tech stack. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Bruce Tate — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Steve Bussey — <a href="https://twitter.com/YOOOODAAAA" rel="nofollow">https://twitter.com/YOOOODAAAA</a><br>
Bruce Williams — <a href="https://twitter.com/wbruce" rel="nofollow">https://twitter.com/wbruce</a><br>
Ricardo Echavarria — <a href="https://twitter.com/r_icarus" rel="nofollow">https://twitter.com/r_icarus</a><br>
Brain Naegele — <a href="https://twitter.com/bside_bryan" rel="nofollow">https://twitter.com/bside_bryan</a><br>
Frank Kumro — <a href="https://twitter.com/frigidcode" rel="nofollow">https://twitter.com/frigidcode</a><br>
Zach Thomas — <a href="https://twitter.com/ZachDCThom" rel="nofollow">https://twitter.com/ZachDCThom</a><br>
Dave Thomas — <a href="https://twitter.com/pragdave" rel="nofollow">https://twitter.com/pragdave</a><br>
Jon Carstens — <a href="https://twitter.com/JonCarstens" rel="nofollow">https://twitter.com/JonCarstens</a><br>
Todd Resudek — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
SalesLoft — <a href="https://salesloft.com/" rel="nofollow">https://salesloft.com/</a><br>
Absinthe — <a href="https://github.com/absinthe-graphql/absinthe" rel="nofollow">https://github.com/absinthe-graphql/absinthe</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
RestFest — <a href="https://www.restfest.org/" rel="nofollow">https://www.restfest.org/</a><br>
Observability Working Group — <a href="https://erlef.org/wg/observability" rel="nofollow">https://erlef.org/wg/observability</a><br>
GigCity Elixir Conference — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
ActiveProspect — <a href="https://activeprospect.com/" rel="nofollow">https://activeprospect.com/</a><br>
The Pragmatic Programmer — <a href="https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition" rel="nofollow">https://pragprog.com/book/tpp20/the-pragmatic-programmer-20th-anniversary-edition</a><br>
SmartRent — <a href="https://smartrent.com/" rel="nofollow">https://smartrent.com/</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a></p><p>Special Guests: Brain Naegele, Bruce Tate, Bruce Williams, Dave Thomas, Frank Kumro, Jon Carstens, Ricardo Echavarria, Steve Bussey, Todd Resudek, and Zach Thomas.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Bonus Toddcast &amp; Lonestar Preview</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e14-bonus-toddcast-and-lonestar-preview</link>
      <guid isPermaLink="false">10fa47c2-0223-46ac-a69d-465fd1393edb</guid>
      <pubDate>Thu, 27 Feb 2020 07:30:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/10fa47c2-0223-46ac-a69d-465fd1393edb.mp3" length="103019643" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Special format bonus episode! This week we are joined by bonus co-host Todd Resudek as well as a number of guests who each share a little bit about what they're working on, and in many cases their upcoming presentations at Lonestar Elixir. 

Special guests: Angel Jose of Cars.com, Dave Lucia of SimpleBet, Greg Mefford from Bleacher Report, Melvin Cedeno of SplitGyms, Zach Thomas of Blinker</itunes:subtitle>
      <itunes:duration>1:10:46</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/10fa47c2-0223-46ac-a69d-465fd1393edb/cover.jpg" />
      <description>This week we're delighted to share a special format bonus episode! 
We are joined by guest co-host Todd Resudek as well as a number of guests who each share a little bit about what they're working on and in many cases their upcoming presentations at Lonestar Elixir. 
Special episode guests: 
* Angel Jose, Senior Platform Engineer at Cars.com
* Dave Lucia, VP of Engineering at SimpleBet
* Greg Mefford, Senior Back-End Engineer at Bleacher Report
* Melvin Cedeno, Elixir Developer at SplitGyms
* Zach Thomas, API Developer at Blinker
Most of our guests weigh in about their upcoming presentations at the event and we also get to chat about a few near and dear topics with our rotating cast. We hear about where they are working, their experiences with Elixir and their thoughts on education and company culture. It's an unusual episode but one we are so glad to have had the chance to make! We also find time to touch on our focus for the next season of the podcast, which is very exciting for all of us over here at the show. Remember to stay plugged in for more on Lonestar Elixir and attend if you can!
Key Points From This Episode:
Some thoughts on LiveView and its adoption by new developers. 
Angel's work at Cars and how they are using Elixir and LiveView to rewrite everything.
Chatbots and the immediate benefits of using Elixir to rewrite them.
The elevator pitch on SimpleBet and the tech stack, skillset and ecosystem of the company.
Why Dave and his team have moved away from Rust! 
A quick tease of what to expect for Season 4 of the podcast: Architecture of Applications!  
How Bleacher Report is using Elixir to build the 'third space' for sports fans.
Team building and expansion at Bleacher Report and the stages of scaling.  
A sneak preview of Greg's upcoming talk at Lonestar!
How Greg got started with Nerves and why it has a special place in his heart.  
The theme of Melvin's talk at Lonestar; untraditional routes and emotions in tech. 
Considering the usefulness of boot camps, the value of ISAs and CS programs.
Zach's background in Elixir and his current work at Blinker with the language.
Experiences at Turing and in liberal arts during college.
Zach's Lonestar talk elevator pitch: 'Getting the Frog out of the Well'. 
The allegory of the cave, 'what is water' and how this differs from Zach's idea. 
Why don't we like statically typed things as much as we should?
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Lonestar Elixir 2020 — https://lonestarelixir.com/
Todd Resudek — https://medium.com/@toddresudek
Todd Resudek on Twitter — https://twitter.com/sprsmpl
Angel Jose — https://github.com/ajose01
Dave Lucia — https://github.com/davydog187
Greg Mefford — https://github.com/GregMefford/blinkchain
Melvin Cedeno — https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27
Zack Thomas — https://github.com/zeam-vm/pelemay
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
LiveView — https://hexdocs.pm/phoenixliveview/Phoenix.LiveView.html
ElixirConf — https://elixirconf.com/events
Cars — https://www.cars.com/
SimpleBet — https://www.simplebet.io/
Full Stack Developer Horse Drawing Meme — https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing
Conway's Law — https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development
ElixirConf 2019 - Lighting Talk - Are There Benefits Of Crying In Tech — https://www.youtube.com/watch?v=oW5Plkroyxk
TRON — https://www.rottentomatoes.com/m/tron
Smart Mirror Blog Post — https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f
Bleacher Report — https://bleacherreport.com/
Team Topologies — https://teamtopologies.com/
Nerves — https://nerves-project.org/
Turing — https://turing.io/
CIRR — https://cirr.org/
David Heinemeier Hansson — https://dhh.dk/
Blinker — https://www.blinker.com/
David Foster Wallace — http://www.davidfosterwallacebooks.com/
Gödel, Escher, Bach — https://www.goodreads.com/book/show/24113.GdelEscher_Bach Special Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and Zach Thomas.
</description>
      <itunes:keywords>elixir, phoenix, lonestar</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This week we&#39;re delighted to share a special format bonus episode! </p>

<p>We are joined by guest co-host Todd Resudek as well as a number of guests who each share a little bit about what they&#39;re working on and in many cases their upcoming presentations at Lonestar Elixir. </p>

<p>Special episode guests: </p>

<ul>
<li>Angel Jose, Senior Platform Engineer at Cars.com</li>
<li>Dave Lucia, VP of Engineering at SimpleBet</li>
<li>Greg Mefford, Senior Back-End Engineer at Bleacher Report</li>
<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>
<li>Zach Thomas, API Developer at Blinker</li>
</ul>

<p>Most of our guests weigh in about their upcoming presentations at the event and we also get to chat about a few near and dear topics with our rotating cast. We hear about where they are working, their experiences with Elixir and their thoughts on education and company culture. It&#39;s an unusual episode but one we are so glad to have had the chance to make! We also find time to touch on our focus for the next season of the podcast, which is very exciting for all of us over here at the show. Remember to stay plugged in for more on Lonestar Elixir and attend if you can!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Some thoughts on LiveView and its adoption by new developers. </li>
<li>Angel&#39;s work at Cars and how they are using Elixir and LiveView to rewrite everything.</li>
<li>Chatbots and the immediate benefits of using Elixir to rewrite them.</li>
<li>The elevator pitch on SimpleBet and the tech stack, skillset and ecosystem of the company.</li>
<li>Why Dave and his team have moved away from Rust! </li>
<li>A quick tease of what to expect for Season 4 of the podcast: Architecture of Applications!<br></li>
<li>How Bleacher Report is using Elixir to build the &#39;third space&#39; for sports fans.</li>
<li>Team building and expansion at Bleacher Report and the stages of scaling.<br></li>
<li>A sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>
<li>How Greg got started with Nerves and why it has a special place in his heart.<br></li>
<li>The theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in tech. </li>
<li>Considering the usefulness of boot camps, the value of ISAs and CS programs.</li>
<li>Zach&#39;s background in Elixir and his current work at Blinker with the language.</li>
<li>Experiences at Turing and in liberal arts during college.</li>
<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting the Frog out of the Well&#39;. </li>
<li>The allegory of the cave, &#39;what is water&#39; and how this differs from Zach&#39;s idea. </li>
<li>Why don&#39;t we like statically typed things as much as we should?</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Lonestar Elixir 2020 — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Todd Resudek — <a href="https://medium.com/@toddresudek" rel="nofollow">https://medium.com/@toddresudek</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Angel Jose — <a href="https://github.com/ajose01" rel="nofollow">https://github.com/ajose01</a><br>
Dave Lucia — <a href="https://github.com/davydog187" rel="nofollow">https://github.com/davydog187</a><br>
Greg Mefford — <a href="https://github.com/GregMefford/blinkchain" rel="nofollow">https://github.com/GregMefford/blinkchain</a><br>
Melvin Cedeno — <a href="https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27" rel="nofollow">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>
Zack Thomas — <a href="https://github.com/zeam-vm/pelemay" rel="nofollow">https://github.com/zeam-vm/pelemay</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Cars — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
SimpleBet — <a href="https://www.simplebet.io/" rel="nofollow">https://www.simplebet.io/</a><br>
Full Stack Developer Horse Drawing Meme — <a href="https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing" rel="nofollow">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>
Conway&#39;s Law — <a href="https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development" rel="nofollow">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>
ElixirConf 2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href="https://www.youtube.com/watch?v=oW5Plkroyxk" rel="nofollow">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>
TRON — <a href="https://www.rottentomatoes.com/m/tron" rel="nofollow">https://www.rottentomatoes.com/m/tron</a><br>
Smart Mirror Blog Post — <a href="https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f" rel="nofollow">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Team Topologies — <a href="https://teamtopologies.com/" rel="nofollow">https://teamtopologies.com/</a><br>
Nerves — <a href="https://nerves-project.org/" rel="nofollow">https://nerves-project.org/</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
CIRR — <a href="https://cirr.org/" rel="nofollow">https://cirr.org/</a><br>
David Heinemeier Hansson — <a href="https://dhh.dk/" rel="nofollow">https://dhh.dk/</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a><br>
David Foster Wallace — <a href="http://www.davidfosterwallacebooks.com/" rel="nofollow">http://www.davidfosterwallacebooks.com/</a><br>
Gödel, Escher, Bach — <a href="https://www.goodreads.com/book/show/24113.G_del_Escher_Bach" rel="nofollow">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and Zach Thomas.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This week we&#39;re delighted to share a special format bonus episode! </p>

<p>We are joined by guest co-host Todd Resudek as well as a number of guests who each share a little bit about what they&#39;re working on and in many cases their upcoming presentations at Lonestar Elixir. </p>

<p>Special episode guests: </p>

<ul>
<li>Angel Jose, Senior Platform Engineer at Cars.com</li>
<li>Dave Lucia, VP of Engineering at SimpleBet</li>
<li>Greg Mefford, Senior Back-End Engineer at Bleacher Report</li>
<li>Melvin Cedeno, Elixir Developer at SplitGyms</li>
<li>Zach Thomas, API Developer at Blinker</li>
</ul>

<p>Most of our guests weigh in about their upcoming presentations at the event and we also get to chat about a few near and dear topics with our rotating cast. We hear about where they are working, their experiences with Elixir and their thoughts on education and company culture. It&#39;s an unusual episode but one we are so glad to have had the chance to make! We also find time to touch on our focus for the next season of the podcast, which is very exciting for all of us over here at the show. Remember to stay plugged in for more on Lonestar Elixir and attend if you can!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Some thoughts on LiveView and its adoption by new developers. </li>
<li>Angel&#39;s work at Cars and how they are using Elixir and LiveView to rewrite everything.</li>
<li>Chatbots and the immediate benefits of using Elixir to rewrite them.</li>
<li>The elevator pitch on SimpleBet and the tech stack, skillset and ecosystem of the company.</li>
<li>Why Dave and his team have moved away from Rust! </li>
<li>A quick tease of what to expect for Season 4 of the podcast: Architecture of Applications!<br></li>
<li>How Bleacher Report is using Elixir to build the &#39;third space&#39; for sports fans.</li>
<li>Team building and expansion at Bleacher Report and the stages of scaling.<br></li>
<li>A sneak preview of Greg&#39;s upcoming talk at Lonestar!</li>
<li>How Greg got started with Nerves and why it has a special place in his heart.<br></li>
<li>The theme of Melvin&#39;s talk at Lonestar; untraditional routes and emotions in tech. </li>
<li>Considering the usefulness of boot camps, the value of ISAs and CS programs.</li>
<li>Zach&#39;s background in Elixir and his current work at Blinker with the language.</li>
<li>Experiences at Turing and in liberal arts during college.</li>
<li>Zach&#39;s Lonestar talk elevator pitch: &#39;Getting the Frog out of the Well&#39;. </li>
<li>The allegory of the cave, &#39;what is water&#39; and how this differs from Zach&#39;s idea. </li>
<li>Why don&#39;t we like statically typed things as much as we should?</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Lonestar Elixir 2020 — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Todd Resudek — <a href="https://medium.com/@toddresudek" rel="nofollow">https://medium.com/@toddresudek</a><br>
Todd Resudek on Twitter — <a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
Angel Jose — <a href="https://github.com/ajose01" rel="nofollow">https://github.com/ajose01</a><br>
Dave Lucia — <a href="https://github.com/davydog187" rel="nofollow">https://github.com/davydog187</a><br>
Greg Mefford — <a href="https://github.com/GregMefford/blinkchain" rel="nofollow">https://github.com/GregMefford/blinkchain</a><br>
Melvin Cedeno — <a href="https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27" rel="nofollow">https://gist.github.com/normanrs/eeb5cc91cb10eeb7d3e43168396efb27</a><br>
Zack Thomas — <a href="https://github.com/zeam-vm/pelemay" rel="nofollow">https://github.com/zeam-vm/pelemay</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
LiveView — <a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html" rel="nofollow">https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Cars — <a href="https://www.cars.com/" rel="nofollow">https://www.cars.com/</a><br>
SimpleBet — <a href="https://www.simplebet.io/" rel="nofollow">https://www.simplebet.io/</a><br>
Full Stack Developer Horse Drawing Meme — <a href="https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing" rel="nofollow">https://knowyourmeme.com/photos/1624070-unfinished-horse-drawing</a><br>
Conway&#39;s Law — <a href="https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development" rel="nofollow">https://www.thoughtworks.com/insights/blog/applying-conways-law-improve-your-software-development</a><br>
ElixirConf 2019 - Lighting Talk - Are There Benefits Of Crying In Tech — <a href="https://www.youtube.com/watch?v=oW5Plkroyxk" rel="nofollow">https://www.youtube.com/watch?v=oW5Plkroyxk</a><br>
TRON — <a href="https://www.rottentomatoes.com/m/tron" rel="nofollow">https://www.rottentomatoes.com/m/tron</a><br>
Smart Mirror Blog Post — <a href="https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f" rel="nofollow">https://medium.com/@toddresudek/building-a-smart-mirror-with-phoenix-liveview-18193ee6438f</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Team Topologies — <a href="https://teamtopologies.com/" rel="nofollow">https://teamtopologies.com/</a><br>
Nerves — <a href="https://nerves-project.org/" rel="nofollow">https://nerves-project.org/</a><br>
Turing — <a href="https://turing.io/" rel="nofollow">https://turing.io/</a><br>
CIRR — <a href="https://cirr.org/" rel="nofollow">https://cirr.org/</a><br>
David Heinemeier Hansson — <a href="https://dhh.dk/" rel="nofollow">https://dhh.dk/</a><br>
Blinker — <a href="https://www.blinker.com/" rel="nofollow">https://www.blinker.com/</a><br>
David Foster Wallace — <a href="http://www.davidfosterwallacebooks.com/" rel="nofollow">http://www.davidfosterwallacebooks.com/</a><br>
Gödel, Escher, Bach — <a href="https://www.goodreads.com/book/show/24113.G_del_Escher_Bach" rel="nofollow">https://www.goodreads.com/book/show/24113.G_del_Escher_Bach</a></p><p>Special Guests: Angel Jose, Dave Lucia, Greg Mefford, Melvin Cedeno, Todd Resudek, and Zach Thomas.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Alex Garibay and Mike Binns from DockYard on Hiring and Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e13-binns-garibay</link>
      <guid isPermaLink="false">1cd7d8f6-8965-4bd2-b159-1580e133bb6f</guid>
      <pubDate>Thu, 20 Feb 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1cd7d8f6-8965-4bd2-b159-1580e133bb6f.mp3" length="38709213" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Mike Binns and Alex Garibay of DockYard share their journeys of how they came to work at DockYard and give us a fascinating peek behind-the-scenes into DockYard’s hiring and training processes, systems, and philosophies.</itunes:subtitle>
      <itunes:duration>26:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1cd7d8f6-8965-4bd2-b159-1580e133bb6f/cover.jpg" />
      <description>Today on the show, we’re joined by Mike Binns and Alex Garibay of DockYard. In this episode, Mike and Alex share their journeys of how they came to work at DockYard and give us a view into DockYard’s hiring and training processes, systems, and philosophies. Here they share what they enjoy most about working at DockYard and their emphasis on being supported in your continual growth as an employee and human being.
Key Points from This Episode:
Find out how Mike and Alex both got their jobs at DockYard in 2016.
Working for a fully remote company: Mike and Alex share their experiences.
The amount of languages used at DockYard and what the day-to-day looks like.
React VS Ember: Find out DockYard’s opinion on the debate between the two.
How to know whether you should be using JavaScript or Live View on your projects.
The importance of inclusion and empowerment in the onboarding process at DockYard.
How to support and train new employees in “soft” skills, such as communication.
Personal strategies Mike and Alex use to help “soften the blow” of feedback and criticism. 
Discover what DockYard does to support the learning growth of their employees.
Learn more about DockYard Friday and the exciting projects that have emerged from it.
Helpful resources for learning Elixir and how to remain a curious learner as a developer.
Find out the top skills that make a great engineering manager at DockYard today.
Links Mentioned in Today’s Episode:
Mike Binns on Twitter — https://twitter.com/1stAvenger
Mike Binns on LinkedIn — https://www.linkedin.com/in/mikebinns
Alex Garibay — https://alexgaribay.com/
Alex Garibay on Twitter — https://twitter.com/AlexGaribay
Alex Garibay on LinkedIn — https://www.linkedin.com/in/alexandergaribay/
DockYard — https://DockYard.com/
SmartLogic — https://smartlogic.io/ 
RailsConf — https://railsconf.com/
Chris McCord — http://chrismccord.com/
Ember — https://emberjs.com/
Live View — https://support.google.com/maps/thread/11554255?hl=en
Elixir in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027 
Elixir Conf 2014 Keynote by Dave Thomas — https://www.youtube.com/watch?v=5hDVftaPQwY
Sarah Drasner — https://sarahdrasnerdesign.com/
Lonestar Elixir — https://lonestarelixir.com/
Programming Phoenix — https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453
Jason Goldberger — https://twitter.com/jsonlouis Special Guests: Alex Garibay and Mike Binns.
</description>
      <itunes:keywords>DockYard, elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show, we’re joined by Mike Binns and Alex Garibay of DockYard. In this episode, Mike and Alex share their journeys of how they came to work at DockYard and give us a view into DockYard’s hiring and training processes, systems, and philosophies. Here they share what they enjoy most about working at DockYard and their emphasis on being supported in your continual growth as an employee and human being.</p>

<p>Key Points from This Episode:</p>

<ul>
<li>Find out how Mike and Alex both got their jobs at DockYard in 2016.</li>
<li>Working for a fully remote company: Mike and Alex share their experiences.</li>
<li>The amount of languages used at DockYard and what the day-to-day looks like.</li>
<li>React VS Ember: Find out DockYard’s opinion on the debate between the two.</li>
<li>How to know whether you should be using JavaScript or Live View on your projects.</li>
<li>The importance of inclusion and empowerment in the onboarding process at DockYard.</li>
<li>How to support and train new employees in “soft” skills, such as communication.</li>
<li>Personal strategies Mike and Alex use to help “soften the blow” of feedback and criticism. </li>
<li>Discover what DockYard does to support the learning growth of their employees.</li>
<li>Learn more about DockYard Friday and the exciting projects that have emerged from it.</li>
<li>Helpful resources for learning Elixir and how to remain a curious learner as a developer.</li>
<li>Find out the top skills that make a great engineering manager at DockYard today.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Mike Binns on Twitter — <a href="https://twitter.com/1stAvenger" rel="nofollow">https://twitter.com/1stAvenger</a><br>
Mike Binns on LinkedIn — <a href="https://www.linkedin.com/in/mikebinns" rel="nofollow">https://www.linkedin.com/in/mikebinns</a><br>
Alex Garibay — <a href="https://alexgaribay.com/" rel="nofollow">https://alexgaribay.com/</a><br>
Alex Garibay on Twitter — <a href="https://twitter.com/_AlexGaribay" rel="nofollow">https://twitter.com/_AlexGaribay</a><br>
Alex Garibay on LinkedIn — <a href="https://www.linkedin.com/in/alexandergaribay/" rel="nofollow">https://www.linkedin.com/in/alexandergaribay/</a><br>
DockYard — <a href="https://DockYard.com/" rel="nofollow">https://DockYard.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
RailsConf — <a href="https://railsconf.com/" rel="nofollow">https://railsconf.com/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Ember — <a href="https://emberjs.com/" rel="nofollow">https://emberjs.com/</a><br>
Live View — <a href="https://support.google.com/maps/thread/11554255?hl=en" rel="nofollow">https://support.google.com/maps/thread/11554255?hl=en</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a> <br>
Elixir Conf 2014 Keynote by Dave Thomas — <a href="https://www.youtube.com/watch?v=5hDVftaPQwY" rel="nofollow">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>
Sarah Drasner — <a href="https://sarahdrasnerdesign.com/" rel="nofollow">https://sarahdrasnerdesign.com/</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Programming Phoenix — <a href="https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453" rel="nofollow">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>
Jason Goldberger — <a href="https://twitter.com/jsonlouis_" rel="nofollow">https://twitter.com/jsonlouis_</a></p><p>Special Guests: Alex Garibay and Mike Binns.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show, we’re joined by Mike Binns and Alex Garibay of DockYard. In this episode, Mike and Alex share their journeys of how they came to work at DockYard and give us a view into DockYard’s hiring and training processes, systems, and philosophies. Here they share what they enjoy most about working at DockYard and their emphasis on being supported in your continual growth as an employee and human being.</p>

<p>Key Points from This Episode:</p>

<ul>
<li>Find out how Mike and Alex both got their jobs at DockYard in 2016.</li>
<li>Working for a fully remote company: Mike and Alex share their experiences.</li>
<li>The amount of languages used at DockYard and what the day-to-day looks like.</li>
<li>React VS Ember: Find out DockYard’s opinion on the debate between the two.</li>
<li>How to know whether you should be using JavaScript or Live View on your projects.</li>
<li>The importance of inclusion and empowerment in the onboarding process at DockYard.</li>
<li>How to support and train new employees in “soft” skills, such as communication.</li>
<li>Personal strategies Mike and Alex use to help “soften the blow” of feedback and criticism. </li>
<li>Discover what DockYard does to support the learning growth of their employees.</li>
<li>Learn more about DockYard Friday and the exciting projects that have emerged from it.</li>
<li>Helpful resources for learning Elixir and how to remain a curious learner as a developer.</li>
<li>Find out the top skills that make a great engineering manager at DockYard today.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Mike Binns on Twitter — <a href="https://twitter.com/1stAvenger" rel="nofollow">https://twitter.com/1stAvenger</a><br>
Mike Binns on LinkedIn — <a href="https://www.linkedin.com/in/mikebinns" rel="nofollow">https://www.linkedin.com/in/mikebinns</a><br>
Alex Garibay — <a href="https://alexgaribay.com/" rel="nofollow">https://alexgaribay.com/</a><br>
Alex Garibay on Twitter — <a href="https://twitter.com/_AlexGaribay" rel="nofollow">https://twitter.com/_AlexGaribay</a><br>
Alex Garibay on LinkedIn — <a href="https://www.linkedin.com/in/alexandergaribay/" rel="nofollow">https://www.linkedin.com/in/alexandergaribay/</a><br>
DockYard — <a href="https://DockYard.com/" rel="nofollow">https://DockYard.com/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
RailsConf — <a href="https://railsconf.com/" rel="nofollow">https://railsconf.com/</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Ember — <a href="https://emberjs.com/" rel="nofollow">https://emberjs.com/</a><br>
Live View — <a href="https://support.google.com/maps/thread/11554255?hl=en" rel="nofollow">https://support.google.com/maps/thread/11554255?hl=en</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/1617295027</a> <br>
Elixir Conf 2014 Keynote by Dave Thomas — <a href="https://www.youtube.com/watch?v=5hDVftaPQwY" rel="nofollow">https://www.youtube.com/watch?v=5hDVftaPQwY</a><br>
Sarah Drasner — <a href="https://sarahdrasnerdesign.com/" rel="nofollow">https://sarahdrasnerdesign.com/</a><br>
Lonestar Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Programming Phoenix — <a href="https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453" rel="nofollow">https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453</a><br>
Jason Goldberger — <a href="https://twitter.com/jsonlouis_" rel="nofollow">https://twitter.com/jsonlouis_</a></p><p>Special Guests: Alex Garibay and Mike Binns.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sean Lewis from Divvy on Performance, Hiring and Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e12-divvy</link>
      <guid isPermaLink="false">37389f65-249a-4e59-bdac-c71a646d2b23</guid>
      <pubDate>Thu, 13 Feb 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37389f65-249a-4e59-bdac-c71a646d2b23.mp3" length="50451167" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on Elixir Wizards we are delighted to be joined by Sean Lewis, a senior backend architect at Divvy. One of the many impressive facts about Sean is that he is entirely self-taught, from dabbling in Python and coding to eventually writing a bunch of Ruby tests and working his way up in the product development sphere. In his free time, he likes to play around with electronics and work on other tech-related projects such as developing custom smart home devices. In this episode, Sean discusses his recent Meetup talk on the implementation of Broadway and explains Divvy’s tech stack choices that include React, Elixir, and Python. He dives into the topic of hiring for Elixir, outlining the challenges and providing strategies and resources to equip new developers in the area of functional programming.</itunes:subtitle>
      <itunes:duration>34:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37389f65-249a-4e59-bdac-c71a646d2b23/cover.jpg" />
      <description>Today on Elixir Wizards we are delighted to be joined by Sean Lewis, a senior backend architect at Divvy. One of the many impressive facts about Sean is that he is entirely self-taught, from dabbling in Python and coding to eventually writing a bunch of Ruby tests and working his way up in the product development sphere. In his free time, he likes to play around with electronics and work on other tech-related projects such as developing custom smart home devices. In this episode, Sean discusses his recent Meetup talk on the implementation of Broadway and explains Divvy’s tech stack choices that include React, Elixir, and Python. He dives into the topic of hiring for Elixir, outlining the challenges and providing strategies and resources to equip new developers in the area of functional programming. For Sean, the most important aspect of onboarding is teaching newcomers to ask the right questions since this is the foundation of the problem-solving process. He shares about Divvy’s approach to recruitment, his role as mentor, how they go about retaining and continuously growing their developers, the importance of being teachable, and then Sean concludes by giving listeners practical advice for ensuring data fidelity.
Key Points From This Episode:
Sean’s self-taught journey and role as senior backend architect at Divvy. 
The smart home projects he has recently worked on, including a smart garage. 
An overview of Broadway and Sean’s Meetup talk regarding implementation. 
The straightforward tech stack at Divvy: React, Elixir, and Python. 
The difficulty of hiring for Elixir and finding fintech companies that use Elixir. 
Strategies and resources for training new engineers on Elixir and functional programming. 
Why fintech works well with functional programming in the context of authorization. 
Training state-minimization as a primary concern.
Onboarding: a process of teaching developers to ask the right questions. 
Divvy’s approach to finding and recruiting new employees. 
Thoughts on why so many Utahn companies use Elixir and the city’s exponential growth. 
How Sean was recruited by Divvy, his progression to architect, and his role as a mentor. 
Critical practices for onboarding developers, including assimilating them into the culture. 
How Devvy continues to grow and retain its engineers. 
The importance of challenging yourself, constantly learning, and staying teachable. 
Implementing high-quality checkpoints and other advice for ensuring data fidelity. 
Links Mentioned in Today’s Episode:
Sean Lewis on LinkedIn — https://www.linkedin.com/in/sean-lewis-40375077/
Sean Lewis on Twitter — https://twitter.com/fricsean?lang=en
Sean Lewis on GitHub — https://github.com/SophisticaSean
Divvy — https://getdivvy.com
Ruby — https://www.ruby-lang.org/en/
Broadway — https://hexdocs.pm/broadway/amazon-sqs.html
Utah Elixir Meetup — https://www.meetup.com/utah-elixir
React — https://reactjs.org
Elixir — https://elixir-lang.org
Susumu Yamazaki on Twitter — https://twitter.com/zacky1972
Domain Modeling Made Functional — https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB
Slack — https://slack.com/
MongoDB — https://www.mongodb.com
PostgreSQL — https://www.postgresql.org
Elixir Wizards Podcast — https://podcast.smartlogic.io
SmartLogic — https://smartlogic.io/ 
 Special Guest: Sean Lewis.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on Elixir Wizards we are delighted to be joined by Sean Lewis, a senior backend architect at Divvy. One of the many impressive facts about Sean is that he is entirely self-taught, from dabbling in Python and coding to eventually writing a bunch of Ruby tests and working his way up in the product development sphere. In his free time, he likes to play around with electronics and work on other tech-related projects such as developing custom smart home devices. In this episode, Sean discusses his recent Meetup talk on the implementation of Broadway and explains Divvy’s tech stack choices that include React, Elixir, and Python. He dives into the topic of hiring for Elixir, outlining the challenges and providing strategies and resources to equip new developers in the area of functional programming. For Sean, the most important aspect of onboarding is teaching newcomers to ask the right questions since this is the foundation of the problem-solving process. He shares about Divvy’s approach to recruitment, his role as mentor, how they go about retaining and continuously growing their developers, the importance of being teachable, and then Sean concludes by giving listeners practical advice for ensuring data fidelity.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Sean’s self-taught journey and role as senior backend architect at Divvy. </li>
<li>The smart home projects he has recently worked on, including a smart garage. </li>
<li>An overview of Broadway and Sean’s Meetup talk regarding implementation. </li>
<li>The straightforward tech stack at Divvy: React, Elixir, and Python. </li>
<li>The difficulty of hiring for Elixir and finding fintech companies that use Elixir. </li>
<li>Strategies and resources for training new engineers on Elixir and functional programming. </li>
<li>Why fintech works well with functional programming in the context of authorization. </li>
<li>Training state-minimization as a primary concern.</li>
<li>Onboarding: a process of teaching developers to ask the right questions. </li>
<li>Divvy’s approach to finding and recruiting new employees. </li>
<li>Thoughts on why so many Utahn companies use Elixir and the city’s exponential growth. </li>
<li>How Sean was recruited by Divvy, his progression to architect, and his role as a mentor. </li>
<li>Critical practices for onboarding developers, including assimilating them into the culture. </li>
<li>How Devvy continues to grow and retain its engineers. </li>
<li>The importance of challenging yourself, constantly learning, and staying teachable. </li>
<li>Implementing high-quality checkpoints and other advice for ensuring data fidelity. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Sean Lewis on LinkedIn — <a href="https://www.linkedin.com/in/sean-lewis-40375077/" rel="nofollow">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>
Sean Lewis on Twitter — <a href="https://twitter.com/fricsean?lang=en" rel="nofollow">https://twitter.com/fricsean?lang=en</a><br>
Sean Lewis on GitHub — <a href="https://github.com/SophisticaSean" rel="nofollow">https://github.com/SophisticaSean</a><br>
Divvy — <a href="https://getdivvy.com" rel="nofollow">https://getdivvy.com</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Broadway — <a href="https://hexdocs.pm/broadway/amazon-sqs.html" rel="nofollow">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>
Utah Elixir Meetup — <a href="https://www.meetup.com/utah-elixir" rel="nofollow">https://www.meetup.com/utah-elixir</a><br>
React — <a href="https://reactjs.org" rel="nofollow">https://reactjs.org</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Susumu Yamazaki on Twitter — <a href="https://twitter.com/zacky1972" rel="nofollow">https://twitter.com/zacky1972</a><br>
Domain Modeling Made Functional — <a href="https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB" rel="nofollow">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
MongoDB — <a href="https://www.mongodb.com" rel="nofollow">https://www.mongodb.com</a><br>
PostgreSQL — <a href="https://www.postgresql.org" rel="nofollow">https://www.postgresql.org</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Sean Lewis.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on Elixir Wizards we are delighted to be joined by Sean Lewis, a senior backend architect at Divvy. One of the many impressive facts about Sean is that he is entirely self-taught, from dabbling in Python and coding to eventually writing a bunch of Ruby tests and working his way up in the product development sphere. In his free time, he likes to play around with electronics and work on other tech-related projects such as developing custom smart home devices. In this episode, Sean discusses his recent Meetup talk on the implementation of Broadway and explains Divvy’s tech stack choices that include React, Elixir, and Python. He dives into the topic of hiring for Elixir, outlining the challenges and providing strategies and resources to equip new developers in the area of functional programming. For Sean, the most important aspect of onboarding is teaching newcomers to ask the right questions since this is the foundation of the problem-solving process. He shares about Divvy’s approach to recruitment, his role as mentor, how they go about retaining and continuously growing their developers, the importance of being teachable, and then Sean concludes by giving listeners practical advice for ensuring data fidelity.</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Sean’s self-taught journey and role as senior backend architect at Divvy. </li>
<li>The smart home projects he has recently worked on, including a smart garage. </li>
<li>An overview of Broadway and Sean’s Meetup talk regarding implementation. </li>
<li>The straightforward tech stack at Divvy: React, Elixir, and Python. </li>
<li>The difficulty of hiring for Elixir and finding fintech companies that use Elixir. </li>
<li>Strategies and resources for training new engineers on Elixir and functional programming. </li>
<li>Why fintech works well with functional programming in the context of authorization. </li>
<li>Training state-minimization as a primary concern.</li>
<li>Onboarding: a process of teaching developers to ask the right questions. </li>
<li>Divvy’s approach to finding and recruiting new employees. </li>
<li>Thoughts on why so many Utahn companies use Elixir and the city’s exponential growth. </li>
<li>How Sean was recruited by Divvy, his progression to architect, and his role as a mentor. </li>
<li>Critical practices for onboarding developers, including assimilating them into the culture. </li>
<li>How Devvy continues to grow and retain its engineers. </li>
<li>The importance of challenging yourself, constantly learning, and staying teachable. </li>
<li>Implementing high-quality checkpoints and other advice for ensuring data fidelity. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Sean Lewis on LinkedIn — <a href="https://www.linkedin.com/in/sean-lewis-40375077/" rel="nofollow">https://www.linkedin.com/in/sean-lewis-40375077/</a><br>
Sean Lewis on Twitter — <a href="https://twitter.com/fricsean?lang=en" rel="nofollow">https://twitter.com/fricsean?lang=en</a><br>
Sean Lewis on GitHub — <a href="https://github.com/SophisticaSean" rel="nofollow">https://github.com/SophisticaSean</a><br>
Divvy — <a href="https://getdivvy.com" rel="nofollow">https://getdivvy.com</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Broadway — <a href="https://hexdocs.pm/broadway/amazon-sqs.html" rel="nofollow">https://hexdocs.pm/broadway/amazon-sqs.html</a><br>
Utah Elixir Meetup — <a href="https://www.meetup.com/utah-elixir" rel="nofollow">https://www.meetup.com/utah-elixir</a><br>
React — <a href="https://reactjs.org" rel="nofollow">https://reactjs.org</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Susumu Yamazaki on Twitter — <a href="https://twitter.com/zacky1972" rel="nofollow">https://twitter.com/zacky1972</a><br>
Domain Modeling Made Functional — <a href="https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB" rel="nofollow">https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
MongoDB — <a href="https://www.mongodb.com" rel="nofollow">https://www.mongodb.com</a><br>
PostgreSQL — <a href="https://www.postgresql.org" rel="nofollow">https://www.postgresql.org</a><br>
Elixir Wizards Podcast — <a href="https://podcast.smartlogic.io" rel="nofollow">https://podcast.smartlogic.io</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guest: Sean Lewis.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Paul Schoenfelder and Hans Elias Josephsen on Lumen and Performance</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e11-lumen</link>
      <guid isPermaLink="false">5c493edc-c294-4fdd-b9f9-86a091800d96</guid>
      <pubDate>Thu, 06 Feb 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/5c493edc-c294-4fdd-b9f9-86a091800d96.mp3" length="75674955" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Paul Schoenfelder and Hans Elias Josephsen from DockYard have been working on Lumen, and in this episode, we discuss how this project is incorporated with WebAssembly, a binary instruction format that ultimately allows Elixir to be run in the browser and preserve the semantics of the language. We talk specifics - the data flow and process of writing Elixir, the compiler, interpreter, and run-time functions involved, Rust as the programming language of choice, and when users can expect Lumen to be released.</itunes:subtitle>
      <itunes:duration>51:59</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/5c493edc-c294-4fdd-b9f9-86a091800d96/cover.jpg" />
      <description>In line with our current working-with-Elixir theme, today we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen from DockYard. The two have been working on Lumen, and in this episode, they discuss how this project is incorporated with WebAssembly, a binary instruction format that ultimately allows Elixir to be run in the browser and preserve the semantics of the language. Paul and Hans talk about the specific aspects of Lumen they are working on; the data flow and process of writing Elixir; and the compiler, interpreter and run-time functions involved. Joining in this conversation, you will also hear how they approached starting developing Lumen as a brand new compiler, researching, the aspects Paul wanted to tackle first, and when users can expect Lumen to be released. We also talk about the performance concerns they encountered along the way, the many reasons why Rust was their programming language of choice, and their thoughts on generic associated types in Rust. 
Key Points From This Episode:
• How Paul and Hans got introduced to Elixir and working for DockYard.
• An overview of what Lumen is and how it relates to WebAssembly. 
• WebAssembly code to run Elixir in the browser and preserve the semantics of the language. 
• The different aspects of the Lumen project that Paul and Hans are involved in. 
• The data flow and process when writing Elixir and how the compiler function features.
• Taking advantage of optimizations that can be performed on the code that is generated. 
• An explanation of the interpreter and run-time parts of the project. 
• How they approached the major task of starting with a brand new compiler. 
• The process of researching and why Paul wanted to get a frontend in place first. 
• The production readiness of Lumen and when they expect to release it. 
• Performance concerns they encountered during development. 
• The relevance of code size for the WebAssembly backend to be usable.  
• Why Rust was the best choice for building the compiler. 
• Using Elixir to generate a standard binary that can run on any machine. 
• A description of generic associated types in Rust and why they are controversial. 
Links Mentioned in Today’s Episode:
Paul Schoenfelder on LinkedIn — https://www.linkedin.com/in/gotbones/
Paul Schoenfelder on Twitter — https://twitter.com/gotbones?lang=en
Hans Elias Josephsen on Twitter — https://twitter.com/hansihe
DockYard — https://dockyard.com
Elixir — https://elixir-lang.org
WebAssembly — https://webassembly.org
Rust — https://www.rust-lang.org
JavaScript — https://www.javascript.com
C++ — http://www.cplusplus.com
SmartLogic — https://smartlogic.io/ 
 Special Guests: Hans Elias Josephsen and Paul Schoenfelder.
</description>
      <itunes:keywords>elixir, lumen, rust</itunes:keywords>
      <content:encoded><![CDATA[
        <p>In line with our current working-with-Elixir theme, today we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen from DockYard. The two have been working on Lumen, and in this episode, they discuss how this project is incorporated with WebAssembly, a binary instruction format that ultimately allows Elixir to be run in the browser and preserve the semantics of the language. Paul and Hans talk about the specific aspects of Lumen they are working on; the data flow and process of writing Elixir; and the compiler, interpreter and run-time functions involved. Joining in this conversation, you will also hear how they approached starting developing Lumen as a brand new compiler, researching, the aspects Paul wanted to tackle first, and when users can expect Lumen to be released. We also talk about the performance concerns they encountered along the way, the many reasons why Rust was their programming language of choice, and their thoughts on generic associated types in Rust. </p>

<p>Key Points From This Episode:</p>

<p>• How Paul and Hans got introduced to Elixir and working for DockYard.<br>
• An overview of what Lumen is and how it relates to WebAssembly. <br>
• WebAssembly code to run Elixir in the browser and preserve the semantics of the language. <br>
• The different aspects of the Lumen project that Paul and Hans are involved in. <br>
• The data flow and process when writing Elixir and how the compiler function features.<br>
• Taking advantage of optimizations that can be performed on the code that is generated. <br>
• An explanation of the interpreter and run-time parts of the project. <br>
• How they approached the major task of starting with a brand new compiler. <br>
• The process of researching and why Paul wanted to get a frontend in place first. <br>
• The production readiness of Lumen and when they expect to release it. <br>
• Performance concerns they encountered during development. <br>
• The relevance of code size for the WebAssembly backend to be usable.<br><br>
• Why Rust was the best choice for building the compiler. <br>
• Using Elixir to generate a standard binary that can run on any machine. <br>
• A description of generic associated types in Rust and why they are controversial. </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Paul Schoenfelder on LinkedIn — <a href="https://www.linkedin.com/in/gotbones/" rel="nofollow">https://www.linkedin.com/in/gotbones/</a><br>
Paul Schoenfelder on Twitter — <a href="https://twitter.com/gotbones?lang=en" rel="nofollow">https://twitter.com/gotbones?lang=en</a><br>
Hans Elias Josephsen on Twitter — <a href="https://twitter.com/hansihe" rel="nofollow">https://twitter.com/hansihe</a><br>
DockYard — <a href="https://dockyard.com" rel="nofollow">https://dockyard.com</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
WebAssembly — <a href="https://webassembly.org" rel="nofollow">https://webassembly.org</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
C++ — <a href="http://www.cplusplus.com" rel="nofollow">http://www.cplusplus.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In line with our current working-with-Elixir theme, today we’re talking about performance with Paul Schoenfelder and Hans Elias Josephsen from DockYard. The two have been working on Lumen, and in this episode, they discuss how this project is incorporated with WebAssembly, a binary instruction format that ultimately allows Elixir to be run in the browser and preserve the semantics of the language. Paul and Hans talk about the specific aspects of Lumen they are working on; the data flow and process of writing Elixir; and the compiler, interpreter and run-time functions involved. Joining in this conversation, you will also hear how they approached starting developing Lumen as a brand new compiler, researching, the aspects Paul wanted to tackle first, and when users can expect Lumen to be released. We also talk about the performance concerns they encountered along the way, the many reasons why Rust was their programming language of choice, and their thoughts on generic associated types in Rust. </p>

<p>Key Points From This Episode:</p>

<p>• How Paul and Hans got introduced to Elixir and working for DockYard.<br>
• An overview of what Lumen is and how it relates to WebAssembly. <br>
• WebAssembly code to run Elixir in the browser and preserve the semantics of the language. <br>
• The different aspects of the Lumen project that Paul and Hans are involved in. <br>
• The data flow and process when writing Elixir and how the compiler function features.<br>
• Taking advantage of optimizations that can be performed on the code that is generated. <br>
• An explanation of the interpreter and run-time parts of the project. <br>
• How they approached the major task of starting with a brand new compiler. <br>
• The process of researching and why Paul wanted to get a frontend in place first. <br>
• The production readiness of Lumen and when they expect to release it. <br>
• Performance concerns they encountered during development. <br>
• The relevance of code size for the WebAssembly backend to be usable.<br><br>
• Why Rust was the best choice for building the compiler. <br>
• Using Elixir to generate a standard binary that can run on any machine. <br>
• A description of generic associated types in Rust and why they are controversial. </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Paul Schoenfelder on LinkedIn — <a href="https://www.linkedin.com/in/gotbones/" rel="nofollow">https://www.linkedin.com/in/gotbones/</a><br>
Paul Schoenfelder on Twitter — <a href="https://twitter.com/gotbones?lang=en" rel="nofollow">https://twitter.com/gotbones?lang=en</a><br>
Hans Elias Josephsen on Twitter — <a href="https://twitter.com/hansihe" rel="nofollow">https://twitter.com/hansihe</a><br>
DockYard — <a href="https://dockyard.com" rel="nofollow">https://dockyard.com</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
WebAssembly — <a href="https://webassembly.org" rel="nofollow">https://webassembly.org</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
C++ — <a href="http://www.cplusplus.com" rel="nofollow">http://www.cplusplus.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Hans Elias Josephsen and Paul Schoenfelder.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sophie DeBenedetto and Meryl Dakin on Training and Building Elixir Projects Under Constraints</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e10-debenedetto-dakin</link>
      <guid isPermaLink="false">37d41249-7185-40c3-a4c3-3d761103ed16</guid>
      <pubDate>Thu, 30 Jan 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37d41249-7185-40c3-a4c3-3d761103ed16.mp3" length="65953230" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io talk about specific ways to develop new features while simultaneously managing team members and other projects. We discuss Elixir-specific challenges encountered while developing applications for 2U, how Elixir’s failure-first programming capability guided them, how they prepare for training workshops, and the productivity hacks that keep them focused and energized. </itunes:subtitle>
      <itunes:duration>45:12</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37d41249-7185-40c3-a4c3-3d761103ed16/cover.jpg" />
      <description>Today on the show we are joined by Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io to talk about the processes involved in training others and building Elixir projects. They share about studying and working together at the Flatiron School and what they do now in their respective new roles at Github and Frame.io. During their time at Flatiron, they worked on various projects, often collaborating with engineering teams from other companies and having to train these team members in Elixir. They talk about how they managed to develop new features while simultaneously onboarding new people and getting everyone on the same page. For them, the pair programming model had been most beneficial, and they discuss the habits and practices they implemented to encourage team members, optimize each learning experience, and share knowledge during training events. Sophie and Meryl also share the Elixir-specific challenges they encountered while developing applications for 2U, how Elixir’s failure-first programming capability guided them, how they prepare for training workshops, and the productivity hacks that keep them focused and energized. 
Key Points From This Episode:
• How Sophie and Meryl know each other from working and studying at the Flatiron School. 
• Frame.io as a tool that facilitates the communication between video editors and clients. 
• Meryl’s new role as a full-stack developer working with Elixir and React. 
• The projects they worked on at Flatiron and partnering with various companies like 2U. 
• Their secret to developing new features while also introducing new team members to Elixir.  
• The benefits of pair programming and teaching a programming language to others. 
• Reserving time to celebrate wins and knowledge share during training events. 
• Key lessons they learned from their collaboration with the 2U team. 
• Elixir-specific challenges during the development of the applications project with 2U. 
• How Elixir’s failure-first programming capability ultimately helps developers. 
• Sophie and Meryl’s experience using LiveView at Flatiron and the problems encountered. 
• The work that went into preparing for training workshops. 
• Advice for teaching someone who is not technical to become a working developer.
• Productivity hacks to stay focused and regain energy. 
Links Mentioned in Today’s Episode:
Sophie DeBenedetto on LinkedIn — https://www.linkedin.com/in/sophiedebenedetto/
Sophie DeBenedetto on Twitter — https://twitter.com/sm_debenedetto
Meryl Dakin in LinkedIn — https://www.linkedin.com/in/meryldakin/
Meryl Dakin on Twitter — https://twitter.com/meryldakin
Eric Oestrich — https://oestrich.org
Frame.io — https://frame.io
GitHub — https://github.com
Flatiron School — https://flatironschool.com
Elixir — https://elixir-lang.org
React — https://reactjs.org
2U — https://2u.com
Kubernetes — https://kubernetes.io
Ruby — https://www.ruby-lang.org/en/
Elixir School — https://elixirschool.com/en/
Drawing on the Right Side of the Brain — https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201
Etsy — https://www.etsy.com
EMPEX NYC Conference — https://empex.co/nyc.html
SmartLogic — https://smartlogic.io/ 
 Special Guests: Meryl Dakin and Sophie DeBenedetto.
</description>
      <itunes:keywords>elixir, 2U,Frame.io,github</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we are joined by Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io to talk about the processes involved in training others and building Elixir projects. They share about studying and working together at the Flatiron School and what they do now in their respective new roles at Github and Frame.io. During their time at Flatiron, they worked on various projects, often collaborating with engineering teams from other companies and having to train these team members in Elixir. They talk about how they managed to develop new features while simultaneously onboarding new people and getting everyone on the same page. For them, the pair programming model had been most beneficial, and they discuss the habits and practices they implemented to encourage team members, optimize each learning experience, and share knowledge during training events. Sophie and Meryl also share the Elixir-specific challenges they encountered while developing applications for 2U, how Elixir’s failure-first programming capability guided them, how they prepare for training workshops, and the productivity hacks that keep them focused and energized. </p>

<p>Key Points From This Episode:</p>

<p>• How Sophie and Meryl know each other from working and studying at the Flatiron School. <br>
• Frame.io as a tool that facilitates the communication between video editors and clients. <br>
• Meryl’s new role as a full-stack developer working with Elixir and React. <br>
• The projects they worked on at Flatiron and partnering with various companies like 2U. <br>
• Their secret to developing new features while also introducing new team members to Elixir.<br><br>
• The benefits of pair programming and teaching a programming language to others. <br>
• Reserving time to celebrate wins and knowledge share during training events. <br>
• Key lessons they learned from their collaboration with the 2U team. <br>
• Elixir-specific challenges during the development of the applications project with 2U. <br>
• How Elixir’s failure-first programming capability ultimately helps developers. <br>
• Sophie and Meryl’s experience using LiveView at Flatiron and the problems encountered. <br>
• The work that went into preparing for training workshops. <br>
• Advice for teaching someone who is not technical to become a working developer.<br>
• Productivity hacks to stay focused and regain energy. </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Sophie DeBenedetto on LinkedIn — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Sophie DeBenedetto on Twitter — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Meryl Dakin in LinkedIn — <a href="https://www.linkedin.com/in/meryldakin/" rel="nofollow">https://www.linkedin.com/in/meryldakin/</a><br>
Meryl Dakin on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Eric Oestrich — <a href="https://oestrich.org" rel="nofollow">https://oestrich.org</a><br>
Frame.io — <a href="https://frame.io" rel="nofollow">https://frame.io</a><br>
GitHub — <a href="https://github.com" rel="nofollow">https://github.com</a><br>
Flatiron School — <a href="https://flatironschool.com" rel="nofollow">https://flatironschool.com</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
React — <a href="https://reactjs.org" rel="nofollow">https://reactjs.org</a><br>
2U — <a href="https://2u.com" rel="nofollow">https://2u.com</a><br>
Kubernetes — <a href="https://kubernetes.io" rel="nofollow">https://kubernetes.io</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Drawing on the Right Side of the Brain — <a href="https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201" rel="nofollow">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>
Etsy — <a href="https://www.etsy.com" rel="nofollow">https://www.etsy.com</a><br>
EMPEX NYC Conference — <a href="https://empex.co/nyc.html" rel="nofollow">https://empex.co/nyc.html</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we are joined by Sophie DeBenedetto from GitHub and Meryl Dakin from Frame.io to talk about the processes involved in training others and building Elixir projects. They share about studying and working together at the Flatiron School and what they do now in their respective new roles at Github and Frame.io. During their time at Flatiron, they worked on various projects, often collaborating with engineering teams from other companies and having to train these team members in Elixir. They talk about how they managed to develop new features while simultaneously onboarding new people and getting everyone on the same page. For them, the pair programming model had been most beneficial, and they discuss the habits and practices they implemented to encourage team members, optimize each learning experience, and share knowledge during training events. Sophie and Meryl also share the Elixir-specific challenges they encountered while developing applications for 2U, how Elixir’s failure-first programming capability guided them, how they prepare for training workshops, and the productivity hacks that keep them focused and energized. </p>

<p>Key Points From This Episode:</p>

<p>• How Sophie and Meryl know each other from working and studying at the Flatiron School. <br>
• Frame.io as a tool that facilitates the communication between video editors and clients. <br>
• Meryl’s new role as a full-stack developer working with Elixir and React. <br>
• The projects they worked on at Flatiron and partnering with various companies like 2U. <br>
• Their secret to developing new features while also introducing new team members to Elixir.<br><br>
• The benefits of pair programming and teaching a programming language to others. <br>
• Reserving time to celebrate wins and knowledge share during training events. <br>
• Key lessons they learned from their collaboration with the 2U team. <br>
• Elixir-specific challenges during the development of the applications project with 2U. <br>
• How Elixir’s failure-first programming capability ultimately helps developers. <br>
• Sophie and Meryl’s experience using LiveView at Flatiron and the problems encountered. <br>
• The work that went into preparing for training workshops. <br>
• Advice for teaching someone who is not technical to become a working developer.<br>
• Productivity hacks to stay focused and regain energy. </p>

<p>Links Mentioned in Today’s Episode:</p>

<p>Sophie DeBenedetto on LinkedIn — <a href="https://www.linkedin.com/in/sophiedebenedetto/" rel="nofollow">https://www.linkedin.com/in/sophiedebenedetto/</a><br>
Sophie DeBenedetto on Twitter — <a href="https://twitter.com/sm_debenedetto" rel="nofollow">https://twitter.com/sm_debenedetto</a><br>
Meryl Dakin in LinkedIn — <a href="https://www.linkedin.com/in/meryldakin/" rel="nofollow">https://www.linkedin.com/in/meryldakin/</a><br>
Meryl Dakin on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Eric Oestrich — <a href="https://oestrich.org" rel="nofollow">https://oestrich.org</a><br>
Frame.io — <a href="https://frame.io" rel="nofollow">https://frame.io</a><br>
GitHub — <a href="https://github.com" rel="nofollow">https://github.com</a><br>
Flatiron School — <a href="https://flatironschool.com" rel="nofollow">https://flatironschool.com</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
React — <a href="https://reactjs.org" rel="nofollow">https://reactjs.org</a><br>
2U — <a href="https://2u.com" rel="nofollow">https://2u.com</a><br>
Kubernetes — <a href="https://kubernetes.io" rel="nofollow">https://kubernetes.io</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Drawing on the Right Side of the Brain — <a href="https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201" rel="nofollow">https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201</a><br>
Etsy — <a href="https://www.etsy.com" rel="nofollow">https://www.etsy.com</a><br>
EMPEX NYC Conference — <a href="https://empex.co/nyc.html" rel="nofollow">https://empex.co/nyc.html</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> </p><p>Special Guests: Meryl Dakin and Sophie DeBenedetto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brooklyn Zelenka on Functional Programming</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e9-zelenka</link>
      <guid isPermaLink="false">590ef7b4-3a91-4c74-9325-2568d7adecdb</guid>
      <pubDate>Thu, 23 Jan 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/590ef7b4-3a91-4c74-9325-2568d7adecdb.mp3" length="57610524" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In today’s episode we have one of our favorite recurring guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show in both the first and second seasons to speak about Elixir and functional programming. In those conversations, it came up that this topic is far from exhausted, and since Season 3's theme is working with Elixir, we thought it would be great to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir specifically though, but on functional programming more broadly.</itunes:subtitle>
      <itunes:duration>39:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/5/590ef7b4-3a91-4c74-9325-2568d7adecdb/cover.jpg" />
      <description>In today’s episode we have one of our favorite recurring guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show in both the first and second seasons to speak about Elixir and functional programming. In those conversations, it came up that this topic is far from exhausted, and since Season 3's theme is working with Elixir, we thought it would be great to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir specifically though, but on functional programming more broadly. Fission, her company which is working on developing next-generation hostless apps, actually uses Haskel, but Brooklyn has a ton of experience across the board. She gives us some great insights into what makes the functional versus OOP paradigm great and helps us to understand some of the inner workings of both worlds, talking about abstraction, application, data orientation, and more. Interestingly, Brooklyn does employ some imperative programming in her company through the use of Typescript, but uses a functional style to get around the context switch. We spend some time toward the end of the show digging deeper into macros, and Brooklyn helps to revise understandings of them as code which writes more code as well as clarifies the term 'homoiconic' as it relates to ASTs. Brooklyn covers a whole lot more today so hop on for a deep dive into functional programming with today's great guest.
Key Points From This Episode:
• Why Brooklyn uses FPE: it can be reused and reasoned about.
• Two things that functions provide: abstraction and application.
• Data orientation and hiding information: imperative vs functional paradigms.
• Understanding imperative programming: it’s less structured and hard to reason about.
• Challenges experienced imperative programmers face with functional programming.
• Differences between Elixir, Erlang, Haskel, Elm, and Clojure.
• Using Clojure: tradeoffs, distinctions, tooling, flexibility, and compatibility with Java.
• The language Brooklyn could use if only one existed: Racket.
• Bridging functional and imperative paradigms through disciplined use of style.
• Segfaults in Haskell related to its compatibility with lib C.
• How to use Musl instead of lib C by employing docker files.
• Algebraic types and why static types aren’t hindrances in functional languages.
• Preferences for tests or proofs and their role in finding types valuable.
• Macros as compile-time functions that are difficult to debug.
• A definition of a ‘homoiconic’: high-level syntax which represents the AST.
• What makes C macros different from Lisp ones.
• Architecture in Elixir and the need for a more user-friendly Haskell.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Brooklyn Zelenka on LinkedIn — https://www.linkedin.com/in/brooklynzelenka/
Fission — https://fission.codes/
Seven Languages in Seven Weeks — https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X
Chris Keathley — https://keathley.io/
Hackers and Painters — https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554
Paul Graham — http://www.paulgraham.com/
 Special Guest: Brooklyn Zelenka.
</description>
      <itunes:keywords>elixir, phoenix, fission</itunes:keywords>
      <content:encoded><![CDATA[
        <p>In today’s episode we have one of our favorite recurring guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show in both the first and second seasons to speak about Elixir and functional programming. In those conversations, it came up that this topic is far from exhausted, and since Season 3&#39;s theme is working with Elixir, we thought it would be great to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir specifically though, but on functional programming more broadly. Fission, her company which is working on developing next-generation hostless apps, actually uses Haskel, but Brooklyn has a ton of experience across the board. She gives us some great insights into what makes the functional versus OOP paradigm great and helps us to understand some of the inner workings of both worlds, talking about abstraction, application, data orientation, and more. Interestingly, Brooklyn does employ some imperative programming in her company through the use of Typescript, but uses a functional style to get around the context switch. We spend some time toward the end of the show digging deeper into macros, and Brooklyn helps to revise understandings of them as code which writes more code as well as clarifies the term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole lot more today so hop on for a deep dive into functional programming with today&#39;s great guest.</p>

<p><strong>Key Points From This Episode:</strong></p>

<p>• Why Brooklyn uses FPE: it can be reused and reasoned about.<br>
• Two things that functions provide: abstraction and application.<br>
• Data orientation and hiding information: imperative vs functional paradigms.<br>
• Understanding imperative programming: it’s less structured and hard to reason about.<br>
• Challenges experienced imperative programmers face with functional programming.<br>
• Differences between Elixir, Erlang, Haskel, Elm, and Clojure.<br>
• Using Clojure: tradeoffs, distinctions, tooling, flexibility, and compatibility with Java.<br>
• The language Brooklyn could use if only one existed: Racket.<br>
• Bridging functional and imperative paradigms through disciplined use of style.<br>
• Segfaults in Haskell related to its compatibility with lib C.<br>
• How to use Musl instead of lib C by employing docker files.<br>
• Algebraic types and why static types aren’t hindrances in functional languages.<br>
• Preferences for tests or proofs and their role in finding types valuable.<br>
• Macros as compile-time functions that are difficult to debug.<br>
• A definition of a ‘homoiconic’: high-level syntax which represents the AST.<br>
• What makes C macros different from Lisp ones.<br>
• Architecture in Elixir and the need for a more user-friendly Haskell.</p>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Brooklyn Zelenka on LinkedIn — <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Seven Languages in Seven Weeks — <a href="https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X" rel="nofollow">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Hackers and Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In today’s episode we have one of our favorite recurring guests, Brooklyn Zelenka, joining us once again! Brooklyn has been on the show in both the first and second seasons to speak about Elixir and functional programming. In those conversations, it came up that this topic is far from exhausted, and since Season 3&#39;s theme is working with Elixir, we thought it would be great to have Brooklyn on for a third time. Today, Brooklyn does not speak to Elixir specifically though, but on functional programming more broadly. Fission, her company which is working on developing next-generation hostless apps, actually uses Haskel, but Brooklyn has a ton of experience across the board. She gives us some great insights into what makes the functional versus OOP paradigm great and helps us to understand some of the inner workings of both worlds, talking about abstraction, application, data orientation, and more. Interestingly, Brooklyn does employ some imperative programming in her company through the use of Typescript, but uses a functional style to get around the context switch. We spend some time toward the end of the show digging deeper into macros, and Brooklyn helps to revise understandings of them as code which writes more code as well as clarifies the term &#39;homoiconic&#39; as it relates to ASTs. Brooklyn covers a whole lot more today so hop on for a deep dive into functional programming with today&#39;s great guest.</p>

<p><strong>Key Points From This Episode:</strong></p>

<p>• Why Brooklyn uses FPE: it can be reused and reasoned about.<br>
• Two things that functions provide: abstraction and application.<br>
• Data orientation and hiding information: imperative vs functional paradigms.<br>
• Understanding imperative programming: it’s less structured and hard to reason about.<br>
• Challenges experienced imperative programmers face with functional programming.<br>
• Differences between Elixir, Erlang, Haskel, Elm, and Clojure.<br>
• Using Clojure: tradeoffs, distinctions, tooling, flexibility, and compatibility with Java.<br>
• The language Brooklyn could use if only one existed: Racket.<br>
• Bridging functional and imperative paradigms through disciplined use of style.<br>
• Segfaults in Haskell related to its compatibility with lib C.<br>
• How to use Musl instead of lib C by employing docker files.<br>
• Algebraic types and why static types aren’t hindrances in functional languages.<br>
• Preferences for tests or proofs and their role in finding types valuable.<br>
• Macros as compile-time functions that are difficult to debug.<br>
• A definition of a ‘homoiconic’: high-level syntax which represents the AST.<br>
• What makes C macros different from Lisp ones.<br>
• Architecture in Elixir and the need for a more user-friendly Haskell.</p>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Brooklyn Zelenka on LinkedIn — <a href="https://www.linkedin.com/in/brooklynzelenka/" rel="nofollow">https://www.linkedin.com/in/brooklynzelenka/</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Seven Languages in Seven Weeks — <a href="https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X" rel="nofollow">https://www.amazon.com/Seven-Languages-Weeks-Programming-Programmers/dp/193435659X</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Hackers and Painters — <a href="https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554" rel="nofollow">https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554</a><br>
Paul Graham — <a href="http://www.paulgraham.com/" rel="nofollow">http://www.paulgraham.com/</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Bruce and Maggie Tate from Groxio on Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e8-groxio</link>
      <guid isPermaLink="false">f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b</guid>
      <pubDate>Thu, 16 Jan 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b.mp3" length="55994278" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Groxio is a great platform that allows programmers to learn new languages easily and broaden their horizons. Our guests today are the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics of what they do, from how they got into the Elixir world and founded Groxio to the conferences they run and the books they have published. </itunes:subtitle>
      <itunes:duration>38:04</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f54652e5-c7c3-4165-9c4b-0ddd2ca2d14b/cover.jpg" />
      <description>Groxio is a great platform that allows programmers to learn new languages easily and broaden their horizons. Our guests today are the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics of what they do, from how they got into the Elixir world and founded Groxio to the conferences they run and the books they have published. We also talk about the benefits of learning multiple languages and Bruce makes a strong argument for the influence that smaller coding languages have had on his Elixir skills. Maggie and Bruce open up about having a professional and personal partnership and how they manage their marriage and businesses side by side. To finish off we hear about all the exciting things to expect at the Lonestar Conference this year and how it is going to be even better than last year's!
Key Points From This Episode:
• Bruce and Maggie's background in Elixir and how they started Groxio. 
• What sets Groxio apart from similar technical education companies.  
• The inspiration that Bruce got from the Crystal and Pony languages.
• How curiosity and dopamine are linked; following new and interesting pathways. 
• Maggie and Bruce's personal and professional partnership and how they manage it. 
• The Elixir books that still need to be written and under-appreciated published ones.
• A guide to Bruce's books and which to read for particular applications. 
• Running a conference; the stressful and fun parts for Maggie and Bruce.
• Aspirations for the conferences and what to expect at this year's events. 
• Exciting speakers that will be appearing at the Lone Star Conference. 
• The controversy around the new Lone Star bat logo! 
• A few special plugs from our guests for things they are passionate about.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Bruce and Maggie Tate — https://grox.io/about
Bruce Tate on Twitter — https://twitter.com/redrapids
Maggie Tate on Twitter — https://twitter.com/gardenertate
Groxio — https://grox.io/
Gig City Elixir — https://www.gigcityelixir.com/
Lone Star Elixir — https://lonestarelixir.com/
Crystal — https://crystal-lang.org/
Pony — https://www.ponylang.io/
Joe Armstrong — https://joearms.github.io/
Elixir in Action — https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X
Designing Elixir Systems — https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/
Andrea Leopardi — https://confengine.com/user/andrea-leopardi
 Special Guests: Bruce Tate and Maggie Tate.
</description>
      <itunes:keywords>elixir, phoenix, groxio, lonestar elixir</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Groxio is a great platform that allows programmers to learn new languages easily and broaden their horizons. Our guests today are the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics of what they do, from how they got into the Elixir world and founded Groxio to the conferences they run and the books they have published. We also talk about the benefits of learning multiple languages and Bruce makes a strong argument for the influence that smaller coding languages have had on his Elixir skills. Maggie and Bruce open up about having a professional and personal partnership and how they manage their marriage and businesses side by side. To finish off we hear about all the exciting things to expect at the Lonestar Conference this year and how it is going to be even better than last year&#39;s!</p>

<p><strong>Key Points From This Episode:</strong></p>

<p>• Bruce and Maggie&#39;s background in Elixir and how they started Groxio. <br>
• What sets Groxio apart from similar technical education companies.<br><br>
• The inspiration that Bruce got from the Crystal and Pony languages.<br>
• How curiosity and dopamine are linked; following new and interesting pathways. <br>
• Maggie and Bruce&#39;s personal and professional partnership and how they manage it. <br>
• The Elixir books that still need to be written and under-appreciated published ones.<br>
• A guide to Bruce&#39;s books and which to read for particular applications. <br>
• Running a conference; the stressful and fun parts for Maggie and Bruce.<br>
• Aspirations for the conferences and what to expect at this year&#39;s events. <br>
• Exciting speakers that will be appearing at the Lone Star Conference. <br>
• The controversy around the new Lone Star bat logo! <br>
• A few special plugs from our guests for things they are passionate about.</p>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Bruce and Maggie Tate — <a href="https://grox.io/about" rel="nofollow">https://grox.io/about</a><br>
Bruce Tate on Twitter — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Maggie Tate on Twitter — <a href="https://twitter.com/gardenertate" rel="nofollow">https://twitter.com/gardenertate</a><br>
Groxio — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Gig City Elixir — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
Lone Star Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Crystal — <a href="https://crystal-lang.org/" rel="nofollow">https://crystal-lang.org/</a><br>
Pony — <a href="https://www.ponylang.io/" rel="nofollow">https://www.ponylang.io/</a><br>
Joe Armstrong — <a href="https://joearms.github.io/" rel="nofollow">https://joearms.github.io/</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>
Designing Elixir Systems — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>
Andrea Leopardi — <a href="https://confengine.com/user/andrea-leopardi" rel="nofollow">https://confengine.com/user/andrea-leopardi</a></p><p>Special Guests: Bruce Tate and Maggie Tate.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Groxio is a great platform that allows programmers to learn new languages easily and broaden their horizons. Our guests today are the team behind Groxio, Bruce and Maggie Tate! In our discussion, we cover the basics and the not so basics of what they do, from how they got into the Elixir world and founded Groxio to the conferences they run and the books they have published. We also talk about the benefits of learning multiple languages and Bruce makes a strong argument for the influence that smaller coding languages have had on his Elixir skills. Maggie and Bruce open up about having a professional and personal partnership and how they manage their marriage and businesses side by side. To finish off we hear about all the exciting things to expect at the Lonestar Conference this year and how it is going to be even better than last year&#39;s!</p>

<p><strong>Key Points From This Episode:</strong></p>

<p>• Bruce and Maggie&#39;s background in Elixir and how they started Groxio. <br>
• What sets Groxio apart from similar technical education companies.<br><br>
• The inspiration that Bruce got from the Crystal and Pony languages.<br>
• How curiosity and dopamine are linked; following new and interesting pathways. <br>
• Maggie and Bruce&#39;s personal and professional partnership and how they manage it. <br>
• The Elixir books that still need to be written and under-appreciated published ones.<br>
• A guide to Bruce&#39;s books and which to read for particular applications. <br>
• Running a conference; the stressful and fun parts for Maggie and Bruce.<br>
• Aspirations for the conferences and what to expect at this year&#39;s events. <br>
• Exciting speakers that will be appearing at the Lone Star Conference. <br>
• The controversy around the new Lone Star bat logo! <br>
• A few special plugs from our guests for things they are passionate about.</p>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Bruce and Maggie Tate — <a href="https://grox.io/about" rel="nofollow">https://grox.io/about</a><br>
Bruce Tate on Twitter — <a href="https://twitter.com/redrapids" rel="nofollow">https://twitter.com/redrapids</a><br>
Maggie Tate on Twitter — <a href="https://twitter.com/gardenertate" rel="nofollow">https://twitter.com/gardenertate</a><br>
Groxio — <a href="https://grox.io/" rel="nofollow">https://grox.io/</a><br>
Gig City Elixir — <a href="https://www.gigcityelixir.com/" rel="nofollow">https://www.gigcityelixir.com/</a><br>
Lone Star Elixir — <a href="https://lonestarelixir.com/" rel="nofollow">https://lonestarelixir.com/</a><br>
Crystal — <a href="https://crystal-lang.org/" rel="nofollow">https://crystal-lang.org/</a><br>
Pony — <a href="https://www.ponylang.io/" rel="nofollow">https://www.ponylang.io/</a><br>
Joe Armstrong — <a href="https://joearms.github.io/" rel="nofollow">https://joearms.github.io/</a><br>
Elixir in Action — <a href="https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X" rel="nofollow">https://www.amazon.com/Elixir-Action-Sa%C5%A1a-Juri-cacute/dp/161729201X</a><br>
Designing Elixir Systems — <a href="https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/" rel="nofollow">https://www.amazon.com/Designing-Elixir-Systems-OTP-Self-healing/dp/1680506617/</a><br>
Andrea Leopardi — <a href="https://confengine.com/user/andrea-leopardi" rel="nofollow">https://confengine.com/user/andrea-leopardi</a></p><p>Special Guests: Bruce Tate and Maggie Tate.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dan Ivovich from SmartLogic on Hiring and Training</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e7-ivovich</link>
      <guid isPermaLink="false">ea443f10-25a6-4570-9fe8-20e7f6624671</guid>
      <pubDate>Thu, 09 Jan 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ea443f10-25a6-4570-9fe8-20e7f6624671.mp3" length="33899406" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>On today's show, we are joined by Dan Ivovich from our team here at SmartLogic! Dan is the Director of Development Operations and has already been a guest and cohost a few times on the show. Today we are talking about hiring and training and his experience with these tasks at the company and especially concerning Elixir. </itunes:subtitle>
      <itunes:duration>22:39</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ea443f10-25a6-4570-9fe8-20e7f6624671/cover.jpg" />
      <description>On today's show, we are joined by Dan Ivovich from our team here at SmartLogic! Dan is the Director of Development Operations and has already been a guest and cohost a few times on the show. Today we are talking about hiring and training and his experience with these tasks at the company and especially concerning Elixir. We discuss the challenges Dan has faced in recruiting and the ways in which SmartLogic has lined up resumes and possible candidates through events and meetups. Dan explains some of the difficulties that are common for programmers transitioning into Elixir and how the company approaches the tasks of onboarding and ongoing support. We also get into Dan's favorite resources and tools for staying abreast of Elixir and his recommendations for practices to learn fast as a newcomer before he explains how he thinks about continual learning and expanding his own skillset. The conversation finishes with some thoughts and reflections on functional programming from our guest, so make sure to tune in for all of that and more!
Key Points From This Episode:
Dan's role at SmartLogic and how he leads the team. 
Recruiting new employees; collecting resumes and attending events. 
Challenges posed by recruiting good Elixir programmers and who to look for.  
Sticking points for people transitioning into Elixir from other languages. 
The stack at SmartLogic and the number of projects based in Elixir. 
Onboarding at the company; skills that are transferable to Elixir. 
Professional development and ongoing support for team members. 
Dan's favorite tools and resources for learning Elixir. 
Continual learning and Dan's strategies for growing his skillset.
A simple definition of functional programming and Dan's early experiences with it. 
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Dan Ivovich — https://www.danivovich.com/
Dan Ivovich on Twitter — https://twitter.com/danivovich
ElixirConf — https://elixirconf.com/events
Java — https://www.java.com/
Ruby — https://www.ruby-lang.org/
Python — https://www.python.org/
Rails — https://rubyonrails.org/
Rust — https://www.rust-lang.org/
GO — https://golang.org/
Twitch — https://www.twitch.tv/
Bruce Tate — https://codesync.global/speaker/bruce-tate/
Scala — https://www.scala-lang.org/ Special Guest: Dan Ivovich.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>On today&#39;s show, we are joined by Dan Ivovich from our team here at SmartLogic! Dan is the Director of Development Operations and has already been a guest and cohost a few times on the show. Today we are talking about hiring and training and his experience with these tasks at the company and especially concerning Elixir. We discuss the challenges Dan has faced in recruiting and the ways in which SmartLogic has lined up resumes and possible candidates through events and meetups. Dan explains some of the difficulties that are common for programmers transitioning into Elixir and how the company approaches the tasks of onboarding and ongoing support. We also get into Dan&#39;s favorite resources and tools for staying abreast of Elixir and his recommendations for practices to learn fast as a newcomer before he explains how he thinks about continual learning and expanding his own skillset. The conversation finishes with some thoughts and reflections on functional programming from our guest, so make sure to tune in for all of that and more!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Dan&#39;s role at SmartLogic and how he leads the team. </li>
<li>Recruiting new employees; collecting resumes and attending events. </li>
<li>Challenges posed by recruiting good Elixir programmers and who to look for.<br></li>
<li>Sticking points for people transitioning into Elixir from other languages. </li>
<li>The stack at SmartLogic and the number of projects based in Elixir. </li>
<li>Onboarding at the company; skills that are transferable to Elixir. </li>
<li>Professional development and ongoing support for team members. </li>
<li>Dan&#39;s favorite tools and resources for learning Elixir. </li>
<li>Continual learning and Dan&#39;s strategies for growing his skillset.</li>
<li>A simple definition of functional programming and Dan&#39;s early experiences with it. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Dan Ivovich — <a href="https://www.danivovich.com/" rel="nofollow">https://www.danivovich.com/</a><br>
Dan Ivovich on Twitter — <a href="https://twitter.com/danivovich" rel="nofollow">https://twitter.com/danivovich</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Java — <a href="https://www.java.com/" rel="nofollow">https://www.java.com/</a><br>
Ruby — <a href="https://www.ruby-lang.org/" rel="nofollow">https://www.ruby-lang.org/</a><br>
Python — <a href="https://www.python.org/" rel="nofollow">https://www.python.org/</a><br>
Rails — <a href="https://rubyonrails.org/" rel="nofollow">https://rubyonrails.org/</a><br>
Rust — <a href="https://www.rust-lang.org/" rel="nofollow">https://www.rust-lang.org/</a><br>
GO — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Twitch — <a href="https://www.twitch.tv/" rel="nofollow">https://www.twitch.tv/</a><br>
Bruce Tate — <a href="https://codesync.global/speaker/bruce-tate/" rel="nofollow">https://codesync.global/speaker/bruce-tate/</a><br>
Scala — <a href="https://www.scala-lang.org/" rel="nofollow">https://www.scala-lang.org/</a></p><p>Special Guest: Dan Ivovich.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>On today&#39;s show, we are joined by Dan Ivovich from our team here at SmartLogic! Dan is the Director of Development Operations and has already been a guest and cohost a few times on the show. Today we are talking about hiring and training and his experience with these tasks at the company and especially concerning Elixir. We discuss the challenges Dan has faced in recruiting and the ways in which SmartLogic has lined up resumes and possible candidates through events and meetups. Dan explains some of the difficulties that are common for programmers transitioning into Elixir and how the company approaches the tasks of onboarding and ongoing support. We also get into Dan&#39;s favorite resources and tools for staying abreast of Elixir and his recommendations for practices to learn fast as a newcomer before he explains how he thinks about continual learning and expanding his own skillset. The conversation finishes with some thoughts and reflections on functional programming from our guest, so make sure to tune in for all of that and more!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Dan&#39;s role at SmartLogic and how he leads the team. </li>
<li>Recruiting new employees; collecting resumes and attending events. </li>
<li>Challenges posed by recruiting good Elixir programmers and who to look for.<br></li>
<li>Sticking points for people transitioning into Elixir from other languages. </li>
<li>The stack at SmartLogic and the number of projects based in Elixir. </li>
<li>Onboarding at the company; skills that are transferable to Elixir. </li>
<li>Professional development and ongoing support for team members. </li>
<li>Dan&#39;s favorite tools and resources for learning Elixir. </li>
<li>Continual learning and Dan&#39;s strategies for growing his skillset.</li>
<li>A simple definition of functional programming and Dan&#39;s early experiences with it. </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Dan Ivovich — <a href="https://www.danivovich.com/" rel="nofollow">https://www.danivovich.com/</a><br>
Dan Ivovich on Twitter — <a href="https://twitter.com/danivovich" rel="nofollow">https://twitter.com/danivovich</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Java — <a href="https://www.java.com/" rel="nofollow">https://www.java.com/</a><br>
Ruby — <a href="https://www.ruby-lang.org/" rel="nofollow">https://www.ruby-lang.org/</a><br>
Python — <a href="https://www.python.org/" rel="nofollow">https://www.python.org/</a><br>
Rails — <a href="https://rubyonrails.org/" rel="nofollow">https://rubyonrails.org/</a><br>
Rust — <a href="https://www.rust-lang.org/" rel="nofollow">https://www.rust-lang.org/</a><br>
GO — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Twitch — <a href="https://www.twitch.tv/" rel="nofollow">https://www.twitch.tv/</a><br>
Bruce Tate — <a href="https://codesync.global/speaker/bruce-tate/" rel="nofollow">https://codesync.global/speaker/bruce-tate/</a><br>
Scala — <a href="https://www.scala-lang.org/" rel="nofollow">https://www.scala-lang.org/</a></p><p>Special Guest: Dan Ivovich.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Eric Meadows Jönsson on Hex and Working with Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e6-jonsson</link>
      <guid isPermaLink="false">ef0d105d-13f1-4803-8837-341f56782510</guid>
      <pubDate>Thu, 02 Jan 2020 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ef0d105d-13f1-4803-8837-341f56782510.mp3" length="54173956" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We are happy to be joined in this episode by Eric Meadows Jönsson, creator of the hexpm package manager, and an amazing resource who works tirelessly to build the Elixir community. Eric presently works at Brex and was part of the core team at Forza previously. In keeping with our current topic of all things working with Elixir, Eric takes a deep dive into the work he is doing to optimize various interfaces at Brex. </itunes:subtitle>
      <itunes:duration>37:10</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ef0d105d-13f1-4803-8837-341f56782510/cover.jpg" />
      <description>We are happy to be joined in this episode by Eric Meadows Jönsson, creator of the hexpm package manager, and an amazing resource who works tirelessly to build the Elixir community. Eric presently works at Brex and was part of the core team at Forza previously. In keeping with our current topic of all things working with Elixir, Eric takes a deep dive into the work he is doing to optimize various interfaces at Brex. He gives us the rundown on the static compile-time checking project he is working on, talking about his aims to build in different warnings and what we can expect from the new release in that regard. You’ll also hear about Eric’s journey learning Elixir and how he had to change his OOP mindset when he got introduced to functional programming at university. He shares the story behind hexpm and Mint, his thoughts about the future of Hex, and some of the processes around accessing the private repositories on its website. We also hear more about Eric’s hiring procedure while working at Forza, how he teaches functional programming to students at ElixirConf, and some of the major performance bottlenecks he experiences using Hex. Tap into the incredible resource that is Eric and hear more about how you can link with him online to learn further in the future by tuning in!
Key Points From This Episode:
Jose Valim, the Ecto library, and Eric’s journey with Elixir since 2012 at a coding camp.
Early-stage static compile-time checks that Eric is adding to the compiler at Brex.
Whether the static compile-time checks Eric is adding constitute a type system or not.
Static compile-time checks in the current system such as undefined function warnings.
Features of the new static compile-time check release: refactored checks, etc.
Currently, these checks happen at compile-time, or when Elixir compiles into the byte code.
Whether these checks will move into BEAM: currently it’s in Elixir and at an early stage.
The Erlang compiler already does type inference during compilation. 
Eric’s Erlang proficiency and why he had to brush up on it through using Elixir.
What makes Eric helpful with Hex: his debugging skills and availability to answer questions.
How Eric got started with Hex adding an intake for Git packages.
The story behind Hex regarding ties to Elixir and Devinus from Pool Boy.
Todd’s perspective on Eric as a smart and nice mentor who sleeps very little.
Changes that Eric sees happening in Elixir.
Hex will no longer support older Elixir versions so that it can enable better maintenance.
Another change will be a refactoring of the resolution version algorithm.
Security-related updates that Todd has been working on.
Private versus public repositories on the hex.pm website.
Hiring challenges at Forza and how Eric found the right team out of scarce people.
Eric looks for people who love being programmers and have a passion for learning.
Tactics Eric uses to train functional programming such as hosting ElixirConf workshops.
Important fundamentals in functional programming: using data structures to model data, etc.
Differences between functional and object-oriented programming: data vs classes.
The role of types in Eric coming to understand functional programming better.
Performance bottlenecks in Hex such as dependency resolution.
How every package manager/resolver compromises, exemplified by NPM and Rebar3.
Origins of Mint: wanting http2 support for Hex, and more.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Eric Meadows Jönsson on GitHub – https://github.com/ericmj
Eric Meadows Jönsson on Hexpm — https://hex.pm/users/ericmj
Brex — https://brex.com/
Todd Resudek on LinkedIn — https://www.linkedin.com/in/toddresudek
Justus Eapen on LinkedIn — https://www.linkedin.com/in/justuseapen/
Eric Oestreich on LinkedIn — https://www.linkedin.com/in/eric-oestreich-8b55aab/
hexpm on GitHub — https://github.com/hexpm
Google Summer of Code — https://summerofcode.withgoogle.com/
Jose Valim on GitHib — https://github.com/josevalim
Pool Boy — https://github.com/devinus/poolboy
Devin Alexander Torres — https://github.com/devinus
Voitech — https://www.voitech.biz/
Hex — https://hex.pm/
hexpm specifications — https://github.com/hexpm/specifications
Slack — https://slack.com
IRC —https://hexchat.github.io/
Forza — https://www.forzafootball.com/women
ElixirConf — https://elixirconf.com/events
Chalmers University — https://www.chalmers.se/en/Pages/default.aspx
Fastly — https://www.fastly.com/
NPM — https://www.npmjs.com/
Rebar 3 — https://github.com/erlang/rebar3
Mint — https://www.mint-lang.com/
Ruby Gems — https://rubygems.org/
Andrea Leopardi on GitHub — https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir
 Special Guest: Todd Resudek.
</description>
      <itunes:keywords>hex, elixir, mint</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We are happy to be joined in this episode by Eric Meadows Jönsson, creator of the hexpm package manager, and an amazing resource who works tirelessly to build the Elixir community. Eric presently works at Brex and was part of the core team at Forza previously. In keeping with our current topic of all things working with Elixir, Eric takes a deep dive into the work he is doing to optimize various interfaces at Brex. He gives us the rundown on the static compile-time checking project he is working on, talking about his aims to build in different warnings and what we can expect from the new release in that regard. You’ll also hear about Eric’s journey learning Elixir and how he had to change his OOP mindset when he got introduced to functional programming at university. He shares the story behind hexpm and Mint, his thoughts about the future of Hex, and some of the processes around accessing the private repositories on its website. We also hear more about Eric’s hiring procedure while working at Forza, how he teaches functional programming to students at ElixirConf, and some of the major performance bottlenecks he experiences using Hex. Tap into the incredible resource that is Eric and hear more about how you can link with him online to learn further in the future by tuning in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Jose Valim, the Ecto library, and Eric’s journey with Elixir since 2012 at a coding camp.</li>
<li>Early-stage static compile-time checks that Eric is adding to the compiler at Brex.</li>
<li>Whether the static compile-time checks Eric is adding constitute a type system or not.</li>
<li>Static compile-time checks in the current system such as undefined function warnings.</li>
<li>Features of the new static compile-time check release: refactored checks, etc.</li>
<li>Currently, these checks happen at compile-time, or when Elixir compiles into the byte code.</li>
<li>Whether these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>
<li>The Erlang compiler already does type inference during compilation. </li>
<li>Eric’s Erlang proficiency and why he had to brush up on it through using Elixir.</li>
<li>What makes Eric helpful with Hex: his debugging skills and availability to answer questions.</li>
<li>How Eric got started with Hex adding an intake for Git packages.</li>
<li>The story behind Hex regarding ties to Elixir and Devinus from Pool Boy.</li>
<li>Todd’s perspective on Eric as a smart and nice mentor who sleeps very little.</li>
<li>Changes that Eric sees happening in Elixir.</li>
<li>Hex will no longer support older Elixir versions so that it can enable better maintenance.</li>
<li>Another change will be a refactoring of the resolution version algorithm.</li>
<li>Security-related updates that Todd has been working on.</li>
<li>Private versus public repositories on the hex.pm website.</li>
<li>Hiring challenges at Forza and how Eric found the right team out of scarce people.</li>
<li>Eric looks for people who love being programmers and have a passion for learning.</li>
<li>Tactics Eric uses to train functional programming such as hosting ElixirConf workshops.</li>
<li>Important fundamentals in functional programming: using data structures to model data, etc.</li>
<li>Differences between functional and object-oriented programming: data vs classes.</li>
<li>The role of types in Eric coming to understand functional programming better.</li>
<li>Performance bottlenecks in Hex such as dependency resolution.</li>
<li>How every package manager/resolver compromises, exemplified by NPM and Rebar3.</li>
<li>Origins of Mint: wanting http2 support for Hex, and more.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Meadows Jönsson on GitHub – <a href="https://github.com/ericmj" rel="nofollow">https://github.com/ericmj</a><br>
Eric Meadows Jönsson on Hexpm — <a href="https://hex.pm/users/ericmj" rel="nofollow">https://hex.pm/users/ericmj</a><br>
Brex — <a href="https://brex.com/" rel="nofollow">https://brex.com/</a><br>
Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek" rel="nofollow">https://www.linkedin.com/in/toddresudek</a><br>
Justus Eapen on LinkedIn — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Eric Oestreich on LinkedIn — <a href="https://www.linkedin.com/in/eric-oestreich-8b55aab/" rel="nofollow">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>
hexpm on GitHub — <a href="https://github.com/hexpm" rel="nofollow">https://github.com/hexpm</a><br>
Google Summer of Code — <a href="https://summerofcode.withgoogle.com/" rel="nofollow">https://summerofcode.withgoogle.com/</a><br>
Jose Valim on GitHib — <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Pool Boy — <a href="https://github.com/devinus/poolboy" rel="nofollow">https://github.com/devinus/poolboy</a><br>
Devin Alexander Torres — <a href="https://github.com/devinus" rel="nofollow">https://github.com/devinus</a><br>
Voitech — <a href="https://www.voitech.biz/" rel="nofollow">https://www.voitech.biz/</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a><br>
hexpm specifications — <a href="https://github.com/hexpm/specifications" rel="nofollow">https://github.com/hexpm/specifications</a><br>
Slack — <a href="https://slack.com" rel="nofollow">https://slack.com</a><br>
IRC —<a href="https://hexchat.github.io/" rel="nofollow">https://hexchat.github.io/</a><br>
Forza — <a href="https://www.forzafootball.com/women" rel="nofollow">https://www.forzafootball.com/women</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Chalmers University — <a href="https://www.chalmers.se/en/Pages/default.aspx" rel="nofollow">https://www.chalmers.se/en/Pages/default.aspx</a><br>
Fastly — <a href="https://www.fastly.com/" rel="nofollow">https://www.fastly.com/</a><br>
NPM — <a href="https://www.npmjs.com/" rel="nofollow">https://www.npmjs.com/</a><br>
Rebar 3 — <a href="https://github.com/erlang/rebar3" rel="nofollow">https://github.com/erlang/rebar3</a><br>
Mint — <a href="https://www.mint-lang.com/" rel="nofollow">https://www.mint-lang.com/</a><br>
Ruby Gems — <a href="https://rubygems.org/" rel="nofollow">https://rubygems.org/</a><br>
Andrea Leopardi on GitHub — <a href="https://github.com/whatyouhide?tab=overview&org=ForzaElixir" rel="nofollow">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We are happy to be joined in this episode by Eric Meadows Jönsson, creator of the hexpm package manager, and an amazing resource who works tirelessly to build the Elixir community. Eric presently works at Brex and was part of the core team at Forza previously. In keeping with our current topic of all things working with Elixir, Eric takes a deep dive into the work he is doing to optimize various interfaces at Brex. He gives us the rundown on the static compile-time checking project he is working on, talking about his aims to build in different warnings and what we can expect from the new release in that regard. You’ll also hear about Eric’s journey learning Elixir and how he had to change his OOP mindset when he got introduced to functional programming at university. He shares the story behind hexpm and Mint, his thoughts about the future of Hex, and some of the processes around accessing the private repositories on its website. We also hear more about Eric’s hiring procedure while working at Forza, how he teaches functional programming to students at ElixirConf, and some of the major performance bottlenecks he experiences using Hex. Tap into the incredible resource that is Eric and hear more about how you can link with him online to learn further in the future by tuning in!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Jose Valim, the Ecto library, and Eric’s journey with Elixir since 2012 at a coding camp.</li>
<li>Early-stage static compile-time checks that Eric is adding to the compiler at Brex.</li>
<li>Whether the static compile-time checks Eric is adding constitute a type system or not.</li>
<li>Static compile-time checks in the current system such as undefined function warnings.</li>
<li>Features of the new static compile-time check release: refactored checks, etc.</li>
<li>Currently, these checks happen at compile-time, or when Elixir compiles into the byte code.</li>
<li>Whether these checks will move into BEAM: currently it’s in Elixir and at an early stage.</li>
<li>The Erlang compiler already does type inference during compilation. </li>
<li>Eric’s Erlang proficiency and why he had to brush up on it through using Elixir.</li>
<li>What makes Eric helpful with Hex: his debugging skills and availability to answer questions.</li>
<li>How Eric got started with Hex adding an intake for Git packages.</li>
<li>The story behind Hex regarding ties to Elixir and Devinus from Pool Boy.</li>
<li>Todd’s perspective on Eric as a smart and nice mentor who sleeps very little.</li>
<li>Changes that Eric sees happening in Elixir.</li>
<li>Hex will no longer support older Elixir versions so that it can enable better maintenance.</li>
<li>Another change will be a refactoring of the resolution version algorithm.</li>
<li>Security-related updates that Todd has been working on.</li>
<li>Private versus public repositories on the hex.pm website.</li>
<li>Hiring challenges at Forza and how Eric found the right team out of scarce people.</li>
<li>Eric looks for people who love being programmers and have a passion for learning.</li>
<li>Tactics Eric uses to train functional programming such as hosting ElixirConf workshops.</li>
<li>Important fundamentals in functional programming: using data structures to model data, etc.</li>
<li>Differences between functional and object-oriented programming: data vs classes.</li>
<li>The role of types in Eric coming to understand functional programming better.</li>
<li>Performance bottlenecks in Hex such as dependency resolution.</li>
<li>How every package manager/resolver compromises, exemplified by NPM and Rebar3.</li>
<li>Origins of Mint: wanting http2 support for Hex, and more.</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Eric Meadows Jönsson on GitHub – <a href="https://github.com/ericmj" rel="nofollow">https://github.com/ericmj</a><br>
Eric Meadows Jönsson on Hexpm — <a href="https://hex.pm/users/ericmj" rel="nofollow">https://hex.pm/users/ericmj</a><br>
Brex — <a href="https://brex.com/" rel="nofollow">https://brex.com/</a><br>
Todd Resudek on LinkedIn — <a href="https://www.linkedin.com/in/toddresudek" rel="nofollow">https://www.linkedin.com/in/toddresudek</a><br>
Justus Eapen on LinkedIn — <a href="https://www.linkedin.com/in/justuseapen/" rel="nofollow">https://www.linkedin.com/in/justuseapen/</a><br>
Eric Oestreich on LinkedIn — <a href="https://www.linkedin.com/in/eric-oestreich-8b55aab/" rel="nofollow">https://www.linkedin.com/in/eric-oestreich-8b55aab/</a><br>
hexpm on GitHub — <a href="https://github.com/hexpm" rel="nofollow">https://github.com/hexpm</a><br>
Google Summer of Code — <a href="https://summerofcode.withgoogle.com/" rel="nofollow">https://summerofcode.withgoogle.com/</a><br>
Jose Valim on GitHib — <a href="https://github.com/josevalim" rel="nofollow">https://github.com/josevalim</a><br>
Pool Boy — <a href="https://github.com/devinus/poolboy" rel="nofollow">https://github.com/devinus/poolboy</a><br>
Devin Alexander Torres — <a href="https://github.com/devinus" rel="nofollow">https://github.com/devinus</a><br>
Voitech — <a href="https://www.voitech.biz/" rel="nofollow">https://www.voitech.biz/</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a><br>
hexpm specifications — <a href="https://github.com/hexpm/specifications" rel="nofollow">https://github.com/hexpm/specifications</a><br>
Slack — <a href="https://slack.com" rel="nofollow">https://slack.com</a><br>
IRC —<a href="https://hexchat.github.io/" rel="nofollow">https://hexchat.github.io/</a><br>
Forza — <a href="https://www.forzafootball.com/women" rel="nofollow">https://www.forzafootball.com/women</a><br>
ElixirConf — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
Chalmers University — <a href="https://www.chalmers.se/en/Pages/default.aspx" rel="nofollow">https://www.chalmers.se/en/Pages/default.aspx</a><br>
Fastly — <a href="https://www.fastly.com/" rel="nofollow">https://www.fastly.com/</a><br>
NPM — <a href="https://www.npmjs.com/" rel="nofollow">https://www.npmjs.com/</a><br>
Rebar 3 — <a href="https://github.com/erlang/rebar3" rel="nofollow">https://github.com/erlang/rebar3</a><br>
Mint — <a href="https://www.mint-lang.com/" rel="nofollow">https://www.mint-lang.com/</a><br>
Ruby Gems — <a href="https://rubygems.org/" rel="nofollow">https://rubygems.org/</a><br>
Andrea Leopardi on GitHub — <a href="https://github.com/whatyouhide?tab=overview&org=ForzaElixir" rel="nofollow">https://github.com/whatyouhide?tab=overview&amp;org=ForzaElixir</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Chris Keathley on Performance and Functional Programming</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e5-keathley</link>
      <guid isPermaLink="false">b26cdd89-0d68-4466-9714-44c278932651</guid>
      <pubDate>Thu, 19 Dec 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/b26cdd89-0d68-4466-9714-44c278932651.mp3" length="51632917" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Our guest on the show today is blogger, software cowboy, and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of Elixir Outlaws, and writer of an assemblage of open-source software. He joins us today to speak about his new projects, his journey with functional programming, and what it is like to run Bleacher Report’s infrastructure on Elixir.</itunes:subtitle>
      <itunes:duration>35:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/b26cdd89-0d68-4466-9714-44c278932651/cover.jpg" />
      <description>Our guest on the show today is blogger, software cowboy, and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of Elixir Outlaws, and writer of an assemblage of open-source software. He joins us today to speak about his new projects, his journey with functional programming, and what it is like to run Bleacher Report’s infrastructure on Elixir. Chris gives us the lowdown on Norm, a data validating interface he recently completed, weighing in on how it is different from Dialyzer and what it can offer as far as scalability. We hear more about how Chris got introduced to Elixir through Haskell, why he wishes he learned Clojure sooner, and why Ruby on Rails isn’t going anywhere soon. 
Chris also gets into the tradeoffs these languages make to correlate with Erlang. He argues that Elixir can only be more widely adopted if more people build cool things in it, and then lays out some of its power in supporting Bleacher Report’s user interface. We pick Chris’s brain about what his company is trying to optimize at the moment and hear about their preference for capacity over speed, and their techniques for failing gracefully during traffic spikes. Chris tells us how much he loves Elixir due to its use of ETS and other functionality which allows Bleacher Report to keep running even above capacity. Finally, we hear about some of the observability practices that Bleacher Report uses when deploying new systems and predicting future spikes. Plug in for a great conversation and hear why you should get building with Elixir now!
Key Points From This Episode:
Chris’s explanation of Norm, his new software that describes data moving through a system.
Chris’s introduction to functional programming through learning Haskell, Clojure, and Elixir.
What makes a great functional language: immutable data and first class functions.
Things that make Clojure great, such as its thought out, holistic design.
Characteristics of Cons lists versus RRB trees, and what makes the latter better.
An acknowledgment of the necessity of the tradeoffs Elixir makes to interact with Erlang.
A little bit about the language Chris wrote to do the admin of code challenges in.
Why Ruby (on Rails) will not be replaced by Elixir due to commoditization that surrounds it.
An argument that Elixir can only be more widely adopted if more people build with it.
Why any language can build any program thus comparisons between them are arbitrary.
Where Chris sets the bar as to when something is performant.
Chris’s preference for high user capacity capability over speed of delivery at Bleacher Report.
Optimization projects at Bleacher Report such as using few boxes and handling traffic spikes.
Things Chris loves about Elixir such as its ability to deliver more from its boxes.
Elixir’s use of ETS and how Chris coded a complex problem in half a day using it.
How Chris detects spikes using time series, StatsD, and other observability tools.
Links Mentioned in Today’s Episode:
SmartLogic — https://smartlogic.io/ 
Chris Keathley on GitHub — https://github.com/keathley
Chris Keathley Blog — https://keathley.io/
ElixirConf 2019, Contracts for Building Reliable Systems presented by Chris Keathley — https://www.youtube.com/watch?v=tpo3JUyVIjQ
The Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — https://www.youtube.com/watch?v=ghpIiQKRfQ4
Bleacher Report — https://bleacherreport.com/
Elixir Outlaws Podcast — https://elixiroutlaws.com/
Norm — https://github.com/keathley/norm
Dialyzer — http://erlang.org/doc/man/dialyzer.html
Haskell — https://www.haskell.org/
Clojure — https://clojure.org/
Erlang — https://www.erlang.org/
Chris Okasaki — https://github.com/chrisokasaki
Discord — https://discordapp.com/company
StatsD — https://www.datadoghq.com/blog/statsd/
Prometheus — https://prometheus.io/
Opentracing — https://opentracing.io/ Special Guest: Chris Keathley.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Our guest on the show today is blogger, software cowboy, and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of Elixir Outlaws, and writer of an assemblage of open-source software. He joins us today to speak about his new projects, his journey with functional programming, and what it is like to run Bleacher Report’s infrastructure on Elixir. Chris gives us the lowdown on Norm, a data validating interface he recently completed, weighing in on how it is different from Dialyzer and what it can offer as far as scalability. We hear more about how Chris got introduced to Elixir through Haskell, why he wishes he learned Clojure sooner, and why Ruby on Rails isn’t going anywhere soon. </p>

<p>Chris also gets into the tradeoffs these languages make to correlate with Erlang. He argues that Elixir can only be more widely adopted if more people build cool things in it, and then lays out some of its power in supporting Bleacher Report’s user interface. We pick Chris’s brain about what his company is trying to optimize at the moment and hear about their preference for capacity over speed, and their techniques for failing gracefully during traffic spikes. Chris tells us how much he loves Elixir due to its use of ETS and other functionality which allows Bleacher Report to keep running even above capacity. Finally, we hear about some of the observability practices that Bleacher Report uses when deploying new systems and predicting future spikes. Plug in for a great conversation and hear why you should get building with Elixir now!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Chris’s explanation of Norm, his new software that describes data moving through a system.</li>
<li>Chris’s introduction to functional programming through learning Haskell, Clojure, and Elixir.</li>
<li>What makes a great functional language: immutable data and first class functions.</li>
<li>Things that make Clojure great, such as its thought out, holistic design.</li>
<li>Characteristics of Cons lists versus RRB trees, and what makes the latter better.</li>
<li>An acknowledgment of the necessity of the tradeoffs Elixir makes to interact with Erlang.</li>
<li>A little bit about the language Chris wrote to do the admin of code challenges in.</li>
<li>Why Ruby (on Rails) will not be replaced by Elixir due to commoditization that surrounds it.</li>
<li>An argument that Elixir can only be more widely adopted if more people build with it.</li>
<li>Why any language can build any program thus comparisons between them are arbitrary.</li>
<li>Where Chris sets the bar as to when something is performant.</li>
<li>Chris’s preference for high user capacity capability over speed of delivery at Bleacher Report.</li>
<li>Optimization projects at Bleacher Report such as using few boxes and handling traffic spikes.</li>
<li>Things Chris loves about Elixir such as its ability to deliver more from its boxes.</li>
<li>Elixir’s use of ETS and how Chris coded a complex problem in half a day using it.</li>
<li>How Chris detects spikes using time series, StatsD, and other observability tools.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on GitHub — <a href="https://github.com/keathley" rel="nofollow">https://github.com/keathley</a><br>
Chris Keathley Blog — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
ElixirConf 2019, Contracts for Building Reliable Systems presented by Chris Keathley — <a href="https://www.youtube.com/watch?v=tpo3JUyVIjQ" rel="nofollow">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>
The Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href="https://www.youtube.com/watch?v=ghpIiQKRfQ4" rel="nofollow">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Norm — <a href="https://github.com/keathley/norm" rel="nofollow">https://github.com/keathley/norm</a><br>
Dialyzer — <a href="http://erlang.org/doc/man/dialyzer.html" rel="nofollow">http://erlang.org/doc/man/dialyzer.html</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Chris Okasaki — <a href="https://github.com/chrisokasaki" rel="nofollow">https://github.com/chrisokasaki</a><br>
Discord — <a href="https://discordapp.com/company" rel="nofollow">https://discordapp.com/company</a><br>
StatsD — <a href="https://www.datadoghq.com/blog/statsd/" rel="nofollow">https://www.datadoghq.com/blog/statsd/</a><br>
Prometheus — <a href="https://prometheus.io/" rel="nofollow">https://prometheus.io/</a><br>
Opentracing — <a href="https://opentracing.io/" rel="nofollow">https://opentracing.io/</a></p><p>Special Guest: Chris Keathley.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Our guest on the show today is blogger, software cowboy, and podcast host Chris Keathley. Chris is a senior engineer at Bleacher Report, co-host of Elixir Outlaws, and writer of an assemblage of open-source software. He joins us today to speak about his new projects, his journey with functional programming, and what it is like to run Bleacher Report’s infrastructure on Elixir. Chris gives us the lowdown on Norm, a data validating interface he recently completed, weighing in on how it is different from Dialyzer and what it can offer as far as scalability. We hear more about how Chris got introduced to Elixir through Haskell, why he wishes he learned Clojure sooner, and why Ruby on Rails isn’t going anywhere soon. </p>

<p>Chris also gets into the tradeoffs these languages make to correlate with Erlang. He argues that Elixir can only be more widely adopted if more people build cool things in it, and then lays out some of its power in supporting Bleacher Report’s user interface. We pick Chris’s brain about what his company is trying to optimize at the moment and hear about their preference for capacity over speed, and their techniques for failing gracefully during traffic spikes. Chris tells us how much he loves Elixir due to its use of ETS and other functionality which allows Bleacher Report to keep running even above capacity. Finally, we hear about some of the observability practices that Bleacher Report uses when deploying new systems and predicting future spikes. Plug in for a great conversation and hear why you should get building with Elixir now!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Chris’s explanation of Norm, his new software that describes data moving through a system.</li>
<li>Chris’s introduction to functional programming through learning Haskell, Clojure, and Elixir.</li>
<li>What makes a great functional language: immutable data and first class functions.</li>
<li>Things that make Clojure great, such as its thought out, holistic design.</li>
<li>Characteristics of Cons lists versus RRB trees, and what makes the latter better.</li>
<li>An acknowledgment of the necessity of the tradeoffs Elixir makes to interact with Erlang.</li>
<li>A little bit about the language Chris wrote to do the admin of code challenges in.</li>
<li>Why Ruby (on Rails) will not be replaced by Elixir due to commoditization that surrounds it.</li>
<li>An argument that Elixir can only be more widely adopted if more people build with it.</li>
<li>Why any language can build any program thus comparisons between them are arbitrary.</li>
<li>Where Chris sets the bar as to when something is performant.</li>
<li>Chris’s preference for high user capacity capability over speed of delivery at Bleacher Report.</li>
<li>Optimization projects at Bleacher Report such as using few boxes and handling traffic spikes.</li>
<li>Things Chris loves about Elixir such as its ability to deliver more from its boxes.</li>
<li>Elixir’s use of ETS and how Chris coded a complex problem in half a day using it.</li>
<li>How Chris detects spikes using time series, StatsD, and other observability tools.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Chris Keathley on GitHub — <a href="https://github.com/keathley" rel="nofollow">https://github.com/keathley</a><br>
Chris Keathley Blog — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
ElixirConf 2019, Contracts for Building Reliable Systems presented by Chris Keathley — <a href="https://www.youtube.com/watch?v=tpo3JUyVIjQ" rel="nofollow">https://www.youtube.com/watch?v=tpo3JUyVIjQ</a><br>
The Big Elixir 2019 - Keynote: Adoption - Brian Cardarella — <a href="https://www.youtube.com/watch?v=ghpIiQKRfQ4" rel="nofollow">https://www.youtube.com/watch?v=ghpIiQKRfQ4</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a><br>
Norm — <a href="https://github.com/keathley/norm" rel="nofollow">https://github.com/keathley/norm</a><br>
Dialyzer — <a href="http://erlang.org/doc/man/dialyzer.html" rel="nofollow">http://erlang.org/doc/man/dialyzer.html</a><br>
Haskell — <a href="https://www.haskell.org/" rel="nofollow">https://www.haskell.org/</a><br>
Clojure — <a href="https://clojure.org/" rel="nofollow">https://clojure.org/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Chris Okasaki — <a href="https://github.com/chrisokasaki" rel="nofollow">https://github.com/chrisokasaki</a><br>
Discord — <a href="https://discordapp.com/company" rel="nofollow">https://discordapp.com/company</a><br>
StatsD — <a href="https://www.datadoghq.com/blog/statsd/" rel="nofollow">https://www.datadoghq.com/blog/statsd/</a><br>
Prometheus — <a href="https://prometheus.io/" rel="nofollow">https://prometheus.io/</a><br>
Opentracing — <a href="https://opentracing.io/" rel="nofollow">https://opentracing.io/</a></p><p>Special Guest: Chris Keathley.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Justin Schneck &amp; Frank Hunleth on Nerves and Performance – Working with Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e4-schneck-hunleth-nerves</link>
      <guid isPermaLink="false">2be72d78-cfcc-46e2-a0a5-753fc8a0c280</guid>
      <pubDate>Thu, 12 Dec 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2be72d78-cfcc-46e2-a0a5-753fc8a0c280.mp3" length="56833898" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves with them, covering themes of performance, problem-solving, transitioning to hardware, and breakthroughs in the field. We begin with a conversation on how Elixir handles performance issues on the range of devices they support and Frank gets into how the team solved an early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes for today are ironing out the kinks in the system registry model and merging Erlang and into hard real-time. After squeezing some information out of the guys about their use of ugly code hacks we get into some visionary decisions as well as things the team wished they could have done differently at Elixir (see the release of the new networking stack). Finally, we end off with what Frank and Justin are excited about as far as developments in the Nerves community, so be sure to plug into this one!</itunes:subtitle>
      <itunes:duration>38:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2be72d78-cfcc-46e2-a0a5-753fc8a0c280/cover.jpg" />
      <description>On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves with them, covering themes of performance, problem-solving, transitioning to hardware, and breakthroughs in the field. We begin with a conversation on how Elixir handles performance issues on the range of devices they support and Frank gets into how the team solved an early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes for today are ironing out the kinks in the system registry model and merging Erlang and into hard real-time. After squeezing some information out of the guys about their use of ugly code hacks we get into some visionary decisions as well as things the team wished they could have done differently at Elixir (see the release of the new networking stack). Finally, we end off with what Frank and Justin are excited about as far as developments in the Nerves community, so be sure to plug into this one!
**Key Points From This Episode:
What Justin did in Tokyo, from soaking in hot springs to debugging in Kanji.
An explanation of The Erlang Ecosystem Foundation, an embedded systems working group.
The use of the VintageNet library for setting up multi-hold nerve networks.
How Elixir handles performance issues on the range of devices they support.
A breakdown of troubleshooting processes as far as acceleration with FPGAs.
Issues with dependencies that occur when starting a network node on a Nerves device.
How Elixir is trying to evolve past the system registry model.
Identifying the challenge of reconfiguring early boot time which Elixir is facing.
How Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.
Which situations require hardware when Elixir is too slow, such as video encoding.
Japanese research into GPU, FPGA and SIMD optimization involving wrapping code blocks.
Merging Erlang which is soft real-time into hard real-time.
Examples of ugly but fast code hacks in Elixir.
Hacks and the pitfalls of system registry such as returning to a prompt when an app crashes.
Things Elixir would have done differently in working with Nerves if could they rewind time.
Why releasing a new networking stack means Elixir could have done things differently.
Lessons Justin and Frank learned moving from OTP to functional programming at Elixir.
Exciting new developments and releases in the Nerves community.
Links Mentioned in Today’s Episode:
Nerves Project — https://nerves-project.org/
SmartLogic — https://smartlogic.io/ 
ElixirConf US — https://elixirconf.com/events
The Erlang Ecosystem Foundation — https://erlef.org/
GRiSP — https://www.grisp.org/
Vintage Net — https://github.com/nerves-networking/vintage_net
Joe Armstrong — https://joearms.github.io/
Erlang — https://www.erlang.org/
Linux — https://www.linux.org/ Special Guest: Frank Hunleth.
</description>
      <itunes:keywords>elixir, nerves, erlang</itunes:keywords>
      <content:encoded><![CDATA[
        <p>On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves with them, covering themes of performance, problem-solving, transitioning to hardware, and breakthroughs in the field. We begin with a conversation on how Elixir handles performance issues on the range of devices they support and Frank gets into how the team solved an early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes for today are ironing out the kinks in the system registry model and merging Erlang and into hard real-time. After squeezing some information out of the guys about their use of ugly code hacks we get into some visionary decisions as well as things the team wished they could have done differently at Elixir (see the release of the new networking stack). Finally, we end off with what Frank and Justin are excited about as far as developments in the Nerves community, so be sure to plug into this one!</p>

<p>**Key Points From This Episode:</p>

<ul>
<li>What Justin did in Tokyo, from soaking in hot springs to debugging in Kanji.</li>
<li>An explanation of The Erlang Ecosystem Foundation, an embedded systems working group.</li>
<li>The use of the VintageNet library for setting up multi-hold nerve networks.</li>
<li>How Elixir handles performance issues on the range of devices they support.</li>
<li>A breakdown of troubleshooting processes as far as acceleration with FPGAs.</li>
<li>Issues with dependencies that occur when starting a network node on a Nerves device.</li>
<li>How Elixir is trying to evolve past the system registry model.</li>
<li>Identifying the challenge of reconfiguring early boot time which Elixir is facing.</li>
<li>How Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>
<li>Which situations require hardware when Elixir is too slow, such as video encoding.</li>
<li>Japanese research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>
<li>Merging Erlang which is soft real-time into hard real-time.</li>
<li>Examples of ugly but fast code hacks in Elixir.</li>
<li>Hacks and the pitfalls of system registry such as returning to a prompt when an app crashes.</li>
<li>Things Elixir would have done differently in working with Nerves if could they rewind time.</li>
<li>Why releasing a new networking stack means Elixir could have done things differently.</li>
<li>Lessons Justin and Frank learned moving from OTP to functional programming at Elixir.</li>
<li>Exciting new developments and releases in the Nerves community.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Nerves Project — <a href="https://nerves-project.org/" rel="nofollow">https://nerves-project.org/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf US — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
The Erlang Ecosystem Foundation — <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
GRiSP — <a href="https://www.grisp.org/" rel="nofollow">https://www.grisp.org/</a><br>
Vintage Net — <a href="https://github.com/nerves-networking/vintage_net" rel="nofollow">https://github.com/nerves-networking/vintage_net</a><br>
Joe Armstrong — <a href="https://joearms.github.io/" rel="nofollow">https://joearms.github.io/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Linux — <a href="https://www.linux.org/" rel="nofollow">https://www.linux.org/</a></p><p>Special Guest: Frank Hunleth.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>On today’s show, we welcome Justin Schneck and Frank Hunleth, luminaries from the Nerves team! We take a dive into the world of Nerves with them, covering themes of performance, problem-solving, transitioning to hardware, and breakthroughs in the field. We begin with a conversation on how Elixir handles performance issues on the range of devices they support and Frank gets into how the team solved an early boot time discrepancy between a PC and a Raspberry Pi board. Other big themes for today are ironing out the kinks in the system registry model and merging Erlang and into hard real-time. After squeezing some information out of the guys about their use of ugly code hacks we get into some visionary decisions as well as things the team wished they could have done differently at Elixir (see the release of the new networking stack). Finally, we end off with what Frank and Justin are excited about as far as developments in the Nerves community, so be sure to plug into this one!</p>

<p>**Key Points From This Episode:</p>

<ul>
<li>What Justin did in Tokyo, from soaking in hot springs to debugging in Kanji.</li>
<li>An explanation of The Erlang Ecosystem Foundation, an embedded systems working group.</li>
<li>The use of the VintageNet library for setting up multi-hold nerve networks.</li>
<li>How Elixir handles performance issues on the range of devices they support.</li>
<li>A breakdown of troubleshooting processes as far as acceleration with FPGAs.</li>
<li>Issues with dependencies that occur when starting a network node on a Nerves device.</li>
<li>How Elixir is trying to evolve past the system registry model.</li>
<li>Identifying the challenge of reconfiguring early boot time which Elixir is facing.</li>
<li>How Elixir solved a load time discrepancy between a PC and the Raspberry Pi board.</li>
<li>Which situations require hardware when Elixir is too slow, such as video encoding.</li>
<li>Japanese research into GPU, FPGA and SIMD optimization involving wrapping code blocks.</li>
<li>Merging Erlang which is soft real-time into hard real-time.</li>
<li>Examples of ugly but fast code hacks in Elixir.</li>
<li>Hacks and the pitfalls of system registry such as returning to a prompt when an app crashes.</li>
<li>Things Elixir would have done differently in working with Nerves if could they rewind time.</li>
<li>Why releasing a new networking stack means Elixir could have done things differently.</li>
<li>Lessons Justin and Frank learned moving from OTP to functional programming at Elixir.</li>
<li>Exciting new developments and releases in the Nerves community.</li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Nerves Project — <a href="https://nerves-project.org/" rel="nofollow">https://nerves-project.org/</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
ElixirConf US — <a href="https://elixirconf.com/events" rel="nofollow">https://elixirconf.com/events</a><br>
The Erlang Ecosystem Foundation — <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
GRiSP — <a href="https://www.grisp.org/" rel="nofollow">https://www.grisp.org/</a><br>
Vintage Net — <a href="https://github.com/nerves-networking/vintage_net" rel="nofollow">https://github.com/nerves-networking/vintage_net</a><br>
Joe Armstrong — <a href="https://joearms.github.io/" rel="nofollow">https://joearms.github.io/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Linux — <a href="https://www.linux.org/" rel="nofollow">https://www.linux.org/</a></p><p>Special Guest: Frank Hunleth.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brad Traylor of Podium on Training &amp; Hiring – Working with Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e3-brad-traylor</link>
      <guid isPermaLink="false">f816f14f-9675-4d38-a622-24dd6eb29cd1</guid>
      <pubDate>Thu, 05 Dec 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f816f14f-9675-4d38-a622-24dd6eb29cd1.mp3" length="40086893" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Our theme this season is working with Elixir, and joining in the conversation today is Brad Traylor from Podium. Brad shares his expertise in hiring and training for Podium, a position he is passionate about since it gives him the opportunity to work on the people and tech side of things. We begin by hearing a bit of Brad’s background, when and how he was first introduced to Elixir and the standout qualities that attracted him to Podium. He discusses the hiring process, including what he looks for in an engineer, why they don’t recruit much but rather work with referrals, the step-by-step of onboarding new devs and the resources he recommends to anyone in the industry.</itunes:subtitle>
      <itunes:duration>27:21</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f816f14f-9675-4d38-a622-24dd6eb29cd1/cover.jpg" />
      <description>Our theme this season is working with Elixir, and joining in the conversation today is Brad Traylor from Podium. Brad shares his expertise in hiring and training for Podium, a position he is passionate about since it gives him the opportunity to work on the people and tech side of things. We begin by hearing a bit of Brad’s background, when and how he was first introduced to Elixir and the standout qualities that attracted him to Podium. He discusses the hiring process, including what he looks for in an engineer, why they don’t recruit much but rather work with referrals, the step-by-step of onboarding new devs and the resources he recommends to anyone in the industry. Another great talk with a stand-up guy — be sure to tune in! 
Key Points From This Episode:
When Brad was first exposed to Elixir and how he became the engineering manager. 
Searching for rocket ship startups and what specifically drew him to Podium. 
Having a desire to work with the people and the tech side of the industry. 
The growth trajectory of Podium from a management perspective. 
Hiring predominantly from referrals rather than recruiting developers. 
The biggest challenge with hiring Elixir devs, including the scarcity of good ones! 
Two things Brad looks for when hiring engineers: the drive to learn and a cultural fit. 
The benefit of hiring younger developers. 
Thoughts on training different languages and adding them to Podium’s tech stack.
An overview of the typical onboarding process for a new engineer.
Elixir 101 and other ways they keep training and refining the skills of developers.  
Resources that Brad has recently learned and those he always recommends to devs. 
**Links Mentioned in Today’s Episode:
Brad Traylor on LinkedIn — https://www.linkedin.com/in/bradtraylor
Brad Traylor on Twitter — https://twitter.com/btjordan23
Podium — https://www.podium.com
SmartLogic — https://smartlogic.io/ 
Elixir — https://elixir-lang.org
University of Michigan — https://umich.edu
Java — https://www.java.com/en/
Python — https://www.python.org
Rust — https://www.rust-lang.org
Ruby — https://www.ruby-lang.org/en/
TypeScript — https://www.typescriptlang.org
Pragmatic Institute — https://www.pragmaticinstitute.com/courses
The Manager’s Path — https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F
Camile Fournier — https://twitter.com/skamille
 Special Guest: Brad Traylor.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Our theme this season is working with Elixir, and joining in the conversation today is Brad Traylor from Podium. Brad shares his expertise in hiring and training for Podium, a position he is passionate about since it gives him the opportunity to work on the people and tech side of things. We begin by hearing a bit of Brad’s background, when and how he was first introduced to Elixir and the standout qualities that attracted him to Podium. He discusses the hiring process, including what he looks for in an engineer, why they don’t recruit much but rather work with referrals, the step-by-step of onboarding new devs and the resources he recommends to anyone in the industry. Another great talk with a stand-up guy — be sure to tune in! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>When Brad was first exposed to Elixir and how he became the engineering manager. </li>
<li>Searching for rocket ship startups and what specifically drew him to Podium. </li>
<li>Having a desire to work with the people and the tech side of the industry. </li>
<li>The growth trajectory of Podium from a management perspective. </li>
<li>Hiring predominantly from referrals rather than recruiting developers. </li>
<li>The biggest challenge with hiring Elixir devs, including the scarcity of good ones! </li>
<li>Two things Brad looks for when hiring engineers: the drive to learn and a cultural fit. </li>
<li>The benefit of hiring younger developers. </li>
<li>Thoughts on training different languages and adding them to Podium’s tech stack.</li>
<li>An overview of the typical onboarding process for a new engineer.</li>
<li>Elixir 101 and other ways they keep training and refining the skills of developers.<br></li>
<li>Resources that Brad has recently learned and those he always recommends to devs. </li>
</ul>

<p>**Links Mentioned in Today’s Episode:</p>

<p>Brad Traylor on LinkedIn — <a href="https://www.linkedin.com/in/bradtraylor" rel="nofollow">https://www.linkedin.com/in/bradtraylor</a><br>
Brad Traylor on Twitter — <a href="https://twitter.com/btjordan23" rel="nofollow">https://twitter.com/btjordan23</a><br>
Podium — <a href="https://www.podium.com" rel="nofollow">https://www.podium.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
University of Michigan — <a href="https://umich.edu" rel="nofollow">https://umich.edu</a><br>
Java — <a href="https://www.java.com/en/" rel="nofollow">https://www.java.com/en/</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
TypeScript — <a href="https://www.typescriptlang.org" rel="nofollow">https://www.typescriptlang.org</a><br>
Pragmatic Institute — <a href="https://www.pragmaticinstitute.com/courses" rel="nofollow">https://www.pragmaticinstitute.com/courses</a><br>
The Manager’s Path — <a href="https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F" rel="nofollow">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>
Camile Fournier — <a href="https://twitter.com/skamille" rel="nofollow">https://twitter.com/skamille</a></p><p>Special Guest: Brad Traylor.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Our theme this season is working with Elixir, and joining in the conversation today is Brad Traylor from Podium. Brad shares his expertise in hiring and training for Podium, a position he is passionate about since it gives him the opportunity to work on the people and tech side of things. We begin by hearing a bit of Brad’s background, when and how he was first introduced to Elixir and the standout qualities that attracted him to Podium. He discusses the hiring process, including what he looks for in an engineer, why they don’t recruit much but rather work with referrals, the step-by-step of onboarding new devs and the resources he recommends to anyone in the industry. Another great talk with a stand-up guy — be sure to tune in! </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>When Brad was first exposed to Elixir and how he became the engineering manager. </li>
<li>Searching for rocket ship startups and what specifically drew him to Podium. </li>
<li>Having a desire to work with the people and the tech side of the industry. </li>
<li>The growth trajectory of Podium from a management perspective. </li>
<li>Hiring predominantly from referrals rather than recruiting developers. </li>
<li>The biggest challenge with hiring Elixir devs, including the scarcity of good ones! </li>
<li>Two things Brad looks for when hiring engineers: the drive to learn and a cultural fit. </li>
<li>The benefit of hiring younger developers. </li>
<li>Thoughts on training different languages and adding them to Podium’s tech stack.</li>
<li>An overview of the typical onboarding process for a new engineer.</li>
<li>Elixir 101 and other ways they keep training and refining the skills of developers.<br></li>
<li>Resources that Brad has recently learned and those he always recommends to devs. </li>
</ul>

<p>**Links Mentioned in Today’s Episode:</p>

<p>Brad Traylor on LinkedIn — <a href="https://www.linkedin.com/in/bradtraylor" rel="nofollow">https://www.linkedin.com/in/bradtraylor</a><br>
Brad Traylor on Twitter — <a href="https://twitter.com/btjordan23" rel="nofollow">https://twitter.com/btjordan23</a><br>
Podium — <a href="https://www.podium.com" rel="nofollow">https://www.podium.com</a><br>
SmartLogic — <a href="https://smartlogic.io/" rel="nofollow">https://smartlogic.io/</a> <br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
University of Michigan — <a href="https://umich.edu" rel="nofollow">https://umich.edu</a><br>
Java — <a href="https://www.java.com/en/" rel="nofollow">https://www.java.com/en/</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
TypeScript — <a href="https://www.typescriptlang.org" rel="nofollow">https://www.typescriptlang.org</a><br>
Pragmatic Institute — <a href="https://www.pragmaticinstitute.com/courses" rel="nofollow">https://www.pragmaticinstitute.com/courses</a><br>
The Manager’s Path — <a href="https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F" rel="nofollow">https://www.amazon.com/Managers-Path-Leaders-Navigating-Growth-ebook/dp/B06XP3GJ7F</a><br>
Camile Fournier — <a href="https://twitter.com/skamille" rel="nofollow">https://twitter.com/skamille</a></p><p>Special Guest: Brad Traylor.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>José Valim, Creator of Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3-e2-jose-valim</link>
      <guid isPermaLink="false">13faacd6-6639-4fe7-a552-5f58e3dc2f3d</guid>
      <pubDate>Tue, 26 Nov 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/13faacd6-6639-4fe7-a552-5f58e3dc2f3d.mp3" length="63704527" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on Elixir Wizards we are joined by none other than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José found his way to functional programming and we hear all about the evolution of his philosophy and thought process around the time of the creation of the language. He gives us some great insight into why functional programming is so appealing to him and the problems he wanted to solve by creating Elixir. We chat about other languages and his use of Erlang, Elixir's three biggest influences and some important characters in the story. José also shares a bit of personal, behind the scenes stuff about his schedule and how he tries to stay as productive as possible. We finish off the chat, talking about performance and the measures José has taken in this regard. For all this and more from a true Elixir wizard, be sure to tune in!</itunes:subtitle>
      <itunes:duration>43:40</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/13faacd6-6639-4fe7-a552-5f58e3dc2f3d/cover.jpg" />
      <description>Today on Elixir Wizards we are joined by none other than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José found his way to functional programming and we hear all about the evolution of his philosophy and thought process around the time of the creation of the language. He gives us some great insight into why functional programming is so appealing to him and the problems he wanted to solve by creating Elixir. We chat about other languages and his use of Erlang, Elixir's three biggest influences and some important characters in the story. José also shares a bit of personal, behind the scenes stuff about his schedule and how he tries to stay as productive as possible. We finish off the chat, talking about performance and the measures José has taken in this regard. For all this and more from a true Elixir wizard, be sure to tune in!
Key Points From This Episode:
José's thoughts on our recent podcast name-change!
The first steps for José in the process of writing a language.
Reason for José's decision to step out of the Ruby on Rails world. 
The 'aha' moment that José had when moving into functional programming. 
Some of the inspiration for Elixir from other languages.
A few of the people that have mentored and inspired José in his career. 
The research and development phase for Elixir and José strategy for this. 
José's work habits, his typical day and the influence of his kids on his flow. 
Why José still considers himself an Elixir programmer despite his proximity. 
Elixir and machine learning; why the two are not more closely linked. 
Steps in the measurement process for José and Elixir. 
The time that José has spent on the performance side of the language. 
Sacrifices and substitution in optimizing Elixir's performance. 
Some of the things on the horizon that are exciting José. 
Links Mentioned in Today’s Episode:
SmartLogic (https://www.smartlogic.com)
José Valim (https://github.com/josevalim)
Plataformatec (http://plataformatec)
Harry Potter (https://www.wizardingworld.com/)
Erlang (https://www.erlang.org/)
Ruby (https://www.ruby-lang.org/en/)
Clojure (https://clojure.org/)
ElixirConf (https://elixirconf.com/events) Special Guest: José Valim.
</description>
      <itunes:keywords>elixir</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on Elixir Wizards we are joined by none other than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José found his way to functional programming and we hear all about the evolution of his philosophy and thought process around the time of the creation of the language. He gives us some great insight into why functional programming is so appealing to him and the problems he wanted to solve by creating Elixir. We chat about other languages and his use of Erlang, Elixir&#39;s three biggest influences and some important characters in the story. José also shares a bit of personal, behind the scenes stuff about his schedule and how he tries to stay as productive as possible. We finish off the chat, talking about performance and the measures José has taken in this regard. For all this and more from a true Elixir wizard, be sure to tune in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>José&#39;s thoughts on our recent podcast name-change!</li>
<li>The first steps for José in the process of writing a language.</li>
<li>Reason for José&#39;s decision to step out of the Ruby on Rails world. </li>
<li>The &#39;aha&#39; moment that José had when moving into functional programming. </li>
<li>Some of the inspiration for Elixir from other languages.</li>
<li>A few of the people that have mentored and inspired José in his career. </li>
<li>The research and development phase for Elixir and José strategy for this. </li>
<li>José&#39;s work habits, his typical day and the influence of his kids on his flow. </li>
<li>Why José still considers himself an Elixir programmer despite his proximity. </li>
<li>Elixir and machine learning; why the two are not more closely linked. </li>
<li>Steps in the measurement process for José and Elixir. </li>
<li>The time that José has spent on the performance side of the language. </li>
<li>Sacrifices and substitution in optimizing Elixir&#39;s performance. </li>
<li>Some of the things on the horizon that are exciting José. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p><a href="https://www.smartlogic.com" rel="nofollow">SmartLogic</a><br>
<a href="https://github.com/josevalim" rel="nofollow">José Valim</a><br>
<a href="http://plataformatec" rel="nofollow">Plataformatec</a><br>
<a href="https://www.wizardingworld.com/" rel="nofollow">Harry Potter</a><br>
<a href="https://www.erlang.org/" rel="nofollow">Erlang</a><br>
<a href="https://www.ruby-lang.org/en/" rel="nofollow">Ruby</a><br>
<a href="https://clojure.org/" rel="nofollow">Clojure</a><br>
<a href="https://elixirconf.com/events" rel="nofollow">ElixirConf</a></p><p>Special Guest: José Valim.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on Elixir Wizards we are joined by none other than José Valim, the inventor of Elixir! Coming from the Ruby on Rails world, José found his way to functional programming and we hear all about the evolution of his philosophy and thought process around the time of the creation of the language. He gives us some great insight into why functional programming is so appealing to him and the problems he wanted to solve by creating Elixir. We chat about other languages and his use of Erlang, Elixir&#39;s three biggest influences and some important characters in the story. José also shares a bit of personal, behind the scenes stuff about his schedule and how he tries to stay as productive as possible. We finish off the chat, talking about performance and the measures José has taken in this regard. For all this and more from a true Elixir wizard, be sure to tune in!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>José&#39;s thoughts on our recent podcast name-change!</li>
<li>The first steps for José in the process of writing a language.</li>
<li>Reason for José&#39;s decision to step out of the Ruby on Rails world. </li>
<li>The &#39;aha&#39; moment that José had when moving into functional programming. </li>
<li>Some of the inspiration for Elixir from other languages.</li>
<li>A few of the people that have mentored and inspired José in his career. </li>
<li>The research and development phase for Elixir and José strategy for this. </li>
<li>José&#39;s work habits, his typical day and the influence of his kids on his flow. </li>
<li>Why José still considers himself an Elixir programmer despite his proximity. </li>
<li>Elixir and machine learning; why the two are not more closely linked. </li>
<li>Steps in the measurement process for José and Elixir. </li>
<li>The time that José has spent on the performance side of the language. </li>
<li>Sacrifices and substitution in optimizing Elixir&#39;s performance. </li>
<li>Some of the things on the horizon that are exciting José. </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p><a href="https://www.smartlogic.com" rel="nofollow">SmartLogic</a><br>
<a href="https://github.com/josevalim" rel="nofollow">José Valim</a><br>
<a href="http://plataformatec" rel="nofollow">Plataformatec</a><br>
<a href="https://www.wizardingworld.com/" rel="nofollow">Harry Potter</a><br>
<a href="https://www.erlang.org/" rel="nofollow">Erlang</a><br>
<a href="https://www.ruby-lang.org/en/" rel="nofollow">Ruby</a><br>
<a href="https://clojure.org/" rel="nofollow">Clojure</a><br>
<a href="https://elixirconf.com/events" rel="nofollow">ElixirConf</a></p><p>Special Guest: José Valim.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dr Jim Freeze on Hiring, Training, and Functional Programming – Working with Elixir</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/s3e1-dr-freeze</link>
      <guid isPermaLink="false">7f21096c-8f00-4f06-9b4a-a0a8b554e28b</guid>
      <pubDate>Thu, 21 Nov 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7f21096c-8f00-4f06-9b4a-a0a8b554e28b.mp3" length="37471629" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>3</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to talk about his passion for and history in Elixir and functional programming. Dr. Freeze is one of the organizers of one of our favorite things in the world, Elixir Conf! He shares his story of coming to functional programming and his early days with Elixir, what he sees as the most important aspects of the conference before diving into what is on offer for those that attend. We talk about how employers can get Elixir newcomers up to speed on the language and the most effective ways Dr. Freeze stays abreast of developments in the field. Our guest also recommends a few resources for those wanting an introduction to Elixir and makes a great argument for the usefulness of a functional approach to programming. For all this and a whole bunch more, join us today!</itunes:subtitle>
      <itunes:duration>25:40</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7f21096c-8f00-4f06-9b4a-a0a8b554e28b/cover.jpg" />
      <description>Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to talk about his passion for and history in Elixir and functional programming. Dr. Freeze is one of the organizers of one of our favorite things in the world, Elixir Conf! He shares his story of coming to functional programming and his early days with Elixir, what he sees as the most important aspects of the conference before diving into what is on offer for those that attend. We talk about how employers can get Elixir newcomers up to speed on the language and the most effective ways Dr. Freeze stays abreast of developments in the field. Our guest also recommends a few resources for those wanting an introduction to Elixir and makes a great argument for the usefulness of a functional approach to programming. For all this and a whole bunch more, join us today!
Key Points From This Episode:
How Dr. Freeze got started with Elixir and his programming background.
A little bit about the early days of Elixir Conf and what the first events were like.  
The particulars of Dr. Freeze's doctorate and his title. 
Education, networking and how Elixir Conf fits into the developer hiring game. 
The training that is offered at the conference and the philosophy to serving attendees. 
Dr. Freeze's recommendations for employers bringing newbies up to speed with Elixir. 
How our guest continues his learning and stays focused on what is necessary.
Useful resources and materials for Elixir, according to Dr. Freeze.
Contemplating functional programming and its key components. 
Why to consider functional programming coming from an object-based background.
The biggest hurdles in moving over to functional programming and Elixir. 
Following the data and how much the simplicity of this directive can help. 
Dr. Freeze's favorite thing in the functional world!
Links Mentioned in Today’s Episode:
SmartLogic (https://www.smartlogic.com) 
Dr. Jim Freeze on Twitter (https://twitter.com/jimfreeze)
ElixirConf (https://elixirconf.com/events) 
Sophie DeBenedetto (http://sophiedebenedetto.nyc/)
Elixir Radar (https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir)
Phoenix In Action (https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043)
Geoffrey Lessel (http://www.apple.com)
Saša Jurić (https://codesync.global/speaker/sasa-juric/)
Sandi Metz (https://www.sandimetz.com) Special Guest: Dr. Jim Freeze.
</description>
      <itunes:keywords>elixirconf, functional programming, elixir</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to talk about his passion for and history in Elixir and functional programming. Dr. Freeze is one of the organizers of one of our favorite things in the world, Elixir Conf! He shares his story of coming to functional programming and his early days with Elixir, what he sees as the most important aspects of the conference before diving into what is on offer for those that attend. We talk about how employers can get Elixir newcomers up to speed on the language and the most effective ways Dr. Freeze stays abreast of developments in the field. Our guest also recommends a few resources for those wanting an introduction to Elixir and makes a great argument for the usefulness of a functional approach to programming. For all this and a whole bunch more, join us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>How Dr. Freeze got started with Elixir and his programming background.</li>
<li>A little bit about the early days of Elixir Conf and what the first events were like.<br></li>
<li>The particulars of Dr. Freeze&#39;s doctorate and his title. </li>
<li>Education, networking and how Elixir Conf fits into the developer hiring game. </li>
<li>The training that is offered at the conference and the philosophy to serving attendees. </li>
<li>Dr. Freeze&#39;s recommendations for employers bringing newbies up to speed with Elixir. </li>
<li>How our guest continues his learning and stays focused on what is necessary.</li>
<li>Useful resources and materials for Elixir, according to Dr. Freeze.</li>
<li>Contemplating functional programming and its key components. </li>
<li>Why to consider functional programming coming from an object-based background.</li>
<li>The biggest hurdles in moving over to functional programming and Elixir. </li>
<li>Following the data and how much the simplicity of this directive can help. </li>
<li>Dr. Freeze&#39;s favorite thing in the functional world!</li>
</ul>

<p>Links Mentioned in Today’s Episode:<br>
<a href="https://www.smartlogic.com" rel="nofollow">SmartLogic</a> <br>
<a href="https://twitter.com/jimfreeze" rel="nofollow">Dr. Jim Freeze on Twitter</a><br>
<a href="https://elixirconf.com/events" rel="nofollow">ElixirConf</a> <br>
<a href="http://sophiedebenedetto.nyc/" rel="nofollow">Sophie DeBenedetto</a><br>
<a href="https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir" rel="nofollow">Elixir Radar</a><br>
<a href="https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043" rel="nofollow">Phoenix In Action</a><br>
<a href="http://www.apple.com" rel="nofollow">Geoffrey Lessel</a><br>
<a href="https://codesync.global/speaker/sasa-juric/" rel="nofollow">Saša Jurić</a><br>
<a href="https://www.sandimetz.com" rel="nofollow">Sandi Metz</a></p><p>Special Guest: Dr. Jim Freeze.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to Elixir Wizards, today we are joined by Dr. Jim Freeze to talk about his passion for and history in Elixir and functional programming. Dr. Freeze is one of the organizers of one of our favorite things in the world, Elixir Conf! He shares his story of coming to functional programming and his early days with Elixir, what he sees as the most important aspects of the conference before diving into what is on offer for those that attend. We talk about how employers can get Elixir newcomers up to speed on the language and the most effective ways Dr. Freeze stays abreast of developments in the field. Our guest also recommends a few resources for those wanting an introduction to Elixir and makes a great argument for the usefulness of a functional approach to programming. For all this and a whole bunch more, join us today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>How Dr. Freeze got started with Elixir and his programming background.</li>
<li>A little bit about the early days of Elixir Conf and what the first events were like.<br></li>
<li>The particulars of Dr. Freeze&#39;s doctorate and his title. </li>
<li>Education, networking and how Elixir Conf fits into the developer hiring game. </li>
<li>The training that is offered at the conference and the philosophy to serving attendees. </li>
<li>Dr. Freeze&#39;s recommendations for employers bringing newbies up to speed with Elixir. </li>
<li>How our guest continues his learning and stays focused on what is necessary.</li>
<li>Useful resources and materials for Elixir, according to Dr. Freeze.</li>
<li>Contemplating functional programming and its key components. </li>
<li>Why to consider functional programming coming from an object-based background.</li>
<li>The biggest hurdles in moving over to functional programming and Elixir. </li>
<li>Following the data and how much the simplicity of this directive can help. </li>
<li>Dr. Freeze&#39;s favorite thing in the functional world!</li>
</ul>

<p>Links Mentioned in Today’s Episode:<br>
<a href="https://www.smartlogic.com" rel="nofollow">SmartLogic</a> <br>
<a href="https://twitter.com/jimfreeze" rel="nofollow">Dr. Jim Freeze on Twitter</a><br>
<a href="https://elixirconf.com/events" rel="nofollow">ElixirConf</a> <br>
<a href="http://sophiedebenedetto.nyc/" rel="nofollow">Sophie DeBenedetto</a><br>
<a href="https://elixirnation.io/references/elixir-radar-weekly-newsletter-on-elixir" rel="nofollow">Elixir Radar</a><br>
<a href="https://www.amazon.com/Phoenix-Action-Geoffrey-Lessel/dp/1617295043" rel="nofollow">Phoenix In Action</a><br>
<a href="http://www.apple.com" rel="nofollow">Geoffrey Lessel</a><br>
<a href="https://codesync.global/speaker/sasa-juric/" rel="nofollow">Saša Jurić</a><br>
<a href="https://www.sandimetz.com" rel="nofollow">Sandi Metz</a></p><p>Special Guest: Dr. Jim Freeze.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Season Two Wrap</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-wrap</link>
      <guid isPermaLink="false">e472382c-8b12-4b39-9e07-365dbdb8d77d</guid>
      <pubDate>Thu, 03 Oct 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e472382c-8b12-4b39-9e07-365dbdb8d77d.mp3" length="17799716" type="audio/mp3"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to the last episode of Season 2 of the podcast! We are taking this opportunity to recap what we covered in the season and talk about what we liked and what we didn't like so much. We do not have a guest for today's show so it is just Eric and Justus doing some reflection. We do want to take this opportunity to thank all of our guests that have appeared on this season and shared their expertise with us, we definitely feel we learned a lot during this time! In Season 3 we will be focussing on functional programming, performance and teaching Elixir, so make sure to keep an eye out for when that drops in the future!</itunes:subtitle>
      <itunes:duration>11:53</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>Welcome to the last episode of Season 2 of the podcast! We are taking this opportunity to recap what we covered in the season and talk about what we liked and what we didn't like so much. We do not have a guest for today's show so it is just Eric and Justus doing some reflection. We do want to take this opportunity to thank all of our guests that have appeared on this season and shared their expertise with us, we definitely feel we learned a lot during this time! In Season 3 we will be focussing on functional programming, performance and teaching Elixir, so make sure to keep an eye out for when that drops in the future!
Key Points From This Episode:
The possibility of longer episodes for next season 
Reflections on ElixirConf and the time we spent there this year. 
The upcoming conference in New Orleans that Eric is keynoting.  
Thoughts on the future of the podcast and the promise of Season 3. 
Reach out! We want to hear from you! 
And much more! 
Links Mentioned in Today’s Episode:
SmartLogic — https://www.smartlogic.io
Brooklyn Zelenka — https://github.com/expede
Bryan Joseph — https://github.com/bryanjos
Paul Schoenfelder — https://github.com/bitwalker
Meryl Dakin— https://github.com/meryldakin
René Föhring— https://twitter.com/rrrene
Michal Muskala — https://michal.muskala.eu/
Todd Resudek — https://www.linkedin.com/in/toddresudek/
Shanti Chellaram— https://github.com/shantiii
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
Dave Lucia — https://www.linkedin.com/in/david-lucia-a395441b
ElixirConf — https://elixirconf.com/2019
The Big Elixir — https://www.thebigelixir.com/
Le Petit Theatre — http://www.lepetittheatre.com
Lone Star Elixir — https://www.lonestarelixir.com
The Empire Strikes Back — https://www.rottentomatoes.com/m/empirestrikesback
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to the last episode of Season 2 of the podcast! We are taking this opportunity to recap what we covered in the season and talk about what we liked and what we didn&#39;t like so much. We do not have a guest for today&#39;s show so it is just Eric and Justus doing some reflection. We do want to take this opportunity to thank all of our guests that have appeared on this season and shared their expertise with us, we definitely feel we learned a lot during this time! In Season 3 we will be focussing on functional programming, performance and teaching Elixir, so make sure to keep an eye out for when that drops in the future!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>The possibility of longer episodes for next season </li>
<li>Reflections on ElixirConf and the time we spent there this year. </li>
<li>The upcoming conference in New Orleans that Eric is keynoting.<br></li>
<li>Thoughts on the future of the podcast and the promise of Season 3. </li>
<li>Reach out! We want to hear from you! </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io" rel="nofollow">https://www.smartlogic.io</a><br>
Brooklyn Zelenka — <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a><br>
Bryan Joseph — <a href="https://github.com/bryanjos" rel="nofollow">https://github.com/bryanjos</a><br>
Paul Schoenfelder — <a href="https://github.com/bitwalker" rel="nofollow">https://github.com/bitwalker</a><br>
Meryl Dakin— <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
René Föhring— <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
Michal Muskala — <a href="https://michal.muskala.eu/" rel="nofollow">https://michal.muskala.eu/</a><br>
Todd Resudek — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Shanti Chellaram— <a href="https://github.com/shantiii" rel="nofollow">https://github.com/shantiii</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Dave Lucia — <a href="https://www.linkedin.com/in/david-lucia-a395441b" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b</a><br>
ElixirConf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a><br>
The Big Elixir — <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Le Petit Theatre — <a href="http://www.lepetittheatre.com" rel="nofollow">http://www.lepetittheatre.com</a><br>
Lone Star Elixir — <a href="https://www.lonestarelixir.com" rel="nofollow">https://www.lonestarelixir.com</a><br>
The Empire Strikes Back — <a href="https://www.rottentomatoes.com/m/empire_strikes_back" rel="nofollow">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to the last episode of Season 2 of the podcast! We are taking this opportunity to recap what we covered in the season and talk about what we liked and what we didn&#39;t like so much. We do not have a guest for today&#39;s show so it is just Eric and Justus doing some reflection. We do want to take this opportunity to thank all of our guests that have appeared on this season and shared their expertise with us, we definitely feel we learned a lot during this time! In Season 3 we will be focussing on functional programming, performance and teaching Elixir, so make sure to keep an eye out for when that drops in the future!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>The possibility of longer episodes for next season </li>
<li>Reflections on ElixirConf and the time we spent there this year. </li>
<li>The upcoming conference in New Orleans that Eric is keynoting.<br></li>
<li>Thoughts on the future of the podcast and the promise of Season 3. </li>
<li>Reach out! We want to hear from you! </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io" rel="nofollow">https://www.smartlogic.io</a><br>
Brooklyn Zelenka — <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a><br>
Bryan Joseph — <a href="https://github.com/bryanjos" rel="nofollow">https://github.com/bryanjos</a><br>
Paul Schoenfelder — <a href="https://github.com/bitwalker" rel="nofollow">https://github.com/bitwalker</a><br>
Meryl Dakin— <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
René Föhring— <a href="https://twitter.com/rrrene" rel="nofollow">https://twitter.com/rrrene</a><br>
Michal Muskala — <a href="https://michal.muskala.eu/" rel="nofollow">https://michal.muskala.eu/</a><br>
Todd Resudek — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Shanti Chellaram— <a href="https://github.com/shantiii" rel="nofollow">https://github.com/shantiii</a><br>
Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Dave Lucia — <a href="https://www.linkedin.com/in/david-lucia-a395441b" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b</a><br>
ElixirConf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a><br>
The Big Elixir — <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Le Petit Theatre — <a href="http://www.lepetittheatre.com" rel="nofollow">http://www.lepetittheatre.com</a><br>
Lone Star Elixir — <a href="https://www.lonestarelixir.com" rel="nofollow">https://www.lonestarelixir.com</a><br>
The Empire Strikes Back — <a href="https://www.rottentomatoes.com/m/empire_strikes_back" rel="nofollow">https://www.rottentomatoes.com/m/empire_strikes_back</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dave Lucia on Rustler – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-lucia</link>
      <guid isPermaLink="false">1f938053-676b-4137-ad82-f104ebda9488</guid>
      <pubDate>Thu, 26 Sep 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/1f938053-676b-4137-ad82-f104ebda9488.mp3" length="32008356" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Our guest today on the show is Dave Lucia, who is currently the Vice President of Engineering at SimpleBet. He is here as part of Elixir Internals series, to talk to us and all our listeners about Rustler and the contribution he made to the library! According to our guest, Rustler acts as a bridge between Rust and Elixir and allows users to employ the power of Rust within Elixir and a great example of this can be found in Dave's work at SimpleBet. He explains some of this application and the functionality and improvement it offers and the big difference the machine learning models make to this work.</itunes:subtitle>
      <itunes:duration>32:31</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/1/1f938053-676b-4137-ad82-f104ebda9488/cover.jpg" />
      <description>Our guest today on the show is Dave Lucia, who is currently the Vice President of Engineering at SimpleBet. He is here as part of Elixir Internals series, to talk to us and all our listeners about Rustler and the contribution he made to the library! According to our guest, Rustler acts as a bridge between Rust and Elixir and allows users to employ the power of Rust within Elixir and a great example of this can be found in Dave's work at SimpleBet. He explains some of this application and the functionality and improvement it offers and the big difference the machine learning models make to this work. Dave also gives us some background to his work and career, previous employment and early explorations of open-source software. He also shares some great tips for problem-solving and learning and improving at programming in Rust. We unpack some of the biggest challenges that faced the creation of Rustler, notable differences between Rust and Elixir and the technical components of the library that the team created. For all this and then some, join us for this great episode!
Key Points From This Episode:
More about our guest and his current work at SimpleBet. 
How Dave got started with Elixir while at Bloomberg.
The interesting and beautiful way in which The Outline used Elixir. 
Dave's early forays and experiences with open source software. 
Problem finding and solving; Dave's tips to those wanting to improve. 
Dave's employers' contribution and allowance for open source projects.  
Introducing Rustler and what users can do with it! 
The biggest challenges of using multiple languages in the backend. 
How Rustler works; the core, the code generator and more.
The most important differences between Rust and Elixir.
Dave's best advice and resources for learning and mastering Rust.
And much more! 
Links Mentioned in Today’s Episode:
SmartLogic — https://www.smartlogic.io
Dave Lucia — https://www.linkedin.com/in/david-lucia-a395441b
Rustler — https://github.com/rusterlium/rustler
SimpleBet — https://simplebet.io
Dave Lucia on Twitter — https://twitter.com/davydog187
Dave Lucia Email — dave@simplebet.io
Elixir — https://elixir-lang.org
Python — https://www.python.org
JavaScript — https://www.javascript.com
Rust — https://www.rust-lang.org
Bloomberg — https://www.bloomberg.com
Slack — https://slack.com
Vox Media — https://www.voxmedia.com
The Outline — https://theoutline.com
The Rust Programming Language — https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284
Rust Playground — https://play.rust-lang.org
Elm Compiler — https://github.com/elm/compiler
 Special Guest: Dave Lucia.
</description>
      <itunes:keywords>elixir, rustler, rust, elm, simplebet</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Our guest today on the show is Dave Lucia, who is currently the Vice President of Engineering at SimpleBet. He is here as part of Elixir Internals series, to talk to us and all our listeners about Rustler and the contribution he made to the library! According to our guest, Rustler acts as a bridge between Rust and Elixir and allows users to employ the power of Rust within Elixir and a great example of this can be found in Dave&#39;s work at SimpleBet. He explains some of this application and the functionality and improvement it offers and the big difference the machine learning models make to this work. Dave also gives us some background to his work and career, previous employment and early explorations of open-source software. He also shares some great tips for problem-solving and learning and improving at programming in Rust. We unpack some of the biggest challenges that faced the creation of Rustler, notable differences between Rust and Elixir and the technical components of the library that the team created. For all this and then some, join us for this great episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>More about our guest and his current work at SimpleBet. </li>
<li>How Dave got started with Elixir while at Bloomberg.</li>
<li>The interesting and beautiful way in which The Outline used Elixir. </li>
<li>Dave&#39;s early forays and experiences with open source software. </li>
<li>Problem finding and solving; Dave&#39;s tips to those wanting to improve. </li>
<li>Dave&#39;s employers&#39; contribution and allowance for open source projects.<br></li>
<li>Introducing Rustler and what users can do with it! </li>
<li>The biggest challenges of using multiple languages in the backend. </li>
<li>How Rustler works; the core, the code generator and more.</li>
<li>The most important differences between Rust and Elixir.</li>
<li>Dave&#39;s best advice and resources for learning and mastering Rust.</li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://www.smartlogic.io" rel="nofollow">https://www.smartlogic.io</a><br>
Dave Lucia — <a href="https://www.linkedin.com/in/david-lucia-a395441b" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b</a><br>
Rustler — <a href="https://github.com/rusterlium/rustler" rel="nofollow">https://github.com/rusterlium/rustler</a><br>
SimpleBet — <a href="https://simplebet.io" rel="nofollow">https://simplebet.io</a><br>
Dave Lucia on Twitter — <a href="https://twitter.com/davydog187" rel="nofollow">https://twitter.com/davydog187</a><br>
Dave Lucia Email — <a href="mailto:dave@simplebet.io" rel="nofollow">dave@simplebet.io</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
Bloomberg — <a href="https://www.bloomberg.com" rel="nofollow">https://www.bloomberg.com</a><br>
Slack — <a href="https://slack.com" rel="nofollow">https://slack.com</a><br>
Vox Media — <a href="https://www.voxmedia.com" rel="nofollow">https://www.voxmedia.com</a><br>
The Outline — <a href="https://theoutline.com" rel="nofollow">https://theoutline.com</a><br>
The Rust Programming Language — <a href="https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284" rel="nofollow">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>
Rust Playground — <a href="https://play.rust-lang.org" rel="nofollow">https://play.rust-lang.org</a><br>
Elm Compiler — <a href="https://github.com/elm/compiler" rel="nofollow">https://github.com/elm/compiler</a></p><p>Special Guest: Dave Lucia.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Our guest today on the show is Dave Lucia, who is currently the Vice President of Engineering at SimpleBet. He is here as part of Elixir Internals series, to talk to us and all our listeners about Rustler and the contribution he made to the library! According to our guest, Rustler acts as a bridge between Rust and Elixir and allows users to employ the power of Rust within Elixir and a great example of this can be found in Dave&#39;s work at SimpleBet. He explains some of this application and the functionality and improvement it offers and the big difference the machine learning models make to this work. Dave also gives us some background to his work and career, previous employment and early explorations of open-source software. He also shares some great tips for problem-solving and learning and improving at programming in Rust. We unpack some of the biggest challenges that faced the creation of Rustler, notable differences between Rust and Elixir and the technical components of the library that the team created. For all this and then some, join us for this great episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>More about our guest and his current work at SimpleBet. </li>
<li>How Dave got started with Elixir while at Bloomberg.</li>
<li>The interesting and beautiful way in which The Outline used Elixir. </li>
<li>Dave&#39;s early forays and experiences with open source software. </li>
<li>Problem finding and solving; Dave&#39;s tips to those wanting to improve. </li>
<li>Dave&#39;s employers&#39; contribution and allowance for open source projects.<br></li>
<li>Introducing Rustler and what users can do with it! </li>
<li>The biggest challenges of using multiple languages in the backend. </li>
<li>How Rustler works; the core, the code generator and more.</li>
<li>The most important differences between Rust and Elixir.</li>
<li>Dave&#39;s best advice and resources for learning and mastering Rust.</li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>SmartLogic — <a href="https://www.smartlogic.io" rel="nofollow">https://www.smartlogic.io</a><br>
Dave Lucia — <a href="https://www.linkedin.com/in/david-lucia-a395441b" rel="nofollow">https://www.linkedin.com/in/david-lucia-a395441b</a><br>
Rustler — <a href="https://github.com/rusterlium/rustler" rel="nofollow">https://github.com/rusterlium/rustler</a><br>
SimpleBet — <a href="https://simplebet.io" rel="nofollow">https://simplebet.io</a><br>
Dave Lucia on Twitter — <a href="https://twitter.com/davydog187" rel="nofollow">https://twitter.com/davydog187</a><br>
Dave Lucia Email — <a href="mailto:dave@simplebet.io" rel="nofollow">dave@simplebet.io</a><br>
Elixir — <a href="https://elixir-lang.org" rel="nofollow">https://elixir-lang.org</a><br>
Python — <a href="https://www.python.org" rel="nofollow">https://www.python.org</a><br>
JavaScript — <a href="https://www.javascript.com" rel="nofollow">https://www.javascript.com</a><br>
Rust — <a href="https://www.rust-lang.org" rel="nofollow">https://www.rust-lang.org</a><br>
Bloomberg — <a href="https://www.bloomberg.com" rel="nofollow">https://www.bloomberg.com</a><br>
Slack — <a href="https://slack.com" rel="nofollow">https://slack.com</a><br>
Vox Media — <a href="https://www.voxmedia.com" rel="nofollow">https://www.voxmedia.com</a><br>
The Outline — <a href="https://theoutline.com" rel="nofollow">https://theoutline.com</a><br>
The Rust Programming Language — <a href="https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284" rel="nofollow">https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik/dp/1593278284</a><br>
Rust Playground — <a href="https://play.rust-lang.org" rel="nofollow">https://play.rust-lang.org</a><br>
Elm Compiler — <a href="https://github.com/elm/compiler" rel="nofollow">https://github.com/elm/compiler</a></p><p>Special Guest: Dave Lucia.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Eric Oestrich on ExVenture – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-oestrich</link>
      <guid isPermaLink="false">0a947a18-82f2-4b2e-8c0c-69696c5980d9</guid>
      <pubDate>Thu, 19 Sep 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0a947a18-82f2-4b2e-8c0c-69696c5980d9.mp3" length="29316603" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>This season on Smart Software Season 2, we are focused on the inner workings of Elixir and the inner workings of popular Elixir libraries, or Elixir internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich who's responsible for the wildly successful Elixir MUD framework ExVenture.</itunes:subtitle>
      <itunes:duration>29:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0a947a18-82f2-4b2e-8c0c-69696c5980d9/cover.jpg" />
      <description>This season on Smart Software Season 2, we are focused on the inner workings of Elixir and the inner workings of popular Elixir libraries, or Elixir internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich who's responsible for the wildly successful Elixir MUD framework ExVenture.
ExVenture - https://exventure.org/
MUDs - https://en.wikipedia.org/wiki/MUD
Ecto - https://github.com/elixir-ecto/ecto
Eric's Going Multi-Node presentation at ElixirConf - https://www.youtube.com/watch?v=lCUKQnkjajo
The Big Elixir - https://www.thebigelixir.com/
Eric's Prometheus presentation at Lonestar Elixir - https://www.youtube.com/watch?v=ETUD9SaRCjY
Prometheus - https://prometheus.io/
Go - https://golang.org/
Celluloid - https://celluloid.io/
Phoenix - https://phoenixframework.org/
Grapevine - https://grapevine.haus/
Gossip - https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) 
</description>
      <itunes:keywords>exventure</itunes:keywords>
      <content:encoded><![CDATA[
        <p>This season on Smart Software Season 2, we are focused on the inner workings of Elixir and the inner workings of popular Elixir libraries, or Elixir internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework ExVenture.</p>

<p>ExVenture - <a href="https://exventure.org/" rel="nofollow">https://exventure.org/</a><br>
MUDs - <a href="https://en.wikipedia.org/wiki/MUD" rel="nofollow">https://en.wikipedia.org/wiki/MUD</a><br>
Ecto - <a href="https://github.com/elixir-ecto/ecto" rel="nofollow">https://github.com/elixir-ecto/ecto</a><br>
Eric&#39;s Going Multi-Node presentation at ElixirConf - <a href="https://www.youtube.com/watch?v=lCUKQnkjajo" rel="nofollow">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>
The Big Elixir - <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Eric&#39;s Prometheus presentation at Lonestar Elixir - <a href="https://www.youtube.com/watch?v=ETUD9SaRCjY" rel="nofollow">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>
Prometheus - <a href="https://prometheus.io/" rel="nofollow">https://prometheus.io/</a><br>
Go - <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Celluloid - <a href="https://celluloid.io/" rel="nofollow">https://celluloid.io/</a><br>
Phoenix - <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a><br>
Grapevine - <a href="https://grapevine.haus/" rel="nofollow">https://grapevine.haus/</a><br>
Gossip - <a href="https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/" rel="nofollow">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>This season on Smart Software Season 2, we are focused on the inner workings of Elixir and the inner workings of popular Elixir libraries, or Elixir internals. Today, I have the pleasure of interviewing my colleague, Eric Oestrich who&#39;s responsible for the wildly successful Elixir MUD framework ExVenture.</p>

<p>ExVenture - <a href="https://exventure.org/" rel="nofollow">https://exventure.org/</a><br>
MUDs - <a href="https://en.wikipedia.org/wiki/MUD" rel="nofollow">https://en.wikipedia.org/wiki/MUD</a><br>
Ecto - <a href="https://github.com/elixir-ecto/ecto" rel="nofollow">https://github.com/elixir-ecto/ecto</a><br>
Eric&#39;s Going Multi-Node presentation at ElixirConf - <a href="https://www.youtube.com/watch?v=lCUKQnkjajo" rel="nofollow">https://www.youtube.com/watch?v=lCUKQnkjajo</a><br>
The Big Elixir - <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Eric&#39;s Prometheus presentation at Lonestar Elixir - <a href="https://www.youtube.com/watch?v=ETUD9SaRCjY" rel="nofollow">https://www.youtube.com/watch?v=ETUD9SaRCjY</a><br>
Prometheus - <a href="https://prometheus.io/" rel="nofollow">https://prometheus.io/</a><br>
Go - <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Celluloid - <a href="https://celluloid.io/" rel="nofollow">https://celluloid.io/</a><br>
Phoenix - <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a><br>
Grapevine - <a href="https://grapevine.haus/" rel="nofollow">https://grapevine.haus/</a><br>
Gossip - <a href="https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/" rel="nofollow">https://mudcoders.com/gossip-the-mud-chat-network-3156cf24edf/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Sophie DeBenedetto on Excrypt and Railway – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-debenedetto</link>
      <guid isPermaLink="false">7b360fac-dde4-44a4-b637-762e19a0274b</guid>
      <pubDate>Thu, 12 Sep 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7b360fac-dde4-44a4-b637-762e19a0274b.mp3" length="44914201" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome to another episode of the podcast everybody! As we continue our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to tell us about the two libraries she and the Flatiron School created! We talk about Encrypt and Railway and a bunch of other great stuff from the world of Elixir and open source and Sophie shares so much about why she is particularly excited about things at the moment.</itunes:subtitle>
      <itunes:duration>30:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7b360fac-dde4-44a4-b637-762e19a0274b/cover.jpg" />
      <description>Welcome to another episode of the podcast everybody! As we continue our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to tell us about the two libraries she and the Flatiron School created! We talk about Encrypt and Railway and a bunch of other great stuff from the world of Elixir and open source and Sophie shares so much about why she is particularly excited about things at the moment. She talks about the maturation of the Elixir community and her first and most important open-source experiences before diving into her hopes for the future of these platforms. We also discuss the ins and out of the two libraries and our guest does a fantastic job of explaining their functions and the reasons they were built. Sophie shares the major challenges that faced her and the team in creating them and a whole lot more, so make sure to tune in today for all this great information!
Key Points From This Episode:
A brief introduction to Sophie's career, the Flatiron School and her Elixir work.
Sophie's first experiences with open source, contributing to the Elixir School. 
Flatiron's support of open source and their attitude towards the growth of engineers. 
Why Elixir and Ruby are such important languages to Sophie and Flatiron. 
Sophie's wishes for Elixir and what she wants to see more of in the community. 
Introducing Encrypt and Excrypt for Elixir and why Flatiron chose to build them.
The hardest parts of building the library, the challenges of encryption.
Elixir's built-in option parser; convenience and accessing data easily.
The Railway hex package and what it enables users to do. 
Breaking down the functions of RabbitMQ for Erlang. 
The two things that Sophie is most excited about in the Elixir space right now!
And much more! 
Links Mentioned in Today’s Episode:
Sophie DeBenedetto — http://sophiedebenedetto.nyc/
Flatiron School — http://sophiedebenedetto.nyc/
Elixir School — https://elixirschool.com/en/
Encrypt — https://github.com/flatiron-labs/encrypt
Escript — https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html
Ruby — https://www.ruby-lang.org/en/
Kafka — https://kafka.apache.org
Ecto — https://hexdocs.pm/ecto/Ecto.html
Erlang — https://www.erlang.org
RabbitMQ — https://www.rabbitmq.com
Phoenix — https://phoenixframework.org
LiveView — https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript
Elixir Conf — https://elixirconf.com/2019 Special Guest: Sophie DeBenedetto.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome to another episode of the podcast everybody! As we continue our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to tell us about the two libraries she and the Flatiron School created! We talk about Encrypt and Railway and a bunch of other great stuff from the world of Elixir and open source and Sophie shares so much about why she is particularly excited about things at the moment. She talks about the maturation of the Elixir community and her first and most important open-source experiences before diving into her hopes for the future of these platforms. We also discuss the ins and out of the two libraries and our guest does a fantastic job of explaining their functions and the reasons they were built. Sophie shares the major challenges that faced her and the team in creating them and a whole lot more, so make sure to tune in today for all this great information!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A brief introduction to Sophie&#39;s career, the Flatiron School and her Elixir work.</li>
<li>Sophie&#39;s first experiences with open source, contributing to the Elixir School. </li>
<li>Flatiron&#39;s support of open source and their attitude towards the growth of engineers. </li>
<li>Why Elixir and Ruby are such important languages to Sophie and Flatiron. </li>
<li>Sophie&#39;s wishes for Elixir and what she wants to see more of in the community. </li>
<li>Introducing Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>
<li>The hardest parts of building the library, the challenges of encryption.</li>
<li>Elixir&#39;s built-in option parser; convenience and accessing data easily.</li>
<li>The Railway hex package and what it enables users to do. </li>
<li>Breaking down the functions of RabbitMQ for Erlang. </li>
<li>The two things that Sophie is most excited about in the Elixir space right now!</li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Flatiron School — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Encrypt — <a href="https://github.com/flatiron-labs/encrypt" rel="nofollow">https://github.com/flatiron-labs/encrypt</a><br>
Escript — <a href="https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html" rel="nofollow">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Kafka — <a href="https://kafka.apache.org" rel="nofollow">https://kafka.apache.org</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
Erlang — <a href="https://www.erlang.org" rel="nofollow">https://www.erlang.org</a><br>
RabbitMQ — <a href="https://www.rabbitmq.com" rel="nofollow">https://www.rabbitmq.com</a><br>
Phoenix — <a href="https://phoenixframework.org" rel="nofollow">https://phoenixframework.org</a><br>
LiveView — <a href="https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript" rel="nofollow">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>
Elixir Conf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a></p><p>Special Guest: Sophie DeBenedetto.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome to another episode of the podcast everybody! As we continue our journey into Elixir internals in Season 2, we welcome Sophie DeBenedetto to tell us about the two libraries she and the Flatiron School created! We talk about Encrypt and Railway and a bunch of other great stuff from the world of Elixir and open source and Sophie shares so much about why she is particularly excited about things at the moment. She talks about the maturation of the Elixir community and her first and most important open-source experiences before diving into her hopes for the future of these platforms. We also discuss the ins and out of the two libraries and our guest does a fantastic job of explaining their functions and the reasons they were built. Sophie shares the major challenges that faced her and the team in creating them and a whole lot more, so make sure to tune in today for all this great information!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A brief introduction to Sophie&#39;s career, the Flatiron School and her Elixir work.</li>
<li>Sophie&#39;s first experiences with open source, contributing to the Elixir School. </li>
<li>Flatiron&#39;s support of open source and their attitude towards the growth of engineers. </li>
<li>Why Elixir and Ruby are such important languages to Sophie and Flatiron. </li>
<li>Sophie&#39;s wishes for Elixir and what she wants to see more of in the community. </li>
<li>Introducing Encrypt and Excrypt for Elixir and why Flatiron chose to build them.</li>
<li>The hardest parts of building the library, the challenges of encryption.</li>
<li>Elixir&#39;s built-in option parser; convenience and accessing data easily.</li>
<li>The Railway hex package and what it enables users to do. </li>
<li>Breaking down the functions of RabbitMQ for Erlang. </li>
<li>The two things that Sophie is most excited about in the Elixir space right now!</li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Sophie DeBenedetto — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Flatiron School — <a href="http://sophiedebenedetto.nyc/" rel="nofollow">http://sophiedebenedetto.nyc/</a><br>
Elixir School — <a href="https://elixirschool.com/en/" rel="nofollow">https://elixirschool.com/en/</a><br>
Encrypt — <a href="https://github.com/flatiron-labs/encrypt" rel="nofollow">https://github.com/flatiron-labs/encrypt</a><br>
Escript — <a href="https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html" rel="nofollow">https://hexdocs.pm/mix/master/Mix.Tasks.Escript.Build.html</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Kafka — <a href="https://kafka.apache.org" rel="nofollow">https://kafka.apache.org</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
Erlang — <a href="https://www.erlang.org" rel="nofollow">https://www.erlang.org</a><br>
RabbitMQ — <a href="https://www.rabbitmq.com" rel="nofollow">https://www.rabbitmq.com</a><br>
Phoenix — <a href="https://phoenixframework.org" rel="nofollow">https://phoenixframework.org</a><br>
LiveView — <a href="https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript" rel="nofollow">https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript</a><br>
Elixir Conf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a></p><p>Special Guest: Sophie DeBenedetto.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Shanti Chellaram on Pri-Queue and raft_erl – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-chellaram</link>
      <guid isPermaLink="false">ec6a1593-38d7-48b0-8494-9dd83f8f6cff</guid>
      <pubDate>Thu, 05 Sep 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff.mp3" length="42603379" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we welcome Shanti Chellaram to talk about a couple of Erlang libraries she has created! We hear from her about Pri-Queue and raft_erl, and her motivation behind making them and some of the things we wishes she did differently! Shanti shares some of her background, early coding experiences, affinity for open source and her current work situation. From there we look at Pri-Queue, the problem it addresses and what a priority queue is.</itunes:subtitle>
      <itunes:duration>28:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ec6a1593-38d7-48b0-8494-9dd83f8f6cff/cover.jpg" />
      <description>Today on the show we welcome Shanti Chellaram to talk about a couple of Erlang libraries she has created! We hear from her about Pri-Queue and rafterl, and her motivation behind making them and some of the things we wishes she did differently! Shanti shares some of her background, early coding experiences, affinity for open source and her current work situation. From there we look at Pri-Queue, the problem it addresses and what a priority queue is. A highlight of the show is Shanti giving the best explanation of a bootstrapped skew binomial heap we have heard before explaining some of the main issues she faced in creating Pri-Queue. We then turn to rafterl, how she got started with it and her hopes for its future. Throughout the conversation Shanti shares her philosophy towards open source and coding going forward as well as offering advice for newcomers to Erlang. Make you you join us for this fantastic episode!
Key Points From This Episode:
A little bit about Shanti's background and current employment.
Shanti's early experiences and what got her into open source software. 
Some coding decisions that Shanti would make differently in retrospect. 
The problem that Pri-Queue solves; the dearth of data efficient libraries. 
What is a priority queue? Ordering your data with scores.
Shanti explains a bootstrapped skew binomial heap!
Some of the hurdles that Shanti faced in writing Pri-Queue. 
How Shanti got started on her other library, raft_erl. 
The three Raft protocols and how much of it is implemented in the library. 
Shanti's next goals for raft_erl; bug free and widely used.
The importance of distributed systems and Shanti's philosophy looking to the future.
Advice for someone just starting out in Elixir!
And much more! 
Links Mentioned in Today’s Episode:
SmartLogic — https://www.smartlogic.io/
Shanti Chellaram Linkedin— https://www.linkedin.com/in/shanti-chellaram-495444187
Shanti Chellaram on Twitter — https://twitter.com/theccoder
Shanti Chellaram on github — https://github.com/shantiii
Erlang — https://www.erlang.org/
Elixir — https://elixir-lang.org/
Pri-Queue — https://github.com/okeuday/pqueue
rafterl — https://github.com/shantiii/rafterl
MailChimp — https://mailchimp.com
Teachers Pay Teachers — https://www.teacherspayteachers.com/
Purely Functional Data Structures — https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04
Rust — https://www.rust-lang.org/
Raft — https://raft.github.io/
Raspberry Pi — https://www.raspberrypi.org/
ElixirConf — https://elixirconf.com/2019
Partisan — https://partisan.cloud/
 Special Guests: Dan Ivovich and Shanti Chellaram.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we welcome Shanti Chellaram to talk about a couple of Erlang libraries she has created! We hear from her about Pri-Queue and raft_erl, and her motivation behind making them and some of the things we wishes she did differently! Shanti shares some of her background, early coding experiences, affinity for open source and her current work situation. From there we look at Pri-Queue, the problem it addresses and what a priority queue is. A highlight of the show is Shanti giving the best explanation of a bootstrapped skew binomial heap we have heard before explaining some of the main issues she faced in creating Pri-Queue. We then turn to raft_erl, how she got started with it and her hopes for its future. Throughout the conversation Shanti shares her philosophy towards open source and coding going forward as well as offering advice for newcomers to Erlang. Make you you join us for this fantastic episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A little bit about Shanti&#39;s background and current employment.</li>
<li>Shanti&#39;s early experiences and what got her into open source software. </li>
<li>Some coding decisions that Shanti would make differently in retrospect. </li>
<li>The problem that Pri-Queue solves; the dearth of data efficient libraries. </li>
<li>What is a priority queue? Ordering your data with scores.</li>
<li>Shanti explains a bootstrapped skew binomial heap!</li>
<li>Some of the hurdles that Shanti faced in writing Pri-Queue. </li>
<li>How Shanti got started on her other library, raft_erl. </li>
<li>The three Raft protocols and how much of it is implemented in the library. </li>
<li>Shanti&#39;s next goals for raft_erl; bug free and widely used.</li>
<li>The importance of distributed systems and Shanti&#39;s philosophy looking to the future.</li>
<li>Advice for someone just starting out in Elixir!</li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Shanti Chellaram Linkedin— <a href="https://www.linkedin.com/in/shanti-chellaram-495444187" rel="nofollow">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>
Shanti Chellaram on Twitter — <a href="https://twitter.com/theccoder" rel="nofollow">https://twitter.com/theccoder</a><br>
Shanti Chellaram on github — <a href="https://github.com/shantiii" rel="nofollow">https://github.com/shantiii</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Pri-Queue — <a href="https://github.com/okeuday/pqueue" rel="nofollow">https://github.com/okeuday/pqueue</a><br>
raft_erl — <a href="https://github.com/shantiii/raft_erl" rel="nofollow">https://github.com/shantiii/raft_erl</a><br>
MailChimp — <a href="https://mailchimp.com" rel="nofollow">https://mailchimp.com</a><br>
Teachers Pay Teachers — <a href="https://www.teacherspayteachers.com/" rel="nofollow">https://www.teacherspayteachers.com/</a><br>
Purely Functional Data Structures — <a href="https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04" rel="nofollow">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>
Rust — <a href="https://www.rust-lang.org/" rel="nofollow">https://www.rust-lang.org/</a><br>
Raft — <a href="https://raft.github.io/" rel="nofollow">https://raft.github.io/</a><br>
Raspberry Pi — <a href="https://www.raspberrypi.org/" rel="nofollow">https://www.raspberrypi.org/</a><br>
ElixirConf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a><br>
Partisan — <a href="https://partisan.cloud/" rel="nofollow">https://partisan.cloud/</a></p><p>Special Guests: Dan Ivovich and Shanti Chellaram.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we welcome Shanti Chellaram to talk about a couple of Erlang libraries she has created! We hear from her about Pri-Queue and raft_erl, and her motivation behind making them and some of the things we wishes she did differently! Shanti shares some of her background, early coding experiences, affinity for open source and her current work situation. From there we look at Pri-Queue, the problem it addresses and what a priority queue is. A highlight of the show is Shanti giving the best explanation of a bootstrapped skew binomial heap we have heard before explaining some of the main issues she faced in creating Pri-Queue. We then turn to raft_erl, how she got started with it and her hopes for its future. Throughout the conversation Shanti shares her philosophy towards open source and coding going forward as well as offering advice for newcomers to Erlang. Make you you join us for this fantastic episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A little bit about Shanti&#39;s background and current employment.</li>
<li>Shanti&#39;s early experiences and what got her into open source software. </li>
<li>Some coding decisions that Shanti would make differently in retrospect. </li>
<li>The problem that Pri-Queue solves; the dearth of data efficient libraries. </li>
<li>What is a priority queue? Ordering your data with scores.</li>
<li>Shanti explains a bootstrapped skew binomial heap!</li>
<li>Some of the hurdles that Shanti faced in writing Pri-Queue. </li>
<li>How Shanti got started on her other library, raft_erl. </li>
<li>The three Raft protocols and how much of it is implemented in the library. </li>
<li>Shanti&#39;s next goals for raft_erl; bug free and widely used.</li>
<li>The importance of distributed systems and Shanti&#39;s philosophy looking to the future.</li>
<li>Advice for someone just starting out in Elixir!</li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Shanti Chellaram Linkedin— <a href="https://www.linkedin.com/in/shanti-chellaram-495444187" rel="nofollow">https://www.linkedin.com/in/shanti-chellaram-495444187</a><br>
Shanti Chellaram on Twitter — <a href="https://twitter.com/theccoder" rel="nofollow">https://twitter.com/theccoder</a><br>
Shanti Chellaram on github — <a href="https://github.com/shantiii" rel="nofollow">https://github.com/shantiii</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Pri-Queue — <a href="https://github.com/okeuday/pqueue" rel="nofollow">https://github.com/okeuday/pqueue</a><br>
raft_erl — <a href="https://github.com/shantiii/raft_erl" rel="nofollow">https://github.com/shantiii/raft_erl</a><br>
MailChimp — <a href="https://mailchimp.com" rel="nofollow">https://mailchimp.com</a><br>
Teachers Pay Teachers — <a href="https://www.teacherspayteachers.com/" rel="nofollow">https://www.teacherspayteachers.com/</a><br>
Purely Functional Data Structures — <a href="https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04" rel="nofollow">https://www.amazon.com/Purely-Functional-Structures-Chris-Okasaki-ebook/dp/B00AKE1V04</a><br>
Rust — <a href="https://www.rust-lang.org/" rel="nofollow">https://www.rust-lang.org/</a><br>
Raft — <a href="https://raft.github.io/" rel="nofollow">https://raft.github.io/</a><br>
Raspberry Pi — <a href="https://www.raspberrypi.org/" rel="nofollow">https://www.raspberrypi.org/</a><br>
ElixirConf — <a href="https://elixirconf.com/2019" rel="nofollow">https://elixirconf.com/2019</a><br>
Partisan — <a href="https://partisan.cloud/" rel="nofollow">https://partisan.cloud/</a></p><p>Special Guests: Dan Ivovich and Shanti Chellaram.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Michał Muskała on Ecto and jason – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-muskala</link>
      <guid isPermaLink="false">d20c39c5-2b6c-44a9-96ff-0dff754dd08f</guid>
      <pubDate>Thu, 29 Aug 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d20c39c5-2b6c-44a9-96ff-0dff754dd08f.mp3" length="40484007" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we are joined by Michal Muskala, who is currently a freelance software engineer and he is here to talk to us about his work on the Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal explain how he became involved in the project and the work he did on it. He explains a little of its inner workings, issues and what excited him about it initially. We then turn to jason, a widely popular library that Michal created for parsing JSON. Michal unpacks its particulars, differentiating for us between the driver and adapter and the lessons he learned working on them. The last bit of our conversation is spent talking about open source and Michal's commitment to its philosophy. We discuss making time to work on projects, buy in from employers and and why getting involved can be scary yet is so important! For all this and more, join us for this great episode!</itunes:subtitle>
      <itunes:duration>27:31</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d20c39c5-2b6c-44a9-96ff-0dff754dd08f/cover.jpg" />
      <description>Today on the show we are joined by Michal Muskala, who is currently a freelance software engineer and he is here to talk to us about his work on the Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal explain how he became involved in the project and the work he did on it. He explains a little of its inner workings, issues and what excited him about it initially. We then turn to jason, a widely popular library that Michal created for parsing JSON. Michal unpacks its particulars, differentiating for us between the driver and adapter and the lessons he learned working on them. The last bit of our conversation is spent talking about open source and Michal's commitment to its philosophy. We discuss making time to work on projects, buy in from employers and and why getting involved can be scary yet is so important! For all this and more, join us for this great episode!
Key Points From This Episode:
A little bit about Michal's work background and how he got started on Elixir. 
The parts of Ecto that Michal worked on at Google Summer of Code.
Differentiating between the driver and the adapter; communicating with the database.
Structuring the code and what Michal would do differently now. 
Creating jason, the default JSON parser and the impetus behind it. 
Understanding lexing and tokenizing; largely the same thing with different names.
Macros on jason and forcing the VM to use optimizations in particular cases. 
Performance on jason; how Michal achieved the speeds he did.
Michal's path to open source software and what followed his work in MongoDB. 
Finding time to work on open source projects while employed.   
BEAM, alternative implementations and why they are important. 
Michal's call to action for our listeners! 
And much more! 
Links Mentioned in Today’s Episode:
SmartLogic — https://www.smartlogic.io/
Elixir — https://elixir-lang.org/
Michal Muskala — https://michal.muskala.eu/
Michal Muskala on Twitter — https://twitter.com/michalmuskala?lang=en
Ecto — https://hexdocs.pm/ecto/Ecto.html
jason — https://github.com/michalmuskala/jason 
Google Summer of Code — https://summerofcode.withgoogle.com/
MondoDB — https://www.mongodb.com/
Erlang — https://www.erlang.org/
Binary Optimization in Erlang Documentation — https://rhye.org/post/erlang-binary-matching-performance/ (Please verify link)
BEAM  — https://blog.stenmans.org/theBeamBook/
Erjang — https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html
Atom VM — http://atomvm.sourceforge.net/ Special Guest: Michał Muskała.
</description>
      <itunes:keywords>elixir, erlang, ecto, jason</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we are joined by Michal Muskala, who is currently a freelance software engineer and he is here to talk to us about his work on the Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal explain how he became involved in the project and the work he did on it. He explains a little of its inner workings, issues and what excited him about it initially. We then turn to jason, a widely popular library that Michal created for parsing JSON. Michal unpacks its particulars, differentiating for us between the driver and adapter and the lessons he learned working on them. The last bit of our conversation is spent talking about open source and Michal&#39;s commitment to its philosophy. We discuss making time to work on projects, buy in from employers and and why getting involved can be scary yet is so important! For all this and more, join us for this great episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A little bit about Michal&#39;s work background and how he got started on Elixir. </li>
<li>The parts of Ecto that Michal worked on at Google Summer of Code.</li>
<li>Differentiating between the driver and the adapter; communicating with the database.</li>
<li>Structuring the code and what Michal would do differently now. </li>
<li>Creating jason, the default JSON parser and the impetus behind it. </li>
<li>Understanding lexing and tokenizing; largely the same thing with different names.</li>
<li>Macros on jason and forcing the VM to use optimizations in particular cases. </li>
<li>Performance on jason; how Michal achieved the speeds he did.</li>
<li>Michal&#39;s path to open source software and what followed his work in MongoDB. </li>
<li>Finding time to work on open source projects while employed.<br></li>
<li>BEAM, alternative implementations and why they are important. </li>
<li>Michal&#39;s call to action for our listeners! </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Michal Muskala — <a href="https://michal.muskala.eu/" rel="nofollow">https://michal.muskala.eu/</a><br>
Michal Muskala on Twitter — <a href="https://twitter.com/michalmuskala?lang=en" rel="nofollow">https://twitter.com/michalmuskala?lang=en</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
jason — <a href="https://github.com/michalmuskala/jason" rel="nofollow">https://github.com/michalmuskala/jason</a> <br>
Google Summer of Code — <a href="https://summerofcode.withgoogle.com/" rel="nofollow">https://summerofcode.withgoogle.com/</a><br>
MondoDB — <a href="https://www.mongodb.com/" rel="nofollow">https://www.mongodb.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Binary Optimization in Erlang Documentation — <a href="https://rhye.org/post/erlang-binary-matching-performance/" rel="nofollow">https://rhye.org/post/erlang-binary-matching-performance/</a> (Please verify link)<br>
BEAM  — <a href="https://blog.stenmans.org/theBeamBook/" rel="nofollow">https://blog.stenmans.org/theBeamBook/</a><br>
Erjang — <a href="https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html" rel="nofollow">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>
Atom VM — <a href="http://atomvm.sourceforge.net/" rel="nofollow">http://atomvm.sourceforge.net/</a></p><p>Special Guest: Michał Muskała.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we are joined by Michal Muskala, who is currently a freelance software engineer and he is here to talk to us about his work on the Ecto and jason libraries. With Ecto we continue our journey into Elixir and Michal explain how he became involved in the project and the work he did on it. He explains a little of its inner workings, issues and what excited him about it initially. We then turn to jason, a widely popular library that Michal created for parsing JSON. Michal unpacks its particulars, differentiating for us between the driver and adapter and the lessons he learned working on them. The last bit of our conversation is spent talking about open source and Michal&#39;s commitment to its philosophy. We discuss making time to work on projects, buy in from employers and and why getting involved can be scary yet is so important! For all this and more, join us for this great episode!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>A little bit about Michal&#39;s work background and how he got started on Elixir. </li>
<li>The parts of Ecto that Michal worked on at Google Summer of Code.</li>
<li>Differentiating between the driver and the adapter; communicating with the database.</li>
<li>Structuring the code and what Michal would do differently now. </li>
<li>Creating jason, the default JSON parser and the impetus behind it. </li>
<li>Understanding lexing and tokenizing; largely the same thing with different names.</li>
<li>Macros on jason and forcing the VM to use optimizations in particular cases. </li>
<li>Performance on jason; how Michal achieved the speeds he did.</li>
<li>Michal&#39;s path to open source software and what followed his work in MongoDB. </li>
<li>Finding time to work on open source projects while employed.<br></li>
<li>BEAM, alternative implementations and why they are important. </li>
<li>Michal&#39;s call to action for our listeners! </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Michal Muskala — <a href="https://michal.muskala.eu/" rel="nofollow">https://michal.muskala.eu/</a><br>
Michal Muskala on Twitter — <a href="https://twitter.com/michalmuskala?lang=en" rel="nofollow">https://twitter.com/michalmuskala?lang=en</a><br>
Ecto — <a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">https://hexdocs.pm/ecto/Ecto.html</a><br>
jason — <a href="https://github.com/michalmuskala/jason" rel="nofollow">https://github.com/michalmuskala/jason</a> <br>
Google Summer of Code — <a href="https://summerofcode.withgoogle.com/" rel="nofollow">https://summerofcode.withgoogle.com/</a><br>
MondoDB — <a href="https://www.mongodb.com/" rel="nofollow">https://www.mongodb.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Binary Optimization in Erlang Documentation — <a href="https://rhye.org/post/erlang-binary-matching-performance/" rel="nofollow">https://rhye.org/post/erlang-binary-matching-performance/</a> (Please verify link)<br>
BEAM  — <a href="https://blog.stenmans.org/theBeamBook/" rel="nofollow">https://blog.stenmans.org/theBeamBook/</a><br>
Erjang — <a href="https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html" rel="nofollow">https://jaxenter.com/introducing-erjang-erlang-for-the-jvm-108005.html</a><br>
Atom VM — <a href="http://atomvm.sourceforge.net/" rel="nofollow">http://atomvm.sourceforge.net/</a></p><p>Special Guest: Michał Muskała.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Todd Resudek on Hex – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-resudek</link>
      <guid isPermaLink="false">2ebfdc2e-d967-4324-bcbe-de67bccb57e6</guid>
      <pubDate>Thu, 22 Aug 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/2ebfdc2e-d967-4324-bcbe-de67bccb57e6.mp3" length="33365100" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we get stuck into the inner workings of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you might already know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the conference scene, and one of the three core team members at Hex. With the total downloads sitting at 641 million, the Hex community is growing rapidly and shows no signs of slowing down. In this episode, we discover what makes the Hex packages some of the most popular packages out there today, as well as the new and improved features currently in the pipeline. In addition, we find out how Todd first got involved with the Hex team and how the team makes decisions and problem solves.</itunes:subtitle>
      <itunes:duration>34:00</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/2/2ebfdc2e-d967-4324-bcbe-de67bccb57e6/cover.jpg" />
      <description>Today on the show we get stuck into the inner workings of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you might already know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the conference scene, and one of the three core team members at Hex. With the total downloads sitting at 641 million, the Hex community is growing rapidly and shows no signs of slowing down. In this episode, we discover what makes the Hex packages some of the most popular packages out there today, as well as the new and improved features currently in the pipeline. In addition, we find out how Todd first got involved with the Hex team and how the team makes decisions and problem solves. 
Key Points From This Episode:
Transferring a new library into an old ecosystem.
Todd’s challenges learning Elixir and Hex.
Learn more about the functions of Alphabetify.
An introduction to the uses of ETS storage.
Contributing to Open Source while working at Weedmaps.
Discover how Todd got involved with the Hex team.
Learn more about the different faces of Hex.
Find out how decisions are made within the Hex team.
Just how busy is the Hex community right now?
The top five underground features of Hex.
Discover the latest features now available on Hex.
Find out what new Hex features are in the pipeline.
And much more!
Links Mentioned in Today’s Episode:
Todd Resudek — https://www.linkedin.com/in/toddresudek/
Weedmaps — https://weedmaps.com/
Hex — https://hex.pm/
rebar3 — https://www.rebar3.org/
Alphabetify — https://hex.pm/packages/alphabetify
ETS — https://elixirschool.com/en/lessons/specifics/ets/
Elixir Mix Podcast — https://devchat.tv/elixir-mix/
Voitek — https://voitekk.com/
Erlef Erlang Ecosystem Foundation — https://erlef.org/
Crates — https://crates.io/crates/hex
Smart Software with SmartLogic — https://podcast.smartlogic.io/
Nerves MeetUp on Twitter — https://twitter.com/nervesmeetup
The Big Elixir — https://www.thebigelixir.com/
 Special Guest: Todd Resudek.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we get stuck into the inner workings of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you might already know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the conference scene, and one of the three core team members at Hex. With the total downloads sitting at 641 million, the Hex community is growing rapidly and shows no signs of slowing down. In this episode, we discover what makes the Hex packages some of the most popular packages out there today, as well as the new and improved features currently in the pipeline. In addition, we find out how Todd first got involved with the Hex team and how the team makes decisions and problem solves. </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Transferring a new library into an old ecosystem.</li>
<li>Todd’s challenges learning Elixir and Hex.</li>
<li>Learn more about the functions of Alphabetify.</li>
<li>An introduction to the uses of ETS storage.</li>
<li>Contributing to Open Source while working at Weedmaps.</li>
<li>Discover how Todd got involved with the Hex team.</li>
<li>Learn more about the different faces of Hex.</li>
<li>Find out how decisions are made within the Hex team.</li>
<li>Just how busy is the Hex community right now?</li>
<li>The top five underground features of Hex.</li>
<li>Discover the latest features now available on Hex.</li>
<li>Find out what new Hex features are in the pipeline.</li>
<li>And much more!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Todd Resudek — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a><br>
rebar3 — <a href="https://www.rebar3.org/" rel="nofollow">https://www.rebar3.org/</a><br>
Alphabetify — <a href="https://hex.pm/packages/alphabetify" rel="nofollow">https://hex.pm/packages/alphabetify</a><br>
ETS — <a href="https://elixirschool.com/en/lessons/specifics/ets/" rel="nofollow">https://elixirschool.com/en/lessons/specifics/ets/</a><br>
Elixir Mix Podcast — <a href="https://devchat.tv/elixir-mix/" rel="nofollow">https://devchat.tv/elixir-mix/</a><br>
Voitek — <a href="https://voitekk.com/" rel="nofollow">https://voitekk.com/</a><br>
Erlef Erlang Ecosystem Foundation — <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
Crates — <a href="https://crates.io/crates/hex" rel="nofollow">https://crates.io/crates/hex</a><br>
Smart Software with SmartLogic — <a href="https://podcast.smartlogic.io/" rel="nofollow">https://podcast.smartlogic.io/</a><br>
Nerves MeetUp on Twitter — <a href="https://twitter.com/nervesmeetup" rel="nofollow">https://twitter.com/nervesmeetup</a><br>
The Big Elixir — <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we get stuck into the inner workings of Hex 1.0 and are happy to be joined by returning guest, Todd Resudek. As you might already know, Todd is the Senior Software Engineer at Weedmaps, a regular speaker on the conference scene, and one of the three core team members at Hex. With the total downloads sitting at 641 million, the Hex community is growing rapidly and shows no signs of slowing down. In this episode, we discover what makes the Hex packages some of the most popular packages out there today, as well as the new and improved features currently in the pipeline. In addition, we find out how Todd first got involved with the Hex team and how the team makes decisions and problem solves. </p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Transferring a new library into an old ecosystem.</li>
<li>Todd’s challenges learning Elixir and Hex.</li>
<li>Learn more about the functions of Alphabetify.</li>
<li>An introduction to the uses of ETS storage.</li>
<li>Contributing to Open Source while working at Weedmaps.</li>
<li>Discover how Todd got involved with the Hex team.</li>
<li>Learn more about the different faces of Hex.</li>
<li>Find out how decisions are made within the Hex team.</li>
<li>Just how busy is the Hex community right now?</li>
<li>The top five underground features of Hex.</li>
<li>Discover the latest features now available on Hex.</li>
<li>Find out what new Hex features are in the pipeline.</li>
<li>And much more!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Todd Resudek — <a href="https://www.linkedin.com/in/toddresudek/" rel="nofollow">https://www.linkedin.com/in/toddresudek/</a><br>
Weedmaps — <a href="https://weedmaps.com/" rel="nofollow">https://weedmaps.com/</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a><br>
rebar3 — <a href="https://www.rebar3.org/" rel="nofollow">https://www.rebar3.org/</a><br>
Alphabetify — <a href="https://hex.pm/packages/alphabetify" rel="nofollow">https://hex.pm/packages/alphabetify</a><br>
ETS — <a href="https://elixirschool.com/en/lessons/specifics/ets/" rel="nofollow">https://elixirschool.com/en/lessons/specifics/ets/</a><br>
Elixir Mix Podcast — <a href="https://devchat.tv/elixir-mix/" rel="nofollow">https://devchat.tv/elixir-mix/</a><br>
Voitek — <a href="https://voitekk.com/" rel="nofollow">https://voitekk.com/</a><br>
Erlef Erlang Ecosystem Foundation — <a href="https://erlef.org/" rel="nofollow">https://erlef.org/</a><br>
Crates — <a href="https://crates.io/crates/hex" rel="nofollow">https://crates.io/crates/hex</a><br>
Smart Software with SmartLogic — <a href="https://podcast.smartlogic.io/" rel="nofollow">https://podcast.smartlogic.io/</a><br>
Nerves MeetUp on Twitter — <a href="https://twitter.com/nervesmeetup" rel="nofollow">https://twitter.com/nervesmeetup</a><br>
The Big Elixir — <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a></p><p>Special Guest: Todd Resudek.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Chris Keathley on Wallaby and Raft – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-keathley</link>
      <guid isPermaLink="false">37e3efb0-85b7-4dd9-bbf9-a997b01c6437</guid>
      <pubDate>Thu, 15 Aug 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/37e3efb0-85b7-4dd9-bbf9-a997b01c6437.mp3" length="26280117" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>In this episode of the podcast we are joined by Chris Keathley to continue our exploration of Elixir internals as he tells us about two very popular libraries that he developed, Wallaby and Raft. We start off with some background and his initial experiences with Elixir and open source projects before diving into Wallaby and some of the biggest lessons that Chris learned during and after his work on the library.</itunes:subtitle>
      <itunes:duration>26:46</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/37e3efb0-85b7-4dd9-bbf9-a997b01c6437/cover.jpg" />
      <description>In this episode of the podcast we are joined by Chris Keathley to continue our exploration of Elixir internals as he tells us about two very popular libraries that he developed, Wallaby and Raft. We start off with some background and his initial experiences with Elixir and open source projects before diving into Wallaby and some of the biggest lessons that Chris learned during and after his work on the library. 
Chris does a great job of explaining concurrent tests and the Sandbox and some of the reasons he has pretty much stopped working on the front end of projects. From there we move onto another one of Chris' exciting projects, Raft! In order to introduce the library, Chris explains more about consensus algorithms, Leslie Lamport and his groundbreaking work on Paxos. Raft is, in some ways, a simplified, more accessible version of Paxos for Elixir and Chris goes on to give a brief rundown of its inner workings. For this great conversation with a great guest, join us today!
Key Points From This Episode:
Chris' background, history with Elixir and his current employment. 
How Chris got started with open source work. 
Why Chris has moved away from front end work in the last while. 
The major lessons Chris learned while building Wallaby.
How the concurrent tests work on Wallaby and the Sandbox. 
Why Chris is still excited about Raft, even though he hasn't touched it in a while.  
Explaining Raft, consensus algorithms and Paxos. 
How the Raft library actually works; building Raft systems and processes.  
Where to find and connect with Chris online!
And much more! 
Links Mentioned in Today’s Episode:
SmartLogic — https://www.smartlogic.io/
Chris Keathley — https://keathley.io/
Chris Keathley on github — https://github.com/keathley
Bleacher Report — https://bleacherreport.com/
Wallaby — https://hexdocs.pm/wallaby/Wallaby.html
Raft — https://raft.github.io/
Erlang — https://www.erlang.org/
Slack — https://slack.com/
Leslie Lamport — http://www.lamport.org/
Paxos Made Live — https://blog.acolyer.org/2015/03/05/paxos-made-live/
Elixir Outlaws Podcast — https://elixiroutlaws.com/ Special Guest: Chris Keathley.
</description>
      <itunes:keywords></itunes:keywords>
      <content:encoded><![CDATA[
        <p>In this episode of the podcast we are joined by Chris Keathley to continue our exploration of Elixir internals as he tells us about two very popular libraries that he developed, Wallaby and Raft. We start off with some background and his initial experiences with Elixir and open source projects before diving into Wallaby and some of the biggest lessons that Chris learned during and after his work on the library. </p>

<p>Chris does a great job of explaining concurrent tests and the Sandbox and some of the reasons he has pretty much stopped working on the front end of projects. From there we move onto another one of Chris&#39; exciting projects, Raft! In order to introduce the library, Chris explains more about consensus algorithms, Leslie Lamport and his groundbreaking work on Paxos. Raft is, in some ways, a simplified, more accessible version of Paxos for Elixir and Chris goes on to give a brief rundown of its inner workings. For this great conversation with a great guest, join us today!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Chris&#39; background, history with Elixir and his current employment. </li>
<li>How Chris got started with open source work. </li>
<li>Why Chris has moved away from front end work in the last while. </li>
<li>The major lessons Chris learned while building Wallaby.</li>
<li>How the concurrent tests work on Wallaby and the Sandbox. </li>
<li>Why Chris is still excited about Raft, even though he hasn&#39;t touched it in a while.<br></li>
<li>Explaining Raft, consensus algorithms and Paxos. </li>
<li>How the Raft library actually works; building Raft systems and processes.<br></li>
<li>Where to find and connect with Chris online!</li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Chris Keathley on github — <a href="https://github.com/keathley" rel="nofollow">https://github.com/keathley</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Wallaby — <a href="https://hexdocs.pm/wallaby/Wallaby.html" rel="nofollow">https://hexdocs.pm/wallaby/Wallaby.html</a><br>
Raft — <a href="https://raft.github.io/" rel="nofollow">https://raft.github.io/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
Leslie Lamport — <a href="http://www.lamport.org/" rel="nofollow">http://www.lamport.org/</a><br>
Paxos Made Live — <a href="https://blog.acolyer.org/2015/03/05/paxos-made-live/" rel="nofollow">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a></p><p>Special Guest: Chris Keathley.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>In this episode of the podcast we are joined by Chris Keathley to continue our exploration of Elixir internals as he tells us about two very popular libraries that he developed, Wallaby and Raft. We start off with some background and his initial experiences with Elixir and open source projects before diving into Wallaby and some of the biggest lessons that Chris learned during and after his work on the library. </p>

<p>Chris does a great job of explaining concurrent tests and the Sandbox and some of the reasons he has pretty much stopped working on the front end of projects. From there we move onto another one of Chris&#39; exciting projects, Raft! In order to introduce the library, Chris explains more about consensus algorithms, Leslie Lamport and his groundbreaking work on Paxos. Raft is, in some ways, a simplified, more accessible version of Paxos for Elixir and Chris goes on to give a brief rundown of its inner workings. For this great conversation with a great guest, join us today!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Chris&#39; background, history with Elixir and his current employment. </li>
<li>How Chris got started with open source work. </li>
<li>Why Chris has moved away from front end work in the last while. </li>
<li>The major lessons Chris learned while building Wallaby.</li>
<li>How the concurrent tests work on Wallaby and the Sandbox. </li>
<li>Why Chris is still excited about Raft, even though he hasn&#39;t touched it in a while.<br></li>
<li>Explaining Raft, consensus algorithms and Paxos. </li>
<li>How the Raft library actually works; building Raft systems and processes.<br></li>
<li>Where to find and connect with Chris online!</li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>SmartLogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Chris Keathley — <a href="https://keathley.io/" rel="nofollow">https://keathley.io/</a><br>
Chris Keathley on github — <a href="https://github.com/keathley" rel="nofollow">https://github.com/keathley</a><br>
Bleacher Report — <a href="https://bleacherreport.com/" rel="nofollow">https://bleacherreport.com/</a><br>
Wallaby — <a href="https://hexdocs.pm/wallaby/Wallaby.html" rel="nofollow">https://hexdocs.pm/wallaby/Wallaby.html</a><br>
Raft — <a href="https://raft.github.io/" rel="nofollow">https://raft.github.io/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
Slack — <a href="https://slack.com/" rel="nofollow">https://slack.com/</a><br>
Leslie Lamport — <a href="http://www.lamport.org/" rel="nofollow">http://www.lamport.org/</a><br>
Paxos Made Live — <a href="https://blog.acolyer.org/2015/03/05/paxos-made-live/" rel="nofollow">https://blog.acolyer.org/2015/03/05/paxos-made-live/</a><br>
Elixir Outlaws Podcast — <a href="https://elixiroutlaws.com/" rel="nofollow">https://elixiroutlaws.com/</a></p><p>Special Guest: Chris Keathley.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>René Föhring on Credo – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-fohring</link>
      <guid isPermaLink="false">9532d3dd-1d07-4ac9-b4c8-3f1580deff11</guid>
      <pubDate>Thu, 08 Aug 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9532d3dd-1d07-4ac9-b4c8-3f1580deff11.mp3" length="29222045" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome back to the SmartLogic Podcast where we talk about the latest developments and best practices in the web and mobile software industry. In continuing with our theme of Elixir Internals, we’re having a conversation about the inner workings of one of the most popular Elixir libraries, Credo, and we are joined by the author René Föhring. René shares the story of how he was introduced to Elixir while doing his PhD and looking for a new programming language and then shares the philosophy and inspiration Credo was developed on.</itunes:subtitle>
      <itunes:duration>29:36</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9532d3dd-1d07-4ac9-b4c8-3f1580deff11/cover.jpg" />
      <description>Welcome back to the SmartLogic Podcast where we talk about the latest developments and best practices in the web and mobile software industry. In continuing with our theme of Elixir Internals, we’re having a conversation about the inner workings of one of the most popular Elixir libraries, Credo, and we are joined by the author René Föhring. 
René shares the story of how he was introduced to Elixir while doing his PhD and looking for a new programming language and then shares the philosophy and inspiration Credo was developed on. Wanting Credo to be a less rule-based, authoritative code analysis tool and more user friendly, René focused on creating it to act as a type of digital mentor to the many developers out there who do not have a human mentor. He also shares about some of the launching hiccups, what he would have done differently had he been given another opportunity and some of the most important lessons that he has learned working in the open source community. Be sure to join us for all the inside info! 
Key Points from This Episode:
More about René’s job as head of product development at 5 Minds and what they do. 
What he does in his free time: open source maintenance and conference speaking. 
How he got started with Elixir and wanting to learn a new programming language.
What Credo is all about, why you’d want to use it and what makes it different.  
The inspiration behind writing Credo and wanting a more positive, less dogmatic tool.  
Starting off building on Dogma but then pivoting and going in an independent direction. 
The hiccups René experienced when first releasing Credo and what he’d do differently. 
The different checks in Credo and how they function and respond to issues. 
How Elixir 1.6 impacted the development of Credo.  
What’s new with the Credo 1.1 release?
René’s experience working with open source and the first library he contributed to.  
Important lessons he has learned by being part of the open source community. 
And much more! 
Links Mentioned in Today’s Episode:
Elixir — https://elixir-lang.org/
Credo — http://credo-ci.org/
René Föhring on Twitter — https://twitter.com/rrrene?lang=en
5 Minds IT – Solutions — https://www.5minds.de/
GitHub — https://github.com/
Ruby — https://www.ruby-lang.org/en/
Go — https://golang.org/
Cplusplus — http://www.cplusplus.com/
StyleCop — https://github.com/StyleCop/StyleCop
Dogma — https://github.com/lpil/dogma
Hex — https://hex.pm/
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: René Föhring.
</description>
      <itunes:keywords>elixir, credo</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to the SmartLogic Podcast where we talk about the latest developments and best practices in the web and mobile software industry. In continuing with our theme of Elixir Internals, we’re having a conversation about the inner workings of one of the most popular Elixir libraries, Credo, and we are joined by the author René Föhring. </p>

<p>René shares the story of how he was introduced to Elixir while doing his PhD and looking for a new programming language and then shares the philosophy and inspiration Credo was developed on. Wanting Credo to be a less rule-based, authoritative code analysis tool and more user friendly, René focused on creating it to act as a type of digital mentor to the many developers out there who do not have a human mentor. He also shares about some of the launching hiccups, what he would have done differently had he been given another opportunity and some of the most important lessons that he has learned working in the open source community. Be sure to join us for all the inside info! </p>

<p><strong>Key Points from This Episode:</strong></p>

<ul>
<li>More about René’s job as head of product development at 5 Minds and what they do. </li>
<li>What he does in his free time: open source maintenance and conference speaking. </li>
<li>How he got started with Elixir and wanting to learn a new programming language.</li>
<li>What Credo is all about, why you’d want to use it and what makes it different.<br></li>
<li>The inspiration behind writing Credo and wanting a more positive, less dogmatic tool.<br></li>
<li>Starting off building on Dogma but then pivoting and going in an independent direction. </li>
<li>The hiccups René experienced when first releasing Credo and what he’d do differently. </li>
<li>The different checks in Credo and how they function and respond to issues. </li>
<li>How Elixir 1.6 impacted the development of Credo.<br></li>
<li>What’s new with the Credo 1.1 release?</li>
<li>René’s experience working with open source and the first library he contributed to.<br></li>
<li>Important lessons he has learned by being part of the open source community. </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Credo — <a href="http://credo-ci.org/" rel="nofollow">http://credo-ci.org/</a><br>
René Föhring on Twitter — <a href="https://twitter.com/rrrene?lang=en" rel="nofollow">https://twitter.com/rrrene?lang=en</a><br>
5 Minds IT – Solutions — <a href="https://www.5minds.de/" rel="nofollow">https://www.5minds.de/</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Go — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Cplusplus — <a href="http://www.cplusplus.com/" rel="nofollow">http://www.cplusplus.com/</a><br>
StyleCop — <a href="https://github.com/StyleCop/StyleCop" rel="nofollow">https://github.com/StyleCop/StyleCop</a><br>
Dogma — <a href="https://github.com/lpil/dogma" rel="nofollow">https://github.com/lpil/dogma</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: René Föhring.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to the SmartLogic Podcast where we talk about the latest developments and best practices in the web and mobile software industry. In continuing with our theme of Elixir Internals, we’re having a conversation about the inner workings of one of the most popular Elixir libraries, Credo, and we are joined by the author René Föhring. </p>

<p>René shares the story of how he was introduced to Elixir while doing his PhD and looking for a new programming language and then shares the philosophy and inspiration Credo was developed on. Wanting Credo to be a less rule-based, authoritative code analysis tool and more user friendly, René focused on creating it to act as a type of digital mentor to the many developers out there who do not have a human mentor. He also shares about some of the launching hiccups, what he would have done differently had he been given another opportunity and some of the most important lessons that he has learned working in the open source community. Be sure to join us for all the inside info! </p>

<p><strong>Key Points from This Episode:</strong></p>

<ul>
<li>More about René’s job as head of product development at 5 Minds and what they do. </li>
<li>What he does in his free time: open source maintenance and conference speaking. </li>
<li>How he got started with Elixir and wanting to learn a new programming language.</li>
<li>What Credo is all about, why you’d want to use it and what makes it different.<br></li>
<li>The inspiration behind writing Credo and wanting a more positive, less dogmatic tool.<br></li>
<li>Starting off building on Dogma but then pivoting and going in an independent direction. </li>
<li>The hiccups René experienced when first releasing Credo and what he’d do differently. </li>
<li>The different checks in Credo and how they function and respond to issues. </li>
<li>How Elixir 1.6 impacted the development of Credo.<br></li>
<li>What’s new with the Credo 1.1 release?</li>
<li>René’s experience working with open source and the first library he contributed to.<br></li>
<li>Important lessons he has learned by being part of the open source community. </li>
<li>And much more! </li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Credo — <a href="http://credo-ci.org/" rel="nofollow">http://credo-ci.org/</a><br>
René Föhring on Twitter — <a href="https://twitter.com/rrrene?lang=en" rel="nofollow">https://twitter.com/rrrene?lang=en</a><br>
5 Minds IT – Solutions — <a href="https://www.5minds.de/" rel="nofollow">https://www.5minds.de/</a><br>
GitHub — <a href="https://github.com/" rel="nofollow">https://github.com/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Go — <a href="https://golang.org/" rel="nofollow">https://golang.org/</a><br>
Cplusplus — <a href="http://www.cplusplus.com/" rel="nofollow">http://www.cplusplus.com/</a><br>
StyleCop — <a href="https://github.com/StyleCop/StyleCop" rel="nofollow">https://github.com/StyleCop/StyleCop</a><br>
Dogma — <a href="https://github.com/lpil/dogma" rel="nofollow">https://github.com/lpil/dogma</a><br>
Hex — <a href="https://hex.pm/" rel="nofollow">https://hex.pm/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: René Föhring.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Meryl Dakin on Token Alchemist – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-dakin</link>
      <guid isPermaLink="false">3050865c-0418-42d6-ade9-9605af11fee6</guid>
      <pubDate>Thu, 01 Aug 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/3050865c-0418-42d6-ade9-9605af11fee6.mp3" length="27206406" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we continue our series on the inner workings of several different Elixir libraries and are happy to be joined by Meryl Dakin, Software Engineer at the Flatiron School and author of Token Alchemist. In this episode, we discover how Meryl got started with Elixir and what the process was like for her transitioning from Ruby to Elixir. We learn more about the internal functions of Token Alchemist within the school context and discuss the unique opportunities Meryl has discovered in Elixir, as well as the trickier language features that programmers are likely to experience in their learning process. Meryl also shares the challenges that Token Alchemist attempts to overcome – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more, be sure to click play!</itunes:subtitle>
      <itunes:duration>27:31</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/3/3050865c-0418-42d6-ade9-9605af11fee6/cover.jpg" />
      <description>Today on the show we continue our series on the inner workings of several different Elixir libraries and are happy to be joined by Meryl Dakin, Software Engineer at the Flatiron School and author of Token Alchemist. In this episode, we discover how Meryl got started with Elixir and what the process was like for her transitioning from Ruby to Elixir. We learn more about the internal functions of Token Alchemist within the school context and discuss the unique opportunities Meryl has discovered in Elixir, as well as the trickier language features that programmers are likely to experience in their learning process. Meryl also shares the challenges that Token Alchemist attempts to overcome – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more, be sure to click play!
Key Points From This Episode:
Discover why Meryl first got started with Elixir.
Learn more about the Flatiron Bootcamp for coders.
Meryl’s experience in transitioning from Ruby to Elixir.
The opportunities for concurrency and fault tolerance in Elixir.
Discover the top three tricky language features in Elixir.
The benefits of going back to the basics of Elixir.
Find out the problems that Token Alchemist attempts to solve.
Meryl explains LTI and the Learn.co platform for students. 
Learn more about custom parameters in Token Alchemist.
The process of learning OAuth in Token Alchemist.
What to consider when using LTI in Elixir.
The benefits of resource link history ID’s in the LTI spec.
Opportunities for you with Token Alchemist.
And much more!
Links Mentioned in Today’s Episode:
We Work — https://www.wework.com/
Flatiron School — https://flatironschool.com/
Elixir — https://elixir-lang.org/
Ruby — https://www.ruby-lang.org/en/
Learn.co — https://learn.co/
Meryl on LinkedIn — https://www.linkedin.com/in/meryldakin/
Meryl on Twitter — https://twitter.com/meryldakin
Meryl on GitHub — https://github.com/meryldakin
Token Alchemist on GitHub — https://github.com/meryldakin/token_alchemist
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Meryl Dakin.
</description>
      <itunes:keywords>elixir, wework, flatiron school, token alchemist</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we continue our series on the inner workings of several different Elixir libraries and are happy to be joined by Meryl Dakin, Software Engineer at the Flatiron School and author of Token Alchemist. In this episode, we discover how Meryl got started with Elixir and what the process was like for her transitioning from Ruby to Elixir. We learn more about the internal functions of Token Alchemist within the school context and discuss the unique opportunities Meryl has discovered in Elixir, as well as the trickier language features that programmers are likely to experience in their learning process. Meryl also shares the challenges that Token Alchemist attempts to overcome – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more, be sure to click play!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Discover why Meryl first got started with Elixir.</li>
<li>Learn more about the Flatiron Bootcamp for coders.</li>
<li>Meryl’s experience in transitioning from Ruby to Elixir.</li>
<li>The opportunities for concurrency and fault tolerance in Elixir.</li>
<li>Discover the top three tricky language features in Elixir.</li>
<li>The benefits of going back to the basics of Elixir.</li>
<li>Find out the problems that Token Alchemist attempts to solve.</li>
<li>Meryl explains LTI and the Learn.co platform for students. </li>
<li>Learn more about custom parameters in Token Alchemist.</li>
<li>The process of learning OAuth in Token Alchemist.</li>
<li>What to consider when using LTI in Elixir.</li>
<li>The benefits of resource link history ID’s in the LTI spec.</li>
<li>Opportunities for you with Token Alchemist.</li>
<li>And much more!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>We Work — <a href="https://www.wework.com/" rel="nofollow">https://www.wework.com/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Learn.co — <a href="https://learn.co/" rel="nofollow">https://learn.co/</a><br>
Meryl on LinkedIn — <a href="https://www.linkedin.com/in/meryldakin/" rel="nofollow">https://www.linkedin.com/in/meryldakin/</a><br>
Meryl on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Meryl on GitHub — <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
Token Alchemist on GitHub — <a href="https://github.com/meryldakin/token_alchemist" rel="nofollow">https://github.com/meryldakin/token_alchemist</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we continue our series on the inner workings of several different Elixir libraries and are happy to be joined by Meryl Dakin, Software Engineer at the Flatiron School and author of Token Alchemist. In this episode, we discover how Meryl got started with Elixir and what the process was like for her transitioning from Ruby to Elixir. We learn more about the internal functions of Token Alchemist within the school context and discuss the unique opportunities Meryl has discovered in Elixir, as well as the trickier language features that programmers are likely to experience in their learning process. Meryl also shares the challenges that Token Alchemist attempts to overcome – delving deeper into LTI, the Learn.co platform, OAuth and JSON. For all this and more, be sure to click play!</p>

<p><strong>Key Points From This Episode:</strong></p>

<ul>
<li>Discover why Meryl first got started with Elixir.</li>
<li>Learn more about the Flatiron Bootcamp for coders.</li>
<li>Meryl’s experience in transitioning from Ruby to Elixir.</li>
<li>The opportunities for concurrency and fault tolerance in Elixir.</li>
<li>Discover the top three tricky language features in Elixir.</li>
<li>The benefits of going back to the basics of Elixir.</li>
<li>Find out the problems that Token Alchemist attempts to solve.</li>
<li>Meryl explains LTI and the Learn.co platform for students. </li>
<li>Learn more about custom parameters in Token Alchemist.</li>
<li>The process of learning OAuth in Token Alchemist.</li>
<li>What to consider when using LTI in Elixir.</li>
<li>The benefits of resource link history ID’s in the LTI spec.</li>
<li>Opportunities for you with Token Alchemist.</li>
<li>And much more!</li>
</ul>

<p><strong>Links Mentioned in Today’s Episode:</strong></p>

<p>We Work — <a href="https://www.wework.com/" rel="nofollow">https://www.wework.com/</a><br>
Flatiron School — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Ruby — <a href="https://www.ruby-lang.org/en/" rel="nofollow">https://www.ruby-lang.org/en/</a><br>
Learn.co — <a href="https://learn.co/" rel="nofollow">https://learn.co/</a><br>
Meryl on LinkedIn — <a href="https://www.linkedin.com/in/meryldakin/" rel="nofollow">https://www.linkedin.com/in/meryldakin/</a><br>
Meryl on Twitter — <a href="https://twitter.com/meryldakin" rel="nofollow">https://twitter.com/meryldakin</a><br>
Meryl on GitHub — <a href="https://github.com/meryldakin" rel="nofollow">https://github.com/meryldakin</a><br>
Token Alchemist on GitHub — <a href="https://github.com/meryldakin/token_alchemist" rel="nofollow">https://github.com/meryldakin/token_alchemist</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Meryl Dakin.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Paul Schoenfelder on Distillery – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-schoenfelder</link>
      <guid isPermaLink="false">bd39f088-71c3-4425-b78e-8fc4a5324a1c</guid>
      <pubDate>Thu, 25 Jul 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/bd39f088-71c3-4425-b78e-8fc4a5324a1c.mp3" length="29247478" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Welcome back to show everyone and today in our exploration of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery, his own creation from the world of Elixir and tell us about how it works. We also discuss how Paul made the transition from bigger corporations into the startup world, his early experiences of different coding languages and the initial steps he took in writing Distillery. Paul is very honest about the unclear future of the library and he shares his hopes for it for the short term as well as clarifying its key concepts and functions. He gives great advice and directions for learning more about the resource and how you can help him and his projects out if you use them. For all this and then some, be sure to join us today for the show! </itunes:subtitle>
      <itunes:duration>29:45</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/b/bd39f088-71c3-4425-b78e-8fc4a5324a1c/cover.jpg" />
      <description>Welcome back to show everyone and today in our exploration of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery, his own creation from the world of Elixir and tell us about how it works. We also discuss how Paul made the transition from bigger corporations into the startup world, his early experiences of different coding languages and the initial steps he took in writing Distillery. Paul is very honest about the unclear future of the library and he shares his hopes for it for the short term as well as clarifying its key concepts and functions. He gives great advice and directions for learning more about the resource and how you can help him and his projects out if you use them. For all this and then some, be sure to join us today for the show! 
 Key Points From This Episode: 
* Paul's work background, language history and the last few years working Elixir. 
* The first library that Paul contributed to and created on his own! 
* What brought about the creation of Distillery. 
* Clarifying releases, compiling, generating, deployment and more. 
* Where to learn more and find out details about the library. 
* The first steps Paul took when writing this latest version of the Distillery. 
* Looking to the future of Distillery and its current best use cases. 
* Hot upgrades and who they can be useful to when it comes to Elixir. 
* Let Paul know if you are using or want to contribute to a project of his! 
* And much more! 
Links Mentioned in Today’s Episode: 
Smartlogic — https://www.smartlogic.io/ 
Paul Schoenfelder — https://github.com/bitwalker 
Bitwalker — http://bitwalker.org/ 
Distillery — https://hex.pm/packages/distillery 
DockYard — https://dockyard.com/ 
Erlang — https://www.erlang.org/ 
Phoenix — https://phoenixframework.org/ 
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Paul Schoenfelder.
</description>
      <itunes:keywords>elixir, distillery</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Welcome back to show everyone and today in our exploration of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery, his own creation from the world of Elixir and tell us about how it works. We also discuss how Paul made the transition from bigger corporations into the startup world, his early experiences of different coding languages and the initial steps he took in writing Distillery. Paul is very honest about the unclear future of the library and he shares his hopes for it for the short term as well as clarifying its key concepts and functions. He gives great advice and directions for learning more about the resource and how you can help him and his projects out if you use them. For all this and then some, be sure to join us today for the show! </p>

<p>Key Points From This Episode: </p>

<ul>
<li>Paul&#39;s work background, language history and the last few years working Elixir. </li>
<li>The first library that Paul contributed to and created on his own! </li>
<li>What brought about the creation of Distillery. </li>
<li>Clarifying releases, compiling, generating, deployment and more. </li>
<li>Where to learn more and find out details about the library. </li>
<li>The first steps Paul took when writing this latest version of the Distillery. </li>
<li>Looking to the future of Distillery and its current best use cases. </li>
<li>Hot upgrades and who they can be useful to when it comes to Elixir. </li>
<li>Let Paul know if you are using or want to contribute to a project of his! </li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode: <br>
Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a> <br>
Paul Schoenfelder — <a href="https://github.com/bitwalker" rel="nofollow">https://github.com/bitwalker</a> <br>
Bitwalker — <a href="http://bitwalker.org/" rel="nofollow">http://bitwalker.org/</a> <br>
Distillery — <a href="https://hex.pm/packages/distillery" rel="nofollow">https://hex.pm/packages/distillery</a> <br>
DockYard — <a href="https://dockyard.com/" rel="nofollow">https://dockyard.com/</a> <br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a> <br>
Phoenix — <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a> </p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Welcome back to show everyone and today in our exploration of Elixir libraries we are talking to Paul Schoenfelder! He is here to unpack Distillery, his own creation from the world of Elixir and tell us about how it works. We also discuss how Paul made the transition from bigger corporations into the startup world, his early experiences of different coding languages and the initial steps he took in writing Distillery. Paul is very honest about the unclear future of the library and he shares his hopes for it for the short term as well as clarifying its key concepts and functions. He gives great advice and directions for learning more about the resource and how you can help him and his projects out if you use them. For all this and then some, be sure to join us today for the show! </p>

<p>Key Points From This Episode: </p>

<ul>
<li>Paul&#39;s work background, language history and the last few years working Elixir. </li>
<li>The first library that Paul contributed to and created on his own! </li>
<li>What brought about the creation of Distillery. </li>
<li>Clarifying releases, compiling, generating, deployment and more. </li>
<li>Where to learn more and find out details about the library. </li>
<li>The first steps Paul took when writing this latest version of the Distillery. </li>
<li>Looking to the future of Distillery and its current best use cases. </li>
<li>Hot upgrades and who they can be useful to when it comes to Elixir. </li>
<li>Let Paul know if you are using or want to contribute to a project of his! </li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode: <br>
Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a> <br>
Paul Schoenfelder — <a href="https://github.com/bitwalker" rel="nofollow">https://github.com/bitwalker</a> <br>
Bitwalker — <a href="http://bitwalker.org/" rel="nofollow">http://bitwalker.org/</a> <br>
Distillery — <a href="https://hex.pm/packages/distillery" rel="nofollow">https://hex.pm/packages/distillery</a> <br>
DockYard — <a href="https://dockyard.com/" rel="nofollow">https://dockyard.com/</a> <br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a> <br>
Phoenix — <a href="https://phoenixframework.org/" rel="nofollow">https://phoenixframework.org/</a> </p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Paul Schoenfelder.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Bryan Joseph on ElixirScript – Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-joseph</link>
      <guid isPermaLink="false">ed1a46a8-a3ac-4808-b1e5-91e950b2791a</guid>
      <pubDate>Thu, 18 Jul 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a.mp3" length="23874493" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Today on the show we continue our series on the inner workings and various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to talk about his very own ElixirScript. ElixirScript is essentially an Elixir to JavaScript compiler, allowing users to run Elixir online more easily.</itunes:subtitle>
      <itunes:duration>23:56</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/e/ed1a46a8-a3ac-4808-b1e5-91e950b2791a/cover.jpg" />
      <description>Today on the show we continue our series on the inner workings and various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to talk about his very own ElixirScript. ElixirScript is essentially an Elixir to JavaScript compiler, allowing users to run Elixir online more easily. We ask Bryan what inspired this project and about some of the major challenges that have faced it. We also talk about the role of his company, Revelry in his career and work in open source. Bryan tells us about his very own conference, The Big Elixir and why you should be traveling to New Orleans to check it out! Other topics covered include the architecture of ElixirScript, binary pattern matching, Bryan's other experiences of libraries and his hopes for ElixirScript's future. For all this and then some, be sure to listen in today!
Key Points From This Episode:
Some background on Bryan, his work and how he got started with Elixir. 
What is ElixirScript? What does it do? How Brian got the idea!
ElixirScript's architecture; the inner workings of the compiler.
The major problems and challenges that face this task with JavaScript. 
Step one in the process; the conversion of concepts.
Binary pattern matching and the implementation of strings. 
The things Bryan would do differently looking back on the product.   
Bryan's other experiences of libraries, contributions and fixes. 
Marketing, posting and getting the word out on ElixirScript.
The current state of the project and hopes for the future. 
A little bit about The Big Elixir and what sets it apart from other conferences.  
And much more! 
Links Mentioned in Today’s Episode:
Smartlogic — https://www.smartlogic.io/
ElixirScript — https://elixirscript.github.io/
Bryan Joseph — https://github.com/bryanjos
Revelry — https://revelry.co/
The Big Elixir— https://www.thebigelixir.com/
Metaprogramming Elixir — https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414
Chris McCord — http://chrismccord.com/
Erlang — https://www.erlang.org/
ElixirCon — https://www.elixirlabs.net/events/elixircon-2018
Lonestar Elixir — https://www.lonestarelixir.com/
Operation Spark — https://operationspark.org/
Flatiron — https://flatironschool.com/
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Bryan Joseph.
</description>
      <itunes:keywords>elixir, elixirscript, the big elixir</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Today on the show we continue our series on the inner workings and various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to talk about his very own ElixirScript. ElixirScript is essentially an Elixir to JavaScript compiler, allowing users to run Elixir online more easily. We ask Bryan what inspired this project and about some of the major challenges that have faced it. We also talk about the role of his company, Revelry in his career and work in open source. Bryan tells us about his very own conference, The Big Elixir and why you should be traveling to New Orleans to check it out! Other topics covered include the architecture of ElixirScript, binary pattern matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s future. For all this and then some, be sure to listen in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Some background on Bryan, his work and how he got started with Elixir. </li>
<li>What is ElixirScript? What does it do? How Brian got the idea!</li>
<li>ElixirScript&#39;s architecture; the inner workings of the compiler.</li>
<li>The major problems and challenges that face this task with JavaScript. </li>
<li>Step one in the process; the conversion of concepts.</li>
<li>Binary pattern matching and the implementation of strings. </li>
<li>The things Bryan would do differently looking back on the product.<br></li>
<li>Bryan&#39;s other experiences of libraries, contributions and fixes. </li>
<li>Marketing, posting and getting the word out on ElixirScript.</li>
<li>The current state of the project and hopes for the future. </li>
<li>A little bit about The Big Elixir and what sets it apart from other conferences.<br></li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
ElixirScript — <a href="https://elixirscript.github.io/" rel="nofollow">https://elixirscript.github.io/</a><br>
Bryan Joseph — <a href="https://github.com/bryanjos" rel="nofollow">https://github.com/bryanjos</a><br>
Revelry — <a href="https://revelry.co/" rel="nofollow">https://revelry.co/</a><br>
The Big Elixir— <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Metaprogramming Elixir — <a href="https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414" rel="nofollow">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
ElixirCon — <a href="https://www.elixirlabs.net/events/elixircon-2018" rel="nofollow">https://www.elixirlabs.net/events/elixircon-2018</a><br>
Lonestar Elixir — <a href="https://www.lonestarelixir.com/" rel="nofollow">https://www.lonestarelixir.com/</a><br>
Operation Spark — <a href="https://operationspark.org/" rel="nofollow">https://operationspark.org/</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Today on the show we continue our series on the inner workings and various libraries of Elixir and are very happy to welcome Bryan Joseph of Revelry to talk about his very own ElixirScript. ElixirScript is essentially an Elixir to JavaScript compiler, allowing users to run Elixir online more easily. We ask Bryan what inspired this project and about some of the major challenges that have faced it. We also talk about the role of his company, Revelry in his career and work in open source. Bryan tells us about his very own conference, The Big Elixir and why you should be traveling to New Orleans to check it out! Other topics covered include the architecture of ElixirScript, binary pattern matching, Bryan&#39;s other experiences of libraries and his hopes for ElixirScript&#39;s future. For all this and then some, be sure to listen in today!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>Some background on Bryan, his work and how he got started with Elixir. </li>
<li>What is ElixirScript? What does it do? How Brian got the idea!</li>
<li>ElixirScript&#39;s architecture; the inner workings of the compiler.</li>
<li>The major problems and challenges that face this task with JavaScript. </li>
<li>Step one in the process; the conversion of concepts.</li>
<li>Binary pattern matching and the implementation of strings. </li>
<li>The things Bryan would do differently looking back on the product.<br></li>
<li>Bryan&#39;s other experiences of libraries, contributions and fixes. </li>
<li>Marketing, posting and getting the word out on ElixirScript.</li>
<li>The current state of the project and hopes for the future. </li>
<li>A little bit about The Big Elixir and what sets it apart from other conferences.<br></li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
ElixirScript — <a href="https://elixirscript.github.io/" rel="nofollow">https://elixirscript.github.io/</a><br>
Bryan Joseph — <a href="https://github.com/bryanjos" rel="nofollow">https://github.com/bryanjos</a><br>
Revelry — <a href="https://revelry.co/" rel="nofollow">https://revelry.co/</a><br>
The Big Elixir— <a href="https://www.thebigelixir.com/" rel="nofollow">https://www.thebigelixir.com/</a><br>
Metaprogramming Elixir — <a href="https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414" rel="nofollow">https://www.amazon.com/Metaprogramming-Elixir-Write-Less-Code/dp/1680500414</a><br>
Chris McCord — <a href="http://chrismccord.com/" rel="nofollow">http://chrismccord.com/</a><br>
Erlang — <a href="https://www.erlang.org/" rel="nofollow">https://www.erlang.org/</a><br>
ElixirCon — <a href="https://www.elixirlabs.net/events/elixircon-2018" rel="nofollow">https://www.elixirlabs.net/events/elixircon-2018</a><br>
Lonestar Elixir — <a href="https://www.lonestarelixir.com/" rel="nofollow">https://www.lonestarelixir.com/</a><br>
Operation Spark — <a href="https://operationspark.org/" rel="nofollow">https://operationspark.org/</a><br>
Flatiron — <a href="https://flatironschool.com/" rel="nofollow">https://flatironschool.com/</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Bryan Joseph.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brooklyn Zelenka on Witchcraft - Elixir Internals</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-two-zelenka</link>
      <guid isPermaLink="false">490b7cc3-44d7-4917-9688-2450d18de62a</guid>
      <pubDate>Thu, 11 Jul 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/490b7cc3-44d7-4917-9688-2450d18de62a.mp3" length="29867258" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>2</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>Hey everybody and welcome back to Season 2 of the podcast! This season we will be talking about Elixir internals, libraries and the inner workings of the language. In our first episode we are very happy to be joined by Brooklyn Zelenka to start off our journey on the subject with an exploration of her very own Witchcraft.</itunes:subtitle>
      <itunes:duration>30:15</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/490b7cc3-44d7-4917-9688-2450d18de62a/cover.jpg" />
      <description>Hey everybody and welcome back to Season 2 of the podcast! This season we will be talking about Elixir internals, libraries and the inner workings of the language. In our first episode we are very happy to be joined by Brooklyn Zelenka to start off our journey on the subject with an exploration of her very own Witchcraft.
In this episode we talk to Brooklyn about her history with Elixir, how she got started and what attracts her to it. Brooklyn explains the influence that open source philosophy has had on her career in developing and from there she gives a pretty comprehensive introduction to what Witchcraft is, expanding its key concepts. Although this is quite a high level discussion about Elixir and Witchcraft, we are confident that with Brooklyn's expert help even our most uninitiated listener can get some benefit from our conversation. We also talk about type systems, property-based checking and Dialyzer, so for all of this and more make sure to join us as we kick things off for Season 2!
Key Points From This Episode:
A quick introduction to Brooklyn, where she works and how she got started with Elixir.  
The influence of open source and library contributions on Brooklyn's development.
Getting to grips with Witchcraft; defining monads and functors.
Why some of these scary terms do not need to frighten you. 
A few little things that differentiate Witchcraft and some surprising elements.
The convenient guarantees that Witchcraft provides around your data structure. 
Why there is no type system baked into Elixir; overheads, inputs and outputs. 
Property-based checking and compile times in Witchcraft.
Merging of Elixir and Dialyzer; benefits and problems. 
Getting in touch with Brooklyn and getting involved with Witchcraft and Elixir. 
And much more! 
Links Mentioned in Today’s Episode:
Smartlogic — https://www.smartlogic.io/
Brooklyn Zelenka — https://github.com/expede
Brooklyn Zelenka on Twitter — https://twitter.com/expede
Brooklyn Zelenka Email — hello@brooklynzelenka.com
Fission — https://fission.codes/
Elixir — https://elixir-lang.org/
Witchcraft — https://hex.pm/packages/witchcraft
Dialyzer — https://github.com/jeremyjh/dialyxir
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Brooklyn Zelenka.
</description>
      <itunes:keywords>elixir, witchcraft, dialyzer</itunes:keywords>
      <content:encoded><![CDATA[
        <p>Hey everybody and welcome back to Season 2 of the podcast! This season we will be talking about Elixir internals, libraries and the inner workings of the language. In our first episode we are very happy to be joined by Brooklyn Zelenka to start off our journey on the subject with an exploration of her very own Witchcraft.</p>

<p>In this episode we talk to Brooklyn about her history with Elixir, how she got started and what attracts her to it. Brooklyn explains the influence that open source philosophy has had on her career in developing and from there she gives a pretty comprehensive introduction to what Witchcraft is, expanding its key concepts. Although this is quite a high level discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s expert help even our most uninitiated listener can get some benefit from our conversation. We also talk about type systems, property-based checking and Dialyzer, so for all of this and more make sure to join us as we kick things off for Season 2!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A quick introduction to Brooklyn, where she works and how she got started with Elixir.<br></li>
<li>The influence of open source and library contributions on Brooklyn&#39;s development.</li>
<li>Getting to grips with Witchcraft; defining monads and functors.</li>
<li>Why some of these scary terms do not need to frighten you. </li>
<li>A few little things that differentiate Witchcraft and some surprising elements.</li>
<li>The convenient guarantees that Witchcraft provides around your data structure. </li>
<li>Why there is no type system baked into Elixir; overheads, inputs and outputs. </li>
<li>Property-based checking and compile times in Witchcraft.</li>
<li>Merging of Elixir and Dialyzer; benefits and problems. </li>
<li>Getting in touch with Brooklyn and getting involved with Witchcraft and Elixir. </li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Brooklyn Zelenka — <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a><br>
Brooklyn Zelenka on Twitter — <a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a><br>
Brooklyn Zelenka Email — <a href="mailto:hello@brooklynzelenka.com" rel="nofollow">hello@brooklynzelenka.com</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Witchcraft — <a href="https://hex.pm/packages/witchcraft" rel="nofollow">https://hex.pm/packages/witchcraft</a><br>
Dialyzer — <a href="https://github.com/jeremyjh/dialyxir" rel="nofollow">https://github.com/jeremyjh/dialyxir</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>Hey everybody and welcome back to Season 2 of the podcast! This season we will be talking about Elixir internals, libraries and the inner workings of the language. In our first episode we are very happy to be joined by Brooklyn Zelenka to start off our journey on the subject with an exploration of her very own Witchcraft.</p>

<p>In this episode we talk to Brooklyn about her history with Elixir, how she got started and what attracts her to it. Brooklyn explains the influence that open source philosophy has had on her career in developing and from there she gives a pretty comprehensive introduction to what Witchcraft is, expanding its key concepts. Although this is quite a high level discussion about Elixir and Witchcraft, we are confident that with Brooklyn&#39;s expert help even our most uninitiated listener can get some benefit from our conversation. We also talk about type systems, property-based checking and Dialyzer, so for all of this and more make sure to join us as we kick things off for Season 2!</p>

<p>Key Points From This Episode:</p>

<ul>
<li>A quick introduction to Brooklyn, where she works and how she got started with Elixir.<br></li>
<li>The influence of open source and library contributions on Brooklyn&#39;s development.</li>
<li>Getting to grips with Witchcraft; defining monads and functors.</li>
<li>Why some of these scary terms do not need to frighten you. </li>
<li>A few little things that differentiate Witchcraft and some surprising elements.</li>
<li>The convenient guarantees that Witchcraft provides around your data structure. </li>
<li>Why there is no type system baked into Elixir; overheads, inputs and outputs. </li>
<li>Property-based checking and compile times in Witchcraft.</li>
<li>Merging of Elixir and Dialyzer; benefits and problems. </li>
<li>Getting in touch with Brooklyn and getting involved with Witchcraft and Elixir. </li>
<li>And much more! </li>
</ul>

<p>Links Mentioned in Today’s Episode:</p>

<p>Smartlogic — <a href="https://www.smartlogic.io/" rel="nofollow">https://www.smartlogic.io/</a><br>
Brooklyn Zelenka — <a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a><br>
Brooklyn Zelenka on Twitter — <a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a><br>
Brooklyn Zelenka Email — <a href="mailto:hello@brooklynzelenka.com" rel="nofollow">hello@brooklynzelenka.com</a><br>
Fission — <a href="https://fission.codes/" rel="nofollow">https://fission.codes/</a><br>
Elixir — <a href="https://elixir-lang.org/" rel="nofollow">https://elixir-lang.org/</a><br>
Witchcraft — <a href="https://hex.pm/packages/witchcraft" rel="nofollow">https://hex.pm/packages/witchcraft</a><br>
Dialyzer — <a href="https://github.com/jeremyjh/dialyxir" rel="nofollow">https://github.com/jeremyjh/dialyxir</a></p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Elixir in Production Recap</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-recap</link>
      <guid isPermaLink="false">e81d239d-448f-4244-884a-f5f972277713</guid>
      <pubDate>Thu, 18 Apr 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/e81d239d-448f-4244-884a-f5f972277713.mp3" length="19256966" type="audio/mp3"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>With this season over, we bring Dan Ivovich back to talk about what we learned.</itunes:subtitle>
      <itunes:duration>20:03</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/cover.jpg" />
      <description>With this season over, we bring Dan Ivovich back to talk about what we learned.
Dan Ivovich - Director of Development Operations @ SmartLogic
00:43 - Why are you using Elixir in production?
01:20 - Advantages / disadvantages of Elixir
02:38 - How do you deploy?
03:48 - Zero downtime deploys
05:40 - Clustering
06:56 - Elixir App performance
09:00 - Background task processing
10:36 - Common Libraries
14:40 - 3rd Party Services
16:16 - Do you have a story where Elixir saved the day in production?
17:56 - OTP features
18:31 - Tip to developers
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Dan Ivovich.
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>With this season over, we bring Dan Ivovich back to talk about what we learned.</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>00:43 - Why are you using Elixir in production?<br>
01:20 - Advantages / disadvantages of Elixir<br>
02:38 - How do you deploy?<br>
03:48 - Zero downtime deploys<br>
05:40 - Clustering<br>
06:56 - Elixir App performance<br>
09:00 - Background task processing<br>
10:36 - Common Libraries<br>
14:40 - 3rd Party Services<br>
16:16 - Do you have a story where Elixir saved the day in production?<br>
17:56 - OTP features<br>
18:31 - Tip to developers</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>With this season over, we bring Dan Ivovich back to talk about what we learned.</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>00:43 - Why are you using Elixir in production?<br>
01:20 - Advantages / disadvantages of Elixir<br>
02:38 - How do you deploy?<br>
03:48 - Zero downtime deploys<br>
05:40 - Clustering<br>
06:56 - Elixir App performance<br>
09:00 - Background task processing<br>
10:36 - Common Libraries<br>
14:40 - 3rd Party Services<br>
16:16 - Do you have a story where Elixir saved the day in production?<br>
17:56 - OTP features<br>
18:31 - Tip to developers</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jeffrey Matthias from Community - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-community</link>
      <guid isPermaLink="false">7bd99e2e-cba0-4c94-904a-5486ce48c517</guid>
      <pubDate>Thu, 11 Apr 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/7bd99e2e-cba0-4c94-904a-5486ce48c517.mp3" length="42795517" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Jeffrey Matthias from Community about their current and past Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>43:54</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/7/7bd99e2e-cba0-4c94-904a-5486ce48c517/cover.jpg" />
      <description>We talk with Jeffrey Matthias from Community about their current and past Elixir projects and how they are deployed.
Jeffrey Matthias - Community (https://www.community.com/)
Find Jeffrey elsewhere online:
http://github.com/idlehands
https://twitter.com/idlehands
0:47 - Give us a quick overview of the Elixir projects you have in production.
3:29 - Why are you using Elixir in production?
6:04 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?
10:14 - What do you use to host your Elixir app?
Linode, AWS, DO 
Heroku 
Enmesos 
mesos  
How do you deploy your application?
Ansible 
Deploy scripts 
Distillery 
14:19 - Are you able to get zero downtime deploys?
If so, how? 
17:06 - Do you cluster the application?
If so, how? 
22:53 - How does your Elixir App perform compared to others in your environment?
Response time 
Throughput 
Jobs/hr 
25:01 - How are you solving background task processing?
29:17 - What libraries are you using?
Phoenix 
33:53 - Third party apps 
37:28 - Do you have a story where Elixir saved the day in production?
40:42 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Jeffrey Matthias.
</description>
      <itunes:keywords>elixir, phoenix, production</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Jeffrey Matthias from Community about their current and past Elixir projects and how they are deployed.</p>

<p>Jeffrey Matthias - <a href="https://www.community.com/" rel="nofollow">Community</a></p>

<p>Find Jeffrey elsewhere online:<br>
<a href="http://github.com/idlehands" rel="nofollow">http://github.com/idlehands</a><br>
<a href="https://twitter.com/idlehands" rel="nofollow">https://twitter.com/idlehands</a></p>

<p>0:47 - Give us a quick overview of the Elixir projects you have in production.</p>

<p>3:29 - Why are you using Elixir in production?</p>

<p>6:04 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?</p>

<p>10:14 - What do you use to host your Elixir app?</p>

<ul>
<li>Linode, AWS, DO </li>
<li>Heroku </li>
<li>Enmesos </li>
<li>mesos<br></li>
</ul>

<p>How do you deploy your application?</p>

<ul>
<li>Ansible </li>
<li>Deploy scripts </li>
<li>Distillery </li>
</ul>

<p>14:19 - Are you able to get zero downtime deploys?</p>

<ul>
<li>If so, how? </li>
</ul>

<p>17:06 - Do you cluster the application?</p>

<ul>
<li>If so, how? </li>
</ul>

<p>22:53 - How does your Elixir App perform compared to others in your environment?</p>

<ul>
<li>Response time </li>
<li>Throughput </li>
<li>Jobs/hr </li>
</ul>

<p>25:01 - How are you solving background task processing?</p>

<p>29:17 - What libraries are you using?</p>

<ul>
<li>Phoenix </li>
</ul>

<p>33:53 - Third party apps </p>

<p>37:28 - Do you have a story where Elixir saved the day in production?</p>

<p>40:42 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a href="https://www.enbala.com/" title="Enbala" rel="nofollow">Enbala</a></li><li><a href="https://weedmaps.com/" title="Weedmaps" rel="nofollow">Weedmaps</a></li><li><a href="https://shop.oreilly.com/product/0636920153566.do" title="Docker: Up & Running" rel="nofollow">Docker: Up & Running</a></li><li><a href="https://www.asyncapi.com/" title="Async API" rel="nofollow">Async API</a></li><li><a href="https://www.rabbitmq.com/" title="RabbitMQ" rel="nofollow">RabbitMQ</a></li><li><a href="https://github.com/pma/amqp" title="AMQP Elixir Client" rel="nofollow">AMQP Elixir Client</a></li><li><a href="https://github.com/silviucpp/erlcass" title="erlcass" rel="nofollow">erlcass</a></li><li><a href="https://www.erlang-in-anger.com/" title="Erlang in Anger" rel="nofollow">Erlang in Anger</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Jeffrey Matthias from Community about their current and past Elixir projects and how they are deployed.</p>

<p>Jeffrey Matthias - <a href="https://www.community.com/" rel="nofollow">Community</a></p>

<p>Find Jeffrey elsewhere online:<br>
<a href="http://github.com/idlehands" rel="nofollow">http://github.com/idlehands</a><br>
<a href="https://twitter.com/idlehands" rel="nofollow">https://twitter.com/idlehands</a></p>

<p>0:47 - Give us a quick overview of the Elixir projects you have in production.</p>

<p>3:29 - Why are you using Elixir in production?</p>

<p>6:04 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?</p>

<p>10:14 - What do you use to host your Elixir app?</p>

<ul>
<li>Linode, AWS, DO </li>
<li>Heroku </li>
<li>Enmesos </li>
<li>mesos<br></li>
</ul>

<p>How do you deploy your application?</p>

<ul>
<li>Ansible </li>
<li>Deploy scripts </li>
<li>Distillery </li>
</ul>

<p>14:19 - Are you able to get zero downtime deploys?</p>

<ul>
<li>If so, how? </li>
</ul>

<p>17:06 - Do you cluster the application?</p>

<ul>
<li>If so, how? </li>
</ul>

<p>22:53 - How does your Elixir App perform compared to others in your environment?</p>

<ul>
<li>Response time </li>
<li>Throughput </li>
<li>Jobs/hr </li>
</ul>

<p>25:01 - How are you solving background task processing?</p>

<p>29:17 - What libraries are you using?</p>

<ul>
<li>Phoenix </li>
</ul>

<p>33:53 - Third party apps </p>

<p>37:28 - Do you have a story where Elixir saved the day in production?</p>

<p>40:42 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Jeffrey Matthias.</p><p>Links:</p><ul><li><a href="https://www.enbala.com/" title="Enbala" rel="nofollow">Enbala</a></li><li><a href="https://weedmaps.com/" title="Weedmaps" rel="nofollow">Weedmaps</a></li><li><a href="https://shop.oreilly.com/product/0636920153566.do" title="Docker: Up & Running" rel="nofollow">Docker: Up & Running</a></li><li><a href="https://www.asyncapi.com/" title="Async API" rel="nofollow">Async API</a></li><li><a href="https://www.rabbitmq.com/" title="RabbitMQ" rel="nofollow">RabbitMQ</a></li><li><a href="https://github.com/pma/amqp" title="AMQP Elixir Client" rel="nofollow">AMQP Elixir Client</a></li><li><a href="https://github.com/silviucpp/erlcass" title="erlcass" rel="nofollow">erlcass</a></li><li><a href="https://www.erlang-in-anger.com/" title="Erlang in Anger" rel="nofollow">Erlang in Anger</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Jay Ashe from Cava - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-cava</link>
      <guid isPermaLink="false">c300841a-d5b9-4957-950f-ce0f6bc3af68</guid>
      <pubDate>Thu, 04 Apr 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/c300841a-d5b9-4957-950f-ce0f6bc3af68.mp3" length="17639405" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Jay Ashe from Cava about their current and past Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>17:25</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/c/c300841a-d5b9-4957-950f-ce0f6bc3af68/cover.jpg" />
      <description>We talk with Jay Ashe from Cava about their current and past Elixir projects and how they are deployed.
Jay Ashe - Cava (https://cava.com/)
Find Jay elsewhere online:
https://twitter.com/jgashe
0:40 - Give us a quick overview of the Elixir projects you have in production.
CAVA is a fast-casual mediterranean restaurant chain with 75 stores across the US. Elixir and phoenix power CAVA’s online ordering platform (order.cava.com and the CAVA app). We’ve got a REST (and websockets) api sitting behind react and our mobile apps, and we use phoenix templates for some of our back of house systems.
1:11 - Why are you using Elixir in production?
We have from the start! The application was originally implemented by Chris Bell and his team at madebymany. Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into our architecture and how we use elixir and OTP constructs to model our business logic. Chris will occasionally talk about the CAVA project on his Elixir podcast, ElixirTalk.
Chris’ Talk - https://www.youtube.com/watch?v=fkDhU-2NWJ8 (https://www.youtube.com/watch?v=fkDhU-2NWJ8)
1:58 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?
Advantages: Elixir and Phoenix gives you rails-esque productivity/developer experience that scales. I think phoenix channels are a great example of this. Build a channel with complex real-time functionality and let it scale effortlessly. 
Disadvantages: 
Hiring and onboarding, depending on your mindset, can be difficult. If you’re used to hiring for experience in  your stack, its just going to be more difficult. Lately we’ve started doing one-hour weekly knowledge shares that cover elixir basics and are closely tied to our usage of them. So, here’s a test case, and here are all of the test helpers that we have set up that will help you write that test. We also just sent a new Elixir dev to lonestar elixir 
3:59 - What do you use to host your Elixir app?
Heroku 
How do you deploy your application? 
Heroku-buildpack-elixir https://github.com/HashNuke/heroku-buildpack-elixir (https://github.com/HashNuke/heroku-buildpack-elixir) 
4:44 - Are you able to get zero downtime deploys?
- As close as possible! We get that out of the box with heroku. When we deploy, heroku won’t point traffic to the new dyno until the app is healthy. We make extensive use of Phoenix channels over websockets, and our clients will reconnect automatically and transparently.  
5:10 - Do you cluster the application?
Nope.  
5:52 - How does your Elixir App perform compared to others in your environment?
I can’t really talk about numbers here, but Elixir is not at all our bottleneck. We don’t have other production applications 
6:25 - How are you solving background task processing?
Quantum for cron jobs, genservers for everything else. We’re running a single elixir application that handles all synchronous and async processing  
7:07 - What libraries are you using?
Phoenix 
Phoenix_swagger for API documentation that integrates with controller tests https://github.com/xerions/phoenix_swagger (https://github.com/xerions/phoenix_swagger) 
Ex_rated for rate limiting calls to our integrations https://github.com/grempe/ex_rated (https://github.com/grempe/ex_rated) 
Timex and calendar for datetime support with timezones https://github.com/bitwalker/timex (https://github.com/bitwalker/timex) 
A combination of httpotion and httpoison for HTTP clients, but im interested in trying Mint https://github.com/ericmj/mint (https://github.com/ericmj/mint)https://github.com/appcues/mojito (https://github.com/appcues/mojito) 
Bamboo for transactional emails, like order confirmations etc https://github.com/thoughtbot/bamboo (https://github.com/thoughtbot/bamboo) 
8:59 - 3rd Party Services (i.e. Email, Payment Processing, etc)
Sendgrid for email, Google for geocoding, slack for some internal alerting of application health, LevelUp for payments. https://www.thelevelup.com/ (https://www.thelevelup.com/) 
10:07 - Do you have a story where Elixir saved the day in production?
Yes and no. So I could tell this story by explaining the issue we saw and the underlying cause at the same time, but I think it would be more fun to tell it like our team experienced it. 
One day at lunch our application started going down. Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time of day, so 1) we thought it was load related and 2) we really needed to fix it 
None of our traditional resources (database, cpu, memory) were constrained and our integrations that were synchronous were fine.  
Our logs were littered with errors from an analytics integration that ran asynchronously on genservers, but it didn’t seem related because we could see the error logs at times when our application was otherwise healthy. The team that used the analytics didn’t have a pressing need for them, and we deprioritized fixing the issue because the bug we were working on was so much more important (that’s foreshadowing). 
I spent a little time looking at websockets, but I was easily able to match the load of the websocket portion of our application on my local machine with no degradations in performance (thanks, phoenix), so that was out. 
At this point the issue was going on every day at lunch and I was getting annoyed at seeing the logs from the analytics integration when debugging, so I spent like 15 minutes finding and fixing the issue (a bad API key, basically) 
Voila, issue gone. Time to grab some lunch. 
We spent a while coming up with an explanation for this. Eventually we learned about max_restarts on a supervisor. By default, if a process crashes 3 times in 5 seconds, the process won’t be restarted again. So if another process (like the one handling a web request) tries to call that process that wasn’t restarted, the caller would crash, and we’d start to get 500 errors, customers couldn’t log in, mass confusion. 
So there are a few takeaways from this story: For a while, elixir saved the day in production.  
    - A supervision tree prevented failures from the analytics process from affecting customers, until the scale of our failures exceeded the max_restart level.  
    - Our supervision tree needed some love though, clearly. 
    - Monitor your resources. CPU is a resource, but calls to another API are also a resource and can get unhealthy too.  
15:00 - Are you using any cool OTP features?
GenServers, definitely. There’s lots we can do asynchronously especially in terms of our integrations. One process per store is a cool model that scales well and keeps issues isolated to a single store. 
15:50 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?
If you’re on a small team, Heroku or a similar provider might give you a lot of value in terms of infrastructure you can set up and forget.
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Jay Ashe.
</description>
      <itunes:keywords>elixir, phoenix, production</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Jay Ashe from Cava about their current and past Elixir projects and how they are deployed.</p>

<p>Jay Ashe - <a href="https://cava.com/" rel="nofollow">Cava</a></p>

<p>Find Jay elsewhere online:<br>
<a href="https://twitter.com/jgashe" rel="nofollow">https://twitter.com/jgashe</a></p>

<p>0:40 - Give us a quick overview of the Elixir projects you have in production.</p>

<p>CAVA is a fast-casual mediterranean restaurant chain with 75 stores across the US. Elixir and phoenix power CAVA’s online ordering platform (order.cava.com and the CAVA app). We’ve got a REST (and websockets) api sitting behind react and our mobile apps, and we use phoenix templates for some of our back of house systems.</p>

<p>1:11 - Why are you using Elixir in production?</p>

<p>We have from the start! The application was originally implemented by Chris Bell and his team at madebymany. Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into our architecture and how we use elixir and OTP constructs to model our business logic. Chris will occasionally talk about the CAVA project on his Elixir podcast, ElixirTalk.</p>

<p>Chris’ Talk - <a href="https://www.youtube.com/watch?v=fkDhU-2NWJ8" rel="nofollow">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>

<p>1:58 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?</p>

<p>Advantages: Elixir and Phoenix gives you rails-esque productivity/developer experience that scales. I think phoenix channels are a great example of this. Build a channel with complex real-time functionality and let it scale effortlessly. </p>

<p>Disadvantages: </p>

<ul>
<li>Hiring and onboarding, depending on your mindset, can be difficult. If you’re used to hiring for experience in  your stack, its just going to be more difficult. Lately we’ve started doing one-hour weekly knowledge shares that cover elixir basics and are closely tied to our usage of them. So, here’s a test case, and here are all of the test helpers that we have set up that will help you write that test. We also just sent a new Elixir dev to lonestar elixir </li>
</ul>

<p>3:59 - What do you use to host your Elixir app?</p>

<ul>
<li><p>Heroku </p></li>
<li><p>How do you deploy your application? </p>

<ul>
<li>Heroku-buildpack-elixir <a href="https://github.com/HashNuke/heroku-buildpack-elixir" rel="nofollow">https://github.com/HashNuke/heroku-buildpack-elixir</a> </li>
</ul></li>
</ul>

<p>4:44 - Are you able to get zero downtime deploys?</p>

<ul>
<li>As close as possible! We get that out of the box with heroku. When we deploy, heroku won’t point traffic to the new dyno until the app is healthy. We make extensive use of Phoenix channels over websockets, and our clients will reconnect automatically and transparently.<br></li>
</ul>

<p>5:10 - Do you cluster the application?</p>

<ul>
<li>Nope.<br></li>
</ul>

<p>5:52 - How does your Elixir App perform compared to others in your environment?</p>

<ul>
<li>I can’t really talk about numbers here, but Elixir is not at all our bottleneck. We don’t have other production applications </li>
</ul>

<p>6:25 - How are you solving background task processing?</p>

<ul>
<li>Quantum for cron jobs, genservers for everything else. We’re running a single elixir application that handles all synchronous and async processing<br></li>
</ul>

<p>7:07 - What libraries are you using?</p>

<ul>
<li>Phoenix </li>
<li>Phoenix_swagger for API documentation that integrates with controller tests <a href="https://github.com/xerions/phoenix_swagger" rel="nofollow">https://github.com/xerions/phoenix_swagger</a> </li>
<li>Ex_rated for rate limiting calls to our integrations <a href="https://github.com/grempe/ex_rated" rel="nofollow">https://github.com/grempe/ex_rated</a> </li>
<li>Timex and calendar for datetime support with timezones <a href="https://github.com/bitwalker/timex" rel="nofollow">https://github.com/bitwalker/timex</a> </li>
<li>A combination of httpotion and httpoison for HTTP clients, but im interested in trying Mint <a href="https://github.com/ericmj/mint" rel="nofollow">https://github.com/ericmj/mint</a><a href="https://github.com/appcues/mojito" rel="nofollow">https://github.com/appcues/mojito</a> </li>
<li>Bamboo for transactional emails, like order confirmations etc <a href="https://github.com/thoughtbot/bamboo" rel="nofollow">https://github.com/thoughtbot/bamboo</a> </li>
</ul>

<p>8:59 - 3rd Party Services (i.e. Email, Payment Processing, etc)</p>

<ul>
<li>Sendgrid for email, Google for geocoding, slack for some internal alerting of application health, LevelUp for payments. <a href="https://www.thelevelup.com/" rel="nofollow">https://www.thelevelup.com/</a> </li>
</ul>

<p>10:07 - Do you have a story where Elixir saved the day in production?</p>

<ul>
<li>Yes and no. So I could tell this story by explaining the issue we saw and the underlying cause at the same time, but I think it would be more fun to tell it like our team experienced it. </li>
<li>One day at lunch our application started going down. Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time of day, so 1) we thought it was load related and 2) we really needed to fix it </li>
<li>None of our traditional resources (database, cpu, memory) were constrained and our integrations that were synchronous were fine.<br></li>
<li>Our logs were littered with errors from an analytics integration that ran asynchronously on genservers, but it didn’t seem related because we could see the error logs at times when our application was otherwise healthy. The team that used the analytics didn’t have a pressing need for them, and we deprioritized fixing the issue because the bug we were working on was so much more important (that’s foreshadowing). </li>
<li>I spent a little time looking at websockets, but I was easily able to match the load of the websocket portion of our application on my local machine with no degradations in performance (thanks, phoenix), so that was out. </li>
<li>At this point the issue was going on every day at lunch and I was getting annoyed at seeing the logs from the analytics integration when debugging, so I spent like 15 minutes finding and fixing the issue (a bad API key, basically) </li>
<li>Voila, issue gone. Time to grab some lunch. </li>
<li>We spent a while coming up with an explanation for this. Eventually we learned about max_restarts on a supervisor. By default, if a process crashes 3 times in 5 seconds, the process won’t be restarted again. So if another process (like the one handling a web request) tries to call that process that wasn’t restarted, the caller would crash, and we’d start to get 500 errors, customers couldn’t log in, mass confusion. </li>
<li>So there are a few takeaways from this story: For a while, elixir saved the day in production.<br>
    - A supervision tree prevented failures from the analytics process from affecting customers, until the scale of our failures exceeded the max_restart level.<br>
    - Our supervision tree needed some love though, clearly. 
    - Monitor your resources. CPU is a resource, but calls to another API are also a resource and can get unhealthy too.<br></li>
</ul>

<p>15:00 - Are you using any cool OTP features?</p>

<ul>
<li>GenServers, definitely. There’s lots we can do asynchronously especially in terms of our integrations. One process per store is a cool model that scales well and keeps issues isolated to a single store. </li>
</ul>

<p>15:50 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?</p>

<ul>
<li>If you’re on a small team, Heroku or a similar provider might give you a lot of value in terms of infrastructure you can set up and forget.</li>
</ul>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Jay Ashe.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=fkDhU-2NWJ8" title="ElixirConf 2016 - Selling Food With Elixir by Chris Bell" rel="nofollow">ElixirConf 2016 - Selling Food With Elixir by Chris Bell</a></li><li><a href="https://github.com/HashNuke/heroku-buildpack-elixir" title="Heroku-buildpack-elixir" rel="nofollow">Heroku-buildpack-elixir</a></li><li><a href="https://github.com/xerions/phoenix_swagger" title="Phoenix Swagger" rel="nofollow">Phoenix Swagger</a></li><li><a href="https://github.com/grempe/ex_rated" title="Ex_rated" rel="nofollow">Ex_rated</a></li><li><a href="https://github.com/bitwalker/timex" title="Timex" rel="nofollow">Timex</a></li><li><a href="https://github.com/ericmj/mint" title="Mint" rel="nofollow">Mint</a></li><li><a href="https://github.com/appcues/mojito" title="Mojito" rel="nofollow">Mojito</a></li><li><a href="https://www.thelevelup.com/" title="LevelUp" rel="nofollow">LevelUp</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Jay Ashe from Cava about their current and past Elixir projects and how they are deployed.</p>

<p>Jay Ashe - <a href="https://cava.com/" rel="nofollow">Cava</a></p>

<p>Find Jay elsewhere online:<br>
<a href="https://twitter.com/jgashe" rel="nofollow">https://twitter.com/jgashe</a></p>

<p>0:40 - Give us a quick overview of the Elixir projects you have in production.</p>

<p>CAVA is a fast-casual mediterranean restaurant chain with 75 stores across the US. Elixir and phoenix power CAVA’s online ordering platform (order.cava.com and the CAVA app). We’ve got a REST (and websockets) api sitting behind react and our mobile apps, and we use phoenix templates for some of our back of house systems.</p>

<p>1:11 - Why are you using Elixir in production?</p>

<p>We have from the start! The application was originally implemented by Chris Bell and his team at madebymany. Chris, by the way, has a fantastic talk from ElixirConf 2016 that goes into our architecture and how we use elixir and OTP constructs to model our business logic. Chris will occasionally talk about the CAVA project on his Elixir podcast, ElixirTalk.</p>

<p>Chris’ Talk - <a href="https://www.youtube.com/watch?v=fkDhU-2NWJ8" rel="nofollow">https://www.youtube.com/watch?v=fkDhU-2NWJ8</a></p>

<p>1:58 - What are some of the high level advantages / disadvantages of Elixir, from your perspective?</p>

<p>Advantages: Elixir and Phoenix gives you rails-esque productivity/developer experience that scales. I think phoenix channels are a great example of this. Build a channel with complex real-time functionality and let it scale effortlessly. </p>

<p>Disadvantages: </p>

<ul>
<li>Hiring and onboarding, depending on your mindset, can be difficult. If you’re used to hiring for experience in  your stack, its just going to be more difficult. Lately we’ve started doing one-hour weekly knowledge shares that cover elixir basics and are closely tied to our usage of them. So, here’s a test case, and here are all of the test helpers that we have set up that will help you write that test. We also just sent a new Elixir dev to lonestar elixir </li>
</ul>

<p>3:59 - What do you use to host your Elixir app?</p>

<ul>
<li><p>Heroku </p></li>
<li><p>How do you deploy your application? </p>

<ul>
<li>Heroku-buildpack-elixir <a href="https://github.com/HashNuke/heroku-buildpack-elixir" rel="nofollow">https://github.com/HashNuke/heroku-buildpack-elixir</a> </li>
</ul></li>
</ul>

<p>4:44 - Are you able to get zero downtime deploys?</p>

<ul>
<li>As close as possible! We get that out of the box with heroku. When we deploy, heroku won’t point traffic to the new dyno until the app is healthy. We make extensive use of Phoenix channels over websockets, and our clients will reconnect automatically and transparently.<br></li>
</ul>

<p>5:10 - Do you cluster the application?</p>

<ul>
<li>Nope.<br></li>
</ul>

<p>5:52 - How does your Elixir App perform compared to others in your environment?</p>

<ul>
<li>I can’t really talk about numbers here, but Elixir is not at all our bottleneck. We don’t have other production applications </li>
</ul>

<p>6:25 - How are you solving background task processing?</p>

<ul>
<li>Quantum for cron jobs, genservers for everything else. We’re running a single elixir application that handles all synchronous and async processing<br></li>
</ul>

<p>7:07 - What libraries are you using?</p>

<ul>
<li>Phoenix </li>
<li>Phoenix_swagger for API documentation that integrates with controller tests <a href="https://github.com/xerions/phoenix_swagger" rel="nofollow">https://github.com/xerions/phoenix_swagger</a> </li>
<li>Ex_rated for rate limiting calls to our integrations <a href="https://github.com/grempe/ex_rated" rel="nofollow">https://github.com/grempe/ex_rated</a> </li>
<li>Timex and calendar for datetime support with timezones <a href="https://github.com/bitwalker/timex" rel="nofollow">https://github.com/bitwalker/timex</a> </li>
<li>A combination of httpotion and httpoison for HTTP clients, but im interested in trying Mint <a href="https://github.com/ericmj/mint" rel="nofollow">https://github.com/ericmj/mint</a><a href="https://github.com/appcues/mojito" rel="nofollow">https://github.com/appcues/mojito</a> </li>
<li>Bamboo for transactional emails, like order confirmations etc <a href="https://github.com/thoughtbot/bamboo" rel="nofollow">https://github.com/thoughtbot/bamboo</a> </li>
</ul>

<p>8:59 - 3rd Party Services (i.e. Email, Payment Processing, etc)</p>

<ul>
<li>Sendgrid for email, Google for geocoding, slack for some internal alerting of application health, LevelUp for payments. <a href="https://www.thelevelup.com/" rel="nofollow">https://www.thelevelup.com/</a> </li>
</ul>

<p>10:07 - Do you have a story where Elixir saved the day in production?</p>

<ul>
<li>Yes and no. So I could tell this story by explaining the issue we saw and the underlying cause at the same time, but I think it would be more fun to tell it like our team experienced it. </li>
<li>One day at lunch our application started going down. Lots of 500 errors. Red lights flashing. Panic ensuing. Lunch is our busiest time of day, so 1) we thought it was load related and 2) we really needed to fix it </li>
<li>None of our traditional resources (database, cpu, memory) were constrained and our integrations that were synchronous were fine.<br></li>
<li>Our logs were littered with errors from an analytics integration that ran asynchronously on genservers, but it didn’t seem related because we could see the error logs at times when our application was otherwise healthy. The team that used the analytics didn’t have a pressing need for them, and we deprioritized fixing the issue because the bug we were working on was so much more important (that’s foreshadowing). </li>
<li>I spent a little time looking at websockets, but I was easily able to match the load of the websocket portion of our application on my local machine with no degradations in performance (thanks, phoenix), so that was out. </li>
<li>At this point the issue was going on every day at lunch and I was getting annoyed at seeing the logs from the analytics integration when debugging, so I spent like 15 minutes finding and fixing the issue (a bad API key, basically) </li>
<li>Voila, issue gone. Time to grab some lunch. </li>
<li>We spent a while coming up with an explanation for this. Eventually we learned about max_restarts on a supervisor. By default, if a process crashes 3 times in 5 seconds, the process won’t be restarted again. So if another process (like the one handling a web request) tries to call that process that wasn’t restarted, the caller would crash, and we’d start to get 500 errors, customers couldn’t log in, mass confusion. </li>
<li>So there are a few takeaways from this story: For a while, elixir saved the day in production.<br>
    - A supervision tree prevented failures from the analytics process from affecting customers, until the scale of our failures exceeded the max_restart level.<br>
    - Our supervision tree needed some love though, clearly. 
    - Monitor your resources. CPU is a resource, but calls to another API are also a resource and can get unhealthy too.<br></li>
</ul>

<p>15:00 - Are you using any cool OTP features?</p>

<ul>
<li>GenServers, definitely. There’s lots we can do asynchronously especially in terms of our integrations. One process per store is a cool model that scales well and keeps issues isolated to a single store. </li>
</ul>

<p>15:50 - If you could give one tip to developers out there who are or may soon be running Elixir in production, what would it be?</p>

<ul>
<li>If you’re on a small team, Heroku or a similar provider might give you a lot of value in terms of infrastructure you can set up and forget.</li>
</ul>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Jay Ashe.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=fkDhU-2NWJ8" title="ElixirConf 2016 - Selling Food With Elixir by Chris Bell" rel="nofollow">ElixirConf 2016 - Selling Food With Elixir by Chris Bell</a></li><li><a href="https://github.com/HashNuke/heroku-buildpack-elixir" title="Heroku-buildpack-elixir" rel="nofollow">Heroku-buildpack-elixir</a></li><li><a href="https://github.com/xerions/phoenix_swagger" title="Phoenix Swagger" rel="nofollow">Phoenix Swagger</a></li><li><a href="https://github.com/grempe/ex_rated" title="Ex_rated" rel="nofollow">Ex_rated</a></li><li><a href="https://github.com/bitwalker/timex" title="Timex" rel="nofollow">Timex</a></li><li><a href="https://github.com/ericmj/mint" title="Mint" rel="nofollow">Mint</a></li><li><a href="https://github.com/appcues/mojito" title="Mojito" rel="nofollow">Mojito</a></li><li><a href="https://www.thelevelup.com/" title="LevelUp" rel="nofollow">LevelUp</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Frank Hunleth - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-hunleth</link>
      <guid isPermaLink="false">ad538aa5-ad67-418b-b07f-0be38fff2f6b</guid>
      <pubDate>Thu, 28 Mar 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/ad538aa5-ad67-418b-b07f-0be38fff2f6b.mp3" length="28464534" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Frank Hunleth from the Nerves core team about their current and past Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>28:47</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/a/ad538aa5-ad67-418b-b07f-0be38fff2f6b/cover.jpg" />
      <description>We talk with Frank Hunleth from the Nerves core team about their current and past Elixir projects and how they are deployed.
Frank Hunleth - Nerves (https://nerves-project.org/)
Find Frank elsewhere online:
https://twitter.com/fhunleth
https://github.com/fhunleth
0:53    Frank intro
2:02    Give us a quick overview of the Elixir projects you have in production.
4:25    Why are you using Elixir in production?
8:00    What are some of the high level advantages / disadvantages of Elixir, from your perspective?
9:25    What hardware do you deploy to?
12:05   How do you get code to hardware after deployment?
13:47   How do you secure the code?
18:12   Do you cluster?
If so, how?
How does your Elixir App perform compared to others in your environment?
22:45   How does Elixir compare to other languages? 
26:15   More information about Nerves 
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Frank Hunleth.
</description>
      <itunes:keywords>elixir, nerves, production</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Frank Hunleth from the Nerves core team about their current and past Elixir projects and how they are deployed.</p>

<p>Frank Hunleth - <a href="https://nerves-project.org/" rel="nofollow">Nerves</a></p>

<p>Find Frank elsewhere online:<br>
<a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
<a href="https://github.com/fhunleth" rel="nofollow">https://github.com/fhunleth</a></p>

<p>0:53    Frank intro<br>
2:02    Give us a quick overview of the Elixir projects you have in production.<br>
4:25    Why are you using Elixir in production?<br>
8:00    What are some of the high level advantages / disadvantages of Elixir, from your perspective?<br>
9:25    What hardware do you deploy to?<br>
12:05   How do you get code to hardware after deployment?<br>
13:47   How do you secure the code?<br>
18:12   Do you cluster?<br>
If so, how?<br>
How does your Elixir App perform compared to others in your environment?<br>
22:45   How does Elixir compare to other languages? <br>
26:15   More information about Nerves </p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a href="https://www.grisp.org/" title="Grisp" rel="nofollow">Grisp</a></li><li><a href="https://github.com/grisp" title="Grisp GitHub" rel="nofollow">Grisp GitHub</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Frank Hunleth from the Nerves core team about their current and past Elixir projects and how they are deployed.</p>

<p>Frank Hunleth - <a href="https://nerves-project.org/" rel="nofollow">Nerves</a></p>

<p>Find Frank elsewhere online:<br>
<a href="https://twitter.com/fhunleth" rel="nofollow">https://twitter.com/fhunleth</a><br>
<a href="https://github.com/fhunleth" rel="nofollow">https://github.com/fhunleth</a></p>

<p>0:53    Frank intro<br>
2:02    Give us a quick overview of the Elixir projects you have in production.<br>
4:25    Why are you using Elixir in production?<br>
8:00    What are some of the high level advantages / disadvantages of Elixir, from your perspective?<br>
9:25    What hardware do you deploy to?<br>
12:05   How do you get code to hardware after deployment?<br>
13:47   How do you secure the code?<br>
18:12   Do you cluster?<br>
If so, how?<br>
How does your Elixir App perform compared to others in your environment?<br>
22:45   How does Elixir compare to other languages? <br>
26:15   More information about Nerves </p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Frank Hunleth.</p><p>Links:</p><ul><li><a href="https://www.grisp.org/" title="Grisp" rel="nofollow">Grisp</a></li><li><a href="https://github.com/grisp" title="Grisp GitHub" rel="nofollow">Grisp GitHub</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Mark Ericksen - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-ericksen</link>
      <guid isPermaLink="false">4a5a2fb4-c1a0-437a-9001-9b981312ecab</guid>
      <pubDate>Thu, 21 Mar 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4a5a2fb4-c1a0-437a-9001-9b981312ecab.mp3" length="35899109" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Mark Ericksen about their current and past Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>36:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4a5a2fb4-c1a0-437a-9001-9b981312ecab/cover.jpg" />
      <description>We talk with Mark Ericksen from Elixir Mix about their current and past Elixir projects and how they are deployed.
Mark Ericksen - Elixir Mix (https://devchat.tv/elixir-mix/)
Find Mark elsewhere online:
https://twitter.com/brainlid
https://brainlid.org/
00:32 Intro
0:58 Mark intro
Developing a long time. C#, then Rails. Webforms were terrible. Rails is “Wow, this is how web development should be… I moved across the country to work with this technology”
The Rails Community is strong. Dave Thomas got Mark into Elixir
2:48     What Elixir projects do you have in production?
A Rails app and a number of Elixir Micro-liths
4:29     Why do you use Elixir 
6:45    Trends in moving from Ruby and Rails to Elixir
Ruby Syntax
Pattern Matching
Concurrency primitives
Fault Tolerance and a functional paradigm
Erlang/OTP
6:48    Comparing Elixir community to Ruby community to C# community
8:27     Any disadvantages to using Elixir?
Building releases. Configuring releases.
mix.release
10:13    Where are you hosting these bad boys?
AWS
Kubernetes in Production. So Fresh.
Docker and Distillery 2.0 Releases
Yaml files and Bash Scripts
Makefiles
10:53    What else are you using besides docker
12:36    Helm and Ksonnet. 
13:55   Deploys
14:39   Clustering
17:50   How do your Elixir apps compare to the Ruby apps?
Big Elixir Apps
20:00    How Mark handles background jobs
Easy to write yourself with BEAM primitives
21:27    Libraries - Quantum, Bamboo, exmachina, prometheusex via Eric’s influence
23:29   Third party integrations. Major ones were easy. Banks were bad.
Literally had to FTP files. Had to use java to write xml spreadsheets. The horror.
25:26     Has Elixir ever saved the day for you in Production?
29:42: Cool OTP features
30:57 Tips to developers
35:36 Where to find Mark
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Mark Ericksen.
</description>
      <itunes:keywords>elixir, phoenix, production</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Mark Ericksen from Elixir Mix about their current and past Elixir projects and how they are deployed.</p>

<p>Mark Ericksen - <a href="https://devchat.tv/elixir-mix/" rel="nofollow">Elixir Mix</a></p>

<p>Find Mark elsewhere online:<br>
<a href="https://twitter.com/brainlid" rel="nofollow">https://twitter.com/brainlid</a><br>
<a href="https://brainlid.org/" rel="nofollow">https://brainlid.org/</a></p>

<p>00:32 Intro<br>
0:58 Mark intro<br>
Developing a long time. C#, then Rails. Webforms were terrible. Rails is “Wow, this is how web development should be… I moved across the country to work with this technology”<br>
The Rails Community is strong. Dave Thomas got Mark into Elixir</p>

<p>2:48     What Elixir projects do you have in production?<br>
A Rails app and a number of Elixir Micro-liths</p>

<p>4:29     Why do you use Elixir </p>

<p>6:45    Trends in moving from Ruby and Rails to Elixir<br>
Ruby Syntax<br>
Pattern Matching<br>
Concurrency primitives<br>
Fault Tolerance and a functional paradigm<br>
Erlang/OTP</p>

<p>6:48    Comparing Elixir community to Ruby community to C# community</p>

<p>8:27     Any disadvantages to using Elixir?<br>
Building releases. Configuring releases.<br>
mix.release</p>

<p>10:13    Where are you hosting these bad boys?<br>
AWS<br>
Kubernetes in Production. So Fresh.<br>
Docker and Distillery 2.0 Releases<br>
Yaml files and Bash Scripts<br>
Makefiles</p>

<p>10:53    What else are you using besides docker</p>

<p>12:36    Helm and Ksonnet. </p>

<p>13:55   Deploys</p>

<p>14:39   Clustering</p>

<p>17:50   How do your Elixir apps compare to the Ruby apps?<br>
Big Elixir Apps</p>

<p>20:00    How Mark handles background jobs<br>
Easy to write yourself with BEAM primitives</p>

<p>21:27    Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>

<p>23:29   Third party integrations. Major ones were easy. Banks were bad.<br>
Literally had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>

<p>25:26     Has Elixir ever saved the day for you in Production?</p>

<p>29:42: Cool OTP features<br>
30:57 Tips to developers<br>
35:36 Where to find Mark</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a href="https://github.com/bitwalker/libcluster" title="libcluster" rel="nofollow">libcluster</a></li><li><a href="https://github.com/akira/exq" title="Exq" rel="nofollow">Exq</a></li><li><a href="https://absinthe-graphql.org/" title="absinthe" rel="nofollow">absinthe</a></li><li><a href="https://github.com/absinthe-graphql/dataloader" title="dataloader" rel="nofollow">dataloader</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Mark Ericksen from Elixir Mix about their current and past Elixir projects and how they are deployed.</p>

<p>Mark Ericksen - <a href="https://devchat.tv/elixir-mix/" rel="nofollow">Elixir Mix</a></p>

<p>Find Mark elsewhere online:<br>
<a href="https://twitter.com/brainlid" rel="nofollow">https://twitter.com/brainlid</a><br>
<a href="https://brainlid.org/" rel="nofollow">https://brainlid.org/</a></p>

<p>00:32 Intro<br>
0:58 Mark intro<br>
Developing a long time. C#, then Rails. Webforms were terrible. Rails is “Wow, this is how web development should be… I moved across the country to work with this technology”<br>
The Rails Community is strong. Dave Thomas got Mark into Elixir</p>

<p>2:48     What Elixir projects do you have in production?<br>
A Rails app and a number of Elixir Micro-liths</p>

<p>4:29     Why do you use Elixir </p>

<p>6:45    Trends in moving from Ruby and Rails to Elixir<br>
Ruby Syntax<br>
Pattern Matching<br>
Concurrency primitives<br>
Fault Tolerance and a functional paradigm<br>
Erlang/OTP</p>

<p>6:48    Comparing Elixir community to Ruby community to C# community</p>

<p>8:27     Any disadvantages to using Elixir?<br>
Building releases. Configuring releases.<br>
mix.release</p>

<p>10:13    Where are you hosting these bad boys?<br>
AWS<br>
Kubernetes in Production. So Fresh.<br>
Docker and Distillery 2.0 Releases<br>
Yaml files and Bash Scripts<br>
Makefiles</p>

<p>10:53    What else are you using besides docker</p>

<p>12:36    Helm and Ksonnet. </p>

<p>13:55   Deploys</p>

<p>14:39   Clustering</p>

<p>17:50   How do your Elixir apps compare to the Ruby apps?<br>
Big Elixir Apps</p>

<p>20:00    How Mark handles background jobs<br>
Easy to write yourself with BEAM primitives</p>

<p>21:27    Libraries - Quantum, Bamboo, ex_machina, prometheus_ex via Eric’s influence</p>

<p>23:29   Third party integrations. Major ones were easy. Banks were bad.<br>
Literally had to FTP files. Had to use java to write xml spreadsheets. The horror.</p>

<p>25:26     Has Elixir ever saved the day for you in Production?</p>

<p>29:42: Cool OTP features<br>
30:57 Tips to developers<br>
35:36 Where to find Mark</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Mark Ericksen.</p><p>Links:</p><ul><li><a href="https://github.com/bitwalker/libcluster" title="libcluster" rel="nofollow">libcluster</a></li><li><a href="https://github.com/akira/exq" title="Exq" rel="nofollow">Exq</a></li><li><a href="https://absinthe-graphql.org/" title="absinthe" rel="nofollow">absinthe</a></li><li><a href="https://github.com/absinthe-graphql/dataloader" title="dataloader" rel="nofollow">dataloader</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Brooklyn Zelenka from SPADE Co. - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-zelenka</link>
      <guid isPermaLink="false">0cef68be-a246-4ba6-bdc7-a6835c05fe72</guid>
      <pubDate>Thu, 14 Mar 2019 06:00:00 -0400</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/0cef68be-a246-4ba6-bdc7-a6835c05fe72.mp3" length="27483795" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Brooklyn Zelenka from SPADE Co. about their current and past Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>27:46</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/0/0cef68be-a246-4ba6-bdc7-a6835c05fe72/cover.jpg" />
      <description>We talk with Brooklyn Zelenka from SPADE Co. about their current and past Elixir projects and how they are deployed.
Brooklyn Zelenka - SPADE Co. (https://spade.builders/)
Find Brooklyn elsewhere online:
https://twitter.com/expede
https://github.com/expede
1:08    - Brooklyn’s Background
Brooklyn's background and experience with Elixir is deep. Huge open source contributor. 
Got started in Elixir just after Phoenix got to 1.0. 
1:53     - Worked on several Elixir projects in production.
2:43     - Why she got into Elixir.
- Real Time
- More performant than Rails.
- Great documentation
- Industrial-grade
4:38     - When you wouldn't use Elixir. 
Easy to get stakeholder buy-in. Just point to WhatsApp.
Elixir is made for 2019
CLI tools
Repl-driven development 
TDD tools built in by default 
All the best practices we have today are built in.
7:14     - Where has Brooklyn hosted her apps?
Heroku for POC's. AWS for production. Dockerized because &quot;kubernetes is the new hotness&quot;
9:40    - Do you do any clustering?
Load balanced above. AWS load balancing is very standard. They're well understood and have a nice developer experience.
10:29   Are you able to get any zero downtime deploys?
Zero downtime deploys. Awesome but impractical. Rolling deploys are easier and usually more appropriate. Some requirements make it valuable.
Erlang error states. Exceptional. Allows you to build for the happy path. Don't worry about error handling all the time.
Witchcraft and dark magic. Monads.
Poke around the standard library.
12:50    - How does Elixir compare to Rails in terms of response times, and other aspects?
15:32    - What libraries do you use and what have  you built?
22:41    - Any cool features of OTP you are using? 
25:36   - One tip to developers new to Elixir
Build up a peer-to-peer cli chat from scratch in one GenServer.
Find her at @expede everywhere on the internet.
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8)
 Special Guest: Brooklyn Zelenka.
</description>
      <itunes:keywords>elixir, phoenix, spade co</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Brooklyn Zelenka from SPADE Co. about their current and past Elixir projects and how they are deployed.</p>

<p>Brooklyn Zelenka - <a href="https://spade.builders/" rel="nofollow">SPADE Co.</a></p>

<p>Find Brooklyn elsewhere online:<br>
<a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a><br>
<a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a></p>

<p>1:08    - Brooklyn’s Background</p>

<p>Brooklyn&#39;s background and experience with Elixir is deep. Huge open source contributor. <br>
Got started in Elixir just after Phoenix got to 1.0. </p>

<p>1:53     - Worked on several Elixir projects in production.</p>

<p>2:43     - Why she got into Elixir.</p>

<ul>
<li>Real Time</li>
<li>More performant than Rails.</li>
<li>Great documentation</li>
<li>Industrial-grade</li>
</ul>

<p>4:38     - When you wouldn&#39;t use Elixir. </p>

<p>Easy to get stakeholder buy-in. Just point to WhatsApp.</p>

<p>Elixir is made for 2019<br>
CLI tools<br>
Repl-driven development <br>
TDD tools built in by default </p>

<p>All the best practices we have today are built in.</p>

<p>7:14     - Where has Brooklyn hosted her apps?</p>

<p>Heroku for POC&#39;s. AWS for production. Dockerized because &quot;kubernetes is the new hotness&quot;</p>

<p>9:40    - Do you do any clustering?</p>

<p>Load balanced above. AWS load balancing is very standard. They&#39;re well understood and have a nice developer experience.</p>

<p>10:29   Are you able to get any zero downtime deploys?<br>
Zero downtime deploys. Awesome but impractical. Rolling deploys are easier and usually more appropriate. Some requirements make it valuable.</p>

<p>Erlang error states. Exceptional. Allows you to build for the happy path. Don&#39;t worry about error handling all the time.</p>

<p>Witchcraft and dark magic. Monads.</p>

<p>Poke around the standard library.</p>

<p>12:50    - How does Elixir compare to Rails in terms of response times, and other aspects?</p>

<p>15:32    - What libraries do you use and what have  you built?</p>

<p>22:41    - Any cool features of OTP you are using? </p>

<p>25:36   - One tip to developers new to Elixir</p>

<p>Build up a peer-to-peer cli chat from scratch in one GenServer.</p>

<p>Find her at @expede everywhere on the internet.</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href="https://github.com/HashNuke/heroku-buildpack-elixir" title="Heroku Elixir Buildpack" rel="nofollow">Heroku Elixir Buildpack</a></li><li><a href="https://github.com/gjaldon/heroku-buildpack-phoenix-static" title="Heroku Phoenix Static Buildpack" rel="nofollow">Heroku Phoenix Static Buildpack</a></li><li><a href="https://github.com/expede/exceptional" title="Exceptional" rel="nofollow">Exceptional</a></li><li><a href="https://github.com/expede/witchcraft" title="Witchcraft" rel="nofollow">Witchcraft</a></li><li><a href="https://github.com/expede/quick_chat" title="QuickChat" rel="nofollow">QuickChat</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Brooklyn Zelenka from SPADE Co. about their current and past Elixir projects and how they are deployed.</p>

<p>Brooklyn Zelenka - <a href="https://spade.builders/" rel="nofollow">SPADE Co.</a></p>

<p>Find Brooklyn elsewhere online:<br>
<a href="https://twitter.com/expede" rel="nofollow">https://twitter.com/expede</a><br>
<a href="https://github.com/expede" rel="nofollow">https://github.com/expede</a></p>

<p>1:08    - Brooklyn’s Background</p>

<p>Brooklyn&#39;s background and experience with Elixir is deep. Huge open source contributor. <br>
Got started in Elixir just after Phoenix got to 1.0. </p>

<p>1:53     - Worked on several Elixir projects in production.</p>

<p>2:43     - Why she got into Elixir.</p>

<ul>
<li>Real Time</li>
<li>More performant than Rails.</li>
<li>Great documentation</li>
<li>Industrial-grade</li>
</ul>

<p>4:38     - When you wouldn&#39;t use Elixir. </p>

<p>Easy to get stakeholder buy-in. Just point to WhatsApp.</p>

<p>Elixir is made for 2019<br>
CLI tools<br>
Repl-driven development <br>
TDD tools built in by default </p>

<p>All the best practices we have today are built in.</p>

<p>7:14     - Where has Brooklyn hosted her apps?</p>

<p>Heroku for POC&#39;s. AWS for production. Dockerized because &quot;kubernetes is the new hotness&quot;</p>

<p>9:40    - Do you do any clustering?</p>

<p>Load balanced above. AWS load balancing is very standard. They&#39;re well understood and have a nice developer experience.</p>

<p>10:29   Are you able to get any zero downtime deploys?<br>
Zero downtime deploys. Awesome but impractical. Rolling deploys are easier and usually more appropriate. Some requirements make it valuable.</p>

<p>Erlang error states. Exceptional. Allows you to build for the happy path. Don&#39;t worry about error handling all the time.</p>

<p>Witchcraft and dark magic. Monads.</p>

<p>Poke around the standard library.</p>

<p>12:50    - How does Elixir compare to Rails in terms of response times, and other aspects?</p>

<p>15:32    - What libraries do you use and what have  you built?</p>

<p>22:41    - Any cool features of OTP you are using? </p>

<p>25:36   - One tip to developers new to Elixir</p>

<p>Build up a peer-to-peer cli chat from scratch in one GenServer.</p>

<p>Find her at @expede everywhere on the internet.</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Brooklyn Zelenka.</p><p>Links:</p><ul><li><a href="https://github.com/HashNuke/heroku-buildpack-elixir" title="Heroku Elixir Buildpack" rel="nofollow">Heroku Elixir Buildpack</a></li><li><a href="https://github.com/gjaldon/heroku-buildpack-phoenix-static" title="Heroku Phoenix Static Buildpack" rel="nofollow">Heroku Phoenix Static Buildpack</a></li><li><a href="https://github.com/expede/exceptional" title="Exceptional" rel="nofollow">Exceptional</a></li><li><a href="https://github.com/expede/witchcraft" title="Witchcraft" rel="nofollow">Witchcraft</a></li><li><a href="https://github.com/expede/quick_chat" title="QuickChat" rel="nofollow">QuickChat</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Todd Resudek from Weedmaps - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-weedmaps</link>
      <guid isPermaLink="false">d949b81e-39c5-4474-8605-89062b8dc543</guid>
      <pubDate>Thu, 07 Mar 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/d949b81e-39c5-4474-8605-89062b8dc543.mp3" length="25689488" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Todd Resudek from Weedmaps about their current Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>26:01</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/d/d949b81e-39c5-4474-8605-89062b8dc543/cover.jpg" />
      <description>We talk with Todd Resudek from Weedmaps about their current Elixir projects and how they are deployed.
Todd Resudek - Weedmaps (https://weedmaps.com/)
Find Todd elsewhere online:
https://twitter.com/sprsmpl
https://github.com/supersimple
00:00 - Intro
01:06 - Tom introduces himself
02:54 - What is Weedmaps?
04:33 - Overview of the Elixir projects you have in production.
06:25 - Why are you using Elixir in production?
07:21 - Advantages / disadvantages of Elixir
10:37   - What do you use to host your Elixir app?
10:50 - How do you deploy your application?
11:22 - Are you able to get zero downtime deploys? 
12:00 - Do you cluster the application? 
13:00 - How does your Elixir App perform compared to others in your environment?
14:15 - How are you solving background task processing?
16:40 - What libraries are you using?
21:09 - 3rd Party Services
23:56 - Do you have a story where Elixir saved the day in production?
24:22 - Are you using any cool OTP features?
24:39 - Tip to developers
25:12 - Where you can find him
25:32 - Outro
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Todd Resudek.
</description>
      <itunes:keywords>elixir, phoenix, weedmaps</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Todd Resudek from Weedmaps about their current Elixir projects and how they are deployed.</p>

<p>Todd Resudek - <a href="https://weedmaps.com/" rel="nofollow">Weedmaps</a></p>

<p>Find Todd elsewhere online:<br>
<a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
<a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a></p>

<p>00:00 - Intro<br>
01:06 - Tom introduces himself<br>
02:54 - What is Weedmaps?<br>
04:33 - Overview of the Elixir projects you have in production.<br>
06:25 - Why are you using Elixir in production?<br>
07:21 - Advantages / disadvantages of Elixir<br>
10:37   - What do you use to host your Elixir app?<br>
10:50 - How do you deploy your application?<br>
11:22 - Are you able to get zero downtime deploys? <br>
12:00 - Do you cluster the application? <br>
13:00 - How does your Elixir App perform compared to others in your environment?<br>
14:15 - How are you solving background task processing?<br>
16:40 - What libraries are you using?<br>
21:09 - 3rd Party Services<br>
23:56 - Do you have a story where Elixir saved the day in production?<br>
24:22 - Are you using any cool OTP features?<br>
24:39 - Tip to developers<br>
25:12 - Where you can find him<br>
25:32 - Outro</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Todd Resudek.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=cbCnTKVLuu8" title="A Deep Dive into Hex - ElixirConf talk" rel="nofollow">A Deep Dive into Hex - ElixirConf talk</a></li><li><a href="https://github.com/rrrene/credo" title="Credo" rel="nofollow">Credo</a></li><li><a href="https://github.com/jeremyjh/dialyxir" title="Dialyxir" rel="nofollow">Dialyxir</a></li><li><a href="https://github.com/swoosh/swoosh" title="Swoosh" rel="nofollow">Swoosh</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Todd Resudek from Weedmaps about their current Elixir projects and how they are deployed.</p>

<p>Todd Resudek - <a href="https://weedmaps.com/" rel="nofollow">Weedmaps</a></p>

<p>Find Todd elsewhere online:<br>
<a href="https://twitter.com/sprsmpl" rel="nofollow">https://twitter.com/sprsmpl</a><br>
<a href="https://github.com/supersimple" rel="nofollow">https://github.com/supersimple</a></p>

<p>00:00 - Intro<br>
01:06 - Tom introduces himself<br>
02:54 - What is Weedmaps?<br>
04:33 - Overview of the Elixir projects you have in production.<br>
06:25 - Why are you using Elixir in production?<br>
07:21 - Advantages / disadvantages of Elixir<br>
10:37   - What do you use to host your Elixir app?<br>
10:50 - How do you deploy your application?<br>
11:22 - Are you able to get zero downtime deploys? <br>
12:00 - Do you cluster the application? <br>
13:00 - How does your Elixir App perform compared to others in your environment?<br>
14:15 - How are you solving background task processing?<br>
16:40 - What libraries are you using?<br>
21:09 - 3rd Party Services<br>
23:56 - Do you have a story where Elixir saved the day in production?<br>
24:22 - Are you using any cool OTP features?<br>
24:39 - Tip to developers<br>
25:12 - Where you can find him<br>
25:32 - Outro</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Todd Resudek.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=cbCnTKVLuu8" title="A Deep Dive into Hex - ElixirConf talk" rel="nofollow">A Deep Dive into Hex - ElixirConf talk</a></li><li><a href="https://github.com/rrrene/credo" title="Credo" rel="nofollow">Credo</a></li><li><a href="https://github.com/jeremyjh/dialyxir" title="Dialyxir" rel="nofollow">Dialyxir</a></li><li><a href="https://github.com/swoosh/swoosh" title="Swoosh" rel="nofollow">Swoosh</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Lonestar ElixirConf 2019 Lunchisode</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/special-lonestar-elixir-2019</link>
      <guid isPermaLink="false">4646981d-f12c-479e-a5cc-7629570962ed</guid>
      <pubDate>Wed, 06 Mar 2019 03:15:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/4646981d-f12c-479e-a5cc-7629570962ed.mp3" length="47881563" type="audio/mpeg"/>
      <itunes:episodeType>bonus</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We sat down with numerous developers, including José Valim and Chris McCord, during the Saturday lunch at Lonestar ElixirConf 2019. Hear what they had to say about the state of Elixir!</itunes:subtitle>
      <itunes:duration>49:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/4/4646981d-f12c-479e-a5cc-7629570962ed/cover.jpg" />
      <description>We sat down with numerous developers, including José Valim and Chris McCord, during the Saturday lunch at Lonestar ElixirConf 2019 (https://lonestarelixir.com/2019/). Hear what they had to say about the state of Elixir!
Guests:
José Valim - Creator of Elixir (https://elixir-lang.org/)
Chris McCord - Creator of Phoenix (https://phoenixframework.org/)
Paul Schoenfelder - Creator of Distillery (https://github.com/bitwalker/distillery), Timex (https://github.com/bitwalker/timex), Libcluster (https://github.com/bitwalker/libcluster), and many others
Chris Keathley - Host of Elixir Outlaws (https://elixiroutlaws.com/), developer at Bleacher Report (https://bleacherreport.com/)
Amos King - Host of Elixir Outlaws (https://elixiroutlaws.com/)
Jim Freeze - Organizer of ElixirConf (https://elixirconf.com/), ElixirConf EU (http://www.elixirconf.eu/), and others
Susumu Yamazaki - Creator of Hastega (https://github.com/zeam-vm/hastega)
Brian Cardarella - CEO of Dockyard (https://dockyard.com/)
Osa Gaius - Engineer at Mailchimp (https://mailchimp.com/)
Spectating:
Bruce Tate and Ben Marx
00:00   - Intro
01:47   - LoneStar begins
02:03   - Panelists introduce themselves
09:15   - Where is Elixir going?
10:14   - Releases
19:04   - The issue with hype
26:30   - Osa Intro
29:00 - Define lists
40:00 - How can Elixir displace Java?
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) 
</description>
      <itunes:keywords>elixir, phoenix</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We sat down with numerous developers, including José Valim and Chris McCord, during the Saturday lunch at <a href="https://lonestarelixir.com/2019/" rel="nofollow">Lonestar ElixirConf 2019</a>. Hear what they had to say about the state of Elixir!</p>

<p>Guests:<br>
José Valim - Creator of <a href="https://elixir-lang.org/" rel="nofollow">Elixir</a><br>
Chris McCord - Creator of <a href="https://phoenixframework.org/" rel="nofollow">Phoenix</a><br>
Paul Schoenfelder - Creator of <a href="https://github.com/bitwalker/distillery" rel="nofollow">Distillery</a>, <a href="https://github.com/bitwalker/timex" rel="nofollow">Timex</a>, <a href="https://github.com/bitwalker/libcluster" rel="nofollow">Libcluster</a>, and many others<br>
Chris Keathley - Host of <a href="https://elixiroutlaws.com/" rel="nofollow">Elixir Outlaws</a>, developer at <a href="https://bleacherreport.com/" rel="nofollow">Bleacher Report</a><br>
Amos King - Host of <a href="https://elixiroutlaws.com/" rel="nofollow">Elixir Outlaws</a><br>
Jim Freeze - Organizer of <a href="https://elixirconf.com/" rel="nofollow">ElixirConf</a>, <a href="http://www.elixirconf.eu/" rel="nofollow">ElixirConf EU</a>, and others<br>
Susumu Yamazaki - Creator of <a href="https://github.com/zeam-vm/hastega" rel="nofollow">Hastega</a><br>
Brian Cardarella - CEO of <a href="https://dockyard.com/" rel="nofollow">Dockyard</a><br>
Osa Gaius - Engineer at <a href="https://mailchimp.com/" rel="nofollow">Mailchimp</a></p>

<p>Spectating:<br>
Bruce Tate and Ben Marx</p>

<p>00:00   - Intro<br>
01:47   - LoneStar begins<br>
02:03   - Panelists introduce themselves<br>
09:15   - Where is Elixir going?<br>
10:14   - Releases<br>
19:04   - The issue with hype<br>
26:30   - Osa Intro<br>
29:00 - Define lists<br>
40:00 - How can Elixir displace Java?</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We sat down with numerous developers, including José Valim and Chris McCord, during the Saturday lunch at <a href="https://lonestarelixir.com/2019/" rel="nofollow">Lonestar ElixirConf 2019</a>. Hear what they had to say about the state of Elixir!</p>

<p>Guests:<br>
José Valim - Creator of <a href="https://elixir-lang.org/" rel="nofollow">Elixir</a><br>
Chris McCord - Creator of <a href="https://phoenixframework.org/" rel="nofollow">Phoenix</a><br>
Paul Schoenfelder - Creator of <a href="https://github.com/bitwalker/distillery" rel="nofollow">Distillery</a>, <a href="https://github.com/bitwalker/timex" rel="nofollow">Timex</a>, <a href="https://github.com/bitwalker/libcluster" rel="nofollow">Libcluster</a>, and many others<br>
Chris Keathley - Host of <a href="https://elixiroutlaws.com/" rel="nofollow">Elixir Outlaws</a>, developer at <a href="https://bleacherreport.com/" rel="nofollow">Bleacher Report</a><br>
Amos King - Host of <a href="https://elixiroutlaws.com/" rel="nofollow">Elixir Outlaws</a><br>
Jim Freeze - Organizer of <a href="https://elixirconf.com/" rel="nofollow">ElixirConf</a>, <a href="http://www.elixirconf.eu/" rel="nofollow">ElixirConf EU</a>, and others<br>
Susumu Yamazaki - Creator of <a href="https://github.com/zeam-vm/hastega" rel="nofollow">Hastega</a><br>
Brian Cardarella - CEO of <a href="https://dockyard.com/" rel="nofollow">Dockyard</a><br>
Osa Gaius - Engineer at <a href="https://mailchimp.com/" rel="nofollow">Mailchimp</a></p>

<p>Spectating:<br>
Bruce Tate and Ben Marx</p>

<p>00:00   - Intro<br>
01:47   - LoneStar begins<br>
02:03   - Panelists introduce themselves<br>
09:15   - Where is Elixir going?<br>
10:14   - Releases<br>
19:04   - The issue with hype<br>
26:30   - Osa Intro<br>
29:00 - Define lists<br>
40:00 - How can Elixir displace Java?</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Ryan Billingsley from ClusterTruck - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-clustertruck</link>
      <guid isPermaLink="false">9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b</guid>
      <pubDate>Thu, 28 Feb 2019 06:15:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b.mp3" length="32066995" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.</itunes:subtitle>
      <itunes:duration>32:34</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/9/9b17b0c6-6e66-4e77-ae1f-9b3e2db6a35b/cover.jpg" />
      <description>We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.
Ryan Billingsley - ClusterTruck (https://www.clustertruck.com/)
Find Ryan elsewhere online:
https://twitter.com/ryanbillingsley
https://horriblenight.com/
00:00 - Fade In
00:50 - Ryan introduces us to ClusterTruck.
02:00 - How did Ryan get into Elixir?
03:12 - Where does the name ClusterTruck come from?
04:17 - Tell us about the projects you have in production.
05:50 - Why are you using Elixir in these projects.
08:11 - Disadvantages of using Elixir
09:22 - Comparing Elixir with Ruby, Node, Go.
11:38 - Where is ClusterTruck hosting their applications?
15:03 - Kubernetes?
16:03 - Zero Downtime Deployments?
16:42 - Do you do any clustering?
18:06 - How does Elixir perform compared to other project environments you’ve worked in?
19:52 - How are you solving background task processing?
21:09 - Other libraries?
23:34 - Other third party integrations?
25:46 - Is there a time Elixir has saved the day in Production?
27:47 - Cool OTP Features!
29:45 - Tips to devs thinking about running Elixir in Production.
31:17 - Outro
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Ryan Billingsley.
</description>
      <itunes:keywords>elixir, phoenix, clustertruck</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.</p>

<p>Ryan Billingsley - <a href="https://www.clustertruck.com/" rel="nofollow">ClusterTruck</a></p>

<p>Find Ryan elsewhere online:<br>
<a href="https://twitter.com/ryanbillingsley" rel="nofollow">https://twitter.com/ryanbillingsley</a><br>
<a href="https://horriblenight.com/" rel="nofollow">https://horriblenight.com/</a></p>

<p>00:00 - Fade In<br>
00:50 - Ryan introduces us to ClusterTruck.<br>
02:00 - How did Ryan get into Elixir?<br>
03:12 - Where does the name ClusterTruck come from?<br>
04:17 - Tell us about the projects you have in production.<br>
05:50 - Why are you using Elixir in these projects.<br>
08:11 - Disadvantages of using Elixir<br>
09:22 - Comparing Elixir with Ruby, Node, Go.<br>
11:38 - Where is ClusterTruck hosting their applications?<br>
15:03 - Kubernetes?<br>
16:03 - Zero Downtime Deployments?<br>
16:42 - Do you do any clustering?<br>
18:06 - How does Elixir perform compared to other project environments you’ve worked in?<br>
19:52 - How are you solving background task processing?<br>
21:09 - Other libraries?<br>
23:34 - Other third party integrations?<br>
25:46 - Is there a time Elixir has saved the day in Production?<br>
27:47 - Cool OTP Features!<br>
29:45 - Tips to devs thinking about running Elixir in Production.<br>
31:17 - Outro</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a href="https://pragprog.com/book/elixir16/programming-elixir-1-6" title="Programming Elixir" rel="nofollow">Programming Elixir</a></li><li><a href="https://docs.saltstack.com/en/latest/" title="Salt Stack" rel="nofollow">Salt Stack</a></li><li><a href="https://github.com/bitwalker/swarm" title="Swarm" rel="nofollow">Swarm</a></li><li><a href="https://github.com/zorbash/opus" title="Opus" rel="nofollow">Opus</a></li><li><a href="https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2" title="handle_continue" rel="nofollow">handle_continue</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with Ryan Billingsley from ClusterTruck about their current Elixir projects and how they are deployed.</p>

<p>Ryan Billingsley - <a href="https://www.clustertruck.com/" rel="nofollow">ClusterTruck</a></p>

<p>Find Ryan elsewhere online:<br>
<a href="https://twitter.com/ryanbillingsley" rel="nofollow">https://twitter.com/ryanbillingsley</a><br>
<a href="https://horriblenight.com/" rel="nofollow">https://horriblenight.com/</a></p>

<p>00:00 - Fade In<br>
00:50 - Ryan introduces us to ClusterTruck.<br>
02:00 - How did Ryan get into Elixir?<br>
03:12 - Where does the name ClusterTruck come from?<br>
04:17 - Tell us about the projects you have in production.<br>
05:50 - Why are you using Elixir in these projects.<br>
08:11 - Disadvantages of using Elixir<br>
09:22 - Comparing Elixir with Ruby, Node, Go.<br>
11:38 - Where is ClusterTruck hosting their applications?<br>
15:03 - Kubernetes?<br>
16:03 - Zero Downtime Deployments?<br>
16:42 - Do you do any clustering?<br>
18:06 - How does Elixir perform compared to other project environments you’ve worked in?<br>
19:52 - How are you solving background task processing?<br>
21:09 - Other libraries?<br>
23:34 - Other third party integrations?<br>
25:46 - Is there a time Elixir has saved the day in Production?<br>
27:47 - Cool OTP Features!<br>
29:45 - Tips to devs thinking about running Elixir in Production.<br>
31:17 - Outro</p>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Ryan Billingsley.</p><p>Links:</p><ul><li><a href="https://pragprog.com/book/elixir16/programming-elixir-1-6" title="Programming Elixir" rel="nofollow">Programming Elixir</a></li><li><a href="https://docs.saltstack.com/en/latest/" title="Salt Stack" rel="nofollow">Salt Stack</a></li><li><a href="https://github.com/bitwalker/swarm" title="Swarm" rel="nofollow">Swarm</a></li><li><a href="https://github.com/zorbash/opus" title="Opus" rel="nofollow">Opus</a></li><li><a href="https://hexdocs.pm/elixir/master/GenServer.html#c:handle_continue/2" title="handle_continue" rel="nofollow">handle_continue</a></li></ul>
      ]]></itunes:summary>
    </item>
    
    <item>
      <title>Dan Ivovich from SmartLogic - Elixir in Production</title>
      <link>https://smartlogic.io/podcast/elixir-wizards/season-1-smartlogic</link>
      <guid isPermaLink="false">f71af757-ce4c-44a0-8e78-5766711fd7d4</guid>
      <pubDate>Thu, 28 Feb 2019 06:00:00 -0500</pubDate>
      <author>SmartLogic LLC</author>
      <enclosure url="https://aphid.fireside.fm/d/1437767933/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/f71af757-ce4c-44a0-8e78-5766711fd7d4.mp3" length="28610193" type="audio/mpeg"/>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:season>1</itunes:season>
      <itunes:author>SmartLogic LLC</itunes:author>
      <itunes:subtitle>We talk with developers from here at SmartLogic about our current practices on deploying Elixir and Phoenix in production.</itunes:subtitle>
      <itunes:duration>28:28</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:image href="https://assets.fireside.fm/file/fireside-images/podcasts/images/0/03a50f66-dc5e-4da4-ab6e-31895b6d4c9e/episodes/f/f71af757-ce4c-44a0-8e78-5766711fd7d4/cover.jpg" />
      <description>We talk with developers from the team here at SmartLogic about our current practices on deploying Elixir and Phoenix in production.
Dan Ivovich - Director of Development Operations @ SmartLogic
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smartlogic.io/phoenix-and-elixir)
00:00 - Fade In
00:30 - Introductions to Eric, Dan and SmartLogic
Dan Ivovich - Director of Development Operations @ SmartLogic
Eric Oestrich - Developer, Elixir Lead @ SmartLogic
Justus Eapen - Full stack developer @ SmartLogic
Introduced to Elixir by an old colleague. 
1:20 - What Elixir projects do you have in production? 
Several client projects in production. Several Mobile Apps with APIs powered by Phoenix and Elixir. 
Baltimore Water Taxi. 
A digital marketplace.
And more!
1:57 - Advantages and disadvantages to using Elixir.
We made the switch when a colleague was stoked about Functional Programming and introduced us to Elixir. We were won over by the performance and rich feature sets, OTP, etc.
2:43 - Where are we hosting our Elixir Apps?
Heroku 
AWS 
Linode 
Digital Ocean 
6:20Deployment process, tools, scripting
Ansible - for underlying VPS’s, servers, and more recently deployment itself. (Similar to Capistrano).  
Distillery  
Mix.release 
7:18 - Zero Downtime Deployments
Old school load balancers and rolling restarts 
7:46 - What are the performance metrics like? Comparatively.
Ruby ends up with memory leaks. That doesn’t happen with Elixir. 
Memory utilization is flat and low no matter what. 
“Phenomenal response times” 
8:54 - How does Eric think about clustered applications in Elixir?
Going Multi Node (https://www.youtube.com/watch?v=lCUKQnkjajo (https://www.youtube.com/watch?v=lCUKQnkjajo)) 
Pg2 (http://erlang.org/doc/man/pg2.html) - process groups 
Mnesia (http://erlang.org/doc/man/mnesia.html) distributed database (beware!) 
“Just sending messages to pids because Erlang is great” 
Swarm (https://github.com/bitwalker/swarm) / Horde (https://github.com/derekkraan/horde) 
12:40 - How do we handle background tasks?
Started with verk (https://github.com/edgurgel/verk) 
Recently becoming more comfortable with spinning up GenServers (https://hexdocs.pm/elixir/GenServer.html) 
“The language itself is built to be concurrent.” 
15:06 What libraries are we using in prod?
First thing: You don’t need a whole lot because the language is so well designed. 
Phoenix (https://phoenixframework.org/) - web framework 
Ecto (https://hexdocs.pm/ecto/Ecto.html) - sort of an ORM 
Distillery (https://github.com/bitwalker/distillery) - for releases 
Bamboo (https://github.com/thoughtbot/bamboo) - for sending emails 
Quantum (https://github.com/c-rack/quantum-elixir) - for task scheduling 
Timex (https://github.com/bitwalker/timex) - for dates and times, and timezones 
Cachex (https://github.com/whitfin/cachex) - for caching 
18:20- What third party integrations have we attempted
Stripe 
Square 
Twilio 
Mindbody 
Always building our own clients.  Using HTTPoison (https://github.com/edgurgel/httpoison)
19:58Has Elixir ever saved the day in production?
It’s saved many days by PREVENTING ISSUES. Systems are architected for reliability and fault-tolerance.
21:48 - Where do supervision trees come from? What is OTP?
OTP is an Erlang standard lib 
Includes supervision trees, genservers, ETS, and a lot of stuff we don’t even know about! 
gen_tcp (http://erlang.org/doc/man/gen_tcp.html) 
Mnesia 
dets (http://erlang.org/doc/man/dets.html) 
23:43- Tips for devs considering running elixir in production.
Jump in and read the docs 
Understand how systems boot, distillery releases, config providers, etc. 
“Good server monitoring hygiene” 
“DIVE IN!” 
19:54 Outro
Learn more about how SmartLogic uses Phoenix and Elixir. (https://smr.tl/2Hyslu8) Special Guest: Dan Ivovich.
</description>
      <itunes:keywords>elixir, phoenix, smartlogic</itunes:keywords>
      <content:encoded><![CDATA[
        <p>We talk with developers from the team here at SmartLogic about our current practices on deploying Elixir and Phoenix in production.</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>Learn more about how SmartLogic uses <a href="https://smartlogic.io/phoenix-and-elixir" rel="nofollow">Phoenix and Elixir.</a></p>

<p>00:00 - Fade In</p>

<p>00:30 - Introductions to Eric, Dan and SmartLogic</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>Eric Oestrich - Developer, Elixir Lead @ SmartLogic</p>

<p>Justus Eapen - Full stack developer @ SmartLogic</p>

<p>Introduced to Elixir by an old colleague. </p>

<p>1:20 - What Elixir projects do you have in production? </p>

<p>Several client projects in production. Several Mobile Apps with APIs powered by Phoenix and Elixir. </p>

<p>Baltimore Water Taxi. </p>

<p>A digital marketplace.</p>

<p>And more!</p>

<p>1:57 - Advantages and disadvantages to using Elixir.</p>

<p>We made the switch when a colleague was stoked about Functional Programming and introduced us to Elixir. We were won over by the performance and rich feature sets, OTP, etc.</p>

<p>2:43 - Where are we hosting our Elixir Apps?</p>

<ul>
<li>Heroku </li>
<li>AWS </li>
<li>Linode </li>
<li>Digital Ocean </li>
</ul>

<p>6:20Deployment process, tools, scripting</p>

<ul>
<li>Ansible - for underlying VPS’s, servers, and more recently deployment itself. (Similar to Capistrano).<br></li>
<li>Distillery<br></li>
<li>Mix.release </li>
</ul>

<p>7:18 - Zero Downtime Deployments</p>

<ul>
<li>Old school load balancers and rolling restarts </li>
</ul>

<p>7:46 - What are the performance metrics like? Comparatively.</p>

<ul>
<li>Ruby ends up with memory leaks. That doesn’t happen with Elixir. </li>
<li>Memory utilization is flat and low no matter what. </li>
<li>“Phenomenal response times” </li>
</ul>

<p>8:54 - How does Eric think about clustered applications in Elixir?</p>

<ul>
<li>Going Multi Node (<a href="https://www.youtube.com/watch?v=lCUKQnkjajo" rel="nofollow">https://www.youtube.com/watch?v=lCUKQnkjajo</a>) </li>
<li><a href="http://erlang.org/doc/man/pg2.html" rel="nofollow">Pg2</a> - process groups </li>
<li><a href="http://erlang.org/doc/man/mnesia.html" rel="nofollow">Mnesia</a> distributed database (beware!) </li>
<li>“Just sending messages to pids because Erlang is great” </li>
<li><a href="https://github.com/bitwalker/swarm" rel="nofollow">Swarm</a> / <a href="https://github.com/derekkraan/horde" rel="nofollow">Horde</a> </li>
</ul>

<p>12:40 - How do we handle background tasks?</p>

<ul>
<li>Started with <a href="https://github.com/edgurgel/verk" rel="nofollow">verk</a> </li>
<li>Recently becoming more comfortable with spinning up <a href="https://hexdocs.pm/elixir/GenServer.html" rel="nofollow">GenServers</a> </li>
<li>“The language itself is built to be concurrent.” </li>
</ul>

<p>15:06 What libraries are we using in prod?</p>

<ul>
<li>First thing: You don’t need a whole lot because the language is so well designed. </li>
<li><a href="https://phoenixframework.org/" rel="nofollow">Phoenix</a> - web framework </li>
<li><a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">Ecto</a> - sort of an ORM </li>
<li><a href="https://github.com/bitwalker/distillery" rel="nofollow">Distillery</a> - for releases </li>
<li><a href="https://github.com/thoughtbot/bamboo" rel="nofollow">Bamboo</a> - for sending emails </li>
<li><a href="https://github.com/c-rack/quantum-elixir" rel="nofollow">Quantum</a> - for task scheduling </li>
<li><a href="https://github.com/bitwalker/timex" rel="nofollow">Timex</a> - for dates and times, and timezones </li>
<li><a href="https://github.com/whitfin/cachex" rel="nofollow">Cachex</a> - for caching </li>
</ul>

<p>18:20- What third party integrations have we attempted</p>

<ul>
<li>Stripe </li>
<li>Square </li>
<li>Twilio </li>
<li>Mindbody </li>
</ul>

<p>Always building our own clients.  Using <a href="https://github.com/edgurgel/httpoison" rel="nofollow">HTTPoison</a></p>

<p>19:58Has Elixir ever saved the day in production?</p>

<p>It’s saved many days by PREVENTING ISSUES. Systems are architected for reliability and fault-tolerance.</p>

<p>21:48 - Where do supervision trees come from? What is OTP?</p>

<ul>
<li>OTP is an Erlang standard lib </li>
<li>Includes supervision trees, genservers, ETS, and a lot of stuff we don’t even know about! </li>
<li><a href="http://erlang.org/doc/man/gen_tcp.html" rel="nofollow">gen_tcp</a> </li>
<li>Mnesia </li>
<li><a href="http://erlang.org/doc/man/dets.html" rel="nofollow">dets</a> </li>
</ul>

<p>23:43- Tips for devs considering running elixir in production.</p>

<ul>
<li>Jump in and read the docs </li>
<li>Understand how systems boot, distillery releases, config providers, etc. </li>
<li>“Good server monitoring hygiene” </li>
<li>“DIVE IN!” 
19:54 Outro</li>
</ul>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=lCUKQnkjajo" title="Going Multi-Node" rel="nofollow">Going Multi-Node</a></li><li><a href="http://erlang.org/doc/man/pg2.html" title="PG2" rel="nofollow">PG2</a></li><li><a href="http://erlang.org/doc/man/mnesia.html" title="mnesia" rel="nofollow">mnesia</a></li><li><a href="https://github.com/bitwalker/swarm" title="Swarm" rel="nofollow">Swarm</a></li><li><a href="https://github.com/derekkraan/horde" title="Horde" rel="nofollow">Horde</a></li><li><a href="https://github.com/edgurgel/verk" title="Verk" rel="nofollow">Verk</a></li><li><a href="https://github.com/thoughtbot/bamboo" title="Bamboo" rel="nofollow">Bamboo</a></li><li><a href="https://github.com/quantum-elixir/quantum-core" title="Quantum" rel="nofollow">Quantum</a></li><li><a href="https://github.com/whitfin/cachex" title="Cachex" rel="nofollow">Cachex</a></li></ul>
      ]]></content:encoded>
      <itunes:summary><![CDATA[
        <p>We talk with developers from the team here at SmartLogic about our current practices on deploying Elixir and Phoenix in production.</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>Learn more about how SmartLogic uses <a href="https://smartlogic.io/phoenix-and-elixir" rel="nofollow">Phoenix and Elixir.</a></p>

<p>00:00 - Fade In</p>

<p>00:30 - Introductions to Eric, Dan and SmartLogic</p>

<p>Dan Ivovich - Director of Development Operations @ SmartLogic</p>

<p>Eric Oestrich - Developer, Elixir Lead @ SmartLogic</p>

<p>Justus Eapen - Full stack developer @ SmartLogic</p>

<p>Introduced to Elixir by an old colleague. </p>

<p>1:20 - What Elixir projects do you have in production? </p>

<p>Several client projects in production. Several Mobile Apps with APIs powered by Phoenix and Elixir. </p>

<p>Baltimore Water Taxi. </p>

<p>A digital marketplace.</p>

<p>And more!</p>

<p>1:57 - Advantages and disadvantages to using Elixir.</p>

<p>We made the switch when a colleague was stoked about Functional Programming and introduced us to Elixir. We were won over by the performance and rich feature sets, OTP, etc.</p>

<p>2:43 - Where are we hosting our Elixir Apps?</p>

<ul>
<li>Heroku </li>
<li>AWS </li>
<li>Linode </li>
<li>Digital Ocean </li>
</ul>

<p>6:20Deployment process, tools, scripting</p>

<ul>
<li>Ansible - for underlying VPS’s, servers, and more recently deployment itself. (Similar to Capistrano).<br></li>
<li>Distillery<br></li>
<li>Mix.release </li>
</ul>

<p>7:18 - Zero Downtime Deployments</p>

<ul>
<li>Old school load balancers and rolling restarts </li>
</ul>

<p>7:46 - What are the performance metrics like? Comparatively.</p>

<ul>
<li>Ruby ends up with memory leaks. That doesn’t happen with Elixir. </li>
<li>Memory utilization is flat and low no matter what. </li>
<li>“Phenomenal response times” </li>
</ul>

<p>8:54 - How does Eric think about clustered applications in Elixir?</p>

<ul>
<li>Going Multi Node (<a href="https://www.youtube.com/watch?v=lCUKQnkjajo" rel="nofollow">https://www.youtube.com/watch?v=lCUKQnkjajo</a>) </li>
<li><a href="http://erlang.org/doc/man/pg2.html" rel="nofollow">Pg2</a> - process groups </li>
<li><a href="http://erlang.org/doc/man/mnesia.html" rel="nofollow">Mnesia</a> distributed database (beware!) </li>
<li>“Just sending messages to pids because Erlang is great” </li>
<li><a href="https://github.com/bitwalker/swarm" rel="nofollow">Swarm</a> / <a href="https://github.com/derekkraan/horde" rel="nofollow">Horde</a> </li>
</ul>

<p>12:40 - How do we handle background tasks?</p>

<ul>
<li>Started with <a href="https://github.com/edgurgel/verk" rel="nofollow">verk</a> </li>
<li>Recently becoming more comfortable with spinning up <a href="https://hexdocs.pm/elixir/GenServer.html" rel="nofollow">GenServers</a> </li>
<li>“The language itself is built to be concurrent.” </li>
</ul>

<p>15:06 What libraries are we using in prod?</p>

<ul>
<li>First thing: You don’t need a whole lot because the language is so well designed. </li>
<li><a href="https://phoenixframework.org/" rel="nofollow">Phoenix</a> - web framework </li>
<li><a href="https://hexdocs.pm/ecto/Ecto.html" rel="nofollow">Ecto</a> - sort of an ORM </li>
<li><a href="https://github.com/bitwalker/distillery" rel="nofollow">Distillery</a> - for releases </li>
<li><a href="https://github.com/thoughtbot/bamboo" rel="nofollow">Bamboo</a> - for sending emails </li>
<li><a href="https://github.com/c-rack/quantum-elixir" rel="nofollow">Quantum</a> - for task scheduling </li>
<li><a href="https://github.com/bitwalker/timex" rel="nofollow">Timex</a> - for dates and times, and timezones </li>
<li><a href="https://github.com/whitfin/cachex" rel="nofollow">Cachex</a> - for caching </li>
</ul>

<p>18:20- What third party integrations have we attempted</p>

<ul>
<li>Stripe </li>
<li>Square </li>
<li>Twilio </li>
<li>Mindbody </li>
</ul>

<p>Always building our own clients.  Using <a href="https://github.com/edgurgel/httpoison" rel="nofollow">HTTPoison</a></p>

<p>19:58Has Elixir ever saved the day in production?</p>

<p>It’s saved many days by PREVENTING ISSUES. Systems are architected for reliability and fault-tolerance.</p>

<p>21:48 - Where do supervision trees come from? What is OTP?</p>

<ul>
<li>OTP is an Erlang standard lib </li>
<li>Includes supervision trees, genservers, ETS, and a lot of stuff we don’t even know about! </li>
<li><a href="http://erlang.org/doc/man/gen_tcp.html" rel="nofollow">gen_tcp</a> </li>
<li>Mnesia </li>
<li><a href="http://erlang.org/doc/man/dets.html" rel="nofollow">dets</a> </li>
</ul>

<p>23:43- Tips for devs considering running elixir in production.</p>

<ul>
<li>Jump in and read the docs </li>
<li>Understand how systems boot, distillery releases, config providers, etc. </li>
<li>“Good server monitoring hygiene” </li>
<li>“DIVE IN!” 
19:54 Outro</li>
</ul>

<p>Learn more about how SmartLogic uses <a href="https://smr.tl/2Hyslu8" rel="nofollow">Phoenix and Elixir.</a></p><p>Special Guest: Dan Ivovich.</p><p>Links:</p><ul><li><a href="https://www.youtube.com/watch?v=lCUKQnkjajo" title="Going Multi-Node" rel="nofollow">Going Multi-Node</a></li><li><a href="http://erlang.org/doc/man/pg2.html" title="PG2" rel="nofollow">PG2</a></li><li><a href="http://erlang.org/doc/man/mnesia.html" title="mnesia" rel="nofollow">mnesia</a></li><li><a href="https://github.com/bitwalker/swarm" title="Swarm" rel="nofollow">Swarm</a></li><li><a href="https://github.com/derekkraan/horde" title="Horde" rel="nofollow">Horde</a></li><li><a href="https://github.com/edgurgel/verk" title="Verk" rel="nofollow">Verk</a></li><li><a href="https://github.com/thoughtbot/bamboo" title="Bamboo" rel="nofollow">Bamboo</a></li><li><a href="https://github.com/quantum-elixir/quantum-core" title="Quantum" rel="nofollow">Quantum</a></li><li><a href="https://github.com/whitfin/cachex" title="Cachex" rel="nofollow">Cachex</a></li></ul>
      ]]></itunes:summary>
    </item>
    
  </channel>
</rss>
